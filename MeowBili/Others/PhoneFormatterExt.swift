//
//
//  PhoneFormatterExt.swift
//  MeowBili
//
//  Created by linecom on 2024/7/16.
//
//===----------------------------------------------------------------------===//
//
// This source file is part of the MeowBili open source project
//
// Copyright (c) 2024 Darock Studio and the MeowBili project authors
// Licensed under GNU General Public License v3
//
// See https://darock.top/LICENSE.txt for license information
//
//===----------------------------------------------------------------------===//

import Foundation

func phoneFormatter(region: String) -> String {
    switch region {
    case "" :
        return "手机号码"
    case "86" :
        return "000 0000 0000"
    case "us","ca" :
        return "000 000 0000"
    case "886" :
        return "000 000 000"
    case "852","853" :
        return "0000 0000"
    case "44" :
        return "0000 000000"
    default:
        return "手机号码"
    }
}

func validatePhoneNumber(num: String, cc: String) -> Bool {
    switch cc {
    case "86":
        if num.count == 11 {
            return true
        } else {
            return false
        }
    case "852","853" :
        if num.count == 8 {
            return true
        } else {
            return false
        }
    case "886" :
        if num.count == 9 {
            return true
        } else {
            return false
        }
    case "1","44" :
        if num.count == 10 {
            return true
        } else {
            return false
        }
    default:
        //一些地区手机号无固定格式
        return true
    }
}

let phoneIdList = [
    //数据来自哔哩哔哩官方接口
    "86":"1",
    "852":"5",
    "853":"2",
    "886":"3",
    "us":"4",
    "32":"6",
    "61":"7",
    "33":"8",
    "ca":"9",
    "81":"10",
    "65":"11",
    "82":"12",
    "60":"13",
    "44":"14",
    "39":"15",
    "49":"16",
    "7":"18",
    "64":"19",
    "1681":"153",
    "351":"152",
    "680":"151",
    "672":"150",
    "47":"149",
    "683":"148",
    "234":"147",
    "227":"146",
    "505":"145",
    "977":"144",
    "674":"143",
    "995":"154",
    "46":"155",
    "966":"165",
    "259":"164",
    "248":"163",
    "357":"162",
    "221":"161",
    "232":"160",
    "684":"159",
    "685":"158",
    "503":"157",
    "41":"156",
    "239":"166",
    "381":"142",
    "27":"141",
    "222":"128",
    "230":"127",
    "692":"126",
    "596":"125",
    "389":"124",
    "1670":"123",
    "223":"122",
    "265":"121",
    "356":"120",
    "960":"119",
    "976":"129",
    "1664":"130",
    "264":"140",
    "52":"139",
    "258":"138",
    "377":"137",
    "212":"136",
    "373":"135",
    "95":"134",
    "691":"133",
    "51":"132",
    "880":"131",
    "261":"118",
    "1784":"167",
    "56":"216",
    "1876":"203",
    "963":"202",
    "36":"201",
    "225":"200",
    "30":"199",
    "34":"198",
    "998":"197",
    "598":"196",
    "380":"195",
    "256":"194",
    "374":"204",
    "967":"205",
    "350":"215",
    "235":"214",
    "260":"213",
    "84":"212",
    "962":"211",
    "62":"210",
    "91":"209",
    "972":"208",
    "98":"207",
    "964":"206",
    "673":"193",
    "58":"192",
    "1284":"191",
    "66":"178",
    "252":"177",
    "677":"176",
    "597":"175",
    "249":"174",
    "268":"173",
    "386":"172",
    "421":"171",
    "94":"170",
    "508":"169",
    "255":"179",
    "676":"180",
    "1340":"190",
    "678":"189",
    "690":"188",
    "993":"187",
    "90":"186",
    "688":"185",
    "216":"184",
    "247":"183",
    "1868":"182",
    "1649":"181",
    "378":"168",
    "594":"67",
    "975":"54",
    "267":"53",
    "501":"52",
    "591":"51",
    "48":"50",
    "387":"49",
    "1787":"48",
    "354":"47",
    "229":"46",
    "359":"45",
    "226":"55",
    "257":"56",
    "689":"66",
    "298":"65",
    "291":"64",
    "593":"63",
    "1809":"62",
    "1767":"61",
    "228":"60",
    "246":"59",
    "45":"58",
    "240":"57",
]
