//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 597.5.2.1.0
//
#ifndef IFGraphicsContext_h
#define IFGraphicsContext_h
@import Foundation;

#include "IFColor.h"
#include "IFImage.h"

@class NSData;

@interface IFGraphicsContext : NSObject

@property (readonly, nonatomic) unsigned long long preset;
@property (readonly, nonatomic) struct CGContext * cgContext;
@property (readonly, nonatomic) double scale;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (readonly, nonatomic) IFImage *image;
@property (readonly, nonatomic) NSData *data;
@property (retain, nonatomic) IFColor *fillColor;
@property (retain, nonatomic) IFColor *strokeColor;
@property (nonatomic) double lineWidth;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } transform;
@property (nonatomic) int blendMode;

/* class methods */
+ (id)bitmapContextWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale preset:(unsigned long long)preset;

/* instance methods */
- (id)initWithCGContext:(struct CGContext *)cgcontext preset:(unsigned long long)preset;
- (void)dealloc;
- (struct CGSize { double x0; double x1; })size;
- (id)imageFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)drawCGImage:(struct CGImage *)cgimage inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)drawCGImage:(struct CGImage *)cgimage centeredInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)drawSymbolImage:(id)image centeredInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)drawText:(id)text fontName:(id)name fontSize:(double)size inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)strokeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)fillRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)strokePath:(struct CGPath *)path;
- (void)fillPath:(struct CGPath *)path;
- (void)clear;
- (void)clipToMaskCGImage:(struct CGImage *)cgimage inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)pushState;
- (void)popState;
@end

#endif /* IFGraphicsContext_h */
