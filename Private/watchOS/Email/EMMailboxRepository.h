//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EMMailboxRepository_h
#define EMMailboxRepository_h
@import Foundation;

#include "EMRepository.h"
#include "EFCancelable-Protocol.h"
#include "EFLoggable-Protocol.h"
#include "EMAccountRepository.h"
#include "EMMailboxChangeObserver-Protocol.h"
#include "EMMailboxTypeResolver-Protocol.h"

@class EFPromise, NSMapTable, NSMutableDictionary, NSOrderedSet, NSSet, NSString;

@interface EMMailboxRepository : EMRepository<EFLoggable, EMMailboxChangeObserver, EMMailboxTypeResolver> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _mailboxesPromiseLock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableDictionary *_mailboxesByObjectID;
}

@property (retain) NSObject<EFCancelable> *registrationCancelable;
@property (readonly) NSOrderedSet *mailboxesIfAvailable;
@property (retain, nonatomic) EFPromise *mailboxesPromise;
@property (retain, nonatomic) NSMapTable *observerMap;
@property (readonly, nonatomic) EMAccountRepository *accountRepository;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSSet *allMailboxObjectIDs;

/* class methods */
+ (id)log;
+ (id)remoteInterface;

/* instance methods */
- (id)initInternal;
- (id)initWithRemoteConnection:(id)connection accountRepository:(id)repository;
- (void)dealloc;
- (void)_startObservingMailboxChangesIfNecessary;
- (void)_restartObservingMailboxChangesIfNecessary;
- (void)performQuery:(id)query completionHandler:(id /* block */)handler;
- (id)performQuery:(id)query withObserver:(id)observer;
- (void)refreshQueryWithObserver:(id)observer;
- (void)_prepareMailboxes:(id)mailboxes;
- (id)mailboxForObjectID:(id)id;
- (id)mailboxesForObjectIDs:(id)ids;
- (id)mailboxIfAvailableForObjectID:(id)id;
- (id)mailboxesIfAvailableForObjectIDs:(id)ids;
- (void)refreshMailboxList;
- (id)performMailboxChangeAction:(id)action;
- (id)remoteAllMailboxObjectIDs;
- (id)mailboxObjectIDsForMailboxType:(long long)type;
- (id)remoteMailboxObjectIDsForMailboxType:(long long)type;
- (long long)mailboxTypeForMailboxObjectID:(id)id;
- (long long)remoteMailboxTypeForMailboxObjectID:(id)id;
- (id)_filterIDsFromMailbox:(id)mailbox withQuery:(id)query;
- (void)mailboxListChanged:(id)changed;
- (id)_mailboxesFuture;
@end

#endif /* EMMailboxRepository_h */
