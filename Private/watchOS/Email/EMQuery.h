//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EMQuery_h
#define EMQuery_h
@import Foundation;

#include "EFLoggable-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class CSSuggestion, NSArray, NSDictionary, NSPredicate, NSString;

@interface EMQuery : NSObject<EFLoggable, NSSecureCoding, NSCopying>

@property (readonly, nonatomic) Class targetClass;
@property (readonly, copy, nonatomic) NSPredicate *predicate;
@property (readonly, copy, nonatomic) NSArray *sortDescriptors;
@property (readonly, nonatomic) long long limit;
@property (readonly, nonatomic) unsigned long long queryOptions;
@property (readonly, copy, nonatomic) NSDictionary *targetClassOptions;
@property (readonly, copy, nonatomic) NSString *label;
@property (copy, nonatomic) CSSuggestion *suggestion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)log;
+ (void)addValidSortDescriptorKeyPaths:(id)paths forTargetClass:(Class)class;
+ (BOOL)_isValidSortDescriptor:(id)descriptor forTargetClass:(Class)class;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithTargetClass:(Class)class predicate:(id)predicate sortDescriptors:(id)descriptors;
- (id)initWithTargetClass:(Class)class predicate:(id)predicate sortDescriptors:(id)descriptors queryOptions:(unsigned long long)options label:(id)label;
- (id)initWithTargetClass:(Class)class predicate:(id)predicate sortDescriptors:(id)descriptors queryOptions:(unsigned long long)options targetClassOptions:(id)options label:(id)label;
- (id)initWithTargetClass:(Class)class predicate:(id)predicate sortDescriptors:(id)descriptors limit:(long long)limit queryOptions:(unsigned long long)options targetClassOptions:(id)options label:(id)label;
- (id)initWithTargetClass:(Class)class predicate:(id)predicate sortDescriptors:(id)descriptors suggestion:(id)suggestion limit:(long long)limit queryOptions:(unsigned long long)options targetClassOptions:(id)options label:(id)label;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)queryWithPredicate:(id)predicate;
- (id)queryWithTargetClass:(Class)class predicate:(id)predicate;
- (BOOL)isValid;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)_isEqualToQuery:(id)query;
- (BOOL)isEqual:(id)equal;
@end

#endif /* EMQuery_h */
