//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 841.3.9.0.0
//
#ifndef HFCameraPosterFrameProvider_h
#define HFCameraPosterFrameProvider_h
@import Foundation;

#include "HFCameraImageCache.h"
#include "HFCameraPosterFrameRequests.h"
#include "HFCameraTimelapseClipInfoProvider-Protocol.h"
#include "HFCameraTimelapsePosterFrameGenerator.h"
#include "HFCameraTimelapsePosterFrameGeneratorDelegate-Protocol.h"
#include "HFCameraVideoDownloaderDelegate-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface HFCameraPosterFrameProvider : NSObject<HFCameraVideoDownloaderDelegate, HFCameraTimelapsePosterFrameGeneratorDelegate>

@property (weak, nonatomic) HFCameraImageCache *imageCache;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *bookkeepingQueue;
@property (retain, nonatomic) HFCameraPosterFrameRequests *posterFrameRequests;
@property (retain, nonatomic) HFCameraTimelapsePosterFrameGenerator *posterFrameGenerator;
@property (weak, nonatomic) NSObject<HFCameraTimelapseClipInfoProvider> *timelapseClipInfoProvider;
@property (nonatomic) struct CGSize { double x0; double x1; } posterFrameSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithImageCache:(id)cache andTimelapseClipInfoProvider:(id)provider;
- (void)getPosterFrameForDelegate:(id)delegate forHighQualityClip:(id)clip atOffset:(double)offset;
- (void)_checkImageCacheForDelegate:(id)delegate forHighQualityClip:(id)clip atOffset:(double)offset;
- (void)_generateImageForDelegate:(id)delegate forHighQualityClip:(id)clip atOffset:(double)offset;
- (void)_requestTimelapseFileForDelegate:(id)delegate forHighQualityClip:(id)clip atOffset:(double)offset;
- (id)_timelapseClipForHighQualityClip:(id)clip;
- (void)_requestTimelapsePosterFrameGenerationForTimelapseClip:(id)clip;
- (void)didDownloadVideoFileForClip:(id)clip toURL:(id)url;
- (void)foundVideoFileForClip:(id)clip atURL:(id)url;
- (void)failedToDownloadVideoFileForClip:(id)clip;
- (void)didGeneratePosterFrame:(id)frame forHighQualityClip:(id)clip atOffset:(double)offset withTimelapseOffset:(double)offset;
- (void)failedToFindTimelapseClipForHighQualityClip:(id)clip;
- (void)failedToGeneratePosterFrameForHighQualityClip:(id)clip atOffset:(double)offset;
- (void)_updateDelegate:(id)delegate withPosterFrame:(id)frame atOffset:(double)offset ForHighQualityClip:(id)clip;
@end

#endif /* HFCameraPosterFrameProvider_h */
