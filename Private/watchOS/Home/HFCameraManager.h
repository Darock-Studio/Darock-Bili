//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 841.3.9.0.0
//
#ifndef HFCameraManager_h
#define HFCameraManager_h
@import Foundation;

#include "HFAccessoryObserver-Protocol.h"
#include "HFCameraObserver-Protocol.h"
#include "HFExecutionEnvironment.h"
#include "HFExecutionEnvironmentObserver-Protocol.h"

@class HMCameraProfile, NSDate, NSError, NSMapTable, NSString;
@protocol NACancelable;

@interface HFCameraManager : NSObject<HFAccessoryObserver, HFCameraObserver, HFExecutionEnvironmentObserver>

@property (readonly, weak, nonatomic) HMCameraProfile *cameraProfile;
@property (readonly, nonatomic) NSMapTable *snapshotRequesters;
@property (readonly, nonatomic) NSMapTable *streamRequesters;
@property (nonatomic) BOOL isRegisteredForEvents;
@property (retain, nonatomic) NSObject<NACancelable> *nextSnapshotEvent;
@property (retain, nonatomic) NSDate *snapshotErrorDate;
@property (nonatomic) unsigned long long snapshotErrorCount;
@property (retain, nonatomic) NSError *cachedStreamError;
@property (retain, nonatomic) HFExecutionEnvironment *executionEnvironment;
@property (readonly, nonatomic) BOOL periodicSnapshotsEnabled;
@property (readonly, nonatomic) BOOL continuousStreamingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithCameraProfile:(id)profile;
- (void)dealloc;
- (void)beginPeriodicSnapshotsWithRequester:(id)requester;
- (void)endPeriodicSnapshotsWithRequester:(id)requester;
- (BOOL)arePeriodicSnapshotsEnabled;
- (void)beginContinuousStreamingWithRequester:(id)requester;
- (void)endContinuousStreamingWithRequester:(id)requester;
- (BOOL)isContinuousStreamingEnabled;
- (void)_beginPeriodicSnapshots;
- (void)_endPeriodicSnapshots;
- (id)_nextSnapshotDate;
- (void)_scheduleNextSnapshotEventWithPreviousError:(id)error;
- (void)_cancelNextSnapshotEvent;
- (double)_snapshotTimeInterval;
- (void)cameraSnapshotControl:(id)control didTakeSnapshot:(id)snapshot error:(id)error;
- (void)cameraSnapshotControlDidUpdateMostRecentSnapshot:(id)snapshot;
- (void)_beginContinuousStreaming;
- (void)_endContinuousStreaming;
- (void)_startStreaming;
- (void)_stopStreaming;
- (void)_dispatchStreamStateUpdate;
- (void)cameraUserSettingsDidUpdate:(id)update;
- (void)cameraStreamControlDidStartStream:(id)stream;
- (void)cameraStreamControl:(id)control didStopStreamWithError:(id)error;
- (void)_updateEventRegistration;
- (void)accessoryDidUpdateReachability:(id)reachability;
- (void)executionEnvironmentWillResignActive:(id)active;
- (void)executionEnvironmentDidBecomeActive:(id)active;
- (void)executionEnvironmentDidBecomeOccluded:(id)occluded;
- (void)executionEnvironmentDidBecomeVisible:(id)visible;
- (BOOL)_hasSnapshotRequesters;
- (BOOL)_hasStreamRequesters;
@end

#endif /* HFCameraManager_h */
