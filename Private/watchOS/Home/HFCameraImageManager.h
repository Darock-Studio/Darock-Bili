//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 841.3.9.0.0
//
#ifndef HFCameraImageManager_h
#define HFCameraImageManager_h
@import Foundation;

#include "HFCameraClipVideoAssetOperationCache.h"
#include "HFCameraImageCache.h"
#include "HFCameraPosterFrameProvider.h"
#include "HFCameraVideoDownloaderDelegate-Protocol.h"
#include "HFExecutionEnvironmentObserver-Protocol.h"

@class HMCameraProfile, NSMutableDictionary, NSOperationQueue, NSString;

@interface HFCameraImageManager : NSObject<HFExecutionEnvironmentObserver, HFCameraVideoDownloaderDelegate>

@property (retain, nonatomic) NSOperationQueue *posterFrameQueue;
@property (retain, nonatomic) HFCameraImageCache *imageCache;
@property (retain, nonatomic) NSMutableDictionary *imageObservers;
@property (retain, nonatomic) NSMutableDictionary *generationObservers;
@property (retain, nonatomic) NSMutableDictionary *inProgressOperations;
@property (retain, nonatomic) HFCameraClipVideoAssetOperationCache *fetchCache;
@property (retain, nonatomic) NSMutableDictionary *requestedHeroFrameCache;
@property (retain, nonatomic) NSMutableDictionary *requestedFaceCropCache;
@property (retain, nonatomic) NSMutableDictionary *requestedPosterFrameCache;
@property (retain, nonatomic) HFCameraPosterFrameProvider *cameraPosterFrameProvider;
@property (retain, nonatomic) NSMutableDictionary *offsetsForFile;
@property (weak, nonatomic) HMCameraProfile *cameraProfile;
@property (nonatomic) struct CGSize { double x0; double x1; } videoSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedManager;
+ (void)purgeVideoFiles;
+ (void)purgeVideoFilesAtURL:(id)url completionHandler:(id /* block */)handler;
+ (id)clipIdentifierStringFromDate:(id)date;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)heroFrameImageForClip:(id)clip;
- (id)faceCropForClip:(id)clip atOffset:(double)offset;
- (id)faceCropForPersonName:(id)name;
- (id)faceCropImagesForClip:(id)clip atOffset:(double)offset;
- (id)cachedPosterFrameImageForClip:(id)clip offset:(double)offset requestor:(id)requestor;
- (id)representativeImageForClip:(id)clip;
- (id)firstPosterFrameImageForClip:(id)clip;
- (id)imageObserversForKey:(id)key;
- (void)addFaceCropImageObserver:(id)observer forClip:(id)clip usingSignificantEvent:(id)event;
- (void)failedToFindFaceCropForClip:(id)clip withKey:(id)key;
- (void)removeFaceCropImageObserver:(id)observer forPersonName:(id)name;
- (void)addHeroFrameImageObserver:(id)observer forClip:(id)clip;
- (void)failToFindHeroFrameForClip:(id)clip;
- (void)removeHeroFrameImageObserver:(id)observer forClip:(id)clip;
- (void)getPosterFrameImage:(id)image forClip:(id)clip atOffset:(double)offset;
- (void)addPosterFrameImageObserver:(id)observer forClip:(id)clip atOffset:(double)offset;
- (void)removePosterFrameImageObserver:(id)observer forClip:(id)clip atOffset:(double)offset;
- (void)addDemoPosterFrameImageObserver:(id)observer forClip:(id)clip atOffset:(double)offset;
- (void)generateImageUsingAsset:(id)asset clip:(id)clip offset:(double)offset;
- (struct CGSize { double x0; double x1; })posterFrameSize;
- (void)generatePosterFrameImageForClip:(id)clip atOffset:(double)offset observer:(id)observer;
- (double)_timeScaleAdjustedOffset:(double)offset;
- (id)keyForClip:(id)clip timeOffset:(double)offset;
- (id)keyForClip:(id)clip;
- (void)purgePosterFrames;
- (void)_addPosterFrameImage:(id)image forClip:(id)clip withOffset:(double)offset;
- (void)executionEnvironmentDidEnterBackground:(id)background;
- (void)generateDemoPosterFramesForAsset:(id)asset forClip:(id)clip;
- (void)_updateDemoObserversForImage:(id)image forClip:(id)clip withOffset:(double)offset;
- (void)resetForCameraDismissal;
- (void)didDownloadVideoFileForClip:(id)clip toURL:(id)url;
- (void)foundVideoFileForClip:(id)clip atURL:(id)url;
- (void)failedToDownloadVideoFileForClip:(id)clip;
- (void)_generateImagesForForTimelapseClip:(id)clip atLocation:(id)location;
@end

#endif /* HFCameraImageManager_h */
