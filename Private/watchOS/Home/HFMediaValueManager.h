//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 841.3.9.0.0
//
#ifndef HFMediaValueManager_h
#define HFMediaValueManager_h
@import Foundation;

#include "HFHomeKitItemProtocol-Protocol.h"
#include "HFHomeKitObject-Protocol.h"
#include "HFMediaObjectObserver-Protocol.h"
#include "HFMediaProfileContainer-Protocol.h"
#include "HFMediaSessionObserver-Protocol.h"
#include "HFMediaValueSource-Protocol.h"

@class NSError, NSMutableArray, NSString;

@interface HFMediaValueManager : NSObject<HFMediaObjectObserver, HFMediaSessionObserver, HFMediaValueSource, HFHomeKitItemProtocol>

@property (retain, nonatomic) NSMutableArray *transactionStack;
@property (retain, nonatomic) NSError *cachedPlaybackStateWriteError;
@property (readonly, weak, nonatomic) NSObject<HFMediaProfileContainer> *mediaProfileContainer;
@property (readonly, nonatomic) BOOL hasPendingWrites;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSObject<HFHomeKitObject> *homeKitObject;

/* instance methods */
- (id)initWithMediaProfileContainer:(id)container;
- (id)init;
- (BOOL)hasPendingWritesForRouteID:(id)id;
- (long long)lastPlaybackStateForProfileForRouteID:(id)id;
- (id)writePlaybackState:(long long)state playbackArchive:(id)archive forRouteID:(id)id;
- (id)cachedPlaybackStateWriteErrorForRouteID:(id)id;
- (id)mediaProfileContainerForRouteID:(id)id;
- (void)clearCachedPlaybackStateWriteErrorWithReason:(id)reason notifyDelegates:(BOOL)delegates;
- (void)mediaSession:(id)session didUpdatePlaybackState:(long long)state;
- (void)mediaObject:(id)object didUpdateMediaSession:(id)session;
- (void)_updateCachedPlaybackStateWriteError:(id)error operationType:(id)type notifyDelegates:(BOOL)delegates;
- (void)_updateLastPlaybackState:(long long)state sender:(SEL)sender notifyWillUpdate:(BOOL)update notifyDidUpdate:(BOOL)update;
- (void)_notifyDelegatesDidUpdatePlaybackState:(long long)state mediaSession:(id)session;
- (void)_notifyDelegatesWillUpdatePlaybackState:(long long)state mediaSession:(id)session;
- (void)_notifyDelegatesFailedToUpdatePlaybackStateWithError:(id)error mediaSession:(id)session;
@end

#endif /* HFMediaValueManager_h */
