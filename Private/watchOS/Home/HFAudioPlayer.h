//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 841.3.9.0.0
//
#ifndef HFAudioPlayer_h
#define HFAudioPlayer_h
@import Foundation;

#include "AVAudioPlayerDelegate-Protocol.h"
#include "HFAudioPlayerDelegate-Protocol.h"

@class AVAudioPlayer, AVAudioSession, CADisplayLink, NSNumber, NSString, NSURL;

@interface HFAudioPlayer : NSObject<AVAudioPlayerDelegate>

@property (retain, nonatomic) NSURL *audioFileURL;
@property (retain, nonatomic) AVAudioPlayer *audioPlayer;
@property (retain, nonatomic) AVAudioSession *audioSession;
@property (nonatomic) BOOL audioSessionIsActive;
@property (nonatomic) double playerCurrentTime;
@property (nonatomic) unsigned long long audioSessionOptions;
@property (retain, nonatomic) CADisplayLink *displayLink;
@property (nonatomic) BOOL paused;
@property (weak, nonatomic) NSObject<HFAudioPlayerDelegate> *delegate;
@property (nonatomic) unsigned long long playerStopSource;
@property (retain, nonatomic) NSNumber *routeChangeReason;
@property (readonly, nonatomic) BOOL playing;
@property (readonly, nonatomic) double duration;
@property (nonatomic) float volume;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithAudioFileURL:(id)url audioSessionOptions:(unsigned long long)options delegate:(id)delegate;
- (void)updateAudioFileURL:(id)url;
- (void)dealloc;
- (void)_registerAudioSessionObservers;
- (void)_deregisterAudioSessionObservers;
- (void)_displayLinkUpdated:(id)updated;
- (BOOL)_configureAudioSession:(id *)session;
- (void)_deactivateAudioSession;
- (id)_audioSessionCategory;
- (unsigned long long)_audioSessionCategoryOptions;
- (void)_pauseWithReason:(id)reason;
- (void)_stopWithoutAudioSessionDeactivation;
- (void)_cleanup;
- (BOOL)prepareToPlay:(id *)play;
- (void)play;
- (void)pause;
- (void)resume;
- (void)stop;
- (BOOL)isPlaying;
- (void)audioSessionDidInterrupt:(id)interrupt;
- (void)audioSessionMediaServicesWereLost:(id)lost;
- (void)audioSessionMediaServicesWereReset:(id)reset;
- (void)audioSessionRouteChanged:(id)changed;
- (void)audioPlayerDidFinishPlaying:(id)playing successfully:(BOOL)successfully;
- (void)audioPlayerDecodeErrorDidOccur:(id)occur error:(id)error;
- (BOOL)isPaused;
- (BOOL)isAudioSessionActive;
@end

#endif /* HFAudioPlayer_h */
