//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 25.300.51.0.0
//
#ifndef SKAChannelManager_h
#define SKAChannelManager_h
@import Foundation;

#include "SKAAccountProviding-Protocol.h"
#include "SKAChannelManaging-Protocol.h"
#include "SKAChannelManagingDelegate-Protocol.h"
#include "SKAPushManaging-Protocol.h"
#include "SKAPushManagingDelegate-Protocol.h"

@class NSString;

@interface SKAChannelManager : NSObject<SKAPushManagingDelegate, SKAChannelManaging>

@property (retain, nonatomic) NSObject<SKAPushManaging> *pushManager;
@property (retain, nonatomic) NSObject<SKAAccountProviding> *accountProvider;
@property (weak, nonatomic) NSObject<SKAChannelManagingDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logger;
+ (id)_jwtTokenNotFoundError;
+ (id)_serverResponseError;

/* instance methods */
- (id)initWithPushManager:(id)manager accountProvider:(id)provider delegate:(id)delegate;
- (void)createChannelWithCompletion:(id /* block */)completion;
- (void)createPresenceChannelWithMembershipKey:(id)key serverKey:(id)key serviceIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)publishData:(id)data onChannel:(id)channel withChannelToken:(id)token publishInitiateTime:(id)time isPendingPublish:(BOOL)publish isScheduledPublish:(BOOL)publish retryCount:(unsigned long long)count completion:(id /* block */)completion;
- (void)assertPresence:(id)presence onChannel:(id)channel membershipKey:(id)key serverKey:(id)key timestamp:(id)timestamp withChannelToken:(id)token serviceIdentifier:(id)identifier isRefresh:(BOOL)refresh completion:(id /* block */)completion;
- (void)releasePresenceOnChannel:(id)channel membershipKey:(id)key serverKey:(id)key timestamp:(id)timestamp withChannelToken:(id)token serviceIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)pollActiveParticipantsForChannel:(id)channel membershipKey:(id)key serverKey:(id)key withChannelToken:(id)token serviceIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)activeStatusChannelSubscriptionsWithCompletion:(id /* block */)completion;
- (void)subscribeToStatusChannels:(id)channels;
- (void)unsubscribeFromStatusChannels:(id)channels;
- (void)activePresenceChannelSubscriptionsWithCompletion:(id /* block */)completion;
- (void)subscribeToPresenceChannels:(id)channels;
- (void)unsubscribeFromPresenceChannels:(id)channels;
- (void)enableActivityTracking;
- (void)disableActivityTracking;
- (id)_createPayloadDataFromData:(id)data;
- (id)serverTime;
- (id)_getPresenceJWTToken;
- (id)_getStatusJWTToken;
- (id)_getNonce;
- (void)pushManager:(id)manager didReceiveData:(id)data onChannel:(id)channel identifier:(unsigned long long)identifier dateReceived:(id)received dateExpired:(id)expired;
- (void)pushManager:(id)manager failedToSubscribeToChannel:(id)channel withError:(id)error;
@end

#endif /* SKAChannelManager_h */
