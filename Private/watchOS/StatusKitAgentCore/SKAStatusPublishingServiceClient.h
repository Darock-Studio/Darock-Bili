//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 25.300.51.0.0
//
#ifndef SKAStatusPublishingServiceClient_h
#define SKAStatusPublishingServiceClient_h
@import Foundation;

#include "SKAChannelManaging-Protocol.h"
#include "SKADatabaseManaging-Protocol.h"
#include "SKADatabaseProviding-Protocol.h"
#include "SKAInvitationManager.h"
#include "SKAMessagingProviding-Protocol.h"
#include "SKAStatusPublishingManaging-Protocol.h"
#include "SKAStatusPublishingServiceClientConnection.h"
#include "SKAStatusPublishingServiceClientConnectionLifecycleDelegate-Protocol.h"
#include "SKAStatusPublishingServiceClientDelegate-Protocol.h"
#include "SKStatusPublishingDaemonProtocol-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue, OS_os_transaction;

@interface SKAStatusPublishingServiceClient : NSObject<SKStatusPublishingDaemonProtocol, SKAStatusPublishingServiceClientConnectionLifecycleDelegate>

@property (retain, nonatomic) SKAStatusPublishingServiceClientConnection *clientConnection;
@property (weak, nonatomic) NSObject<SKAStatusPublishingServiceClientDelegate> *delegate;
@property (retain, nonatomic) NSObject<SKADatabaseManaging> *databaseManager;
@property (retain, nonatomic) NSObject<SKADatabaseProviding> *databaseProvider;
@property (retain, nonatomic) NSObject<SKAMessagingProviding> *messagingProvider;
@property (retain, nonatomic) SKAInvitationManager *invitationManager;
@property (retain, nonatomic) NSObject<SKAChannelManaging> *channelManager;
@property (retain, nonatomic) NSObject<SKAStatusPublishingManaging> *publishingManager;
@property (nonatomic) BOOL accountIsStatusKitCapable;
@property (nonatomic) BOOL accountCheckCompleted;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, copy, nonatomic) NSString *statusTypeIdenfifier;
@property (retain, nonatomic) NSObject<OS_os_transaction> *transaction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_missingEntitlmentErrorForStatusTypeIdentifier:(id)identifier;
+ (id)_noPersonalChannelErrorForStatusTypeIdentifier:(id)identifier;
+ (id)_noUsersToShareWithError;
+ (id)_accountNotCapableError;
+ (id)_unableToResolveSenderHandleError;
+ (id)_dateCreatedDriftError;
+ (id)logger;

/* instance methods */
- (id)initWithXPCConnection:(id)xpcconnection queue:(id)queue delegate:(id)delegate databaseManager:(id)manager invitationManager:(id)manager publishingManager:(id)manager channelManager:(id)manager;
- (void)publishingServiceClientConnectionWasInterrupted:(id)interrupted;
- (void)publishingServiceClientConnectionWasInvalidated:(id)invalidated;
- (void)publishStatusRequest:(id)request statusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)invitedHandlesForStatusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)isHandleInvited:(id)invited fromSenderHandle:(id)handle forStatusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)isHandleInviteable:(id)inviteable fromHandle:(id)handle forStatusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)fetchHandleInvitability:(id)invitability fromHandle:(id)handle forStatusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)inviteHandles:(id)handles fromSenderHandle:(id)handle withInvitationPayload:(id)payload statusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)removeInvitedHandles:(id)handles statusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)removeAllInvitedHandlesFromPersonalChannelWithStatusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)registerForDelegateCallbacksWithStatusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)accountIsStatusKitCapableWithCompletion:(id /* block */)completion;
- (id)_serverBagNumberForKey:(id)key;
- (double)_serverBagTimeIntervalForKey:(id)key withDefaultValue:(double)value;
- (double)_scheduledPublishMaxDelayTime;
- (double)_unscheduledPublishMaxDelayTime;
- (double)_randomScheduledPublishDelay;
- (double)_randomUnscheduledPublishDelay;
- (double)_secondaryDeviceRepublishMaxDelayTime;
- (double)_secondaryDeviceRepublishMinDelayTime;
- (double)_randomSecondaryDeviceRepublishDelay;
- (double)_delayForStatusPublishRequest:(id)request;
@end

#endif /* SKAStatusPublishingServiceClient_h */
