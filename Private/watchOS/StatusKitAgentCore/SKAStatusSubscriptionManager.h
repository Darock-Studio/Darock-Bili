//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 25.300.51.0.0
//
#ifndef SKAStatusSubscriptionManager_h
#define SKAStatusSubscriptionManager_h
@import Foundation;

#include "SKAChannelManaging-Protocol.h"
#include "SKADatabaseManaging-Protocol.h"
#include "SKAPushManaging-Protocol.h"
#include "SKAStatusSubscriptionManaging-Protocol.h"

@class NSMapTable, NSString;
@protocol OS_dispatch_queue;

@interface SKAStatusSubscriptionManager : NSObject<SKAStatusSubscriptionManaging>

@property (retain, nonatomic) NSMapTable *activeTransientSubscriptionsByClient;
@property (retain, nonatomic) NSMapTable *activePresenceSubscriptionsByClient;
@property (retain, nonatomic) NSObject<SKADatabaseManaging> *databaseManager;
@property (retain, nonatomic) NSObject<SKAChannelManaging> *channelManager;
@property (retain, nonatomic) NSObject<SKAPushManaging> *pushManager;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *internalWorkQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_tooManySubscriptionsError;
+ (id)logger;

/* instance methods */
- (id)initWithDatabaseManager:(id)manager channelManager:(id)manager pushManager:(id)manager;
- (void)retainTransientSubscriptionAssertionForSubscriptionIdentifier:(id)identifier statusTypeIdentifier:(id)identifier client:(id)client completion:(id /* block */)completion;
- (void)releaseTransientSubscriptionAssertionForSubscriptionIdentifier:(id)identifier statusTypeIdentifier:(id)identifier client:(id)client completion:(id /* block */)completion;
- (void)releaseAllTransientSubscriptionAssertionsAssociatedWithClient:(id)client completion:(id /* block */)completion;
- (void)retainPersistentSubscriptionAssertionForSubscriptionIdentifier:(id)identifier statusTypeIdentifier:(id)identifier applicationIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)releasePersistentSubscriptionAssertionForSubscriptionIdentifier:(id)identifier statusTypeIdentifier:(id)identifier applicationIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)allSubscriptionIdentifiersWithActiveAssertionsForStatusTypeIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)allStatusSubscriptionIdentifiersWithActiveSubscriptionsWithCompletion:(id /* block */)completion;
- (void)releaseAllPresenceSubscriptionAssertionsAssociatedWithClient:(id)client completion:(id /* block */)completion;
- (void)releasePresenceSubscriptionAssertionForSubscriptionIdentifier:(id)identifier client:(id)client completion:(id /* block */)completion;
- (void)retainPresenceSubscriptionAssertionForSubscriptionIdentifier:(id)identifier client:(id)client completion:(id /* block */)completion;
- (BOOL)activePresenceSubscriptionAssertionsExistForChannelIdentifier:(id)identifier;
- (BOOL)_addTransientSubscriptionAssertionForClient:(id)client subscriptionIdentifier:(id)identifier;
- (BOOL)_addPresenceSubscriptionAssertionForClient:(id)client subscriptionIdentifier:(id)identifier;
- (void)_markCacheSubscriptionDateForChannelIdentifier:(id)identifier;
- (BOOL)_removeTransientSubscriptionAssertionForClient:(id)client subscriptionIdentifier:(id)identifier;
- (BOOL)_removePresenceSubscriptionAssertionForClient:(id)client subscriptionIdentifier:(id)identifier;
- (id)_activePresenceSubscriptionsForClient:(id)client;
- (id)_activeTransientSubscriptionsForClient:(id)client;
- (void)updateRegisteredSubscriptionsForActiveAssertionsWithCompletion:(id /* block */)completion;
- (id)_sortAndDedupeSubscriptionIdentifiers:(id)identifiers;
- (id)_enforceSubscriptionsHardCapOnSubscriptionIdentifiers:(id)identifiers;
- (id)_fetchAllClientActiveSubscriptionAssertions;
- (id)_fetchAllActiveSubscriptionAssertionsWithCache;
- (id)_fetchAllActivePresenceSubscriptions;
- (id)_recentlyReleasedTransientSubscriptionAssertionIdentifiersExcludingSubscriptionIdentifiers:(id)identifiers count:(long long)count presenceCount:(long long)count databaseContext:(id)context;
- (id)_allPersonalChannelIdentifiersRequiringSelfSubscriptionWithDatabaseContext:(id)context;
- (id)_statusTypeIdentifiersRequiringSelfSubscription;
- (BOOL)_activeTransientAssertionsExist;
- (BOOL)_activePresenceAssertionsExist;
- (id)_filterSubscriptionIdentifierToStatus:(id)status;
- (id)_filterSubscriptionIdentifierToPresence:(id)presence;
- (long long)_maxSubscriptionCacheCount;
- (long long)_maxPresenceSubscriptionCacheCount;
- (long long)_hardMaxSubscriptionCount;
- (double)_subscriptionTTL;
@end

#endif /* SKAStatusSubscriptionManager_h */
