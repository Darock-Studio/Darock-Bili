//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 25.300.51.0.0
//
#ifndef SKADatabaseManaging_Protocol_h
#define SKADatabaseManaging_Protocol_h
@import Foundation;

@protocol SKADatabaseManaging <NSObject>
/* instance methods */
- (id)newBackgroundContext;
- (id)existingPersonalChannelForStatusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (id)existingChannelForSubscriptionIdentifier:(id)identifier databaseContext:(id)context;
- (id)existingChannelForPresenceIdentifier:(id)identifier isPersonal:(BOOL)personal databaseContext:(id)context;
- (id)existingChannelForHandle:(id)handle statusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (id)allExistingChannelsForHandle:(id)handle statusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (id)allExistingChannelsForStatusTypeIdentifier:(id)identifier includingPersonalChannel:(BOOL)channel databaseContext:(id)context;
- (id)createPersonalChannelForStatusTypeIdentifier:(id)identifier channelIdentifier:(id)identifier channelToken:(id)token databaseContext:(id)context;
- (id)createPresenceChannelForPresenceIdentifier:(id)identifier channelIdentifier:(id)identifier channelToken:(id)token peerKey:(id)key serverKey:(id)key membershipKey:(id)key creationDate:(id)date options:(id)options databaseContext:(id)context;
- (BOOL)deletePersonalChannelForStatusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (id)createChannelForStatusTypeIdentifier:(id)identifier channelIdentifier:(id)identifier databaseContext:(id)context;
- (id)updatePersonalChannel:(id)channel withCurrentOutgoingRatchetState:(id)state databaseContext:(id)context;
- (BOOL)decomissionAllPersonalChannelsWithStatusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (BOOL)decomissionChannelWithIdentifier:(id)identifier databaseContext:(id)context;
- (id)createGeneratedEncryptionKeyWithOriginalOutgoingRatchetState:(id)state personalChannel:(id)channel databaseContext:(id)context;
- (id)generatedEncryptionKeysForPersonalChannel:(id)channel databaseContext:(id)context;
- (id)allPersistentSubscriptionAssertionChannelIdentifiersWithDatabaseContext:(id)context;
- (id)existingSubscriptionAssertionsForStatusTypeIdentifier:(id)identifier applicationIdentifier:(id)identifier databaseContext:(id)context;
- (id)existingSubscriptionAssertionForSubscriptionIdentifier:(id)identifier applicationIdentifier:(id)identifier databaseContext:(id)context;
- (id)createSubscriptionAssertionForSubscriptionIdentifier:(id)identifier applicationIdentifier:(id)identifier statusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (BOOL)deleteSubscriptionAssertionWithSubscriptionIdentifier:(id)identifier applicationIdentifier:(id)identifier databaseContext:(id)context;
- (id)createOrUpdateTransientSubscriptionHistoryForChannelIdentifier:(id)identifier lastSubscriptionDate:(id)date databaseContext:(id)context;
- (id)existingRecentTransientSubscriptionHistoriesWithLimit:(long long)limit databaseContext:(id)context;
- (id)existingInvitedUsersForInvitedHandle:(id)handle onChannel:(id)channel databaseContext:(id)context;
- (id)updateInvitationPayload:(id)payload onExistingInvitedUser:(id)user channel:(id)channel databaseContext:(id)context;
- (id)createInvitedUserWithHandle:(id)handle senderHandle:(id)handle invitationPayload:(id)payload channel:(id)channel databaseContext:(id)context;
- (BOOL)copyInvitedUsersFromChannel:(id)channel toChannel:(id)channel databaseContext:(id)context;
- (BOOL)deleteInvitedUserForHandle:(id)handle personalChannel:(id)channel databaseContext:(id)context;
- (BOOL)deleteInvitedUserForHandle:(id)handle presenceChannel:(id)channel databaseContext:(id)context;
- (BOOL)deleteAllInvitedUsersForPersonalChannel:(id)channel databaseContext:(id)context;
- (id)existingInvitedUsersForPersonalChannel:(id)channel databaseContext:(id)context;
- (id)createStatusWithUniqueIdentifier:(id)identifier dateCreated:(id)created datePublished:(id)published dateReceived:(id)received dateExpired:(id)expired rawData:(id)data channelIdentifier:(id)identifier databaseContext:(id)context;
- (id)existingStatusForChannel:(id)channel databaseContext:(id)context;
- (id)existingStatusForUniqueIdentifier:(id)identifier databaseContext:(id)context;
- (void)cleanupOldStatusUpdatesForChannelIdentifier:(id)identifier excludingStatusUniqueIdentifier:(id)identifier databaseContext:(id)context;
- (id)createPendingPublishRequestWithUniqueIdentifier:(id)identifier dateCreated:(id)created payloadData:(id)data statusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (id)existingPendingPublishRequestsWithDatabaseContext:(id)context;
- (id)existingPendingPublishRequestForUniqueIdentifier:(id)identifier withDatabaseContext:(id)context;
- (id)existingPendingPublishRequestsForStatusTypeIdentifier:(id)identifier withDatabaseContext:(id)context;
- (BOOL)incrementPendingPublishRequestRetryCountWithUniqueIdentifier:(id)identifier databaseContext:(id)context;
- (BOOL)deletePendingPublishRequestWithWithUniqueIdentifier:(id)identifier databaseContext:(id)context;
- (id)createRemovedUserWithHandle:(id)handle dateRemoved:(id)removed statusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (id)existingRemovedUserWithHandle:(id)handle statusTypeIdentifier:(id)identifier withDatabaseContext:(id)context;
- (BOOL)deleteRemovedUserWithHandle:(id)handle statusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (id)createRemovedUserWithHandle:(id)handle dateRemoved:(id)removed presenceIdentifier:(id)identifier databaseContext:(id)context;
- (id)existingRemovedUserWithHandle:(id)handle presenceIdentifier:(id)identifier withDatabaseContext:(id)context;
- (BOOL)deleteRemovedUserWithHandle:(id)handle presenceIdentifier:(id)identifier databaseContext:(id)context;
- (unsigned long long)currentCheckpointForChannel:(id)channel databaseContext:(id)context;
- (BOOL)setCurrentCheckpointForChannel:(id)channel checkpoint:(unsigned long long)checkpoint databaseContext:(id)context;
- (id)createReceivedInvitationForChannel:(id)channel senderHandle:(id)handle invitedHandle:(id)handle invitationIdentifier:(id)identifier dateInvitationCreated:(id)created incomingRatchetState:(id)state presenceIdentifier:(id)identifier channelToken:(id)token serverKey:(id)key peerKey:(id)key invitationPayload:(id)payload databaseContext:(id)context;
- (id)receivedInvitationsForChannel:(id)channel databaseContext:(id)context;
- (void)cleanupOldReceivedInvitationsForChannelIdentifier:(id)identifier excludingInvitation:(id)invitation databaseContext:(id)context;
- (void)cleanupDecommisionedChannelsWithDatabaseContext:(id)context;
- (void)cleanupOldChannelsForHandle:(id)handle statusTypeIdentifier:(id)identifier databaseContext:(id)context;
- (void)deviceToDeviceEncryptedDatabaseCapableWithCompletion:(id /* block */)completion;
- (id)allPublishedLocalStatusesInDatabaseContext:(id)context error:(id *)error;
- (BOOL)createOrUpdatePublishedLocalStatuses:(id)statuses databaseContext:(id)context error:(id *)error;
- (id)allPublishedLocalStatusDevicesInDatabaseContext:(id)context error:(id *)error;
- (BOOL)createOrUpdatePublishedLocalStatusDevices:(id)devices databaseContext:(id)context error:(id *)error;
- (BOOL)deletePublishedLocalStatusDevices:(id)devices databaseContext:(id)context error:(id *)error;
- (BOOL)createOrUpdateOrDeleteSubscribedLocalStatus:(id)status databaseContext:(id)context error:(id *)error;
- (id)allSubscribedLocalStatusesInDatabaseContext:(id)context error:(id *)error;
@end

#endif /* SKADatabaseManaging_Protocol_h */
