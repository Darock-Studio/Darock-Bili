//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1221.1.1.2.0
//
#ifndef CoreDAVTask_h
#define CoreDAVTask_h
@import Foundation;

#include "CoreDAVAccountInfoProvider-Protocol.h"
#include "CoreDAVItem.h"
#include "CoreDAVRequestLogger.h"
#include "CoreDAVResponseBodyParser-Protocol.h"
#include "CoreDAVSubmittable-Protocol.h"
#include "CoreDAVTaskDelegate-Protocol.h"
#include "NSURLSessionDataDelegate-Protocol.h"
#include "NSURLSessionDelegate-Protocol.h"
#include "NSURLSessionTaskDelegate-Protocol.h"

@class NSData, NSDate, NSDictionary, NSError, NSHTTPURLResponse, NSMutableArray, NSMutableDictionary, NSRunLoop, NSString, NSThread, NSURL, NSURLRequest, NSURLSession, NSURLSessionDataTask;
@protocol CoreDAVTaskManager;

@interface CoreDAVTask : NSObject<NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, CoreDAVSubmittable> {
  /* instance variables */
  long long _numDownloadedElements;
  NSHTTPURLResponse *_response;
  NSURLSession *_session;
  NSURLSessionDataTask *_task;
  NSURLRequest *_request;
  NSDate *_dateConnectionWentOut;
  BOOL _didSendRequest;
  BOOL _didFailWithError;
  BOOL _didCancel;
  BOOL _didReceiveResponse;
  BOOL _didReceiveData;
  BOOL _didFinishLoading;
  BOOL _receivedBadPasswordResponse;
  BOOL _triedRenewingCredential;
  BOOL _justTriedTokenAuth;
  BOOL _everTriedTokenAuth;
  BOOL _shouldRetryWithClientToken;
  BOOL _didRetryWithClientToken;
  BOOL _requestIsCompressed;
  BOOL _compressedRequestFailed;
  NSError *_passwordNotificationError;
  CoreDAVRequestLogger *_logger;
  NSMutableDictionary *_overriddenHeaders;
  NSMutableArray *_redirectHistory;
  NSData *_fakeResponseData;
  BOOL _haveParsedFakeResponseData;
  NSString *_uniqueID;
  NSThread *_callbackThread;
  BOOL _callbackThreadSet;
}

@property (nonatomic) long long responseStatusCode;
@property (nonatomic) unsigned long long totalBytesReceived;
@property (retain, nonatomic) NSError *error;
@property BOOL totalBytesWasProcessedAsAbnormallyLarge;
@property (copy, nonatomic) id /* block */ requestProgressBlock;
@property (copy, nonatomic) id /* block */ responseProgressBlock;
@property (copy, nonatomic) id /* block */ completionBlock;
@property (readonly, nonatomic) BOOL finished;
@property (readonly, nonatomic) NSRunLoop *workRunLoop;
@property (weak, nonatomic) NSObject<CoreDAVTaskManager> *taskManager;
@property (weak, nonatomic) NSObject<CoreDAVAccountInfoProvider> *accountInfoProvider;
@property (weak, nonatomic) NSObject<CoreDAVTaskDelegate> *delegate;
@property (retain, nonatomic) id context;
@property (nonatomic) int depth;
@property (nonatomic) double timeoutInterval;
@property (nonatomic) BOOL allowAutomaticRedirects;
@property (retain, nonatomic) NSObject<CoreDAVResponseBodyParser> *responseBodyParser;
@property (readonly, nonatomic) CoreDAVItem *rootElement;
@property (readonly, nonatomic) NSDictionary *responseHeaders;
@property (nonatomic) BOOL ignoresGuardianRestrictions;
@property (readonly, nonatomic) NSURL *url;
@property (retain, nonatomic) NSDictionary *requestProperties;
@property (nonatomic) BOOL simulated;
@property (retain, nonatomic) NSMutableDictionary *simulatedResponseHeaders;
@property (nonatomic) long long simulatedStatusCode;
@property (retain, nonatomic) CoreDAVItem *simulatedRootElement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (unsigned int)uniqueQueryID;
+ (id)stringFromDepth:(int)depth;

/* instance methods */
- (id)initWithURL:(id)url;
- (void)dealloc;
- (id)redactedDescription;
- (id)httpMethod;
- (BOOL)_includeGeneralHeaders;
- (id)requestBodyStream;
- (id)requestBody;
- (id)copyDefaultParserForContentType:(id)type;
- (BOOL)shouldLogResponseBody;
- (void)loadRequest:(id)request;
- (void)_assignConnectionProperties:(id)properties toSessionConfiguration:(id)configuration;
- (void)_logSantizedRequest:(id)request withTaskID:(id)id;
- (void)tearDownResources;
- (id)_compressBodyData:(id)data;
- (id)_createBodyData;
- (void)_failImmediately;
- (id)additionalHeaderValues;
- (void)overrideRequestHeader:(id)header withValue:(id)value;
- (unsigned long long)cachePolicy;
- (void)performCoreDAVTask;
- (BOOL)validate:(id *)validate;
- (void)_sendTimeSpentInNetworkingToProvider;
- (void)finishCoreDAVTaskWithError:(id)error;
- (BOOL)isFinished;
- (BOOL)markAsFinished;
- (id)credentialForClientCertificateChallenge:(id)challenge;
- (id)credentialForOAuthChallenge:(id)challenge;
- (id)_applyAuthenticationChain:(struct __CFArray *)chain toRequest:(id)request;
- (id)_applyStorageSession:(struct __CFURLStorageSession *)session toRequest:(id)request;
- (void)_handleBadPasswordResponse;
- (void)_runOnThisThread:(id /* block */)thread;
- (void)_runOnCallbackThread:(id /* block */)thread;
- (void)URLSession:(id)urlsession didBecomeInvalidWithError:(id)error;
- (void)URLSession:(id)urlsession didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession task:(id)task didSendBodyData:(long long)data totalBytesSent:(long long)sent totalBytesExpectedToSend:(long long)send;
- (void)URLSession:(id)urlsession task:(id)task didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)_session:(id)_session dataTask:(id)task didReceiveData:(id)data;
- (BOOL)_shouldHandleStatusCode:(long long)code;
- (void)URLSession:(id)urlsession task:(id)task needNewBodyStream:(id /* block */)stream;
- (id)lastRedirectURL;
- (void)URLSession:(id)urlsession task:(id)task willPerformHTTPRedirection:(id)httpredirection newRequest:(id)request completionHandler:(id /* block */)handler;
- (void)_session:(id)_session task:(id)task willPerformHTTPRedirection:(id)httpredirection newRequest:(id)request completionHandler:(id /* block */)handler;
- (BOOL)_canAuthenticateAgainstProtectionSpace:(id)space;
- (void)_didReceiveAuthenticationChallenge:(id)challenge forTask:(id)task completionHandler:(id /* block */)handler;
- (BOOL)_shouldCreateCredentialForBasicOrDigestAuthChallenge:(id)challenge;
- (void)_handleAuthenticationChallenge:(id)challenge task:(id)task completionHandler:(id /* block */)handler;
- (void)handleWebLoginRequestWithCompletionBlock:(id /* block */)block;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithError:(id)error;
- (void)_taskFinishedLoading:(id)loading;
- (BOOL)_handleUnauthorizedAccessError:(id)error;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)_session:(id)_session dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)_task:(id)_task didFailWithError:(id)error;
- (void)startModal;
- (void)finishEarlyWithError:(id)error;
- (void)submitWithTaskManager:(id)manager;
- (void)reset;
- (long long)numDownloadedElements;
- (void)reportStatusWithError:(id)error;
- (id)_sessionForLogging;
- (id)_requestForLogging;
@end

#endif /* CoreDAVTask_h */
