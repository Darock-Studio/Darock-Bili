//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 123.2.7.0.1
//
#ifndef BMFrameStore_h
#define BMFrameStore_h
@import Foundation;

#include "BMMemoryMapping.h"

@class BMFileHandle, NSMutableOrderedSet, NSString;

@interface BMFrameStore : NSObject {
  /* instance variables */
  NSMutableOrderedSet *_framePointers;
  NSString *_cachedPrintablePath;
}

@property (readonly) unsigned int bytesUsed;
@property (retain, nonatomic) NSString *cachedPrintablePathV2;
@property (readonly, nonatomic) NSString *segmentName;
@property (readonly, nonatomic) NSString *segmentPath;
@property (nonatomic) BOOL filterByAgeOnRead;
@property (nonatomic) BOOL pruneOnAccess;
@property (nonatomic) double maxAge;
@property (nonatomic) unsigned long long frameStoreSize;
@property (nonatomic) unsigned int datastoreVersion;
@property (retain, nonatomic) BMMemoryMapping *header;
@property (retain, nonatomic) BMMemoryMapping *frames;
@property (readonly, nonatomic) BMFileHandle *backingFile;
@property (nonatomic) unsigned long long permission;
@property (nonatomic) double lastAbsoluteTimestamp;

/* class methods */
+ (BOOL)writeEmptySegmentHeaderWithFileHandleV2:(id)v2 segmentHeaderSize:(unsigned long long *)size;
+ (id)new;
+ (unsigned int)getSegmentVersion:(id)version config:(id)config stream:(id)stream;
+ (BOOL)expectedTimestamp:(double)timestamp;
+ (BOOL)writeEmptyFrameStoreWithFileHandle:(id)handle fileSize:(unsigned long long)size datastoreVersion:(unsigned long long)version;
+ (BOOL)writeEmptySegmentHeaderWithFileHandleV1:(id)v1 segmentHeaderSize:(unsigned long long *)size;
+ (unsigned long long)maxEventsPerFrameStoreVersion:(unsigned long long)version averageEventSize:(unsigned long long)size segmentSize:(unsigned long long)size;

/* instance methods */
- (unsigned int)atomicReadTotalFramesV2;
- (int)frameNumberFromFrameOffsetV2:(unsigned int)v2;
- (int)firstFrameNumberForTimestampV2:(double)v2 reverse:(BOOL)reverse;
- (unsigned int)frameOffsetFromOffsetTableV2:(struct { union { struct { unsigned int x0; unsigned int x1; } x0; unsigned long long x1; } x0; double x1; } *)v2;
- (int)frameNumberFromOffsetToOffsetTableEntryV2:(unsigned int)v2;
- (unsigned int)offsetTableOffsetFromFrameNumberV2:(unsigned int)v2;
- (struct { union { struct { unsigned int x0; unsigned int x1; } x0; unsigned long long x1; } x0; double x1; } *)offsetTablePtrFromFrameNumberV2:(unsigned int)v2;
- (unsigned int)endOfFrameDataV2;
- (int)eraseFrameAtOffsetTableV2:(struct { union { struct { unsigned int x0; unsigned int x1; } x0; unsigned long long x1; } x0; double x1; } *)v2;
- (unsigned int)stateOfFrameV2:(unsigned int)v2;
- (double)creationTimeOfFrameV2:(unsigned int)v2;
- (unsigned int)sizeOfFrameV2:(unsigned int)v2;
- (unsigned int)offsetOfFrameV2:(unsigned int)v2;
- (BOOL)getSegmentHeader:(union { struct { unsigned long long x0[2] unsigned int x1; } x0; struct { unsigned long long x0; double x1; unsigned int x2; char x3[32] char x4[4] } x1; struct { char x0[4] unsigned int x1; double x2; unsigned int x3; int x4; unsigned int x5; unsigned int x6; } x2; } *)header fromFileV2:(id)v2 fileSize:(unsigned long long *)size;
- (id)initWithFileHandleV2:(id)v2 permission:(unsigned long long)permission;
- (id)_printablePathV2;
- (BOOL)isValidFrameV2:(void *)v2 currentFrame:(unsigned int)frame expectedState:(unsigned int)state copyOfData:(id *)data frameState:(unsigned int)state frameSize:(unsigned int)size validations:(BOOL)validations enumerationOptions:(unsigned long long)options errorCode:(int *)code;
- (id)frameWithOffsetV2:(unsigned long long)v2 expectedState:(unsigned int)state;
- (void)enumerateWithOptionsV2:(unsigned long long)v2 fromOffset:(unsigned long long)offset usingBlock:(id /* block */)block;
- (void)updateToMaxOfValueAtOffset:(unsigned int)offset newValue:(int)value;
- (void)addToValueAtOffset:(unsigned int)offset increment:(unsigned int)increment;
- (void)addToDeletedFrameCount:(unsigned int)count;
- (void)updateToMaxOfTotalFramesAnd:(unsigned int)and;
- (void)updateToMaxOfHighestDeletedFrameAnd:(unsigned int)and;
- (unsigned char)appendOffsetTableEntry:(struct { union { struct { unsigned int x0; unsigned int x1; } x0; unsigned long long x1; } x0; double x1; } *)entry outOffsetForFrame:(unsigned int *)frame length:(unsigned int)length frameCount:(unsigned int *)count;
- (unsigned char)writeFrameV2ForBytes:(const void *)bytes length:(unsigned long long)length dataVersion:(unsigned int)version timestamp:(double)timestamp outOffset:(unsigned long long *)offset;
- (void)updateHighestDeletedFrameV2:(id)v2 addToDeletedFrameCount:(unsigned int)count;
- (void)updateHighestDeletedFrame:(id)frame;
- (void)markFrameAsRemovedV2:(id)v2;
- (BOOL)isCheckSumValidAtOffsetV2:(unsigned long long)v2 frameNumber:(int)number;
- (unsigned int)bytesUsedV1;
- (unsigned int)bytesUsedV2;
- (BOOL)isCheckSumValidAtOffsetV1:(unsigned long long)v1;
- (id)init;
- (BOOL)getSegmentHeader:(union { struct { unsigned long long x0[2] unsigned int x1; } x0; struct { unsigned long long x0; double x1; unsigned int x2; char x3[32] char x4[4] } x1; struct { char x0[4] unsigned int x1; double x2; unsigned int x3; int x4; unsigned int x5; unsigned int x6; } x2; } *)header fromFileV1:(id)v1 fileSize:(unsigned long long *)size;
- (id)initWithFileHandle:(id)handle permission:(unsigned long long)permission datastoreVersion:(unsigned long long)version;
- (id)initWithFileHandleV1:(id)v1 permission:(unsigned long long)permission;
- (id)_printablePath;
- (void)dealloc;
- (BOOL)isValidFrameV1:(void *)v1 expectedState:(unsigned int)state copyOfData:(id *)data frameStatus:(struct { unsigned int x0; unsigned int x1; })status validations:(BOOL)validations enumerationOptions:(unsigned long long)options errorCode:(int *)code;
- (void)enumerateFromOffset:(unsigned long long)offset withCallback:(id /* block */)callback;
- (id)frameWithOffsetV1:(unsigned long long)v1 expectedState:(unsigned int)state;
- (id)frameWithOffset:(unsigned long long)offset expectedState:(unsigned int)state;
- (void)updateFrameStoreIndex;
- (long long)getReverseOffsetIndex:(unsigned long long)index;
- (void)enumerateWithOptions:(unsigned long long)options fromOffset:(unsigned long long)offset usingBlock:(id /* block */)block;
- (void)enumerateWithOptionsV1:(unsigned long long)v1 fromOffset:(unsigned long long)offset usingBlock:(id /* block */)block;
- (void)updateHeader;
- (unsigned char)appendFrameHeaderV1:(struct { union { struct { unsigned int x0; unsigned int x1; } x0; unsigned long long x1; } x0; struct { double x0; double x1; unsigned int x2; unsigned int x3; } x1; } *)v1 offset:(unsigned long long *)offset;
- (BOOL)offsetIsStartOfFrameStore:(unsigned long long)store;
- (unsigned char)writeFrameForBytes:(const void *)bytes length:(unsigned long long)length dataVersion:(unsigned int)version timestamp:(double)timestamp;
- (unsigned char)writeFrameV1ForBytes:(const void *)bytes length:(unsigned long long)length dataVersion:(unsigned int)version timestamp:(double)timestamp outOffset:(unsigned long long *)offset;
- (unsigned char)writeFrameForBytes:(const void *)bytes length:(unsigned long long)length dataVersion:(unsigned int)version timestamp:(double)timestamp outOffset:(unsigned long long *)offset;
- (void)markFrameAsRemoved:(id)removed;
- (void)markFrameAsRemovedV1:(id)v1;
- (void)sync;
- (void *)start;
@end

#endif /* BMFrameStore_h */
