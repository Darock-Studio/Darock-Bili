//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMTranscoder_Image_h
#define IMTranscoder_Image_h
@import Foundation;

#include "IMTranscoder.h"

@interface IMTranscoder_Image : IMTranscoder

@property (nonatomic) double overrideJPEGCompressionQuality;

/* class methods */
+ (id)excludedUTIs;
+ (id)supportedUTIs;
+ (id)findOrientationFromProperties:(id)properties;
+ (unsigned long long)findLargerDimensionFromImage:(struct CGImageSource *)image withProperties:(id)properties toWidth:(id *)width toHeight:(id *)height;
+ (BOOL)_canConvertPNGToJPEG:(struct CGImage *)jpeg;
+ (BOOL)_imageContainsTranslucentPixels:(struct CGImage *)pixels;

/* instance methods */
- (BOOL)_isWideGamutImage:(struct CGImageSource *)image;
- (BOOL)_isHEIFImageFormat:(struct __CFString *)format;
- (BOOL)_isWebPImageFormat:(struct __CFString *)format;
- (long long)shouldTranscodeTransfer:(id)transfer transcoderUserInfo:(id)info target:(long long)target utiType:(id)type allowUnfilteredUTIs:(id)utis fileSizeLimit:(unsigned long long)limit commonCapabilities:(id)capabilities;
- (id)copyImagePropertiesFrom:(struct CGImageSource *)from frameCount:(unsigned long long)count withProps:(id)props inFormat:(struct __CFString *)format outFormat:(struct __CFString *)format;
- (id)copyFramePropertiesFrom:(struct CGImageSource *)from index:(unsigned long long)index inFormat:(struct __CFString *)format outFormat:(struct __CFString *)format;
- (id)_newGeneratedImage:(struct CGImageSource *)image sourceWidth:(id)width sourceHeight:(id)height sourceLength:(unsigned long long)length sourceProps:(id)props target:(long long)target hardwareEncoder:(id)encoder inFormat:(struct __CFString *)format fromFormat:(struct __CFString *)format withMaxLength:(unsigned long long)length withMaxCount:(unsigned long long)count withCompressionQuality:(double)quality enforceMaxes:(BOOL)maxes subsampling:(int)subsampling shouldSkipAuxillaryData:(BOOL)data;
- (void)_setWideGamutProperties:(id)properties scaledImage:(struct CGImage *)image;
- (id)_checkAndSaveImageData:(id)data sourceURL:(id)url inFormat:(struct __CFString *)format withMaxByteSize:(unsigned long long)size actualSize:(unsigned long long *)size usedLengthIndex:(int *)index currentIndex:(int)index;
- (void)copyAuxiliaryImagesFromImageSource:(struct CGImageSource *)source toDestination:(struct CGImageDestination *)destination fromImageAtIndex:(unsigned long long)index scaleFactor:(double)factor;
- (id)_writeImageData:(id)data inFormat:(struct __CFString *)format sourceURL:(id)url;
- (id)_writeImage:(struct CGImageSource *)image sourceURL:(id)url target:(long long)target hardwareEncoder:(id)encoder inFormat:(struct __CFString *)format fromFormat:(struct __CFString *)format withMaxByteSize:(unsigned long long)size maxDimension:(unsigned long long)dimension actualSize:(unsigned long long *)size startingLengthIndex:(int)index usedLengthIndex:(int *)index estimator:(id)estimator isLQMEnabled:(BOOL)lqmenabled telemetry:(id)telemetry;
- (id)_writeRepresentationsForImage:(struct CGImageSource *)image target:(long long)target sourceURL:(id)url sizes:(id)sizes maxDimension:(unsigned long long)dimension srcUTI:(struct __CFString *)uti inFormat:(struct __CFString *)format estimator:(id)estimator isLQMEnabled:(BOOL)lqmenabled telemetry:(id)telemetry;
- (id)_wideGamutImage:(struct CGImageSource *)image sourceURL:(id)url inFormat:(struct __CFString *)format withMaxByteSize:(unsigned long long)size maxDimension:(unsigned long long)dimension actualSize:(unsigned long long *)size telemetry:(id)telemetry;
- (id)_writeHEIFImage:(struct CGImageSource *)heifimage sourceURL:(id)url inFormat:(struct __CFString *)format withMaxByteSize:(unsigned long long)size maxDimension:(unsigned long long)dimension actualSize:(unsigned long long *)size startingLengthIndex:(int)index usedLengthIndex:(int *)index telemetry:(id)telemetry;
- (unsigned long long)_getImageWidth:(struct CGImageSource *)width;
- (id)_getScaleFactorArray:(id)array transferURL:(id)url outputURLs:(id)urls;
- (void)transcodeFileTransfer:(id)transfer utiType:(id)type allowUnfilteredUTIs:(id)utis target:(long long)target sizes:(id)sizes commonCapabilities:(id)capabilities maxDimension:(unsigned long long)dimension transcoderUserInfo:(id)info representations:(long long)representations isLQMEnabled:(BOOL)lqmenabled completionBlock:(id /* block */)block;
- (id)_imMetricsCollectorForLQMQualityEstimatorModel:(struct __CFString *)model suggestedMaxLength:(unsigned long long)length shouldUseQualityEstimatorModel:(BOOL)model inputImageFeatures:(id)features;
- (void)_imMetricsCollectorForLQMQualityEstimatorModeImageTypeHEIC:(unsigned long long)heic shouldUseQualityEstimatorModel:(BOOL)model inputImageFeatures:(id)features metricsDict:(id)dict;
@end

#endif /* IMTranscoder_Image_h */
