//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.0.0.0.0
//
#ifndef MMCSHTTPContext_h
#define MMCSHTTPContext_h
@import Foundation;

#include "C2RequestDelegate-Protocol.h"
#include "NSStreamDelegate-Protocol.h"
#include "NSURLSessionDataDelegate-Protocol.h"
#include "NSURLSessionDataDelegatePrivate-Protocol.h"
#include "NSURLSessionDelegate-Protocol.h"
#include "NSURLSessionTaskDelegate-Protocol.h"
#include "NSURLSessionTaskDelegatePrivate-Protocol.h"

@class NSDictionary, NSInputStream, NSOutputStream, NSString, NSURLSession, NSURLSessionDataTask;

@interface MMCSHTTPContext : NSObject<C2RequestDelegate, NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionTaskDelegatePrivate, NSURLSessionDataDelegatePrivate, NSStreamDelegate>

@property (nonatomic) struct mmcs_http_context { struct _C3Base { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; } x0; int x1; struct Metricsinfo__HTTPMetricsInfo { struct ProtobufCMessage { struct ProtobufCMessageDescriptor * x0; unsigned int x1; struct ProtobufCMessageUnknownField * x2; } x0; char * x1; int x2; int x3; int x4; int x5; int x6; double x7; int x8; double x9; int x10; double x11; double x12; double x13; long long x14; long long x15; int x16; long long x17; unsigned long long x18; int x19; double x20; int x21; long long x22; int x23; long long x24; struct Chunkserver__ErrorResponse * x25; int x26; double x27; int x28; double x29; } x2; struct __CFString * x3; long long x4; double x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; int x13; struct __CFUUID * x14; double x15; double x16; struct __CFError * x17; struct __CFHTTPMessage * x18; unsigned char x19; unsigned long long x20; unsigned long long x21; struct _mmcs_http_request_options * x22; double x23; double x24; struct __CFHTTPMessage * x25; unsigned char x26; struct __CFData * x27; unsigned char x28; struct __sFILE * x29; struct __sFILE * x30; struct Metricsinfo__SocketInfo { struct ProtobufCMessage { struct ProtobufCMessageDescriptor * x0; unsigned int x1; struct ProtobufCMessageUnknownField * x2; } x0; char * x1; char * x2; unsigned int x3; int x4; } x31; struct mmcs_metrics_http_info * x32; undefined * x33; undefined * x34; undefined * x35; undefined * x36; undefined * x37; undefined * x38; undefined * x39; undefined * x40; undefined * x41; void * x42; void * x43; struct os_activity_s * x44; struct voucher_s * x45; struct mmcs_read_stream_pool * x46; struct _mmcs_perform_target * x47; struct __CFData * x48; union { struct mmcs_cfnetwork_http_context * x0; struct mmcs_nsurlsession_http_context * x1; struct mmcs_curl_http_context * x2; void * x3; } x49; } * hc;
@property (retain, nonatomic) NSURLSession *urlSession;
@property (retain, nonatomic) NSInputStream *inputStream;
@property (retain, nonatomic) NSOutputStream *outputStream;
@property (retain, nonatomic) NSURLSessionDataTask *dataTask;
@property (retain, nonatomic) NSDictionary *timingData;
@property (nonatomic) BOOL didOpen;
@property (nonatomic) BOOL isValid;
@property (nonatomic) BOOL isTaskDone;
@property (nonatomic) BOOL requestIsStreamed;
@property (nonatomic) BOOL isHandlingError;
@property (nonatomic) struct os_activity_s * activityMarker;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)stream:(id)stream handleEvent:(unsigned long long)event;
- (long long)writeRequestBody:(const char *)body maxLength:(unsigned long long)length;
- (void)requestBodyDone;
- (void)invalidateStreamPair;
- (BOOL)requestBodyCanAcceptData;
- (long long)countOfRequestBodyBytesSent;
- (BOOL)createNewRequestBodyInputStream;
- (id)initWithContext:(struct mmcs_http_context { struct _C3Base { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; } x0; int x1; struct Metricsinfo__HTTPMetricsInfo { struct ProtobufCMessage { struct ProtobufCMessageDescriptor * x0; unsigned int x1; struct ProtobufCMessageUnknownField * x2; } x0; char * x1; int x2; int x3; int x4; int x5; int x6; double x7; int x8; double x9; int x10; double x11; double x12; double x13; long long x14; long long x15; int x16; long long x17; unsigned long long x18; int x19; double x20; int x21; long long x22; int x23; long long x24; struct Chunkserver__ErrorResponse * x25; int x26; double x27; int x28; double x29; } x2; struct __CFString * x3; long long x4; double x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; int x13; struct __CFUUID * x14; double x15; double x16; struct __CFError * x17; struct __CFHTTPMessage * x18; unsigned char x19; unsigned long long x20; unsigned long long x21; struct _mmcs_http_request_options * x22; double x23; double x24; struct __CFHTTPMessage * x25; unsigned char x26; struct __CFData * x27; unsigned char x28; struct __sFILE * x29; struct __sFILE * x30; struct Metricsinfo__SocketInfo { struct ProtobufCMessage { struct ProtobufCMessageDescriptor * x0; unsigned int x1; struct ProtobufCMessageUnknownField * x2; } x0; char * x1; char * x2; unsigned int x3; int x4; } x31; struct mmcs_metrics_http_info * x32; undefined * x33; undefined * x34; undefined * x35; undefined * x36; undefined * x37; undefined * x38; undefined * x39; undefined * x40; undefined * x41; void * x42; void * x43; struct os_activity_s * x44; struct voucher_s * x45; struct mmcs_read_stream_pool * x46; struct _mmcs_perform_target * x47; struct __CFData * x48; union { struct mmcs_cfnetwork_http_context * x0; struct mmcs_nsurlsession_http_context * x1; struct mmcs_curl_http_context * x2; void * x3; } x49; } *)context options:(const struct mmcs_http_context_options { struct __CFString * x0; struct __CFHTTPMessage * x1; struct _mmcs_http_request_options * x2; double x3; double x4; unsigned long long x5; unsigned long long x6; undefined * x7; undefined * x8; undefined * x9; undefined * x10; undefined * x11; undefined * x12; undefined * x13; void * x14; undefined * x15; void * x16; unsigned char x17; double x18; struct os_activity_s * x19; } *)options activityMarker:(struct os_activity_s *)marker;
- (struct __CFError *)send;
- (void)dealloc;
- (void)cleanupRequest;
- (void)cleanupResponse;
- (void)invalidate;
- (void)URLSession:(id)urlsession task:(id)task willPerformHTTPRedirection:(id)httpredirection newRequest:(id)request completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession task:(id)task didSendBodyData:(long long)data totalBytesSent:(long long)sent totalBytesExpectedToSend:(long long)send;
- (void)URLSession:(id)urlsession task:(id)task needNewBodyStream:(id /* block */)stream;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithError:(id)error;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession task:(id)task _willSendRequestForEstablishedConnection:(id)connection completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession _taskIsWaitingForConnection:(id)connection;
- (void)URLSession:(id)urlsession task:(id)task _conditionalRequirementsChanged:(BOOL)changed;
- (void)URLSession:(id)urlsession _willRetryBackgroundDataTask:(id)task withError:(id)error;
@end

#endif /* MMCSHTTPContext_h */
