//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1387.3.4.0.0
//
#ifndef RemoteAUPBServer_h
#define RemoteAUPBServer_h
@import Foundation;

#include "AUPBServing-Protocol.h"

@class NSXPCConnection;
@protocol {vector<NSObject<OS_dispatch_semaphore> *, std::allocator<NSObject<OS_dispatch_semaphore> *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<NSObject<OS_dispatch_semaphore> **, std::allocator<NSObject<OS_dispatch_semaphore> *>>="__value_"^@}};

@interface RemoteAUPBServer : NSObject {
  /* instance variables */
  struct vector<NSObject<OS_dispatch_semaphore> *, std::allocator<NSObject<OS_dispatch_semaphore> *>> { __end_ * *__begin_; __end_cap_ * * x0; struct __compressed_pair<NSObject<OS_dispatch_semaphore> **, std::allocator<NSObject<OS_dispatch_semaphore> *>> { id *__value_; } x1; } replySemas;
}

@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (retain, nonatomic) NSObject<AUPBServing> *proxyInterface;
@property (nonatomic) struct OpaqueAUPBServer * ref;

/* instance methods */
- (void)dealloc;
- (id)description;
- (void)addSema:(id)sema;
- (void)removeSema:(id)sema;
- (void)signalAllSemaphores;
@end

#endif /* RemoteAUPBServer_h */
