//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1387.3.4.0.0
//
#ifndef AUPBClientManager_h
#define AUPBClientManager_h
@import Foundation;

#include "AUPBInspecting-Protocol.h"
#include "AUPBRegistrarHosting-Protocol.h"
#include "AUPBRegistrarListening-Protocol.h"

@class NSMutableArray, NSString, NSXPCConnection;
@protocol OS_dispatch_queue, {vector<NewServerListener, std::allocator<NewServerListener>>="__begin_"^{NewServerListener}"__end_"^{NewServerListener}"__end_cap_"{__compressed_pair<NewServerListener *, std::allocator<NewServerListener>>="__value_"^{NewServerListener}}}, {vector<PropertyListener, std::allocator<PropertyListener>>="__begin_"^{PropertyListener}"__end_"^{PropertyListener}"__end_cap_"{__compressed_pair<PropertyListener *, std::allocator<PropertyListener>>="__value_"^{PropertyListener}}};

@interface AUPBClientManager : NSObject<AUPBRegistrarListening, AUPBInspecting> {
  /* instance variables */
  NSXPCConnection *mRegistrarConnection;
  NSObject<AUPBRegistrarHosting> *mProxyInterface;
  NSMutableArray *mRemoteServers;
  struct vector<PropertyListener, std::allocator<PropertyListener>> { struct PropertyListener *__begin_; struct PropertyListener *__end_; struct __compressed_pair<PropertyListener *, std::allocator<PropertyListener>> { struct PropertyListener *__value_; } __end_cap_; } mPropertyListeners;
  struct vector<NewServerListener, std::allocator<NewServerListener>> { struct NewServerListener *__begin_; struct NewServerListener *__end_; struct __compressed_pair<NewServerListener *, std::allocator<NewServerListener>> { struct NewServerListener *__value_; } __end_cap_; } mNewServerListeners;
  unsigned int mServerRefCounter;
  NSObject<OS_dispatch_queue> *mTouchServersQueue;
  int mNotifyToken;
  BOOL mValidToken;
  BOOL mConnectionAcknowledged;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)zone;

/* instance methods */
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)retain;
- (unsigned long long)retainCount;
- (void)release;
- (id)autorelease;
- (void)dealloc;
- (id)init;
- (void)startRegistarConnection;
- (void)handleRegistrarCrash;
- (void)newServerAdded:(id)added;
- (struct OpaqueAUPB *)aupbRefFromHandle:(unsigned int)handle;
- (struct OpaqueRemoteAudioUnit *)auRefFromHandle:(unsigned int)handle;
- (unsigned int)auHandleFromRef:(struct OpaqueRemoteAudioUnit *)ref;
- (void)processingBlock:(unsigned int)block propertyChanged:(unsigned int)changed;
- (void)processingBlock:(unsigned int)block propertiesChanged:(id)changed withQualifierData:(id)data;
- (id)serverFromRef:(struct OpaqueAUPBServer *)ref;
- (int)addNewServerListener:(undefined *)listener withUserData:(void *)data;
- (int)removeServerListener:(undefined *)listener withUserData:(void *)data;
- (int)addPropertyListener:(undefined *)listener onServer:(struct OpaqueAUPBServer *)server block:(struct OpaqueAUPB *)block property:(unsigned int)property withUserData:(void *)data;
- (int)removePropertyListener:(undefined *)listener onServer:(struct OpaqueAUPBServer *)server block:(struct OpaqueAUPB *)block property:(unsigned int)property withUserData:(void *)data;
- (int)removePropertyListenersForServer:(struct OpaqueAUPBServer *)server;
- (int)copyPBProperty:(unsigned int)pbproperty onServer:(struct OpaqueAUPBServer *)server block:(struct OpaqueAUPB *)block intoValue:(const void * *)value;
- (int)setPBProperty:(unsigned int)pbproperty onServer:(struct OpaqueAUPBServer *)server block:(struct OpaqueAUPB *)block value:(void *)value;
- (int)getAUPropertyInfo:(unsigned int)info onServer:(struct OpaqueAUPBServer *)server audioUnit:(struct OpaqueRemoteAudioUnit *)unit scope:(unsigned int)scope element:(unsigned int)element intoDataSize:(unsigned int *)size writeable:(char *)writeable;
- (int)getAUProperty:(unsigned int)auproperty onServer:(struct OpaqueAUPBServer *)server audioUnit:(struct OpaqueRemoteAudioUnit *)unit scope:(unsigned int)scope element:(unsigned int)element copiedIntoBufer:(void * *)bufer withSize:(unsigned int *)size;
- (int)setAUProperty:(unsigned int)auproperty onServer:(struct OpaqueAUPBServer *)server audioUnit:(struct OpaqueRemoteAudioUnit *)unit scope:(unsigned int)scope element:(unsigned int)element withValue:(const void *)value size:(unsigned int)size;
- (int)getAUParameter:(unsigned int)auparameter onServer:(struct OpaqueAUPBServer *)server audioUnit:(struct OpaqueRemoteAudioUnit *)unit scope:(unsigned int)scope element:(unsigned int)element copiedIntoValue:(float *)value;
- (int)setAUParameter:(unsigned int)auparameter onServer:(struct OpaqueAUPBServer *)server audioUnit:(struct OpaqueRemoteAudioUnit *)unit scope:(unsigned int)scope element:(unsigned int)element value:(float)value;
- (int)getSerialAUProperty:(unsigned int)auproperty onServer:(struct OpaqueAUPBServer *)server audioUnit:(struct OpaqueRemoteAudioUnit *)unit scope:(unsigned int)scope element:(unsigned int)element inData:(id *)data;
- (int)setSerialAUProperty:(unsigned int)auproperty onServer:(struct OpaqueAUPBServer *)server audioUnit:(struct OpaqueRemoteAudioUnit *)unit scope:(unsigned int)scope element:(unsigned int)element toData:(id)data;
@end

#endif /* AUPBClientManager_h */
