//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1387.3.4.0.0
//
#ifndef AUAudioUnitBusArray_h
#define AUAudioUnitBusArray_h
@import Foundation;

#include "AUAudioUnit.h"
#include "NSFastEnumeration-Protocol.h"

@class NSMutableArray;
@protocol struct vector<BusPropertyObserver, std::allocator<BusPropertyObserver>> { struct BusPropertyObserver * x0; struct BusPropertyObserver * x1; struct __compressed_pair<BusPropertyObserver *, std::allocator<BusPropertyObserver>> { struct BusPropertyObserver * x0; } x2; }, {vector<BusPropertyObserver, std::allocator<BusPropertyObserver>>="__begin_"^{BusPropertyObserver}"__end_"^{BusPropertyObserver}"__end_cap_"{__compressed_pair<BusPropertyObserver *, std::allocator<BusPropertyObserver>>="__value_"^{BusPropertyObserver}}};

@interface AUAudioUnitBusArray : NSObject<NSFastEnumeration> {
  /* instance variables */
  NSMutableArray *_busses;
}

@property (nonatomic) struct vector<BusPropertyObserver, std::allocator<BusPropertyObserver>> { struct BusPropertyObserver * x0; struct BusPropertyObserver * x1; struct __compressed_pair<BusPropertyObserver *, std::allocator<BusPropertyObserver>> { struct BusPropertyObserver * x0; } x2; } observers;
@property (readonly, nonatomic) unsigned long long count;
@property (readonly, nonatomic) BOOL countChangeable;
@property (readonly, nonatomic) AUAudioUnit *ownerAudioUnit;
@property (readonly, nonatomic) long long busType;

/* instance methods */
- (id)init;
- (id)initWithAudioUnit:(id)unit busType:(long long)type busses:(id)busses;
- (id)initWithAudioUnit:(id)unit busType:(long long)type;
- (void)dealloc;
- (id)objectAtIndexedSubscript:(unsigned long long)subscript;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
- (BOOL)setBusCount:(unsigned long long)count error:(id *)error;
- (void)addObserverToAllBusses:(id)busses forKeyPath:(id)path options:(unsigned long long)options context:(void *)context;
- (void)removeObserverFromAllBusses:(id)busses forKeyPath:(id)path context:(void *)context;
- (void)indexBusses;
- (void)replaceBusses:(id)busses;
- (BOOL)isCountChangeable;
@end

#endif /* AUAudioUnitBusArray_h */
