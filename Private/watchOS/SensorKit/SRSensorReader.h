//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 707.0.47.0.0
//
#ifndef SRSensorReader_h
#define SRSensorReader_h
@import Foundation;

#include "SRAuthorizationClient.h"
#include "SRAuthorizationClientDelegate-Protocol.h"
#include "SRDaemonNotification.h"
#include "SRDaemonNotificationDelegate-Protocol.h"
#include "SRDatastore.h"

@class NSDate, NSDictionary, NSString, NSXPCConnection;
@protocol SRSensorReaderDelegate;

@interface SRSensorReader : NSObject<SRAuthorizationClientDelegate, SRDaemonNotificationDelegate> {
  /* instance variables */
  SRDaemonNotification *_daemonNotification;
  NSDictionary *_deviceDetails;
  atomic int _authState;
}

@property (copy) NSString *canonicalSensor;
@property (readonly, retain) SRDatastore *datastore;
@property (retain) NSDictionary *nextDatastoreFiles;
@property BOOL connectionDidInvalidate;
@property (retain) SRAuthorizationClient *authorizationClient;
@property (retain, nonatomic) NSXPCConnection *connection;
@property (copy) NSString *bundleId;
@property (retain) NSDate *_lastModifiedAuthorizationTime;
@property (retain) NSString *requestedSensor;
@property (readonly, nonatomic) Class sampleClass;
@property (readonly, nonatomic) Class exportingSampleClass;
@property (nonatomic) BOOL bypassHoldingPeriod;
@property (readonly, nonatomic) double earliestEligibleTime;
@property (readonly, nonatomic) double serviceStartTime;
@property (readonly) long long authorizationStatus;
@property (readonly, copy) NSString *sensor;
@property (weak) NSObject<SRSensorReaderDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)_requestAuthorizationMigrationForSensors:(id)sensors completion:(id /* block */)completion;
+ (id /* block */)createExportDataWithCompletionHandler:(id /* block */)handler;
+ (id /* block */)createExportDataForServices:(id)services withCompletionHandler:(id /* block */)handler;
+ (void)initialize;
+ (id)clientInterface;
+ (id)remoteInterface;
+ (id)connectionToDaemon;
+ (id)new;
+ (void)requestAuthorizationForSensors:(id)sensors completion:(id /* block */)completion;
+ (void)requestAuthorizationForBundle:(id)bundle sensors:(id)sensors withCompletionHandler:(id /* block */)handler;
+ (void)requestAuthorizationForBundle:(id)bundle sensors:(id)sensors legacyPromptErrorBehavior:(BOOL)behavior withCompletionHandler:(id /* block */)handler;
+ (void)authorizationRequestStatusForBundle:(id)bundle sensors:(id)sensors completionHandler:(id /* block */)handler;

/* instance methods */
- (id /* block */)createExportDataWithCompletionHandler:(id /* block */)handler;
- (id)init;
- (id)initWithSensor:(id)sensor;
- (id)initWithSensor:(id)sensor bundle:(id)bundle;
- (id)initWithSensor:(id)sensor xpcConnection:(id)connection daemonNotification:(id)notification authorizationClient:(id)client bundleId:(id)id;
- (void)dealloc;
- (void)daemonNotificationDaemonDidStart:(id)start;
- (void)setupConnection;
- (void)setSampleClassFromDescription:(id)description;
- (void)setExportingSampleFromDescription:(id)description;
- (void)fetchReaderMetadata;
- (void)resetDatastoreFiles:(id)files;
- (BOOL)fetchingRequest:(id)request didFetchResult:(id)result;
- (void)didCompleteFetch:(id)fetch;
- (void)fetchingRequest:(id)request failedWithError:(id)error;
- (void)didFetchDevices:(id)devices;
- (void)fetchDevicesDidFailWithError:(id)error;
- (void)sensorReaderWillStartRecording;
- (void)startRecordingFailedWithError:(id)error;
- (void)sensorReaderDidStopRecording;
- (void)stopRecordingFailedWithError:(id)error;
- (void)didChangeAuthorizationStatus:(long long)status;
- (void)fetch:(id)fetch;
- (void)continueFetchRequest:(id)request from:(double)from to:(double)to withDatastoreFiles:(id)files callback:(id /* block */)callback;
- (void)fetchSampleBytesFrom:(double)from to:(double)to inSegment:(id)segment fetchRequest:(id)request sampleCallback:(id /* block */)callback;
- (void)fetchSampleBytesFrom:(double)from to:(double)to inSegment:(id)segment fetchRequest:(id)request retryAttempt:(long long)attempt sampleCallback:(id /* block */)callback;
- (void)startRecording;
- (void)startRecordingWithCompletionHandler:(id /* block */)handler;
- (void)_startRecordingWithSensorConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)stopRecording;
- (void)stopRecordingWithCompletionHandler:(id /* block */)handler;
- (void)fetchDevices;
- (void)fetchDevicesWithRetryAttempt:(int)attempt;
- (void)fetchDevices:(id /* block */)devices;
- (BOOL)isAuthorized;
- (BOOL)_updateAuthorizationStatusWithAuthorizedServices:(id)services deniedServices:(id)services dataCollectionEnabled:(BOOL)enabled onboardingCompleted:(BOOL)completed lastModifiedTimes:(id)times forBundleIdentifier:(id)identifier previousAuthorizationStatus:(long long)status;
- (BOOL)_updateAuthorizationStatusWithAuthorizedServices:(id)services deniedServices:(id)services dataCollectionEnabled:(BOOL)enabled onboardingCompleted:(BOOL)completed lastModifiedTimes:(id)times forBundleIdentifier:(id)identifier;
- (void)authorizedServicesDidChange:(id)change deniedServices:(id)services dataCollectionEnabled:(BOOL)enabled onboardingCompleted:(BOOL)completed lastModifiedTimes:(id)times forBundleIdentifier:(id)identifier;
@end

#endif /* SRSensorReader_h */
