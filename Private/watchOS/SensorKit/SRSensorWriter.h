//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 707.0.47.0.0
//
#ifndef SRSensorWriter_h
#define SRSensorWriter_h
@import Foundation;

#include "SRAuthorizationClientDelegate-Protocol.h"
#include "SRAuthorizationStore.h"
#include "SRAuthorizationStoreReaderAuthorizationDelegate-Protocol.h"
#include "SRDaemonNotification.h"
#include "SRDaemonNotificationDelegate-Protocol.h"
#include "SRDatastore.h"
#include "SRDefaults.h"
#include "SRSensorWriterDelegate-Protocol.h"
#include "SRTCCStore-Protocol.h"

@class NSArray, NSCache, NSDictionary, NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface SRSensorWriter : NSObject<SRAuthorizationStoreReaderAuthorizationDelegate, SRDaemonNotificationDelegate, SRAuthorizationClientDelegate> {
  /* instance variables */
  SRDaemonNotification *_daemonNotification;
  SRDefaults *_defaults;
  int _notifyToken;
}

@property (copy) NSString *sensorIdentifier;
@property (readonly, retain) SRDatastore *datastore;
@property (retain) NSDictionary *nextDatastoreFiles;
@property BOOL requestNewSegmentInFlight;
@property BOOL authorized;
@property BOOL connectionDidInterrupt;
@property BOOL connectionDidInvalidate;
@property (retain) NSXPCConnection *connection;
@property BOOL retryGetMonitoring;
@property long long _writerAuthorizationStatus;
@property (readonly, retain, nonatomic) NSString *writerAuthorizationService;
@property (retain) NSObject<SRTCCStore> *tccStore;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *writerAuthorizationUpdateQueue;
@property (retain, nonatomic) SRAuthorizationStore *authStore;
@property (retain, nonatomic) NSCache *eligibilityCache;
@property (nonatomic) double roundingInterval;
@property (retain) NSDictionary *lastMetadata;
@property unsigned long long lastMetadataContinuousTime;
@property (copy, nonatomic) NSArray *_requestedConfigurations;
@property BOOL monitoring;
@property (weak) NSObject<SRSensorWriterDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)clientInterface;
+ (id)remoteInterface;
+ (id)connectionToDaemon;

/* instance methods */
- (id)init;
- (id)initWithIdentifier:(id)identifier;
- (id)initWithIdentifier:(id)identifier xpcConnection:(id)connection daemonNotification:(id)notification authStore:(id)store tccStore:(id)store;
- (void)dealloc;
- (id)chooseAuthStore;
- (void)daemonNotificationDaemonDidStart:(id)start;
- (void)daemonNotificationDaemonDidChangeTimeSignificantly:(id)significantly;
- (void)daemonNotificationDaemonDidResetDatastore:(id)datastore;
- (void)setupConnection;
- (void)checkForMonitoring;
- (void)registerWithDaemonForWritingIfNeededWithReply:(id /* block */)reply;
- (void)daemonForcedResetDatastoreFiles:(id)files;
- (void)resetDatastoreFiles:(id)files;
- (void)provideSample:(id)sample;
- (BOOL)provideSample:(id)sample error:(id *)error;
- (void)provideSample:(id)sample timestamp:(double)timestamp;
- (BOOL)provideSample:(id)sample continuousTimestamp:(unsigned long long)timestamp error:(id *)error;
- (BOOL)provideSample:(id)sample timestamp:(double)timestamp error:(id *)error;
- (void)provideSampleData:(id)data;
- (BOOL)provideSampleData:(id)data error:(id *)error;
- (void)provideSampleData:(id)data continuousTimestamp:(unsigned long long)timestamp;
- (BOOL)provideSampleData:(id)data continuousTimestamp:(unsigned long long)timestamp error:(id *)error;
- (void)provideSampleData:(id)data timestamp:(double)timestamp;
- (BOOL)provideSampleData:(id)data timestamp:(double)timestamp error:(id *)error;
- (void)provideSampleBytes:(const void *)bytes length:(unsigned long long)length;
- (BOOL)provideSampleBytes:(const void *)bytes length:(unsigned long long)length error:(id *)error;
- (void)provideSampleBytes:(const void *)bytes length:(unsigned long long)length continuousTimestamp:(unsigned long long)timestamp;
- (BOOL)provideSampleBytes:(const void *)bytes length:(unsigned long long)length continuousTimestamp:(unsigned long long)timestamp error:(id *)error;
- (void)provideSampleBytes:(const void *)bytes length:(unsigned long long)length timestamp:(double)timestamp;
- (BOOL)provideSampleBytes:(const void *)bytes length:(unsigned long long)length timestamp:(double)timestamp error:(id *)error;
- (void)requestNewSegment;
- (void)setMetadata:(id)metadata;
- (void)setMetadata:(id)metadata continuousTimestamp:(unsigned long long)timestamp;
- (void)setMetadata:(id)metadata continuousTimestamp:(unsigned long long)timestamp datastore:(id)datastore;
- (BOOL)_setSensorConfiguration:(id)configuration error:(id *)error;
- (BOOL)_setSensorConfiguration:(id)configuration continuousTimestamp:(unsigned long long)timestamp error:(id *)error;
- (void)didReceiveUpdateToConfigurationRequests;
- (BOOL)isMonitoring;
- (void)_requestWriterAuthorizationWithCompletion:(id /* block */)completion;
- (void)startUpdatingAuthorizations;
- (void)updateWriterAuthorizationStatus;
- (void)authorizationStore:(id)store didDetermineInitialAuthorizationValues:(id)values;
- (void)authorizationStore:(id)store didUpdateAuthorizationsForBundleId:(id)id sensors:(id)sensors;
- (void)evaluateAuthorizationState;
- (void)evaluateAuthorizationStateWithNewValue:(BOOL)value;
- (void)flushDatabase;
- (void)authorizedServicesDidChange:(id)change deniedServices:(id)services dataCollectionEnabled:(BOOL)enabled onboardingCompleted:(BOOL)completed lastModifiedTimes:(id)times forBundleIdentifier:(id)identifier;
- (void)bundleEligibility:(id)eligibility completion:(id /* block */)completion;
@end

#endif /* SRSensorWriter_h */
