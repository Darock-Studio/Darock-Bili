//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDXPCPeriodicActivity_h
#define HDXPCPeriodicActivity_h
@import Foundation;

#include "HDXPCActivityShim-Protocol.h"

@class NSDate, NSString;
@protocol OS_os_log, OS_xpc_object;

@interface HDXPCPeriodicActivity : NSObject<HDXPCActivityShim> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  atomic BOOL _registered;
  long long _state;
  BOOL _conditionsChanged;
  id /* block */ _handler;
  NSObject<HDXPCActivityShim> *_activityShim;
}

@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, nonatomic) NSObject<OS_os_log> *loggingCategory;
@property (readonly, nonatomic) double baseInterval;
@property (copy) NSObject<OS_xpc_object> *criteria;
@property (readonly, nonatomic) long long errorCount;
@property (readonly, nonatomic) NSDate *lastSuccessfulRunDate;
@property (readonly, copy, nonatomic) NSDate *earliestRunDate;
@property (readonly) NSObject<OS_xpc_object> *currentActivity;
@property (readonly, copy) NSObject<OS_xpc_object> *currentCriteria;
@property (readonly, nonatomic) BOOL shouldDefer;
@property (readonly, nonatomic) BOOL isWaiting;

/* class methods */
+ (void)registerDisabledPeriodicActivityWithName:(id)name loggingCategory:(id)category;

/* instance methods */
- (id)initWithName:(id)name baseInterval:(double)interval criteria:(id)criteria loggingCategory:(id)category handler:(id /* block */)handler;
- (void)dealloc;
- (id)description;
- (void)registerActivity;
- (void)unregisterActivity;
- (void)didPerformActivityWithResult:(long long)result minimumRetryInterval:(double)interval activityStartDate:(id)date error:(id)error;
- (void)externalConditionsChanged;
- (double)modifiedIntervalForCurrentState;
- (void)updateCriteriaForModifiedIntervalForCurrentState;
- (void)resetIntervalWithCriteria:(id)criteria;
- (void)xpcActivity_register:(const char *)activity_register criteria:(id)criteria handler:(id /* block */)handler;
- (void)xpcActivity_unregister:(const char *)activity_unregister;
- (BOOL)xpcActivity_shouldDefer:(id)defer;
- (void)xpcActivity_setCriteria:(id)criteria activity:(id)activity;
- (id)xpcActivity_copyCriteria:(id)criteria;
- (long long)xpcActivity_getState:(id)state;
- (BOOL)xpcActivity_setState:(long long)state activity:(id)activity;
- (BOOL)xpcActivity_setCompletionStatus:(long long)status activity:(id)activity;
- (void)unitTest_setActivityShim:(id)shim;
- (void)unitTest_reset;
- (void)unitTest_synthesizeActivityFireWithCompletion:(id /* block */)completion;
@end

#endif /* HDXPCPeriodicActivity_h */
