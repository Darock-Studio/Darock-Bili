//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 81.0.0.0.0
//
#ifndef PRLikeness_h
#define PRLikeness_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"

@class NSData, NSDate, NSMutableSet, NSSet, NSString;

@interface PRLikeness : NSObject<NSSecureCoding> {
  /* instance variables */
  struct CGImage * _staticRepresentation;
}

@property (nonatomic) BOOL isCurrent;
@property (nonatomic) unsigned long long version;
@property (retain, nonatomic) NSDate *expirationDate;
@property (retain, nonatomic) NSDate *softExpirationDate;
@property (retain, nonatomic) NSData *staticRepresentationData;
@property (retain, nonatomic) NSString *ownerID;
@property (nonatomic) unsigned long long type;
@property (nonatomic) unsigned long long scope;
@property (nonatomic) long long source;
@property (readonly, nonatomic) NSString *typeDescription;
@property (readonly, nonatomic) NSString *scopeDescription;
@property (retain, nonatomic) NSDate *insertionDate;
@property (retain, nonatomic) NSDate *creationDate;
@property (retain, nonatomic) NSSet *dirtyProperties;
@property (readonly, nonatomic) BOOL isDirty;
@property (copy, nonatomic) NSData *recipe;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropRectForTopLeftOrigin;
@property (readonly, @dynamic, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropRectForBottomLeftOrigin;
@property (readonly, nonatomic) NSString *uniqueIdentifier;
@property (copy, nonatomic) NSString *externalIdentifier;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)monogramWithRecipe:(id)recipe staticRepresentation:(struct CGImage *)representation;
+ (id)monogramWithScope:(unsigned long long)scope recipe:(id)recipe staticRepresentation:(struct CGImage *)representation;
+ (id)photoWithImage:(struct CGImage *)image cropRectForTopLeftOrigin:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })origin;
+ (id)photoWithImage:(struct CGImage *)image cropRectForBottomLeftOrigin:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })origin;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_flippedRectForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect relativeToImage:(struct CGImage *)image;
+ (id)photoWithImage:(struct CGImage *)image cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
+ (id)photoWithImage:(struct CGImage *)image;
+ (id)photoWithScope:(unsigned long long)scope image:(struct CGImage *)image;
+ (id)_photoWithScope:(unsigned long long)scope image:(struct CGImage *)image cropRectForTopLeftOrigin:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })origin;
+ (id)diddlySquatLikeness;
+ (id)likenessWithPropagatedData:(id)data;
+ (BOOL)automaticallyNotifiesObserversOfCropRectForTopLeftOrigin;
+ (id)descriptionForScope:(unsigned long long)scope;
+ (unsigned long long)scopeFromDescription:(id)description;
+ (id)_dateFormatter;

/* instance methods */
- (BOOL)isDiddlySquat;
- (id)init;
- (id)_initWithIdentifier:(id)identifier;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)dataForPropagation;
- (void)dealloc;
- (void)setCurrent:(BOOL)current;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cropRect;
- (void)setCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGImage *)staticRepresentation;
- (void)setStaticRepresentation:(struct CGImage *)representation;
- (id)description;
- (void)clearDirtyProperties;
@end

#endif /* PRLikeness_h */
