//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef _MTLDeserializer_h
#define _MTLDeserializer_h
@import Foundation;

#include "MTLDeserializationContext-Protocol.h"
#include "MTLDeserializer-Protocol.h"
#include "MTLDeserializerObjectDelegate-Protocol.h"

@class MTLSharedEventListener, NSString;
@protocol MTLCommandQueue, MTLDevice, OS_dispatch_queue;

@interface _MTLDeserializer : NSObject<MTLDeserializer, MTLDeserializationContext> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *submissionQueue;
  NSObject<OS_dispatch_queue> *completionQueue;
  NSObject<MTLCommandQueue> *commandQueue;
  NSObject<MTLDeserializerObjectDelegate> *_objectDelegate;
  MTLSharedEventListener *eventListener;
}

@property (readonly) NSObject<MTLDevice> *device;
@property (readonly) BOOL generateResourceRefs;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDevice:(id)device generateResourceRefs:(BOOL)refs objectDelegate:(id)delegate createQueues:(BOOL)queues;
- (id)initWithDevice:(id)device generateResourceRefs:(BOOL)refs;
- (id)initWithDevice:(id)device;
- (void)dealloc;
- (unsigned int)registerCommandQueueForReference:(unsigned int)reference commandQueue:(id)queue;
- (id)getCommandQueueForReference:(unsigned int)reference;
- (void)deleteCommandQueueForReference:(unsigned int)reference;
- (unsigned int)registerFunctionForReference:(unsigned int)reference function:(id)function;
- (id)getFunctionForReference:(unsigned int)reference;
- (void)deleteFunctionForReference:(unsigned int)reference;
- (unsigned int)registerComputePipelineStateForReference:(unsigned int)reference computePipeline:(id)pipeline;
- (id)getComputePipelineStateForReference:(unsigned int)reference;
- (void)deleteComputePipelineStateForReference:(unsigned int)reference;
- (unsigned int)registerRenderPipelineStateForReference:(unsigned int)reference renderPipeline:(id)pipeline;
- (id)getRenderPipelineStateForReference:(unsigned int)reference;
- (void)deleteRenderPipelineStateForReference:(unsigned int)reference;
- (unsigned int)registerBufferForReference:(unsigned int)reference buffer:(id)buffer;
- (id)getBufferForReference:(unsigned int)reference;
- (void)deleteBufferForReference:(unsigned int)reference;
- (unsigned int)registerTextureForReference:(unsigned int)reference texture:(id)texture;
- (id)getTextureForReference:(unsigned int)reference;
- (void)deleteTextureForReference:(unsigned int)reference;
- (unsigned int)registerSamplerStateForReference:(unsigned int)reference sampler:(id)sampler;
- (id)getSamplerStateForReference:(unsigned int)reference;
- (void)deleteSamplerStateForReference:(unsigned int)reference;
- (unsigned int)registerDepthStencilStateForReference:(unsigned int)reference depthStencil:(id)stencil;
- (id)getDepthStencilStateForReference:(unsigned int)reference;
- (void)deleteDepthStencilStateForReference:(unsigned int)reference;
- (unsigned int)registerFenceForReference:(unsigned int)reference fence:(id)fence;
- (id)getFenceForReference:(unsigned int)reference;
- (void)deleteFenceForReference:(unsigned int)reference;
- (unsigned int)registerArgumentBufferLayoutForReference:(unsigned int)reference argumentBufferLayout:(id)layout;
- (id)getArgumentBufferLayoutForReference:(unsigned int)reference;
- (void)deleteArgumentBufferLayoutForReference:(unsigned int)reference;
- (unsigned int)registerArgumentEncoderForReference:(unsigned int)reference argumentEncoder:(id)encoder;
- (id)getArgumentEncoderForReference:(unsigned int)reference;
- (void)deleteArgumentEncoderForReference:(unsigned int)reference;
- (unsigned int)registerHeapForReference:(unsigned int)reference heap:(id)heap;
- (id)getHeapForReference:(unsigned int)reference;
- (void)deleteHeapForReference:(unsigned int)reference;
- (unsigned int)registerEventForReference:(unsigned int)reference event:(id)event;
- (id)getEventForReference:(unsigned int)reference;
- (void)deleteEventForReference:(unsigned int)reference;
- (id)newTextureWithDescriptor:(struct { unsigned int x0; struct { unsigned int x0 :4; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :8; unsigned int x6 :16; unsigned int x7; unsigned int x8; unsigned int x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13; unsigned long long x14; } x1; } *)descriptor;
- (BOOL)newTextureWithDescriptor:(struct { unsigned int x0; struct { unsigned int x0 :4; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :8; unsigned int x6 :16; unsigned int x7; unsigned int x8; unsigned int x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13; unsigned long long x14; } x1; } *)descriptor allocator:(id)allocator;
- (id)newSamplerStateWithDescriptor:(struct { unsigned int x0; struct { unsigned int x0 :2; unsigned int x1 :2; unsigned int x2 :1; unsigned int x3 :3; unsigned int x4 :4; unsigned int x5 :4; unsigned int x6 :4; unsigned int x7 :4; unsigned int x8 :2; unsigned int x9 :5; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :3; unsigned int x13 :28; float x14; float x15; unsigned long long x16; } x1; } *)descriptor;
- (BOOL)newSamplerStateWithDescriptor:(struct { unsigned int x0; struct { unsigned int x0 :2; unsigned int x1 :2; unsigned int x2 :1; unsigned int x3 :3; unsigned int x4 :4; unsigned int x5 :4; unsigned int x6 :4; unsigned int x7 :4; unsigned int x8 :2; unsigned int x9 :5; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :3; unsigned int x13 :28; float x14; float x15; unsigned long long x16; } x1; } *)descriptor allocator:(id)allocator;
- (id)newDepthStencilStateWithDescriptor:(struct { unsigned int x0; struct { unsigned int x0 :3; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :26; struct { unsigned int x0 :3; unsigned int x1 :3; unsigned int x2 :3; unsigned int x3 :3; unsigned int x4 :20; unsigned int x5; unsigned int x6; } x5; struct { unsigned int x0 :3; unsigned int x1 :3; unsigned int x2 :3; unsigned int x3 :3; unsigned int x4 :20; unsigned int x5; unsigned int x6; } x6; } x1; } *)descriptor;
- (BOOL)newDepthStencilStateWithDescriptor:(struct { unsigned int x0; struct { unsigned int x0 :3; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :26; struct { unsigned int x0 :3; unsigned int x1 :3; unsigned int x2 :3; unsigned int x3 :3; unsigned int x4 :20; unsigned int x5; unsigned int x6; } x5; struct { unsigned int x0 :3; unsigned int x1 :3; unsigned int x2 :3; unsigned int x3 :3; unsigned int x4 :20; unsigned int x5; unsigned int x6; } x6; } x1; } *)descriptor allocator:(id)allocator;
- (id)newHeapWithDescriptor:(struct { unsigned int x0; struct { unsigned long long x0; unsigned short x1; unsigned char x2; unsigned char x3; } x1; } *)descriptor;
- (BOOL)newHeapWithDescriptor:(struct { unsigned int x0; struct { unsigned long long x0; unsigned short x1; unsigned char x2; unsigned char x3; } x1; } *)descriptor allocator:(id)allocator;
- (BOOL)newTextureWithHeap:(struct { unsigned int x0; unsigned int x1; struct { unsigned int x0 :4; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :8; unsigned int x6 :16; unsigned int x7; unsigned int x8; unsigned int x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13; unsigned long long x14; } x2; unsigned int x3 :1; unsigned int x4 :31; unsigned long long x5; } *)heap allocator:(id)allocator;
- (BOOL)newBufferWithHeap:(struct { unsigned int x0; unsigned int x1; unsigned long long x2; unsigned long long x3; unsigned short x4; unsigned int x5 :1; unsigned int x6 :16; } *)heap allocator:(id)allocator;
- (BOOL)sizeInfoForHeap:(struct { unsigned int x0; } *)heap serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)bufferGPUAddress:(struct { unsigned int x0; } *)gpuaddress serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)minimumLinearTextureAlignment:(struct { unsigned int x0; } *)alignment serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)minimumTextureBufferAlignment:(struct { unsigned int x0; } *)alignment serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)computeInfo:(struct { unsigned int x0; } *)info serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)heapMaxAvailableSizeWithAlignment:(struct { unsigned int x0; unsigned long long x1; } *)alignment serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)newComputePipelineStateWithDescriptor:(struct { unsigned int x0; unsigned int x1; } *)descriptor serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)uniqueIdentifier:(struct { unsigned int x0; int x1; } *)identifier serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)newRenderPipelineStateWithDescriptor:(struct { unsigned int x0; unsigned int x1; } *)descriptor serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)newArgumentBufferLayoutWithStructType:(struct { unsigned int x0; unsigned long long x1; } *)type serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)newArgumentEncoderWithBufferLayout:(struct { unsigned int x0; unsigned int x1; } *)layout serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)argumentBufferLayoutConstantAtIndex:(struct { unsigned int x0; unsigned long long x1; } *)index serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)argumentEncoderConstantAtIndex:(struct { unsigned int x0; unsigned int x1; unsigned long long x2; } *)index serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)doResourcesAlias:(struct { unsigned int x0; unsigned int x1 :1; unsigned int x2 :31; unsigned int x3; unsigned int x4[0] } *)alias serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)sharedEventSignaledValue:(struct { unsigned int x0; } *)value serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)sharedEventSetSignaledValue:(struct { unsigned int x0; unsigned long long x1; } *)value serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)sharedEventWaitSignaledValue:(struct { unsigned int x0; unsigned long long x1; unsigned long long x2; } *)value serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)argumentEncoderSetValues:(struct { unsigned int x0; unsigned char x1; struct { unsigned long long x0; unsigned long long x1; } x2; } *)values serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)heapTextureSizeAndAlign:(struct { struct { unsigned int x0 :4; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :8; unsigned int x6 :16; unsigned int x7; unsigned int x8; unsigned int x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13; unsigned long long x14; } x0; } *)align serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)heapBufferSizeAndAlign:(struct { unsigned long long x0; unsigned short x1; } *)align serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)makeAliasiableResource:(struct { unsigned int x0; } *)resource serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (BOOL)newTextureViewWithPixelFormat:(struct { unsigned int x0; unsigned int x1; unsigned short x2; } *)format allocator:(id)allocator;
- (BOOL)newTextureViewWithTextureType:(struct { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; struct { unsigned long long x0; unsigned long long x1; } x4; struct { unsigned long long x0; unsigned long long x1; } x5; } *)type allocator:(id)allocator;
- (BOOL)newTextureViewWithSwizzle:(struct { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; struct { unsigned long long x0; unsigned long long x1; } x4; struct { unsigned long long x0; unsigned long long x1; } x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; } *)swizzle allocator:(id)allocator;
- (BOOL)newTextureViewWithBuffer:(struct { unsigned int x0; unsigned int x1; unsigned long long x2; unsigned long long x3; struct { unsigned int x0 :4; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :8; unsigned int x6 :16; unsigned int x7; unsigned int x8; unsigned int x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13; unsigned long long x14; } x4; } *)buffer allocator:(id)allocator;
- (BOOL)newTiledTextureViewWithBuffer:(struct { unsigned int x0; unsigned int x1; unsigned long long x2; unsigned long long x3; struct { unsigned int x0 :4; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :8; unsigned int x6 :16; unsigned int x7; unsigned int x8; unsigned int x9; unsigned short x10; unsigned short x11; unsigned short x12; unsigned short x13; unsigned long long x14; } x4; } *)buffer allocator:(id)allocator;
- (BOOL)newFunctionWithSerializedMetallib:(id)metallib commandData:(const char *)data commandDataSize:(unsigned long long)size overrideTargetTriple:(id)triple allocator:(id)allocator;
- (BOOL)newFence:(struct { unsigned int x0; } *)fence allocator:(id)allocator;
- (BOOL)newSharedEvent:(struct { unsigned int x0; } *)event allocator:(id)allocator;
- (BOOL)newSharedEventWithOptions:(struct { unsigned int x0; unsigned long long x1; } *)options allocator:(id)allocator;
- (BOOL)didModifyRange:(struct { unsigned int x0; unsigned long long x1; unsigned long long x2; } *)range serializedDataSize:(unsigned long long)size;
- (void)newSharedEventWithEventPort:(unsigned int)port label:(id)label serializedData:(const char *)data serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (id)replaceRegion:(const struct { unsigned int x0; unsigned int x1; } *)region;
- (void)getBytes:(void *)bytes dataSize:(unsigned long long)size command:(const struct { unsigned int x0; unsigned int x1; } *)command;
- (BOOL)operationWithSerializedData:(const char *)data serializedDataSize:(unsigned long long)size;
- (BOOL)operationWithSerializedData:(const char *)data serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (void)newTextureWithIOSurface:(struct __IOSurface *)iosurface serializedData:(const char *)data serializedDataSize:(unsigned long long)size allocator:(id)allocator;
- (void)notifyListenerForEventWithSerializedData:(const char *)data serializedDataSize:(unsigned long long)size block:(id /* block */)block allocator:(id)allocator;
- (void)deleteResource:(unsigned int)resource;
- (void)deleteObjectWithSerializedData:(const char *)data serializedDataSize:(unsigned long long)size;
- (id)newObjectCommandWithSerializedData:(const char *)data serializedDataSize:(unsigned long long)size;
- (id)decodeSegmentWithHeader:(struct { unsigned int x0; unsigned char x1; unsigned char x2; unsigned char x3; } *)header withIterator:(id)iterator withDecoder:(id)decoder into:(id)into;
- (void)submitCommandSegments:(void * *)segments lengths:(unsigned long long *)lengths count:(unsigned long long)count submissionCompleted:(id /* block */)completed commandBufferCompleted:(id /* block */)completed;
- (void)submitCommandSegments:(void * *)segments lengths:(unsigned long long *)lengths count:(unsigned long long)count submissionCompleted:(id /* block */)completed commandBufferCompleted:(id /* block */)completed commandQueueRef:(unsigned int)ref;
- (void)submitCommandSegmentsTimed:(void * *)timed lengths:(unsigned long long *)lengths count:(unsigned long long)count submissionCompleted:(id /* block */)completed commandBufferCompleted:(id /* block */)completed commandQueueRef:(unsigned int)ref;
- (void)decodeSegments:(void * *)segments lengths:(unsigned long long *)lengths count:(unsigned long long)count into:(id)into;
- (id)getResourceForReference:(unsigned int)reference;
- (unsigned int)registerBuffer:(id)buffer;
- (unsigned int)registerCommandQueue:(id)queue;
- (id)functionWithFunctionRef:(unsigned long long)ref;
@end

#endif /* _MTLDeserializer_h */
