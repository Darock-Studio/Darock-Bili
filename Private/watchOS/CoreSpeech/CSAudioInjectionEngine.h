//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef CSAudioInjectionEngine_h
#define CSAudioInjectionEngine_h
@import Foundation;

#include "CSAudioInjectionEngineDelegate-Protocol.h"
#include "CSAudioInjectionFileOption.h"

@class NSMutableArray, NSUUID;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface CSAudioInjectionEngine : NSObject

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (weak, nonatomic) NSObject<CSAudioInjectionEngineDelegate> *delegate;
@property (nonatomic) unsigned long long audioStreamHandleId;
@property (retain, nonatomic) CSAudioInjectionFileOption *fileOption;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *audioFeedTimer;
@property (nonatomic) BOOL isRecording;
@property (nonatomic) struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } outASBD;
@property (nonatomic) double bufferDuration;
@property (retain, nonatomic) NSMutableArray *injectionAudioFileList;
@property (retain, nonatomic) NSMutableArray *injectionStartNotifyBlocks;
@property (retain, nonatomic) NSMutableArray *injectionCompletionNotifyBlocks;
@property (retain, nonatomic) NSUUID *uuid;
@property (nonatomic) struct OpaqueAudioConverter * deinterleaver;
@property (nonatomic) struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x10; unsigned int x1; void * x2; } x[1] } * pNonInterleavedABL;
@property (nonatomic) BOOL didSetScaleFactor;
@property (nonatomic) float scaleFactor;
@property (nonatomic) unsigned int inputRecordingNumberOfChannels;

/* instance methods */
- (id)initWithStreamHandleId:(unsigned long long)id;
- (id)initWithStreamHandleId:(unsigned long long)id withInputRecordingNumberOfChannels:(unsigned int)channels;
- (void)dealloc;
- (BOOL)isAlwaysOnVoiceTriggerAvailable;
- (void)setAlwaysOnVoiceTriggerEnabled:(BOOL)enabled;
- (BOOL)alwaysOnVoiceTriggerEnabled;
- (void)attachDevice:(id)device;
- (void)setUserIntentOptions:(id)options;
- (void)start;
- (void)_createDeInterleaverIfNeeded;
- (void)stop;
- (void)_startAudioFeedingTimer;
- (void)_readAudioBufferAndFeed;
- (BOOL)injectAudio:(id)audio;
- (BOOL)injectAudio:(id)audio withScaleFactor:(float)factor playbackStarted:(id /* block */)started completion:(id /* block */)completion;
- (BOOL)injectAudio:(id)audio withScaleFactor:(float)factor outASBD:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })asbd playbackStarted:(id /* block */)started completion:(id /* block */)completion;
- (void)startAudioStreamWithOption:(id)option;
- (void)stopAudioStream;
- (id)_deinterleaveBufferIfNeeded:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x10; unsigned int x1; void * x2; } x[1] } *)needed;
- (id)_compensateChannelDataIfNeeded:(id)needed receivedNumChannels:(unsigned int)channels;
- (struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })_defaultOutASBD;
@end

#endif /* CSAudioInjectionEngine_h */
