//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef CSSiriAudioActivationInfo_h
#define CSSiriAudioActivationInfo_h
@import Foundation;

#include "CSAttSiriMagusSupportedPolicy.h"

@class AFClientConfiguration, AFExperimentContext, AFLanguageDetectionUserContext, AFSpeechRecordingAlertPolicy, NSDictionary, NSString, NSUUID;

@interface CSSiriAudioActivationInfo : NSObject {
  /* instance variables */
  long long _activationMode;
  long long _storedActivationMode;
  long long _csAudioRecordType;
  AFClientConfiguration *_currentClientConfiguration;
  BOOL _suppressStartAlert;
  AFExperimentContext *_experimentContext;
  BOOL _isActivated;
  float _activeMediaPlaybackVolume;
  CSAttSiriMagusSupportedPolicy *_magusSupportedPolicy;
}

@property (readonly, nonatomic) long long speechEvent;
@property (readonly, nonatomic) BOOL useBorealisBuffer;
@property (readonly, nonatomic) BOOL usePrelistening;
@property (readonly, nonatomic) long long audioAlertStyle;
@property (readonly, copy, nonatomic) NSString *deviceIdentifier;
@property (readonly, nonatomic) double activationSystemUptime;
@property (readonly, nonatomic) unsigned long long activationHostTime;
@property (readonly, nonatomic) unsigned long long buttonDownHostTime;
@property (readonly, nonatomic) unsigned long long voiceTriggerEndHostTime;
@property (nonatomic) long long speechRecordingMode;
@property (readonly, nonatomic) BOOL isOnPhoneCall;
@property (readonly, copy, nonatomic) NSDictionary *activationMetadata;
@property (readonly, nonatomic) BOOL hasPlayedStartAlert;
@property (readonly, nonatomic) long long speechEndpointerOperationMode;
@property (readonly, nonatomic) AFSpeechRecordingAlertPolicy *speechRecordingAlertPolicy;
@property (readonly, nonatomic) long long presentationMode;
@property (readonly, nonatomic) BOOL isSpokenNotification;
@property (readonly, nonatomic) BOOL isTriggerlessFollowup;
@property (readonly, copy, nonatomic) AFLanguageDetectionUserContext *languageDetectionUserContext;
@property (readonly, nonatomic) long long dictationInputOrigin;
@property (readonly, copy, nonatomic) NSUUID *turnIdentifier;
@property (readonly, copy, nonatomic) NSString *applicationDisplayName;
@property (readonly, copy, nonatomic) NSString *applicationBundleIdentifier;
@property (readonly, nonatomic) unsigned long long dictationVoiceTriggerAbsStartSampleId;

/* class methods */
+ (id)_alertBehaviorForRecordRoute:(id)route playbackRoute:(id)route recordingInfo:(id)info speechEvent:(long long)event activationMode:(long long)mode speechRecordingMode:(long long)mode ringerState:(long long)state startingAlertBeepOverideID:(long long)id presentationMode:(long long)mode usesDeviceSpeakerForTTS:(long long)tts attemptsToUsePastDataBufferFrames:(BOOL)frames usePrelistening:(BOOL)prelistening isOnPhoneCall:(BOOL)call hasPlayedStartAlert:(BOOL)alert supportsEchoCancellation:(BOOL)cancellation isVoiceOverTouchEnabled:(BOOL)enabled isDeviceInCarDNDMode:(BOOL)dndmode isVibrationEnabled:(BOOL)enabled isVibrationSupported:(BOOL)supported suppressStartAlert:(BOOL)alert activationHostTime:(unsigned long long)time;
+ (id)_dictationAlertBehaviorDictionaryForRecordRoute:(id)route playbackRoute:(id)route ringerState:(long long)state usePrelistening:(BOOL)prelistening suppressStartAlert:(BOOL)alert supportsEchoCancellation:(BOOL)cancellation isVibrationEnabled:(BOOL)enabled isVibrationSupported:(BOOL)supported;
+ (id)_alertDictionaryForRecordRoute:(id)route playbackRoute:(id)route speechEvent:(long long)event ringerState:(long long)state startingAlertBeepOverideID:(long long)id presentationMode:(long long)mode hasPlayedStartAlert:(BOOL)alert supportsEchoCancellation:(BOOL)cancellation isVoiceOverTouchEnabled:(BOOL)enabled isVibrationEnabled:(BOOL)enabled isVibrationSupported:(BOOL)supported activationHostTime:(unsigned long long)time;
+ (BOOL)_requestIsUsingHFPWithRecordRoute:(id)route playbackRoute:(id)route;
+ (BOOL)_shouldAllowRecordWhileBeepWithRecordRoute:(id)route playbackRoute:(id)route supportsEchoCancellation:(BOOL)cancellation speechRecordingMode:(long long)mode;
+ (BOOL)_shouldPlayAlertIfNotPrelisteningForSpeechEvent:(long long)event isVoiceOverTouchEnabled:(BOOL)enabled;

/* instance methods */
- (id)description;
- (id)initWithSpeechRecordingMode:(long long)mode clientConfiguration:(id)configuration experimentContext:(id)context;
- (void)setSpeechRequestOptions:(id)options currentActivationInfo:(id)info;
- (void)setClientConfiguration:(id)configuration;
- (long long)event;
- (id)_appendDictationApplicationInfoSettings:(id)settings;
- (id)recordSettingsWithOptions:(unsigned long long)options appendingSettings:(id)settings;
- (long long)_activationMode;
- (long long)_csAudioRecordType;
- (id)recordContext;
- (id)recordContextForSpeechEvent:(long long)event;
- (long long)_csAudioRecordTypeForSpeechEvent:(long long)event currentClientConfiguration:(id)configuration;
- (BOOL)_isRequestFromSpokenNotification:(long long)notification;
- (long long)_csAudioRecordTypeForSpeechRequestOptions:(id)options useBorealisBuffer:(BOOL)buffer currentClientConfiguration:(id)configuration;
- (id)startRecordingSettingsWithRecordRoute:(id)route recordingInfo:(id)info playbackRoute:(id)route;
- (BOOL)_shouldSkipStartRecordingAlertForRecordingInfo:(id)info;
- (void)audioSessionActivated;
- (BOOL)needsUpdateToPostVoiceMode;
- (unsigned long long)beginUpdateToPostVoice;
- (void)endUpdateToPostVoiceWithContext:(unsigned long long)context success:(BOOL)success;
- (BOOL)canPrewarm;
- (BOOL)canPrepareWithoutInterruption;
- (BOOL)shouldTreatTimeoutAsHardEndpoint;
- (BOOL)requiresBorealisConsumerCheck;
- (BOOL)canGetPCMStream;
- (BOOL)_canUseZLL;
- (BOOL)_eventIsVoiceTrigger;
- (BOOL)_eventIsTVRemote;
- (BOOL)canEnterTwoShot;
- (BOOL)shouldUseVoiceTriggerAnalyzerStyle;
- (BOOL)shouldExplicitlyPlayAlertOnStart;
- (BOOL)shouldPlayAlertIfNotPrelistening;
- (BOOL)shouldSuppressRecordingStopAlert;
- (BOOL)shouldSuppressRecordingErrorAlert;
- (long long)twoShotPromptTypeForRecordRoute:(id)route playbackRoute:(id)route;
- (long long)twoShotFeedbackAlertOverrideForRecordRoute:(id)route playbackRoute:(id)route deviceSupportsVibrator:(BOOL)vibrator deviceSupportsEC:(BOOL)ec;
- (BOOL)isVoiceOverTouchEnabled;
- (id)startingAlertBeepURL;
- (long long)overrideStartingAlertBeepSoundID;
- (id)audioSessionActivationTargetDate;
- (id)dateByAddingTimeIntervalSinceActivation:(double)activation;
- (BOOL)_isVoiceOverTouchEnabledInAccessibility;
- (BOOL)_isVibrationDisabledInAccessibility;
- (id)_audioSessionActiveDelayCoreSpeechWithType:(unsigned long long)type;
- (id)_audioSessionActiveDelayUserPerceptionWithType:(unsigned long long)type;
- (id)_audioSessionActiveDelayOverride;
- (id)_audioSessionActiveDelayServerConfiguration;
@end

#endif /* CSSiriAudioActivationInfo_h */
