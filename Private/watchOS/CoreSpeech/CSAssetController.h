//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef CSAssetController_h
#define CSAssetController_h
@import Foundation;

#include "CSEventMonitorDelegate-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface CSAssetController : NSObject<CSEventMonitorDelegate>

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *assetsMigrationQueue;
@property (retain, nonatomic) NSDictionary *csAssetsDictionary;
@property (retain, nonatomic) NSMutableDictionary *observers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)filteredAssetsForFetchRemoteMetaDataForAssets:(id)assets assetType:(unsigned long long)type;
+ (id)filteredAssetsForAssets:(id)assets assetType:(unsigned long long)type language:(id)language;
+ (void)addKeyValuePairForQuery:(id *)query assetType:(unsigned long long)type;
+ (id)getVoiceTriggerAssetTypeString;
+ (unsigned long long)getVoiceTriggerAssetCurrentCompatibilityVersion;
+ (id)getEndpointAssetTypeString;
+ (unsigned long long)getEndpointAssetCurrentCompatibilityVersion;
+ (id)getLanguageDetectorAssetTypeString;
+ (unsigned long long)getLanguageDetectorCurrentCompatibilityVersion;
+ (id)getAdBlockerAssetTypeString;
+ (unsigned long long)getAdBlockerCurrentCompatibilityVersion;
+ (id)getSpeakerRecognitionAssetTypeString;
+ (unsigned long long)getSpeakerRecognitionCurrentCompatibilityVersion;
+ (id)sharedController;
+ (id)getAssetTypeStringForType:(unsigned long long)type;

/* instance methods */
- (id)init;
- (void)_cleanUpMobileAssetV1Directory;
- (id)assetOfType:(unsigned long long)type language:(id)language;
- (id)allInstalledAssetsOfType:(unsigned long long)type language:(id)language;
- (void)assetOfType:(unsigned long long)type language:(id)language completion:(id /* block */)completion;
- (void)assetOfType:(unsigned long long)type language:(id)language compatibilityVersion:(unsigned long long)version completion:(id /* block */)completion;
- (id)installedAssetOfType:(unsigned long long)type language:(id)language;
- (void)installedAssetOfType:(unsigned long long)type language:(id)language completion:(id /* block */)completion;
- (id)installedAssetOfType:(unsigned long long)type withLanguage:(id)language;
- (void)installedAssetOfType:(unsigned long long)type withLanguage:(id)language completion:(id /* block */)completion;
- (id)_installedAssetOfType:(unsigned long long)type withLanguage:(id)language;
- (void)_installedAssetOfType:(unsigned long long)type withLanguage:(id)language completion:(id /* block */)completion;
- (void)_installedAssetOfType:(unsigned long long)type query:(id)query withLanguage:(id)language completion:(id /* block */)completion;
- (id)_findLatestInstalledAsset:(id)asset;
- (id)_assetQueryForAssetType:(unsigned long long)type;
- (void)_setAssetQueryParameters:(id)parameters;
- (void)_runAssetQuery:(id)query completion:(id /* block */)completion;
- (void)fetchRemoteMetaOfType:(unsigned long long)type;
- (void)fetchRemoteMetaOfType:(unsigned long long)type allowRetry:(BOOL)retry;
- (void)_fetchRemoteAssetOfType:(unsigned long long)type withLanguage:(id)language completion:(id /* block */)completion;
- (void)_fetchRemoteAssetOfType:(unsigned long long)type withLanguage:(id)language query:(id)query completion:(id /* block */)completion;
- (void)_downloadAssetCatalogForAssetType:(unsigned long long)type complete:(id /* block */)complete;
- (BOOL)_isRetryRecommendedWithResult:(long long)result;
- (void)_updateFromRemoteToLocalAssets:(id)assets forAssetType:(unsigned long long)type completion:(id /* block */)completion;
- (id)_defaultDownloadOptions;
- (void)_downloadAsset:(id)asset withComplete:(id /* block */)complete;
- (void)_startDownloadingAsset:(id)asset progress:(id /* block */)progress completion:(id /* block */)completion;
- (void)addObserver:(id)observer forAssetType:(unsigned long long)type;
- (void)removeObserver:(id)observer forAssetType:(unsigned long long)type;
- (void)CSEventMonitorDidReceiveEvent:(id)event;
@end

#endif /* CSAssetController_h */
