//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef CSSiriSpeechRecordingContext_h
#define CSSiriSpeechRecordingContext_h
@import Foundation;

#include "CSAudioRecordDeviceInfo.h"
#include "CSSiriAudioFileWriter.h"
#include "CSSiriAudioMessageRequestClient.h"
#include "CSSiriRecordingInfo.h"

@class CSAudioRecordContext, NSDictionary, NSMutableDictionary, NSMutableSet, NSString, NSURL, NSUUID;
@protocol AFRelinquishableAssertion, OS_dispatch_group, OS_dispatch_queue;

@interface CSSiriSpeechRecordingContext : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  BOOL _isCurrent;
  NSString *_startSpeechId;
  NSString *_selectedResultCandidateId;
  CSAudioRecordContext *_audioRecordContext;
  CSAudioRecordDeviceInfo *_audioRecordDeviceInfo;
  NSDictionary *_voiceTriggerInfo;
  NSDictionary *_recordingSettings;
  CSSiriRecordingInfo *_recordingInfo;
  CSSiriAudioFileWriter *_audioFileWriter;
  NSURL *_recordedAudioFileURL;
  NSObject<AFRelinquishableAssertion> *_startRecordingAudioSessionAssertion;
  NSObject<AFRelinquishableAssertion> *_twoShotDetectionAudioSessionAssertion;
  NSObject<OS_dispatch_group> *_recordingAudioGroup;
  BOOL _voiceIdentificationTraining_allowsWithoutResultCandidate;
  NSMutableSet *_voiceIdentificationTraining_allowedResultCandidateIds;
  NSMutableDictionary *_voiceIdentificationTraining_resultCandidateToSharedUserIdMap;
  NSUUID *_turnIdentifier;
  NSString *_voiceIdentificationTraining_withoutResultCandidateSharedUserId;
  BOOL _stopRecordingInstrumented;
  BOOL _shouldUseLocalFileWriter;
  CSSiriAudioMessageRequestClient *_audioMessageRequestClient;
}

@property (readonly, copy, nonatomic) NSString *sessionUUID;
@property (readonly, nonatomic) BOOL wantsRecordedAudioBufferLogs;

/* instance methods */
- (void)dealloc;
- (id)description;
- (id)initWithSessionUUID:(id)uuid turnIdentifier:(id)identifier;
- (void)becomeCurrent;
- (void)resignCurrent;
- (void)updateStartSpeechId:(id)id;
- (void)updateSelectedResultCandidateId:(id)id;
- (void)updateAccessToRecordedAudioForVoiceIdentificationTraining:(BOOL)training forResultCandidateId:(id)id sharedUserId:(id)id;
- (void)getAudioRecordRouteAndDeviceIdentificationWithCompletion:(id /* block */)completion;
- (void)acquireRecordedAudioWithHandler:(id /* block */)handler;
- (void)updateAudioRecordContext:(id)context;
- (void)updateAudioRecordDeviceInfo:(id)info;
- (void)updateVoiceTriggerInfo:(id)info;
- (void)updateRecordingInfo:(id)info;
- (void)updateRecordingSettings:(id)settings;
- (void)willPrepareAndStartRecordingWithAudioActivationInfo:(id)info;
- (void)didDetectTwoShotWithAudioActivationInfo:(id)info atTime:(double)time;
- (void)willStopRecordingAtHostTime:(unsigned long long)time;
- (void)didStopRecordingWithError:(id)error;
- (void)relinquishAudioSessionAssertionsWithContext:(id)context;
- (void)relinquishAudioSessionAssertionsWithError:(id)error;
- (void)beginRecordingAudioWithAudioStreamBasicDescription:(const struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)description;
- (void)appendRecordedAudioBuffer:(id)buffer;
- (void)endRecordingAudio;
- (void)_initializeAudioFileWriterWithAudioStreamBasicDescription:(const struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)description;
- (void)_finalizeAudioFileWriterWithCompletion:(id /* block */)completion;
- (void)instrumentSiriCue:(int)cue;
- (void)_instrumentSiriCue:(int)cue;
- (void)instrumentSiriCueForAlertType:(long long)type;
- (void)emitRequestLinkEventForMHUUID:(id)mhuuid;
- (void)emitRequestLinkEventForRtsSessionId:(id)id;
- (id)_createRequestLinkInfo:(id)info component:(int)component;
- (void)_didBecomeCurrent;
- (void)_didResignCurrent;
- (void)_donateRecordedAudioForVoiceIdentificationTrainingWithCompletion:(id /* block */)completion;
- (void)_removeRecordedAudio;
- (BOOL)allowContinuousConversation;
@end

#endif /* CSSiriSpeechRecordingContext_h */
