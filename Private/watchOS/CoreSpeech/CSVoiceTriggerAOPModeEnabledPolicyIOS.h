//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef CSVoiceTriggerAOPModeEnabledPolicyIOS_h
#define CSVoiceTriggerAOPModeEnabledPolicyIOS_h
@import Foundation;

#include "CSPolicy.h"
#include "CSIntuitiveConvAudioCaptureMonitorDelegate-Protocol.h"
#include "CSSiriClientBehaviorMonitorDelegate-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface CSVoiceTriggerAOPModeEnabledPolicyIOS : CSPolicy<CSSiriClientBehaviorMonitorDelegate, CSIntuitiveConvAudioCaptureMonitorDelegate> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_recordStateQueue;
}

@property (nonatomic) BOOL isSiriClientConsideredAsRecord;
@property (retain, nonatomic) NSString *pendingRecordingStopUUID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)_subscribeEventMonitors;
- (void)_addVoiceTriggerAOPModeEnabledConditions;
- (void)_addConditionsForIOSBargeIn;
- (void)_addConditionsForIOSAOP;
- (BOOL)_isSpeechDetectionDevicePresent;
- (BOOL)_isJarvisRouted;
- (BOOL)_isHearstRoutedAndWithNoPhoneCall;
- (BOOL)_isAudioRouteIneligibleForAP;
- (BOOL)_isInPhoneCallStateWithHSPhoneCallCapableRoute;
- (void)_handleClientRecordStateDidChange:(BOOL)change eventUUID:(id)uuid;
- (void)intuitiveConvAudioCaptureMonitor:(id)monitor didStartAudioCaptureSuccessfully:(BOOL)successfully option:(id)option eventUUID:(id)uuid;
- (void)intuitiveConvAudioCaptureMonitorDidStopAudioCapture:(id)capture stopStreamOption:(id)option eventUUID:(id)uuid;
- (void)siriClientBehaviorMonitor:(id)monitor didChangedRecordState:(BOOL)state withEventUUID:(id)uuid withContext:(id)context;
- (void)siriClientBehaviorMonitor:(id)monitor didStartStreamWithContext:(id)context successfully:(BOOL)successfully option:(id)option withEventUUID:(id)uuid;
- (void)siriClientBehaviorMonitor:(id)monitor didStopStream:(id)stream withEventUUID:(id)uuid;
- (void)siriClientBehaviorMonitor:(id)monitor willStartStreamWithContext:(id)context option:(id)option;
- (void)siriClientBehaviorMonitor:(id)monitor willStopStream:(id)stream reason:(unsigned long long)reason;
@end

#endif /* CSVoiceTriggerAOPModeEnabledPolicyIOS_h */
