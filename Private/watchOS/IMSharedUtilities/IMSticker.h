//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMSticker_h
#define IMSticker_h
@import Foundation;

@class NSArray, NSData, NSDictionary, NSString, NSURL;

@interface IMSticker : NSObject

@property (readonly, nonatomic) BOOL isEmojiSticker;
@property (retain, nonatomic) NSData *recipe;
@property (copy, nonatomic) NSString *ballonBundleID;
@property (copy, nonatomic) NSString *stickerPackGUID;
@property (copy, nonatomic) NSDictionary *attributionInfo;
@property (copy, nonatomic) NSString *accessibilityLabel;
@property (copy, nonatomic) NSString *moodCategory;
@property (readonly, nonatomic) NSString *uniqueID;
@property (copy, nonatomic) NSURL *animatedImageCacheURLFromExtension;
@property (nonatomic) long long stickerEffectType;
@property (copy, nonatomic) NSData *metadata;
@property (copy, nonatomic) NSString *stickerName;
@property (copy, nonatomic) NSArray *representations;
@property (copy, nonatomic) NSString *externalURI;
@property (nonatomic) unsigned long long initialFrameIndex;
@property (readonly, copy, nonatomic) NSURL *fileURL;
@property (readonly, copy, nonatomic) NSString *stickerGUID;
@property (readonly, copy, nonatomic) NSString *textToSpeechName;

/* class methods */
+ (id)userInfoDictionaryWithLayoutIntent:(unsigned long long)intent parentPreviewWidth:(double)width xScalar:(double)scalar yScalar:(double)scalar scale:(double)scale rotation:(double)rotation initialFrameIndex:(unsigned long long)index stickerPositionVersion:(unsigned long long)version;
+ (id)userInfoDictionaryWithLayoutIntent:(unsigned long long)intent parentPreviewWidth:(double)width xScalar:(double)scalar yScalar:(double)scalar scale:(double)scale rotation:(double)rotation initialFrameIndex:(unsigned long long)index;
+ (id)userInfoDictionaryWithGeometryDescriptor:(struct IMAssociatedMessageGeometryDescriptor { unsigned long long x0; unsigned long long x1; double x2; double x3; double x4; double x5; double x6; })descriptor;
+ (struct IMAssociatedMessageGeometryDescriptor { unsigned long long x0; unsigned long long x1; double x2; double x3; double x4; double x5; double x6; })geometryDescriptorFromUserInfoDictionary:(id)dictionary;

/* instance methods */
- (id)init;
- (id)initWithStickerID:(id)id stickerPackID:(id)id fileURL:(id)url accessibilityLabel:(id)label moodCategory:(id)category stickerName:(id)name;
- (id)initWithStickerID:(id)id stickerPackID:(id)id fileURL:(id)url accessibilityLabel:(id)label moodCategory:(id)category stickerName:(id)name effectType:(long long)type;
- (id)initWithStickerID:(id)id stickerPackID:(id)id fileURL:(id)url accessibilityLabel:(id)label moodCategory:(id)category stickerName:(id)name textToSpeechName:(id)name;
- (id)initWithStickerID:(id)id stickerPackID:(id)id fileURL:(id)url accessibilityLabel:(id)label moodCategory:(id)category stickerName:(id)name effectType:(long long)type textToSpeechName:(id)name;
- (id)initWithStickerIdentifier:(id)identifier stickerPackID:(id)id representations:(id)representations effectType:(long long)type initialFrameIndex:(unsigned long long)index externalURI:(id)uri stickerName:(id)name accessibilityLabel:(id)label metadata:(id)metadata;
- (id)description;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)initWithStickerPropertyDictionary:(id)dictionary stickerPackID:(id)id stickerPackBundlePath:(id)path;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* IMSticker_h */
