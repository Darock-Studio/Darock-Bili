//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMContactStore_h
#define IMContactStore_h
@import Foundation;

#include "IMStateCaptureAssistant.h"
#include "IMStateLoggable-Protocol.h"

@class CNContact, CNContactStore, NSArray, NSData, NSDictionary, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface IMContactStore : NSObject<IMStateLoggable>

@property (retain, nonatomic) CNContactStore *contactStore;
@property (retain, nonatomic) NSData *currentHistoryToken;
@property (retain, nonatomic) NSDictionary *handleIDToCNIDMap;
@property (retain, nonatomic) NSMutableDictionary *CNIDToHandleIDsMap;
@property (retain, nonatomic) NSMutableDictionary *IDToCNContactMap;
@property (nonatomic) BOOL batchFetchingForLaunchCompleted;
@property (nonatomic) double lastContactStoreSync;
@property (nonatomic) double lastMeContactStoreSync;
@property (retain, nonatomic) CNContact *meContact;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *changeHistoryFetchQueue;
@property (retain, nonatomic) IMStateCaptureAssistant *stateCaptureAssistant;
@property (retain, nonatomic) NSArray *CNIDsForBatchFetch;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)logDictionary:(id)dictionary;
+ (void)logDictionary:(id)dictionary checkAdditionalLoggingEnabled:(BOOL)enabled;
+ (void)logDictionary:(id)dictionary inBatchesOfSize:(long long)size;
+ (void)logHandleIDs:(id)ids checkAdditionalLoggingEnabled:(BOOL)enabled;
+ (void)logContactFetchRequestResults:(id)results;
+ (void)logHistoryToken:(id)token;
+ (void)logCNContact:(id)cncontact;
+ (void)logCNContact:(id)cncontact andID:(id)id;
+ (void)logHandleID:(id)id;
+ (void)_logArray:(id)array inBatchesOfSize:(long long)size;
+ (id)_sortContactsFor:(id)for;
+ (void)_logDictionaryInformation:(id)information withSortedKeys:(id)keys inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
+ (id)sharedInstance;
+ (Class)IMCNContactFormatterClass;
+ (Class)IMCNContactFetchRequestClass;
+ (Class)IMCNMutableContactClass;
+ (Class)IMCNLabeledValueClass;
+ (Class)IMCNPhoneNumberClass;
+ (Class)IMCNChangeHistoryFetchRequestClass;
+ (Class)IMCNMeCardSharingPickerViewControllerClass;
+ (id)kIMCNContactIdentifierKey;
+ (id)kIMCNContactLinkIdentifierKey;
+ (id)kIMCNContactPhoneNumbersKey;
+ (id)kIMCNContactEmailAddressesKey;
+ (id)kIMCNContactImageDataAvailableKey;
+ (id)kIMCNContactImageDataKey;
+ (id)kIMCNContactThumbnailImageDataKey;
+ (id)kIMCNContactCropRectKey;
+ (id)kIMCNContactWallpaperKey;
+ (id)kIMCNContactWatchWallpaperImageDataKey;
+ (id)kIMCNContactImageBackgroundColorsDataKey;
+ (id)kIMCNContactSensitiveContentConfigurationKey;
+ (id)IMContactStoreQueue;
+ (id)displayNameWithCNNickNameOrFullNameOrCompanyNameOrAbbreviatedForContact:(id)contact;
+ (id)displayNameWithPhoneNumberOrEmailForContact:(id)contact;
+ (id)displayNameForContact:(id)contact;
+ (id)firstNameForCNContact:(id)cncontact;
+ (id)lastNameForCNContact:(id)cncontact;
+ (id)phoneticFirstNameForCNContact:(id)cncontact;
+ (id)phoneticLastNameForCNContact:(id)cncontact;
+ (id)phoneticFullNameForCNContact:(id)cncontact;
+ (id)fullNameForCNContact:(id)cncontact;
+ (id)_stringFromContact:(id)contact withStyle:(long long)style;
+ (id)companyNameForCNContact:(id)cncontact;
+ (id)nickNameForCNContact:(id)cncontact;
+ (id)abbreviatedNameForCNContact:(id)cncontact;
+ (id)IDsFromCNContact:(id)cncontact;
+ (id)emailsForCNContact:(id)cncontact;
+ (id)phoneNumbersForCNContact:(id)cncontact;
+ (BOOL)shouldShowNickNames;
+ (BOOL)shouldShowAbbreviatedNames;
+ (BOOL)_shouldAllowContactStoreLookup;
+ (id)createMutableContactWithID:(id)id;
+ (id)createMutableContactWithMapURL:(id)url andLocalizedLocationString:(id)string;
+ (id)predicateForID:(id)id;
+ (id)mePredicate;
+ (id)keysForCNContact;
+ (id)keysForMeContact;
+ (id)keysForNicknameHandling;
+ (id)dialingCodeForID:(id)id;
+ (id)dialingForCurrentLocale;
+ (id)IDWithCurrentLocaleITUCode:(id)itucode;
+ (BOOL)isCNContactAKnownContact:(id)contact;
+ (id)descriptionForCNContact:(id)cncontact;
+ (id)validateAndFilterIDsForContactsBatchFetch:(id)fetch;
+ (id)validateAndCleanupID:(id)id;

/* instance methods */
- (id)init;
- (id)initWithContactStore:(id)store;
- (void)dealloc;
- (id)getContactStore;
- (void)cacheBatchFetchResults:(id)results handleIDsWithoutCNID:(id)cnid;
- (void)fetchCNContactsForHandlesWithIDs:(id)ids isFinalBatch:(BOOL)batch;
- (id)fetchCNContactForHandleID:(id)id withKeys:(id)keys;
- (id)fetchCNContactForHandleWithID:(id)id;
- (id)completedContact:(id)contact withKeys:(id)keys;
- (id)fetchCNContactWithIdentifier:(id)identifier;
- (BOOL)isBatchFetchingForLaunchCompleted;
- (void)setBatchFetchingCompleted;
- (void)setBatchFetchingIsCompleted:(BOOL)completed;
- (id)handleIDsForCNID:(id)cnid;
- (void)generateCNIDToHandleIDMap;
- (void)removeIDFromCNIDToHandleIDsMap:(id)map withCNID:(id)cnid;
- (void)addIDToCNIDToHandleIDsMap:(id)map withCNID:(id)cnid;
- (BOOL)isIDAKnownContact:(id)contact;
- (BOOL)isContactWithIDAlreadyFetched:(id)fetched;
- (void)addContact:(id)contact withID:(id)id;
- (id)getContactForID:(id)id;
- (void)removeContactWithID:(id)id;
- (void)replaceContact:(id)contact withID:(id)id;
- (void)replaceWithMutableContactForID:(id)id;
- (id)getAllKeysFromIDToCNContactMap;
- (void)addEntriesToIDToCNContactMap:(id)map;
- (void)contactStoreChanged:(id)changed;
- (void)resetMeCard;
- (void)meCardChanged:(id)changed;
- (id)fetchMeContactWithKeys:(id)keys;
- (id)fetchMeContactWithKeys:(id)keys withError:(id *)error;
- (void)handleDropEverythingEvent;
- (void)checkForContactStoreChanges;
- (id)getHandleIDToCNIDMap;
- (id)getCNIDToHandleIDsMap;
- (id)getIDToCNContactMap;
- (id)stateDictionaryForDiagnosticsRequest;
@end

#endif /* IMContactStore_h */
