//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLEnginePushRepository_h
#define CPLEnginePushRepository_h
@import Foundation;

#include "CPLEngineStorage.h"
#include "CPLAbstractObject-Protocol.h"
#include "CPLBatchExtractionStrategy.h"
#include "CPLPlatformObject.h"

@class BOOL *, NSDate, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface CPLEnginePushRepository : CPLEngineStorage<CPLAbstractObject> {
  /* instance variables */
  NSMutableDictionary *_propertiesPerClass;
  NSString *_lastStrategyName;
  NSObject<OS_dispatch_queue> *_uploadRateQueue;
  NSObject<OS_dispatch_queue> *_timingStatisticQueue;
  NSDate *_lastUploadRateUpdateDate;
  NSMutableDictionary *_timingStatistics;
  double _lastApproximativeUploadRate;
  NSMutableDictionary *_pushObservers;
}

@property (retain, nonatomic) CPLBatchExtractionStrategy *extractionStrategy;
@property (readonly, nonatomic) unsigned long long maximumResourceSizePerBatch;
@property (readonly, nonatomic) CPLPlatformObject *platformObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithEngineStore:(id)store name:(id)name;
- (unsigned long long)scopeType;
- (id)_outgoingResources;
- (void)notePushRepositoryStoredSomeChanges;
- (BOOL)deleteRecordsForScopeIndex:(long long)index maxCount:(long long)count deletedCount:(long long *)count error:(id *)error;
- (unsigned long long)countOfChangesInScopeWithIdentifier:(id)identifier;
- (BOOL)hasChangesInScopeWithIdentifier:(id)identifier;
- (unsigned long long)minimumPriorityForChangesInScopeWithIdentifier:(id)identifier;
- (BOOL)hasChangesWithPriorityLowerThanPriority:(unsigned long long)priority inScopeWithIdentifier:(id)identifier;
- (BOOL)hasChangesWithPriorityGreaterThanPriority:(unsigned long long)priority inScopeWithIdentifier:(id)identifier;
- (BOOL)hasChangesWithScopeFilter:(id)filter;
- (BOOL)storeChange:(id)change pushContext:(id)context error:(id *)error;
- (BOOL)reinjectChange:(id)change dequeueOrder:(long long)order overwrittenRecord:(BOOL *)record error:(id *)error;
- (BOOL)hasSomeChangeWithScopedIdentifier:(id)identifier;
- (BOOL)discardChangeWithScopedIdentifier:(id)identifier error:(id *)error;
- (BOOL)deleteAllChangesWithError:(id *)error;
- (BOOL)storeExtractedBatch:(id)batch error:(id *)error;
- (BOOL)reinjectExtractedBatch:(id)batch overwrittenRecordIdentifiers:(id *)identifiers error:(id *)error;
- (id)storedExtractedBatch;
- (BOOL)reinjectChange:(id)change priority:(unsigned long long)priority error:(id *)error;
- (BOOL)resetPriorityForScopeWithIdentifier:(id)identifier maxCount:(unsigned long long)count hasMore:(BOOL *)more error:(id *)error;
- (id)checkOutBatchStorageWithPriority:(unsigned long long)priority error:(id *)error;
- (BOOL)checkInBatchStorage:(id)storage error:(id *)error;
- (id)changeWithScopedIdentifier:(id)identifier;
- (id)allChangesWithClass:(Class)class relatedScopedIdentifier:(id)identifier;
- (id)allChangesWithScopeIdentifier:(id)identifier;
- (BOOL)hasChangesWithRelatedScopedIdentifier:(id)identifier class:(Class)class;
- (BOOL)hasAnyChangeWithRelatedScopedIdentifier:(id)identifier;
- (void)updateApproximativeUploadRate:(double)rate;
- (void)updateTimingStatisticForKey:(id)key duration:(double)duration recordCount:(unsigned long long)count error:(BOOL)error cancelled:(BOOL)cancelled;
- (id)_timingStatisticStatuses;
- (BOOL)getRelatedScopedIdentifier:(id *)identifier forRecordWithScopedIdentifier:(id)identifier;
- (id)countPerFlagsForScopeWithIdentifier:(id)identifier;
- (id)scopedIdentifiersForChangesWithFlag:(long long)flag forScopeWithIdentifier:(id)identifier;
- (BOOL)deleteSharingFlagsWithMaxCount:(unsigned long long)count deletedCount:(unsigned long long *)count error:(id *)error;
- (id)contributorsUpdatesForScopeWithIdentifier:(id)identifier maxCount:(unsigned long long)count;
- (BOOL)acknowledgeContributorsUpdates:(id)updates error:(id *)error;
- (void)addPushObserver:(id /* block */)observer withIdentifier:(id)identifier;
- (void)removePushObserverWithIdentifier:(id)identifier;
- (id)status;
@end

#endif /* CPLEnginePushRepository_h */
