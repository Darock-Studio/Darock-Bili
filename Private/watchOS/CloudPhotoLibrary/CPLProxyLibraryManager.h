//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLProxyLibraryManager_h
#define CPLProxyLibraryManager_h
@import Foundation;

#include "CPLPlatformObject.h"
#include "CPLClientLibraryManagerProtocol-Protocol.h"
#include "CPLLibraryManagerImplementation-Protocol.h"
#include "NSXPCConnectionDelegate-Protocol.h"

@class NSCountedSet, NSDate, NSMutableArray, NSMutableDictionary, NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface CPLProxyLibraryManager : CPLPlatformObject<CPLClientLibraryManagerProtocol, NSXPCConnectionDelegate, CPLLibraryManagerImplementation> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _realConnectionLock;
  NSXPCConnection *_realConnection;
  id /* block */ _blockToCallOnDaemonDying;
  NSMutableDictionary *_downloadTasks;
  NSMutableDictionary *_inMemoryDownloadTasks;
  NSMutableDictionary *_uploadTasks;
  NSMutableDictionary *_forceSyncTasks;
  NSMutableDictionary *_vouchersPerTaskIdentifier;
  unsigned long long _foregroundCalls;
  BOOL _foregroundCallsHaveBeenQuiet;
  NSCountedSet *_disablingReasons;
  unsigned long long _disablingMinglingCount;
  unsigned long long _significantWorkCalls;
  NSMutableDictionary *_outstandingInvocations;
  unsigned long long _outstandingInvocationsCount;
  NSMutableDictionary *_syncOutstandingInvocations;
  unsigned long long _syncOutstandingInvocationsCount;
  NSMutableArray *_pendingBlocksAfterOpening;
  int _openingStatus;
  NSDate *_backoffRetryingConnectionDate;
  int _notifyToken;
  BOOL _killed;
  BOOL _firstTryOpeningLibrary;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)daemonProtocolInterface;
+ (id)clientProtocolInterface;

/* instance methods */
- (id)initWithAbstractObject:(id)object;
- (void)dealloc;
- (id)_connection;
- (id)proxyWithErrorHandler:(id /* block */)handler;
- (void)_callBlockOnDaemonDying;
- (void)_setCallBlockOnDaemonDying:(id /* block */)dying;
- (void)_setupConnection;
- (void)_markConnectionAsInvalid;
- (void)_dropConnectionCompletlyLocked;
- (void)_dropConnectionCompletly;
- (void)_reallyOpenWithCompletionHandler:(id /* block */)handler;
- (void)_dispatchBlockWhenOpen:(id /* block */)open;
- (void)dispatchBlockWhenLibraryIsOpen:(id /* block */)open;
- (void)openWithCompletionHandler:(id /* block */)handler;
- (void)closeWithCompletionHandler:(id /* block */)handler;
- (void)deactivateWithCompletionHandler:(id /* block */)handler;
- (void)activateScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)deactivateScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)boostPriorityForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)_invokeOutstandingInvocationsWithTaskIdentifier:(id)identifier;
- (void)_dispatchFailedDownloadTaskForResource:(id)resource options:(id)options proposedTaskIdentifier:(id)identifier withError:(id)error withCompletionHandler:(id /* block */)handler;
- (void)beginDownloadForResource:(id)resource clientBundleID:(id)id options:(id)options proposedTaskIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)getStreamingURLForResource:(id)resource intent:(unsigned long long)intent hints:(id)hints timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range clientBundleID:(id)id completionHandler:(id /* block */)handler;
- (void)rampingRequestForResourceType:(unsigned long long)type numRequested:(unsigned long long)requested completionHandler:(id /* block */)handler;
- (void)_dispatchFailedInMemoryDownloadTaskForResource:(id)resource withError:(id)error withCompletionHandler:(id /* block */)handler;
- (void)beginInMemoryDownloadOfResource:(id)resource completionHandler:(id /* block */)handler;
- (void)resolveLocalScopedIdentifiersForCloudScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)getMappedScopedIdentifiersForScopedIdentifiers:(id)identifiers inAreLocalIdentifiers:(BOOL)identifiers completionHandler:(id /* block */)handler;
- (void)createScope:(id)scope completionHandler:(id /* block */)handler;
- (void)updateShareForScope:(id)scope completionHandler:(id /* block */)handler;
- (void)deleteScopeWithIdentifier:(id)identifier forced:(BOOL)forced completionHandler:(id /* block */)handler;
- (void)refreshScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchSharedScopeFromShareURL:(id)url completionHandler:(id /* block */)handler;
- (void)acceptSharedScope:(id)scope completionHandler:(id /* block */)handler;
- (void)fetchExistingSharedLibraryScopeWithCompletionHandler:(id /* block */)handler;
- (void)startExitFromSharedScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(long long)source completionHandler:(id /* block */)handler;
- (void)removeParticipants:(id)participants fromSharedScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(long long)source completionHandler:(id /* block */)handler;
- (void)sharedLibraryRampCheckWithCompletionHandler:(id /* block */)handler;
- (void)getStatusForPendingRecordsSharedToScopeWithIdentifier:(id)identifier maximumCount:(unsigned long long)count completionHandler:(id /* block */)handler;
- (void)queryUserDetailsForShareParticipants:(id)participants completionHandler:(id /* block */)handler;
- (void)testKey:(id)key value:(id)value completionHandler:(id /* block */)handler;
- (void)getTargetsForRecordsWithScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)deleteResources:(id)resources checkServerIfNecessary:(BOOL)necessary completionHandler:(id /* block */)handler;
- (void)checkResourcesAreSafeToPrune:(id)prune checkServerIfNecessary:(BOOL)necessary completionHandler:(id /* block */)handler;
- (void)resetStatus;
- (void)startSyncSession;
- (void)noteClientReceivedNotificationOfServerChanges;
- (void)noteClientIsInForegroundQuietly:(BOOL)quietly;
- (void)noteClientIsInBackground;
- (void)disableSynchronizationWithReason:(id)reason;
- (void)enableSynchronizationWithReason:(id)reason;
- (void)disableMingling;
- (void)enableMingling;
- (void)noteClientIsBeginningSignificantWork;
- (void)getSystemBudgetsWithCompletionHandler:(id /* block */)handler;
- (void)setShouldOverride:(BOOL)override forSystemBudgets:(unsigned long long)budgets;
- (void)noteClientIsEndingSignificantWork;
- (void)checkHasBackgroundDownloadOperationsWithCompletionHandler:(id /* block */)handler;
- (void)getStatusForRecordsWithScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)getChangedStatusesWithCompletionHandler:(id /* block */)handler;
- (void)acknowledgeChangedStatuses:(id)statuses;
- (void)addStatusChangesForRecordsWithScopedIdentifiers:(id)identifiers persist:(BOOL)persist;
- (BOOL)_setStatusFromDictionary:(id)dictionary;
- (void)getScopeStatusCountsForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)_invokeSyncOutstandingInvocationsWithTaskIdentifier:(id)identifier;
- (void)_dispatchFailedForceSyncTaskForScopeIdentifiers:(id)identifiers withError:(id)error withCompletionHandler:(id /* block */)handler;
- (void)forceSynchronizingScopeWithIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)downloadDidStartForResourceTransferTask:(id)task;
- (void)downloadDidProgress:(float)progress forResourceTransferTask:(id)task;
- (void)downloadDidFinishForResourceTransferTask:(id)task finalResource:(id)resource withError:(id)error;
- (void)inMemoryDownloadDidFinishForResourceTransferTask:(id)task data:(id)data withError:(id)error;
- (void)backgroundDownloadDidFinishForResource:(id)resource;
- (void)backgroundDownloadDidFailForResource:(id)resource;
- (id)_uploadTaskDidStartForResource:(id)resource withTaskIdentifier:(id)identifier;
- (void)uploadDidStartForResource:(id)resource withResourceTransferTask:(id)task;
- (void)uploadOfResource:(id)resource didProgress:(float)progress forResourceTransferTask:(id)task;
- (void)uploadOfResource:(id)resource didFinishForResourceTransferTask:(id)task withError:(id)error;
- (void)libraryManagerHasChangesToPull;
- (void)libraryManagerDidUpdateStatusWithProperties:(id)properties;
- (void)libraryManagerDidUpdateSizeOfResourcesToUploadToSize:(unsigned long long)size sizeOfOriginalResourcesToUpload:(unsigned long long)upload numberOfImages:(unsigned long long)images numberOfVideos:(unsigned long long)videos numberOfOtherItems:(unsigned long long)items;
- (void)libraryManagerHasStatusChanges;
- (void)forceSyncDidFinishForTask:(id)task withErrors:(id)errors;
- (void)provideLocalResource:(id)resource recordClassString:(id)string completionHandler:(id /* block */)handler;
- (void)pushAllChangesWithCompletionHandler:(id /* block */)handler;
- (void)libraryManagerHasBeenReplaced;
- (void)connection:(id)connection handleInvocation:(id)invocation isReply:(BOOL)reply;
- (void)cancelTask:(id)task;
- (void)cancelSyncTask:(id)task;
- (void)barrier;
- (void)getResourcesForItemWithScopedIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)compactFileCacheWithCompletionHandler:(id /* block */)handler;
- (void)resetCacheWithOption:(unsigned long long)option reason:(id)reason completionHandler:(id /* block */)handler;
- (void)getListOfComponentsWithCompletionHandler:(id /* block */)handler;
- (void)getStatusForComponents:(id)components completionHandler:(id /* block */)handler;
- (void)getStatusArrayForComponents:(id)components completionHandler:(id /* block */)handler;
- (void)getStatusesForScopesWithIdentifiers:(id)identifiers includeStorages:(BOOL)storages completionHandler:(id /* block */)handler;
- (void)getCloudCacheForRecordWithScopedIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)cloudCacheGetDescriptionForRecordWithScopedIdentifier:(id)identifier related:(BOOL)related completionHandler:(id /* block */)handler;
- (void)addInfoToLog:(id)log;
- (void)forceBackupWithCompletionHandler:(id /* block */)handler;
- (void)requestClientToPushAllChangesWithCompletionHandler:(id /* block */)handler;
- (void)reportSetting:(id)setting hasBeenSetToValue:(id)value;
- (void)reportMiscInformation:(id)information;
- (void)blockEngineElement:(id)element;
- (void)unblockEngineElement:(id)element;
- (void)unblockEngineElementOnce:(id)once;
- (void)provideScopeChangeForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)provideRecordWithCloudScopeIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)provideCloudResource:(id)resource completionHandler:(id /* block */)handler;
- (void)addDropDerivativesRecipe:(id)recipe writeToUserDefaults:(BOOL)defaults withCompletionHandler:(id /* block */)handler;
- (void)_withVoucherForTaskWithIdentifier:(id)identifier do:(id /* block */)do;
- (void)_storeVoucher:(id)voucher forTaskWithIdentifier:(id)identifier;
- (void)_dropVoucherForTaskWithIdentifier:(id)identifier;
@end

#endif /* CPLProxyLibraryManager_h */
