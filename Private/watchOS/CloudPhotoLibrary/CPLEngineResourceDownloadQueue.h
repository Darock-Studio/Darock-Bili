//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLEngineResourceDownloadQueue_h
#define CPLEngineResourceDownloadQueue_h
@import Foundation;

#include "CPLEngineStorage.h"
#include "CPLAbstractObject-Protocol.h"
#include "CPLPlatformObject.h"

@class BOOL *, NSArray, NSDate, NSString;
@protocol OS_dispatch_queue;

@interface CPLEngineResourceDownloadQueue : CPLEngineStorage<CPLAbstractObject> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_downloadLock;
  NSArray *_allQueues;
  NSArray *_allHighPriorityQueues;
  NSArray *_allLowPriorityQueues;
  NSArray *_bestCancellableHighPriorityQueues;
  NSArray *_bestCancellableLowPriorityQueues;
  id /* block */ _highPriorityQueuePerResourceTypeAndTransferIntent;
  id /* block */ _lowPriorityQueuePerResourceTypeAndTransferIntent;
  unsigned long long _inflightTransferTasksCount;
  unsigned long long _transferTasksBurstCount;
  unsigned long long _lastTransferTasksBurstCount;
  NSDate *_lastTransferTaskBurstDate;
  BOOL _shouldRequestABackgroundDownloadSyncPhase;
}

@property (readonly, nonatomic) CPLPlatformObject *platformObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)shouldRetryDownloadOnError:(id)error;

/* instance methods */
- (id)initWithEngineStore:(id)store name:(id)name;
- (unsigned long long)scopeType;
- (BOOL)deleteRecordsForScopeIndex:(long long)index maxCount:(long long)count deletedCount:(long long *)count error:(id *)error;
- (id)cloudResourceForLocalResource:(id *)resource cloudRecord:(id *)record target:(id *)target shouldNotTrustCaches:(BOOL *)caches allowUnsafeClientCache:(BOOL)cache transportScopeMapping:(id)mapping error:(id *)error;
- (id)downloadTaskForLocalResource:(id)resource clientBundleID:(id)id options:(id)options proposedTaskIdentifier:(id)identifier didStartHandler:(id /* block */)handler progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)_downloadTaskForLocalResource:(id)resource clientBundleID:(id)id options:(id)options proposedTaskIdentifier:(id)identifier didStartHandler:(id /* block */)handler progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)_failedTaskWithCompletionHandler:(id /* block */)handler error:(id)error resource:(id)resource taskIdentifier:(id)identifier options:(id)options;
- (id)_resourceStorageCopyTaskForResource:(id)resource taskIdentifier:(id)identifier cloudResource:(id)resource ofRecord:(id)record target:(id)target didStartHandler:(id /* block */)handler progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)_realDownloadTaskForLocalResource:(id)resource taskIdentifier:(id)identifier cloudResource:(id)resource ofRecord:(id)record target:(id)target didStartHandler:(id /* block */)handler progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (BOOL)_shouldTryLowPriorityDownloadWithError:(id *)error;
- (unsigned long long)_transportTaskCount;
- (id)_bestQueueWithCancellableTransportTasks;
- (BOOL)_canScheduleBackgroundDownloads;
- (BOOL)_launchTransportTaskForQueue:(id)queue;
- (void)_dispatchTransportTasksIfNecessary;
- (id)_activeQueueForTransferTask:(id)task;
- (id)createGroupForBackgroundDownloadsOfResourceType:(unsigned long long)type transferIntent:(unsigned long long)intent transport:(id)transport;
- (void)_enqueueTransferTaskInActiveQueue:(id)queue;
- (void)_dequeueTransferTaskInActiveQueue:(id)queue;
- (void)_scheduleBackgroundDownloadsIfNecessary;
- (void)_requestBackgroundDownloads;
- (void)_unscheduleBackgroundDownloads;
- (BOOL)enqueueBackgroundDownloadTaskForResource:(id)resource intent:(unsigned long long)intent downloading:(BOOL)downloading error:(id *)error;
- (BOOL)reenqueueBackgroundDownloadTaskForResource:(id)resource bumpRetryCount:(BOOL)count didDiscard:(BOOL *)discard error:(id *)error;
- (BOOL)removeBackgroundDownloadTaskForResource:(id)resource error:(id *)error;
- (BOOL)markBackgroundDownloadTaskForResourceAsSuceeded:(id)suceeded error:(id *)error;
- (id)dequeueNextBackgroundDownloadTasksForResourceType:(unsigned long long)type andIntent:(unsigned long long)intent maximumSize:(unsigned long long)size maximumCount:(unsigned long long)count error:(id *)error;
- (BOOL)resetDequeuedBackgroundDownloadTasksWithError:(id *)error;
- (BOOL)removeAllBackgroundDownloadTasksForItemWithScopedIdentifier:(id)identifier error:(id *)error;
- (id)enumeratorForDownloadedResources;
- (unsigned long long)countOfQueuedDownloadTasks;
- (BOOL)hasActiveOrQueuedBackgroundDownloadOperations;
- (id)_queuesStatus;
- (id)status;
- (void)barrier;
@end

#endif /* CPLEngineResourceDownloadQueue_h */
