//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLEngineForceSyncTask_h
#define CPLEngineForceSyncTask_h
@import Foundation;

#include "CPLForceSyncTask.h"
#include "CPLEngineForceSyncTaskDelegate-Protocol.h"
#include "CPLEngineLibrary.h"
#include "CPLEngineSyncTask.h"
#include "CPLEngineSyncTaskDelegate-Protocol.h"
#include "CPLScopeFilter.h"
#include "CPLSyncSession.h"

@class NSDate, NSEnumerator, NSString;
@protocol CPLEngineStoreUserIdentifier, OS_dispatch_queue, OS_xpc_object;

@interface CPLEngineForceSyncTask : CPLForceSyncTask<CPLEngineSyncTaskDelegate> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _currentTaskLock;
  BOOL _reallyLaunched;
  BOOL _reallyCancelled;
  CPLEngineSyncTask *_currentTask;
  CPLSyncSession *_fakeSession;
  NSEnumerator *_syncTaskEnumerator;
}

@property (retain, nonatomic) NSObject<CPLEngineStoreUserIdentifier> *transportUserIdentifier;
@property (readonly, nonatomic) NSDate *creationDate;
@property (retain, nonatomic) CPLScopeFilter *filter;
@property (retain, nonatomic) CPLEngineLibrary *engineLibrary;
@property (weak, nonatomic) NSObject<CPLEngineForceSyncTaskDelegate> *delegate;
@property (copy, nonatomic) id /* block */ taskDidFinishWithErrorBlock;
@property (retain, nonatomic) NSObject<OS_xpc_object> *taskActivity;
@property (readonly, nonatomic) BOOL forBackup;
@property (readonly, nonatomic) BOOL forcingProcessedStagedScopes;
@property (nonatomic) BOOL bypassForceSyncLimitations;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithScopeIdentifiers:(id)identifiers engineLibrary:(id)library filter:(id)filter delegate:(id)delegate;
- (void)dealloc;
- (void)cancelTask;
- (void)_dispatchSyncTask:(id)task;
- (id)_currentTask;
- (void)_dropCurrentTask;
- (void)_dispatchNextSyncTask;
- (void)_finishWithError:(id)error;
- (void)launchTask;
- (void)reallyLaunch;
- (void)reallyCancel;
- (void)task:(id)task didProgress:(float)progress userInfo:(id)info;
- (void)task:(id)task didFinishWithError:(id)error;
- (id)_phaseDescription;
@end

#endif /* CPLEngineForceSyncTask_h */
