//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLScopeChange_h
#define CPLScopeChange_h
@import Foundation;

#include "CPLRecordChange.h"
#include "CPLAccountFlags.h"
#include "CPLEngineScope.h"
#include "CPLLibraryInfo.h"
#include "CPLLibraryState.h"
#include "CPLScopedIdentifier.h"
#include "CPLShare.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDate, NSString;

@interface CPLScopeChange : CPLRecordChange<NSSecureCoding, NSCopying>

@property (nonatomic) long long scopeType;
@property (retain, nonatomic) CPLLibraryState *libraryState;
@property (retain, nonatomic) CPLLibraryInfo *libraryInfo;
@property (nonatomic) long long busyState;
@property (copy, nonatomic) NSString *stagingScopeIdentifier;
@property (nonatomic) unsigned long long pullTaskItem;
@property (retain, nonatomic) CPLEngineScope *scope;
@property (copy, @dynamic, nonatomic) CPLScopedIdentifier *scopedIdentifier;
@property (copy, @dynamic, nonatomic) NSString *identifier;
@property (copy, @dynamic, nonatomic) NSDate *recordModificationDate;
@property (readonly, nonatomic) BOOL disabled;
@property (readonly, nonatomic) NSDate *disabledDate;
@property (readonly, nonatomic) NSDate *deleteDate;
@property (readonly, nonatomic) CPLAccountFlags *accountFlags;
@property (readonly, nonatomic) BOOL containerHasBeenWiped;
@property (retain, nonatomic) CPLShare *share;
@property (nonatomic) BOOL activated;
@property (copy, nonatomic) NSString *title;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (BOOL)cplShouldIgnorePropertyForEquality:(id)equality;
+ (id)mappingForScopeTypeDescription;
+ (id)descriptionForScopeType:(long long)type;
+ (id)mappingForScopeBusyStateDescription;
+ (id)descriptionForBusyState:(long long)state;
+ (Class)scopeChangeClassForType:(long long)type;
+ (BOOL)shouldAutoActivateScopeWithType:(long long)type;
+ (BOOL)supportsStagingScopeForScopeWithType:(long long)type;
+ (BOOL)scopeWithTypeHasQuota:(long long)quota;
+ (BOOL)supportsDirectMinglingForScopeWithType:(long long)type;
+ (id)newScopeChangeWithScopeIdentifier:(id)identifier type:(long long)type;
+ (id)newScopeChangeInferClassWithScopeIdentifier:(id)identifier type:(long long)type;
+ (id)newDeleteScopeChangeWithScopeIdentifier:(id)identifier type:(long long)type;
+ (id)newScopeChangeWithAutomaticScopeIdentifierForScopeType:(long long)type;

/* instance methods */
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)_setChangeType:(unsigned long long)type;
- (id)initWithScopeIdentifier:(id)identifier type:(long long)type;
- (id)_scopedIdentifier;
- (id)scopeIdentifier;
- (id)assetCountPerType;
- (BOOL)isDisabled;
- (id)_additionalDescription;
- (id)description;
- (id)redactedDescription;
- (long long)defaultFlags;
- (void)updateScopeFromScopeChange:(id)change direction:(unsigned long long)direction didHaveChanges:(BOOL *)changes;
- (BOOL)isScopeChange;
- (BOOL)isLibraryShare;
- (BOOL)needsToSetScopeIdentifier;
- (void)updateScopeIdentifier:(id)identifier;
- (BOOL)shouldAlwaysUpdateScopeInfoWhenPossible;
- (BOOL)isActivated;
@end

#endif /* CPLScopeChange_h */
