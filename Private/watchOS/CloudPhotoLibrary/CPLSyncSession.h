//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLSyncSession_h
#define CPLSyncSession_h
@import Foundation;

#include "CPLEngineScheduler.h"
#include "CPLScopeFilter.h"
#include "CPLSyncSessionPredictor.h"
#include "CPLSyncSessionPredictorObserver-Protocol.h"

@class NSDate, NSMutableArray, NSMutableSet, NSSet, NSString;
@protocol CPLSyncSessionRescheduler, OS_xpc_object;

@interface CPLSyncSession : NSObject<CPLSyncSessionPredictorObserver> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  BOOL _watchingPredictor;
  NSMutableArray *_sessionInformation;
}

@property (readonly, weak, nonatomic) CPLEngineScheduler *scheduler;
@property (readonly, nonatomic) NSDate *expectedDate;
@property (readonly, nonatomic) unsigned long long sequenceNumber;
@property (readonly, nonatomic) BOOL detached;
@property (readonly, nonatomic) BOOL shouldBeDiscretionary;
@property (readonly, nonatomic) BOOL shouldDefer;
@property (readonly, nonatomic) long long activityState;
@property (readonly, nonatomic) unsigned long long requiredStateAtEndOfSyncSession;
@property (readonly, nonatomic) BOOL shouldRescheduleASyncSession;
@property (readonly, nonatomic) NSDate *proposedRescheduleDate;
@property (readonly, nonatomic) BOOL mightNeedForegroundToStart;
@property (readonly, nonatomic) NSString *whenItWillStartDescription;
@property (retain, nonatomic) NSObject<CPLSyncSessionRescheduler> *rescheduler;
@property (retain, nonatomic) NSObject<OS_xpc_object> *detachedActivity;
@property (readonly, nonatomic) CPLSyncSessionPredictor *predictor;
@property (readonly, nonatomic) CPLScopeFilter *scopeFilter;
@property (readonly, nonatomic) NSSet *scopeIdentifiersExcludedFromPushToTransport;
@property (readonly, nonatomic) NSSet *scopeIdentifiersExcludedFromMingling;
@property (readonly) unsigned long long currentState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)detachedSyncSessionWithScheduler:(id)scheduler scopeFilter:(id)filter;
+ (id)scopeIdentifierToAutomaticallyExcludeFromMingling;
+ (void)setScopeIdentifierToAutomaticallyExcludeFromMingling:(id)mingling;

/* instance methods */
- (id)initWithSequenceNumber:(unsigned long long)number expectedDate:(id)date scheduler:(id)scheduler scopeFilter:(id)filter;
- (id)redactedDescription;
- (BOOL)isDetached;
- (void)requestSyncStateAtEndOfSyncSession:(unsigned long long)session reschedule:(BOOL)reschedule proposedRescheduleDate:(id)date;
- (void)requestSyncStateAtEndOfSyncSession:(unsigned long long)session reschedule:(BOOL)reschedule;
- (BOOL)isAfterDate:(id)date;
- (BOOL)isBeforeDate:(id)date;
- (BOOL)isInMoreThanTimeInverval:(double)inverval;
- (BOOL)isInLessThanTimeInterval:(double)interval;
- (void)dropExpectedDate;
- (void)sessionWillStart;
- (void)deferWithBlock:(id /* block */)block;
- (void)sessionIsDone;
- (void)sessionWontHappen;
- (void)engineIsClosing;
- (void)_updatePrediction:(id)prediction;
- (void)_watchPredictor;
- (void)_unwatchPredictor;
- (void)_watchOrUnwatchPredictorIfNecessary;
- (void)includeScopeIdentifierInPushToTransport:(id)transport;
- (void)excludeScopeIdentifierFromPushToTransport:(id)transport;
- (void)includeScopeIdentifierInMingling:(id)mingling;
- (void)excludeScopeIdentifierFromMingling:(id)mingling;
- (void)predictor:(id)predictor changedPrediction:(id)prediction;
- (void)noteSyncSessionInformation:(id)information arguments:(char *)arguments;
- (void)noteSyncSessionMovedToState:(unsigned long long)state;
- (void)noteSyncSessionInformation:(id)information;
- (id)popSessionInformation;
@end

#endif /* CPLSyncSession_h */
