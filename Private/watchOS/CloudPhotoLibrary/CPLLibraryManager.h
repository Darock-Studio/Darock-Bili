//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLLibraryManager_h
#define CPLLibraryManager_h
@import Foundation;

#include "CPLAbstractObject-Protocol.h"
#include "CPLChangeSession.h"
#include "CPLConfiguration.h"
#include "CPLLibraryManagerDelegate-Protocol.h"
#include "CPLPlatformObject.h"
#include "CPLStatus.h"
#include "_CPLWeakLibraryManager.h"

@class NSError, NSString, NSURL;
@protocol CPLLibraryManagerForceSyncDelegate, CPLLibraryManagerOwner, CPLResourceProgressDelegate, OS_dispatch_queue;

@interface CPLLibraryManager : NSObject<CPLAbstractObject> {
  /* instance variables */
  CPLChangeSession *_currentSession;
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<OS_dispatch_queue> *_sessionLock;
  BOOL _sizeOfResourcesToUploadIsSet;
  NSObject<OS_dispatch_queue> *_initLock;
  _CPLWeakLibraryManager *_weakSelf;
  BOOL _preventObserving;
}

@property (nonatomic) unsigned long long state;
@property (copy, nonatomic) NSString *userOverride;
@property (copy, nonatomic) NSString *effectiveClientBundleIdentifier;
@property (readonly, copy, nonatomic) NSURL *clientLibraryBaseURL;
@property (readonly, copy, nonatomic) NSURL *cloudLibraryStateStorageURL;
@property (readonly, copy, nonatomic) NSURL *cloudLibraryResourceStorageURL;
@property (readonly, copy, nonatomic) NSString *libraryIdentifier;
@property (readonly, nonatomic) unsigned long long libraryOptions;
@property (readonly, copy, nonatomic) NSString *libraryVersion;
@property (nonatomic) unsigned long long estimatedInitialSizeForLocalLibrary;
@property (nonatomic) unsigned long long estimatedInitialAssetCountForLocalLibrary;
@property (readonly, nonatomic) unsigned long long sizeOfResourcesToUpload;
@property (readonly, nonatomic) unsigned long long sizeOfOriginalResourcesToUpload;
@property (readonly, nonatomic) unsigned long long numberOfImagesToUpload;
@property (readonly, nonatomic) unsigned long long numberOfVideosToUpload;
@property (readonly, nonatomic) unsigned long long numberOfOtherItemsToUpload;
@property (weak, nonatomic) NSObject<CPLLibraryManagerDelegate> *delegate;
@property (weak, nonatomic) NSObject<CPLResourceProgressDelegate> *resourceProgressDelegate;
@property (weak, nonatomic) NSObject<CPLLibraryManagerForceSyncDelegate> *forceSyncDelegate;
@property (weak, nonatomic) NSObject<CPLLibraryManagerOwner> *owner;
@property (readonly, nonatomic) CPLConfiguration *configuration;
@property (readonly, nonatomic) CPLStatus *syncStatus;
@property (readonly, nonatomic) unsigned long long status;
@property (readonly, nonatomic) NSError *statusError;
@property (readonly, nonatomic) CPLPlatformObject *platformObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (double)nextOverrideTimeIntervalForSystemBudgets:(unsigned long long)budgets;
+ (id)mappingForLibraryOptions;
+ (id)_reverseMappingForLibraryOptions;
+ (id)descriptionForLibraryOptions:(unsigned long long)options;
+ (unsigned long long)optionsFromDescription:(id)description;
+ (id)allLibraryOptionsDescriptions;
+ (void)useCloudPhotoDaemonImplementation;
+ (id)stateDescriptionForState:(unsigned long long)state;
+ (id)descriptionForProvideContentResult:(unsigned long long)result;
+ (id)platformImplementationProtocol;
+ (id)availableRetentionPolicies;
+ (id)mappingRetentionPolicies;
+ (id)availableExitSources;
+ (id)mappingExitSources;
+ (id)descriptionForExitSource:(long long)source;

/* instance methods */
- (void)getListOfComponentsWithCompletionHandler:(id /* block */)handler;
- (void)getStatusForComponents:(id)components completionHandler:(id /* block */)handler;
- (void)getStatusArrayForComponents:(id)components completionHandler:(id /* block */)handler;
- (void)getStatusesForScopesWithIdentifiers:(id)identifiers includeStorages:(BOOL)storages completionHandler:(id /* block */)handler;
- (void)getCloudCacheForRecordWithScopedIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)cloudCacheGetDescriptionForRecordWithScopedIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)cloudCacheGetDescriptionForRecordWithScopedIdentifier:(id)identifier related:(BOOL)related completionHandler:(id /* block */)handler;
- (void)reportSetting:(id)setting hasBeenEnabled:(BOOL)enabled;
- (void)reportSetting:(id)setting hasBeenSetToValue:(id)value;
- (void)reportMiscInformation:(id)information;
- (void)blockEngineElement:(id)element;
- (void)unblockEngineElement:(id)element;
- (void)unblockEngineElementOnce:(id)once;
- (id)initWithClientLibraryBaseURL:(id)url cloudLibraryStateStorageURL:(id)url cloudLibraryResourceStorageURL:(id)url libraryIdentifier:(id)identifier options:(unsigned long long)options;
- (id)initWithClientLibraryBaseURL:(id)url cloudLibraryStateStorageURL:(id)url cloudLibraryResourceStorageURL:(id)url libraryIdentifier:(id)identifier;
- (id)initForManagement;
- (id)initForManagementWithLibraryIdentifier:(id)identifier;
- (void)barrier;
- (void)dealloc;
- (void)openWithCompletionHandler:(id /* block */)handler;
- (void)_closeDeactivating:(BOOL)deactivating completionHandler:(id /* block */)handler;
- (void)closeWithCompletionHandler:(id /* block */)handler;
- (void)deactivateWithCompletionHandler:(id /* block */)handler;
- (void)enableMainScopeWithCompletionHandler:(id /* block */)handler;
- (void)disableMainScopeWithCompletionHandler:(id /* block */)handler;
- (void)activateScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)deactivateScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)boostPriorityForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)_configurationDidChange;
- (void)_statusDidChange;
- (id)currentSession;
- (void)discardCurrentSession;
- (void)_setCurrentSession:(id)session;
- (void)_setLibraryVersion:(id)version;
- (void)beginPushChangeSessionWithKnownLibraryVersion:(id)version completionHandler:(id /* block */)handler;
- (void)beginPullChangeSessionWithKnownLibraryVersion:(id)version completionHandler:(id /* block */)handler;
- (void)beginPushChangeSessionWithKnownLibraryVersion:(id)version resetTracker:(id)tracker completionHandler:(id /* block */)handler;
- (void)beginPullChangeSessionWithKnownLibraryVersion:(id)version resetTracker:(id)tracker completionHandler:(id /* block */)handler;
- (void)beginDownloadForResource:(id)resource clientBundleID:(id)id highPriority:(BOOL)priority proposedTaskIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)beginDownloadForResource:(id)resource clientBundleID:(id)id intent:(unsigned long long)intent proposedTaskIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)beginDownloadForResource:(id)resource clientBundleID:(id)id options:(id)options proposedTaskIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)beginDownloadForResource:(id)resource clientBundleID:(id)id highPriority:(BOOL)priority completionHandler:(id /* block */)handler;
- (void)beginDownloadForResource:(id)resource highPriority:(BOOL)priority completionHandler:(id /* block */)handler;
- (void)getStreamingURLForResource:(id)resource intent:(unsigned long long)intent hints:(id)hints completionHandler:(id /* block */)handler;
- (void)getStreamingURLForResource:(id)resource intent:(unsigned long long)intent hints:(id)hints clientBundleID:(id)id completionHandler:(id /* block */)handler;
- (void)getStreamingURLForResource:(id)resource intent:(unsigned long long)intent hints:(id)hints timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range clientBundleID:(id)id completionHandler:(id /* block */)handler;
- (void)getStreamingURLOrMediaMakerDataForResource:(id)resource intent:(unsigned long long)intent hints:(id)hints timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range clientBundleID:(id)id completionHandler:(id /* block */)handler;
- (void)publishResource:(id)resource completionHandler:(id /* block */)handler;
- (void)rampingRequestForResourceType:(unsigned long long)type numRequested:(unsigned long long)requested completionHandler:(id /* block */)handler;
- (void)beginInMemoryDownloadOfResource:(id)resource completionHandler:(id /* block */)handler;
- (void)createScope:(id)scope completionHandler:(id /* block */)handler;
- (void)updateShareForScope:(id)scope completionHandler:(id /* block */)handler;
- (void)deleteScopeWithIdentifier:(id)identifier forced:(BOOL)forced completionHandler:(id /* block */)handler;
- (void)deleteScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)refreshScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)createOwnedLibraryShareScopeWithShare:(id)share title:(id)title completionHandler:(id /* block */)handler;
- (void)startExitFromSharedScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(long long)source completionHandler:(id /* block */)handler;
- (void)removeParticipants:(id)participants fromSharedScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(long long)source completionHandler:(id /* block */)handler;
- (void)sharedLibraryRampCheckWithCompletionHandler:(id /* block */)handler;
- (void)getStatusForPendingRecordsSharedToScopeWithIdentifier:(id)identifier maximumCount:(unsigned long long)count completionHandler:(id /* block */)handler;
- (void)fetchSharedScopeFromShareURL:(id)url completionHandler:(id /* block */)handler;
- (void)acceptSharedScope:(id)scope completionHandler:(id /* block */)handler;
- (void)fetchExistingSharedLibraryScopeWithCompletionHandler:(id /* block */)handler;
- (void)publishMomentShare:(id)share completionHandler:(id /* block */)handler;
- (void)fetchMomentShareFromShareURL:(id)url completionHandler:(id /* block */)handler;
- (void)acceptMomentShare:(id)share completionHandler:(id /* block */)handler;
- (void)queryUserDetailsForShareParticipants:(id)participants completionHandler:(id /* block */)handler;
- (void)queryUserIdentitiesWithParticipants:(id)participants completionHandler:(id /* block */)handler;
- (void)forceSynchronizingScopeWithIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)_getMappedScopedIdentifiersForScopedIdentifiers:(id)identifiers inAreLocalIdentifiers:(BOOL)identifiers completionHandler:(id /* block */)handler;
- (id)_mappedUnscopedIdentifiersFromScopedIdentifiers:(id)identifiers;
- (void)getCloudScopedIdentifiersForLocalScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)getLocalScopedIdentifiersForCloudScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)_getMappedIdentifiersForIdentifiers:(id)identifiers inAreLocalIdentifiers:(BOOL)identifiers completionHandler:(id /* block */)handler;
- (void)getCloudIdentifiersForLocalIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)getLocalIdentifiersForCloudIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)resolveLocalScopedIdentifiersForCloudScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (BOOL)_setStatus:(unsigned long long)status andError:(id)error;
- (void)_setSizeOfResourcesToUpload:(unsigned long long)upload sizeOfOriginalResourcesToUpload:(unsigned long long)upload numberOfImages:(unsigned long long)images numberOfVideos:(unsigned long long)videos numberOfOtherItems:(unsigned long long)items;
- (void)resetStatus;
- (void)startSyncSession;
- (id)addSubscriberUsingPublishingHandler:(id /* block */)handler;
- (void)noteClientReceivedNotificationOfServerChanges;
- (void)noteClientIsInForeground;
- (void)noteClientIsInForegroundQuietly:(BOOL)quietly;
- (void)noteClientIsInBackground;
- (void)disableSynchronizationWithReason:(id)reason;
- (void)enableSynchronizationWithReason:(id)reason;
- (void)getSystemBudgetsWithCompletionHandler:(id /* block */)handler;
- (void)setShouldOverrideSystemBudgetsForSyncSession:(BOOL)session;
- (void)setShouldOverride:(BOOL)override forSystemBudgets:(unsigned long long)budgets;
- (void)noteClientIsBeginningSignificantWork;
- (void)noteClientIsEndingSignificantWork;
- (void)checkHasBackgroundDownloadOperationsWithCompletionHandler:(id /* block */)handler;
- (void)getStatusForRecordsWithScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)getStatusForRecordsWithIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)getChangedStatusesWithCompletionHandler:(id /* block */)handler;
- (void)acknowledgeChangedStatuses:(id)statuses;
- (void)addStatusChangesForRecordsWithScopedIdentifiers:(id)identifiers persist:(BOOL)persist;
- (void)addStatusChangesForRecordsWithIdentifiers:(id)identifiers persist:(BOOL)persist;
- (void)getScopeStatusCountsForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)disableMingling;
- (void)enableMingling;
- (void)takeStatisticsSnapshotSinceDate:(id)date completionHandler:(id /* block */)handler;
- (void)testKey:(id)key value:(id)value completionHandler:(id /* block */)handler;
- (void)getTargetsForRecordsWithScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)markLibraryManagerAsInvalid;
- (void)deleteResources:(id)resources checkServerIfNecessary:(BOOL)necessary completionHandler:(id /* block */)handler;
- (void)checkResourcesAreSafeToPrune:(id)prune checkServerIfNecessary:(BOOL)necessary completionHandler:(id /* block */)handler;
- (void)deleteResourcesIfSafe:(id)safe completionHandler:(id /* block */)handler;
- (void)getResourcesForItemWithScopedIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)getResourcesForItemWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)compactFileCacheWithCompletionHandler:(id /* block */)handler;
- (void)resetCacheWithOption:(unsigned long long)option completionHandler:(id /* block */)handler;
- (void)resetCacheWithOption:(unsigned long long)option reason:(id)reason completionHandler:(id /* block */)handler;
- (void)addInfoToLog:(id)log;
- (void)forceBackupWithCompletionHandler:(id /* block */)handler;
- (void)requestClientToPushAllChangesWithCompletionHandler:(id /* block */)handler;
- (void)provideScopeChangeForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)provideRecordWithCloudScopeIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)provideCloudResource:(id)resource completionHandler:(id /* block */)handler;
- (void)addDropDerivativesRecipe:(id)recipe writeToUserDefaults:(BOOL)defaults withCompletionHandler:(id /* block */)handler;
@end

#endif /* CPLLibraryManager_h */
