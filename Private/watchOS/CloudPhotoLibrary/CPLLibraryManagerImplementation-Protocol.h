//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLLibraryManagerImplementation_Protocol_h
#define CPLLibraryManagerImplementation_Protocol_h
@import Foundation;

@protocol CPLLibraryManagerImplementation <CPLPlatformImplementation>
/* instance methods */
- (void)openWithCompletionHandler:(id /* block */)handler;
- (void)closeWithCompletionHandler:(id /* block */)handler;
- (void)deactivateWithCompletionHandler:(id /* block */)handler;
- (void)activateScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)deactivateScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)boostPriorityForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)resetStatus;
- (void)startSyncSession;
- (void)noteClientReceivedNotificationOfServerChanges;
- (void)noteClientIsInForegroundQuietly:(BOOL)quietly;
- (void)noteClientIsInBackground;
- (void)disableSynchronizationWithReason:(id)reason;
- (void)enableSynchronizationWithReason:(id)reason;
- (void)getSystemBudgetsWithCompletionHandler:(id /* block */)handler;
- (void)setShouldOverride:(BOOL)override forSystemBudgets:(unsigned long long)budgets;
- (void)noteClientIsBeginningSignificantWork;
- (void)noteClientIsEndingSignificantWork;
- (void)checkHasBackgroundDownloadOperationsWithCompletionHandler:(id /* block */)handler;
- (void)getStatusForRecordsWithScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)getChangedStatusesWithCompletionHandler:(id /* block */)handler;
- (void)acknowledgeChangedStatuses:(id)statuses;
- (void)addStatusChangesForRecordsWithScopedIdentifiers:(id)identifiers persist:(BOOL)persist;
- (void)getScopeStatusCountsForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)disableMingling;
- (void)enableMingling;
- (void)beginDownloadForResource:(id)resource clientBundleID:(id)id options:(id)options proposedTaskIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)getStreamingURLForResource:(id)resource intent:(unsigned long long)intent hints:(id)hints timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range clientBundleID:(id)id completionHandler:(id /* block */)handler;
- (void)rampingRequestForResourceType:(unsigned long long)type numRequested:(unsigned long long)requested completionHandler:(id /* block */)handler;
- (void)beginInMemoryDownloadOfResource:(id)resource completionHandler:(id /* block */)handler;
- (void)resolveLocalScopedIdentifiersForCloudScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)getMappedScopedIdentifiersForScopedIdentifiers:(id)identifiers inAreLocalIdentifiers:(BOOL)identifiers completionHandler:(id /* block */)handler;
- (void)createScope:(id)scope completionHandler:(id /* block */)handler;
- (void)updateShareForScope:(id)scope completionHandler:(id /* block */)handler;
- (void)deleteScopeWithIdentifier:(id)identifier forced:(BOOL)forced completionHandler:(id /* block */)handler;
- (void)refreshScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchSharedScopeFromShareURL:(id)url completionHandler:(id /* block */)handler;
- (void)acceptSharedScope:(id)scope completionHandler:(id /* block */)handler;
- (void)fetchExistingSharedLibraryScopeWithCompletionHandler:(id /* block */)handler;
- (void)startExitFromSharedScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(long long)source completionHandler:(id /* block */)handler;
- (void)removeParticipants:(id)participants fromSharedScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(long long)source completionHandler:(id /* block */)handler;
- (void)getStatusForPendingRecordsSharedToScopeWithIdentifier:(id)identifier maximumCount:(unsigned long long)count completionHandler:(id /* block */)handler;
- (void)sharedLibraryRampCheckWithCompletionHandler:(id /* block */)handler;
- (void)queryUserDetailsForShareParticipants:(id)participants completionHandler:(id /* block */)handler;
- (void)forceSynchronizingScopeWithIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)addDropDerivativesRecipe:(id)recipe writeToUserDefaults:(BOOL)defaults withCompletionHandler:(id /* block */)handler;
- (void)testKey:(id)key value:(id)value completionHandler:(id /* block */)handler;
- (void)barrier;
- (void)deleteResources:(id)resources checkServerIfNecessary:(BOOL)necessary completionHandler:(id /* block */)handler;
- (void)checkResourcesAreSafeToPrune:(id)prune checkServerIfNecessary:(BOOL)necessary completionHandler:(id /* block */)handler;
- (void)getResourcesForItemWithScopedIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)resetCacheWithOption:(unsigned long long)option reason:(id)reason completionHandler:(id /* block */)handler;
- (void)getListOfComponentsWithCompletionHandler:(id /* block */)handler;
- (void)getStatusForComponents:(id)components completionHandler:(id /* block */)handler;
- (void)getStatusArrayForComponents:(id)components completionHandler:(id /* block */)handler;
- (void)getStatusesForScopesWithIdentifiers:(id)identifiers includeStorages:(BOOL)storages completionHandler:(id /* block */)handler;
- (void)getCloudCacheForRecordWithScopedIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)cloudCacheGetDescriptionForRecordWithScopedIdentifier:(id)identifier related:(BOOL)related completionHandler:(id /* block */)handler;
- (void)compactFileCacheWithCompletionHandler:(id /* block */)handler;
- (void)addInfoToLog:(id)log;
- (void)forceBackupWithCompletionHandler:(id /* block */)handler;
- (void)requestClientToPushAllChangesWithCompletionHandler:(id /* block */)handler;
- (void)reportSetting:(id)setting hasBeenSetToValue:(id)value;
- (void)reportMiscInformation:(id)information;
- (void)blockEngineElement:(id)element;
- (void)unblockEngineElement:(id)element;
- (void)unblockEngineElementOnce:(id)once;
- (void)provideScopeChangeForScopeWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)provideRecordWithCloudScopeIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)provideCloudResource:(id)resource completionHandler:(id /* block */)handler;
@optional
/* instance methods */
- (void)markLibraryManagerAsInvalid;
- (void)getTargetsForRecordsWithScopedIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
@end

#endif /* CPLLibraryManagerImplementation_Protocol_h */
