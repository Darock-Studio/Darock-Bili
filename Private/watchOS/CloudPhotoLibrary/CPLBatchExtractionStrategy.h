//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLBatchExtractionStrategy_h
#define CPLBatchExtractionStrategy_h
@import Foundation;

#include "CPLBatchExtractionStep.h"
#include "CPLBatchExtractionStrategyStorage-Protocol.h"

@class NSArray, NSEnumerator, NSString;

@interface CPLBatchExtractionStrategy : NSObject {
  /* instance variables */
  NSArray *_steps;
  NSEnumerator *_stepEnumerator;
  CPLBatchExtractionStep *_currentStep;
  BOOL _loggedForThisStep;
  BOOL _finished;
}

@property (readonly, copy, nonatomic) NSString *strategyName;
@property (readonly, weak, nonatomic) NSObject<CPLBatchExtractionStrategyStorage> *storage;
@property (readonly, nonatomic) NSString *scopeIdentifier;
@property (nonatomic) unsigned long long maximumRecordCountPerBatch;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, copy, nonatomic) NSString *currentStepDescription;
@property (readonly, copy, nonatomic) NSString *stepsDescription;

/* class methods */
+ (void)setMaximumRecordCountPerBatch:(unsigned long long)batch;
+ (unsigned long long)maximumRecordCountPerBatch;
+ (unsigned long long)minimumRecordCountPerBatch;
+ (unsigned long long)maximumAlbumsPerBatch;
+ (void)setMaximumAlbumsPerBatch:(unsigned long long)batch;
+ (id)usualStrategyWithStorage:(id)storage coveringScopeIdentifier:(id)identifier;
+ (id)overQuotaStrategyWithStorage:(id)storage coveringScopeIdentifier:(id)identifier;
+ (id)minglingStrategyWithStorage:(id)storage coveringScopeIdentifier:(id)identifier maximumBatchSize:(unsigned long long)size;

/* instance methods */
- (id)initWithName:(id)name storage:(id)storage scopeIdentifier:(id)identifier steps:(id)steps;
- (BOOL)_hasChanges;
- (void)_computeNextStep;
- (BOOL)extractBatch:(out id *)batch maximumResourceSize:(unsigned long long)size error:(id *)error;
- (void)reset;
- (void)resetConditionallyFromNewIncomingChange:(id)change;
- (id)description;
- (id)cplFullDescription;
@end

#endif /* CPLBatchExtractionStrategy_h */
