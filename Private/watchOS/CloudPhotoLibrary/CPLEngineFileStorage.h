//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLEngineFileStorage_h
#define CPLEngineFileStorage_h
@import Foundation;

#include "CPLAbstractObject-Protocol.h"
#include "CPLPlatformObject.h"

@class BOOL *, NSMutableArray, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface CPLEngineFileStorage : NSObject<CPLAbstractObject> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_lock;
  NSString *_logDomain;
  NSURL *_crashMarkerURL;
  NSMutableArray *_uncommittedFiles;
  BOOL _shouldResetPlatformTrackAllStoresAndDeletes;
}

@property (nonatomic) BOOL keepOriginals;
@property (nonatomic) BOOL deleteImmediately;
@property (nonatomic) BOOL trackAllStoresAndDeletes;
@property (nonatomic) BOOL trackAllStoresAndDeletesUntilEndOfTransaction;
@property (readonly, nonatomic) NSURL *baseURL;
@property (readonly, nonatomic) CPLPlatformObject *platformObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)platformImplementationProtocol;

/* instance methods */
- (id)_markerURLForTrackAllStoresAndDeletes;
- (id)initWithBaseURL:(id)url;
- (void)doRead:(id /* block */)read;
- (BOOL)doWrite:(id /* block */)write error:(id *)error;
- (BOOL)_recoverFromCrashWithRecoveryHandler:(id /* block */)handler error:(id *)error;
- (BOOL)openWithRecoveryHandler:(id /* block */)handler error:(id *)error;
- (BOOL)closeWithError:(id *)error;
- (unsigned long long)countOfUncommittedFiles;
- (BOOL)hasCrashMarker;
- (void)_addIdentityToUncommittedFiles:(id)files;
- (void)_removeIdentityFromUncommittedFiles:(id)files;
- (BOOL)_fixupIdentity:(id)identity fileURL:(id)url data:(id)data error:(id *)error;
- (BOOL)storeFileAtURL:(id)url identity:(id)identity isOriginal:(BOOL)original moveIfPossible:(BOOL)possible needsCommit:(BOOL *)commit error:(id *)error;
- (BOOL)storeData:(id)data identity:(id)identity isOriginal:(BOOL)original needsCommit:(BOOL *)commit error:(id *)error;
- (BOOL)commitFileWithIdentity:(id)identity error:(id *)error;
- (BOOL)discardUncommittedFileWithIdentity:(id)identity error:(id *)error;
- (BOOL)deleteFileWithIdentity:(id)identity error:(id *)error;
- (BOOL)deleteFileWithIdentity:(id)identity includingOriginal:(BOOL)original error:(id *)error;
- (BOOL)storeUnretainedFileAtURL:(id)url identity:(id)identity isOriginal:(BOOL)original error:(id *)error;
- (BOOL)storeUnretainedData:(id)data identity:(id)identity isOriginal:(BOOL)original error:(id *)error;
- (BOOL)hasFileWithIdentity:(id)identity;
- (void)checkFileSizeForIdentity:(id)identity;
- (id)retainFileURLForIdentity:(id)identity resourceType:(unsigned long long)type error:(id *)error;
- (BOOL)releaseFileURL:(id)url error:(id *)error;
- (BOOL)discardAllRetainedFileURLsWithError:(id *)error;
- (BOOL)compactStorage:(id *)storage;
- (BOOL)resetWithError:(id *)error;
- (BOOL)tryToFreeDiskSpace:(unsigned long long)space actuallyFreedSpace:(unsigned long long *)space error:(id *)error;
- (BOOL)_compactStorageIncludeOriginals:(BOOL)originals desiredFreeSpace:(unsigned long long *)space error:(id *)error;
- (BOOL)compactStorageIncludeOriginals:(BOOL)originals error:(id *)error;
- (BOOL)tryToFreeDiskSpace:(unsigned long long)space actuallyFreedSpace:(unsigned long long *)space includeOriginals:(BOOL)originals error:(id *)error;
- (id)fileEnumeratorIncludingPropertiesForKeys:(id)keys errorHandler:(id /* block */)handler;
- (id)fileEnumerator;
- (BOOL)checkIsEmpty;
- (void)writeTransactionDidFail;
- (void)writeTransactionDidSucceed;
- (BOOL)addDeleteFlagToFileAtURL:(id)url error:(id *)error;
@end

#endif /* CPLEngineFileStorage_h */
