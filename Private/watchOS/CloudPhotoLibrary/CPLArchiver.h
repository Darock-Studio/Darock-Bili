//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLArchiver_h
#define CPLArchiver_h
@import Foundation;

#include "NSCoder.h"

@interface CPLArchiver : NSCoder {
  /* instance variables */
  id _archive;
  id _rootObject;
}

@property (readonly, nonatomic) BOOL forDisplay;
@property (retain, nonatomic) id archiveCursor;

/* class methods */
+ (void)_initializeSmallKeyMapping;
+ (id)archivedDataWithRootObject:(id)object;
+ (id)archivedPropertyListWithRootObject:(id)object;
+ (id)archivedPropertyListWithRootObject:(id)object usingBlock:(id /* block */)block;
+ (id)archivedDataWithRootObject:(id)object usingBlock:(id /* block */)block;
+ (id)unarchivedObjectWithPropertyList:(id)list ofClass:(Class)class;
+ (id)displayablePropertyListWithRootObject:(id)object;
+ (id)fullDescriptionForObject:(id)object;
+ (id)unarchiveObjectWithData:(id)data ofClass:(Class)class;
+ (id)_displayableArrayForArray:(id)array;
+ (id)_displayableObjectForObject:(id)object;
+ (id)displayableDictionaryForDictionary:(id)dictionary;

/* instance methods */
- (id)_encodeKey:(id)key;
- (id)_decodeKey:(id)key class:(Class)class inDictionary:(id)dictionary;
- (BOOL)allowsKeyedCoding;
- (id)archivedPropertyList;
- (id)initWithRootObject:(id)object forDisplay:(BOOL)display;
- (id)initWithRootObject:(id)object forDisplay:(BOOL)display block:(id /* block */)block;
- (id)rootObject;
- (id)initWithArchive:(id)archive rootClass:(Class)class;
- (void)encodeObject:(id)object;
- (void)encodeRootObject:(id)object;
- (void)encodeBycopyObject:(id)object;
- (void)encodeByrefObject:(id)object;
- (void)encodeConditionalObject:(id)object;
- (void)encodeValuesOfObjCTypes:(const char *)ctypes;
- (void)encodeArrayOfObjCType:(const char *)ctype count:(unsigned long long)count at:(const void *)at;
- (void)encodeBytes:(const void *)bytes length:(unsigned long long)length;
- (id)decodeObject;
- (void)decodeValuesOfObjCTypes:(const char *)ctypes;
- (void)decodeArrayOfObjCType:(const char *)ctype count:(unsigned long long)count at:(void *)at;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)length;
- (void)encodePropertyList:(id)list;
- (id)decodePropertyList;
- (void)encodeObject:(id)object forKey:(id)key;
- (void)encodeConditionalObject:(id)object forKey:(id)key;
- (void)encodeBool:(BOOL)bool forKey:(id)key;
- (void)encodeInt:(int)int forKey:(id)key;
- (void)encodeInt32:(int)int32 forKey:(id)key;
- (void)encodeInt64:(long long)int64 forKey:(id)key;
- (void)encodeFloat:(float)float forKey:(id)key;
- (void)encodeDouble:(double)double forKey:(id)key;
- (void)encodeBytes:(const char *)bytes length:(unsigned long long)length forKey:(id)key;
- (BOOL)containsValueForKey:(id)key;
- (id)decodeObjectForKey:(id)key;
- (BOOL)decodeBoolForKey:(id)key;
- (int)decodeIntForKey:(id)key;
- (int)decodeInt32ForKey:(id)key;
- (long long)decodeInt64ForKey:(id)key;
- (float)decodeFloatForKey:(id)key;
- (double)decodeDoubleForKey:(id)key;
- (const char *)decodeBytesForKey:(id)key returnedLength:(unsigned long long *)length;
- (void)encodeInteger:(long long)integer forKey:(id)key;
- (long long)decodeIntegerForKey:(id)key;
- (id)decodeObjectOfClass:(Class)class forKey:(id)key;
- (id)decodeObjectOfClasses:(id)classes forKey:(id)key;
- (id)decodePropertyListForKey:(id)key;
- (void)encodePoint:(struct CGPoint { double x0; double x1; })point forKey:(id)key;
- (void)encodeSize:(struct CGSize { double x0; double x1; })size forKey:(id)key;
- (void)encodeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect forKey:(id)key;
- (struct CGPoint { double x0; double x1; })decodePointForKey:(id)key;
- (struct CGSize { double x0; double x1; })decodeSizeForKey:(id)key;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })decodeRectForKey:(id)key;
@end

#endif /* CPLArchiver_h */
