//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CPLPushToTransportScopeTask_h
#define CPLPushToTransportScopeTask_h
@import Foundation;

#include "CPLEngineScopedTask.h"
#include "CPLEnginePushRepository.h"
#include "CPLEngineScheduler.h"
#include "CPLEngineScope.h"
#include "CPLEngineScopeStorage.h"
#include "CPLEngineTransport.h"
#include "CPLTransportScopeMapping.h"
#include "CPLUploadPushedChangesTask.h"
#include "CPLUploadPushedChangesTaskDelegate-Protocol.h"

@class BOOL *, NSDate, NSString;
@protocol CPLEngineTransportGroup, CPLEngineTransportUpdateContributorsTask, OS_dispatch_queue;

@interface CPLPushToTransportScopeTask : CPLEngineScopedTask<CPLUploadPushedChangesTaskDelegate> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_lock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _currentSubtaskLock;
  NSString *_scopeIdentifier;
  CPLEngineScopeStorage *_scopes;
  CPLEngineTransport *_transport;
  CPLEnginePushRepository *_pushRepository;
  CPLEngineScheduler *_scheduler;
  CPLEngineScope *_sharedScope;
  long long _ruleGroup;
  CPLTransportScopeMapping *_transportScopeMapping;
  NSObject<CPLEngineTransportUpdateContributorsTask> *_updateContributorsTask;
  NSObject<CPLEngineTransportGroup> *_storedTransportGroup;
  NSObject<CPLEngineTransportGroup> *_transportGroup;
  long long _taskItem;
  NSString *_currentTaskKey;
  NSDate *_taskStartDate;
  unsigned long long _recordCount;
  BOOL _didExtractOneBatch;
  BOOL _wasBusy;
  BOOL _hasUploadedOneBatch;
  BOOL _retryImmediately;
  BOOL _contributorsUpdateIsDisabled;
}

@property (readonly) CPLUploadPushedChangesTask *currentSubtask;
@property (nonatomic) BOOL highPriority;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithEngineLibrary:(id)library session:(id)session clientCacheIdentifier:(id)identifier scope:(id)scope transportScope:(id)scope;
- (void)_launchSubTask:(id)task;
- (void)_discardCurrentSubtask;
- (id)scopesForTask;
- (BOOL)checkScopeIsValidInTransaction:(id)transaction;
- (void)_didStartTaskWithKey:(id)key recordCount:(unsigned long long)count;
- (void)_didFinishTaskWithKey:(id)key error:(BOOL)error cancelled:(BOOL)cancelled;
- (BOOL)_shouldUploadBatchesWithDropReason:(id *)reason shouldQuarantineRecords:(BOOL *)records inTransaction:(id)transaction;
- (void)_prepareTransportGroupForOneBatch;
- (void)_noteSuccessfulUpdateInTransaction:(id)transaction;
- (void)_uploadChangesWithPriority:(unsigned long long)priority maxBatchSize:(unsigned long long)size;
- (void)_resetPriority;
- (void)_updateContributors:(id)contributors;
- (void)_acknowledgeContributorUpdatesAndContinue:(id)continue;
- (id)_contributorsUpdatesInTransaction:(id)transaction;
- (void)_launch;
- (void)launch;
- (void)cancel:(BOOL)cancel;
- (void)cancel;
- (void)_excludeScopeFromMingling;
- (void)_includeScopeInMingling;
- (BOOL)_shouldNotTrustCloudCacheAfterError:(id)error;
- (void)_updateQuotaStrategyAfterSuccessInTransaction:(id)transaction;
- (void)_pushTaskDidFinishWithError:(id)error;
- (id)phaseDescriptionLastChangeDate:(id *)date;
- (id)phaseDescription;
- (id)taskIdentifier;
- (void)_uploadTask:(id)task didFinishWithError:(id)error;
- (void)task:(id)task didFinishWithError:(id)error;
- (void)task:(id)task didProgress:(float)progress userInfo:(id)info;
- (BOOL)task:(id)task checkScopeIsValidInTransaction:(id)transaction;
- (BOOL)task:(id)task shouldRetryImmediatelyInTransaction:(id)transaction;
- (void)task:(id)task noteSuccessfulUpdateInTransaction:(id)transaction;
- (BOOL)task:(id)task shouldUploadBatchesWithDropReason:(id *)reason shouldQuarantineRecords:(BOOL *)records inTransaction:(id)transaction;
@end

#endif /* CPLPushToTransportScopeTask_h */
