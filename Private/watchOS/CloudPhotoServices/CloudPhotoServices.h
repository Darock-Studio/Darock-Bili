//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef CloudPhotoServices_h
#define CloudPhotoServices_h
@import Foundation;

#include "CPLDerivativeGenerator-Protocol.h"

@interface CloudPhotoServices : NSObject<CPLDerivativeGenerator>
/* class methods */
+ (void)initialize;
+ (void)resizeImageAtURL:(id)url destinationURL:(id)url maximumPixelCount:(long long)count bakeInOrientation:(BOOL)orientation colorOutput:(long long)output reason:(id)reason completionHandler:(id /* block */)handler;
+ (void)resizeImageAtURL:(id)url destinationURL:(id)url options:(id)options completionHandler:(id /* block */)handler;
+ (long long)paMediaConversionColorSpaceForCloudPhotoDerivativeColorOutput:(long long)output;
+ (id)generateGIFForVideoAtURL:(id)url destinationURL:(id)url completionHandler:(id /* block */)handler;
+ (void)generatePosterFrameForVideoAtURL:(id)url maximumPixelCount:(long long)count destinationURL:(id)url reason:(id)reason completionHandler:(id /* block */)handler;
+ (id)transcodeVideoAtURL:(id)url withAdjustments:(id)adjustments destinationURL:(id)url options:(id)options reason:(id)reason isCancellable:(BOOL)cancellable completionHandler:(id /* block */)handler;
+ (BOOL)isUnsupportedOriginalFormatError:(id)error;
+ (void)generateDerivativeResourcesFromInputResource:(id)resource withAdjustments:(id)adjustments destinationDirectory:(id)directory fingerprintScheme:(id)scheme includePosterFrameForVideo:(BOOL)video completionHandler:(id /* block */)handler;
+ (BOOL)isMovieUTI:(id)uti;
+ (BOOL)canGenerateImageDerivativesFromUTI:(id)uti;
+ (void)generateDerivativeResourcesFromInputResource:(id)resource withAdjustments:(id)adjustments destinationDirectory:(id)directory fingerprintScheme:(id)scheme derivativesFilter:(id)filter recordChangeType:(unsigned long long)type includePosterFrameForVideo:(BOOL)video completionHandler:(id /* block */)handler;
+ (id)workQueue;
+ (void)generateFullSizeJPEGIfNecessaryFromInputResource:(id)resource destinationDirectory:(id)directory fingerprintScheme:(id)scheme completionHandler:(id /* block */)handler;
+ (void)_generateImageDerivativeResourcesFromInputResource:(id)resource destinationDirectory:(id)directory fingerprintScheme:(id)scheme isAdjusted:(BOOL)adjusted derivativesFilter:(id)filter recordChangeType:(unsigned long long)type completionHandler:(id /* block */)handler;
+ (unsigned long long)_bestImageResourceTypeForPixelCount:(long long)count;
+ (id)_filenameForResourceWithItemScopedIdentifier:(id)identifier resourceType:(unsigned long long)type extension:(id)extension;
+ (void)_createDerivativeResourcesFromInputURL:(id)url resourceTypes:(id)types withItemScopedIdentifier:(id)identifier destinationDirectory:(id)directory fingerprintScheme:(id)scheme outputResources:(id)resources convertToSRGB:(BOOL)srgb;
+ (id)derivativeImageResourceUniformTypeForResourceType:(unsigned long long)type;
+ (id)_createCPLResourceFromURL:(id)url withResourceType:(unsigned long long)type uniformType:(id)type itemScopedIdentifier:(id)identifier fingerprintScheme:(id)scheme;
+ (void)_createPosterFrameResourcesFromInputURL:(id)url withItemScopedIdentifier:(id)identifier includeDerivative:(id /* block */)derivative destinationDirectory:(id)directory fingerprintScheme:(id)scheme outputResources:(id)resources;
+ (id)_extractVideoMetadataResourceFrom:(id)from destinationDirectory:(id)directory fingerprintScheme:(id)scheme;
+ (void)_generateVideoDerivativeResourcesFromInputResource:(id)resource withCPLAdjustments:(id)cpladjustments destinationDirectory:(id)directory fingerprintScheme:(id)scheme derivativesFilter:(id)filter recordChangeType:(unsigned long long)type includePosterFrame:(BOOL)frame completionHandler:(id /* block */)handler;
+ (BOOL)shouldGenerateVideoDerivativeForAVAsset:(id)avasset forResourceType:(unsigned long long)type adjusted:(BOOL)adjusted;
+ (BOOL)_shouldGenerateLargeVideoDerivativeForAVAsset:(id)avasset;
+ (BOOL)_shouldGenerateHDRMediumVideoDerivative;
+ (BOOL)_createVideoResourcesFromInputURL:(id)url withItemScopedIdentifier:(id)identifier videoAdjustments:(id)adjustments resourceType:(unsigned long long)type forIris:(BOOL)iris destinationDirectory:(id)directory fingerprintScheme:(id)scheme outputResources:(id)resources error:(id *)error;
+ (id)_imageServiceClient;
+ (id)_videoServiceClient;
@end

#endif /* CloudPhotoServices_h */
