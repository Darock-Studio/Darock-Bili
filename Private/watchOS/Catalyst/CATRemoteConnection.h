//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 10.0.0.0.0
//
#ifndef CATRemoteConnection_h
#define CATRemoteConnection_h
@import Foundation;

#include "CATHTTPMessageParser.h"
#include "CATHTTPMessageParserDelegate-Protocol.h"
#include "CATRemoteConnectionDelegate-Protocol.h"
#include "CATRemoteConnectionSocketOptions.h"
#include "CATSerialOperationQueue.h"
#include "NSStreamDelegate-Protocol.h"

@class NSArray, NSError, NSInputStream, NSMutableArray, NSMutableData, NSOutputStream, NSString;
@protocol OS_dispatch_source;

@interface CATRemoteConnection : NSObject<CATHTTPMessageParserDelegate, NSStreamDelegate> {
  /* instance variables */
  CATHTTPMessageParser *mMessageParser;
  long long mState;
  NSMutableArray *mPendingSendContexts;
  NSObject<OS_dispatch_source> *mConnectionTimeoutTimer;
  NSError *mInterruptionError;
  NSMutableData *mReadBuffer;
  NSArray *mTrustedCertificates;
  long long mPeerTrustState;
  CATSerialOperationQueue *mStreamEventQueue;
}

@property (retain, nonatomic) NSInputStream *inputStream;
@property (retain, nonatomic) NSOutputStream *outputStream;
@property (nonatomic) BOOL usesSSL;
@property (nonatomic) unsigned long long bufferSize;
@property (weak, nonatomic) NSObject<CATRemoteConnectionDelegate> *delegate;
@property (copy, nonatomic) NSString *name;
@property (readonly, nonatomic) struct __SecTrust * peerTrust;
@property (nonatomic) double connectionTimeoutInterval;
@property (copy, nonatomic) CATRemoteConnectionSocketOptions *socketOptions;
@property (copy, nonatomic) NSArray *customTrustEvaluationPolicies;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)createConnectionPairWithConnection:(id *)connection andConnection:(id *)connection;
+ (void)createConnectionPairWithConnection:(id *)connection andConnection:(id *)connection bufferSize:(unsigned long long)size;

/* instance methods */
- (id)initWithNetService:(id)service;
- (id)initWithInputStream:(id)stream outputStream:(id)stream;
- (id)initWithInputStream:(id)stream outputStream:(id)stream bufferSize:(unsigned long long)size;
- (void)dealloc;
- (void)sendData:(id)data userInfo:(id)info;
- (void)sendDataWithStream:(id)stream length:(unsigned long long)length userInfo:(id)info;
- (void)secureUsingClientIdentity:(struct __SecIdentity *)identity trustedCertificates:(id)certificates;
- (void)secureUsingServerIdentity:(struct __SecIdentity *)identity trustedCertificates:(id)certificates;
- (void)open;
- (void)close;
- (void)scheduleStreams;
- (void)unscheduleStreams;
- (BOOL)secureUsingIdentity:(struct __SecIdentity *)identity trustedCertificates:(id)certificates isServer:(BOOL)server;
- (void)tryEvaluatingPeerTrustWithStream:(id)stream;
- (int)applyCustomEvaluationPoliciesToTrust:(struct __SecTrust *)trust;
- (void)trustDecisionDidRespondWithDecisionToAllowUntrustedConnection:(BOOL)connection;
- (void)configureStreamSocketOptions;
- (void)connectionTimedOut;
- (void)connectionShouldSendData;
- (void)enqueueSendContext:(id)context;
- (BOOL)trySendingDataWithContext:(id)context error:(id *)error;
- (void)sendDidSucceed:(id)succeed;
- (void)sendDidFail:(id)fail withError:(id)error;
- (void)connectionDidReceiveData;
- (void)connectionDidInterruptWithError:(id)error;
- (void)delegateWillSecure;
- (void)delegateDidSecure;
- (void)delegateDidSendData:(id)data userInfo:(id)info;
- (void)delegateDidFailToSendData:(id)data userInfo:(id)info error:(id)error;
- (void)delegateDidReceiveData:(id)data;
- (void)delegateDidReceiveDataRequestWithURL:(id)url;
- (void)delegateDidWriteDataForContextIfNeeded:(id)needed;
- (void)delegateDidWriteDataFromStream:(id)stream totalBytesWritten:(unsigned long long)written totalBytesExpectedToWrite:(unsigned long long)write userInfo:(id)info;
- (void)delegateDidSendDataWithStream:(id)stream userInfo:(id)info;
- (void)delegateDidFailToSendDataWithStream:(id)stream userInfo:(id)info error:(id)error;
- (void)delegateDidReceiveStreamData:(id)data moreComing:(BOOL)coming;
- (void)delegateDidOpen;
- (void)delegateDidClose;
- (void)delegateDidInterruptWithError:(id)error;
- (void)messageParser:(id)parser didParseRequestData:(id)data;
- (void)messageParser:(id)parser didParseResponseData:(id)data moreComing:(BOOL)coming;
- (void)messageParser:(id)parser didParseRequestWithURL:(id)url;
- (void)stream:(id)stream handleEvent:(unsigned long long)event;
- (void)_stream:(id)_stream handleEvent:(unsigned long long)event;
@end

#endif /* CATRemoteConnection_h */
