//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef CoreEmbeddedSpeechRecognizer_h
#define CoreEmbeddedSpeechRecognizer_h
@import Foundation;

#include "CESRSpeechServiceDelegate-Protocol.h"
#include "CoreEmbeddedSpeechRecognizerProvider-Protocol.h"

@class NSData, NSError, NSString, NSXPCConnection;
@protocol CoreEmbeddedSpeechRecognizerDelegate, OS_dispatch_queue;

@interface CoreEmbeddedSpeechRecognizer : NSObject<CESRSpeechServiceDelegate, CoreEmbeddedSpeechRecognizerProvider> {
  /* instance variables */
  BOOL _recognitionActive;
  NSObject<OS_dispatch_queue> *_queue;
  NSXPCConnection *_esConnection;
  BOOL _hasRecognizedAnything;
  unsigned char _instanceUUID[16];
  NSString *_currentLanguage;
  NSError *_recognitionError;
  NSString *_preheatedProfileAssetPath;
  NSData *_preheatedProfile;
}

@property (readonly, weak, nonatomic) NSObject<CoreEmbeddedSpeechRecognizerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)handlePostUpgradeSubscriptions;
+ (void)cleanupUnusedSubscriptions;
+ (void)compileAllAssets;
+ (void)_compileAllAssetsWithCompletion:(id /* block */)completion;
+ (void)resetCacheAndCompileAllAssets;
+ (void)forceCooldownIfIdle;
+ (id)speechProfileDataLastModifiedDataForLanguage:(id)language;
+ (id)profilePathForLanguage:(id)language errorOut:(id *)out;
+ (id)dictionaryWithContentsProfilePathForLanguage:(id)language errorOut:(id *)out;
+ (id)purgeInstalledAssetsExceptLanguages:(id)languages error:(id *)error;
+ (BOOL)purgeInstalledAssetsExceptLanguages:(id)languages assetType:(unsigned long long)type error:(id *)error;
+ (void)setAssetsPurgeabilityExceptLanguages:(id)languages assetType:(unsigned long long)type;
+ (id)offlineDictationStatusIgnoringCache:(BOOL)cache error:(id *)error;

/* instance methods */
- (id)initWithDelegate:(id)delegate instanceUUID:(unsigned char x[16])uuid;
- (id)init;
- (void)dealloc;
- (id)_newConnection;
- (id)_connection;
- (id)_service;
- (id)_serviceWithFunctionName:(id)name errorHandler:(id /* block */)handler;
- (id)_synchronousServiceWithErrorHandler:(id /* block */)handler;
- (void)preheatSpeechRecognitionWithLanguage:(id)language modelOverrideURL:(id)url;
- (void)preheatSpeechRecognitionWithAssetConfig:(id)config preheatSource:(id)source modelOverrideURL:(id)url;
- (void)startSpeechRecognitionWithParameters:(id)parameters didStartHandler:(id /* block */)handler;
- (void)startSpeechRecognitionWithParameters:(id)parameters didStartHandlerWithInfo:(id /* block */)info;
- (void)sendSpeechCorrectionInfo:(id)info interactionIdentifier:(id)identifier;
- (void)createSpeechProfileWithLanguage:(id)language modelOverridePath:(id)path JSONData:(id)jsondata completion:(id /* block */)completion;
- (void)updateSpeechProfileWithLanguage:(id)language modelOverridePath:(id)path completion:(id /* block */)completion;
- (void)getOfflineAssetStatusIgnoringCache:(BOOL)cache assetType:(unsigned long long)type withCompletion:(id /* block */)completion;
- (void)getOfflineAssetStatusIgnoringCache:(BOOL)cache assetType:(unsigned long long)type withDetailedStatus:(BOOL)status withCompletion:(id /* block */)completion;
- (void)getOfflineDictationStatusIgnoringCache:(BOOL)cache withCompletion:(id /* block */)completion;
- (void)getOfflineDictationStatusWithCompletion:(id /* block */)completion;
- (void)runCorrectedTextEvaluationWithAudioDatas:(id)datas recordDatas:(id)datas language:(id)language samplingRate:(unsigned long long)rate caseSensitive:(BOOL)sensitive skipLME:(BOOL)lme wordSenseAccessListSet:(id)set completion:(id /* block */)completion;
- (void)runEvaluationWithDESRecordDatas:(id)datas language:(id)language recipe:(id)recipe attachments:(id)attachments fidesPersonalizedLMPath:(id)lmpath fidesPersonalizedLMTrainingAsset:(id)asset scrubResult:(BOOL)result completion:(id /* block */)completion;
- (void)runEvaluationWithDESRecordDatas:(id)datas language:(id)language recipe:(id)recipe fidesPersonalizedLMPath:(id)lmpath fidesPersonalizedLMTrainingAsset:(id)asset scrubResult:(BOOL)result completion:(id /* block */)completion;
- (void)redecodeWithAudioDatas:(id)datas language:(id)language task:(id)task samplingRate:(unsigned long long)rate completion:(id /* block */)completion;
- (void)readProfileAndUserDataWithLanguage:(id)language allowOverride:(BOOL)override completion:(id /* block */)completion;
- (void)resetDESWithCompletion:(id /* block */)completion;
- (void)fetchAssetsForLanguage:(id)language completion:(id /* block */)completion;
- (void)fetchAssetsForAssetConfig:(id)config completion:(id /* block */)completion;
- (id)modelPropertiesForAssetConfig:(id)config error:(id *)error;
- (void)addAudioPacket:(id)packet;
- (void)addAudioPacket:(id)packet packetRecordedTime:(id)time packetReadyUpstreamTime:(id)time;
- (void)finishAudio;
- (void)stopAudioDecoding;
- (void)requestEagerResult;
- (void)invalidate;
- (void)deleteAllDESRecordsForDictationPersonalization;
- (unsigned char x[16] *)instanceUUID;
- (void)pauseRecognition;
- (void)resumeRecognitionWithPrefixText:(id)text postfixText:(id)text selectedText:(id)text;
- (void)speechServiceDidSelectRecognitionModelWithModelProperties:(id)properties;
- (void)speechServiceDidRecognizeTokens:(id)tokens;
- (void)speechServiceDidRecognizeTokens:(id)tokens withMetadata:(id)metadata;
- (void)speechServiceDidRecognizePartialPackage:(id)package withMetadata:(id)metadata;
- (void)speechServiceDidProcessAudioDuration:(double)duration;
- (void)speechServiceDidRecognizeRawEagerRecognitionCandidate:(id)candidate;
- (void)speechServiceDidRecognizeFinalResultCandidatePackage:(id)package;
- (void)speechServiceDidRecognizeVoiceCommandCandidatePackage:(id)package withMetadata:(id)metadata;
- (void)speechServiceDidRecognizePackage:(id)package;
- (void)speechServiceDidRecognizePackage:(id)package withMetadata:(id)metadata;
- (void)speechServiceDidFinishRecognitionWithStatistics:(id)statistics error:(id)error;
- (void)speechServiceDidProduceEndpointFeaturesWithWordCount:(long long)count trailingSilenceDuration:(long long)duration eosLikelihood:(double)likelihood pauseCounts:(id)counts silencePosterior:(double)posterior processedAudioDurationInMilliseconds:(long long)milliseconds;
- (void)speechServiceDidProduceLoggablePackage:(id)package;
- (void)fetchUserDataForLanguage:(id)language completion:(id /* block */)completion;
- (void)startMissingAssetDownload;
- (void)invalidatePersonalizedLM;
- (void)removePersonalizedLMForFidesOnly:(BOOL)only;
- (void)invalidateUaapLM;
@end

#endif /* CoreEmbeddedSpeechRecognizer_h */
