//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef CSVTUITrainingSessionWithPayload_h
#define CSVTUITrainingSessionWithPayload_h
@import Foundation;

#include "CSVTUITrainingSession.h"
#include "CSVTUIAudioSessionDelegate-Protocol.h"
#include "CSVTUIEndPointDelegate-Protocol.h"
#include "SFSpeechRecognitionTaskDelegate-Protocol.h"

@class NSDictionary, NSString;

@interface CSVTUITrainingSessionWithPayload : CSVTUITrainingSession<SFSpeechRecognitionTaskDelegate, CSVTUIAudioSessionDelegate, CSVTUIEndPointDelegate> {
  /* instance variables */
  BOOL _detectBOS;
  BOOL _ASRResultReceived;
  BOOL _reportedStopListening;
  BOOL _utteranceStored;
  unsigned long long _numSamplesFed;
  unsigned long long _bestTriggerSampleStart;
  unsigned long long _extraSamplesAtStart;
}

@property (retain, nonatomic) NSDictionary *voiceTriggerEventInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)startTraining;
- (BOOL)shouldHandleSession;
- (BOOL)shouldMatchPayload;
- (void)_registerVoiceTriggerTimeout;
- (void)_firedVoiceTriggerTimeout;
- (void)_registerForceEndPointTimeout;
- (void)_registerEndPointTimeout;
- (void)_firedEndPointTimeout;
- (void)_reportStopListening;
- (void)handleAudioInput:(id)input;
- (void)audioSessionDidStartRecording:(BOOL)recording error:(id)error;
- (void)audioSessionDidStopRecording:(long long)recording;
- (void)audioSessionRecordBufferAvailable:(id)available;
- (void)audioSessionErrorDidOccur:(id)occur;
- (void)audioSessionUnsupportedAudioRoute;
- (void)didDetectBeginOfSpeech;
- (void)didDetectEndOfSpeech:(long long)speech;
- (void)closeSessionWithStatus:(int)status successfully:(BOOL)successfully;
- (void)speechRecognitionTask:(id)task didHypothesizeTranscription:(id)transcription;
- (void)speechRecognitionTask:(id)task didFinishRecognition:(id)recognition;
- (void)speechRecognitionTask:(id)task didFinishSuccessfully:(BOOL)successfully;
- (void)matchRecognitionResult:(id)result withMatchedBlock:(id /* block */)block withNonMatchedBlock:(id /* block */)block;
@end

#endif /* CSVTUITrainingSessionWithPayload_h */
