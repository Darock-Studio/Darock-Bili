//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef SSRUtils_h
#define SSRUtils_h
@import Foundation;

@interface SSRUtils : NSObject
/* class methods */
+ (id)stringForInvocationStyle:(unsigned long long)style;
+ (id)stringForCSSpIdType:(unsigned long long)type;
+ (unsigned long long)explicitSpIdTypeForSpId:(unsigned long long)id;
+ (unsigned long long)spIdTypeForString:(id)string;
+ (id)stringForSpeakerRecognizerType:(unsigned long long)type;
+ (id)stringForVoiceProfileRetrainerType:(unsigned long long)type;
+ (id)satConfigFileNameForCSSpIdType:(unsigned long long)type;
+ (id)psrConfigFileNameForCSSpIdType:(unsigned long long)type;
+ (id)satConfigFileNameForCSSpIdType:(unsigned long long)type forModelType:(unsigned long long)type forAssetType:(unsigned long long)type;
+ (id)spIdVoiceProfileImportRootDir;
+ (void)createDirectoryIfDoesNotExist:(id)exist;
+ (id)ssrAudioLogsDir;
+ (BOOL)ssrAudioLogsCountWithinPrivacyLimit;
+ (void)cleanupOrphanedVoiceIdGradingFiles;
+ (id)spidAudioTrainUtterancesDir;
+ (void)streamAudioFromFileUrl:(id)url audioStreamBasicDescriptor:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })descriptor samplesPerStreamChunk:(unsigned long long)chunk audioDataAvailableHandler:(id /* block */)handler;
+ (BOOL)isSpeakerRecognitionSupportedInLocale:(id)locale;
+ (id)readJsonFileAtPath:(id)path;
+ (unsigned long long)getVoiceProfileProductCategoryFromVersionFilePath:(id)path;
+ (id)getVoiceProfileIdentityFromVersionFilePath:(id)path;
+ (id)deviceCategoryStringRepresentationForCategoryType:(unsigned long long)type;
+ (unsigned long long)deviceCategoryForDeviceProductType:(id)type;
+ (BOOL)isCurrentDeviceCompatibleWithNewerVoiceProfileAt:(id)at;
+ (BOOL)isCurrentDeviceCompatibleWithVoiceProfileAt:(id)at;
+ (id)getImplicitUtteranceCacheDirectory;
+ (long long)getNumberOfAudioFilesInDirectory:(id)directory;
+ (void)dumpFilesInDirectory:(id)directory;
+ (id)getContentsOfDirectory:(id)directory;
+ (void)getHomeUserIdForVoiceProfile:(id)profile withCompletion:(id /* block */)completion;
+ (id)getVoiceProfilesForSiriProfileId:(id)id;
+ (id)getVoiceProfileForSiriProfileId:(id)id forLanguageCode:(id)code;
+ (void)logSpeakerRecognitionGradingMetadataAtFilepath:(id)filepath withScoreInfo:(id)info;
+ (void)segmentVoiceTriggerFromAudioFile:(id)file withVTEventInfo:(id)info withStorePayloadPortion:(BOOL)portion withCompletion:(id /* block */)completion;
+ (id)getEnrollmentUtterancesFromDirectory:(id)directory;
+ (id)getExplicitEnrollmentUtterancesFromDirectory:(id)directory;
+ (id)getExplicitMarkedEnrollmentUtterancesFromDirectory:(id)directory;
+ (void)getEnrollmentUtterancesCountFromDirectory:(id)directory withCountBlock:(id /* block */)block;
+ (id)getImplicitEnrollmentUtterancesFromDirectory:(id)directory;
+ (id)_getUtterancesFromDirectory:(id)directory;
+ (id)removeItemAtPath:(id)path;
+ (id)moveContentsOfSrcDirectory:(id)directory toDestDirectory:(id)directory;
+ (BOOL)encryptFileAt:(id)at andSaveTo:(id)to error:(id *)error;
+ (id)combineScoreFromPSR:(id)psr fromSAT:(id)sat withCombinedWt:(float)wt;
+ (BOOL)isMphVTUIKeywordDetectorSupportedPlatform;
@end

#endif /* SSRUtils_h */
