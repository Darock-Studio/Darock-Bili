//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXIPCServer_h
#define AXIPCServer_h
@import Foundation;

#include "AXIPCServerClientRegistrationDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;

@interface AXIPCServer : NSObject<AXIPCServerClientRegistrationDelegate> {
  /* instance variables */
  struct __CFRunLoopSource * _serverRunLoopSource;
  unsigned int _serverPort;
  NSMutableSet *_connectedClients;
  id /* block */ _clientInvalidationHandler;
  NSMutableDictionary *_entitlements;
  NSMutableDictionary *_validSecurityTokens;
  unsigned int _assignedServerPort;
  unsigned int _customQueueSize;
}

@property (nonatomic) BOOL running;
@property (retain, nonatomic) NSString *serviceName;
@property (retain, nonatomic) NSMutableDictionary *handlers;
@property (copy, nonatomic) id /* block */ defaultHandler;
@property (retain, nonatomic) NSMutableArray *delayedMessages;
@property (nonatomic) BOOL perPidService;
@property (readonly, nonatomic) unsigned int machPort;
@property (copy, nonatomic) id /* block */ clientInvalidationCallback;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithServiceName:(id)name perPidService:(BOOL)service;
- (id)initWithPort:(unsigned int)port serviceRunLoopSource:(struct __CFRunLoopSource *)source;
- (void)dealloc;
- (void)setServiceRunLoopSource:(struct __CFRunLoopSource *)source;
- (BOOL)startServerWithError:(id *)error;
- (BOOL)stopServerWithError:(id *)error;
- (void)setHandler:(id /* block */)handler forKey:(int)key;
- (void)removeHandlerForKey:(int)key;
- (void)_registerContext:(id)context forKey:(int)key;
- (void)_addPossibleRequiredEntitlementsToMessageWithKey:(int)key first:(id)first vothers:(char *)vothers;
- (void)setHandlerWithTarget:(id)target selector:(SEL)selector forKey:(int)key;
- (void)setHandlerWithTarget:(id)target selector:(SEL)selector async:(BOOL)async forKey:(int)key;
- (void)setHandlerWithTarget:(id)target selector:(SEL)selector forKey:(int)key possibleRequiredEntitlements:(id)entitlements;
- (void)setHandlerWithTarget:(id)target selector:(SEL)selector async:(BOOL)async forKey:(int)key possibleRequiredEntitlements:(id)entitlements;
- (void)removeAllHandlersForTarget:(id)target;
- (void)addPossibleRequiredEntitlement:(id)entitlement forMessageWithKey:(int)key;
- (void)removePossibleRequiredEntitlement:(id)entitlement forMessageWithKey:(int)key;
- (BOOL)_clientHasEntitlementWithPort:(unsigned int)port auditToken:(struct { unsigned int x0[8] })token message:(id)message completion:(id /* block */)completion;
- (BOOL)__slowpath__clientWithAuditToken:(struct { unsigned int x0[8] })token hasRequiredEntitlementFromSet:(id)set;
- (void)setQueueSize:(unsigned int)size;
- (void)_handleClientInvalidation:(unsigned int)invalidation;
- (void)_applyCustomQueueSize;
- (void)_startServerThread;
- (void)serverClientRegistrationInvalidated:(id)invalidated;
- (void)_handleClientRegistration:(id)registration;
- (void)_handleIncomingMessage:(id)message securityToken:(struct { unsigned int x0[2] })token auditToken:(struct { unsigned int x0[8] })token clientPort:(unsigned int)port completion:(id /* block */)completion;
- (void)_processValidatedMessage:(id)message completion:(id /* block */)completion;
- (BOOL)_handleErrorWithMessage:(id)message outError:(id *)error;
- (id)_clientIdentificationForAuditToken:(struct { unsigned int x0[8] })token;
- (BOOL)isRunning;
@end

#endif /* AXIPCServer_h */
