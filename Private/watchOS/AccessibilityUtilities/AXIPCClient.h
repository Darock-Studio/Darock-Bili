//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXIPCClient_h
#define AXIPCClient_h
@import Foundation;

@class AXAccessQueue, NSMutableArray, NSString;

@interface AXIPCClient : NSObject {
  /* instance variables */
  unsigned int _assignedServerMachPort;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _clientIdentifierLock;
  struct __CFRunLoopSource * _clientSource;
  unsigned long long _connectionAttempts;
  NSMutableArray *_outstandingAsyncRequests;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _connectionServiceLock;
}

@property (nonatomic) BOOL connected;
@property (copy, nonatomic) NSString *serviceName;
@property (readonly, nonatomic) struct __CFMachPort * serverPort;
@property (retain, nonatomic) NSMutableArray *postConnectionTasks;
@property (retain, nonatomic) AXAccessQueue *connectionQueue;
@property (nonatomic) BOOL usesPerPidLookup;
@property (nonatomic) int pid;
@property (readonly, nonatomic) unsigned int serviceMachPort;
@property (copy, nonatomic) id /* block */ portDeathHandler;
@property (nonatomic) float timeout;
@property (copy, nonatomic) NSString *clientIdentifier;
@property (readonly, nonatomic) unsigned int clientCallbackPort;
@property (readonly, nonatomic) struct __CFRunLoopSource * clientCallbackSource;
@property (nonatomic) BOOL shouldRegisterCallbackSourceOnMainRunloop;

/* class methods */
+ (void)initialize;
+ (id)allClients;

/* instance methods */
- (void)_commonInit;
- (id)initWithServiceName:(id)name;
- (id)initWithPort:(unsigned int)port;
- (void)dealloc;
- (id)description;
- (void)_registerWithServer;
- (void)_sendRegistrationMessageWithRetries:(int)retries;
- (BOOL)verifyConnectionExists;
- (BOOL)connectWithError:(id *)error;
- (BOOL)disconnectWithError:(id *)error;
- (BOOL)_verifyConnectionWithError:(id *)error;
- (void)sendSimpleMessage:(id)message;
- (BOOL)_prepareToSendMessage:(id)message withError:(id *)error prepSuccessHandler:(id /* block */)handler;
- (BOOL)sendSimpleMessage:(id)message withError:(id *)error;
- (BOOL)sendSimpleMessage:(id)message synchronizationPort:(unsigned int)port error:(id *)error;
- (id)sendMessage:(id)message withError:(id *)error;
- (BOOL)sendAsyncMessage:(id)message withReplyHandler:(id /* block */)handler;
- (BOOL)sendAsyncMessage:(id)message replyOnQueue:(id)queue replyHandler:(id /* block */)handler;
- (id)_createRegistrationWithReplyMachPort:(unsigned int)port forAsyncReplyOnQueue:(id)queue responseHandler:(id /* block */)handler;
- (void)_serverDied;
- (void)_attemptToEstablishConnection;
- (void)establishConnectionWithTimeout:(double)timeout completion:(id /* block */)completion;
- (BOOL)_handleErrorWithMessage:(id)message machError:(int)error outError:(id *)error;
- (BOOL)_handleErrorWithMessage:(id)message outError:(id *)error;
- (id)_descriptionForMachError:(int)error;
- (BOOL)isConnected;
@end

#endif /* AXIPCClient_h */
