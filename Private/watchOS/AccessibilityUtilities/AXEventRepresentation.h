//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXEventRepresentation_h
#define AXEventRepresentation_h
@import Foundation;

#include "AXEventAccelerometerInfoRepresentation.h"
#include "AXEventData.h"
#include "AXEventGameControllerInfoRepresentation.h"
#include "AXEventHandInfoRepresentation.h"
#include "AXEventIOSMACPointerInfoRepresentation.h"
#include "AXEventKeyInfoRepresentation.h"
#include "AXEventPointerInfoRepresentation.h"
#include "AXEventRepresentationDescription-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSData, NSDictionary, NSString;

@interface AXEventRepresentation : NSObject<AXEventRepresentationDescription, NSSecureCoding, NSCopying>

@property (nonatomic) void * window;
@property (retain, nonatomic) NSData *data;
@property (retain, nonatomic) struct __IOHIDEvent * creatorHIDEvent;
@property (retain, nonatomic) struct __IOHIDServiceClient * creatorHIDServiceClient;
@property (nonatomic) unsigned int type;
@property (nonatomic) unsigned int originalType;
@property (nonatomic) int subtype;
@property (nonatomic) struct CGPoint { double x0; double x1; } location;
@property (nonatomic) struct CGPoint { double x0; double x1; } windowLocation;
@property (nonatomic) unsigned long long time;
@property (nonatomic) int flags;
@property (nonatomic) unsigned long long senderID;
@property (retain, nonatomic) AXEventHandInfoRepresentation *handInfo;
@property (retain, nonatomic) AXEventKeyInfoRepresentation *keyInfo;
@property (retain, nonatomic) AXEventAccelerometerInfoRepresentation *accelerometerInfo;
@property (retain, nonatomic) AXEventGameControllerInfoRepresentation *gameControllerInfo;
@property (retain, nonatomic) AXEventPointerInfoRepresentation *pointerControllerInfo;
@property (retain, nonatomic) AXEventIOSMACPointerInfoRepresentation *iosmacPointerInfo;
@property (retain, nonatomic) NSString *clientId;
@property (nonatomic) unsigned int taskPort;
@property (nonatomic) int pid;
@property (nonatomic) unsigned long long HIDTime;
@property (retain, nonatomic) NSData *HIDAttributeData;
@property (nonatomic) long long scrollAmount;
@property (nonatomic) long long scrollAccelAmount;
@property (nonatomic) unsigned long long additionalFlags;
@property (nonatomic) unsigned int contextId;
@property (nonatomic) unsigned int displayId;
@property (nonatomic) BOOL isBuiltIn;
@property (nonatomic) BOOL isDisplayIntegrated;
@property (nonatomic) long long generationCount;
@property (nonatomic) unsigned int willUpdateMask;
@property (nonatomic) unsigned int didUpdateMask;
@property (nonatomic) BOOL isGeneratedEvent;
@property (nonatomic) BOOL useOriginalHIDTime;
@property (readonly, nonatomic) BOOL isUpdate;
@property (readonly, nonatomic) BOOL willBeUpdated;
@property (readonly, nonatomic) unsigned long long fingerCount;
@property (readonly, nonatomic) BOOL isTouchDown;
@property (readonly, nonatomic) BOOL isMove;
@property (readonly, nonatomic) BOOL isChordChange;
@property (readonly, nonatomic) BOOL isLift;
@property (readonly, nonatomic) BOOL isInRange;
@property (readonly, nonatomic) BOOL isInRangeLift;
@property (readonly, nonatomic) BOOL isCancel;
@property (nonatomic) BOOL redirectEvent;
@property (nonatomic) BOOL systemDrag;
@property (retain, nonatomic) NSDictionary *auxiliaryData;
@property (retain, nonatomic) AXEventData *accessibilityData;
@property (nonatomic) unsigned int secureName;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)representationWithData:(id)data;
+ (id)representationWithType:(unsigned int)type subtype:(int)subtype time:(unsigned long long)time location:(struct CGPoint { double x0; double x1; })location windowLocation:(struct CGPoint { double x0; double x1; })location handInfo:(id)info;
+ (id)cancelEventForPathIndexMask:(unsigned int)mask;
+ (id)_digitizerRepresentation:(struct __IOHIDEvent *)representation hidStreamIdentifier:(id)identifier;
+ (void)_appendKeyInfoToMediaKey:(id)key usage:(long long)usage downEvent:(BOOL)event;
+ (id)_keyboardButtonEvent:(struct __IOHIDEvent *)event;
+ (id)_wheelEvent:(struct __IOHIDEvent *)event;
+ (id)_gameControllerEvent:(struct __IOHIDEvent *)event;
+ (id)_gameKeyboardControllerEvent:(struct __IOHIDEvent *)event;
+ (id)_pointerControllerEvent:(struct __IOHIDEvent *)event hidStreamIdentifier:(id)identifier serviceClient:(struct __IOHIDServiceClient *)client;
+ (id)_motionGestureTapEvent:(struct __IOHIDEvent *)event serviceClient:(struct __IOHIDServiceClient *)client hidStreamIdentifier:(id)identifier clientID:(id)id taskPort:(unsigned int)port;
+ (id)_vendorDefinedAccessibilityEvent:(struct __IOHIDEvent *)event;
+ (id)representationWithLocation:(struct CGPoint { double x0; double x1; })location windowLocation:(struct CGPoint { double x0; double x1; })location handInfo:(id)info;
+ (id)representationWithHIDEvent:(struct __IOHIDEvent *)hidevent hidStreamIdentifier:(id)identifier;
+ (id)representationWithHIDEvent:(struct __IOHIDEvent *)hidevent serviceClient:(struct __IOHIDServiceClient *)client hidStreamIdentifier:(id)identifier;
+ (id)representationWithHIDEvent:(struct __IOHIDEvent *)hidevent hidStreamIdentifier:(id)identifier clientID:(id)id taskPort:(unsigned int)port;
+ (id)representationWithHIDEvent:(struct __IOHIDEvent *)hidevent serviceClient:(struct __IOHIDServiceClient *)client hidStreamIdentifier:(id)identifier clientID:(id)id taskPort:(unsigned int)port;
+ (id)accelerometerRepresentation:(id)representation;
+ (id)keyRepresentationWithType:(unsigned int)type;
+ (id)buttonRepresentationWithType:(unsigned int)type;
+ (id)iosmacPointerRepresentationWithTypeWithPointerInfo:(id)info;
+ (id)gestureRepresentationWithHandType:(unsigned int)type locations:(id)locations;
+ (id)touchRepresentationWithHandType:(unsigned int)type location:(struct CGPoint { double x0; double x1; })location;
+ (id)accessibilityEventRepresentationWithSender:(long long)sender usagePage:(long long)page usage:(long long)usage;
+ (id)accessibilityEventRepresentationWithSender:(long long)sender usagePage:(long long)page usage:(long long)usage modifierFlags:(long long)flags;
+ (id)accessibilityEventRepresentationWithSender:(long long)sender usagePage:(long long)page usage:(long long)usage modifierFlags:(long long)flags eventValue1:(float)value1 eventValue2:(float)value2;
+ (BOOL)_HIDEventIsAccessibilityEvent:(struct __IOHIDEvent *)event;
+ (void)incrementTouchCounter;
+ (unsigned int)touchCounter;
+ (void)setTouchCounter:(unsigned int)counter;

/* instance methods */
- (unsigned int)pathIndexMask;
- (void)resetInitialTouchCountValueForHidStreamIdentifier:(id)identifier;
- (id)dataRepresentation;
- (struct __IOHIDEvent *)newHIDEventRef;
- (BOOL)isDownEvent;
- (unsigned long long)_machTimeForHIDEventRef;
- (struct __IOHIDEvent *)_newAccelerometerHIDEventRef;
- (struct __IOHIDEvent *)_newScrollHIDEventRef;
- (struct __IOHIDEvent *)_newKeyboardHIDEventRef;
- (struct __IOHIDEvent *)_newButtonHIDEventRefWithType:(unsigned int)type;
- (struct __IOHIDEvent *)_newAccessibilityHIDEventRef;
- (id)normalizedEventRepresentation:(BOOL)representation scale:(BOOL)scale;
- (id)fakeTouchScaleEventRepresentation:(BOOL)representation;
- (void)modifyPoints:(id /* block */)points;
- (void)neuterUpdates;
- (id)denormalizedEventRepresentation:(BOOL)representation descale:(BOOL)descale;
- (struct __IOHIDEvent *)_newIOSMACPointerRef;
- (struct __IOHIDEvent *)_newHandHIDEventRef;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)dealloc;
- (void)encodeWithCoder:(id)coder;
- (unsigned int)firstPathContextId;
- (id)accessibilityEventRepresentationTabularDescription;
- (id)_senderNameForID;
- (unsigned char)screenEdgeForPoint:(struct CGPoint { double x0; double x1; })point;
- (void)applyAccessibilityDataToCreatorHIDEvent;
- (BOOL)_HIDEventIsAccessibilityEvent:(struct __IOHIDEvent *)event;
- (struct __IOHIDEvent *)_accessibilityEventFromRealEvent:(struct __IOHIDEvent *)event;
- (void)_applyAccessibilityDataToRealEvent:(struct __IOHIDEvent *)event;
- (id)_accessibilityDataFromRealEvent:(struct __IOHIDEvent *)event;
- (BOOL)isRedirectEvent;
- (BOOL)isSystemDrag;
@end

#endif /* AXEventRepresentation_h */
