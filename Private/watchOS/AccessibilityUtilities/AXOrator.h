//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXOrator_h
#define AXOrator_h
@import Foundation;

#include "AVSpeechSynthesizerDelegate-Protocol.h"
#include "AXLanguageTag.h"
#include "AXLanguageTaggedContent.h"

@class AVSpeechSynthesizer, AVSpeechUtterance, AXDispatchTimer, NSArray, NSMutableArray, NSString;
@protocol AXOratorDelegate;

@interface AXOrator : NSObject<AVSpeechSynthesizerDelegate> {
  /* instance variables */
  AVSpeechUtterance *_statusUtterance;
  BOOL _contentIsSpeakable;
  AXDispatchTimer *_audioSessionTimer;
}

@property (retain, nonatomic) AXLanguageTaggedContent *selectedContent;
@property (retain, nonatomic) AXLanguageTaggedContent *speakingContent;
@property (retain, nonatomic) NSArray *speakingContentTokenRanges;
@property (nonatomic) unsigned long long numberOfTokensToSkip;
@property (retain, nonatomic) AVSpeechSynthesizer *speechSynthesizer;
@property (retain, nonatomic) NSMutableArray *speechSequenceItems;
@property (retain, nonatomic) NSString *lastUtteranceLanguageCode;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } lastUtteranceSubstringRange;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } lastSpokenSubstringRange;
@property (retain, nonatomic) AVSpeechUtterance *lastUtterance;
@property (retain, nonatomic) AXLanguageTag *lastUtteranceLanguageTag;
@property (nonatomic) BOOL shouldSpeakNextItemOnResume;
@property (retain, nonatomic) NSString *currentLanguageCode;
@property (nonatomic) BOOL preferredLanguageWasSpecified;
@property (nonatomic) BOOL isProcessingContentForSpeech;
@property (nonatomic) BOOL isFetchingAdditionalContent;
@property (retain, nonatomic) NSMutableArray *additionalContentToProcess;
@property (weak, nonatomic) NSObject<AXOratorDelegate> *delegate;
@property (copy, nonatomic) NSString *content;
@property (nonatomic) long long speakingContext;
@property (nonatomic) BOOL spellOutContent;
@property (nonatomic) BOOL supportsAccurateWordCallbacks;
@property (nonatomic) BOOL skipLuthorRules;
@property (nonatomic) double audioSessionInactiveTimeout;
@property (readonly, nonatomic) NSString *currentVoiceIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)addAdditionalContentToSpeechQueue:(id)queue;
- (BOOL)startSpeakingWithPreferredLanguage:(id)language error:(id *)error;
- (BOOL)startSpeakingWithPreferredLanguage:(id)language delayBeforeStart:(double)start error:(id *)error;
- (BOOL)pauseSpeaking:(id *)speaking;
- (BOOL)stopSpeaking:(id *)speaking;
- (BOOL)resumeSpeaking:(id *)speaking;
- (BOOL)resumeSpeakingAfterDelay:(double)delay error:(id *)error;
- (float)speechRate;
- (BOOL)isPaused;
- (BOOL)isSpeaking;
- (double)currentSpeechRateForAdjustment;
- (BOOL)setSpeakingRate:(double)rate;
- (BOOL)speakFaster;
- (BOOL)speakSlower;
- (BOOL)fastForwardWithBoundary:(unsigned long long)boundary;
- (BOOL)rewindWithBoundary:(unsigned long long)boundary;
- (void)speakStatusWithLanguage:(id)language rate:(id)rate;
- (BOOL)contentIsSpeakable;
- (BOOL)canResumeWithContent:(id)content;
- (void)clearSelectedContent;
- (void)_startSpeakingSequence;
- (void)_updateSequenceForSpellOutBehavior;
- (id)_getLangCodeForItem:(id)item;
- (void)_processAdditionalContentInPreparationForSpeech;
- (void)_speakNextItemInSequence;
- (BOOL)_useLanguageSpecificSpeakingRate;
- (BOOL)_changeSpeakingSpeed:(double)speed usingLanugageSpecificRate:(BOOL)rate;
- (id)_speechSequenceItemsStartingAtContentLocation:(unsigned long long)location;
- (void)_respeakUtteranceIfNeeded;
- (long long)_currentTokenIndex:(BOOL)index;
- (void)_speakNextTokenFromCurrentTokenIndex:(long long)index forward:(BOOL)forward boundary:(unsigned long long)boundary;
- (BOOL)_skipByUnit:(BOOL)unit boundary:(unsigned long long)boundary;
- (void)_tokenizeContentIfNeeded;
- (void)_clearAllContentState;
- (void)_updateAudioSessionCategory;
- (BOOL)_canSpeakTaggedContent:(id)content;
- (BOOL)_successWithCode:(long long)code error:(id *)error;
- (void)speechSynthesizer:(id)synthesizer didFinishSpeechUtterance:(id)utterance;
- (void)speechSynthesizer:(id)synthesizer didPauseSpeechUtterance:(id)utterance;
- (void)speechSynthesizer:(id)synthesizer didContinueSpeechUtterance:(id)utterance;
- (void)speechSynthesizer:(id)synthesizer didStartSpeechUtterance:(id)utterance;
- (void)speechSynthesizer:(id)synthesizer didCancelSpeechUtterance:(id)utterance;
- (void)speechSynthesizer:(id)synthesizer willSpeakRangeOfSpeechString:(struct _NSRange { unsigned long long x0; unsigned long long x1; })string utterance:(id)utterance;
@end

#endif /* AXOrator_h */
