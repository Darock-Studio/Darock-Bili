//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXLanguageManager_h
#define AXLanguageManager_h
@import Foundation;

#include "AXDialectMap.h"

@class NSArray, NSCharacterSet, NSLocale, NSSet, NSString;

@interface AXLanguageManager : NSObject

@property (retain, nonatomic) NSArray *langMaps;
@property (copy, nonatomic) NSLocale *userLocale;
@property (retain, nonatomic) NSCharacterSet *commonCharacters;
@property (weak, nonatomic) AXDialectMap *dialectForSystemLanguage;
@property (weak, nonatomic) AXDialectMap *dialectForCurrentLocale;
@property (weak, nonatomic) AXDialectMap *dialectForCurrentRegion;
@property (nonatomic) BOOL _unitTest_didUpdateForLocaleChange;
@property (readonly, nonatomic) NSString *systemLanguageID;
@property (readonly, weak, nonatomic) AXDialectMap *dialectForUserLocale;
@property (readonly, nonatomic) NSSet *preferredLanguageIDsFromUserSelectedKeyboards;

/* class methods */
+ (id)sharedInstance;
+ (BOOL)voiceOverSupportedInCurrentLanguage;
+ (id)nonlocalizedNameForLanguage:(id)language;
+ (id)commonPunctuationCharacters;
+ (id)doNotTranslateWords;
+ (id)stringByReplacingEmojiCharactersWithEmojiDescriptions:(id)descriptions;
+ (id)stringByReplacingFatWidthCharactersWithBasicCharacters:(id)characters;
+ (id)nameForAlternativeVoiceIdentifier:(id)identifier;
+ (id)dialectForAlternativeVoiceIdentifier:(id)identifier;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)description;
- (id)basicDescription;
- (id)debugDescription;
- (id)dialectForLanguageID:(id)id;
- (id)dialectsThatCanSpeakCharacter:(unsigned short)character;
- (id)dialectsThatCanSpeakCharacter:(unsigned short)character overridePreferredLanguages:(id)languages;
- (id)_systemPreferredDialectThatCanSpeak:(id /* block */)speak;
- (void)_addDialectMapsForLanguageCodes:(id)codes toResults:(id)results;
- (id)_preferredOverrideDialectsThatCanSpeak:(id /* block */)speak dialectIsSecondary:(id /* block */)secondary overridePreferredLanguages:(id)languages preferOverrides:(BOOL)overrides;
- (id)_dialectsThatCanSpeak:(id /* block */)speak dialectIsSecondary:(id /* block */)secondary overridePreferredLanguages:(id)languages preferOverrides:(BOOL)overrides;
- (id)dialectsThatCanSpeakCharacter:(unsigned short)character overridePreferredLanguages:(id)languages allowTransliteration:(BOOL)transliteration;
- (id)dialectsThatCanSpeakCharacter:(unsigned short)character overridePreferredLanguages:(id)languages allowTransliteration:(BOOL)transliteration preferOverrides:(BOOL)overrides;
- (id)dialectsThatCanSpeakString:(id)string;
- (id)dialectsThatCanSpeakString:(id)string overridePreferredLanguages:(id)languages;
- (id)dialectThatCanSpeakCharacter:(unsigned short)character;
- (id)outputLanguageIdentifierForLanguage:(id)language;
- (id)ambiguousDialectsFromUserKeyboardPreferences;
- (BOOL)isCharacterCommon:(unsigned short)common;
- (BOOL)isStringComposedByCommonCharacters:(id)characters;
- (void)updateCachedDialects;
- (id)descriptionOfWord:(id)word forLanguage:(id)language;
- (id)characterSetForRanges:(id)ranges;
- (id)_loadLangMaps;
- (id)_synthesisProviderDialectMapPerLanguage;
- (id)_exemplarCharacterSetFromLanguages:(id)languages;
- (void)_handleUserLocaleDidChange:(id)change;
- (BOOL)didUpdateForLocaleChange;
@end

#endif /* AXLanguageManager_h */
