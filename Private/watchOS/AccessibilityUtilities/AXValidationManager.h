//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXValidationManager_h
#define AXValidationManager_h
@import Foundation;

@class NSMutableArray, NSString;
@protocol AXValidationReportingServices;

@interface AXValidationManager : NSObject

@property (nonatomic) BOOL shouldPerformValidationChecks;
@property (nonatomic) BOOL shouldLogToConsole;
@property (nonatomic) BOOL shouldCrashOnError;
@property (nonatomic) BOOL shouldReportToServer;
@property (nonatomic) unsigned long long numberOfValidations;
@property (nonatomic) unsigned long long numberOfCategories;
@property (nonatomic) unsigned long long numberOfValidationErrors;
@property (retain, nonatomic) NSMutableArray *consoleErrorMessages;
@property (nonatomic) unsigned long long numberOfValidationWarnings;
@property (retain, nonatomic) NSMutableArray *consoleWarningMessages;
@property (retain, nonatomic) NSObject<AXValidationReportingServices> *validationReportingServices;
@property (nonatomic) BOOL forceDoNotReport;
@property (copy, nonatomic) NSString *validationTargetName;
@property (copy, nonatomic) NSString *overrideProcessName;
@property (nonatomic) BOOL debugBuild;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)init;
- (void)performValidations:(id /* block */)validations withPreValidationHandler:(id /* block */)handler postValidationHandler:(id /* block */)handler;
- (void)performValidations:(id /* block */)validations withPreValidationHandler:(id /* block */)handler postValidationHandler:(id /* block */)handler safeCategoryInstallationHandler:(id /* block */)handler;
- (void)installSafeCategories:(id /* block */)categories afterDelay:(double)delay validationTargetName:(id)name overrideProcessName:(id)name;
- (void)_resetState;
- (void)_clearState;
- (void)_printConsoleReport:(BOOL)report isDelayed:(BOOL)delayed;
- (BOOL)validateClass:(id)class;
- (BOOL)client:(id)client validateClass:(id)class;
- (BOOL)validateClass:(id)class isKindOfClass:(id)class;
- (BOOL)client:(id)client validateClass:(id)class isKindOfClass:(id)class;
- (BOOL)validateClass:(id)class hasSwiftField:(id)field withSwiftType:(const char *)type;
- (BOOL)validateClass:(id)class hasSwiftFieldOfAnyClass:(id)class;
- (BOOL)validateSwiftStruct:(id)struct;
- (BOOL)validateSwiftStruct:(id)struct hasSize:(long long)size;
- (BOOL)validateSwiftStruct:(id)struct hasSwiftField:(id)field withSwiftType:(const char *)type;
- (BOOL)validateSwiftStruct:(id)struct hasSwiftFieldOfAnyClass:(id)class;
- (BOOL)validateSwiftEnum:(id)enum;
- (BOOL)validateSwiftEnum:(id)enum hasCase:(id)case;
- (BOOL)validateSwiftEnum:(id)enum hasCase:(id)case withSwiftType:(const char *)type;
- (BOOL)validateSwiftEnum:(id)enum hasCaseOfAnyClass:(id)class;
- (BOOL)client:(id)client validateClass:(id)class hasSwiftField:(id)field withSwiftType:(const char *)type;
- (BOOL)client:(id)client validateClass:(id)class hasSwiftFieldOfAnyClass:(id)class;
- (BOOL)client:(id)client validateSwiftStruct:(id)struct;
- (BOOL)client:(id)client validateSwiftStruct:(id)struct hasSize:(long long)size;
- (BOOL)client:(id)client validateSwiftStruct:(id)struct hasSwiftField:(id)field withSwiftType:(const char *)type;
- (BOOL)client:(id)client validateSwiftStruct:(id)struct hasSwiftFieldOfAnyClass:(id)class;
- (BOOL)_client:(id)_client validateStruct:(id)struct hasSwiftField:(id)field withTypeString:(const char *)string isAnyClass:(BOOL)class;
- (BOOL)client:(id)client validateSwiftEnum:(id)enum;
- (BOOL)client:(id)client validateSwiftEnum:(id)enum hasCase:(id)case;
- (BOOL)client:(id)client validateSwiftEnum:(id)enum hasCase:(id)case withSwiftType:(const char *)type;
- (BOOL)client:(id)client validateSwiftEnum:(id)enum hasCaseOfAnyClass:(id)class;
- (BOOL)_client:(id)_client validateSwiftEnum:(id)enum hasCase:(id)case withTypeString:(const char *)string isAnyClass:(BOOL)class;
- (BOOL)_client:(id)_client validateClass:(id)class hasSwiftField:(id)field withTypeString:(const char *)string isAnyClass:(BOOL)class;
- (BOOL)_client:(id)_client validateType:(id)type hasSwiftField:(id)field handleSwiftValidationProblems:(id)problems;
- (BOOL)validateClass:(id)class hasInstanceVariable:(id)variable withType:(const char *)type;
- (BOOL)client:(id)client validateClass:(id)class hasInstanceVariable:(id)variable withType:(const char *)type;
- (BOOL)_client:(id)_client validateClass:(id)class hasMethod:(id)method methodType:(int)type;
- (BOOL)_client:(id)_client validateClass:(id)class hasMethod:(id)method methodType:(int)type returnType:(id)type arguments:(id)arguments;
- (BOOL)validateClass:(id)class hasClassMethod:(id)method withFullSignature:(const char *)signature;
- (BOOL)client:(id)client validateClass:(id)class hasClassMethod:(id)method withFullSignature:(const char *)signature;
- (BOOL)_client:(id)_client validateClass:(id)class hasClassMethod:(id)method withFullSignature:(const char *)signature argList:(char *)list;
- (BOOL)client:(id)client validateClass:(id)class hasInstanceMethod:(id)method withFullSignature:(const char *)signature argList:(char *)list;
- (BOOL)client:(id)client validateClass:(id)class hasInstanceMethod:(id)method withFullSignature:(const char *)signature;
- (BOOL)validateClass:(id)class hasInstanceMethod:(id)method withFullSignature:(const char *)signature;
- (BOOL)validateClass:(id)class hasProperty:(id)property withType:(const char *)type;
- (BOOL)validateClass:(id)class hasProperty:(id)property customGetter:(id)getter customSetter:(id)setter withType:(const char *)type;
- (BOOL)client:(id)client validateClass:(id)class hasProperty:(id)property withType:(const char *)type;
- (BOOL)client:(id)client validateClass:(id)class hasProperty:(id)property customGetter:(id)getter customSetter:(id)setter withType:(const char *)type;
- (BOOL)validateClass:(id)class conformsToProtocol:(id)protocol;
- (BOOL)client:(id)client validateClass:(id)class conformsToProtocol:(id)protocol;
- (BOOL)validateProtocol:(id)protocol conformsToProtocol:(id)protocol;
- (BOOL)client:(id)client validateProtocol:(id)protocol conformsToProtocol:(id)protocol;
- (BOOL)validateProtocol:(id)protocol hasMethod:(id)method isInstanceMethod:(BOOL)method isRequired:(BOOL)required;
- (BOOL)client:(id)client validateProtocol:(id)protocol hasMethod:(id)method isInstanceMethod:(BOOL)method isRequired:(BOOL)required;
- (BOOL)validateProtocol:(id)protocol hasOptionalInstanceMethod:(id)method;
- (BOOL)client:(id)client validateProtocol:(id)protocol hasOptionalInstanceMethod:(id)method;
- (BOOL)validateProtocol:(id)protocol hasRequiredInstanceMethod:(id)method;
- (BOOL)client:(id)client validateProtocol:(id)protocol hasRequiredInstanceMethod:(id)method;
- (BOOL)validateProtocol:(id)protocol hasOptionalClassMethod:(id)method;
- (BOOL)client:(id)client validateProtocol:(id)protocol hasOptionalClassMethod:(id)method;
- (BOOL)validateProtocol:(id)protocol hasRequiredClassMethod:(id)method;
- (BOOL)client:(id)client validateProtocol:(id)protocol hasRequiredClassMethod:(id)method;
- (void)_iterateMethodsOfType:(int)type onClass:(Class)class block:(id /* block */)block;
- (id)_nameForMethod:(struct objc_method *)method;
- (void)_generateWarningsForPrefixedMethodNames:(id)names client:(id)client methodType:(int)type methodName:(id)name className:(id)name;
- (void)_generateWarningsOnSafeCategoryClass:(Class)class;
- (void)_generateWarningsForMethodType:(int)type onClass:(Class)class superclassMethods:(struct objc_method * *)methods numberOfSuperclassMethods:(unsigned int)methods;
- (BOOL)installSafeCategory:(id)category;
- (BOOL)installSafeCategory:(id)category canInteractWithTargetClass:(BOOL)class;
- (BOOL)installSwiftDynamicReplacementUnit:(id)unit inBundle:(id)bundle withPrecondition:(id /* block */)precondition;
- (void)sendExceptionForInstallingSafeCategory:(id)category onTarget:(id)target overrideProcessName:(id)name;
- (void)sendExceptionForSafeCategoryOnWrongTarget:(id)target targetBundle:(id)bundle expectedBundle:(id)bundle overrideProcessName:(id)name;
- (void)sendExceptionForSafeValueKey:(id)key onTarget:(id)target overrideProcessName:(id)name;
- (void)sendExceptionForSafeIVarKey:(id)key onTarget:(id)target overrideProcessName:(id)name;
- (void)sendExceptionForSafeBlock:(id)block overrideProcessName:(id)name;
- (void)sendGenericReport:(id)report withTag:(id)tag overrideProcessName:(id)name;
- (void)sendValidateExceptionForClass:(id)class errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForClass:(id)class isKindOfClass:(id)class errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForClass:(id)class conformsToProtocol:(id)protocol errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForClass:(id)class hasInstanceVariable:(id)variable errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForClass:(id)class hasInstanceMethod:(id)method errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForClass:(id)class hasClassMethod:(id)method errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForClass:(id)class hasProperty:(id)property errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForProtocol:(id)protocol conformsToProtocol:(id)protocol errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForProtocol:(id)protocol hasMethod:(id)method errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendValidateExceptionForProtocol:(id)protocol hasProperty:(id)property errorMessage:(id)message overrideProcessName:(id)name;
- (void)sendFailedAssertionWithErrorMessage:(id)message overrideProcessName:(id)name;
- (void)sendFailedTestCase:(id)case withTag:(id)tag overrideProcessName:(id)name;
- (void)sendValidationSuccessForProcessName:(id)name;
- (BOOL)isDebugBuild;
@end

#endif /* AXValidationManager_h */
