//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXThreadTimer_h
#define AXThreadTimer_h
@import Foundation;

#include "AXAccessQueueTimer-Protocol.h"
#include "AXThreadTimerTask.h"

@class NSString, NSThread;

@interface AXThreadTimer : NSObject<AXAccessQueueTimer> {
  /* instance variables */
  NSThread *_thread;
  id /* block */ _cancelBlock;
}

@property (retain, nonatomic) AXThreadTimerTask *task;
@property (readonly, nonatomic) BOOL cancelled;
@property (nonatomic) BOOL automaticallyCancelPendingBlockUponSchedulingNewBlock;
@property (readonly, nonatomic) BOOL active;
@property (readonly, nonatomic) BOOL pending;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithThread:(id)thread;
- (void)_runAfterDelay:(id)delay;
- (void)afterDelay:(double)delay processBlock:(id /* block */)block;
- (void)afterDelay:(double)delay processBlock:(id /* block */)block cancelBlock:(id /* block */)block;
- (void)cancel;
- (BOOL)isCancelled;
- (BOOL)isPending;
- (BOOL)isActive;
@end

#endif /* AXThreadTimer_h */
