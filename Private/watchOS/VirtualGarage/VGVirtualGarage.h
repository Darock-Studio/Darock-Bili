//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef VGVirtualGarage_h
#define VGVirtualGarage_h
@import Foundation;

#include "GEOConfigChangeListenerDelegate-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "VGDataCoordinator.h"
#include "VGDataCoordinatorDelegate-Protocol.h"
#include "VGVehicle.h"
#include "VGVirtualGarageActions-Protocol.h"
#include "VGVirtualGarageDelegate-Protocol.h"
#include "VGVirtualGaragePersistingDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSString;
@protocol VGVirtualGaragePersisting;

@interface VGVirtualGarage : NSObject<NSCopying, VGDataCoordinatorDelegate, VGVirtualGaragePersistingDelegate, GEOConfigChangeListenerDelegate, VGVirtualGarageActions, NSSecureCoding> {
  /* instance variables */
  NSString *_selectedVehicleIdentifier;
  BOOL _isDataCoordinatorRunning;
  VGDataCoordinator *_dataCoordinator;
  NSObject<VGVirtualGaragePersisting> *_persister;
  BOOL _finishedLoadingVehicles;
  NSMutableArray *_queuedGetGarageCompletionHandlers;
}

@property (weak, nonatomic) NSObject<VGVirtualGarageDelegate> *delegate;
@property (readonly, nonatomic) NSArray *vehicles;
@property (readonly, nonatomic) VGVehicle *selectedVehicle;
@property (nonatomic) BOOL shouldAssumeFullCharge;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithGaragePersister:(id)persister;
- (id)initWithCoder:(id)coder;
- (void)dealloc;
- (id)_vehicleWithIdentifier:(id)identifier;
- (BOOL)_persisterHasStaleStateForVehicle:(id)vehicle;
- (void)_addVehicle:(id)vehicle;
- (void)_saveVehicle:(id)vehicle syncAcrossDevices:(BOOL)devices;
- (void)_removeVehicleWithIdentifier:(id)identifier;
- (void)_selectVehicleWithIdentifier:(id)identifier;
- (void)_onboardVehicle:(id)vehicle;
- (void)_unpairVehicle:(id)vehicle;
- (void)_setShouldUsePreferredNetworks:(BOOL)networks forVehicle:(id)vehicle;
- (void)_startContinuousUpdatesIfNeeded;
- (void)_endContinuousUpdates;
- (id)_garageCopy;
- (void)_executeQueuedCompletionHandlersIfNeeded;
- (void)_removeVehiclesWithUninstalledAppsIfNeeded;
- (void)_forceUpdateWithVehicles:(id)vehicles;
- (void)garagePersister:(id)persister wantsToUpdateVehicles:(id)vehicles;
- (void)_notifyObserversGarageDidUpdateVehicles;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)valueChangedForGEOConfigKey:(struct { unsigned int x0; void * x1; })key;
- (void)dataCoordinator:(id)coordinator wantsToUpdateVehicle:(id)vehicle syncAcrossDevices:(BOOL)devices;
- (void)dataCoordinator:(id)coordinator didUpdateUnpairedVehicles:(id)vehicles;
- (void)dataCoordinatorDidUpdateInstalledApps:(id)apps;
- (void)virtualGarageAddVehicle:(id)vehicle;
- (void)virtualGarageRemoveVehicle:(id)vehicle;
- (void)virtualGarageGetGarageWithReply:(id /* block */)reply;
- (void)virtualGarageSelectVehicle:(id)vehicle;
- (void)virtualGarageSaveVehicle:(id)vehicle;
- (void)virtualGarageOnboardVehicle:(id)vehicle;
- (void)virtualGarageSetShouldUsePreferredNetworks:(BOOL)networks forVehicle:(id)vehicle;
- (void)virtualGarageStartContinuousUpdatesIfNeeded;
- (void)virtualGarageEndContinuousUpdates;
- (void)virtualGarageSetAssumesFullCharge:(BOOL)charge;
- (void)virtualGarageForceFetchAllVehicles;
- (void)virtualGarageGetListOfUnpairedVehiclesWithReply:(id /* block */)reply;
- (void)virtualGarageGetLatestStateOfVehicleWithIdentifier:(id)identifier syncAcrossDevices:(BOOL)devices withReply:(id /* block */)reply;
@end

#endif /* VGVirtualGarage_h */
