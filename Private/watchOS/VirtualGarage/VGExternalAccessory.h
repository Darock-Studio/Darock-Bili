//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef VGExternalAccessory_h
#define VGExternalAccessory_h
@import Foundation;

#include "VGExternalAccessory-Protocol.h"
#include "VGExternalAccessoryModelFilter.h"
#include "VGExternalAccessoryState.h"
#include "VGExternalAccessoryUpdating-Protocol.h"
#include "VGVehicle.h"
#include "VGVehicleState.h"

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface VGExternalAccessory : NSObject<VGExternalAccessory> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_workQueue;
  NSObject<OS_dispatch_queue> *_delegateQueue;
  NSMutableDictionary *_trackedAccessoriesByConnectionId;
  VGExternalAccessoryState *_accessoryState;
  VGVehicleState *_currentVehicleState;
  VGVehicle *_currentVehicle;
  VGExternalAccessoryModelFilter *_modelFilter;
}

@property (weak, nonatomic) NSObject<VGExternalAccessoryUpdating> *accessoryUpdateDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)_checkAvailableAccessoriesAndAttachIfNeeded;
- (void)_addNewCarPlayAccessory:(id)accessory;
- (void)_removeCarPlayAccessory:(id)accessory;
- (BOOL)_isAccessoryTracked:(id)tracked;
- (void)_accessoryDidConnect:(id)connect;
- (void)_accessoryDidDisconnect:(id)disconnect;
- (void)_accessoryDidUpdateVehicle:(id)vehicle;
- (void)_updateFromVehicleInfo:(id)info;
- (void)_notifyDelegateWithCurrentVehicle;
- (id)_vehicleForCurrentState;
- (id)_vehicleStateForCurrentState;
- (BOOL)_currentStatePassesEVRoutingRequirements;
- (id)_modelIdFromArguments:(id)arguments;
- (BOOL)_isConnectedVehicleAllowlisted;
- (BOOL)_isConnectedToElectricVehicle;
- (BOOL)_isConnectedToCarPlayAccessory;
- (id)_identifier;
- (id)_bluetoothIdentifier;
- (id)_firmwareId;
- (BOOL)isConnectedToVehicle:(id)vehicle;
- (BOOL)isConnectedToAccessoryWithIdentifier:(id)identifier;
- (void)getStateOfChargeForVehicle:(id)vehicle completion:(id /* block */)completion;
- (void)listCarsWithCompletion:(id /* block */)completion;
@end

#endif /* VGExternalAccessory_h */
