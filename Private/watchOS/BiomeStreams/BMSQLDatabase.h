//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 123.2.7.0.1
//
#ifndef BMSQLDatabase_h
#define BMSQLDatabase_h
@import Foundation;

@class NSArray, NSMutableArray, NSMutableDictionary;

@interface BMSQLDatabase : NSObject {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableDictionary *_resourceAccessAssertions;
}

@property (readonly, copy, nonatomic) NSArray *privileges;
@property (readonly, nonatomic) BOOL isColumnAccessLoggingEnabled;
@property (readonly, nonatomic) NSArray *accessedColumns;
@property (readonly, nonatomic) struct sqlite3 * db;
@property (readonly, nonatomic) NSArray *virtualTables;

/* instance methods */
- (id)init;
- (id)initWithUseCase:(id)case;
- (id)initWithPrivileges:(id)privileges isColumnAccessLoggingEnabled:(BOOL)enabled;
- (id)initWithAdditionalVirtualTables:(id)tables privileges:(id)privileges isColumnAccessLoggingEnabled:(BOOL)enabled;
- (id)initWithAdditionalVirtualTables:(id)tables privileges:(id)privileges isColumnAccessLoggingEnabled:(BOOL)enabled useCase:(id)case;
- (id)initWithStreams:(id)streams library:(id)library privileges:(id)privileges isColumnAccessLoggingEnabled:(BOOL)enabled error:(id *)error;
- (id)initWithVirtualTables:(id)tables privileges:(id)privileges isColumnAccessLoggingEnabled:(BOOL)enabled enableAuthorizer:(BOOL)authorizer error:(id *)error;
- (void)dealloc;
- (id)virtualTableForName:(id)name;
- (BOOL)attachDatabase:(id)database name:(id)name error:(id *)error;
- (BOOL)_attachDatabase:(id)database name:(id)name error:(id *)error;
- (BOOL)attachDatabaseWithResourceIdentifier:(id)identifier useCase:(id)case error:(id *)error;
- (BOOL)executeStatement:(id)statement error:(id *)error;
- (id)SQLSchemaString;
- (void)logColumnAccess:(id)access tableName:(id)name;
- (void)resetColumnAccessLog;
- (BOOL)registerFunctionWithName:(id)name numArgs:(int)args function:(id /* block */)function error:(id *)error;
- (id)executeQuery:(id)query;
- (id)_executeQuery:(id)query;
- (id)description;
@end

#endif /* BMSQLDatabase_h */
