//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef NSTextAttachment_h
#define NSTextAttachment_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "NSTextAttachmentContainer-Protocol.h"
#include "NSTextAttachmentLayout-Protocol.h"

@class NSData, NSFileWrapper, NSString, NSTextAttachmentView, UIImage, UIView, UTType;
@protocol NSTextAttachmentCell;

@interface NSTextAttachment : NSObject<NSTextAttachmentLayout, NSTextAttachmentContainer, NSSecureCoding> {
  /* instance variables */
  NSData *_data;
  UTType *_uti;
  NSString *_cacheKey;
  double _layoutPadding;
  struct { unsigned int x :1 _allowsTextAttachmentView; unsigned int x :4 _embeddingType; unsigned int x :3 _standaloneAlignment; unsigned int x :1 _allocatesTextContainer; unsigned int x :1 _prefersOldAttachmentBounds; unsigned int x :1 _prefersOldImageForBounds; unsigned int x :1 _cellWasExplicitlySet; unsigned int x :1 _ignoresOrientation; unsigned int x :1 _allowsEditingContents; unsigned int x :1 _viewProviderPriority; } _taFlags;
  NSFileWrapper *_fileWrapperForContents;
  NSTextAttachmentView *_wrapperView;
  NSObject<NSTextAttachmentCell> *_attachmentCell;
}

@property (readonly) BOOL _hasTextAttachmentViewCell;
@property (retain) UIView *contentView;
@property (copy, @dynamic, nonatomic) NSData *contents;
@property (copy, @dynamic, nonatomic) NSString *fileType;
@property (retain, @dynamic, nonatomic) UIImage *image;
@property (@dynamic, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (retain, nonatomic) NSFileWrapper *fileWrapper;
@property double lineLayoutPadding;
@property BOOL allowsTextAttachmentView;
@property (readonly) BOOL usesTextAttachmentView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (BOOL)supportsSecureCoding;
+ (id)imageCache;
+ (Class)textAttachmentViewProviderClassForFileType:(id)type;
+ (void)registerTextAttachmentViewProviderClass:(Class)class forFileType:(id)type;
+ (Class)textAttachmentClassForFileType:(id)type;
+ (void)registerTextAttachmentClass:(Class)class forFileType:(id)type;

/* instance methods */
- (void)setAccessibilityLabel:(id)label;
- (id)accessibilityLabel;
- (id)_imageForUTType_iOS:(id)os;
- (void)_showAttachmentCell_iOS:(id)os inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect characterIndex:(unsigned long long)index;
- (id)_cacheKey;
- (id)_image;
- (BOOL)_allocatesTextContainer;
- (void)_setAllocatesTextContainer:(BOOL)container;
- (void)_setupAPIPreferences;
- (id)initWithData:(id)data ofType:(id)type;
- (id)init;
- (id)initWithFileWrapper:(id)wrapper;
- (void)dealloc;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)attachmentCell;
- (void)_invalidateWrapperView;
- (void)setDrawingBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })drawingBounds;
- (id)imageForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds textContainer:(id)container characterIndex:(unsigned long long)index;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })attachmentBoundsForTextContainer:(id)container proposedLineFragment:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fragment glyphPosition:(struct CGPoint { double x0; double x1; })position characterIndex:(unsigned long long)index;
- (long long)embeddingType;
- (void)setEmbeddingType:(long long)type;
- (long long)standaloneAlignment;
- (void)setStandaloneAlignment:(long long)alignment;
- (Class)textAttachmentViewProviderClass;
- (id)viewProviderForParentView:(id)view characterIndex:(unsigned long long)index layoutManager:(id)manager;
- (void)placeView:(id)view withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame inParentView:(id)view characterIndex:(unsigned long long)index layoutManager:(id)manager;
- (void)detachView:(id)view fromParentView:(id)view;
- (void)setIgnoresOrientation:(BOOL)orientation;
- (BOOL)ignoresOrientation;
- (void)setAttachmentCell:(id)cell;
- (void)setAllowsEditingContents:(BOOL)contents;
- (BOOL)allowsEditingContents;
- (long long)_characterIndexForLocation:(id)location textContainer:(id)container;
- (void)_showWithBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds attributes:(id)attributes location:(id)location textContainer:(id)container applicationFrameworkContext:(long long)context acceptsViewProvider:(BOOL)provider;
- (id)imageForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds attributes:(id)attributes location:(id)location textContainer:(id)container;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })attachmentBoundsForAttributes:(id)attributes location:(id)location textContainer:(id)container proposedLineFragment:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fragment position:(struct CGPoint { double x0; double x1; })position;
- (id)viewProviderForParentView:(id)view location:(id)location textContainer:(id)container;
- (void)placeView:(id)view withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame inParentView:(id)view location:(id)location textContainer:(id)container applicationFrameworkContext:(long long)context;
- (void)_drawInAlignedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect attributes:(id)attributes location:(id)location textContainer:(id)container applicationFrameworkContext:(long long)context;
@end

#endif /* NSTextAttachment_h */
