//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef NSTextContainer_h
#define NSTextContainer_h
@import Foundation;

#include "NSLayoutManager.h"
#include "NSSecureCoding-Protocol.h"
#include "NSTextLayoutManager.h"
#include "NSTextLayoutOrientationProvider-Protocol.h"
#include "NSTextViewportLayoutController.h"

@class NSArray, NSDictionary;
@protocol UIView<NSTextContainerView;

@interface NSTextContainer : NSObject<NSSecureCoding, NSTextLayoutOrientationProvider> {
  /* instance variables */
  UIView<NSTextContainerView> *_textView;
  unsigned long long _maximumLines;
  struct __tcFlags { unsigned int x :1 widthTracksTextView; unsigned int x :1 heightTracksTextView; unsigned int x :1 observingFrameChanges; unsigned int x :4 lineBreakMode; unsigned int x :1 oldAPI; unsigned int x :8 _reserved; } _tcFlags;
  struct CGPath * _cachedBoundingPath;
  struct __CFArray * _cachedClippingAttributes;
  struct __CFArray * _cachedBounds;
  double _cacheBoundsMinY;
  double _cacheBoundsMaxY;
  double _minimumWidth;
  NSDictionary *_attributesForExtraLineFragment;
  long long _applicationFrameworkContext;
  BOOL _textViewSupportsAdaptiveColor;
  BOOL _textViewSupportsDowngrade;
  BOOL _textViewHasDefaultParagraphStyle;
  BOOL _textViewHasLinkTextAttributes;
  NSTextViewportLayoutController *_textViewportLayoutController;
}

@property (nonatomic) NSLayoutManager *layoutManager;
@property (readonly, weak, nonatomic) NSTextLayoutManager *textLayoutManager;
@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (copy, nonatomic) NSArray *exclusionPaths;
@property (nonatomic) long long lineBreakMode;
@property (nonatomic) double lineFragmentPadding;
@property (nonatomic) unsigned long long maximumNumberOfLines;
@property (readonly, nonatomic) BOOL simpleRectangularTextContainer;
@property (nonatomic) BOOL widthTracksTextView;
@property (nonatomic) BOOL heightTracksTextView;
@property (readonly, @dynamic, nonatomic) long long layoutOrientation;

/* class methods */
+ (void)initialize;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (BOOL)_containerObservesTextViewFrameChanges;
- (void)_resizeAccordingToTextView:(id)view;
- (void)_containerTextViewFrameChanged:(id)changed;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })textContainerInsetsForView:(id)view;
- (void)invalidateTextContainerOrigin;
- (void)coordinateAccess:(id /* block */)access;
- (void)setMinimumLineFragmentWidth:(double)width;
- (double)minimumLineFragmentWidth;
- (struct NSEdgeInsets { double x0; double x1; double x2; double x3; })textContainerInsetsForView_iOS:(id)os;
- (void)_commonInit;
- (id)initWithContainerSize:(struct CGSize { double x0; double x1; })size;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size;
- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)replaceLayoutManager:(id)manager;
- (BOOL)_hasLayoutManager:(id)manager;
- (struct CGPoint { double x0; double x1; })textContainerOrigin;
- (BOOL)_textViewAllowsMigratingToLayoutManager;
- (id)textView;
- (void)setTextView:(id)view;
- (void)setContainerSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })containerSize;
- (id)attributesForExtraLineFragment;
- (void)setAttributesForExtraLineFragment:(id)fragment;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })lineFragmentRectForProposedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect atIndex:(unsigned long long)index writingDirection:(long long)direction remainingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect;
- (id)copyWithZone:(struct _NSZone *)zone;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })lineFragmentRectForProposedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect remainingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect;
- (BOOL)isSimpleRectangularTextContainer;
- (BOOL)containsPoint:(struct CGPoint { double x0; double x1; })point;
- (id)renderingColorForDocumentColor:(id)color;
- (id)selectedTextAttributes;
- (id)markedTextAttributesAtCharacterIndex:(long long)index effectiveRange:(out struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (id)defaultParagraphStyle;
- (id)linkTextAttributes;
- (id)textViewportLayoutController;
- (id)description;
@end

#endif /* NSTextContainer_h */
