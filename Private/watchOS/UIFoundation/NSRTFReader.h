//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef NSRTFReader_h
#define NSRTFReader_h
@import Foundation;

#include "NSTextTable.h"

@class NSArray, NSCalendar, NSColor, NSData, NSFileWrapper, NSMapTable, NSMutableArray, NSMutableAttributedString, NSMutableData, NSMutableDictionary;

@interface NSRTFReader : NSObject {
  /* instance variables */
  NSMutableAttributedString *_topAttributedString;
  NSMutableAttributedString *_curAttributedString;
  NSMutableArray *_attributesStack;
  NSMutableDictionary *_curAttributes;
  unsigned int _level;
  NSData *_rtfData;
  NSMutableDictionary *_fontTable;
  NSFileWrapper *_document;
  union { unsigned char x[128] thin; unsigned short x[128] fat; } _textBuffer;
  unsigned long long _textBufferIndex;
  int _rtfVersion;
  int _cocoaVersion;
  int _cocoaSubVersion;
  int _readOnly;
  int _usesScreenFonts;
  int _colorTblColorSpace;
  unsigned int _defaultToUniCharEncoding;
  struct _NSAttributeInfo { unsigned int toUniCharEncoding; unsigned int codePageEncoding; NSFont *font; double fontSize; double kern; NSMutableParagraphStyle *paraStyle; short fontPalette; unsigned int x :1 bold; unsigned int x :1 italic; unsigned int x :1 fontIsValid; unsigned int x :1 paraStyleIsValid; unsigned int x :1 kernIsValid; unsigned int x :1 attributesSameAsBefore; unsigned int x :1 multiByteEncoding; unsigned int x :3 unicodeAlternativeLength; unsigned int x :4 tabStopType; unsigned int x :1 curAttributesNeedsCopying; unsigned int x :1 paraStyleNeedsCopying; unsigned int x :1 hasWritingDirectionAttribute; unsigned int x0 :15; } _attributeInfo;
  NSMutableData *_attributeInfoStack;
  struct CGSize { double width; double height; } _paperSize;
  double _lMargin;
  double _rMargin;
  double _bMargin;
  double _tMargin;
  NSMutableDictionary *_documentInfoDictionary;
  struct CGSize { double width; double height; } _viewSize;
  int _viewScale;
  int _viewKind;
  NSMapTable *_cachedRTFFontTable;
  double _hyphenationFactor;
  double _defaultTabInterval;
  NSColor *_documentBackgroundColor;
  struct _NSRTFPriv { void *reader; char *rtfInput; unsigned long long rtfInputLength; unsigned long long rtfInputLocation; unsigned long long rtfHeaderEndLocation; int pushedChar; int pushedClass; int pushedMajor; int pushedMinor; int pushedParam; char x[1024] pushedTextBuf; int prevChar; int bumpLine; struct RTFFont *fontList; struct RTFColor *colorList; struct RTFStyle *styleList; char *inputName; char *outputName; undefined * x[5] ccb; undefined *readHook; undefined *msgProc; undefined *panicProc; char x[1024] textBuf; int textLen; int class; int major; int minor; int param; long long lineNum; long long linePos; int groupState; } _private;
  BOOL _textBufferContentsIsFat;
  BOOL _explicitCharSetEncountered;
  BOOL _isRTLDocument;
  long long _readLimit;
  long long _thumbnailLimit;
  BOOL _limitReached;
  unsigned char _textFlow;
  NSMutableArray *_layoutOrientationSections;
  unsigned long long _verticalOrientationLocation;
  NSArray *_textBlocks;
  NSMutableArray *_nestedTables;
  NSTextTable *_currentTable;
  NSTextTable *_previousTable;
  NSMutableArray *_currentRowArray;
  NSMutableArray *_previousRowArray;
  int _currentRow;
  int _currentColumn;
  int _currentDefinitionColumn;
  BOOL _currentRowIsLast;
  BOOL _setTableCells;
  unsigned long long _currentBorderEdge;
  BOOL _currentBorderIsTable;
  NSMutableDictionary *_listDefinitions;
  int _currentListNumber;
  int _currentListLevel;
  NSCalendar *_gregorianCalendar;
  NSMutableDictionary *_fontAttributesTable;
  long long _cocoaTextScaling;
  long long _cocoaPlatform;
  long long _targetTextScaling;
  long long _sourceTextScaling;
  long long _finalTextScaling;
}

/* instance methods */
- (id)initWithRTFD:(id)rtfd;
- (id)initWithPath:(id)path;
- (id)initWithRTFDFileWrapper:(id)wrapper;
- (id)initWithRTF:(id)rtf;
- (void)_setRTFDFileWrapper:(id)wrapper;
- (id)_RTFDFileWrapper;
- (void)setReadLimit:(long long)limit;
- (void)setThumbnailLimit:(long long)limit;
- (void)setPaperSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })paperSize;
- (void)setViewSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })viewSize;
- (void)setViewKind:(long long)kind;
- (void)setViewScale:(long long)scale;
- (void)setLeftMargin:(double)margin;
- (void)setRightMargin:(double)margin;
- (void)setTopMargin:(double)margin;
- (void)setBottomMargin:(double)margin;
- (void)setHyphenationFactor:(float)factor;
- (void)setBackgroundColor:(id)color;
- (void)setDefaultTabInterval:(double)interval;
- (double)defaultTabInterval;
- (void)setBaseWritingDirection:(long long)direction;
- (long long)baseWritingDirection;
- (void)setTextFlow:(unsigned long long)flow;
- (unsigned long long)textFlow;
- (long long)cocoaPlatform;
- (long long)cocoaTextScaling;
- (void)_setTargetTextScaling:(long long)scaling;
- (void)_setSourceTextScaling:(long long)scaling;
- (id)_currentTable;
- (id)_currentTableCell;
- (unsigned long long)_currentBorderEdge;
- (BOOL)_currentBorderIsTable;
- (BOOL)_currentTableCellIsPlaceholder;
- (void)_setCurrentBorderEdge:(unsigned long long)edge isTable:(BOOL)table;
- (void)_setTableNestingLevel:(long long)level;
- (void)_startTableRowDefinition;
- (void)_endTableCellDefinition;
- (void)_paragraphInTable;
- (void)_endTableCell;
- (void)_lastTableRow;
- (void)_endTableRow;
- (void)_mergeTableCellsHorizontally;
- (void)_mergeTableCellsVertically;
- (id)documentAttributes;
- (void)setMutableAttributedString:(id)string;
- (id)mutableAttributedString;
- (id)mutableAttributes;
- (id)defaultParagraphStyle;
- (id)_mutableParagraphStyle;
- (id)attributedStringToEndOfGroup;
- (id)attributedString;
- (id)attributesAtEndOfGroup;
- (void)_updateAttributes;
- (long long)_currentListNumber;
- (void)_setCurrentListNumber:(long long)number;
- (long long)_currentListLevel;
- (void)_setCurrentListLevel:(long long)level;
- (id)_listDefinitions;
- (void)_addListDefinition:(id)definition forKey:(long long)key;
- (void)_addOverride:(long long)override forKey:(long long)key;
- (void)processString:(id)string;
- (void)_pushState;
- (void)_popState;
- (void)dealloc;
- (void)finalize;
@end

#endif /* NSRTFReader_h */
