//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef NSExtraLMData_h
#define NSExtraLMData_h
@import Foundation;

#include "NSLayoutManagerTextBlockRowArrayCache.h"
#include "NSParagraphArbitrator.h"
#include "NSRunStorage.h"
#include "NSTextContainer.h"

@class CUIStyleEffectConfiguration, NSLock, NSMutableArray, NSMutableSet;

@interface NSExtraLMData : NSObject {
  /* instance variables */
  NSRunStorage *_attachmentSizesRun;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _currentAttachmentRect;
  unsigned long long _currentAttachmentIndex;
  NSLock *_fillHoleLock;
  NSRunStorage *_fragmentRunsExtras;
  id _temporaryAttributes;
  NSTextContainer *_firstTextContainer;
  struct __CFDictionary * _textContainerIndexes;
  struct __CFDictionary * _textContainerGlyphIndexes;
  long long _typesetterBehavior;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cachedFontBounds;
  double _cachedUnderlineThickness;
  double _cachedUnderlinePosition;
  double _cachedUnderlineAdjustment;
  struct _NSRange { unsigned long long location; unsigned long long length; } _cachedUnderlineRange;
  NSMutableArray *_blockRunsArray;
  double _hyphenationFactor;
  NSMutableArray *_insertionPointCache;
  struct _NSGlyphTree { struct _NSGlyphNode *rootNode; struct _NSGlyphNode *curNode; unsigned long long curCharIndex; unsigned long long curGlyphIndex; } _glyphTree;
  struct _NSLayoutTree { struct _NSLayoutNode *rootNode; struct _NSLayoutNode *curNode; unsigned long long curGlyphIndex; double curLongitudinalOrigin; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } extraLineFragmentRect; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } extraLineFragmentUsedRect; unsigned long long glyphsPerLineEstimate; double offsetPerLineEstimate; } _layoutTree;
  struct _NSRange { unsigned long long location; unsigned long long length; } _firstTextViewVisibleCharRange;
  struct CGSize { double width; double height; } _firstTextViewVisibleOffset;
  struct _NSRange { unsigned long long location; unsigned long long length; } _lastInvalidatedCharRange;
  double _lastInvalidatedLongitudinalPosition;
  NSTextContainer *_lastInvalidatedTextContainer;
  NSLayoutManagerTextBlockRowArrayCache *_rowArrayCache;
  NSParagraphArbitrator *_paragraphArbitrator;
  CUIStyleEffectConfiguration *_styleEffectConfig;
  NSMutableSet *_viewProviders;
  struct __lmFlags2 { unsigned int x :6 glyphCause; unsigned int x :6 layoutCause; unsigned int x :1 delegateRespondsToTempAttrs; unsigned int x :1 processingFirstTextViewVisible; unsigned int x :1 temporarySpacingChange; unsigned int x :1 alwaysDrawsActive; unsigned int x :1 usesOldShowPackedGlyphs; unsigned int x :1 drawsUnderlinesLikeWebKit; unsigned int x :1 drawsDebugBaselines; unsigned int x :1 mirrorsTextAlignment; unsigned int x :1 forcesTrackingFloor; unsigned int x :1 isLiveScrolling; unsigned int x :1 hasCustomUnderlineColor; unsigned int x :3 applicationPlatformContext; unsigned int x :1 limitsLayoutForSuspiciousContents; unsigned int x :1 delegateRespondsToRenderingColor; unsigned int x :1 firstTextViewRespondsToRenderingColor; unsigned int x :1 usesCustomBackgroundRectArray; unsigned int x :1 usesDefaultHyphenation; unsigned int x :1 reserved; } _lmFlags2;
  struct _NSGlyphIndexForPointCache { struct CGPoint { double x; double y; } point; void *textContainer; unsigned long long indexCache; double fractionCache; } _glyphIndexForPointCache;
  long long _currentChangeInLength;
  double _timeStampForResizeInScroll;
  id /* block */ _didCompleteLayoutObserverBlock;
}

@end

#endif /* NSExtraLMData_h */
