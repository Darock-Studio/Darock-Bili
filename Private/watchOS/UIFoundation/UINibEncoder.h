//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef UINibEncoder_h
#define UINibEncoder_h
@import Foundation;

#include "NSCoder.h"

@class NSMutableData;

@interface UINibEncoder : NSCoder {
  /* instance variables */
  struct __CFDictionary * objectsToObjectIDs;
  struct __CFDictionary * objectIDsToObjects;
  struct __CFArray * values;
  struct __CFSet * encodedObjects;
  NSMutableData *data;
  struct __CFDictionary * replacements;
  unsigned int nextObjectID;
  struct { unsigned int currentObjectID; unsigned int nextAnonymousKey; } recursiveState;
  struct __CFSet * objectsReplacedWithNil;
  struct __CFArray * encodedOrderedObjects;
  struct __CFSet * objectsUniquedByValue;
}

@property (nonatomic) BOOL unorderedCollectionSortingEnabled;
@property id delegate;

/* class methods */
+ (id)archivedDataWithRootObject:(id)object;
+ (BOOL)archiveRootObject:(id)object toFile:(id)file;

/* instance methods */
- (id)initForWritingWithMutableData:(id)data;
- (void)dealloc;
- (id)objectIDForObject:(id)object;
- (id)assignObjectIDForObject:(id)object;
- (BOOL)previouslyCodedObject:(id)object;
- (void)appendValue:(id)value;
- (Class)encodedClassForObject:(id)object;
- (id)encodedClassNameForClass:(Class)class;
- (id)encodedClassNameForObject:(id)object;
- (BOOL)object:(id)object encodesWithCoderFromClass:(Class)class;
- (BOOL)object:(id)object encodesAsMemberAndWithCoderOfClass:(Class)class;
- (BOOL)shouldUniqueObjectByValue:(id)value;
- (id)replacementObjectForObject:(id)object forKey:(id)key;
- (void)serializeArray:(id)array;
- (void)serializeDictionary:(id)dictionary;
- (void)serializeSet:(id)set;
- (void)serializeObject:(id)object;
- (void)finishEncoding;
- (unsigned int)systemVersion;
- (long long)versionForClassName:(id)name;
- (BOOL)allowsKeyedCoding;
- (void)encodeObject:(id)object forKey:(id)key;
- (void)encodeConditionalObject:(id)object forKey:(id)key;
- (void)encodeBool:(BOOL)bool forKey:(id)key;
- (void)encodeInt:(int)int forKey:(id)key;
- (void)encodeInt32:(int)int32 forKey:(id)key;
- (void)encodeInt64:(long long)int64 forKey:(id)key;
- (void)encodeInteger:(long long)integer forKey:(id)key;
- (void)encodeFloat:(float)float forKey:(id)key;
- (void)encodeDouble:(double)double forKey:(id)key;
- (void)encodeBytes:(const char *)bytes length:(unsigned long long)length forKey:(id)key;
- (void)encodeArrayOfDoubles:(double *)doubles count:(long long)count forKey:(id)key;
- (void)encodeArrayOfFloats:(float *)floats count:(long long)count forKey:(id)key;
- (void)encodeArrayOfCGFloats:(double *)cgfloats count:(long long)count forKey:(id)key;
- (void)encodeCGPoint:(struct CGPoint { double x0; double x1; })cgpoint forKey:(id)key;
- (void)encodeCGSize:(struct CGSize { double x0; double x1; })cgsize forKey:(id)key;
- (void)encodeCGRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })cgrect forKey:(id)key;
- (void)encodeCGAffineTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform forKey:(id)key;
- (void)encodeUIEdgeInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets forKey:(id)key;
- (id)nextGenericKey;
- (void)encodeObject:(id)object;
- (void)encodeRootObject:(id)object;
- (void)encodeBycopyObject:(id)object;
- (void)encodeByrefObject:(id)object;
- (void)encodeConditionalObject:(id)object;
- (void)encodeValuesOfObjCTypes:(const char *)ctypes;
- (void)encodeArrayOfObjCType:(const char *)ctype count:(unsigned long long)count at:(const void *)at;
- (void)encodeBytes:(const void *)bytes length:(unsigned long long)length;
- (void)encodeValueOfObjCType:(const char *)ctype at:(const void *)at;
- (BOOL)isUnorderedCollectionSortingEnabled;
@end

#endif /* UINibEncoder_h */
