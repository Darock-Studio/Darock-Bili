//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef UIFont_h
#define UIFont_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "UIFontDescriptor.h"

@class NSString;

@interface UIFont : NSObject<NSCopying, NSSecureCoding>

@property (readonly, nonatomic) NSString *textStyleForScaling;
@property (readonly, nonatomic) double pointSizeForScaling;
@property (readonly, nonatomic) double maximumPointSizeAfterScaling;
@property (readonly, nonatomic) NSString *familyName;
@property (readonly, nonatomic) NSString *fontName;
@property (readonly, nonatomic) double pointSize;
@property (readonly, nonatomic) double ascender;
@property (readonly, nonatomic) double descender;
@property (readonly, nonatomic) double capHeight;
@property (readonly, nonatomic) double xHeight;
@property (readonly, nonatomic) double lineHeight;
@property (readonly, nonatomic) double leading;
@property (readonly, nonatomic) UIFontDescriptor *fontDescriptor;

/* class methods */
+ (id)userFontOfSize:(double)size;
+ (id)_sharedZeroPointFont;
+ (id)_sharedFontCache;
+ (void)_evictAllItemsFromFontAndFontDescriptorCaches;
+ (id)fontWithFamilyName:(id)name traits:(int)traits size:(double)size;
+ (id)fontWithMarkupDescription:(id)description;
+ (id)familyNames;
+ (id)fontNamesForFamilyName:(id)name;
+ (id)_fontWithDescriptor:(id)descriptor size:(double)size textStyleForScaling:(id)scaling pointSizeForScaling:(double)scaling maximumPointSizeAfterScaling:(double)scaling forIB:(BOOL)ib legibilityWeight:(long long)weight;
+ (id)_systemFontsOfSize:(double)size traits:(int)traits;
+ (id)preferredFontForTextStyle:(id)style;
+ (id)preferredFontForTextStyle:(id)style compatibleWithTraitCollection:(id)collection;
+ (id)preferredFontForUsage:(id)usage;
+ (id)preferredFontForUsage:(id)usage contentSizeCategoryName:(id)name;
+ (id)_preferredFontForTextStyle:(id)style maximumContentSizeCategory:(id)category;
+ (id)_preferredFontForTextStyle:(id)style maximumContentSizeCategory:(id)category compatibleWithTraitCollection:(id)collection;
+ (id)_preferredFontForTextStyle:(id)style variant:(long long)variant;
+ (id)_preferredFontForTextStyle:(id)style variant:(long long)variant maximumContentSizeCategory:(id)category;
+ (id)_preferredFontForTextStyle:(id)style design:(id)design variant:(long long)variant;
+ (id)_preferredFontForTextStyle:(id)style design:(id)design variant:(long long)variant compatibleWithTraitCollection:(id)collection;
+ (id)_preferredFontForTextStyle:(id)style design:(id)design variant:(long long)variant maximumContentSizeCategory:(id)category compatibleWithTraitCollection:(id)collection;
+ (id)_preferredFontForTextStyle:(id)style design:(id)design variant:(long long)variant maximumContentSizeCategory:(id)category compatibleWithTraitCollection:(id)collection pointSize:(double)size pointSizeForScaling:(double)scaling;
+ (id)_preferredFontForTextStyle:(id)style weight:(double)weight;
+ (id)_preferredFontForTextStyle:(id)style design:(id)design weight:(double)weight;
+ (id)_preferredFontForTextStyle:(id)style addingSymbolicTraits:(unsigned int)traits;
+ (id)_preferredFontForTextStyle:(id)style addingSymbolicTraits:(unsigned int)traits weight:(double)weight;
+ (id)_preferredFontForTextStyle:(id)style addingSymbolicTraits:(unsigned int)traits design:(id)design weight:(double)weight;
+ (id)_preferredFontForTextStyle:(id)style design:(id)design weight:(double)weight maximumContentSizeCategory:(id)category compatibleWithTraitCollection:(id)collection;
+ (id)_preferredFontForTextStyle:(id)style design:(id)design weight:(id)weight symbolicTraits:(unsigned int)traits maximumContentSizeCategory:(id)category compatibleWithTraitCollection:(id)collection pointSize:(double)size pointSizeForScaling:(double)scaling;
+ (BOOL)_isSupportedDynamicFontTextStyle:(id)style;
+ (id)_supportedDynamicFontStyles;
+ (id)_preferredFontForTextStyle:(id)style maximumPointSize:(double)size compatibleWithTraitCollection:(id)collection;
+ (double)_pointSize:(double)size scaledLikeTextStyle:(id)style maximumPointSize:(double)size compatibleWithTraitCollection:(id)collection;
+ (double)_pointSize:(double)size scaledLikeTextStyle:(id)style maximumPointSize:(double)size compatibleWithTraitCollection:(id)collection roundSize:(BOOL)size;
+ (double)_readableWidth;
+ (id)defaultFontForTextStyle:(id)style;
+ (id)ib_preferredFontForTextStyle:(id)style;
+ (id)fontWithName:(id)name size:(double)size traits:(int)traits;
+ (id)fontWithName:(id)name size:(double)size;
+ (id)systemFontOfSize:(double)size traits:(int)traits;
+ (id)_systemFontOfSize:(double)size width:(id)width traits:(int)traits;
+ (id)systemFontOfSize:(double)size;
+ (id)_opticalSystemFontOfSize:(double)size;
+ (id)_opticalBoldSystemFontOfSize:(double)size;
+ (id)boldSystemFontOfSize:(double)size;
+ (id)italicSystemFontOfSize:(double)size;
+ (id)_thinSystemFontOfSize:(double)size;
+ (id)_lightSystemFontOfSize:(double)size;
+ (id)_ultraLightSystemFontOfSize:(double)size;
+ (id)systemFontOfSize:(double)size weight:(double)weight;
+ (id)systemFontOfSize:(double)size weight:(double)weight width:(double)width;
+ (id)systemFontOfSize:(double)size weight:(double)weight design:(id)design;
+ (id)monospacedSystemFontOfSize:(double)size weight:(double)weight;
+ (id)monospacedDigitSystemFontOfSize:(double)size weight:(double)weight;
+ (id)fontWithDescriptor:(id)descriptor size:(double)size;
+ (double)labelFontSize;
+ (void)_setLabelFontSize:(double)size;
+ (double)buttonFontSize;
+ (void)_setButtonFontSize:(double)size;
+ (double)smallSystemFontSize;
+ (void)_setSmallSystemFontSize:(double)size;
+ (double)systemFontSize;
+ (void)_setSystemFontSize:(double)size;
+ (id)classFallbacksForKeyedArchiver;
+ (BOOL)supportsSecureCoding;
+ (id)_fontWithName:(id)name size:(double)size;

/* instance methods */
- (id)coveredCharacterSet;
- (BOOL)_isDefaultFace;
- (struct __CTFont *)CTFont;
- (unsigned long long)numberOfGlyphs;
- (unsigned short)glyphWithName:(id)name;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_textMatrixTransformForContext:(id)context;
- (void)applyToGraphicsContext:(id)context;
- (void)setInContext:(struct CGContext *)context;
- (double)_totalAdvancementForNativeGlyphs:(const unsigned short *)glyphs count:(long long)count;
- (void)getAdvancements:(struct CGSize { double x0; double x1; } *)advancements forCGGlyphs:(const unsigned short *)cgglyphs count:(unsigned long long)count;
- (void)getVerticalOriginTranslations:(struct CGSize { double x0; double x1; } *)translations forCGGlyphs:(const unsigned short *)cgglyphs count:(unsigned long long)count;
- (struct CGFont *)_backingCGSFont;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundingRectForFont;
- (double)underlinePosition;
- (double)underlineThickness;
- (struct CGSize { double x0; double x1; })advancementForGlyph:(unsigned short)glyph;
- (id)screenFontWithRenderingMode:(unsigned long long)mode;
- (unsigned int)hyphenGlyphForLocale:(id)locale;
- (unsigned long long)getCaretPositions:(double *)positions forGlyph:(unsigned int)glyph maximumLength:(unsigned long long)length;
- (id)_familyName;
- (BOOL)_getLatin1Glyphs:(const unsigned short * *)glyphs advanceWidths:(const double * *)widths;
- (unsigned int)_defaultGlyphForChar:(unsigned short)char;
- (void)getBoundingRects:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rects forCGGlyphs:(const unsigned short *)cgglyphs count:(unsigned long long)count;
- (id)bestMatchingFontForCharacters:(const unsigned short *)characters length:(unsigned long long)length attributes:(id)attributes actualCoveredLength:(unsigned long long *)length;
- (id)lastResortFont;
- (BOOL)_hasColorGlyphs;
- (id)init;
- (id)_alternateSystemFonts;
- (BOOL)isIBTextStyleFont;
- (BOOL)isIBFontMetricsScaledFont;
- (id)_fontAdjustedForCurrentContentSizeCategory;
- (id)_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:(id)collection;
- (id)_fontScaledLikeTextStyle:(id)style maximumPointSize:(double)size compatibleWithTraitCollection:(id)collection forIB:(BOOL)ib;
- (double)readableWidth;
- (BOOL)_isTextStyleFont;
- (id)_textStyle;
- (double)_scaledValueForValue:(double)value;
- (double)_scaledValueForValue:(double)value useLanguageAwareScaling:(BOOL)scaling;
- (id)initWithName:(id)name size:(double)size;
- (id)initWithFamilyName:(id)name traits:(int)traits size:(double)size;
- (id)initWithMarkupDescription:(id)description;
- (id)familyNameForCSSFontFamilyValueForWebKit:(BOOL)kit;
- (id)markupDescriptionForWebKit:(BOOL)kit pointSize:(float)size sizeUnit:(id)unit;
- (id)markupDescription;
- (id)htmlMarkupDescription;
- (id)_fontScaledByScaleFactor:(double)factor;
- (BOOL)_isUIFont;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (Class)classForCoder;
- (double)_bodyLeading;
- (id)fontWithSize:(double)size;
- (unsigned long long)renderingMode;
- (id)_kernOverride;
- (unsigned long long)mostCompatibleStringEncoding;
- (BOOL)__isSystemFont;
- (BOOL)_isHiraginoFont;
- (double)_baseLineHeightForFont:(BOOL)font;
- (double)_defaultLineHeightForUILayout;
- (int)traits;
- (double)_ascenderDeltaForBehavior:(long long)behavior;
- (double)_leading;
- (BOOL)isSystemFont;
- (BOOL)isFixedPitch;
- (BOOL)isVertical;
- (id)verticalFont;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* UIFont_h */
