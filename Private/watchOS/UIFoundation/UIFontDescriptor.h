//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef UIFontDescriptor_h
#define UIFontDescriptor_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSString;

@interface UIFontDescriptor : NSObject<NSCopying, NSSecureCoding> {
  /* instance variables */
  NSMutableDictionary *_attributes;
  id _reserved1;
  id _reserved2;
  id _reserved3;
  id _reserved4;
  id _reserved5;
}

@property (readonly, nonatomic) NSString *postscriptName;
@property (readonly, nonatomic) double pointSize;
@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } matrix;
@property (readonly, nonatomic) unsigned int symbolicTraits;
@property (readonly, nonatomic) NSDictionary *fontAttributes;

/* class methods */
+ (id)_createMungledDictionary:(id)dictionary;
+ (id)preferredFontDescriptorWithTextStyle:(id)style;
+ (id)preferredFontDescriptorWithTextStyle:(id)style compatibleWithTraitCollection:(id)collection;
+ (id)preferredFontDescriptorWithTextStyle:(id)style addingSymbolicTraits:(unsigned int)traits options:(unsigned long long)options;
+ (id)_preferredFontDescriptorWithTextStyle:(id)style weight:(double)weight;
+ (id)_preferredFontDescriptorWithTextStyle:(id)style design:(id)design weight:(double)weight;
+ (id)_preferredFontDescriptorWithTextStyle:(id)style design:(id)design weight:(double)weight compatibleWithTraitCollection:(id)collection;
+ (id)_preferredFontDescriptorWithTextStyle:(id)style addingSymbolicTraits:(unsigned int)traits design:(id)design weight:(double)weight compatibleWithTraitCollection:(id)collection;
+ (id)defaultFontDescriptorWithTextStyle:(id)style;
+ (id)defaultFontDescriptorWithTextStyle:(id)style addingSymbolicTraits:(unsigned int)traits options:(unsigned long long)options;
+ (id)fontDescriptorWithFontAttributes:(id)attributes;
+ (id)fontDescriptorWithName:(id)name size:(double)size;
+ (id)fontDescriptorWithName:(id)name matrix:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })matrix;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)_swapWithFontAttributes:(id)attributes options:(unsigned long long)options;
- (id)initWithFontAttributes:(id)attributes;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)_attributes;
- (Class)classForCoder;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)objectForKey:(id)key;
- (id)matchingFontDescriptorsWithMandatoryKeys:(id)keys;
- (id)matchingFontDescriptorWithMandatoryKeys:(id)keys;
- (id)fontDescriptorByAddingAttributes:(id)attributes;
- (id)fontDescriptorWithSymbolicTraits:(unsigned int)traits mask:(unsigned int)mask;
- (id)fontDescriptorWithSymbolicTraits:(unsigned int)traits;
- (id)_fontDescriptorWithMatrix:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })matrix;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_matrix;
- (id)_NSAffineTransform;
- (id)fontDescriptorWithMatrix:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })matrix;
- (id)fontDescriptorWithSize:(double)size;
- (id)fontDescriptorWithFace:(id)face;
- (id)fontDescriptorWithFamily:(id)family;
- (id)fontDescriptorWithDesign:(id)design;
- (id)_visibleName;
- (id)description;
@end

#endif /* UIFontDescriptor_h */
