//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef NSTypesetter_h
#define NSTypesetter_h
@import Foundation;

#include "NSParagraphStyle.h"

@class BOOL *;

@interface NSTypesetter : NSObject {
  /* instance variables */
  void * _reserved;
  NSParagraphStyle *_defaultParagraphStyle;
}

/* class methods */
+ (void)initialize;
+ (BOOL)_usesATSTypesetter;
+ (long long)defaultTypesetterBehavior;
+ (long long)defaultStringDrawingTypesetterBehavior;
+ (id)sharedSystemTypesetterForBehavior:(long long)behavior;
+ (id)sharedSystemTypesetter;
+ (unsigned long long)defaultLineBreakStrategy;

/* instance methods */
- (struct { struct  * x0; struct _NSRange { unsigned long long x0; unsigned long long x1; } x1; struct _NSRange { unsigned long long x0; unsigned long long x1; } x2; float x3; float x4; undefined * x5; undefined * x6; double x7; double x8; double x9; double x10; double x11; double x12; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x13; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x14; struct _NSRange { unsigned long long x0; unsigned long long x1; } x15; id x16; double x17; long long x18; struct { unsigned int x0 :4; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :4; unsigned int x5 :4; unsigned int x6 :1; unsigned int x7 :1; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :2; unsigned int x11 :1; unsigned int x12 :3; unsigned int x13 :7; } x19; void * x20[0] } *)_allocateAuxData;
- (struct { struct  * x0; struct _NSRange { unsigned long long x0; unsigned long long x1; } x1; struct _NSRange { unsigned long long x0; unsigned long long x1; } x2; float x3; float x4; undefined * x5; undefined * x6; double x7; double x8; double x9; double x10; double x11; double x12; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x13; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x14; struct _NSRange { unsigned long long x0; unsigned long long x1; } x15; id x16; double x17; long long x18; struct { unsigned int x0 :4; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :4; unsigned int x5 :4; unsigned int x6 :1; unsigned int x7 :1; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :2; unsigned int x11 :1; unsigned int x12 :3; unsigned int x13 :7; } x19; void * x20[0] } *)_getAuxData;
- (void)dealloc;
- (void)finalize;
- (BOOL)_forceOriginalFontBaseline;
- (void)_setForceOriginalFontBaseline:(BOOL)baseline;
- (BOOL)_isLineBreakModeOverridden;
- (void)_setLineBreakModeOverridden:(BOOL)overridden;
- (unsigned long long)_getRemainingNominalParagraphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range andParagraphSeparatorRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range charactarIndex:(unsigned long long)index layoutManager:(id)manager string:(id)string;
- (void)_updateParagraphStyleCache:(id)cache;
- (union { struct { double x0; double x1; double x2; long long x3; } x0; struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; } x1; } *)_lineFragmentRectForProposedRectArgs;
- (long long)applicationFrameworkContext;
- (void)setApplicationFrameworkContext:(long long)context;
- (BOOL)_allowsEllipsisGlyphSubstitution;
- (id)_ellipsisFontForFont:(id)font;
- (long long)_baseWritingDirection;
- (BOOL)usesFontLeading;
- (void)setUsesFontLeading:(BOOL)leading;
- (long long)typesetterBehavior;
- (void)setTypesetterBehavior:(long long)behavior;
- (float)hyphenationFactor;
- (void)setHyphenationFactor:(float)factor;
- (double)lineFragmentPadding;
- (void)setLineFragmentPadding:(double)padding;
- (id)substituteFontForFont:(id)font;
- (id)textTabForGlyphLocation:(double)location writingDirection:(long long)direction maxLocation:(double)location;
- (BOOL)bidiProcessingEnabled;
- (void)setBidiProcessingEnabled:(BOOL)enabled;
- (float)tightenThresholdForTruncation;
- (void)setTightenThresholdForTruncation:(float)truncation;
- (void)setAttributedString:(id)string;
- (id)attributedString;
- (void)setParagraphGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range separatorGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })paragraphGlyphRange;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })paragraphSeparatorGlyphRange;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })paragraphCharacterRange;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })paragraphSeparatorCharacterRange;
- (unsigned long long)layoutParagraphAtPoint:(struct CGPoint { double x0; double x1; } *)point;
- (void)beginParagraph;
- (void)endParagraph;
- (void)beginLineWithGlyphAtIndex:(unsigned long long)index;
- (void)endLineWithGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (double)lineSpacingAfterGlyphAtIndex:(unsigned long long)index withProposedLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (double)paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)index withProposedLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (double)paragraphSpacingAfterGlyphAtIndex:(unsigned long long)index withProposedLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)finalizeLineFragmentRect:(inout struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect lineFragmentUsedRect:(inout struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect baselineOffset:(inout double *)offset forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)layoutManager;
- (id)textContainers;
- (id)currentTextContainer;
- (id)currentParagraphStyle;
- (void)setHardInvalidation:(BOOL)invalidation forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)getLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect usedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect forParagraphSeparatorGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range atProposedOrigin:(struct CGPoint { double x0; double x1; })origin;
- (id)defaultParagraphStyle;
- (void)setDefaultParagraphStyle:(id)style;
- (id)attributesForExtraLineFragment;
- (unsigned long long)actionForControlCharacterAtIndex:(unsigned long long)index;
- (void)_layoutGlyphsInLayoutManager:(id)manager startingAtGlyphIndex:(unsigned long long)index maxNumberOfLineFragments:(unsigned long long)fragments maxCharacterIndex:(unsigned long long)index nextGlyphIndex:(unsigned long long *)index nextCharacterIndex:(unsigned long long *)index;
- (void)layoutGlyphsInLayoutManager:(id)manager startingAtGlyphIndex:(unsigned long long)index maxNumberOfLineFragments:(unsigned long long)fragments nextGlyphIndex:(unsigned long long *)index;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })layoutCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range forLayoutManager:(id)manager maximumNumberOfLineFragments:(unsigned long long)fragments;
- (double)baselineOffsetInLayoutManager:(id)manager glyphIndex:(unsigned long long)index;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })characterRangeForGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range actualGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })glyphRangeForCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range actualCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (unsigned long long)getGlyphsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range glyphs:(unsigned short *)glyphs properties:(long long *)properties characterIndexes:(unsigned long long *)indexes bidiLevels:(char *)levels;
- (unsigned long long)getGlyphsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range glyphs:(unsigned int *)glyphs characterIndexes:(unsigned long long *)indexes glyphInscriptions:(unsigned long long *)inscriptions elasticBits:(BOOL *)bits bidiLevels:(char *)levels;
- (void)getLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect usedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect remainingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect forStartingGlyphAtIndex:(unsigned long long)index proposedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect lineSpacing:(double)spacing paragraphSpacingBefore:(double)before paragraphSpacingAfter:(double)after;
- (void)setLineFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range usedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect baselineOffset:(double)offset;
- (void)substituteGlyphsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withGlyphs:(unsigned int *)glyphs;
- (void)insertGlyph:(unsigned int)glyph atGlyphIndex:(unsigned long long)index characterIndex:(unsigned long long)index;
- (void)deleteGlyphsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setNotShownAttribute:(BOOL)attribute forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setDrawsOutsideLineFragment:(BOOL)fragment forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setLocation:(struct CGPoint { double x0; double x1; })location withAdvancements:(const double *)advancements forStartOfGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setAttachmentSize:(struct CGSize { double x0; double x1; })size forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setBidiLevels:(const char *)levels forGlyphRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
@end

#endif /* NSTypesetter_h */
