//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef NSTextLayoutManager_h
#define NSTextLayoutManager_h
@import Foundation;

#include "NSLayoutManager.h"
#include "NSSecureCoding-Protocol.h"
#include "NSTextContainer.h"
#include "NSTextContentManager.h"
#include "NSTextLineFragment.h"
#include "NSTextLocation-Protocol.h"
#include "NSTextParagraph.h"
#include "NSTextRange.h"
#include "NSTextSelectionDataSource-Protocol.h"
#include "NSTextSelectionNavigation.h"
#include "NSTextViewportElementProvider-Protocol.h"
#include "NSTextViewportLayoutController.h"
#include "_NSTextAttributeStorage.h"
#include "_NSTextLayoutFragmentStorage.h"

@class NSArray, NSMapTable, NSOperationQueue, NSString;
@protocol NSTextLayoutManagerDelegate, NSTextLayoutManagerDelegatePrivate, {?="textContainer"@"NSTextContainer""startLocation"@"<NSTextLocation>""textRange"@"NSTextRange""usageBounds"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"entryIndex"Q"containerFilled"B"anchoredLocation"B};

@interface NSTextLayoutManager : NSObject<NSTextViewportElementProvider, NSSecureCoding, NSTextSelectionDataSource> {
  /* instance variables */
  long long _applicationFrameworkContext;
  NSLayoutManager *_companion;
  _NSTextAttributeStorage *_temporaryAttributesTable;
  BOOL _allowsFontSubstitutionAffectingVerticalMetrics;
  _NSTextLayoutFragmentStorage *_textLayoutFragmentStorage;
  NSMapTable *_textLayoutFragmentTable;
  long long _maximumNumberOfCachedTextLayoutFragments;
  NSTextParagraph *_textParagraphForEmptyDocument;
  struct { id x0; id x1; double x2; long long x3; long long x4; BOOL x5; BOOL x6; BOOL x7; } * _activeEnumerationCache;
  BOOL _isProcessingRenderingAttributesMethod;
  BOOL _delegateWithTextSelectionNotification;
  BOOL _delegateWithTextContainerQuery;
  BOOL _delegateWithSimpleTextContainerQuery;
  struct { NSTextContainer *textContainer; <NSTextLocation> *startLocation; NSTextRange *textRange; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } usageBounds; unsigned long long entryIndex; BOOL containerFilled; BOOL anchoredLocation; } _lastTextContainerEntry;
  struct { id x0; id x1; id x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; unsigned long long x4; BOOL x5; BOOL x6; } * _textContainerEntries;
  struct { id x0; id x1; id x2; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x3; unsigned long long x4; BOOL x5; BOOL x6; } * _textContainerEntriesAccessHint;
  unsigned long long _textContainerEntriesSize;
  unsigned long long _textContainerEntriesCount;
  NSObject<NSTextLocation> *_softInvalidationLocation;
}

@property (copy) id /* block */ isSelectionOverridableColor;
@property (readonly) BOOL lastContainerFilled;
@property (readonly) long long maximumNumberOfLinesForLastContainer;
@property (readonly) NSTextLineFragment *_extraTextLineFragment;
@property BOOL requiresCTLineRef;
@property BOOL breaksLinesForInteractiveText;
@property BOOL rendersBackgroundColorAttribute;
@property (weak, @dynamic) NSObject<NSTextLayoutManagerDelegate> *delegate;
@property (@dynamic) BOOL usesFontLeading;
@property (@dynamic) BOOL limitsLayoutForSuspiciousContents;
@property (@dynamic) BOOL usesHyphenation;
@property (readonly, weak, @dynamic) NSTextContentManager *textContentManager;
@property (retain) NSTextContainer *textContainer;
@property (readonly) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } usageBoundsForTextContainer;
@property (readonly) BOOL hasNonSimpleRectangularTextContainer;
@property (readonly, copy) NSArray *textContainers;
@property (retain) NSTextContainer *templateTextContainer;
@property (readonly) NSTextViewportLayoutController *textViewportLayoutController;
@property (retain) NSOperationQueue *layoutQueue;
@property (retain, @dynamic) NSArray *textSelections;
@property (retain, @dynamic) NSTextSelectionNavigation *textSelectionNavigation;
@property (copy) id /* block */ renderingAttributesValidator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, @dynamic) NSTextRange *documentRange;

/* class methods */
+ (BOOL)_throwsOnAssertionError;
+ (void)_setThrowsOnAssertionError:(BOOL)error;
+ (BOOL)_validatesInternalCaches;
+ (void)_setValidatesInternalCaches:(BOOL)caches;
+ (long long)maximumNumberOfSeedElements;
+ (Class)viewportLayoutControllerClass;
+ (Class)companionLayoutManagerClass;
+ (id)validRenderingAttributes;
+ (BOOL)usesHyphenation;
+ (BOOL)supportsSecureCoding;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
+ (long long)maximumNumberOfCachedTextLayoutFragments;
+ (id)linkRenderingAttributes;
+ (id)linkRenderingAttributesForLabels;
+ (BOOL)shouldBeUsedForNSTextView;

/* instance methods */
- (void)_commonInit;
- (BOOL)_hasLayoutForLocation:(id)location;
- (id)_textParagraphForEmptyDocument;
- (void)_invalidateTextParagraphForEmptyDocument;
- (BOOL)_validateTextContainerEntries;
- (void)_configureCoreTypesetter:(id)typesetter forTextParagraph:(id)paragraph textContainer:(id)container;
- (double)_estimatedVerticalSizeForTextRange:(id)range adjustedTextRange:(out id *)range;
- (id)_currentTextLayoutFragmentEnumerated;
- (long long)_numberOfLinesToCurrentlyEnumeratedTextLayoutFragment;
- (BOOL)_setSoftInvalidationLocation:(id)location onlyIfUpstream:(BOOL)upstream;
- (id)_textViewportLayoutControllerForTextContainer:(id)container;
- (id)viewportLayoutController;
- (id)companionLayoutManager;
- (id)init;
- (void)dealloc;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)usesDefaultHyphenation;
- (void)setUsesDefaultHyphenation:(BOOL)hyphenation;
- (BOOL)allowsFontSubstitutionAffectingVerticalMetrics;
- (void)setAllowsFontSubstitutionAffectingVerticalMetrics:(BOOL)metrics;
- (void)replaceTextContentManager:(id)manager;
- (long long)applicationFrameworkContext;
- (void)setApplicationFrameworkContext:(long long)context;
- (void)_addTextContainer:(id)container;
- (void)_addTextContainerForLocation:(id)location;
- (BOOL)_appendTextContainer;
- (void)_removeTextContainer;
- (void)_removeTextContainersToCondition:(id /* block */)condition;
- (void)_fillLayoutToLocation:(id)location enumerationCache:(struct { id x0; id x1; double x2; long long x3; long long x4; BOOL x5; BOOL x6; BOOL x7; } *)cache;
- (BOOL)usesContiguousLayout;
- (BOOL)allowsAddingTextContainer;
- (id)textContainerForLocation:(id)location;
- (id)rangeForTextContainerAtIndex:(long long)index;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })usageBoundsInTextContainerAtIndex:(long long)index;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })usageBoundsForLastTextContainer;
- (void)_prepareAttributedString:(id)string forTextLayoutFragment:(id)fragment;
- (id)_estimatedTextLocationForVerticalOffset:(double)offset originLocation:(id)location originOffset:(double)offset deltaFromOffset:(out double *)offset;
- (id)_estimatedTextLocationForVerticalOffset:(double)offset originLocation:(id)location originOffset:(double)offset;
- (id)renderingColorForDocumentColor:(id)color atLocation:(id)location;
- (id)_fillSoftInvalidationToLocation:(id)location verticalOffset:(double)offset;
- (void)updateLayoutWithTextLayoutFragment:(id)fragment addition:(BOOL)addition;
- (void)textContainerChangedGeometry:(id)geometry;
- (void)ensureLayoutForRange:(id)range;
- (void)_invalidateLayoutForTextRange:(id)range hard:(BOOL)hard;
- (void)invalidateLayoutForRange:(id)range;
- (void)processLayoutInvalidationForTextRange:(id)range synchronizing:(BOOL)synchronizing;
- (void)ensureLayoutForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)textLayoutFragmentForPosition:(struct CGPoint { double x0; double x1; })position inTextContainerAtIndex:(long long)index;
- (id)textLayoutFragmentForPosition:(struct CGPoint { double x0; double x1; })position;
- (id)textLayoutFragmentForPosition:(struct CGPoint { double x0; double x1; })position inTextContainerAtIndex:(long long)index avoidsAdditionalLayout:(BOOL)layout;
- (id)textLayoutFragmentForLocation:(id)location;
- (id)enumerateTextLayoutFragmentsFromLocation:(id)location options:(unsigned long long)options usingBlock:(id /* block */)block;
- (id)enumerateTextLayoutFragmentsInTextRange:(id)range options:(unsigned long long)options usingBlock:(id /* block */)block;
- (void)finalizeAndPushLastTextContainer;
- (long long)maximumNumberOfCachedTextLayoutFragments;
- (void)setMaximumNumberOfCachedTextLayoutFragments:(long long)fragments;
- (BOOL)flushTextLayoutFragmentsFromLocation:(id)location direction:(BOOL)direction;
- (long long)_fallbackWritingDirection;
- (void)enumerateTextSegmentsInRange:(id)range type:(long long)type options:(unsigned long long)options usingBlock:(id /* block */)block;
- (void)synchronize;
- (void)replaceContentsInRange:(id)range withTextElements:(id)elements;
- (void)replaceContentsInRange:(id)range withAttributedString:(id)string;
- (void)replaceCharactersInRange:(id)range withElements:(id)elements;
- (void)replaceCharactersInRange:(id)range withAttributedString:(id)string;
- (void)enumerateRenderingAttributesFromLocation:(id)location reverse:(BOOL)reverse usingBlock:(id /* block */)block;
- (void)setRenderingAttributes:(id)attributes forTextRange:(id)range;
- (void)addRenderingAttribute:(id)attribute value:(id)value forTextRange:(id)range;
- (void)removeRenderingAttribute:(id)attribute forTextRange:(id)range;
- (void)invalidateRenderingAttributesForTextRange:(id)range;
- (void)enumerateTemporaryAttributesFromLocation:(id)location reverse:(BOOL)reverse usingBlock:(id /* block */)block;
- (id)temporaryAttributesTable;
- (void)setTemporaryAttributes:(id)attributes forTextRange:(id)range;
- (void)addTemporaryAttribute:(id)attribute value:(id)value forTextRange:(id)range;
- (void)removeTemporaryAttribute:(id)attribute forTextRange:(id)range;
- (void)invalidateTemporaryAttributesForTextRange:(id)range;
- (BOOL)isCountableDataSource;
- (id)baseLocation;
- (id)renderingAttributesForLink:(id)link atLocation:(id)location;
- (void)_fixSelectionAfterChangeInCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range changeInLength:(long long)length;
- (id)_selectionAndMarkedTextAttributesForLocation:(id)location inTextRange:(id)range effectiveTextRange:(out id *)range;
- (id)adjustedTextSelectionsForEditingContextFromTextSelections:(id)selections;
- (id)_textLayoutFragmentAtLocation:(id)location;
- (id)_textLineFragmentAtLocation:(id)location textLayoutFragment:(out id *)fragment rangeDelta:(out long long *)delta;
- (id)locationFromLocation:(id)location withOffset:(long long)offset;
- (long long)offsetFromLocation:(id)location toLocation:(id)location;
- (id)_textRangeForDoubleClickAtLocation:(id)location;
- (id)textRangeForSelectionGranularity:(long long)granularity enclosingLocation:(id)location;
- (id)_copyTextLineFragmentRangeForPoint:(struct CGPoint { double x0; double x1; })point inContainerAtLocation:(id)location pointPlacement:(out unsigned long long *)placement;
- (id)lineFragmentRangeForPoint:(struct CGPoint { double x0; double x1; })point inContainerAtLocation:(id)location;
- (unsigned long long)placementOfPoint:(struct CGPoint { double x0; double x1; })point inContainerAtLocation:(id)location;
- (void)enumerateContainerBoundariesFromLocation:(id)location reverse:(BOOL)reverse usingBlock:(id /* block */)block;
- (long long)textLayoutOrientationAtLocation:(id)location;
- (long long)baseWritingDirectionAtLocation:(id)location;
- (void)enumerateSubstringsFromLocation:(id)location options:(unsigned long long)options usingBlock:(id /* block */)block;
- (void)enumerateCaretOffsetsInLineFragmentAtLocation:(id)location usingBlock:(id /* block */)block;
- (void)enumerateViewportElementsFromLocation:(id)location options:(long long)options usingBlock:(id /* block */)block;
- (id)_textViewRespondingToSelector:(SEL)selector;
- (id)_textSelectionsFromTextView;
- (BOOL)_shouldDrawTextCorrectionMarkerWithType:(long long)type inRange:(id)range;
- (id)viewProviderForTextAttachment:(id)attachment location:(id)location;
- (void)setViewProvider:(id)provider forTextAttachment:(id)attachment location:(id)location;
- (id)_viewProviderForTextAttachment:(id)attachment parentView:(id)view location:(id)location textContainer:(id)container;
@end

#endif /* NSTextLayoutManager_h */
