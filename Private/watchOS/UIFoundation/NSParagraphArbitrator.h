//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef NSParagraphArbitrator_h
#define NSParagraphArbitrator_h
@import Foundation;

#include "NSParagraphStyle.h"
#include "_NSOptimalLineBreaker.h"

@class NSAttributedString, NSString;

@interface NSParagraphArbitrator : NSObject {
  /* instance variables */
  struct UBreakIterator * _breaker;
  NSString *_breakerString;
  NSString *_breakerLocale;
  unsigned long long _usesOptimalLayout;
  int _lineBreakStyle;
  BOOL _languageSupportsLineBreakStyle;
  BOOL _needsOptimalLayout;
  _NSOptimalLineBreaker *_optimalLineBreaker;
}

@property (retain) NSAttributedString *attributedString;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } paragraphRange;
@property struct __CTLine * paragraphLine;
@property (copy) id /* block */ lineWidth;
@property (copy) id /* block */ validateLineBreakContext;
@property unsigned long long lineBreakStrategy;
@property double hyphenationFactor;
@property BOOL hyphenatesAsLastResort;
@property long long typesetterBehavior;
@property BOOL textContainerIsSimple;
@property double textContainerWidth;
@property (copy) NSParagraphStyle *defaultParagraphStyle;
@property BOOL breaksLinesForInteractiveText;
@property struct _NSRange { unsigned long long x0; unsigned long long x1; } previousLineRange;
@property (copy) NSString *preferredLanguage;
@property (readonly) struct __CFStringTokenizer * tokenizer;
@property (readonly) BOOL mayCompressLines;
@property (readonly) NSString *debugString;

/* class methods */
+ (void)initialize;
+ (BOOL)_hyphenatesAsLastResort;
+ (id)paragraphArbitratorWithAttributedString:(id)string range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
+ (int)_lineBreakStyleForFont:(id)font;

/* instance methods */
- (BOOL)_shouldUseCFStringTokenizerForLineBreaks;
- (id)optimalLineBreaker;
- (id)initWithAttributedString:(id)string range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)init;
- (void)dealloc;
- (void)resetBreaker;
- (void)reset;
- (BOOL)_attributedStringOverridesLineBreakBeforeIndex:(id)index;
- (BOOL)prepareBreakIteratorForCharacterAtIndex:(unsigned long long)index;
- (BOOL)prepareTokenizerForPreferredLanguage:(id)language;
- (double)raggednessWithCharIndexAsLineBreak:(unsigned long long)break inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (struct { unsigned long long x0; unsigned long long x1; BOOL x2; })_firstFitLineBreakContextBeforeIndex:(unsigned long long)index lineFragmentWidth:(double)width range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (struct { unsigned long long x0; unsigned long long x1; BOOL x2; })_optimalLineBreakContextBeforeIndex:(unsigned long long)index lineFragmentWidth:(double)width range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)configureOptimalLineBreaker;
- (void)_computeOptimalLayout;
- (id)_preferredLanguageForCharacterAtIndex:(unsigned long long)index;
- (BOOL)_shouldUseOptimalLayout;
- (int)_lineBreakStyleForLastResortHyphenation:(BOOL)hyphenation;
- (int)_lineBreakStyle;
- (struct { unsigned long long x0; unsigned long long x1; BOOL x2; })lineBreakContextBeforeIndex:(unsigned long long)index lineFragmentWidth:(double)width range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (unsigned long long)adjustedLineBreakIndexForProposedIndex:(unsigned long long)index;
@end

#endif /* NSParagraphArbitrator_h */
