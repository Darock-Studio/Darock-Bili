//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 908.2.0.0.0
//
#ifndef NSStringDrawingTextStorage_h
#define NSStringDrawingTextStorage_h
@import Foundation;

#include "NSTextStorage.h"
#include "NSConcreteNotifyingMutableAttributedString.h"
#include "NSLayoutManager.h"
#include "NSLayoutManagerDelegate-Protocol.h"
#include "NSTextContainer.h"

@class CUICatalog, CUIStyleEffectConfiguration, NSString;

@interface NSStringDrawingTextStorage : NSTextStorage<NSLayoutManagerDelegate> {
  /* instance variables */
  NSConcreteNotifyingMutableAttributedString *_contents;
  NSLayoutManager *_layoutManager;
  NSTextContainer *_textContainer;
  double _baselineDelta;
  struct { unsigned int x :4 _typesetterBehavior; unsigned int x :1 _needToFlushCache; unsigned int x :1 _baselineMode; unsigned int x :1 _forceWordWrapping; unsigned int x :1 _usesSimpleTextEffects; unsigned int x :3 _applicationFrameworkContext; unsigned int x :1 _wrappedByCluster; unsigned int x :20 _reserved; } _sdflags;
  CUICatalog *_catalog;
  CUIStyleEffectConfiguration *_styleEffects;
}

@property (retain, nonatomic) CUICatalog *cuiCatalog;
@property (retain, nonatomic) CUIStyleEffectConfiguration *cuiStyleEffects;
@property (nonatomic) BOOL usesSimpleTextEffects;
@property double defaultTighteningFactor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)stringDrawingTextStorage;
+ (void)performLayoutOperation:(id /* block */)operation;
+ (void)_setHasCustomSettings:(BOOL)settings;
+ (BOOL)_hasCustomSettings;

/* instance methods */
- (id)layoutManager;
- (id)textContainer;
- (long long)typesetterBehavior;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })usedRectForTextContainer:(id)container;
- (void)_setBaselineDelta:(double)delta;
- (double)_baselineDelta;
- (void)_setBaselineMode:(BOOL)mode;
- (BOOL)_baselineMode;
- (void)_setApplicationFrameworkContext:(long long)context;
- (long long)_applicationFrameworkContext;
- (void)_setWrappedByCluster:(BOOL)cluster;
- (BOOL)_wrappedByCluster;
- (void)setGraphicsContext:(id)context;
- (BOOL)_usesSimpleTextEffects;
- (void)_setUsesSimpleTextEffects:(BOOL)effects;
- (BOOL)_forceWordWrapping;
- (void)_setForceWordWrapping:(BOOL)wrapping;
- (void)drawTextContainer:(id)container withRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect graphicsContext:(struct CGContext *)context baselineMode:(BOOL)mode scrollable:(BOOL)scrollable padding:(double)padding;
- (void)drawTextContainer:(id)container range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect graphicsContext:(struct CGContext *)context baselineMode:(BOOL)mode scrollable:(BOOL)scrollable padding:(double)padding;
- (struct CGPoint { double x0; double x1; })defaultTextContainerOriginForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)textContainerForAttributedString:(id)string;
- (id)textContainerForAttributedString:(id)string containerSize:(struct CGSize { double x0; double x1; })size lineFragmentPadding:(double)padding;
- (void)fontSetChanged;
- (BOOL)_isStringDrawingTextStorage;
- (BOOL)_shouldSetOriginalFontAttribute;
- (id)init;
- (void)dealloc;
- (void)processEditing;
- (unsigned long long)length;
- (id)string;
- (id)attributesAtIndex:(unsigned long long)index effectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (id)attribute:(id)attribute atIndex:(unsigned long long)index effectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (id)attribute:(id)attribute atIndex:(unsigned long long)index longestEffectiveRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withString:(id)string;
- (void)setAttributes:(id)attributes range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)replaceCharactersInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withAttributedString:(id)string;
- (void)addAttribute:(id)attribute value:(id)value range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
@end

#endif /* NSStringDrawingTextStorage_h */
