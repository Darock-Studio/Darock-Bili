//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1226.2.2.1.0
//
#ifndef PPEvent_h
#define PPEvent_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "PPCalendar.h"

@class CLLocation, EKObjectID, NSArray, NSDate, NSString, NSURL;

@interface PPEvent : NSObject<NSSecureCoding, NSCopying> {
  /* instance variables */
  NSArray *_backingPlists;
  unsigned long long _indexInBackingPlists;
}

@property (readonly, nonatomic) NSString *eventIdentifier;
@property (readonly, nonatomic) EKObjectID *objectID;
@property (readonly, nonatomic) NSString *title;
@property (readonly, nonatomic) NSString *location;
@property (readonly, nonatomic) PPCalendar *calendar;
@property (readonly, nonatomic) NSDate *startDate;
@property (readonly, nonatomic) NSDate *endDate;
@property (readonly, nonatomic) char availability;
@property (readonly, nonatomic) NSURL *externalURI;
@property (readonly, nonatomic) NSArray *attendees;
@property (readonly, nonatomic) NSString *organizerName;
@property (readonly, nonatomic) unsigned char eventFlags;
@property (readonly, nonatomic) NSString *notes;
@property (readonly, nonatomic) NSURL *url;
@property (readonly, nonatomic) NSString *structuredLocationTitle;
@property (readonly, nonatomic) NSString *structuredLocationAddress;
@property (readonly, nonatomic) CLLocation *structuredLocationCoordinates;
@property (readonly, nonatomic) unsigned char suggestedEventCategory;

/* class methods */
+ (id /* block */)deferredAllocationEventFromEKEvent:(id)ekevent;
+ (id)convertBatchOfEKEvents:(id)ekevents calendarInternPool:(id)pool;
+ (id)convertBatchOfEKEvents:(id)ekevents calendarInternPool:(id)pool interningSet:(id)set;
+ (BOOL)supportsSecureCoding;
+ (unsigned char)suggestedEventCategoryFromMetadata:(id)metadata;
+ (id)descriptionForSuggestedEventCategory:(unsigned char)category;

/* instance methods */
- (id)init;
- (id)initWithEKEvent:(id)ekevent calendarInternPool:(id)pool;
- (id)initWithEventIdentifier:(id)identifier objectID:(id)id title:(id)title location:(id)location calendar:(id)calendar startDate:(id)date endDate:(id)date availability:(char)availability externalURI:(id)uri attendees:(id)attendees organizerName:(id)name eventFlags:(unsigned char)flags notes:(id)notes url:(id)url structuredLocationTitle:(id)title structuredLocationAddress:(id)address structuredLocationCoordinates:(id)coordinates suggestedEventCategory:(unsigned char)category;
- (id)initWithEventIdentifier:(id)identifier objectID:(id)id title:(id)title location:(id)location calendar:(id)calendar startDate:(id)date endDate:(id)date availability:(char)availability externalURIString:(id)uristring attendees:(id)attendees organizerName:(id)name eventFlags:(unsigned char)flags notes:(id)notes urlString:(id)string structuredLocationTitle:(id)title structuredLocationAddress:(id)address structuredLocationCoordinates:(id)coordinates suggestedEventCategory:(unsigned char)category;
- (id)initWithPlist:(id)plist calendar:(id)calendar;
- (id)initWithIndex:(unsigned long long)index inBackingPlists:(id)plists calendar:(id)calendar;
- (BOOL)representsUnscheduledFreeTime;
- (BOOL)organizerIsCurrentUser;
- (long long)compareStartDateWithEvent:(id)event;
- (id)description;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (BOOL)isStructuredEvent;
- (BOOL)isNLEvent;
- (id)plist;
@end

#endif /* PPEvent_h */
