//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 64562.3.1.1.0
//
#ifndef DTOSLogLoader_h
#define DTOSLogLoader_h
@import Foundation;

#include "XRMobileAgentQueueStop.h"
#include "DTOSLogLoaderConfiguration.h"
#include "DTOSLogLoaderDelegate-Protocol.h"
#include "DTOSLogLoaderFetchTicket.h"

@class NSDate, NSError, NSMutableArray, NSMutableData, NSMutableDictionary, OSLogEventLiveStore, OSLogEventLiveStream, OSLogEventStore, OSLogEventStreamBase, XRIntKeyedDictionary;
@protocol XRMobileAgent<DTOSLogLoaderVisitor, {unique_ptr<DTOSLogTableLoader, std::default_delete<DTOSLogTableLoader>>="__ptr_"{__compressed_pair<DTOSLogTableLoader *, std::default_delete<DTOSLogTableLoader>>="__value_"^{DTOSLogTableLoader}}};

@interface DTOSLogLoader : XRMobileAgentQueueStop {
  /* instance variables */
  OSLogEventStreamBase *_deserializedEventStream;
  BOOL _deserializedEventStreamIsActivated;
  DTOSLogLoaderConfiguration *_configuration;
  OSLogEventStore *_loggedEventStore;
  OSLogEventStreamBase *_loggedStream;
  OSLogEventLiveStore *_liveEventStore;
  OSLogEventLiveStream *_liveStream;
  NSDate *_startTime;
  NSDate *_endTime;
  unsigned long long _slackInMachTimeUnits;
  XRMobileAgent<DTOSLogLoaderVisitor> *_agentWaitingForStop;
  DTOSLogLoaderFetchTicket *_lastFetchTicket;
  struct _opaque_pthread_cond_t { long long __sig; char x[40] __opaque; } _stateChanged;
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _stateLock;
  unsigned long long _machTimeAdjustment;
  struct unique_ptr<DTOSLogTableLoader, std::default_delete<DTOSLogTableLoader>> { struct __compressed_pair<DTOSLogTableLoader *, std::default_delete<DTOSLogTableLoader>> { struct DTOSLogTableLoader *__value_; } __ptr_; } _tableLoader;
  struct DTStateActionEncoder { int _state; struct OutputTape { unsigned short *start; unsigned short *head; unsigned short *end; } _tape; char *_pushBufferStart; char *_pushBufferEnd; unsigned long long _pushBufferBitOffset; unsigned long long _backgroundPatternStart; struct StackReference { unsigned short _generation; unsigned short _reference; } _topOfStackRef; unsigned char _background; int _stateWhenTapeRanOut; unsigned int _pushBufferSizeToXmit; } _encoder;
  unsigned long long _lastMachTime;
  XRMobileAgent<DTOSLogLoaderVisitor> *_agentWaitingForEvents;
  NSMutableData *_workingBuffer;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _deviceSessionRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _defaultLevelRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _infoLevelRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _debugLevelRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _errorLevelRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _faultLevelRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _beginRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _emitRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _endRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _threadScopeRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _processScopeRef;
  struct StackReference { unsigned short _generation; unsigned short _reference; } _systemScopeRef;
  XRIntKeyedDictionary *_pushedProcessesByPid;
  XRIntKeyedDictionary *_pushedThreadsByTid;
  NSMutableDictionary *_repeatedStrings;
  NSMutableDictionary *_repeatedUUIDs;
  NSMutableDictionary *_repeatedPlaceholders;
  NSMutableArray *_argReferenceConstants;
  int _rowsSent;
  unsigned int _lostEventAccumulator;
  BOOL _workingBufferFull;
  BOOL _workingBufferCanBeReplaced;
  BOOL _didHandleRecord;
  BOOL _ignoreNextRecord;
  BOOL _calledForHelp;
  BOOL _isLastBuffer;
  BOOL _running;
  XRIntKeyedDictionary *_pidToExecNameMapping;
}

@property (readonly, nonatomic) NSError *failureReason;
@property (weak, nonatomic) NSObject<DTOSLogLoaderDelegate> *delegate;

/* class methods */
+ (id)heartbeatPredicate;
+ (void)heartbeat;

/* instance methods */
- (id)init;
- (void)dealloc;
- (BOOL)_holdReceivedAgent:(id)agent ticket:(id)ticket;
- (id)ticketToStartStream:(id)stream;
- (id)ticketToPrepare:(id)prepare configuration:(id)configuration;
- (id)ticketToFetchData:(id)data window:(double)window;
- (id)ticketToStopStream:(id)stream;
- (void)_prepareAgentToExecute:(id)execute withTicket:(id)ticket;
- (void)_escortAgentToExit:(id)exit withTicket:(id)ticket;
- (id)_stackReferenceForRepeatedString:(id)string;
- (id)_stackReferenceForRepeatedUUID:(id)uuid;
- (void)_handleRecord:(id)record;
- (void)_performResetOnOutputStream;
- (void)_setupCommonStreamParameters:(id)parameters;
- (id)_setupLoggedStreamForNextChunk:(id)chunk;
- (void)_setupLiveStream:(id)stream;
- (void)invalidate;
@end

#endif /* DTOSLogLoader_h */
