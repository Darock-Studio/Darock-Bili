//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.8.1.0.0
//
#ifndef SIRINLUINTERNALComponentOverride_h
#define SIRINLUINTERNALComponentOverride_h
@import Foundation;

#include "PBCodable.h"
#include "NSCopying-Protocol.h"
#include "SIRINLUINTERNALOverrideValue.h"

@class NSData, NSMutableArray, NSString;

@interface SIRINLUINTERNALComponentOverride : PBCodable<NSCopying> {
  /* instance variables */
  struct { unsigned int x :1 creationTimestampMsSinceUnixEpoch; unsigned int x :1 overrideNamespace; unsigned int x :1 enabled; } _has;
}

@property (readonly, nonatomic) BOOL hasIdA;
@property (retain, nonatomic) NSString *idA;
@property (nonatomic) BOOL hasOverrideNamespace;
@property (nonatomic) int overrideNamespace;
@property (nonatomic) BOOL hasEnabled;
@property (nonatomic) BOOL enabled;
@property (nonatomic) BOOL hasCreationTimestampMsSinceUnixEpoch;
@property (nonatomic) unsigned long long creationTimestampMsSinceUnixEpoch;
@property (readonly, nonatomic) BOOL hasValue;
@property (retain, nonatomic) SIRINLUINTERNALOverrideValue *value;
@property (retain, nonatomic) NSMutableArray *nluRequestRules;
@property (readonly, nonatomic) BOOL hasSerializedValue;
@property (retain, nonatomic) NSData *serializedValue;

/* class methods */
+ (Class)nluRequestRulesType;

/* instance methods */
- (id)overrideNamespaceAsString:(int)string;
- (int)StringAsOverrideNamespace:(id)namespace;
- (void)clearNluRequestRules;
- (void)addNluRequestRules:(id)rules;
- (unsigned long long)nluRequestRulesCount;
- (id)nluRequestRulesAtIndex:(unsigned long long)index;
- (id)description;
- (id)dictionaryRepresentation;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (void)copyTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)mergeFrom:(id)from;
@end

#endif /* SIRINLUINTERNALComponentOverride_h */
