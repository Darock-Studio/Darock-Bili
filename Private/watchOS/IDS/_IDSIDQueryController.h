//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef _IDSIDQueryController_h
#define _IDSIDQueryController_h
@import Foundation;

#include "IDSDaemonListenerProtocol-Protocol.h"

@class NSMapTable, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface _IDSIDQueryController : NSObject<IDSDaemonListenerProtocol> {
  /* instance variables */
  NSString *_listenerGUID;
  NSMutableDictionary *_listeners;
  NSMutableDictionary *_idStatusCache;
  NSMutableDictionary *_transactionIDToBlockMap;
  NSObject<OS_xpc_object> *_connection;
  NSObject<OS_dispatch_queue> *_connectionQueue;
  NSObject<OS_dispatch_queue> *_queue;
  NSString *_serviceToken;
  NSMapTable *_delegateToInfo;
  NSMutableDictionary *_listenerIDToServicesMap;
  id _delegateContext;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)_createXPCConnectionOnQueue:(id)queue;

/* instance methods */
- (void)_disconnectFromQueryService;
- (void)_requestCacheForService:(id)service completionBlock:(id /* block */)block;
- (void)_requestCachedStatusForDestinations:(id)destinations fromID:(id)id service:(id)service waitForReply:(BOOL)reply respectExpiry:(BOOL)expiry listenerID:(id)id completionBlock:(id /* block */)block;
- (void)_requestStatusForDestinations:(id)destinations fromID:(id)id service:(id)service waitForReply:(BOOL)reply forceRefresh:(BOOL)refresh bypassLimit:(BOOL)limit listenerID:(id)id completionBlock:(id /* block */)block;
- (void)_requestRemoteDevicesForDestination:(id)destination fromID:(id)id service:(id)service listenerID:(id)id waitForReply:(BOOL)reply completionBlock:(id /* block */)block;
- (void)_requestIDInfoForDestinations:(id)destinations fromID:(id)id service:(id)service infoTypes:(unsigned long long)types options:(id)options listenerID:(id)id queue:(id)queue completionBlock:(id /* block */)block;
- (id)__sendMessage:(id)message queue:(id)queue reply:(id /* block */)reply failBlock:(id /* block */)block waitForReply:(BOOL)reply;
- (void)___oldDealloc;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)removeDelegate:(id)delegate;
- (void)_callDelegatesWithBlock:(id /* block */)block;
- (void)_connect;
- (void)IDQueryCompletedWithFromURI:(id)uri idStatusUpdates:(id)updates service:(id)service success:(BOOL)success error:(id)error;
- (void)daemonDisconnected;
- (void)addListenerID:(id)id forService:(id)service;
- (BOOL)removeListenerID:(id)id forService:(id)service;
- (id)init;
- (id)initWithDelegateContext:(id)context queueController:(id)controller;
- (void)dealloc;
- (void)setFromID:(id)id;
- (BOOL)_isListenerWithID:(id)id listeningToService:(id)service;
- (id)_cacheForService:(id)service;
- (id)_cachedStatusForDestination:(id)destination service:(id)service;
- (void)_updateCacheWithDictionary:(id)dictionary service:(id)service;
- (void)_purgeIDStatusCacheAfter:(double)after;
- (void)_purgeIDStatusCache;
- (void)_callDelegatesWithBlock:(id /* block */)block delegateMap:(id)map;
- (id)_delegateMapForListenerID:(id)id service:(id)service;
- (void)_callDelegatesForService:(id)service destinationToVerifierResult:(id)result;
- (void)_setCurrentIDStatus:(long long)idstatus forDestination:(id)destination service:(id)service;
- (void)_idStatusForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id allowRenew:(BOOL)renew respectExpiry:(BOOL)expiry waitForReply:(BOOL)reply forceRefresh:(BOOL)refresh bypassLimit:(BOOL)limit completionBlock:(id /* block */)block;
- (BOOL)_refreshIDStatusForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id allowRefresh:(BOOL)refresh respectExpiry:(BOOL)expiry waitForReply:(BOOL)reply forceRefresh:(BOOL)refresh bypassLimit:(BOOL)limit queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)_sync_refreshIDStatusForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id completionBlock:(id /* block */)block;
- (BOOL)_sync_currentIDStatusForDestinations:(id)destinations service:(id)service preferredFromID:(id)id respectExpiry:(BOOL)expiry listenerID:(id)id completionBlock:(id /* block */)block;
- (BOOL)_sync_currentRemoteDevicesForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id completionBlock:(id /* block */)block;
- (BOOL)refreshIDStatusForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id forceRefresh:(BOOL)refresh queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)refreshIDStatusForDestination:(id)destination service:(id)service preferredFromID:(id)id listenerID:(id)id queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)requiredIDStatusForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)requiredIDStatusForDestination:(id)destination service:(id)service preferredFromID:(id)id listenerID:(id)id queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)currentIDStatusForDestinations:(id)destinations service:(id)service preferredFromID:(id)id respectExpiry:(BOOL)expiry listenerID:(id)id queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)currentIDStatusForDestination:(id)destination service:(id)service preferredFromID:(id)id respectExpiry:(BOOL)expiry listenerID:(id)id queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)_currentRemoteDevicesForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id queue:(id)queue waitForReply:(BOOL)reply completionBlock:(id /* block */)block completionBlockWithError:(id /* block */)error;
- (BOOL)currentRemoteDevicesForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)currentRemoteDevicesForDestinations:(id)destinations service:(id)service preferredFromID:(id)id listenerID:(id)id queue:(id)queue completionBlockWithError:(id /* block */)error;
- (BOOL)idInfoForDestinations:(id)destinations service:(id)service preferredFromID:(id)id infoTypes:(unsigned long long)types options:(id)options listenerID:(id)id queue:(id)queue completionBlock:(id /* block */)block;
- (BOOL)_hasCacheForService:(id)service;
- (long long)_currentCachedIDStatusForDestination:(id)destination service:(id)service listenerID:(id)id;
- (BOOL)_warmupQueryCacheForService:(id)service;
- (BOOL)_flushQueryCacheForService:(id)service;
- (void)addDelegate:(id)delegate forService:(id)service listenerID:(id)id queue:(id)queue;
- (void)removeDelegate:(id)delegate forService:(id)service listenerID:(id)id;
- (void)ktPeerVerificationResultsUpdated:(id)updated forService:(id)service;
@end

#endif /* _IDSIDQueryController_h */
