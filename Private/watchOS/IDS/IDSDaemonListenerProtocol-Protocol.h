//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef IDSDaemonListenerProtocol_Protocol_h
#define IDSDaemonListenerProtocol_Protocol_h
@import Foundation;

@protocol IDSDaemonListenerProtocol <NSObject>
@optional
/* instance methods */
- (void)connectionComplete:(BOOL)complete withResponse:(id)response;
- (void)setupCompleteWithInfo:(id)info;
- (void)daemonConnected;
- (void)daemonDisconnected;
- (void)receivedMetadataForDirectMessaging:(id)messaging;
- (void)opportunisticDataReceived:(id)received withIdentifier:(id)identifier fromURI:(id)uri context:(id)context;
- (void)messageReceived:(id)received withGUID:(id)guid withPayload:(id)payload forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)dataReceived:(id)received withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)accessoryDataReceived:(id)received withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)accessoryReportMessageReceived:(id)received accessoryID:(id)id controllerID:(id)id withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)incomingInvitation:(id)invitation withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)incomingInvitationUpdate:(id)update withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)messageIdentifier:(id)identifier alternateCallbackID:(id)id forAccount:(id)account updatedWithResponseCode:(long long)code error:(id)error lastCall:(BOOL)call context:(id)context;
- (void)messageIdentifier:(id)identifier alternateCallbackID:(id)id forAccount:(id)account willSendToDestinations:(id)destinations skippedDestinations:(id)destinations registrationPropertyToDestinations:(id)destinations;
- (void)didCancelMessageWithSuccess:(BOOL)success onAccount:(id)account error:(id)error identifier:(id)identifier;
- (void)didSendOpportunisticDataWithIdentifier:(id)identifier onAccount:(id)account toIDs:(id)ids;
- (void)messageIdentifier:(id)identifier forTopic:(id)topic toURI:(id)uri fromURI:(id)uri hasBeenDeliveredWithContext:(id)context;
- (void)protobufReceived:(id)received withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)pendingIncomingMessageWithGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)pendingResourceWithMetadata:(id)metadata guid:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)OTRTestCallback:(id)callback time:(double)time error:(id)error;
- (void)checkTransportLogWithReason:(long long)reason;
- (void)accountAdded:(id)added;
- (void)accountRemoved:(id)removed;
- (void)accountUpdated:(id)updated;
- (void)accountsChanged:(id)changed forTopic:(id)topic;
- (void)accountEnabled:(id)enabled onService:(id)service;
- (void)accountDisabled:(id)disabled onService:(id)service;
- (void)setupCompleteForAccount:(id)account transactionID:(id)id setupError:(id)error;
- (void)account:(id)account accountInfoChanged:(id)changed;
- (void)account:(id)account registrationStatusInfoChanged:(id)changed;
- (void)account:(id)account aliasesChanged:(id)changed;
- (void)account:(id)account vettedAliasesChanged:(id)changed;
- (void)account:(id)account profileChanged:(id)changed;
- (void)account:(id)account loginChanged:(id)changed;
- (void)account:(id)account displayNameChanged:(id)changed;
- (void)account:(id)account pseudonymsChanged:(id)changed;
- (void)registrationFailedForAccount:(id)account needsDeletion:(id)deletion;
- (void)refreshRegistrationForAccount:(id)account;
- (void)account:(id)account dependentDevicesUpdated:(id)updated;
- (void)account:(id)account dependentDevicesUpdatedUponReconnect:(id)reconnect;
- (void)account:(id)account localDeviceAdded:(id)added;
- (void)account:(id)account localDeviceRemoved:(id)removed;
- (void)service:(id)service tinkerDeviceAdded:(id)added;
- (void)service:(id)service tinkerDeviceRemoved:(id)removed;
- (void)service:(id)service tinkerDeviceUpdated:(id)updated;
- (void)service:(id)service linkedDevicesUpdated:(id)updated;
- (void)service:(id)service familyInfoUpdated:(id)updated;
- (void)didAuthenticatePhoneWithAuthenticationCertificateData:(id)data requestUUID:(id)uuid error:(id)error;
- (void)didGeneratePhoneAuthenticationSignature:(id)signature nonce:(id)nonce certificates:(id)certificates labelIDs:(id)ids inputData:(id)data requestUUID:(id)uuid error:(id)error;
- (void)didRequestCarrierTokenString:(id)string requestUUID:(id)uuid error:(id)error;
- (void)didSetPhoneUserSubscriptionSource:(id)source requestUUID:(id)uuid error:(id)error;
- (void)didFetchPhoneUserSubscriptionSource:(id)source requestUUID:(id)uuid error:(id)error;
- (void)IDQueryCompletedWithFromURI:(id)uri idStatusUpdates:(id)updates service:(id)service success:(BOOL)success error:(id)error;
- (void)didFlushCacheForService:(id)service remoteURI:(id)uri fromURI:(id)uri guid:(id)guid;
- (void)didFlushCacheFromKTPeerUpdateForService:(id)service peerURI:(id)uri;
- (void)sessionInvitationReceivedWithPayload:(id)payload forTopic:(id)topic sessionID:(id)id toIdentifier:(id)identifier fromID:(id)id transportType:(id)type;
- (void)sessionAcceptReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionDeclineReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionCancelReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionMessageReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionEndReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionStarted:(id)started;
- (void)sessionEnded:(id)ended withReason:(unsigned int)reason error:(id)error;
- (void)groupSessionDidTerminate:(id)terminate;
- (void)groupSessionEnded:(id)ended withReason:(unsigned int)reason error:(id)error;
- (void)session:(id)session invitationSentToTokens:(id)tokens shouldBreakBeforeMake:(BOOL)make;
- (void)session:(id)session audioEnabled:(BOOL)enabled;
- (void)session:(id)session muted:(BOOL)muted;
- (void)session:(id)session didReceiveReport:(id)report;
- (void)sessionDidJoinGroup:(id)group participantsInfo:(id)info error:(id)error;
- (void)sessionDidJoinGroup:(id)group participantInfo:(id)info error:(id)error;
- (void)sessionDidJoinGroup:(id)group participantUpdateDictionary:(id)dictionary error:(id)error;
- (void)sessionDidLeaveGroup:(id)group error:(id)error;
- (void)session:(id)session participantDidJoinGroupWithInfo:(id)info;
- (void)session:(id)session participantDidLeaveGroupWithInfo:(id)info;
- (void)session:(id)session didReceiveActiveParticipants:(id)participants success:(BOOL)success;
- (void)session:(id)session didReceiveActiveLightweightParticipants:(id)participants success:(BOOL)success;
- (void)session:(id)session didReceiveBlockedParticipantIDs:(id)ids withCode:(unsigned int)code withType:(unsigned short)type isTruncated:(BOOL)truncated;
- (void)session:(id)session didReceiveQueryBlockedParticipantIDs:(id)ids withCode:(unsigned int)code isTruncated:(BOOL)truncated;
- (void)session:(id)session didRemoveParticipantIDs:(id)ids withCode:(unsigned int)code isTruncated:(BOOL)truncated;
- (void)sessionDidReceiveParticipantUpgrade:(id)upgrade participantType:(unsigned short)type error:(id)error;
- (void)session:(id)session didReceiveParticipantIDs:(id)ids withCode:(unsigned int)code managementType:(unsigned short)type;
- (void)participantUpdatedForSession:(id)session;
- (void)session:(id)session didRegisterPluginAllocationInfo:(id)info;
- (void)session:(id)session didUnregisterPluginAllocationInfo:(id)info;
- (void)session:(id)session didReceiveKeyMaterial:(id)material;
- (void)session:(id)session rejectedKeyRecoveryRequestFromURI:(id)uri reason:(unsigned int)reason;
- (void)session:(id)session didReceiveURIsForParticipantIDs:(id)ids withRequestID:(id)id;
- (void)session:(id)session shouldInvalidateKeyMaterialByKeyIndexes:(id)indexes;
- (void)session:(id)session hasOutdatedSKI:(id)ski;
- (void)session:(id)session didCreateParticipantIDAlias:(unsigned long long)idalias forParticipantID:(unsigned long long)id salt:(id)salt;
- (void)session:(id)session didReceiveParticipantID:(unsigned long long)id forParticipantIDAlias:(unsigned long long)idalias salt:(id)salt;
- (void)session:(id)session didReceiveDataBlob:(id)blob forParticipant:(id)participant;
- (void)session:(id)session didReceiveData:(id)data dataType:(unsigned short)type forParticipant:(id)participant;
- (void)session:(id)session didReceiveServerErrorCode:(unsigned int)code;
- (void)receivedGroupSessionParticipantUpdate:(id)update forTopic:(id)topic toIdentifier:(id)identifier fromID:(id)id context:(id)context;
- (void)receivedGroupSessionParticipantDataUpdate:(id)update forTopic:(id)topic toIdentifier:(id)identifier fromID:(id)id;
- (void)allocationDone:(id)done sessionInfo:(id)info;
- (void)openedSocket:(id)socket forHandlerID:(id)id error:(id)error;
- (void)xpcObject:(id)object objectContext:(id)context;
- (void)deliveryStats:(id)stats;
- (void)device:(id)device nsuuidChanged:(id)changed;
- (void)continuityDidUpdateStateToState:(long long)state;
- (void)continuityDidLosePeer:(id)peer;
- (void)continuityDidLosePeer:(id)peer forType:(long long)type;
- (void)continuityDidStartTrackingPeer:(id)peer error:(id)error;
- (void)continuityDidStartTrackingPeer:(id)peer forType:(long long)type error:(id)error;
- (void)continuityDidStopTrackingPeer:(id)peer;
- (void)continuityDidStopTrackingPeer:(id)peer forType:(long long)type;
- (void)continuityDidStartAdvertisingOfType:(long long)type;
- (void)continuityDidStopAdvertisingOfType:(long long)type;
- (void)continuityDidStopAdvertisingOfType:(long long)type withError:(id)error;
- (void)continuityDidFailToStartAdvertisingOfType:(long long)type withError:(id)error;
- (void)continuityDidStartScanningForType:(long long)type;
- (void)continuityDidStopScanningForType:(long long)type;
- (void)continuityDidFailToStartScanningForType:(long long)type withError:(id)error;
- (void)continuityDidDiscoverType:(long long)type withData:(id)data fromPeer:(id)peer;
- (void)continuityDidDiscoverPeerWithData:(id)data fromPeer:(id)peer;
- (void)continuityDidConnectToPeer:(id)peer withError:(id)error;
- (void)continuityDidDisconnectFromPeer:(id)peer withError:(id)error;
- (void)serviceUserIDs:(id)ids error:(id)error;
- (void)adminAccessTokens:(id)tokens error:(id)error;
- (void)consentTokens:(id)tokens error:(id)error;
- (void)userAccessTokens:(id)tokens error:(id)error;
- (void)refreshUserAccessTokens:(id)tokens error:(id)error;
- (void)deviceIdentifierDidChange:(id)change;
- (void)didSwitchActivePairedDevice:(id)device;
- (void)didSwitchActivePairedDevice:(id)device forService:(id)service wasHandled:(BOOL *)handled;
- (void)deactivatePairedDevices;
- (void)localPairingResponseForRequestID:(id)id withError:(id)error;
- (void)localPairingResponseForRequestID:(id)id withError:(id)error pairedDevices:(id)devices;
- (void)applecareResponseForRequestID:(id)id withError:(id)error;
- (void)registrationControlResponseForRequestID:(id)id withError:(id)error;
- (void)registrationControlStatusResponseForRequestID:(long long)id requestID:(id)id withError:(id)error;
- (void)iMessageReportSpamCheckUnknownResponseForRequestID:(id)id status:(long long)status abusive:(BOOL)abusive delay:(double)delay withError:(id)error;
- (void)finishedProvisioningPseudonym:(id)pseudonym success:(BOOL)success error:(id)error forRequestUUID:(id)uuid;
- (void)finishedRenewingPseudonym:(id)pseudonym success:(BOOL)success error:(id)error requestUUID:(id)uuid;
- (void)finishedRevokingPseudonymWithSuccess:(BOOL)success error:(id)error requestUUID:(id)uuid;
- (void)finishedSigningForRequest:(id)request signedData:(id)data error:(id)error;
- (void)finishedVerifyingSignedDataForRequest:(id)request success:(BOOL)success error:(id)error;
- (void)finishedReportingRequestUUID:(id)uuid withError:(id)error;
- (void)emptyXPCReply;
- (void)ktPeerVerificationResultsUpdated:(id)updated forService:(id)service;
@end

#endif /* IDSDaemonListenerProtocol_Protocol_h */
