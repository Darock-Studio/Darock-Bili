//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef IDSDaemonProtocol_Protocol_h
#define IDSDaemonProtocol_Protocol_h
@import Foundation;

@protocol IDSDaemonProtocol <NSObject>
@optional
/* instance methods */
- (void)setupAccountWithLoginID:(id)id serviceName:(id)name accountType:(int)type accountConfig:(id)config authToken:(id)token password:(id)password transactionID:(id)id;
- (void)addAccountWithLoginID:(id)id serviceName:(id)name uniqueID:(id)id accountType:(int)type accountInfo:(id)info;
- (void)_removeAccount:(id)account;
- (void)_removeAndDeregisterAccount:(id)account;
- (void)updateAccount:(id)account withAccountInfo:(id)info;
- (void)enableAccount:(id)account;
- (void)disableAccount:(id)account;
- (void)forceDisableAccount:(id)account;
- (void)authTokenChanged:(id)changed forAccount:(id)account;
- (void)passwordChanged:(id)changed forAccount:(id)account;
- (void)authenticationChangedForAccount:(id)account;
- (void)authenticateAccount:(id)account;
- (void)passwordUpdatedForAccount:(id)account;
- (void)updateAuthorizationCredentials:(id)credentials token:(id)token forAccount:(id)account;
- (void)validateProfileForAccount:(id)account;
- (void)addAliases:(id)aliases toAccount:(id)account;
- (void)removeAliases:(id)aliases fromAccount:(id)account;
- (void)validateAliases:(id)aliases forAccount:(id)account;
- (void)unvalidateAliases:(id)aliases forAccount:(id)account;
- (void)provisionPseudonymForURI:(id)uri onAccount:(id)account withProperties:(id)properties requestProperties:(id)properties requestUUID:(id)uuid;
- (void)renewPseudonym:(id)pseudonym onAccount:(id)account forUpdatedExpiryEpoch:(double)epoch requestProperties:(id)properties requestUUID:(id)uuid;
- (void)revokePseudonym:(id)pseudonym onAccount:(id)account requestProperties:(id)properties requestUUID:(id)uuid;
- (void)signData:(id)data withAlgorithm:(long long)algorithm onService:(id)service options:(id)options requestUUID:(id)uuid;
- (void)verifySignedData:(id)data matchesData:(id)data forAlgorithm:(long long)algorithm onService:(id)service tokenUri:(id)uri options:(id)options requestUUID:(id)uuid;
- (void)registerAccount:(id)account;
- (void)unregisterAccount:(id)account;
- (void)forceRemoveAccount:(id)account;
- (void)_reregisterAndReidentify:(id)reidentify account:(id)account;
- (void)deactivateAndPurgeIdentifyForAccount:(id)account;
- (void)hardDeregister;
- (void)triggerFinalDeregister;
- (void)iCloudSignInHackWithUserName:(id)name password:(id)password;
- (void)iCloudSignOutHack;
- (void)iCloudSignInWithUserName:(id)name authToken:(id)token password:(id)password accountInfo:(id)info accountStatus:(id)status handles:(id)handles;
- (void)iCloudUpdateForUserName:(id)name accountInfo:(id)info;
- (void)iCloudModifyForUserName:(id)name;
- (void)iCloudSignOut;
- (void)iTunesSignInWithUserName:(id)name authToken:(id)token password:(id)password accountInfo:(id)info accountStatus:(id)status handles:(id)handles;
- (void)iTunesSignOut;
- (void)gameCenterSignInWithUserName:(id)name authToken:(id)token password:(id)password accountInfo:(id)info accountStatus:(id)status handles:(id)handles;
- (void)gameCenterSignOut;
- (void)gameCenterModifyForUserName:(id)name;
- (void)updateUserWithOldUserName:(id)name newUserName:(id)name;
- (void)kickGetDependentForAccount:(id)account;
- (void)reRegisterWithUserID:(id)id action:(id)action service:(id)service;
- (void)repairAccounts;
- (void)getRegisteredIdentities;
- (void)setPassword:(id)password forUsername:(id)username onService:(id)service;
- (void)authenticatePhoneWithRequestUUID:(id)uuid;
- (void)generatePhoneAuthenticationSignatureOverData:(id)data withRequestUUID:(id)uuid;
- (void)requestCarrierTokenForSubscriptionSource:(id)source IMEI:(id)imei carrierNonce:(id)nonce requestUUID:(id)uuid;
- (void)setPhoneUserSubscriptionSource:(id)source withRequestUUID:(id)uuid;
- (void)fetchPhoneUserSubscriptionSourceWithRequestUUID:(id)uuid;
- (void)startLocalSetup;
- (void)stopLocalSetup;
- (void)localSetupUnpair;
- (void)localSetupUnpairStart;
- (void)localSetupCompleted;
- (void)addPairedDevice:(id)device;
- (void)connectPairedDevice:(id)device;
- (void)deletePairedDevice:(id)device;
- (void)getDeliveryStats;
- (void)initialLocalSyncStartedForServices:(id)services;
- (void)initialLocalSyncCompletedForServices:(id)services;
- (void)setAllowedTrafficClasses:(id)classes;
- (void)dropAllMessagesWithoutAnyAllowedClassifier;
- (void)reunionSyncStartedForServices:(id)services requestID:(id)id;
- (void)reunionSyncCompletedForServices:(id)services requestID:(id)id;
- (void)clearIDSState;
- (void)updateSubServices:(id)services forService:(id)service deviceUniqueID:(id)id;
- (void)setPairedDeviceInfo:(id)info;
- (void)incomingAccountSyncMessage:(id)message;
- (void)regenerateRegisteredIdentity;
- (void)sendOpportunisticData:(id)data onService:(id)service usingAccountWithUniqueID:(id)id withIdentifier:(id)identifier options:(id)options;
- (void)cancelOpportunisticDataOnService:(id)service withIdentifier:(id)identifier;
- (void)sendCertifiedDeliveryReceipt:(id)receipt serviceName:(id)name;
- (void)sendMessageWithSendParameters:(id)parameters;
- (void)cancelMessageWithQueueOneIdentifier:(id)identifier fromID:(id)id service:(id)service accountUniqueID:(id)id messageIdentifier:(id)identifier;
- (void)cancelItemWithIdentifier:(id)identifier service:(id)service;
- (void)getProgressUpdateForIdentifier:(id)identifier service:(id)service;
- (void)sendPersistedFile:(id)file userInfo:(id)info toDestinations:(id)destinations usingAccountWithUniqueID:(id)id identifier:(id)identifier;
- (void)sendServerMessage:(id)message command:(id)command usingAccountWithUniqueID:(id)id;
- (void)setPreferInfraWiFi:(BOOL)fi service:(id)service;
- (void)setLinkPreferences:(id)preferences service:(id)service;
- (void)startOTRTest:(id)otrtest priority:(long long)priority;
- (void)testCloudQRConnection:(id)qrconnection;
- (void)failedDecryptingMessage:(id)message reason:(long long)reason forGroupID:(id)id onService:(id)service;
- (void)acknowledgeOutgoingMessageWithGUID:(id)guid alternateCallbackID:(id)id forAccountWithUniqueID:(id)id;
- (void)acknowledgeMessageWithGUID:(id)guid forAccountWithUniqueID:(id)id broadcastTime:(id)time messageSize:(id)size priority:(id)priority;
- (void)acknowledgeMessageWithStorageGUID:(id)guid realGUID:(id)guid forAccountWithUniqueID:(id)id broadcastTime:(id)time messageSize:(id)size priority:(id)priority broadcastID:(long long)id connectionType:(long long)type;
- (void)sendAppAckWithGUID:(id)guid toDestination:(id)destination forAccountWithUniqueID:(id)id connectionType:(long long)type;
- (void)setListenerServices:(id)services commands:(id)commands capabilities:(unsigned int)capabilities;
- (void)registerForNotificationsOnServices:(id)services;
- (void)setWakingPushPriority:(long long)priority forTopic:(id)topic;
- (void)xpcObject:(id)object objectContext:(id)context;
- (void)openSocketWithOptions:(id)options;
- (void)closeSocketWithOptions:(id)options;
- (void)setNSUUID:(id)nsuuid onDeviceWithUniqueID:(id)id forService:(id)service;
- (void)setupNewSessionWithConfiguration:(id)configuration;
- (void)cleanupSession:(id)session;
- (void)cleanupSessionWithInstanceID:(id)id;
- (void)sendInvitation:(id)invitation withOptions:(id)options;
- (void)sendInvitation:(id)invitation withData:(id)data declineOnError:(BOOL)error;
- (void)cancelInvitation:(id)invitation;
- (void)cancelInvitation:(id)invitation withData:(id)data;
- (void)cancelInvitation:(id)invitation withRemoteEndedReasonOverride:(unsigned int)override;
- (void)acceptInvitation:(id)invitation;
- (void)acceptInvitation:(id)invitation withData:(id)data;
- (void)declineInvitation:(id)invitation;
- (void)declineInvitation:(id)invitation withData:(id)data;
- (void)reconnectSessionWithUniqueID:(id)id;
- (void)endSession:(id)session;
- (void)endSession:(id)session withData:(id)data;
- (void)sendSessionMessage:(id)message toDestinations:(id)destinations forSessionWithUniqueID:(id)id;
- (void)setAudioEnabled:(BOOL)enabled forSessionWithUniqueID:(id)id;
- (void)setMuted:(BOOL)muted forSessionWithUniqueID:(id)id;
- (void)setPreferences:(id)preferences forSessionWithUniqueID:(id)id;
- (void)setInviteTimetout:(long long)timetout forSessionWithUniqueID:(id)id;
- (void)acknowledgeSessionID:(id)id clientID:(id)id;
- (void)sendAllocationRequest:(id)request options:(id)options;
- (void)enableP2PlinksForSession:(id)session;
- (void)setForceTCPFallbackOnWiFiUsingReinitiate:(BOOL)reinitiate forSessionWithUniqueID:(id)id;
- (void)setForceTCPFallbackOnCellUsingReinitiate:(BOOL)reinitiate forSessionWithUniqueID:(id)id;
- (void)setQuickRelayUserTypeForSession:(id)session withUserType:(unsigned short)type;
- (void)updateMembers:(id)members forGroup:(id)group sessionID:(id)id withContext:(id)context messagingCapabilities:(id)capabilities triggeredLocally:(BOOL)locally lightweightStatusDict:(id)dict;
- (void)manageDesignatedMembers:(id)members forGroup:(id)group sessionID:(id)id withType:(unsigned short)type;
- (void)removeParticipantIDs:(id)ids forGroup:(id)group sessionID:(id)id;
- (void)updateParticipantData:(id)data forGroup:(id)group sessionID:(id)id withContext:(id)context;
- (void)updateParticipantInfo:(id)info forGroup:(id)group sessionID:(id)id;
- (void)updateParticipantType:(unsigned short)type forGroup:(id)group sessionID:(id)id members:(id)members triggeredLocally:(BOOL)locally withContext:(id)context lightweightStatusDict:(id)dict;
- (void)joinGroupSession:(id)session withOptions:(id)options;
- (void)leaveGroupSession:(id)session participantInfo:(id)info options:(id)options;
- (void)requestActiveParticipantsForGroupSession:(id)session;
- (void)requestURIsForParticipantIDs:(id)ids withRequestID:(id)id forGroupSession:(id)session;
- (void)registerPluginForGroup:(id)group options:(id)options;
- (void)unregisterPluginForGroup:(id)group options:(id)options;
- (void)requestEncryptionKeyForGroup:(id)group participants:(id)participants;
- (void)setRequiredCapabilities:(id)capabilities requiredLackOfCapabilities:(id)capabilities forSessionWithUniqueID:(id)id;
- (void)createAliasForParticipantID:(unsigned long long)id salt:(id)salt sessionID:(id)id;
- (void)getParticipantIDForAlias:(unsigned long long)alias salt:(id)salt sessionID:(id)id;
- (void)setupRealtimeEncryptionController:(id)controller forAccountWithID:(id)id;
- (void)sendRealTimeMediaPrekey:(id)prekey toGroup:(id)group;
- (void)requestPublicKeysForRealTimeEncryption:(id)encryption forAccountWithID:(id)id;
- (void)sendRealTimeEncryptionMasterKeyMaterial:(id)material toGroup:(id)group;
- (void)sendRealTimeEncryptionMKMRecoveryRequest:(id)request toGroup:(id)group;
- (void)requestRealTimeEncryptionMasterKeyMaterial:(id)material forGroup:(id)group;
- (void)resetRealTimeEncryptionKeys:(id)keys forGroup:(id)group;
- (void)continuityClientInstanceCreated;
- (void)continuityStartAdvertisingOfType:(long long)type withData:(id)data withOptions:(id)options;
- (void)continuityStopAdvertisingOfType:(long long)type;
- (void)continuityStartScanningForType:(long long)type withData:(id)data mask:(id)mask;
- (void)continuityStartScanningForType:(long long)type withData:(id)data mask:(id)mask peers:(id)peers;
- (void)continuityStartScanningForType:(long long)type withData:(id)data mask:(id)mask boostedScan:(BOOL)scan duplicates:(BOOL)duplicates;
- (void)continuityStartScanningForType:(long long)type withData:(id)data mask:(id)mask peers:(id)peers boostedScan:(BOOL)scan duplicates:(BOOL)duplicates;
- (void)continuityStopScanningForType:(long long)type;
- (void)continuityConnectToPeer:(id)peer;
- (void)continuityDisconnectFromPeer:(id)peer;
- (void)continuityStartTrackingPeer:(id)peer forType:(long long)type;
- (void)continuityStopTrackingPeer:(id)peer forType:(long long)type;
- (void)reportiMessageSpam:(id)spam toURI:(id)uri;
- (void)reportiMessageUnknownSender:(id)sender messageID:(id)id isBlackholed:(BOOL)blackholed isJunked:(BOOL)junked messageServerTimestamp:(id)timestamp toURI:(id)uri;
- (void)reportiMessageSpamCheckUnknown:(id)unknown count:(id)count requestID:(id)id;
- (void)reportAction:(long long)action ofTempURI:(id)uri fromURI:(id)uri onAccount:(id)account requestUUID:(id)uuid;
- (void)reportSpamMessage:(id)message serviceIdentifier:(id)identifier;
- (void)homeKitGetServiceUserIDs;
- (void)homeKitGetAdminAccessTokensWithServiceUserID:(id)id accessoryID:(id)id pairingToken:(id)token;
- (void)homeKitGetConsentTokensWithServiceUserID:(id)id accessoryIDs:(id)ids adminID:(id)id;
- (void)homeKitGetUserAccessTokensWithServiceUserID:(id)id userID:(id)id userHandle:(id)handle accessoryRequests:(id)requests;
- (void)homeKitRefreshUserAccessTokensWithServiceUserID:(id)id userID:(id)id accessoryRequests:(id)requests;
- (void)appleCareSignInUserName:(id)name DSID:(id)dsid authToken:(id)token requestID:(id)id;
- (void)appleCareSignOutUserWithRequestID:(id)id;
- (void)registrationControlSetRegistrationStateForRegistrationType:(long long)type toState:(long long)state requestID:(id)id;
- (void)registrationControlGetRegistrationStateForRegistrationType:(long long)type requestID:(id)id;
- (void)persistPendingInvitation:(id)invitation forService:(id)service withUniqueID:(id)id;
- (void)persistReceivedInvitation:(id)invitation forService:(id)service withUniqueID:(id)id;
- (void)removePendingInvitation:(id)invitation forService:(id)service;
- (void)removeReceivedInvitation:(id)invitation forService:(id)service;
- (void)tryForceFamilyFetch;
- (void)downloadPendingResourceWithMessageGUID:(id)guid;
- (void)deletePendingResourceWithMessageGUID:(id)guid;
@end

#endif /* IDSDaemonProtocol_Protocol_h */
