//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef _IDSSession_h
#define _IDSSession_h
@import Foundation;

#include "IDSBaseSocketPairConnectionDelegate-Protocol.h"
#include "IDSDaemonListenerProtocol-Protocol.h"

@class CUTWeakReference, IDSBaseSocketPairConnection, NSMutableDictionary, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface _IDSSession : NSObject<IDSDaemonListenerProtocol, IDSBaseSocketPairConnectionDelegate> {
  /* instance variables */
  id _delegateContext;
  NSString *_accountID;
  NSSet *_destinations;
  IDSBaseSocketPairConnection *_unreliableSocketPairConnection;
  CUTWeakReference *_delegate;
  NSObject<OS_dispatch_queue> *_queue;
  long long _transportType;
  BOOL _isAudioEnabled;
  BOOL _isMuted;
  BOOL _isLegacy;
  unsigned long long _connectionCountHint;
  BOOL _needsToWaitForPreConnectionData;
  BOOL _disallowCellularInterface;
  BOOL _disallowWifiInterface;
  unsigned long long _preferredAddressFamily;
  BOOL _preferCellularForCallSetup;
  NSString *_clientUUID;
  BOOL _disableEncryption;
  BOOL _shouldUseSocketForTransport;
  BOOL _enableSingleChannelDirectMode;
  BOOL _alwaysSkipSelf;
  NSMutableDictionary *_preferences;
  NSMutableDictionary *_sessionConfig;
}

@property (readonly, nonatomic) int socket;
@property (readonly, nonatomic) NSString *uniqueID;
@property (readonly, nonatomic) unsigned int state;
@property (readonly, nonatomic) unsigned long long initialLinkType;
@property (nonatomic) long long inviteTimeout;
@property (readonly, nonatomic) unsigned int sessionEndedReason;
@property (retain, nonatomic) id boostContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)daemonListener;
- (id)daemonController;
- (id)_initWithAccount:(id)account destinations:(id)destinations transportType:(long long)type connectionCountHint:(unsigned long long)hint needsToWaitForPreConnectionData:(BOOL)data uniqueID:(id)id delegateContext:(id)context;
- (id)_initWithAccount:(id)account destinations:(id)destinations options:(id)options delegateContext:(id)context;
- (id)initWithAccount:(id)account destinations:(id)destinations transportType:(long long)type uniqueID:(id)id delegateContext:(id)context;
- (id)initWithAccount:(id)account destinations:(id)destinations transportType:(long long)type delegateContext:(id)context;
- (id)initWithAccount:(id)account destinations:(id)destinations options:(id)options delegateContext:(id)context;
- (void)dealloc;
- (void)daemonDisconnected;
- (void)_broadcastNewSessionToDaemon;
- (void)_callDelegateWithBlock:(id /* block */)block;
- (void)setDelegate:(id)delegate queue:(id)queue;
- (void)_setupUnreliableSocketPairConnection;
- (void)_setupSocketPairToDaemon;
- (void)_cleanupSocketPairConnections;
- (void)sendAllocationRequest:(id)request;
- (void)sendInvitationWithOptions:(id)options;
- (void)sendInvitationWithData:(id)data declineOnError:(BOOL)error;
- (void)cancelInvitation;
- (void)cancelInvitationWithData:(id)data;
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)override;
- (void)acceptInvitation;
- (void)acceptInvitationWithData:(id)data;
- (void)declineInvitation;
- (void)declineInvitationWithData:(id)data;
- (void)reconnectSession;
- (void)endSession;
- (void)endSessionWithData:(id)data;
- (void)sendSessionMessage:(id)message;
- (void)sendSessionMessage:(id)message toDestinations:(id)destinations;
- (void)setAudioEnabled:(BOOL)enabled;
- (BOOL)getAudioEnabled;
- (void)setMuted:(BOOL)muted;
- (BOOL)getMuted;
- (void)setPreferences:(id)preferences;
- (id)getPreferences;
- (BOOL)shouldUseSocketForTransport;
- (unsigned long long)MTUForAddressFamily:(unsigned long long)family;
- (BOOL)sendData:(id)data error:(id *)error;
- (void)sessionAcceptReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionDeclineReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionCancelReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionMessageReceived:(id)received fromID:(id)id withData:(id)data;
- (void)sessionEndReceived:(id)received fromID:(id)id withData:(id)data;
- (void)session:(id)session invitationSentToTokens:(id)tokens shouldBreakBeforeMake:(BOOL)make;
- (void)allocationDone:(id)done sessionInfo:(id)info;
- (void)sessionStarted:(id)started;
- (void)sessionEnded:(id)ended withReason:(unsigned int)reason error:(id)error;
- (void)session:(id)session audioEnabled:(BOOL)enabled;
- (void)session:(id)session muted:(BOOL)muted;
- (void)xpcObject:(id)object objectContext:(id)context;
- (void)session:(id)session didReceiveReport:(id)report;
- (void)connection:(id)connection didReceiveData:(id)data;
@end

#endif /* _IDSSession_h */
