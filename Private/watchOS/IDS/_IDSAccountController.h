//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef _IDSAccountController_h
#define _IDSAccountController_h
@import Foundation;

#include "IDSDaemonListenerProtocol-Protocol.h"

@class NSMapTable, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface _IDSAccountController : NSObject<IDSDaemonListenerProtocol> {
  /* instance variables */
  id _delegateContext;
  NSMapTable *_delegateToInfo;
  NSString *_serviceToken;
  NSString *_service;
  NSMutableSet *_cachedAccounts;
  NSMutableDictionary *_pendingAccountsToRemove;
  NSMutableDictionary *_transactionIDToHandlersMap;
  BOOL _accountsLoaded;
  BOOL _isLocalAccountVisible;
}

@property (readonly, nonatomic) NSSet *accounts;
@property (readonly, nonatomic) NSSet *internalAccounts;
@property (readonly, nonatomic) NSSet *enabledAccounts;
@property (readonly, nonatomic) NSString *serviceName;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithService:(id)service delegateContext:(id)context;
- (void)dealloc;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)removeDelegate:(id)delegate;
- (void)_callDelegatesWithBlock:(id /* block */)block;
- (void)_callDelegatesWithBlock:(id /* block */)block group:(id)group;
- (void)_callDelegatesRespondingToSelector:(SEL)selector withPreCallbacksBlock:(id /* block */)block callbackBlock:(id /* block */)block postCallbacksBlock:(id /* block */)block;
- (void)_callDelegatesRespondingToSelector:(SEL)selector withPreCallbacksBlock:(id /* block */)block callbackBlock:(id /* block */)block postCallbacksBlock:(id /* block */)block group:(id)group;
- (void)_connect;
- (void)daemonDisconnected;
- (void)_updateDelegatesWithOldAccounts:(id)accounts newAccounts:(id)accounts;
- (void)_loadCachedAccountsWithDictionaries:(id)dictionaries;
- (void)_loadCachedAccounts;
- (id)accountWithUniqueID:(id)id;
- (id)accountWithLoginID:(id)id service:(id)service;
- (void)_setupAccountWithLoginID:(id)id accountConfig:(id)config authToken:(id)token password:(id)password completionHandler:(id /* block */)handler;
- (void)setupAccountWithLoginID:(id)id password:(id)password completionHandler:(id /* block */)handler;
- (void)setupAccountWithLoginID:(id)id aliases:(id)aliases password:(id)password completionHandler:(id /* block */)handler;
- (void)setupAccountWithSetupParameters:(id)parameters aliases:(id)aliases completionHandler:(id /* block */)handler;
- (void)addAccount:(id)account;
- (void)_removeAndDeregisterAccount:(id)account;
- (void)_removeAccount:(id)account;
- (void)_updateLocalAccountVisibility;
- (void)enableAccount:(id)account;
- (void)disableAccount:(id)account;
- (void)accountAdded:(id)added;
- (void)accountRemoved:(id)removed;
- (void)accountUpdated:(id)updated;
- (void)accountsChanged:(id)changed forTopic:(id)topic;
- (void)setupCompleteForAccount:(id)account transactionID:(id)id setupError:(id)error;
- (void)accountEnabled:(id)enabled onService:(id)service;
- (void)accountDisabled:(id)disabled onService:(id)service;
@end

#endif /* _IDSAccountController_h */
