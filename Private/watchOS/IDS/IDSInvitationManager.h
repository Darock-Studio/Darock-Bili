//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef IDSInvitationManager_h
#define IDSInvitationManager_h
@import Foundation;

#include "IDSDaemonListenerProtocol-Protocol.h"
#include "IDSService.h"
#include "IDSServiceDelegateInvitation-Protocol.h"

@class NSMutableDictionary, NSSet, NSString;
@protocol IDSInvitationManagerDelegate, OS_dispatch_queue;

@interface IDSInvitationManager : NSObject<IDSServiceDelegateInvitation, IDSDaemonListenerProtocol> {
  /* instance variables */
  NSMutableDictionary *_serverAcknowledgedBlockMap;
  NSMutableDictionary *_serverAcknowledgedBlockWithInvitationMap;
  NSObject<OS_dispatch_queue> *_delegateQueue;
  BOOL _invitationsLoadedFromDisk;
}

@property (readonly, nonatomic) IDSService *internal;
@property (weak, nonatomic) NSObject<IDSInvitationManagerDelegate> *delegate;
@property (readonly, copy, nonatomic) NSSet *pendingInvitations;
@property (readonly, copy, nonatomic) NSSet *receivedInvitations;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithServiceIdentifier:(id)identifier;
- (void)setupInvitationsForService:(id)service;
- (id)validateStrictDecodingForSentInvitation:(id)invitation;
- (void)sendInvitationToDestination:(id)destination expirationDate:(id)date context:(id)context serverAcknowledgedBlock:(id /* block */)block;
- (void)sendInvitationToDestination:(id)destination expirationDate:(id)date context:(id)context options:(id)options serverAcknowledgedBlock:(id /* block */)block;
- (void)cancelInvitation:(id)invitation serverAcknowledgedBlock:(id /* block */)block;
- (void)cancelInvitation:(id)invitation options:(id)options serverAcknowledgedBlock:(id /* block */)block;
- (void)acceptInvitation:(id)invitation withContext:(id)context serverAcknowledgedBlock:(id /* block */)block;
- (void)acceptInvitation:(id)invitation withContext:(id)context options:(id)options serverAcknowledgedBlock:(id /* block */)block;
- (void)declineInvitation:(id)invitation serverAcknowledgedBlock:(id /* block */)block;
- (void)declineInvitation:(id)invitation options:(id)options serverAcknowledgedBlock:(id /* block */)block;
- (void)setDelegate:(id)delegate queue:(id)queue;
- (BOOL)validateReceivedInvitation:(id)invitation;
- (void)service:(id)service account:(id)account incomingInvitation:(id)invitation withContext:(id)context;
- (void)service:(id)service account:(id)account incomingInvitationUpdate:(id)update withContext:(id)context;
- (void)service:(id)service account:(id)account identifier:(id)identifier didSendWithSuccess:(BOOL)success error:(id)error context:(id)context;
- (void)removePendingInvitation:(id)invitation;
- (void)removeReceivedInvitation:(id)invitation;
@end

#endif /* IDSInvitationManager_h */
