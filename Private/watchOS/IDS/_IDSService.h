//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef _IDSService_h
#define _IDSService_h
@import Foundation;

#include "IDSAccount.h"
#include "IDSAccountController.h"
#include "IDSAccountControllerDelegate-Protocol.h"
#include "IDSConnectionDelegatePrivate-Protocol.h"
#include "IDSDaemonListenerProtocol-Protocol.h"
#include "IDSGroupContextController.h"
#include "IDSGroupContextControllerDelegate-Protocol.h"
#include "IDSQuickSwitchAcknowledgementTracker.h"

@class CUTDeferredTaskQueue, IDSServiceProperties, NSArray, NSDictionary, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface _IDSService : NSObject<IDSGroupContextControllerDelegate, IDSAccountControllerDelegate, IDSConnectionDelegatePrivate, IDSDaemonListenerProtocol> {
  /* instance variables */
  IDSAccountController *_accountController;
  NSMutableDictionary *_uniqueIDToConnection;
  NSSet *_commands;
  NSMapTable *_delegateToInfo;
  id _delegateContext;
  NSMutableDictionary *_protobufSelectors;
  NSMutableSet *_lastIsActiveSet;
  NSMutableArray *_linkedDevices;
  NSMutableDictionary *_subServices;
  BOOL _linkedDevicesLoaded;
  BOOL _everHadDelegate;
  BOOL _clientIsSandboxed;
  unsigned int _listenerCaps;
  id _idsSimulatorSupportDataHandlerToken;
  NSMutableDictionary *_uniqueIDToProgress;
  IDSQuickSwitchAcknowledgementTracker *_acknowledgementTracker;
  id /* block */ _pendingRegisteredIdentitiesBlock;
}

@property (nonatomic) BOOL wantsPseudonymUpdates;
@property (retain, nonatomic) NSDictionary *cachedPseudonymURIMap;
@property (retain, nonatomic) CUTDeferredTaskQueue *pseudonymUpdateTaskQueue;
@property (readonly, retain, nonatomic) IDSGroupContextController *groupContextController;
@property (retain, nonatomic) NSMutableDictionary *completionBlocksByRequestID;
@property (readonly, copy, nonatomic) NSSet *accounts;
@property (readonly, copy, nonatomic) NSSet *internalAccounts;
@property (readonly, nonatomic) IDSAccount *iCloudAccount;
@property (readonly, copy, nonatomic) NSArray *devices;
@property (readonly, copy, nonatomic) IDSServiceProperties *serviceProperties;
@property (readonly, nonatomic) BOOL canSend;
@property (readonly, copy, nonatomic) NSString *serviceDomain;
@property (nonatomic) BOOL pretendingToBeFull;
@property (nonatomic) BOOL manuallyAckMessages;
@property (readonly, nonatomic) long long maxEffectivePayloadSize;
@property (readonly, nonatomic) NSArray *URIs;
@property (readonly, nonatomic) NSDictionary *pseudonymURIMap;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)serviceWithIdentifier:(id)identifier commands:(id)commands manuallyAckMessages:(BOOL)messages delegateContext:(id)context completion:(id /* block */)completion;
+ (id)deviceForFromID:(id)id fromDevices:(id)devices;

/* instance methods */
- (id)daemonController;
- (id)daemonListener;
- (id)_initWithDelegateContext:(id)context;
- (id)_init;
- (id)initWithService:(id)service commands:(id)commands manuallyAckMessages:(BOOL)messages delegateContext:(id)context;
- (void)dealloc;
- (void)receivedIDSSimulatorSupportData:(id)data serviceName:(id)name messageIdentifier:(id)identifier;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)removeDelegate:(id)delegate;
- (void)_callDelegatesWithBlock:(id /* block */)block;
- (void)_callDelegatesWithBlock:(id /* block */)block group:(id)group;
- (void)_callDelegatesRespondingToSelector:(SEL)selector withPreCallbacksBlock:(id /* block */)block callbackBlock:(id /* block */)block postCallbacksBlock:(id /* block */)block;
- (void)_callDelegatesRespondingToSelector:(SEL)selector withPreCallbacksBlock:(id /* block */)block callbackBlock:(id /* block */)block postCallbacksBlock:(id /* block */)block group:(id)group;
- (void)daemonConnected;
- (void)daemonDisconnected;
- (void)OTRTestCallback:(id)callback time:(double)time error:(id)error;
- (void)connection:(id)connection didCancelMessageWithSuccess:(BOOL)success error:(id)error identifier:(id)identifier;
- (void)didSwitchActivePairedDevice:(id)device forService:(id)service wasHandled:(BOOL *)handled;
- (id)_activeDeviceForUniqueID:(id)id;
- (id /* block */)_acknowledgementBlockWithDelegateIdentifier:(id)identifier;
- (void)_stopAwaitingQuickSwitchAcknowledgementFromDelegateWithIdentifier:(id)identifier;
- (BOOL)_isDroppingMessages;
- (void)_callLinkedDevicesChanged;
- (void)service:(id)service tinkerDeviceAdded:(id)added;
- (void)service:(id)service tinkerDeviceRemoved:(id)removed;
- (void)service:(id)service tinkerDeviceUpdated:(id)updated;
- (void)service:(id)service linkedDevicesUpdated:(id)updated;
- (void)_logConnectionMap;
- (void)_setupNewConnectionForAccount:(id)account;
- (void)_tearDownConnectionForUniqueID:(id)id;
- (void)_processAccountSet:(id)set;
- (void)_callIsActiveChanged;
- (void)accountController:(id)controller accountAdded:(id)added;
- (void)accountController:(id)controller accountRemoved:(id)removed;
- (void)accountController:(id)controller accountEnabled:(id)enabled;
- (void)accountController:(id)controller accountDisabled:(id)disabled;
- (void)connection:(id)connection incomingOpportunisticData:(id)data withIdentifier:(id)identifier fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingData:(id)data fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingGroupData:(id)data fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingAccessoryData:(id)data fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingAccessoryReportMessage:(id)message accessoryID:(id)id controllerID:(id)id context:(id)context;
- (void)connection:(id)connection incomingInvitation:(id)invitation fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingInvitationUpdate:(id)update fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingMessage:(id)message fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingProtobuf:(id)protobuf fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingTopLevelMessage:(id)message fromURI:(id)uri messageContext:(id)context;
- (void)connection:(id)connection incomingPendingMessageFromURI:(id)uri context:(id)context;
- (void)connection:(id)connection incomingPendingResourceWithMetadata:(id)metadata guid:(id)guid fromURI:(id)uri context:(id)context;
- (long long)_messageTypeForCommand:(id)command;
- (id)_payloadFromDecryptedData:(id)data;
- (void)connection:(id)connection incomingEngramMessage:(id)message fromURI:(id)uri context:(id)context;
- (void)connection:(id)connection isActiveChanged:(BOOL)changed;
- (void)connection:(id)connection devicesChanged:(id)changed;
- (void)_callDelegatesForDevicesChanged;
- (void)connection:(id)connection nearbyDevicesChanged:(id)changed;
- (void)connection:(id)connection connectedDevicesChanged:(id)changed;
- (void)connection:(id)connection messageIdentifier:(id)identifier alternateCallbackID:(id)id updatedWithResponseCode:(long long)code error:(id)error lastCall:(BOOL)call messageContext:(id)context;
- (void)connection:(id)connection identifier:(id)identifier alternateCallbackID:(id)id willSendToDestinations:(id)destinations skippedDestinations:(id)destinations registrationPropertyToDestinations:(id)destinations;
- (void)connection:(id)connection identifier:(id)identifier didSendWithSuccess:(BOOL)success error:(id)error context:(id)context;
- (void)connection:(id)connection identifier:(id)identifier fromURI:(id)uri hasBeenDeliveredWithContext:(id)context;
- (void)connection:(id)connection didFlushCacheForRemoteURI:(id)uri fromURI:(id)uri guid:(id)guid;
- (void)connection:(id)connection didFlushCacheForKTPeerURI:(id)uri;
- (void)connection:(id)connection account:(id)account sessionInviteReceived:(id)received fromID:(id)id transportType:(id)type options:(id)options context:(id)context messageContext:(id)context;
- (void)connection:(id)connection account:(id)account receivedGroupSessionParticipantUpdate:(id)update context:(id)context;
- (void)connection:(id)connection account:(id)account receivedGroupSessionParticipantDataUpdate:(id)update;
- (void)connection:(id)connection didSendOpportunisticDataWithIdentifier:(id)identifier toIDs:(id)ids;
- (BOOL)isPretendingToBeFull;
- (id)_filteredAccountsFrom:(id)from;
- (void)_reloadCachedLinkedDevices;
- (void)_loadCachedLinkedDevices;
- (void)_updateLinkedDevicesWithDevicesInfo:(id)info;
- (id)linkedDevicesWithRelationship:(long long)relationship;
- (id)pseudonymForPseudonymURI:(id)uri;
- (id)pseudonymsForMaskedURI:(id)uri;
- (id)pseudonymsForMaskedURI:(id)uri matchingProperties:(id)properties;
- (id)_accountWithURI:(id)uri orPseudonym:(id)pseudonym;
- (void)account:(id)account pseudonymsChanged:(id)changed;
- (void)_calloutPseudonymsDidUpdate;
- (void)provisionPseudonymWithProperties:(id)properties requestProperties:(id)properties completion:(id /* block */)completion;
- (void)provisionPseudonymForURI:(id)uri withProperties:(id)properties requestProperties:(id)properties completion:(id /* block */)completion;
- (void)renewPseudonym:(id)pseudonym forUpdatedExpiryEpoch:(double)epoch requestProperties:(id)properties completion:(id /* block */)completion;
- (void)revokePseudonym:(id)pseudonym requestProperties:(id)properties completion:(id /* block */)completion;
- (id)pseudonymPropertiesWithFeatureID:(id)id scopeID:(id)id expiryDurationInSeconds:(double)seconds;
- (void)finishedProvisioningPseudonym:(id)pseudonym success:(BOOL)success error:(id)error forRequestUUID:(id)uuid;
- (void)finishedRenewingPseudonym:(id)pseudonym success:(BOOL)success error:(id)error requestUUID:(id)uuid;
- (void)finishedRevokingPseudonymWithSuccess:(BOOL)success error:(id)error requestUUID:(id)uuid;
- (void)signData:(id)data withAlgorithm:(long long)algorithm options:(id)options completion:(id /* block */)completion;
- (void)verifySignedData:(id)data matchesExpectedData:(id)data withTokenURI:(id)uri forAlgorithm:(long long)algorithm options:(id)options completion:(id /* block */)completion;
- (void)finishedSigningForRequest:(id)request signedData:(id)data error:(id)error;
- (void)finishedVerifyingSignedDataForRequest:(id)request success:(BOOL)success error:(id)error;
- (void)reportAction:(long long)action ofTempURI:(id)uri fromURI:(id)uri withCompletion:(id /* block */)completion;
- (void)finishedReportingRequestUUID:(id)uuid withError:(id)error;
- (BOOL)updateSubServices:(id)services forDevice:(id)device;
- (void)resendSubServicesToDaemonForCurrentDevice;
- (void)setProtobufAction:(SEL)action forProtobufType:(unsigned short)type isResponse:(BOOL)response;
- (SEL)protobufActionForType:(unsigned short)type isResponse:(BOOL)response;
- (BOOL)canSendMessageWithAccount:(id)account toDestination:(id)destination;
- (id)_preferredURIForAccount:(id)account;
- (id)_sendingAccountForAccount:(id)account;
- (id)_sendingAccountForAccount:(id)account destination:(id)destination fromID:(id)id;
- (BOOL)_canAccount:(id)account sendWithFromID:(id)id;
- (BOOL)sendOpportunisticData:(id)data options:(id)options identifier:(id)identifier error:(id *)error;
- (BOOL)cancelOpportunisticDataWithIdentifier:(id)identifier error:(id *)error;
- (BOOL)sendMessage:(id)message fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)cancelMessageWithOptions:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)cancelMessageWithOptions:(id)options destination:(id)destination identifier:(id *)identifier error:(id *)error;
- (BOOL)_sendSimulatorMessage:(id)message fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendProtobuf:(id)protobuf fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)_sendSimulatorProtobuf:(id)protobuf fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (void)_handlePretendingToBeFullWithIdentifier:(id *)identifier;
- (BOOL)sendData:(id)data fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)_sendSimulatorData:(id)data fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendAccessoryData:(id)data toAccessoryID:(id)id accessToken:(id)token options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendInvitation:(id)invitation fromAccount:(id)account toDestination:(id)destination options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendInvitationUpdate:(id)update fromAccount:(id)account toDestination:(id)destination options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)setWakingPushPriority:(long long)priority error:(id *)error;
- (BOOL)sendData:(id)data priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendServerMessage:(id)message command:(id)command fromAccount:(id)account;
- (BOOL)cancelIdentifier:(id)identifier error:(id *)error;
- (BOOL)getProgressUpdateForIdentifier:(id)identifier error:(id *)error;
- (id)uriForFromID:(id)id;
- (id)deviceForFromID:(id)id;
- (id)linkedDeviceForFromID:(id)id withRelationship:(long long)relationship;
- (id)firstRoutableInternetDestinationForSelf;
- (id)devicesForBTUUID:(id)btuuid;
- (id)deviceForUniqueID:(id)id;
- (void)setPreferInfraWiFi:(BOOL)fi;
- (void)setLinkPreferences:(id)preferences;
- (void)startOTRTest:(long long)otrtest;
- (void)testCloudQRConnection;
- (BOOL)sendResourceAtURL:(id)url metadata:(id)metadata fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendAheadGroup:(id)group priority:(long long)priority options:(id)options identifier:(id *)identifier completion:(id /* block */)completion;
- (BOOL)reportSpamMessage:(id)message;
- (void)sendAckForMessageWithContext:(id)context;
- (BOOL)sendCertifiedDeliveryReceipt:(id)receipt;
- (void)_sendMissingMessageMetric:(id)metric;
- (id)datagramConnectionForSessionDestination:(id)destination error:(id *)error;
- (id)datagramConnectionForSessionDestination:(id)destination uid:(unsigned int)uid error:(id *)error;
- (id)datagramConnectionForSocketDescriptor:(int)descriptor error:(id *)error;
- (id)streamConnectionForSessionDestination:(id)destination error:(id *)error;
- (id)streamConnectionForSocketDescriptor:(int)descriptor error:(id *)error;
- (id)datagramChannelForSessionDestination:(id)destination options:(id)options error:(id *)error;
- (id)datagramChannelForSocketDescriptor:(int)descriptor error:(id *)error;
- (void)_enableAccount:(id)account;
- (void)_disableAccount:(id)account;
- (void)performGroupTask:(id /* block */)task;
- (void)scheduleTransactionLogTask:(id)task;
- (void)connection:(id)connection didHintCheckingTransportLogWithReason:(long long)reason;
- (void)groupContextController:(id)controller didCreateGroup:(id)group;
- (id)groupContextController:(id)controller accountsForAlises:(id)alises;
- (void)_enforceSandboxPolicy;
@end

#endif /* _IDSService_h */
