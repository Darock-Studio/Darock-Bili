//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef _IDSConnection_h
#define _IDSConnection_h
@import Foundation;

#include "IDSAccount.h"
#include "IDSAccountDelegate-Protocol.h"
#include "IDSDaemonListenerProtocol-Protocol.h"
#include "IDSDirectMessageConnection.h"
#include "IDSDirectMessageConnectionDelegate-Protocol.h"
#include "IDSSendXPCProtocol-Protocol.h"

@class IMOrderedMutableDictionary, NSDictionary, NSMapTable, NSSet, NSString;

@interface _IDSConnection : NSObject<IDSDaemonListenerProtocol, IDSAccountDelegate, IDSDirectMessageConnectionDelegate, IDSSendXPCProtocol> {
  /* instance variables */
  id _messageContext;
  id _delegateContext;
  unsigned char _incomingMessageLoggingSequence;
  unsigned char _outgoingMessageLoggingSequence;
  NSMapTable *_delegateToInfo;
  NSSet *_commands;
  NSString *_serviceToken;
  IMOrderedMutableDictionary *_pendingSends;
  unsigned int _delegateCapabilities;
  BOOL _indirectDelegateCallouts;
}

@property (nonatomic) unsigned int wakingDowngradeCount;
@property (retain, nonatomic) IDSDirectMessageConnection *directMessageConnection;
@property (retain, nonatomic) NSDictionary *directMessagingMetadata;
@property (readonly, nonatomic) BOOL isActive;
@property (readonly, nonatomic) IDSAccount *account;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)_init;
- (id)initWithAccount:(id)account commands:(id)commands indirectDelegateCallouts:(BOOL)callouts delegateContext:(id)context;
- (void)dealloc;
- (void)createDirectMessageConnectionIfNeeded;
- (id)daemonController;
- (id)daemonListener;
- (id)_activeDevice;
- (id)_defaultPairedDevice;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)addDelegate:(id)delegate queue:(id)queue completion:(id /* block */)completion;
- (void)removeDelegate:(id)delegate;
- (void)_callDelegatesWithBlock:(id /* block */)block;
- (void)_callDelegatesWithBlock:(id /* block */)block group:(id)group;
- (void)_callDelegatesRespondingToSelector:(SEL)selector withPreCallbacksBlock:(id /* block */)block callbackBlock:(id /* block */)block postCallbacksBlock:(id /* block */)block;
- (void)_callDelegatesRespondingToSelector:(SEL)selector withPreCallbacksBlock:(id /* block */)block callbackBlock:(id /* block */)block postCallbacksBlock:(id /* block */)block group:(id)group;
- (void)setDelegateCapabilities:(unsigned int)capabilities;
- (void)sendAppAckForDirectMessage:(id)message;
- (id)_sendWithParameters:(id)parameters options:(id)options loggingType:(id)type loggingDataSize:(unsigned long long)size;
- (BOOL)_isDestinationSingleLocalAddress:(id)address;
- (void)_replaceSentinelInSendParameters:(id)parameters withCurrentActiveDevice:(id)device;
- (BOOL)sendProtobuf:(id)protobuf toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendMessage:(id)message toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendData:(id)data toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendInvitation:(id)invitation toDestination:(id)destination priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendInvitationUpdate:(id)update toDestination:(id)destination priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendServerMessage:(id)message command:(id)command;
- (void)connection:(id)connection incomingAckWithIdentifier:(id)identifier forTopic:(id)topic toIdentifier:(id)identifier fromIdentifier:(id)identifier hasBeenDeliveredWithContext:(id)context isAppAck:(BOOL)ack;
- (void)connection:(id)connection incomingDataFromDirectConnection:(id)connection withGUID:(id)guid forTopic:(id)topic toIdentifier:(id)identifier fromID:(id)id context:(id)context;
- (void)connection:(id)connection incomingMessageFromDirectConnection:(id)connection withGUID:(id)guid forTopic:(id)topic toIdentifier:(id)identifier fromID:(id)id context:(id)context;
- (void)connection:(id)connection incomingProtobufFromDirectConnection:(id)connection withGUID:(id)guid forTopic:(id)topic toIdentifier:(id)identifier fromID:(id)id context:(id)context;
- (void)connection:(id)connection incomingGUIDAckFromDirectConnection:(id)connection;
- (void)connection:(id)connection messageSendFailed:(id)failed responseCode:(long long)code;
- (void)account:(id)account isActiveChanged:(BOOL)changed;
- (void)account:(id)account devicesChanged:(id)changed;
- (void)account:(id)account nearbyDevicesChanged:(id)changed;
- (void)account:(id)account connectedDevicesChanged:(id)changed;
- (void)_connect;
- (void)_handleLastCallForPendingIdentifier:(id)identifier callbackID:(id)id;
- (void)_resendPendingSends;
- (void)daemonConnected;
- (void)messageIdentifier:(id)identifier alternateCallbackID:(id)id forAccount:(id)account updatedWithResponseCode:(long long)code error:(id)error lastCall:(BOOL)call context:(id)context;
- (void)messageIdentifierInner:(id)inner alternateCallbackID:(id)id forAccount:(id)account updatedWithResponseCode:(long long)code error:(id)error lastCall:(BOOL)call context:(id)context isDirectMessage:(BOOL)message;
- (void)messageIdentifier:(id)identifier alternateCallbackID:(id)id forAccount:(id)account willSendToDestinations:(id)destinations skippedDestinations:(id)destinations registrationPropertyToDestinations:(id)destinations;
- (void)messageIdentifier:(id)identifier forTopic:(id)topic toURI:(id)uri fromURI:(id)uri hasBeenDeliveredWithContext:(id)context;
- (void)didSendOpportunisticDataWithIdentifier:(id)identifier onAccount:(id)account toIDs:(id)ids;
- (void)didCancelMessageWithSuccess:(BOOL)success onAccount:(id)account error:(id)error identifier:(id)identifier;
- (void)_setTemporaryMessageContext:(id)context;
- (BOOL)_shouldAcceptIncomingType:(id)type forTopic:(id)topic localURI:(id)uri remoteURI:(id)uri validateAliases:(BOOL)aliases guid:(id)guid;
- (BOOL)_isAccountInValidRegistrationStateToAcceptMessages;
- (BOOL)_canServiceNameAcceptMessagesInTransientRegistrationState:(id)state;
- (void)opportunisticDataReceived:(id)received withIdentifier:(id)identifier fromURI:(id)uri context:(id)context;
- (void)messageReceived:(id)received withGUID:(id)guid withPayload:(id)payload forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)dataReceived:(id)received withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)accessoryDataReceived:(id)received withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)accessoryReportMessageReceived:(id)received accessoryID:(id)id controllerID:(id)id withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)incomingInvitation:(id)invitation withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)incomingInvitationUpdate:(id)update withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)protobufReceived:(id)received withGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)receivedMetadataForDirectMessaging:(id)messaging;
- (void)xpcObject:(id)object objectContext:(id)context;
- (void)didFlushCacheForService:(id)service remoteURI:(id)uri fromURI:(id)uri guid:(id)guid;
- (void)didFlushCacheFromKTPeerUpdateForService:(id)service peerURI:(id)uri;
- (void)pendingIncomingMessageWithGUID:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)pendingResourceWithMetadata:(id)metadata guid:(id)guid forTopic:(id)topic toURI:(id)uri fromURI:(id)uri context:(id)context;
- (void)sessionInvitationReceivedWithPayload:(id)payload forTopic:(id)topic sessionID:(id)id toIdentifier:(id)identifier fromID:(id)id transportType:(id)type;
- (void)receivedGroupSessionParticipantUpdate:(id)update forTopic:(id)topic toIdentifier:(id)identifier fromID:(id)id context:(id)context;
- (void)receivedGroupSessionParticipantDataUpdate:(id)update forTopic:(id)topic toIdentifier:(id)identifier fromID:(id)id;
- (void)checkTransportLogWithReason:(long long)reason;
- (void)_sendMissingMessageMetric:(id)metric;
- (void)sendXPCObject:(id)xpcobject;
@end

#endif /* _IDSConnection_h */
