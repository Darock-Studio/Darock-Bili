//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef IDSService_h
#define IDSService_h
@import Foundation;

#include "_IDSService.h"

@class NSArray, NSDictionary, NSSet, NSString;

@interface IDSService : NSObject {
  /* instance variables */
  _IDSService *_internal;
}

@property (readonly, nonatomic) _IDSService *_internal;
@property (readonly, copy, nonatomic) NSSet *internalAccounts;
@property (readonly, nonatomic) NSArray *URIs;
@property (readonly, nonatomic) NSDictionary *pseudonymURIMap;
@property (readonly, copy, nonatomic) NSSet *accounts;
@property (readonly, copy, nonatomic) NSArray *devices;
@property (readonly, copy, nonatomic) NSString *serviceIdentifier;
@property (readonly, nonatomic) BOOL canSend;

/* class methods */
+ (BOOL)checkMessageSize:(unsigned long long)size priority:(long long)priority;
+ (void)serviceWithIdentifier:(id)identifier commands:(id)commands manuallyAckMessages:(BOOL)messages completion:(id /* block */)completion;
+ (void)serviceWithIdentifier:(id)identifier completion:(id /* block */)completion;
+ (id)removeSentinelFromAliases:(id)aliases;

/* instance methods */
- (id)accountMatchingSim:(id)sim;
- (id)accountMatchingSimIdentifier:(id)identifier;
- (id)internal;
- (id)initWithService:(id)service commands:(id)commands manuallyAckMessages:(BOOL)messages;
- (id)initWithService:(id)service serviceDomain:(id)domain;
- (id)initWithService:(id)service commands:(id)commands;
- (id)initWithService:(id)service manuallyAckMessages:(BOOL)messages;
- (id)initWithService:(id)service;
- (void)dealloc;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)addDelegate:(id)delegate withDelegateProperties:(id)properties queue:(id)queue;
- (void)removeDelegate:(id)delegate;
- (void)performGroupTask:(id /* block */)task;
- (void)setProtobufAction:(SEL)action forIncomingRequestsOfType:(unsigned short)type;
- (void)setProtobufAction:(SEL)action forIncomingResponsesOfType:(unsigned short)type;
- (SEL)protobufActionForIncomingRequestsOfType:(unsigned short)type;
- (SEL)protobufActionForIncomingResponsesOfType:(unsigned short)type;
- (BOOL)sendProtobuf:(id)protobuf fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendProtobuf:(id)protobuf toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendOpportunisticData:(id)data options:(id)options identifier:(id)identifier error:(id *)error;
- (BOOL)cancelOpportunisticDataWithIdentifier:(id)identifier error:(id *)error;
- (BOOL)sendMessage:(id)message fromAccount:(id)account toDestinations:(id)destinations options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendMessage:(id)message fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendMessage:(id)message toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)cancelMessageWithOptions:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)cancelMessageWithOptions:(id)options destination:(id)destination identifier:(id *)identifier error:(id *)error;
- (BOOL)sendData:(id)data fromAccount:(id)account toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendData:(id)data toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendAccessoryData:(id)data toAccessoryID:(id)id accessToken:(id)token options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendInvitation:(id)invitation toDestination:(id)destination options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendInvitationUpdate:(id)update toDestination:(id)destination options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)setWakingPushPriority:(long long)priority error:(id *)error;
- (BOOL)sendData:(id)data priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)sendResourceAtURL:(id)url metadata:(id)metadata toDestinations:(id)destinations priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)getProgressUpdateForIdentifier:(id)identifier error:(id *)error;
- (BOOL)sendAheadGroup:(id)group priority:(long long)priority options:(id)options identifier:(id *)identifier error:(id *)error;
- (BOOL)reportSpamMessage:(id)message;
- (void)sendAckForMessageWithContext:(id)context;
- (BOOL)sendCertifiedDeliveryReceipt:(id)receipt;
- (BOOL)cancelIdentifier:(id)identifier error:(id *)error;
- (BOOL)sendServerMessage:(id)message command:(id)command fromAccount:(id)account;
- (id)linkedDevicesWithRelationship:(long long)relationship;
- (id)serviceDomain;
- (id)iCloudAccount;
- (id)deviceForFromID:(id)id;
- (id)linkedDeviceForFromID:(id)id withRelationship:(long long)relationship;
- (id)firstRoutableInternetDestinationForSelf;
- (id)deviceForUniqueID:(id)id;
- (id)devicesForBTUUID:(id)btuuid;
- (id)uriForFromID:(id)id;
- (void)setPreferInfraWiFi:(BOOL)fi;
- (void)setLinkPreferences:(id)preferences;
- (void)startOTRTest:(long long)otrtest;
- (void)setPretendingToBeFull:(BOOL)full;
- (BOOL)isPretendingToBeFull;
- (void)testCloudQRConnection;
- (long long)maxHomeKitPayloadSize;
- (void)updateSubServices:(id)services;
- (BOOL)updateSubServices:(id)services forDevice:(id)device;
- (id)datagramConnectionForSessionDestination:(id)destination error:(id *)error;
- (id)datagramConnectionForSessionDestination:(id)destination uid:(unsigned int)uid error:(id *)error;
- (id)datagramConnectionForSocketDescriptor:(int)descriptor error:(id *)error;
- (id)streamConnectionForSessionDestination:(id)destination error:(id *)error;
- (id)streamConnectionForSocketDescriptor:(int)descriptor error:(id *)error;
- (id)datagramChannelForSessionDestination:(id)destination error:(id *)error;
- (id)datagramChannelForSessionDestination:(id)destination options:(id)options error:(id *)error;
- (id)datagramChannelForSocketDescriptor:(int)descriptor error:(id *)error;
- (id)aliases;
- (id)activeAliases;
- (void)activateAlias:(id)alias;
- (void)activateAliases:(id)aliases;
- (void)deactivateAlias:(id)alias;
- (void)deactivateAliases:(id)aliases;
- (id)_accountWithAlias:(id)alias;
- (long long)maxEffectivePayloadSize;
- (id)pseudonymForPseudonymURI:(id)uri;
- (id)pseudonymsForMaskedURI:(id)uri;
- (id)pseudonymsForMaskedURI:(id)uri matchingProperties:(id)properties;
- (void)provisionPseudonymWithProperties:(id)properties completion:(id /* block */)completion;
- (void)provisionPseudonymWithProperties:(id)properties requestProperties:(id)properties completion:(id /* block */)completion;
- (void)provisionPseudonymForURI:(id)uri withProperties:(id)properties requestProperties:(id)properties completion:(id /* block */)completion;
- (void)provisionPseudonymForURI:(id)uri withProperties:(id)properties completion:(id /* block */)completion;
- (void)renewPseudonym:(id)pseudonym forUpdatedDuration:(double)duration completion:(id /* block */)completion;
- (void)renewPseudonym:(id)pseudonym forUpdatedExpiryEpoch:(double)epoch completion:(id /* block */)completion;
- (void)revokePseudonym:(id)pseudonym completion:(id /* block */)completion;
- (id)pseudonymPropertiesWithFeatureID:(id)id scopeID:(id)id expiryDurationInSeconds:(double)seconds;
- (id)pseudonymPropertiesWithFeatureID:(id)id expiryDurationInSeconds:(double)seconds;
- (void)retrieveFirewallWithQueue:(id)queue completion:(id /* block */)completion;
- (void)signData:(id)data withAlgorithm:(long long)algorithm completion:(id /* block */)completion;
- (void)signData:(id)data withAlgorithm:(long long)algorithm options:(id)options completion:(id /* block */)completion;
- (void)verifySignedData:(id)data matchesExpectedData:(id)data withTokenURI:(id)uri forAlgorithm:(long long)algorithm completion:(id /* block */)completion;
- (void)verifySignedData:(id)data matchesExpectedData:(id)data withTokenURI:(id)uri forAlgorithm:(long long)algorithm options:(id)options completion:(id /* block */)completion;
- (void)reportAction:(long long)action ofTempURI:(id)uri fromURI:(id)uri withCompletion:(id /* block */)completion;
- (void)scheduleTransactionLogTask:(id)task;
@end

#endif /* IDSService_h */
