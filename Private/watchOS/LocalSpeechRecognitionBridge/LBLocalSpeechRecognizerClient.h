//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef LBLocalSpeechRecognizerClient_h
#define LBLocalSpeechRecognizerClient_h
@import Foundation;

#include "LBAudioCapture.h"
#include "LBLocalSpeechServiceDelegate-Protocol.h"

@class NSString, NSXPCConnection, NSXPCListenerEndpoint;
@protocol LBLocalSpeechRecognizerClientDelegate, OS_dispatch_queue;

@interface LBLocalSpeechRecognizerClient : NSObject<LBLocalSpeechServiceDelegate> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSXPCConnection *_xpcConnection;
  NSXPCListenerEndpoint *_xpcListenerEndpoint;
  LBAudioCapture *_audioCapture;
  BOOL _shouldEnableAudioCapture;
}

@property (weak, nonatomic) NSObject<LBLocalSpeechRecognizerClientDelegate> *delegate;
@property (retain, nonatomic) NSString *uuidString;
@property (retain, nonatomic) NSString *xpcConnectionUUIDString;
@property (retain, nonatomic) NSString *requestId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)isInstalledFromStatusString:(id)string;

/* instance methods */
- (id)initWithDelegate:(id)delegate xpcListenerEndpoint:(id)endpoint audioCapture:(id)capture;
- (id)initWithDelegate:(id)delegate;
- (void)dealloc;
- (void)setLocalSpeechRecognizerClientDelegate:(id)delegate;
- (void)preheatLocalSpeechRecognitionWithLanguage:(id)language source:(unsigned long long)source;
- (void)startDeliverLocalSpeechRecognitionResultsWithSettings:(id)settings;
- (void)startSpeechRecognitionResultsWithSettings:(id)settings;
- (void)stopLocalSpeechRecognitionTaskWithReason:(unsigned long long)reason;
- (void)stopLocalSpeechRecognitionTaskWithReason:(unsigned long long)reason requestId:(id)id;
- (void)stopSpeechRecognitionTaskWithReason:(unsigned long long)reason requestId:(id)id;
- (void)stopSpeechRecognitionTaskWithReason:(unsigned long long)reason requestId:(id)id completion:(id /* block */)completion;
- (void)stopSpeechRecognitionTaskAndInvalidateWithReason:(unsigned long long)reason requestId:(id)id completion:(id /* block */)completion;
- (void)_stopSpeechRecognitionTaskWithReason:(unsigned long long)reason requestId:(id)id shouldInvalidateAfterStop:(BOOL)stop completion:(id /* block */)completion;
- (void)disableLocalSpeechRecognitionForRequestId:(id)id;
- (void)pauseLocalSpeechRecognitionForRequestId:(id)id;
- (void)resumeLocalRecognitionWithRequestId:(id)id prefixText:(id)text postfixText:(id)text selectedText:(id)text;
- (void)resetCacheAndCompileAllAssets;
- (void)sendSpeechCorrectionInfo:(id)info interactionIdentifier:(id)identifier;
- (void)updateTCUState:(id)tcustate;
- (void)invalidate;
- (void)_invalidate;
- (void)localSpeechServiceDidReceivedPartialResultWithRequestId:(id)id language:(id)language tokens:(id)tokens;
- (void)localSpeechServiceDidReceivedPartialResultWithRequestId:(id)id language:(id)language tokens:(id)tokens metadata:(id)metadata;
- (void)localSpeechServiceDidReceivedPartialResultWithRequestId:(id)id language:(id)language speechPackage:(id)package metadata:(id)metadata;
- (void)localSpeechServiceDidReceivedFinalResultCandidateWithRequestId:(id)id speechPackage:(id)package;
- (void)localSpeechServiceDidReceivedVoiceCommandCandidateWithRequestId:(id)id speechPackage:(id)package metadata:(id)metadata;
- (void)localSpeechServiceDidReceivedFinalResultWithRequestId:(id)id speechPackage:(id)package;
- (void)localSpeechServiceDidReceivedFinalResultWithRequestId:(id)id speechPackage:(id)package metadata:(id)metadata;
- (void)localSpeechServiceDidReceivedEagerRecognitionCandidateWithRequestId:(id)id rcId:(unsigned long long)id speechPackage:(id)package duration:(double)duration;
- (void)localSpeechServiceDidReceivedEagerRecognitionCandidateWithRequestId:(id)id rcId:(unsigned long long)id speechPackage:(id)package duration:(double)duration metadata:(id)metadata;
- (void)localSpeechServiceDidReceivedEagerResultWithRequestId:(id)id rcId:(unsigned long long)id shouldAccept:(BOOL)accept mitigationSignal:(BOOL)signal featuresToLog:(id)log;
- (void)localSpeechServiceDidCompletionRecognitionWithStatistics:(id)statistics requestId:(id)id endpointMode:(long long)mode error:(id)error;
- (void)localSpeechServiceDidReceivedVoiceIdScoreCard:(id)card;
- (void)localSpeechServiceDidReceiveTRPCandidatePackage:(id)package;
- (void)localSpeechServiceDidReceiveContinuityEndDetected:(id)detected;
- (void)localSpeechServiceDidReceiveTCUStateUpdate:(id)update;
- (void)localSpeechServiceDidReceiveTRPDetected:(id)trpdetected;
- (void)localSpeechServiceDidDetectedFinalEndpoint;
- (void)localSpeechServiceRequestAttentionAssetDownload;
- (id)_newConnection;
- (id)_connection;
- (id)_service;
@end

#endif /* LBLocalSpeechRecognizerClient_h */
