//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.21.3.0.0
//
#ifndef LBAttendingStatesServiceClient_h
#define LBAttendingStatesServiceClient_h
@import Foundation;

#include "LBAttendingStatesService-Protocol.h"
#include "LBAttendingStatesServiceDelegate-Protocol.h"

@class NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface LBAttendingStatesServiceClient : NSObject<LBAttendingStatesServiceDelegate, LBAttendingStatesService>

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (retain, nonatomic) id remoteObjectProxy;
@property (weak, nonatomic) NSObject<LBAttendingStatesServiceDelegate> *delegate;
@property (retain, nonatomic) NSString *xpcConnectionUUIDString;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDelegate:(id)delegate;
- (void)dealloc;
- (void)startUpdateStates;
- (void)invalidate;
- (void)_invalidate;
- (void)siriPromptWillStart;
- (void)siriDidPrompt;
- (void)siriPromptWillStartWithRootRequestId:(id)id;
- (void)siriDidPromptWithRootRequestId:(id)id;
- (void)dismissAttending;
- (void)requestDismissed;
- (void)localAttendingWillStartWithRootRequestId:(id)id;
- (void)localAttendingStarted;
- (void)localAttendingStartedWithRootRequestId:(id)id;
- (void)localAttendingStoppedUnexpectedlyWithError:(id)error;
- (void)speechStartDetectedWithHostTime:(unsigned long long)time audioRecordType:(long long)type audioRecordDeviceId:(id)id;
- (void)speechStartDetectedWithShouldDuckTTS:(BOOL)tts;
- (void)speechRecognizerReadyForNewTurnWithSpeechStartDetectedAtHostTime:(unsigned long long)time audioRecordType:(long long)type audioRecordDeviceId:(id)id;
- (id)_newConnection;
- (id)_connection;
- (id)_service;
@end

#endif /* LBAttendingStatesServiceClient_h */
