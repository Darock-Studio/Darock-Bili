//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1852.4.7.0.3
//
#ifndef _CDUserContextService_h
#define _CDUserContextService_h
@import Foundation;

#include "NSXPCListenerDelegate-Protocol.h"
#include "_CDContextPersisting-Protocol.h"
#include "_CDInMemoryUserContext.h"
#include "_CDXPCEventPublisherDelegate-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSString, NSXPCListener, _CDXPCEventPublisher;
@protocol OS_dispatch_queue;

@interface _CDUserContextService : NSObject<NSXPCListenerDelegate, _CDXPCEventPublisherDelegate>

@property (retain, nonatomic) _CDInMemoryUserContext *userContext;
@property (retain, nonatomic) NSMutableSet *clients;
@property (retain, nonatomic) NSXPCListener *listener;
@property (retain, nonatomic) NSObject<_CDContextPersisting> *persistence;
@property (retain, nonatomic) NSMutableSet *openRegistrations;
@property (retain, nonatomic) NSMutableSet *firedRegistrations;
@property (retain, nonatomic) NSMutableDictionary *firedRegistrationInfos;
@property (retain, nonatomic) _CDXPCEventPublisher *mdcsEventPublisher;
@property (retain, nonatomic) _CDXPCEventPublisher *notificationEventPublisher;
@property (retain, nonatomic) NSMutableDictionary *mdcsEventSubscribersByToken;
@property (retain, nonatomic) NSMutableDictionary *notificationEventSubscribersByToken;
@property (retain, nonatomic) NSMutableDictionary *notificationEventSubscribersByClientIdentifier;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (nonatomic) BOOL remoteDevicesHaveBeenActivated;
@property (readonly, nonatomic) NSMutableDictionary *remoteDevicesByDeviceID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstanceWithPersistence:(id)persistence;
+ (id)sharedInstanceWithSharedMemoryStore:(id)store;

/* instance methods */
- (id)initWithListener:(id)listener withStorage:(id)storage withStore:(id)store;
- (id)initWithListener:(id)listener withPersistence:(id)persistence withStorage:(id)storage withStore:(id)store;
- (void)addOpenRegistration:(id)registration;
- (void)removeOpenRegistration:(id)registration;
- (id)obtainFiredRegistrationMatchingRegistration:(id)registration info:(id *)info;
- (void)informClientOfFiredRegistration:(id)registration info:(id)info;
- (void)regenerateState;
- (void)start;
- (void)deleteSavedData;
- (void)clientWasInterrupted:(id)interrupted;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)sendEvent:(id)event toProxy:(id)proxy handler:(id /* block */)handler;
- (void)sendEvent:(id)event toProxy:(id)proxy replyHandler:(id /* block */)handler;
- (void)sendEvent:(id)event toClient:(id)client handler:(id /* block */)handler;
- (void)sendEvent:(id)event toClient:(id)client replyHandler:(id /* block */)handler;
- (BOOL)setMappingObject:(id)object forContextualKeyPath:(id)path;
- (void)setToken:(unsigned long long)token forUserID:(unsigned int)id;
- (void)removeTokenForUserID:(unsigned int)id;
- (void)addProxyWithSourceDeviceUUID:(id)uuid;
- (void)setProxySourceDeviceUUID:(id)uuid forUserID:(unsigned int)id;
- (id)proxySourceDeviceUUIDForUserID:(unsigned int)id;
- (id)subscriberForSourceDeviceUUID:(id)uuid;
- (unsigned long long)tokenForSourceDeviceUUID:(id)uuid;
- (id)subscribersForClientIdentifier:(id)identifier;
- (void)fetchProxySourceDeviceUUIDFromSubscriber:(id)subscriber;
- (void)requestActivateDevicesFromAllSubscribersWithHandler:(id /* block */)handler;
- (void)requestActivateDevicesFromSubscriber:(id)subscriber withHandler:(id /* block */)handler;
- (void)addSubscriber:(id)subscriber;
- (void)removeSubscriberWithToken:(unsigned long long)token streamName:(id)name;
@end

#endif /* _CDUserContextService_h */
