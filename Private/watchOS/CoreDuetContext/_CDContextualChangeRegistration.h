//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1852.4.7.0.3
//
#ifndef _CDContextualChangeRegistration_h
#define _CDContextualChangeRegistration_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "_CDContextualPredicate.h"

@class NSString;

@interface _CDContextualChangeRegistration : NSObject<NSCopying, NSSecureCoding>

@property (copy, nonatomic) NSString *identifier;
@property (retain, nonatomic) _CDContextualPredicate *predicate;
@property (retain, nonatomic) _CDContextualPredicate *dismissalPolicy;
@property (nonatomic) unsigned long long deviceSet;
@property (retain, nonatomic) NSString *clientIdentifier;
@property (nonatomic) BOOL mustWake;
@property (nonatomic) BOOL isDeserialized;
@property (copy, nonatomic) NSString *locationManagerEffectiveBundleID;
@property (copy, nonatomic) NSString *locationManagerEffectiveBundlePath;
@property (copy) id /* block */ informativeCallback;
@property (readonly, copy) id /* block */ callback;
@property (readonly, nonatomic) unsigned long long deviceTypes;
@property (readonly, nonatomic) unsigned int qualityOfService;

/* class methods */
+ (id)registrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate dismissalPolicy:(id)policy deviceSet:(unsigned long long)set mustWake:(BOOL)wake callback:(id /* block */)callback;
+ (id)registrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate dismissalPolicy:(id)policy deviceSet:(unsigned long long)set clientIdentifier:(id)identifier mustWake:(BOOL)wake callback:(id /* block */)callback;
+ (id)registrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate dismissalPolicy:(id)policy deviceSet:(unsigned long long)set clientIdentifier:(id)identifier mustWake:(BOOL)wake qualityOfService:(unsigned int)service callback:(id /* block */)callback;
+ (id)registrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate deviceTypes:(unsigned long long)types clientIdentifier:(id)identifier mustWake:(BOOL)wake callback:(id /* block */)callback;
+ (id)registrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate deviceTypes:(unsigned long long)types clientIdentifier:(id)identifier mustWake:(BOOL)wake qualityOfService:(unsigned int)service callback:(id /* block */)callback;
+ (id)localWakingRegistrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate callback:(id /* block */)callback;
+ (id)localWakingRegistrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate clientIdentifier:(id)identifier callback:(id /* block */)callback;
+ (id)localNonWakingRegistrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate callback:(id /* block */)callback;
+ (id)localNonWakingRegistrationWithIdentifier:(id)identifier contextualPredicate:(id)predicate clientIdentifier:(id)identifier callback:(id /* block */)callback;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithIdentifier:(id)identifier contextualPredicate:(id)predicate dismissalPolicy:(id)policy deviceSet:(unsigned long long)set deviceTypes:(unsigned long long)types clientIdentifier:(id)identifier mustWake:(BOOL)wake callback:(id /* block */)callback;
- (id)initWithIdentifier:(id)identifier contextualPredicate:(id)predicate dismissalPolicy:(id)policy deviceSet:(unsigned long long)set deviceTypes:(unsigned long long)types clientIdentifier:(id)identifier mustWake:(BOOL)wake qualityOfService:(unsigned int)service informativeCallback:(id /* block */)callback;
- (BOOL)isMultiDeviceRegistration;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)description;
@end

#endif /* _CDContextualChangeRegistration_h */
