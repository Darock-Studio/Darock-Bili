//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef VOSBluetoothManager_h
#define VOSBluetoothManager_h
@import Foundation;

#include "CBCentralManagerPrivateDelegate-Protocol.h"
#include "CBPairingAgentDelegate-Protocol.h"
#include "CBPeripheralDelegate-Protocol.h"

@class CBCentralManager, NSArray, NSDictionary, NSMutableDictionary, NSString;

@interface VOSBluetoothManager : NSObject<CBCentralManagerPrivateDelegate, CBPairingAgentDelegate, CBPeripheralDelegate> {
  /* instance variables */
  BOOL _wantsScanningEnabled;
  BOOL _wantsDiscoveryEnabled;
  NSDictionary *_brailleDriverDeviceDetectionInfo;
  struct BTLocalDeviceImpl * _localDevice;
  struct BTSessionImpl * _session;
  long long _available;
  BOOL _audioConnected;
  BOOL _scanningEnabled;
  struct BTDiscoveryAgentImpl * _discoveryAgent;
  struct BTPairingAgentImpl * _pairingAgent;
  NSMutableDictionary *_btAddrDict;
  NSMutableDictionary *_btDeviceDict;
  NSMutableDictionary *_btleDevices;
}

@property (retain, nonatomic) CBCentralManager *centralManager;
@property (copy, nonatomic) id /* block */ centralManagerReadyCallback;
@property (nonatomic) unsigned int authorizedServices;
@property (readonly, nonatomic) NSArray *connectingDevices;
@property (readonly, nonatomic) NSArray *pairedDevices;
@property (readonly, nonatomic) NSArray *pairedBrailleDevices;
@property (readonly, nonatomic) NSArray *pairedBTLEDevices;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (int)lastInitError;

/* instance methods */
- (BOOL)available;
- (id)init;
- (BOOL)_attach:(id)_attach;
- (BOOL)_setup:(struct BTSessionImpl *)_setup;
- (void)_cleanup:(BOOL)_cleanup;
- (void)dealloc;
- (void)_postNotificationWithArray:(id)array;
- (void)_postNotification:(id)notification;
- (void)postNotification:(id)notification;
- (void)postNotificationName:(id)name object:(id)object;
- (void)postNotificationName:(id)name object:(id)object error:(id)error;
- (long long)powerState;
- (BOOL)powered;
- (BOOL)setPowered:(BOOL)powered;
- (void)_powerChanged;
- (BOOL)enabled;
- (BOOL)setEnabled:(BOOL)enabled;
- (BOOL)isAnyoneScanning;
- (id)addDeviceIfNeeded:(struct BTDeviceImpl *)needed;
- (void)_removeDevice:(id)device;
- (BOOL)wasDeviceDiscovered:(id)discovered;
- (void)resetDeviceScanning;
- (BOOL)deviceScanningEnabled;
- (void)setDeviceScanningEnabled:(BOOL)enabled;
- (void)_setDiscoveryAgentScanning:(BOOL)scanning;
- (void)_restartScan;
- (void)_discoveryStateChanged;
- (BOOL)isDiscoverable;
- (void)setDiscoverable:(BOOL)discoverable;
- (BOOL)devicePairingEnabled;
- (void)setDevicePairingEnabled:(BOOL)enabled;
- (void)cancelPairing;
- (void)_removeDeviceFromBrailleCache:(id)cache;
- (BOOL)btleDeviceIsPaired:(id)paired;
- (void)unpairBTLEDevice:(id)btledevice;
- (void)unpairDevice:(id)device;
- (id)deviceForPeripheral:(id)peripheral;
- (BOOL)isPairedDeviceBrailleDisplay:(id)display;
- (BOOL)isValidBrailleDevice:(id)device;
- (void)setPincode:(id)pincode forDevice:(id)device;
- (void)acceptSSP:(int)ssp forDevice:(id)device;
- (void)connectDevice:(id)device withServices:(unsigned int)services;
- (void)connectDevice:(id)device;
- (BOOL)connectable;
- (void)setConnectable:(BOOL)connectable;
- (BOOL)_onlySensorsConnected;
- (BOOL)connected;
- (void)_connectedStatusChanged;
- (void)_connectabilityChanged;
- (BOOL)audioConnected;
- (void)setAudioConnected:(BOOL)connected;
- (BOOL)isServiceSupported:(unsigned int)supported;
- (unsigned int)authorizedServicesForDevice:(id)device;
- (id)alertControllerWithVOSBluetoothResult:(unsigned long long)result device:(id)device buttonHandler:(id /* block */)handler;
- (void)_updateCentralManagerScan;
- (void)centralManagerDidUpdateState:(id)state;
@end

#endif /* VOSBluetoothManager_h */
