//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 413.1.0.0.0
//
#ifndef TypistKeyboardDataInputUIClient_h
#define TypistKeyboardDataInputUIClient_h
@import Foundation;

#include "TypistKeyboardDataProtocol-Protocol.h"

@class NSString;

@interface TypistKeyboardDataInputUIClient : NSObject<TypistKeyboardDataProtocol>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)connectToRemoteKeyboard:(double)keyboard;
+ (void)disconnectFromRemoteKeyboard;
+ (void)tryConnection;
+ (id)getKeyboardLayout:(id)layout;
+ (id)getTIPreferences;
+ (id)getKeyboardUISettings;
+ (id)getSentenceBoundaryStrings;
+ (id)setTIPreferences:(id)tipreferences;
+ (id)setKeyboardUISettings:(id)uisettings;
+ (id)setKeyboards:(id)keyboards;
+ (id)addKeyboards:(id)keyboards;
+ (id)removeKeyboards:(id)keyboards;
+ (id)dismissOneTimeTIActions:(id)tiactions;
+ (BOOL)switchToKeyboard:(id)keyboard;
+ (BOOL)dismissKeyboard;
+ (BOOL)switchToPlane:(id)plane;
+ (id)getVisibleKeyplaneName;
+ (id)getKeyplaneDescription:(id)description;
+ (id)getAllCandidates;
+ (id)getVisibleCandidateList:(id)list;
+ (struct CGPoint { double x0; double x1; })getCandidateCenter:(id)center;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })getCandidateBarRect;
+ (BOOL)isExtendedCandidateViewMode;
+ (struct CGPoint { double x0; double x1; })getExtendedCandidateViewToggleButtonCenter;
+ (BOOL)hasMarkedText;
+ (id)markedText;
+ (void)showCandidateAtIndex:(long long)index;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })findKeyBoundsInKeyboard:(id)keyboard;
+ (id)addKeyboardPopupKeys:(id)keys keys:(id)keys inPlane:(id)plane addTo:(id)to keyplaneKeycaps:(id)keycaps;
+ (struct CGPoint { double x0; double x1; })centerOfKey:(struct CGPoint { double x0; double x1; })key withOffset:(struct CGPoint { double x0; double x1; })offset;
+ (struct CGPoint { double x0; double x1; })floatingKeyboardDraggablePoint;
+ (id)generateKeyplaneSwitchTable:(id)table;
+ (id)generateKeyplaneSwitchTableFor10Key:(id)key;
+ (struct CGPoint { double x0; double x1; })getCandidateCenterAtIndex:(long long)index;
+ (id)getRepresentedStringFromKey:(id)key;
@end

#endif /* TypistKeyboardDataInputUIClient_h */
