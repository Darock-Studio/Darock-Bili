//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 413.1.0.0.0
//
#ifndef TypistKeyboard_h
#define TypistKeyboard_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"

@class NSNumber, NSString;

@interface TypistKeyboard : NSObject<NSSecureCoding>

@property (copy, nonatomic) NSNumber *typeInterval;
@property (copy, nonatomic) NSNumber *touchMajorRadius;
@property (copy, nonatomic) NSString *keyboardID;
@property (copy, nonatomic) NSNumber *pressDuration;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)dealloc;
- (id)init:(id)init;
- (id)init:(id)init options:(id)options;
- (id)init:(id)init options:(id)options locale:(id)locale;
- (id)setupKeyboardInfo:(id)info options:(id)options;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_determineTransformationinFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame segmentStart:(double)start totalSegmentWidth:(unsigned long long)width scale:(double)scale characterHeight:(double)height characterWidth:(double)width dimensions:(id)dimensions;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_determineHandwritingBound;
- (id)generateHandwritingStream:(id)stream inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame isPencil:(BOOL)pencil;
- (id)generateHandwritingStream:(id)stream inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame isPencil:(BOOL)pencil rotationBias:(double)bias;
- (id)_convertCollationCharacters:(id)characters;
- (id)generateHandwritingStream:(id)stream inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame isPencil:(BOOL)pencil rotationBias:(double)bias isCursive:(BOOL)cursive;
- (void)typeKeystrokeStream:(id)stream completion:(id /* block */)completion;
- (void)typeKeystrokeStream:(id)stream;
- (id)generateScribbleStream:(id)stream inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)_generateScribbleStream:(id)stream inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame dimensions:(id)dimensions;
- (void)scribbleString:(id)string inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame typeInterval:(id)interval;
- (void)scribbleString:(id)string inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame drawingSpeedRate:(double)rate typeInterval:(id)interval;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* TypistKeyboard_h */
