//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 101.40.6.0.0
//
#ifndef MSCMSSignedData_h
#define MSCMSSignedData_h
@import Foundation;

#include "MSCMSMessage-Protocol.h"
#include "MSDecodeOptions.h"
#include "MSOID.h"

@class NSArray, NSData, NSMutableSet, NSNumber, NSSet, NSString;

@interface MSCMSSignedData : NSObject<MSCMSMessage>

@property (retain) NSNumber *version;
@property (retain) NSArray *signers;
@property (retain) NSSet *digestAlgorithms;
@property (retain) MSDecodeOptions *options;
@property BOOL contentChanged;
@property BOOL detached;
@property (retain) NSMutableSet *certificates;
@property (readonly) MSOID *type;
@property (retain, nonatomic) NSData *dataContent;
@property (retain) NSObject<MSCMSMessage> *embeddedContent;
@property (retain) MSOID *contentType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)decodeMessageSecurityObject:(id)object options:(id)options error:(id *)error;
+ (BOOL)isImplementedInObjectiveC;

/* instance methods */
- (void)addCounterSignerCertificates:(id)certificates mode:(unsigned long long)mode error:(id *)error;
- (BOOL)addCertificatesForSigner:(id)signer mode:(unsigned long long)mode error:(id *)error;
- (id)initWithDataContent:(id)content isDetached:(BOOL)detached signer:(id)signer error:(id *)error;
- (id)initWithDataContent:(id)content isDetached:(BOOL)detached signer:(id)signer additionalCertificates:(id)certificates error:(id *)error;
- (id)initWithDataContent:(id)content isDetached:(BOOL)detached signer:(id)signer signerChainMode:(unsigned long long)mode error:(id *)error;
- (id)initWithEmbeddedContent:(id)content signer:(id)signer error:(id *)error;
- (id)initWithEmbeddedContent:(id)content signer:(id)signer additionalCertificates:(id)certificates error:(id *)error;
- (id)initWithEmbeddedContent:(id)content signer:(id)signer signerChainMode:(unsigned long long)mode error:(id *)error;
- (id)initCertsOnlyWithCertificates:(id)certificates error:(id *)error;
- (void)addSigner:(id)signer;
- (void)addSigner:(id)signer withCertificates:(id)certificates;
- (BOOL)addSigner:(id)signer withChainMode:(unsigned long long)mode error:(id *)error;
- (void)removeSignerCertificatesWithIndexes:(id)indexes;
- (void)removeSignersWithIndexes:(id)indexes error:(id *)error;
- (void)removeSignersWithCertificate:(struct __SecCertificate *)certificate error:(id *)error;
- (void)removeSignersWithEmailAddress:(id)address error:(id *)error;
- (void)removeSignersWithIdentity:(struct __SecIdentity *)identity error:(id *)error;
- (struct __SecCertificate *)getSignerCertificate:(unsigned long long)certificate error:(id *)error;
- (BOOL)verifySignatures:(id *)signatures;
- (BOOL)verifySignaturesAndSignersWithPolicies:(id)policies verifyTime:(id)time anchorCertificates:(id)certificates error:(id *)error;
- (BOOL)verifySignaturesAndSignersWithPolicies:(id)policies verifyTime:(id)time error:(id *)error;
- (BOOL)checkSignedPerRFC5652:(id *)rfc5652;
- (void)addDigestAlgorithmFromSigner:(id)signer;
- (id)calculateContentDigestWithAlgorithm:(id)algorithm error:(id *)error;
- (id)encodeMessageSecurityObject:(id *)object;
@end

#endif /* MSCMSSignedData_h */
