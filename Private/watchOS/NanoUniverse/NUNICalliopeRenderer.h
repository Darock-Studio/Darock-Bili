//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NUNICalliopeRenderer_h
#define NUNICalliopeRenderer_h
@import Foundation;

#include "NUNIRenderer.h"
#include "NUNCalliopeOffscreen.h"
#include "NUNICalliopeResourceManager.h"
#include "NUNICalliopeTextureGroup.h"

@class CALayer;
@protocol MTLDevice, NUNIRendererOptions, [3@"<MTLBuffer>"], [3@"<MTLTexture>"], {?="texture"@"<MTLTexture>""levels"[16{?="texture"@"<MTLTexture>""numThreadgroups"{?="width"Q"height"Q"depth"Q}}]"numLevels"Q};

@interface NUNICalliopeRenderer : NUNIRenderer {
  /* instance variables */
  NSObject<MTLDevice> *_device;
  NUNICalliopeTextureGroup *_textureGroup;
  <MTLBuffer> * _renderUniformsBuffers[3];
  struct { int current; int capacity; } _renderUniformsBuffersCounts[3];
  NUNCalliopeOffscreen * _offscreenScenes[3];
  NUNCalliopeOffscreen *_offscreenBloom;
  NUNCalliopeOffscreen *_offscreenPosts;
  <MTLTexture> * _contentMaskTextures[3];
  IOSurface * _contentMaskSurfaces[3];
  CALayer *_contentMaskLayer;
  struct { <MTLTexture> *texture; struct { <MTLTexture> *texture; struct { unsigned long long width; unsigned long long height; unsigned long long depth; } numThreadgroups; } x[16] levels; unsigned long long numLevels; } _bloomChain;
  BOOL _bloomDownsampleUsingTileShaders;
  BOOL _bloomEnabled;
  BOOL _useLowerResolutionTextures;
  unsigned long long _frame;
  struct NUNICalliopeRendererState { struct NUNIViewport { int width; int height; } viewport; float cameraRoll; float aspect; float fovY; " cameraOffset; char x0; a x1; m x2; e x3; const a x4; P x5; out short x6; int x7; int128 x8; int x9; out in " x10; " cameraTarget; char x11; a x12; m x13; e x14; const a x15; U x16; p x17; char x18; a x19; m x20; e x21; const a x22; unsigned long x23; e x24; float x25; int128 x26; char x27; a x28; m x29; e x30; const a x31; F x32; out const wchar_t x33; a x34; const double x35; char x36; a x37; m x38; e x39; const a x40; unsigned long x41; out out k x42; atomic  x43; int128 x44; char {?=; out long x45; u x46; m x47; in short x48; char [4]}; a x49; m x50; e x51; const a x52; one way int x53; e x54; wchar_t x55; char {?=; out long x56; u x57; m x58; in short x59; char [4]}; a x60; m x61; e x62; const a x63; P x64; const out _Complex  x65; one way int x66; e x67; wchar_t x68; char {?=; out long x69; u x70; m x71; in short x72; " x73; x74[4] } x75; } _state;
  struct NUNICalliopeRenderUniforms { struct NUNICalliopeRenderUniforms_vsh { union { " sprite; char {?=; e x0; in int128 x1; e x2; const " x3; " axis0; a x4; x x5; int x6; short x7; 1 x8; wchar_t x9; out const long x10; double x11; atomic  x12; x x13; int x14; short x15; 0 x16; wchar_t x17; out const long x18; double x19; atomic  x20; x x21; int x22; short x23; 1 x24; wchar_t x25; out const long x26; double x27; unsigned long x28; int x29; g x30; h x31; int128 x32; long double x33; int x34; const e x35; char x36; int128 x37; int x38; out in " x39; float cameraForwardDotLight; } x40; struct { " lightDirection; void x0; int x1; e x2; wchar_t x3; P x4; out short x5; int x6; int128 x7; int x8; out in " x9; struct { x[2] columns; } rotationMatrix; " offset; a x10; short x11; p x12; e x13; char x14; int128 x15; int x16; in void x17; by ref  x18; e x19; short x20; out long x21; u x22; int128 x23; int x24; out in " x25; float x26; } x41; } x0; struct { x[4] columns; } projectionViewModelMatrix; } vsh; struct NUNICalliopeRenderUniforms_fsh { float opacity; float falloff; float falloffWidth; float falloffOverrideOpacity; float sunExpMin; float sunExpRange; float sunGlowRadiusScale; float cloudAlpha; float bloomStrength; } fsh; } _baseUniforms;
  struct NUNICalliopeRenderUniforms { struct NUNICalliopeRenderUniforms_vsh { union { " sprite; char {?=; e x0; in int128 x1; e x2; const " x3; " axis0; a x4; x x5; int x6; short x7; 1 x8; wchar_t x9; out const long x10; double x11; atomic  x12; x x13; int x14; short x15; 0 x16; wchar_t x17; out const long x18; double x19; atomic  x20; x x21; int x22; short x23; 1 x24; wchar_t x25; out const long x26; double x27; unsigned long x28; int x29; g x30; h x31; int128 x32; long double x33; int x34; const e x35; char x36; int128 x37; int x38; out in " x39; float cameraForwardDotLight; } x40; struct { " lightDirection; void x0; int x1; e x2; wchar_t x3; P x4; out short x5; int x6; int128 x7; int x8; out in " x9; struct { x[2] columns; } rotationMatrix; " offset; a x10; short x11; p x12; e x13; char x14; int128 x15; int x16; in void x17; by ref  x18; e x19; short x20; out long x21; u x22; int128 x23; int x24; out in " x25; float x26; } x41; } x0; struct { x[4] columns; } projectionViewModelMatrix; } vsh; struct NUNICalliopeRenderUniforms_fsh { float opacity; float falloff; float falloffWidth; float falloffOverrideOpacity; float sunExpMin; float sunExpRange; float sunGlowRadiusScale; float cloudAlpha; float bloomStrength; } fsh; } _dummyUniforms;
  unsigned int _rendererOptionsChangeSequence;
  union NUNICalliopePipelineConstants { struct {   bloomRadius;   bloomStrength;   bloomThreshold;   sunDistance;   sunEquatorialRadius;   sunGlowRadiusScale;   sunExpMin;   sunColorRed;   sunColorGreen;   sunColorBlue;   earthLightPower;   earthSpecularPower;   earthSpecularStrength;   earthSpecularBreakup;   earthSurfaceAmbientStrength;   earthIlluminationRed;   earthIlluminationGreen;   earthIlluminationBlue;   earthIlluminationStrength;   earthCloudShadowStrength;   earthCloudShadowEaseFrom;   earthCloudShadowEaseTo;   earthCloudAmbientStrength;   earthCloudAlpha;   earthAtmosphereRed;   earthAtmosphereGreen;   earthAtmosphereBlue;   earthAtmosphereStrength;   earthAtmosphereGlowExpMin;   earthAtmosphereTerminatorEaseFrom;   earthAtmosphereTerminatorEaseTo;   lunaLightPower;   lunaSpecularPower;   lunaSpecularStrength;   lunaSurfaceAmbientStrength; } x0;   x[35] values; } _pipelineConstants;
}

@property (readonly, nonatomic) NUNICalliopeResourceManager *resourceManager;
@property (retain, nonatomic) NSObject<NUNIRendererOptions> *rendererOptions;

/* instance methods */
- (id)initWithPixelFormat:(unsigned long long)format textureSuffix:(id)suffix rendererStyle:(unsigned long long)style;
- (void)dealloc;
- (void)discard;
- (void)purgeUnusedWithScene:(id)scene;
- (id)contentMaskLayer;
- (void)setContentMaskLayer:(id)layer;
- (void)_updateStateWithScene:(const struct NUNISceneStructure { float x0; float x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; BOOL x6; float x7; union { struct { float x0; float x1; } x0; } x8; float x9; float x10; float x11; float x12; } *)scene viewport:(struct NUNIViewport { int x0; int x1; })viewport;
- (unsigned long long)_computePatchSpheroidLodWithPositionInViewSpace:(const 1 *)space radius:(float)radius;
- (void)_updateTextureLODsForPatchSpheroid:(unsigned long long)spheroid uvRate:(const 2 *)rate;
- (void)_updateBaseUniformsForViewport:(struct NUNIViewport { int x0; int x1; })viewport;
- (id)getUniformsBufferForFrameBufferIndex:(unsigned long long)index pContents:(struct NUNICalliopeRenderUniforms * *)contents pOffset:(unsigned long long *)offset;
- (void)_renderOffscreenBackgroundWithRenderEncoder:(id)encoder frameBufferIndex:(unsigned long long)index;
- (void)_renderSunSprite:(struct NUNICalliopeRenderUniforms { struct NUNICalliopeRenderUniforms_vsh { union { struct { float x0; } x0; struct { struct { x0[2] } x0; float x1; } x1; } x0; struct { x0[4] } x1; } x0; struct NUNICalliopeRenderUniforms_fsh { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; } x1; } *)sprite frameBufferIndex:(unsigned long long)index renderEncoder:(id)encoder position:(float)position scale:(float)scale;
- (void)_renderSaturnRings:(struct NUNICalliopeRenderUniforms { struct NUNICalliopeRenderUniforms_vsh { union { struct { float x0; } x0; struct { struct { x0[2] } x0; float x1; } x1; } x0; struct { x0[4] } x1; } x0; struct NUNICalliopeRenderUniforms_fsh { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; } x1; } *)rings frameBufferIndex:(unsigned long long)index renderEncoder:(id)encoder forwardAngle:(float)angle position:(BOOL)position isRotated:(struct { x0[4] })rotated rotationMatrix:(float)matrix scale:(float)scale;
- (void)_renderPatchSpheroid:(const struct NUNISpheroidStructure { unsigned long long x0; float x1; float x2; float x3; float x4; struct  x5; float x6; float x7; float x8; float x9; float x10; unsigned long long x11; unsigned long long x12; union { struct { float x0; float x1; } x0; } x13; union { struct { float x0; float x1; } x0; } x14; BOOL x15; BOOL x16; } *)spheroid frustumCullingState:(struct { ] x0[2[4] ] x1[2[4] x2[5] } *)state drawableSize:(unsigned long long)size frameBufferIndex:(id)index;
- (void)_renderLocationDot:(const struct NUNISpheroidStructure { unsigned long long x0; float x1; float x2; float x3; float x4; struct  x5; float x6; float x7; float x8; float x9; float x10; unsigned long long x11; unsigned long long x12; union { struct { float x0; float x1; } x0; } x13; union { struct { float x0; float x1; } x0; } x14; BOOL x15; BOOL x16; } *)dot scene:(const struct NUNISceneStructure { float x0; float x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; BOOL x6; float x7; union { struct { float x0; float x1; } x0; } x8; float x9; float x10; float x11; float x12; } *)scene uniPtr:(struct NUNICalliopeRenderUniforms { struct NUNICalliopeRenderUniforms_vsh { union { struct { float x0; } x0; struct { struct { x0[2] } x0; float x1; } x1; } x0; struct { x0[4] } x1; } x0; struct NUNICalliopeRenderUniforms_fsh { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; } x1; } *)ptr viewport:(struct NUNIViewport { int x0; int x1; })viewport renderEncoder:(id)encoder;
- (void)_renderSpriteSpheroid:(const struct NUNISpheroidStructure { unsigned long long x0; float x1; float x2; float x3; float x4; struct  x5; float x6; float x7; float x8; float x9; float x10; unsigned long long x11; unsigned long long x12; union { struct { float x0; float x1; } x0; } x13; union { struct { float x0; float x1; } x0; } x14; BOOL x15; BOOL x16; } *)spheroid frameBufferIndex:(unsigned long long)index renderEncoder:(id)encoder;
- (void)_renderOffscreenSceneWithScene:(const struct NUNISceneStructure { float x0; float x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; BOOL x6; float x7; union { struct { float x0; float x1; } x0; } x8; float x9; float x10; float x11; float x12; } *)scene spheroids:(id)spheroids viewport:(struct NUNIViewport { int x0; int x1; })viewport commandBuffer:(id)buffer frameBufferIndex:(unsigned long long)index drawableTexture:(id)texture;
- (id)_getOrCreateOffscreenBloomWithViewport:(struct NUNIViewport { int x0; int x1; })viewport;
- (void)_renderOffscreenBloomTextureUsingTileShaderWithViewport:(struct NUNIViewport { int x0; int x1; })viewport renderEncoder:(id)encoder;
- (void)_renderOffscreenBloomTextureWithViewport:(struct NUNIViewport { int x0; int x1; })viewport sceneTexture:(id)texture commandBuffer:(id)buffer;
- (void)_setupBloomChainWithViewport:(struct NUNIViewport { int x0; int x1; })viewport bloomTexture:(id)texture;
- (void)_computeBloomChainTextures:(id)textures;
- (void)_renderOffscreenPostWithScene:(const struct NUNISceneStructure { float x0; float x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; BOOL x6; float x7; union { struct { float x0; float x1; } x0; } x8; float x9; float x10; float x11; float x12; } *)scene viewport:(struct NUNIViewport { int x0; int x1; })viewport commandBuffer:(id)buffer frameBufferIndex:(unsigned long long)index;
- (void)renderOffscreenWithScene:(id)scene viewport:(struct NUNIViewport { int x0; int x1; })viewport commandBuffer:(id)buffer;
- (void)renderWithScene:(id)scene viewport:(struct NUNIViewport { int x0; int x1; })viewport commandBuffer:(id)buffer passDescriptor:(id)descriptor;
- (void)prepareWorldSpaceFrustumWithTransform:(const struct { x0[4] } *)transform withState:(struct { ] x0[2[4] ] x1[2[4] x2[5] } *)state;
- (void)prepareObjectSpaceFrustumWithTransform:(const struct { x0[4] } *)transform withState:(struct { ] x0[2[4] ] x1[2[4] x2[5] } *)state;
- (6)buildFrustumPlane:p2:p3:;
- (int)classifyObjectBoundingBoxVersusFrustum:(const 1 *)frustum max:(const 2 *)max withState:(const struct { ] x0[2[4] ] x1[2[4] x2[5] } *)state;
- (BOOL)isObjectBoundingBoxInsideOrIntersectingFrustum:(const 1 *)frustum max:(const 2 *)max withState:(const struct { ] x0[2[4] ] x1[2[4] x2[5] } *)state;
- (id)spheroidAtPoint:(id)point scene:(struct NUNIViewport { int x0; int x1; })scene;
@end

#endif /* NUNICalliopeRenderer_h */
