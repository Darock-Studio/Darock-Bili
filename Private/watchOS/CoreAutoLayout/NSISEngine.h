//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 32.0.0.0.0
//
#ifndef NSISEngine_h
#define NSISEngine_h
@import Foundation;

#include "NSISObjectiveLinearExpression.h"
#include "NSISVariable.h"
#include "NSISVariableDelegate-Protocol.h"
#include "NSISVariableObservation.h"
#include "_NSISVariableObservable.h"

@class NSHashTable, NSMapTable, NSMutableArray, NSMutableDictionary, NSString, NSThread;
@protocol NSISEngineDelegate, NSObservable;

@interface NSISEngine : NSObject<NSISVariableDelegate> {
  /* instance variables */
  NSMutableArray *_pendingRemovals;
  NSHashTable *_pendingMarkerDelegates;
  NSObject<NSObservable> *_variableChangeTransactionSignal;
  NSMapTable *_variableObservables;
  _NSISVariableObservable *_dirtyObservables;
  NSMapTable *_brokenConstraintPositiveErrors;
  NSMapTable *_brokenConstraintNegativeErrors;
  id /* block */ _unsatisfiabilityHandler;
  unsigned long long _pivotCount;
  NSMutableDictionary *_recordedOperations;
  NSThread *_allowedBGThread;
  int _automaticOptimizationDisabledCount;
  int _engineDelegateCallsDisabledCount;
  int _variableDelegateCallsDisabledCount;
  unsigned int _totalChangeCount;
  unsigned int _changeCountAtLastOptimization;
  BOOL _accumulatingRemovals;
  BOOL _engineNeedsOptimization;
  BOOL _allowUnoptimizedReads;
  BOOL _accessedFromMainThread;
  BOOL _engineNeedsRebuildFromConstraints;
  BOOL _changeNotificationsDirty;
  struct NSISObjectTable * _variablesObservations;
  NSISVariableObservation *_dirtyVariableObservations;
  NSMapTable *_rows;
  struct { struct  *blocks; unsigned long long blocksCount; unsigned long long blocksCapacity; struct { union { unsigned long long _data; unsigned long long *_buckets; } x0; unsigned int _bucketCount; unsigned int _popCount; } freeIndexes; } _engineVarTable;
  struct { struct  *blocks; unsigned long long blocksCount; unsigned long long blocksCapacity; struct { union { unsigned long long _data; unsigned long long *_buckets; } x0; unsigned int _bucketCount; unsigned int _popCount; } freeIndexes; } _rowTables[2];
  struct { struct  *blocks; unsigned long long blocksCount; unsigned long long blocksCapacity; struct { union { unsigned long long _data; unsigned long long *_buckets; } x0; unsigned int _bucketCount; unsigned int _popCount; } freeIndexes; } _colTables[2];
  NSISVariable *_headForObjectiveRow;
  struct { NSISEngine *engine; struct  *storage; } _objectiveRow;
  NSISVariable *_placeholderHeadForExpressionBeingAdded;
}

@property (retain) NSMutableArray *variablesWithValueRestrictionViolations;
@property (retain) NSISVariable *artificialRowHead;
@property (retain) NSISVariable *artificialObjectiveRowHead;
@property (retain) NSISObjectiveLinearExpression *artificialObjectiveRowBody;
@property NSObject<NSISEngineDelegate> *delegate;
@property BOOL shouldIntegralize;
@property BOOL revertsAfterUnsatisfiabilityHandler;
@property (readonly) unsigned long long variableChangeCount;
@property (readonly) BOOL optimizationInProgress;
@property (nonatomic) struct CGSize { double x0; double x1; } engineScalingCoefficients;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_dbg_anyEngineContainsVariable:(id)variable;
+ (void)setEnableEngineTrace:(BOOL)trace;
+ (BOOL)enableEngineTrace;
+ (id)traceFileSuffix;
+ (void)setTraceFileSuffix:(id)suffix;
+ (void)setLogOnInvalidUseFromBGThread:(BOOL)bgthread;

/* instance methods */
- (id)_brokenConstraintPositiveErrorsIfAvailable;
- (id)_brokenConstraintNegativeErrorsIfAvailable;
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)observable;
- (id)nsis_descriptionOfVariable:(id)variable;
- (int)nsis_orientationHintForVariable:(id)variable;
- (double)integralizationAdjustmentForMarker:(id)marker;
- (BOOL)isTrackingVariableChanges;
- (void)performPendingChangeNotifications;
- (void)performPendingChangeNotificationsForItem:(id)item;
- (void)performModifications:(id /* block */)modifications withUnsatisfiableConstraintsHandler:(id /* block */)handler;
- (id)init;
- (void)dealloc;
- (struct { unsigned int x0; })engineVarIndexForVariable:(id)variable;
- (id)variableForEngineVarIndex:(struct { unsigned int x0; })index;
- (int)valueRestrictionForEngineVarIndex:(struct { unsigned int x0; })index;
- (void)beginRecording;
- (id)recordedCommandsData;
- (unsigned long long)replayCommandsData:(id)data verifyingIntegrity:(BOOL)integrity;
- (unsigned long long)optimize;
- (unsigned long long)_optimizeWithoutRebuilding;
- (void)withBehaviors:(unsigned long long)behaviors performModifications:(id /* block */)modifications;
- (void)withAutomaticOptimizationDisabled:(id /* block */)disabled;
- (void)withoutOptimizingAtEndRunBlockWithAutomaticOptimizationDisabled:(id /* block */)disabled;
- (void)withDelegateCallsDisabled:(id /* block */)disabled;
- (double)valueForVariable:(id)variable;
- (BOOL)hasValue:(double *)value forVariable:(id)variable;
- (BOOL)hasValueForPossiblyDeallocatedVariable:(id)variable;
- (double)valueForExpression:(id)expression;
- (BOOL)hasValue:(double *)value forExpression:(id)expression;
- (BOOL)containsVariable:(id)variable;
- (void)enumerateRows:(id /* block */)rows;
- (void)beginBookkeepingForVariableIfNeeded:(id)needed;
- (void)endBookkeepingForVariableIfUnused:(id)unused;
- (BOOL)tryToAddConstraintWithMarker:(id)marker expression:(id)expression integralizationAdjustment:(double)adjustment mutuallyExclusiveConstraints:(id *)constraints;
- (BOOL)tryToAddConstraintWithMarker:(id)marker expression:(id)expression mutuallyExclusiveConstraints:(id *)constraints;
- (void)addVariableToBeOptimized:(id)optimized priority:(double)priority;
- (void)removeVariableToBeOptimized:(id)optimized priority:(double)priority;
- (void)changeVariableToBeOptimized:(id)optimized fromPriority:(double)priority toPriority:(double)priority;
- (BOOL)containsConstraintWithMarker:(id)marker;
- (void)removeConstraintWithMarker:(id)marker;
- (void)constraintDidChangeSuchThatMarker:(id)marker shouldBeReplacedByMarkerPlusDelta:(double)delta;
- (BOOL)tryToChangeConstraintSuchThatMarker:(id)marker isReplacedByMarkerPlusDelta:(double)delta undoHandler:(id /* block */)handler;
- (id)observableForVariable:(id)variable;
- (void)removeObservableForVariable:(id)variable;
- (BOOL)hasObservableForVariable:(id)variable;
- (void)startObservingChangesForVariable:(id)variable;
- (void)stopObservingChangesForVariable:(id)variable;
- (id)variableChangeTransactionSignal;
- (BOOL)isObservingChangesForVariable:(id)variable;
- (struct { unsigned long long x0; unsigned long long x1; unsigned int x2; unsigned int x3; unsigned int x4; struct  * x5; } *)traceState;
- (id)constraints;
- (unsigned long long)rowCount;
- (unsigned long long)colCount;
- (unsigned long long)pivotCount;
- (BOOL)isOptimizationInProgress;
- (void)verifyInternalIntegrity;
- (id)constraintsAffectingValueOfVariable:(id)variable;
- (id)candidateRedundantConstraints;
- (BOOL)valueOfVariableIsAmbiguous:(id)ambiguous;
- (BOOL)exerciseAmbiguityInVariable:(id)variable;
- (id)allVariableValues;
@end

#endif /* NSISEngine_h */
