//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKSPSleepStore_h
#define HKSPSleepStore_h
@import Foundation;

#include "HKSPAnalyticsManager.h"
#include "HKSPObserverSet.h"
#include "HKSPSleepFocusConfiguration.h"
#include "HKSPSleepFocusModeBridge-Protocol.h"
#include "HKSPSleepFocusModeBridgeDelegate-Protocol.h"
#include "HKSPSleepStoreCache.h"
#include "HKSPSleepStoreExportedObject.h"
#include "HKSPSleepWidgetManager.h"
#include "HKSPSyncAnchorContainer.h"
#include "HKSPThrottler.h"
#include "HKSPXPCClientIdentifier.h"
#include "HKSPXPCConnectionProvider.h"
#include "HKSPXPCConnectionProviderDelegate-Protocol.h"
#include "NAScheduler-Protocol.h"

@class HKHealthStore, HKSleepHealthStore, NSString;

@interface HKSPSleepStore : NSObject<HKSPSleepFocusModeBridgeDelegate, HKSPXPCConnectionProviderDelegate>

@property (readonly, copy, nonatomic) HKSPXPCClientIdentifier *clientIdentifier;
@property (readonly, nonatomic) HKSleepHealthStore *sleepHealthStore;
@property (readonly, nonatomic) unsigned long long options;
@property (readonly, nonatomic) HKSPObserverSet *observers;
@property (readonly, nonatomic) HKSPXPCConnectionProvider *connectionProvider;
@property (readonly, nonatomic) HKSPSleepStoreCache *sleepStoreCache;
@property (readonly, nonatomic) NSObject<NAScheduler> *callbackScheduler;
@property (readonly, nonatomic) HKSPThrottler *reconnectThrottler;
@property (readonly, nonatomic) NSObject<HKSPSleepFocusModeBridge> *sleepFocusModeBridge;
@property (readonly, copy, nonatomic) id /* block */ currentDateProvider;
@property (readonly, nonatomic) HKSPSleepStoreExportedObject *sleepStoreExportedObject;
@property (retain, nonatomic) HKSPSyncAnchorContainer *syncAnchorContainer;
@property (readonly, nonatomic) HKSPSleepWidgetManager *widgetManager;
@property (readonly, nonatomic) BOOL hasSleepFocusMode;
@property (readonly, nonatomic) HKSPSleepFocusConfiguration *sleepFocusConfiguration;
@property (readonly, nonatomic) HKHealthStore *healthStore;
@property (readonly, nonatomic) HKSPAnalyticsManager *analyticsManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_sleepDisabledError;
+ (id)_updatedHistoricalSleepSchedulesFromSleepSchedule:(id)schedule options:(unsigned long long)options date:(id)date;
+ (id)_updatedHistoricalSleepGoalForSleepSchedule:(id)schedule options:(unsigned long long)options date:(id)date;

/* instance methods */
- (void)suggestedSleepScheduleWithProviders:(id)providers completion:(id /* block */)completion;
- (BOOL)_resultHasSchedule:(id)schedule;
- (BOOL)_resultScheduleMeetsDefaultGoal:(id)goal;
- (BOOL)_resultScheduleIsValid:(id)valid;
- (id)init;
- (id)initWithIdentifier:(id)identifier;
- (id)initWithHealthStore:(id)store;
- (id)initWithIdentifier:(id)identifier healthStore:(id)store;
- (id)initWithIdentifier:(id)identifier healthStore:(id)store options:(unsigned long long)options;
- (id)initWithConnectionProviderProvider:(id /* block */)provider identifier:(id)identifier healthStore:(id)store options:(unsigned long long)options;
- (id)initWithConnectionProviderProvider:(id /* block */)provider identifier:(id)identifier healthStore:(id)store options:(unsigned long long)options analyticsManager:(id)manager throttlerProvider:(id /* block */)provider callbackScheduler:(id)scheduler sleepFocusModeBridgeProvider:(id /* block */)provider widgetTimelineControllersProvider:(id /* block */)provider currentDateProvider:(id /* block */)provider;
- (BOOL)_cachingEnabled;
- (BOOL)_connectAutomatically;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)removeAllObservers;
- (void)reconnect;
- (void)connect;
- (void)connectSynchronously:(BOOL)synchronously;
- (void)_checkInWithCurrentSyncAnchor;
- (id)_getSleepScheduleFromServerDoSync:(BOOL)sync notify:(BOOL)notify;
- (id)_getSleepScheduleDoSync:(BOOL)sync notify:(BOOL)notify;
- (void)currentSleepScheduleWithCompletion:(id /* block */)completion;
- (id)currentSleepScheduleFuture;
- (id)currentSleepScheduleWithError:(id *)error;
- (id)upcomingScheduleOccurrenceAfterDate:(id)date error:(id *)error;
- (id)upcomingResolvedScheduleOccurrenceAfterDate:(id)date error:(id *)error;
- (id)upcomingScheduleOccurrenceAfterDate:(id)date alarmStatus:(long long *)status error:(id *)error;
- (id)upcomingResolvedScheduleOccurrenceAfterDate:(id)date alarmStatus:(long long *)status error:(id *)error;
- (void)upcomingScheduleOccurrenceAfterDate:(id)date completion:(id /* block */)completion;
- (id)upcomingScheduleOccurrenceAfterDateFuture:(id)future;
- (id)_getSleepSettingsFromServerDoSync:(BOOL)sync notify:(BOOL)notify;
- (id)_getSleepSettingsDoSync:(BOOL)sync notify:(BOOL)notify;
- (void)currentSleepSettingsWithCompletion:(id /* block */)completion;
- (id)currentSleepSettingsFuture;
- (id)currentSleepSettingsWithError:(id *)error;
- (id)_getSleepEventRecordFromServerDoSync:(BOOL)sync notify:(BOOL)notify;
- (id)_getSleepEventRecordDoSync:(BOOL)sync notify:(BOOL)notify;
- (void)currentSleepEventRecordWithCompletion:(id /* block */)completion;
- (id)currentSleepEventRecordFuture;
- (id)currentSleepEventRecordWithError:(id *)error;
- (void)sleepScheduleModelWithCompletion:(id /* block */)completion;
- (id)sleepScheduleModelFuture;
- (id)sleepScheduleModelWithError:(id *)error;
- (id)_getSleepModeFromServerDoSync:(BOOL)sync notify:(BOOL)notify;
- (id)_getSleepModeDoSync:(BOOL)sync notify:(BOOL)notify;
- (id)sleepModeFuture;
- (id)sleepModeOnFuture;
- (void)sleepModeWithCompletion:(id /* block */)completion;
- (void)sleepModeOnWithCompletion:(id /* block */)completion;
- (long long)sleepModeWithError:(id *)error;
- (BOOL)sleepModeOnWithError:(id *)error;
- (id)_getSleepWidgetStateFromServerDoSync:(BOOL)sync;
- (id)_getSleepWidgetStateDoSync:(BOOL)sync;
- (id)sleepWidgetStateFuture;
- (void)sleepWidgetStateWithCompletion:(id /* block */)completion;
- (long long)sleepWidgetStateWithError:(id *)error;
- (id)_getSleepScheduleStateFromServerDoSync:(BOOL)sync notify:(BOOL)notify;
- (id)_getSleepScheduleStateOnDoSync:(BOOL)sync notify:(BOOL)notify;
- (id)currentSleepScheduleStateFuture;
- (void)currentSleepScheduleStateWithCompletion:(id /* block */)completion;
- (unsigned long long)currentSleepScheduleStateWithError:(id *)error;
- (id)_saveCurrentSleepScheduleOnServer:(id)server options:(unsigned long long)options;
- (id)saveCurrentSleepSchedule:(id)schedule;
- (id)saveCurrentSleepSchedule:(id)schedule options:(unsigned long long)options context:(id)context;
- (id)_sendScheduleChangedAnalyticsWithContext:(id)context;
- (void)saveCurrentSleepSchedule:(id)schedule completion:(id /* block */)completion;
- (void)saveCurrentSleepSchedule:(id)schedule options:(unsigned long long)options completion:(id /* block */)completion;
- (void)saveCurrentSleepSchedule:(id)schedule options:(unsigned long long)options context:(id)context completion:(id /* block */)completion;
- (id)_writeHistoricalSchedule:(id)schedule options:(unsigned long long)options;
- (id)_saveCurrentSleepSettingsOnServer:(id)server options:(unsigned long long)options;
- (id)saveCurrentSleepSettings:(id)settings;
- (id)saveCurrentSleepSettings:(id)settings options:(unsigned long long)options;
- (void)saveCurrentSleepSettings:(id)settings completion:(id /* block */)completion;
- (void)saveCurrentSleepSettings:(id)settings options:(unsigned long long)options completion:(id /* block */)completion;
- (id)_prepareObjectForSave:(id)save options:(unsigned long long)options;
- (id)_saveCurrentSleepEventRecordOnServer:(id)server options:(unsigned long long)options;
- (id)saveCurrentSleepEventRecord:(id)record;
- (id)saveCurrentSleepEventRecord:(id)record options:(unsigned long long)options;
- (void)saveCurrentSleepEventRecord:(id)record completion:(id /* block */)completion;
- (void)saveCurrentSleepEventRecord:(id)record options:(unsigned long long)options completion:(id /* block */)completion;
- (id)_setSleepModeOnServer:(long long)server reason:(unsigned long long)reason;
- (void)setSleepModeOn:(BOOL)on completion:(id /* block */)completion;
- (void)setSleepModeOn:(BOOL)on reason:(unsigned long long)reason completion:(id /* block */)completion;
- (id)_confirmAwakeOnServer;
- (void)confirmAwakeWithCompletion:(id /* block */)completion;
- (id)_dismissGoodMorningOnServer;
- (void)dismissGoodMorningWithCompletion:(id /* block */)completion;
- (id)_dismissSleepLockOnServer;
- (void)dismissSleepLockWithCompletion:(id /* block */)completion;
- (void)sleepAlarmWasDismissedOnDate:(id)date completion:(id /* block */)completion;
- (void)sleepAlarmWasDismissedOnDate:(id)date source:(unsigned long long)source completion:(id /* block */)completion;
- (id)_sleepAlarmWasDismissedOnDateOnServer:(id)server source:(unsigned long long)source;
- (void)sleepAlarmWasSnoozedUntilDate:(id)date completion:(id /* block */)completion;
- (void)sleepAlarmWasSnoozedUntilDate:(id)date source:(unsigned long long)source completion:(id /* block */)completion;
- (id)_sleepAlarmWasSnoozedUntilDateOnServer:(id)server source:(unsigned long long)source;
- (void)sleepAlarmWasModifiedWithCompletion:(id /* block */)completion;
- (void)sleepAlarmWasModifiedFromSource:(unsigned long long)source completion:(id /* block */)completion;
- (id)_sleepAlarmWasModifiedOnServer:(unsigned long long)server;
- (void)skipUpcomingWakeUpAlarmForDate:(id)date completion:(id /* block */)completion;
- (void)setUpcomingWakeUpAlarmEnabled:(BOOL)enabled date:(id)date completion:(id /* block */)completion;
- (void)setWakeUpAlarmEnabled:(BOOL)enabled resolvedOccurrence:(id)occurrence date:(id)date completion:(id /* block */)completion;
- (id)_publishNotificationOnServerWithIdentifier:(id)identifier userInfo:(id)info;
- (void)publishNotificationWithIdentifier:(id)identifier userInfo:(id)info completion:(id /* block */)completion;
- (id)_setLockScreenOverrideStateOnServerWithState:(long long)state userInfo:(id)info;
- (void)setLockScreenOverrideState:(long long)state userInfo:(id)info completion:(id /* block */)completion;
- (void)createSleepFocusModeWithCompletion:(id /* block */)completion;
- (void)deleteSleepFocusModeWithCompletion:(id /* block */)completion;
- (id)_setWidgetOverrideStateOnServerWithState:(long long)state;
- (void)setWidgetOverrideState:(long long)state completion:(id /* block */)completion;
- (id)_clearWidgetOverrideOnServer;
- (void)clearWidgetOverrideWithCompletion:(id /* block */)completion;
- (id)_publishWakeUpResultsNotificationOnServer;
- (void)publishWakeUpResultsNotificationWithCompletion:(id /* block */)completion;
- (void)nextEventDueAfterDate:(id)date completion:(id /* block */)completion;
- (void)nextEventWithIdentifier:(id)identifier dueAfterDate:(id)date completion:(id /* block */)completion;
- (id)nextEventDueAfterDateFuture:(id)future;
- (id)nextEventDueAfterDate:(id)date error:(id *)error;
- (id)nextEventWithIdentifierFuture:(id)future dueAfterDate:(id)date;
- (id)nextEventWithIdentifier:(id)identifier dueAfterDate:(id)date error:(id *)error;
- (void)setSleepCoachingOnboardingCompletedVersion:(long long)version completion:(id /* block */)completion;
- (void)setSleepTrackingOnboardingCompletedVersion:(long long)version completion:(id /* block */)completion;
- (void)setSleepWindDownShortcutsOnboardingCompletedVersion:(long long)version completion:(id /* block */)completion;
- (void)_notifyObserversForChangedSleepSchedule:(id)schedule;
- (void)_notifyObserversForChangedSleepSettings:(id)settings;
- (void)_notifyObserversForChangedSleepEventRecord:(id)record;
- (void)_notifyObserversForChangedSleepMode:(long long)mode;
- (void)_notifyObserversForSleepEvent:(id)event;
- (void)_notifyObserversForChangedSleepScheduleState:(unsigned long long)state;
- (void)dealloc;
- (void)sleepFocusModeBridge:(id)bridge didUpdateSleepFocusConfiguration:(id)configuration;
- (BOOL)_observeSleepFocusMode;
- (BOOL)_reloadsWidgets;
@end

#endif /* HKSPSleepStore_h */
