//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKSPSleepScheduleModel_h
#define HKSPSleepScheduleModel_h
@import Foundation;

#include "HKSPSleepEventRecord.h"
#include "HKSPSleepSchedule.h"
#include "HKSPSleepSettings.h"
#include "NAEquatable-Protocol.h"
#include "NAHashable-Protocol.h"
#include "NSCopying-Protocol.h"

@class NSDate, NSString;

@interface HKSPSleepScheduleModel : NSObject<NSCopying, NAEquatable, NAHashable>

@property (readonly, nonatomic) BOOL goodMorningAlertNotificationEnabled;
@property (readonly, nonatomic) BOOL goodMorningScreenEnabled;
@property (readonly, nonatomic) BOOL chargingRemindersEnabled;
@property (readonly, copy, nonatomic) HKSPSleepSchedule *sleepSchedule;
@property (readonly, copy, nonatomic) HKSPSleepSettings *sleepSettings;
@property (readonly, copy, nonatomic) HKSPSleepEventRecord *sleepEventRecord;
@property (readonly, nonatomic) NSDate *lastModifiedDate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sleepScheduleModelWithSleepSchedule:(id)schedule sleepSettings:(id)settings sleepEventRecord:(id)record;
+ (id)_computeUpcomingDateIntervalForDate:(id)date;
+ (id)templateModelForSchedule:(id)schedule;

/* instance methods */
- (BOOL)goodMorningAlertNotificationsEnabledWithLogObject:(id)object;
- (BOOL)goodMorningScreenEnabledWithLogObject:(id)object;
- (BOOL)chargingRemindersEnabledWithLogObject:(id)object;
- (id)computeConfirmedWakeUpUntilDateForEarlyWakeUpDate:(id)date;
- (id)computeConfirmedWakeUpUntilDateForOverrideWakeUpDate:(id)date;
- (id)computeTemplateGenerationDateForCurrentDate:(id)date;
- (id)_computeOriginalWakeUpForOverrideDateHelper:(id)helper;
- (id)generateOverrideOccurrenceForCurrentDate:(id)date gregorianCalendar:(id)calendar;
- (id)generateOverrideOccurrenceForCurrentDate:(id)date gregorianCalendar:(id)calendar schedule:(id)schedule;
- (id)overrideOccurrenceGenerationResultForCurrentDate:(id)date gregorianCalendar:(id)calendar schedule:(id)schedule;
- (id)generateOverrideOccurrenceFromTemplateForCurrentDate:(id)date;
- (id)generateOverrideOccurrenceFromTemplateForCurrentDate:(id)date gregorianCalendar:(id)calendar;
- (id)generateOverrideOccurrenceFromTemplateForCurrentDate:(id)date gregorianCalendar:(id)calendar schedule:(id)schedule;
- (id)generateOverrideOccurrenceFromTemplateForCurrentDate:(id)date gregorianCalendar:(id)calendar mutableOccurrence:(id)occurrence;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEquivalentTo:(id)to;
- (BOOL)isEqual:(id)equal;
- (id)nextEventWithIdentifier:(id)identifier dueAfterDate:(id)date;
- (id)previousEventWithIdentifier:(id)identifier dueBeforeDate:(id)date;
- (id)nextEventDueAfterDate:(id)date;
- (id)upcomingEventsDueAfterDate:(id)date;
- (id)previousEventsDueBeforeDate:(id)date;
- (id)_upcomingEventsDueAfterDate:(id)date searchBackwards:(BOOL)backwards;
- (id)upcomingOccurrenceAfterDate:(id)date;
- (id)upcomingResolvedOccurrenceAfterDate:(id)date;
- (id)nextOccurrenceAfterDate:(id)date;
- (id)nextOccurrenceInInterval:(id)interval;
- (id)nextResolvedOccurrenceAfterDate:(id)date;
- (id)nextResolvedOccurrenceInInterval:(id)interval;
- (id)previousOccurrenceBeforeDate:(id)date;
- (id)previousResolvedOccurrenceBeforeDate:(id)date;
- (id)timelineForDate:(id)date;
- (id)_timelineResultsDueAfterDate:(id)date;
- (id)_upcomingResolvedOccurrencesDueAfterDate:(id)date searchBackwards:(BOOL)backwards;
- (long long)alarmStatusForOccurrence:(id)occurrence;
- (id)modelByApplyingChangesFromOccurrence:(id)occurrence;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)descriptionWithMultilinePrefix:(id)prefix;
- (id)descriptionBuilderWithMultilinePrefix:(id)prefix;
@end

#endif /* HKSPSleepScheduleModel_h */
