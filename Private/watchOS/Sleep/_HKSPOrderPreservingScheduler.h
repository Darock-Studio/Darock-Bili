//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef _HKSPOrderPreservingScheduler_h
#define _HKSPOrderPreservingScheduler_h
@import Foundation;

#include "HKSPMutexProvider-Protocol.h"
#include "HKSPScheduler-Protocol.h"
#include "NAScheduler-Protocol.h"

@class NSMutableArray, NSString;

@interface _HKSPOrderPreservingScheduler : NSObject<HKSPScheduler>

@property (readonly, nonatomic) NSMutableArray *tasks;
@property (readonly, nonatomic) BOOL taskInProgress;
@property (readonly, nonatomic) BOOL suspended;
@property (readonly, nonatomic) NSObject<NAScheduler> *scheduler;
@property (readonly, nonatomic) NSObject<HKSPMutexProvider> *mutexProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithScheduler:(id)scheduler mutexProvider:(id)provider;
- (id)afterDelay:(double)delay performBlock:(id /* block */)block;
- (void)performBlock:(id /* block */)block;
- (id)performCancelableBlock:(id /* block */)block;
- (void)suspend;
- (void)resume;
- (id)_scheduleTask:(id)task;
- (void)_scheduleNextTaskIfPossible;
- (void)_actuallyScheduleTask:(id)task;
- (void)_executeTask:(id)task;
- (void)_taskDidFinish;
@end

#endif /* _HKSPOrderPreservingScheduler_h */
