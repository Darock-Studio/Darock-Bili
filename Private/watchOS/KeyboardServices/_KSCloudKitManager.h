//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 157.200.0.0.0
//
#ifndef _KSCloudKitManager_h
#define _KSCloudKitManager_h
@import Foundation;

#include "_KSCloudKitManagerDelegate-Protocol.h"
#include "_KSRequestThrottle.h"

@class CKContainer, CKDatabase, CKRecordZone, NSString;
@protocol OS_dispatch_queue;

@interface _KSCloudKitManager : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_ckWorkQueue;
  NSObject<OS_dispatch_queue> *_dataQueue;
  _KSRequestThrottle *_accountChangeThrottle;
  _KSRequestThrottle *_fetchZoneThrottle;
}

@property (retain, nonatomic) CKContainer *cloudKitContainer;
@property (retain, nonatomic) CKDatabase *cloudKitDatabase;
@property (retain, nonatomic) CKDatabase *publicDatabase;
@property (readonly, nonatomic) NSString *recordZoneKey;
@property (readonly, nonatomic) NSString *subscriptionKey;
@property (readonly, nonatomic) NSString *lastKnownUserKey;
@property (nonatomic) BOOL recordZoneOperationInProgress;
@property (nonatomic) BOOL subscriptionOperationInProgress;
@property (retain, nonatomic) CKRecordZone *recordZone;
@property (weak, nonatomic) NSObject<_KSCloudKitManagerDelegate> *delegate;

/* class methods */
+ (id)prepareContainerForID:(id)id;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)initWithContainer:(id)container recordZoneName:(id)name;
- (id)initWithRecordZoneName:(id)name;
- (void)userIdentityWithResponse:(id /* block */)response;
- (BOOL)needsDeviceToDevice;
- (void)setupAccountDidChange:(BOOL)change;
- (void)accountStatusDidChange:(id)change;
- (void)identityUpdated:(id)updated;
- (void)shouldDetectAccountChangeWithResponse:(id /* block */)response;
- (void)queryAccountStatusWithCompletionHandler:(id /* block */)handler;
- (BOOL)isAccountAvailable;
- (void)_checkAccountStatusWithCompletionHandler:(id /* block */)handler withRetryCount:(unsigned long long)count;
- (void)setupRecordZoneWithCompletionHandler:(id /* block */)handler ignoreDefaults:(BOOL)defaults;
- (void)resetZoneWithDelete:(unsigned long long)delete withCompletionHandler:(id /* block */)handler;
- (id)recordWithName:(id)name type:(id)type cloudData:(id)data attributes:(id)attributes encryptedFields:(id)fields;
- (id)recordWithName:(id)name type:(id)type cloudData:(id)data attributes:(id)attributes;
- (id)recordWithName:(id)name type:(id)type attributes:(id)attributes encryptedFields:(id)fields;
- (id)recordWithName:(id)name type:(id)type attributes:(id)attributes;
- (id)recordIDForName:(id)name;
- (void)addOperation:(id)operation;
- (void)addOperation:(id)operation priority:(unsigned long long)priority;
- (void)setupSubscription;
- (void)updateRecords:(id)records deleteRecordIDs:(id)ids withPriority:(unsigned long long)priority completionHandler:(id /* block */)handler;
- (void)updateRecords:(id)records deleteRecordIDs:(id)ids withPriority:(unsigned long long)priority completionHandler:(id /* block */)handler retryCount:(unsigned long long)count;
- (id)resolveConflicts:(id)conflicts;
- (void)copyFieldsFromRecord:(id)record toRecord:(id)record;
- (void)fetchRecordsWithPriority:(unsigned long long)priority changeToken:(id)token completionHandler:(id /* block */)handler;
- (void)fetchRecordsWithPriority:(unsigned long long)priority changeToken:(id)token completionHandler:(id /* block */)handler retryCount:(unsigned long long)count;
- (void)_submitFetchRecordsOperation:(id)operation withPriority:(unsigned long long)priority changeToken:(id)token completionHandler:(id /* block */)handler retryCount:(unsigned long long)count;
- (void)fetchPublicRecordsWithNames:(id)names completionHandler:(id /* block */)handler;
- (void)_inconvenientOperation:(id)operation;
- (void)_ckFetchRecordZoneWithID:(id)id completionHandler:(id /* block */)handler;
- (void)_ckSaveRecordZone:(id)zone completionHandler:(id /* block */)handler;
- (void)_ckDeleteRecordZoneWithID:(id)id completionHandler:(id /* block */)handler;
@end

#endif /* _KSCloudKitManager_h */
