//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 660.60.3.0.0
//
#ifndef CacheDeleteServiceListener_h
#define CacheDeleteServiceListener_h
@import Foundation;

#include "CacheDeleteListener.h"
#include "CacheDeleteServiceInfo.h"
#include "CacheDeleteServiceProtocol-Protocol.h"

@class NSXPCListenerEndpoint;
@protocol OS_dispatch_queue;

@interface CacheDeleteServiceListener : CacheDeleteListener<CacheDeleteServiceProtocol>

@property (copy, nonatomic) id /* block */ purgeable;
@property (copy, nonatomic) id /* block */ purge;
@property (copy, nonatomic) id /* block */ periodic;
@property (copy, nonatomic) id /* block */ cancel;
@property (copy, nonatomic) id /* block */ notify;
@property (copy, nonatomic) id /* block */ callback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly) BOOL legacyCallbacks;
@property (readonly) BOOL anonymous;
@property (readonly, nonatomic) CacheDeleteServiceInfo *serviceInfo;
@property (readonly) NSXPCListenerEndpoint *endpoint;

/* class methods */
+ (id)cacheDeleteServiceListener:(id)listener options:(id)options;

/* instance methods */
- (id)initWithName:(id)name options:(id)options;
- (void)setPurgeable:(id /* block */)purgeable purge:(id /* block */)purge cancel:(id /* block */)cancel periodic:(id /* block */)periodic notify:(id /* block */)notify callback:(id /* block */)callback entitlements:(id)entitlements;
- (void)servicePurgeable:(int)purgeable info:(id)info replyBlock:(id /* block */)block;
- (void)servicePurge:(int)purge info:(id)info replyBlock:(id /* block */)block;
- (void)serviceCancelPurge:(id /* block */)purge;
- (void)servicePeriodic:(int)periodic info:(id)info replyBlock:(id /* block */)block;
- (void)servicePing:(id /* block */)ping;
- (void)serviceNotify:(id)notify replyBlock:(id /* block */)block;
- (void)setNotifyCallback:(id /* block */)callback;
- (void)serviceCallback:(id)callback replyBlock:(id /* block */)block;
@end

#endif /* CacheDeleteServiceListener_h */
