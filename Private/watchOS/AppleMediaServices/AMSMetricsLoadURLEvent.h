//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tools: [ld (607.2), ld (814.1), ld (902.8)]
//    - LC_SOURCE_VERSION: 7.2.10.0.0
//
#ifndef AMSMetricsLoadURLEvent_h
#define AMSMetricsLoadURLEvent_h
@import Foundation;

#include "AMSMetricsEvent.h"

@class NSArray, NSDictionary, NSString;

@interface AMSMetricsLoadURLEvent : AMSMetricsEvent

@property (copy, nonatomic) NSString *appleTimingApp;
@property (nonatomic) BOOL apsRelayAttempted;
@property (nonatomic) BOOL apsRelayDidFallback;
@property (nonatomic) BOOL apsRelaySucceeded;
@property (copy, nonatomic) NSString *buildVariant;
@property (retain, nonatomic) NSString *cellularDataBearerTechnology;
@property (copy, nonatomic) NSString *clientCorrelationKey;
@property (copy, nonatomic) NSString *clientError;
@property (nonatomic) double connectionEndTime;
@property (copy, nonatomic) NSString *connectionInterface;
@property (nonatomic) BOOL connectionReused;
@property (nonatomic) unsigned long long connectionStartNStatRXBytes;
@property (nonatomic) unsigned long long connectionStartNStatTXBytes;
@property (nonatomic) unsigned long long connectionStopNStatRXBytes;
@property (nonatomic) unsigned long long connectionStopNStatTXBytes;
@property (nonatomic) double connectionStartTime;
@property (copy, nonatomic) NSString *connectionType;
@property (nonatomic) double domainLookupEndTime;
@property (nonatomic) double domainLookupStartTime;
@property (nonatomic) BOOL DNUSubmissionAllowed;
@property (copy, nonatomic) NSString *DNSServers;
@property (copy, nonatomic) NSString *edgeNodeCacheStatus;
@property (copy, nonatomic) NSString *environmentDataCenter;
@property (nonatomic) double fetchStartTime;
@property (nonatomic) BOOL cachedResponse;
@property (copy, nonatomic) NSString *networkProtocolName;
@property (copy, nonatomic) NSArray *networkQualityReports;
@property (copy, nonatomic) NSString *originalApp;
@property (copy, nonatomic) NSString *radioType;
@property (copy, nonatomic) NSString *radioTechnology;
@property (nonatomic) unsigned long long redirectCount;
@property (nonatomic) double redirectEndTime;
@property (nonatomic) double redirectStartTime;
@property (nonatomic) unsigned long long requestMessageSize;
@property (nonatomic) double requestStartTime;
@property (copy, nonatomic) NSString *requestURL;
@property (copy, nonatomic) NSString *resolvedIPAddress;
@property (copy, nonatomic) NSString *responseDate;
@property (nonatomic) double responseEndTime;
@property (nonatomic) unsigned long long responseMessageSize;
@property (nonatomic) unsigned long long responseMessageSizeUncompressed;
@property (nonatomic) double responseStartTime;
@property (nonatomic) double secureConnectionStartTime;
@property (nonatomic) long long statusCode;
@property (copy, nonatomic) NSString *TIDState;
@property (nonatomic) BOOL TFOEnabled;
@property (nonatomic) BOOL TLSSessionTickets;
@property (nonatomic) unsigned long long urlCacheDiskCapacity;
@property (nonatomic) unsigned long long urlCacheMemoryCapacity;
@property (nonatomic) double urlCacheMaxCacheableEntrySizeRatio;
@property (copy, nonatomic) NSString *wt;
@property (nonatomic) double xpSessionDuration;
@property (nonatomic) BOOL xpSamplingForced;
@property (nonatomic) double xpSamplingPercentageUsers;
@property (nonatomic) double xpSamplingPercentageCachedResponses;
@property (copy, nonatomic) NSString *xxdc;
@property (readonly, copy, nonatomic) NSDictionary *metricsOverlay;

/* class methods */
+ (BOOL)isPerHostLoadURLSamplingEnabled:(id)enabled;
+ (BOOL)isPerHostLoadURLSamplingEnabled:(id)enabled perHostSamplingSuppressed:(out BOOL *)suppressed featureFlagEnabled:(out BOOL *)enabled;
+ (BOOL)shouldCollectMetricsForContext:(id)context;
+ (id)_propertyValueClassesForKnownProperties;
+ (id)_buildVariant;
+ (id)_DNSServerIPAddresses;
+ (id)_fetchNetworkQualityReports;
+ (id)_metricsDictionaryFromConfig:(id)config;
+ (id)_radioTypeStringValueFromRadioType:(int)type;
+ (id)_resolvedIPAddressFromTask:(id)task;
+ (double)_timingDataMetricToServerTimeInterval:(id)interval;
+ (double)_samplingPercentageForURLSessionTask:(id)task performanceDictionary:(id)dictionary;

/* instance methods */
- (id)initWithContext:(id)context;
- (void)_prepareEventWithContext:(id)context;
- (BOOL)isDNUSubmissionAllowed;
- (void)_addSharedURLCacheProperties;
@end

#endif /* AMSMetricsLoadURLEvent_h */
