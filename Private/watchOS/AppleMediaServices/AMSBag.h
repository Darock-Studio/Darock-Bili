//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tools: [ld (607.2), ld (814.1), ld (902.8)]
//    - LC_SOURCE_VERSION: 7.2.10.0.0
//
#ifndef AMSBag_h
#define AMSBag_h
@import Foundation;

#include "AMSBagDataSourceProtocol-Protocol.h"
#include "AMSBagProtocol-Protocol.h"
#include "AMSProcessInfo.h"

@class AMSBagCachedValueUpdateHandlers, AMSBagUnderlyingDataPersistence, NSDate, NSString;
@protocol OS_dispatch_queue;

@interface AMSBag : NSObject<AMSBagProtocol>

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *changeNotificationQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *persistenceQueue;
@property (readonly, nonatomic) AMSBagUnderlyingDataPersistence *persistence;
@property BOOL persistenceAPIWasCalled;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x0; } updateHandlerConsistencyLock;
@property (readonly, nonatomic) BOOL persistenceIsEnabled;
@property (retain, nonatomic) NSObject<AMSBagDataSourceProtocol> *dataSource;
@property (copy, nonatomic) AMSProcessInfo *processInfo;
@property (readonly, nonatomic) AMSBagCachedValueUpdateHandlers *updateHandlers;
@property (readonly, nonatomic) NSString *descriptionExtended;
@property (readonly, nonatomic) BOOL expired;
@property (readonly, nonatomic) NSDate *expirationDate;
@property (readonly, copy, nonatomic) NSString *profile;
@property (readonly, copy, nonatomic) NSString *profileVersion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)bagForProfile:(id)profile profileVersion:(id)version;
+ (id)bagForProfile:(id)profile profileVersion:(id)version processInfo:(id)info;
+ (id)bagForProfile:(id)profile profileVersion:(id)version processInfo:(id)info account:(id)account;
+ (id)bagCache;
+ (id)sharedPersistenceQueue;
+ (id)sharedPersistenceWithDefaultDirectory;
+ (unsigned long long)uninitializedToken;
+ (id)_bagForProfile:(id)profile profileVersion:(id)version processInfo:(id)info accountProvider:(id)provider;
+ (void)resetBagCache;

/* instance methods */
- (id)initWithDataSource:(id)source;
- (id)initWithDataSource:(id)source persistenceDirectoryURL:(id)url persistenceQueue:(id)queue changeHandlerQueue:(id)queue shouldConfigureDataSourceHandlers:(BOOL)handlers;
- (id)initWithDataSource:(id)source shouldConfigureDataSourceHandlers:(BOOL)handlers;
- (id)_initWithDataSource:(id)source persistence:(id)persistence persistenceQueue:(id)queue updateHandlers:(id)handlers shouldConfigureDataSourceHandlers:(BOOL)handlers;
- (BOOL)isExpired;
- (BOOL)isLoaded;
- (id)cachedValuesForKeys:(id)keys observationToken:(unsigned long long *)token updateHandler:(id /* block */)handler;
- (void)removeObserverWithToken:(unsigned long long)token;
- (void)createSnapshotWithCompletion:(id /* block */)completion;
- (void)setDefaultValue:(id)value forKey:(id)key;
- (id)arrayForKey:(id)key;
- (id)boolForKey:(id)key;
- (id)doubleForKey:(id)key;
- (id)integerForKey:(id)key;
- (id)stringForKey:(id)key;
- (id)URLForKey:(id)key;
- (id)URLForKey:(id)key account:(id)account;
- (id)dictionaryForKey:(id)key;
- (id)_temporaryDictionary;
- (void)_configureDataSourceHandlers;
- (void)_loadAndPersistBag;
- (void)_persistBagDictionary:(id)dictionary withIdentifier:(id)identifier partialIdentifier:(id)identifier expirationDate:(id)date onlyIfPreExisting:(BOOL)existing;
- (void)waitUntilPersistenceWorkComplete;
- (id)URLFromURLString:(id)urlstring;
- (id)URLFromURLString:(id)urlstring account:(id)account;
@end

#endif /* AMSBag_h */
