//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2200.4.3.7.0
//
#ifndef MTTimerScheduler_h
#define MTTimerScheduler_h
@import Foundation;

#include "MTAgentDiagnosticDelegate-Protocol.h"
#include "MTAgentNotificationListener-Protocol.h"
#include "MTNotificationCenter-Protocol.h"
#include "MTPersistence-Protocol.h"
#include "MTScheduledList.h"
#include "MTScheduledListDelegate-Protocol.h"
#include "MTSchedulingDelegate-Protocol.h"
#include "MTTaskScheduler-Protocol.h"
#include "MTTimerObserver-Protocol.h"
#include "MTTimerSchedulerDelegate-Protocol.h"
#include "MTTimerStorage-Protocol.h"
#include "NAScheduler-Protocol.h"

@class NSString;

@interface MTTimerScheduler : NSObject<MTTimerObserver, MTScheduledListDelegate, MTAgentDiagnosticDelegate, MTAgentNotificationListener>

@property (retain, nonatomic) NSObject<MTTimerStorage> *storage;
@property (retain, nonatomic) NSObject<MTNotificationCenter> *notificationCenter;
@property (readonly, nonatomic) MTScheduledList *scheduledTimers;
@property (retain, nonatomic) NSObject<NAScheduler> *serializer;
@property (readonly, copy, nonatomic) id /* block */ currentDateProvider;
@property (readonly, nonatomic) NSObject<MTSchedulingDelegate> *schedulingDelegate;
@property (readonly, nonatomic) NSObject<MTTaskScheduler> *taskScheduler;
@property (retain, nonatomic) NSObject<MTPersistence> *defaults;
@property (weak, nonatomic) NSObject<MTTimerSchedulerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_intervalToCheckForTimersToFireBeforeDate:(id)date;

/* instance methods */
- (id)initWithStorage:(id)storage notificationCenter:(id)center;
- (id)initWithStorage:(id)storage notificationCenter:(id)center scheduler:(id)scheduler defaults:(id)defaults;
- (id)initWithStorage:(id)storage notificationCenter:(id)center scheduler:(id)scheduler defaults:(id)defaults schedulingDelegate:(id)delegate taskScheduler:(id)scheduler currentDateProvider:(id /* block */)provider;
- (id)nextTimer;
- (id)nextTriggerDate;
- (void)rescheduleTimers;
- (void)rescheduleTimersWithCompletion:(id /* block */)completion;
- (void)_queue_rescheduleTimersWithCompletion:(id /* block */)completion;
- (void)scheduleTimers:(id)timers;
- (void)unscheduleTimers:(id)timers;
- (id)_queue_nextTimer;
- (void)_queue_scheduleTimers:(id)timers withCompletion:(id /* block */)completion;
- (void)_queue_unscheduleTimers:(id)timers;
- (void)scheduledListDidChange:(id)change withCompletion:(id /* block */)completion;
- (void)_queue_updatePersistentTimerForNextTimerWithCompletion:(id /* block */)completion;
- (void)_queue_unregisterTimer;
- (void)_queue_triggerDidFireForTimerWithCompletionBlock:(id /* block */)block;
- (void)_fireScheduledTimer:(id)timer firedDate:(id)date completionBlock:(id /* block */)block;
- (void)_queue_fireTriggeredTimersWithCompletionBlock:(id /* block */)block;
- (id)_queue_nextScheduledTimer;
- (id)_queue_lastTimerTriggerDate;
- (void)_queue_setLastTimerTriggerDate:(id)date;
- (void)printDiagnostics;
- (id)gatherDiagnostics;
- (BOOL)handlesNotification:(id)notification ofType:(long long)type;
- (void)handleNotification:(id)notification ofType:(long long)type completion:(id /* block */)completion;
- (void)source:(id)source didAddTimers:(id)timers;
- (void)source:(id)source didUpdateTimers:(id)timers;
- (void)source:(id)source didRemoveTimers:(id)timers;
- (void)source:(id)source didFireTimer:(id)timer;
- (void)source:(id)source didDismissTimer:(id)timer;
- (void)nextTimerDidChange:(id)change;
- (id)sourceIdentifier;
@end

#endif /* MTTimerScheduler_h */
