//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2200.4.3.7.0
//
#ifndef MTTimerDataSource_h
#define MTTimerDataSource_h
@import Foundation;

#include "MTObserverStore.h"
#include "MTTimerDuration.h"
#include "MTTimerManager.h"

@class NSArray, NSMutableArray;

@interface MTTimerDataSource : NSObject

@property (retain, nonatomic) MTTimerManager *timerManager;
@property (retain, nonatomic) MTObserverStore *observers;
@property (retain, nonatomic) NSMutableArray *timers;
@property (retain, nonatomic) NSMutableArray *activeTimers;
@property (retain, nonatomic) NSArray *defaultDurations;
@property (retain, nonatomic) NSArray *recentDurations;
@property (retain, nonatomic) NSArray *favoriteDurations;
@property (retain, nonatomic) MTTimerDuration *latestDuration;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x0; } timerLock;

/* instance methods */
- (id)initWithTimerManager:(id)manager;
- (void)registerObserver:(id)observer;
- (void)unregisterObserver:(id)observer;
- (void)_iterateObserversWithBlock:(id /* block */)block;
- (void)_registerForNotifications;
- (void)processRecentDurationsUpdated:(id)updated;
- (void)processFavoriteDurationsUpdated:(id)updated;
- (void)processLatestDurationsUpdatedWith:(id)with;
- (void)dealloc;
- (void)_handleTimerNotification:(id)notification block:(id /* block */)block;
- (void)_handleTimerDurationNotification:(id)notification block:(id /* block */)block;
- (void)_stateReset;
- (id)reloadTimers;
- (id)reloadTimersNotifyingObservers:(BOOL)observers;
- (void)reloadTimerDurations;
- (unsigned long long)numberOfTimers;
- (id)timerAtRow:(unsigned long long)row;
- (id)activeTimerAtRow:(unsigned long long)row;
- (unsigned long long)numberOfActiveTimers;
- (unsigned long long)rowForTimer:(id)timer;
- (unsigned long long)rowForTimerWithID:(id)id;
- (id)getDefaultDurations;
- (id)getFavoriteDurations;
- (id)getLatestDuration;
- (id)getRecentDurations;
- (id)addTimer:(id)timer;
- (id)addTimer:(id)timer reload:(BOOL)reload;
- (id)updateTimer:(id)timer;
- (id)updateTimer:(id)timer reload:(BOOL)reload;
- (id)removeTimer:(id)timer;
- (void)_withLock:(id /* block */)lock;
@end

#endif /* MTTimerDataSource_h */
