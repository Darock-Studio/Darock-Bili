//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2200.4.3.7.0
//
#ifndef MTTimerManager_h
#define MTTimerManager_h
@import Foundation;

#include "MTMetrics.h"
#include "MTTimerCache.h"
#include "MTTimerManagerExportedObject.h"
#include "MTTimerManagerIntentSupport-Protocol.h"
#include "MTTimerManagerProviding-Protocol.h"
#include "MTUserDefaultNotificationObserver-Protocol.h"
#include "MTXPCConnectionProvider.h"

@class NSNotificationCenter, NSString;

@interface MTTimerManager : NSObject<MTTimerManagerIntentSupport, MTTimerManagerProviding, MTUserDefaultNotificationObserver>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSObject<MTTimerManagerIntentSupport> *timerManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) MTTimerManagerExportedObject *exportedObject;
@property (readonly, nonatomic) MTXPCConnectionProvider *connectionProvider;
@property (retain, nonatomic) MTMetrics *metrics;
@property (retain, nonatomic) MTTimerCache *cache;
@property (retain, nonatomic) NSNotificationCenter *notificationCenter;
@property (readonly, nonatomic) id notificationObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)warmUp;
+ (double)defaultDuration;
+ (void)setDefaultDuration:(double)duration;

/* instance methods */
- (id)init;
- (id)initWithMetrics:(id)metrics;
- (id)initWithConnectionProvider:(id)provider metrics:(id)metrics;
- (id)initWithConnectionProvider:(id)provider metrics:(id)metrics notificationCenter:(id)center;
- (id)_initWithConnectionProvidingBlock:(id /* block */)block metrics:(id)metrics;
- (id)_initWithConnectionProvidingBlock:(id /* block */)block metrics:(id)metrics notificationCenter:(id)center;
- (void)dealloc;
- (void)checkIn;
- (void)reconnect;
- (void)_getCachedTimersWithFuture:(id)future finishBlock:(id /* block */)block;
- (id)timers;
- (id)nextTimer;
- (id)timerWithIdentifier:(id)identifier;
- (id)timersSync;
- (id)nextTimersForDate:(id)date maxCount:(unsigned long long)count;
- (id)addTimer:(id)timer;
- (id)_updateTimer:(id)timer doSynchronous:(BOOL)synchronous;
- (id)updateTimer:(id)timer;
- (id)removeTimer:(id)timer;
- (id)dismissTimerWithIdentifier:(id)identifier;
- (id)repeatTimerWithIdentifier:(id)identifier;
- (id)currentTimer;
- (id)_updateCurrentTimerWithState:(unsigned long long)state;
- (id)stopCurrentTimer;
- (id)pauseCurrentTimer;
- (id)resumeCurrentTimer;
- (id)_validateCanStartTimer:(id)timer;
- (id)_runningTimerFromCurrentTimer:(id)timer withDuration:(double)duration;
- (id)startCurrentTimerWithDuration:(double)duration;
- (id)getCurrentTimerSync;
- (BOOL)startCurrentTimerWithDurationSync:(double)sync;
- (BOOL)_updateCurrentTimerWithStateSync:(unsigned long long)sync;
- (BOOL)stopCurrentTimerSync;
- (BOOL)pauseCurrentTimerSync;
- (BOOL)resumeCurrentTimerSync;
- (void)loadAllDurationsWithCompletion:(id /* block */)completion;
- (id)recentDurations;
- (id)getQueryDurations:(id /* block */)durations withFuture:(id)future;
- (id)addRecentDuration:(id)duration;
- (id)removeRecentDuration:(id)duration;
- (id)defaultDurations;
- (id)favoriteDurations;
- (id)addFavoriteDuration:(id)duration;
- (id)removeFavoriteDuration:(id)duration;
- (id)latestDuration;
- (id)saveLatestDuration:(id)duration;
@end

#endif /* MTTimerManager_h */
