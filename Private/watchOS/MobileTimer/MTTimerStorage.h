//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2200.4.3.7.0
//
#ifndef MTTimerStorage_h
#define MTTimerStorage_h
@import Foundation;

#include "MTAgentDiagnosticDelegate-Protocol.h"
#include "MTApplicationWorkspaceObserverProtocol-Protocol.h"
#include "MTMetrics.h"
#include "MTObserverStore.h"
#include "MTPersistence-Protocol.h"
#include "MTTimer.h"
#include "MTTimerDurationManager.h"
#include "MTTimerMigrator.h"
#include "MTTimerScheduler.h"
#include "MTTimerSchedulerDelegate-Protocol.h"
#include "MTTimerStorage-Protocol.h"
#include "NAScheduler-Protocol.h"

@class NSArray, NSDate, NSMutableArray, NSString;

@interface MTTimerStorage : NSObject<MTTimerSchedulerDelegate, MTApplicationWorkspaceObserverProtocol, MTAgentDiagnosticDelegate, MTTimerStorage> {
  /* instance variables */
  MTMetrics *_metrics;
}

@property (retain, nonatomic) NSMutableArray *orderedTimers;
@property (copy, nonatomic) NSDate *lastModifiedDate;
@property (readonly, copy, nonatomic) id /* block */ currentDateProvider;
@property (retain, nonatomic) MTTimerMigrator *migrator;
@property (retain, nonatomic) NSObject<NAScheduler> *serializer;
@property (retain, nonatomic) MTObserverStore *observers;
@property (retain, nonatomic) NSObject<MTPersistence> *persistence;
@property (retain, nonatomic) MTTimerDurationManager *durationManager;
@property (weak, nonatomic) MTTimerScheduler *scheduler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *timers;
@property (readonly, nonatomic) MTTimer *nextTimer;

/* class methods */
+ (id)_diagnosticDictionaryForTimer:(id)timer;

/* instance methods */
- (id)init;
- (id)initWithPersistence:(id)persistence;
- (id)initWithPersistence:(id)persistence migrator:(id)migrator serializer:(id)serializer callbackScheduler:(id)scheduler currentDateProvider:(id /* block */)provider;
- (void)dealloc;
- (void)setupListeners;
- (void)loadTimers;
- (void)loadTimersSync;
- (void)_loadTimersWithCompletion:(id /* block */)completion;
- (void)_createDefaultTimerIfNeededWithCompletion:(id /* block */)completion;
- (id)newCurrentTimer;
- (void)_queue_clearNanoTimerPreferences;
- (BOOL)_queue_isNanoTimerInstalled;
- (void)registerObserver:(id)observer;
- (void)setAllTimers:(id)timers source:(id)source;
- (void)_queue_setAllTimers:(id)timers source:(id)source;
- (void)_queue_setAllTimers:(id)timers source:(id)source persist:(BOOL)persist notify:(BOOL)notify;
- (void)getTimersWithCompletion:(id /* block */)completion;
- (void)addTimer:(id)timer withCompletion:(id /* block */)completion source:(id)source;
- (void)updateTimer:(id)timer withCompletion:(id /* block */)completion source:(id)source;
- (void)removeTimer:(id)timer withCompletion:(id /* block */)completion source:(id)source;
- (void)dismissTimerWithIdentifier:(id)identifier withCompletion:(id /* block */)completion source:(id)source;
- (void)repeatTimerWithIdentifier:(id)identifier withCompletion:(id /* block */)completion source:(id)source;
- (void)_queue_addTimer:(id)timer withCompletion:(id /* block */)completion source:(id)source;
- (void)_queue_logMultipleTimersEvent;
- (id)_queue_updateTimer:(id)timer withCompletion:(id /* block */)completion source:(id)source;
- (void)_queue_removeTimer:(id)timer withCompletion:(id /* block */)completion source:(id)source;
- (void)_queue_dismissTimerWithIdentifier:(id)identifier withCompletion:(id /* block */)completion source:(id)source;
- (void)_queue_repeatTimerWithIdentifier:(id)identifier withCompletion:(id /* block */)completion source:(id)source;
- (void)_queue_removeAllTimersForSource:(id)source;
- (id)_queuePersistTimer:(id)timer replacingTimer:(id)timer;
- (id)_applyNecessaryChangesFromOldTimer:(id)timer currentTimer:(id)timer;
- (void)_queue_notifyObserversWithBlock:(id /* block */)block;
- (void)_queue_notifyObserversForTimerAdd:(id)add source:(id)source;
- (void)_queue_notifyObserversForTimerUpdate:(id)update fromTimers:(id)timers source:(id)source;
- (void)_queue_notifyObserversForTimerRemoval:(id)removal source:(id)source;
- (void)_queue_notifyObserversForTimerDismiss:(id)dismiss source:(id)source;
- (void)_queue_notifyObserversForTimerFire:(id)fire source:(id)source;
- (void)_queue_notifyObserversForNextTimerChange:(id)change source:(id)source;
- (id)_queue_timerMatchingTimerIdentifier:(id)identifier;
- (BOOL)_queue_hasMatchingTimer:(id)timer;
- (void)_queue_persistTimers;
- (void)_queue_sortTimers;
- (void)handleF5Reset;
- (void)handleMigrationFinish;
- (void)printDiagnostics;
- (id)gatherDiagnostics;
- (id)_diagnosticTimerDictionary;
- (void)scheduler:(id)scheduler didChangeNextTimer:(id)timer;
- (void)scheduler:(id)scheduler didFireTimer:(id)timer;
- (void)observedApplicationDidUninstallForBundleIdentifier:(id)identifier;
- (void)_removeTimerDataIfNecessary:(id)necessary;
- (void)_queue_removeStaleTimers:(BOOL)timers;
- (void)timeListener:(id)listener didDetectSignificantTimeChangeWithCompletionBlock:(id /* block */)block;
- (void)getDurationsWithCompletion:(id /* block */)completion;
- (void)addRecentDuration:(id)duration withCompletion:(id /* block */)completion source:(id)source;
- (void)removeRecentDuration:(id)duration withCompletion:(id /* block */)completion source:(id)source;
- (void)addFavoriteDuration:(id)duration withCompletion:(id /* block */)completion source:(id)source;
- (void)removeFavoriteDuration:(id)duration withCompletion:(id /* block */)completion source:(id)source;
- (void)saveLatestDuration:(id)duration withCompletion:(id /* block */)completion source:(id)source;
- (void)setDurationUpdateDelegate:(id)delegate;
- (id)getDurationManager;
@end

#endif /* MTTimerStorage_h */
