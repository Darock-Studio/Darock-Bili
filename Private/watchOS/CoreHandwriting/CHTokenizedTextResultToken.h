//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 445.201.0.0.0
//
#ifndef CHTokenizedTextResultToken_h
#define CHTokenizedTextResultToken_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSMutableCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSIndexSet, NSLocale, NSString;

@interface CHTokenizedTextResultToken : NSObject<NSCopying, NSMutableCopying, NSSecureCoding>

@property (readonly, nonatomic) double recognitionScore;
@property (readonly, nonatomic) double combinedScore;
@property (readonly, nonatomic) double alignmentScore;
@property (readonly, nonatomic) unsigned long long properties;
@property (readonly, nonatomic) long long substrokeCount;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (readonly, nonatomic) unsigned int wordID;
@property (readonly, nonatomic) unsigned long long inputSources;
@property (readonly, nonatomic) BOOL isOriginal;
@property (readonly, nonatomic) BOOL isTransliterated;
@property (readonly, copy, nonatomic) NSLocale *recognizerSourceLocale;
@property (readonly, copy, nonatomic) NSString *string;
@property (readonly, copy, nonatomic) NSIndexSet *strokeIndexes;

/* class methods */
+ (unsigned long long)makeOriginalToken:(unsigned long long)token;
+ (BOOL)supportsSecureCoding;
+ (id)tokenWithString:(id)string strokeIndexes:(id)indexes wordID:(unsigned int)id recognitionScore:(double)score combinedScore:(double)score alignmentScore:(double)score properties:(unsigned long long)properties recognizerSourceLocale:(id)locale inputSources:(unsigned long long)sources substrokeCount:(long long)count bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;

/* instance methods */
- (id)init;
- (id)initWithString:(id)string strokeIndexes:(id)indexes wordID:(unsigned int)id recognitionScore:(double)score combinedScore:(double)score alignmentScore:(double)score properties:(unsigned long long)properties recognizerSourceLocale:(id)locale inputSources:(unsigned long long)sources substrokeCount:(long long)count bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (double)heuristicTextScore;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (id)description;
- (BOOL)isEquivalentToToken:(id)token;
- (unsigned long long)inputSourceModifiersCount;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
@end

#endif /* CHTokenizedTextResultToken_h */
