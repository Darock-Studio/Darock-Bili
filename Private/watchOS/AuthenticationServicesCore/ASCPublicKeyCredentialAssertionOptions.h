//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef ASCPublicKeyCredentialAssertionOptions_h
#define ASCPublicKeyCredentialAssertionOptions_h
@import Foundation;

#include "ASCWebAuthenticationExtensionsClientInputs.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSData, NSNumber, NSString;

@interface ASCPublicKeyCredentialAssertionOptions : NSObject<NSSecureCoding, NSCopying>

@property (readonly, nonatomic) unsigned long long credentialKind;
@property (readonly, copy, nonatomic) NSString *relyingPartyIdentifier;
@property (readonly, copy, nonatomic) NSData *challenge;
@property (copy, nonatomic) NSData *clientDataHash;
@property (copy, nonatomic) NSData *clientDataJSON;
@property (readonly, copy, nonatomic) NSString *userVerificationPreference;
@property (copy, nonatomic) NSNumber *timeout;
@property (copy, nonatomic) ASCWebAuthenticationExtensionsClientInputs *extensions;
@property (copy, nonatomic) NSData *extensionsCBOR;
@property (copy, nonatomic) NSArray *allowedCredentials;
@property (copy, nonatomic) NSString *destinationSiteForCrossSiteAssertion;
@property (nonatomic) BOOL shouldHideHybrid;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)_initWithKind:(unsigned long long)kind relyingPartyIdentifier:(id)identifier challenge:(id)challenge clientDataHash:(id)hash clientDataJSON:(id)json userVerificationPreference:(id)preference allowedCredentials:(id)credentials shouldHideHybrid:(BOOL)hybrid;
- (id)initWithKind:(unsigned long long)kind relyingPartyIdentifier:(id)identifier challenge:(id)challenge userVerificationPreference:(id)preference allowedCredentials:(id)credentials;
- (id)initWithKind:(unsigned long long)kind relyingPartyIdentifier:(id)identifier clientDataHash:(id)hash userVerificationPreference:(id)preference allowedCredentials:(id)credentials;
- (id)initWithKind:(unsigned long long)kind relyingPartyIdentifier:(id)identifier clientDataJSON:(id)json userVerificationPreference:(id)preference allowedCredentials:(id)credentials;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)logRequest;
@end

#endif /* ASCPublicKeyCredentialAssertionOptions_h */
