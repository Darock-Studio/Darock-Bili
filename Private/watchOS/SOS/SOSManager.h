//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 498.300.11.0.0
//
#ifndef SOSManager_h
#define SOSManager_h
@import Foundation;

#include "SOSButtonPressState.h"
#include "SOSClientProtocol-Protocol.h"
#include "SOSInternalClientProtocol-Protocol.h"

@class NSMapTable, NSString, NSXPCConnection;
@protocol OS_dispatch_semaphore;

@interface SOSManager : NSObject<SOSInternalClientProtocol, SOSClientProtocol> {
  /* instance variables */
  BOOL _sendingLocationUpdate;
  long long _sosInitiationState;
  long long _sosInteractiveState;
  SOSButtonPressState *_sosButtonPressState;
  NSObject<OS_dispatch_semaphore> *_initialStateSemaphore;
}

@property (retain, nonatomic) NSXPCConnection *connection;
@property (nonatomic) int connectionRequestNotificationToken;
@property (readonly, nonatomic) NSMapTable *observerToQueue;
@property (nonatomic) BOOL allowedToMessageSOSContacts;
@property (nonatomic) long long currentSOSInitiationState;
@property (nonatomic) long long currentSOSInteractiveState;
@property (copy, nonatomic) SOSButtonPressState *currentSOSButtonPressState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)triggerSOS;
+ (void)triggerSOSWithCompletion:(id /* block */)completion;
+ (void)triggerSOSWithUUID:(id)uuid completion:(id /* block */)completion;
+ (void)triggerSOSWithUUID:(id)uuid triggerMechanism:(long long)mechanism completion:(id /* block */)completion;
+ (BOOL)shouldTriggerSOS;
+ (BOOL)deviceSupportsSOS;
+ (void)notifySOSTriggerMechanismChanged;
+ (id)sharedInstance;

/* instance methods */
- (id)init;
- (void)dealloc;
- (BOOL)longPressTriggersEmergencySOS;
- (void)setLongPressTriggersEmergencySOS:(BOOL)sos;
- (BOOL)isAllowedToMessageSOSContacts;
- (void)willStartSendingLocationUpdate;
- (void)startSendingLocationUpdateWithCompletion:(id /* block */)completion;
- (void)startSendingLocationUpdateForReason:(long long)reason withCompletion:(id /* block */)completion;
- (void)stopSendingLocationUpdate;
- (void)mostRecentLocationSentWithCompletion:(id /* block */)completion;
- (BOOL)isSendingLocationUpdate;
- (void)addObserver:(id)observer queue:(id)queue;
- (void)removeObserver:(id)observer;
- (void)dismissSOSWithCompletion:(id /* block */)completion;
- (void)didDismissSOSBeforeSOSCall:(long long)soscall;
- (void)setSendingLocationUpdate:(BOOL)update;
- (void)updateClientCurrentSOSInitiationState:(long long)state;
- (void)updateClientCurrentSOSInteractiveState:(long long)state;
- (void)updateClientCurrentSOSButtonPressState:(id)state;
- (void)dismissClientSOSWithCompletion:(id /* block */)completion;
- (void)didDismissClientSOSBeforeSOSCall:(long long)soscall;
- (void)didUpdateSOSStatus:(id)sosstatus;
- (void)_waitForInitialState;
- (void)_resetStateWithCompletion:(id /* block */)completion;
@end

#endif /* SOSManager_h */
