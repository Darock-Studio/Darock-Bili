//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 498.300.11.0.0
//
#ifndef SOSCoordinator_h
#define SOSCoordinator_h
@import Foundation;

#include "IDSServiceDelegate-Protocol.h"
#include "SOSCoreAnalyticsReporting-Protocol.h"

@class CSLSOnWristMonitor, IDSService, NSHashTable, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface SOSCoordinator : NSObject<IDSServiceDelegate> {
  /* instance variables */
  IDSService *_idsService;
  NSMutableArray *_processingEventUUIDs;
  NSObject<OS_dispatch_semaphore> *_eventProcessingSemaphore;
  NSObject<OS_dispatch_queue> *_eventUUIDArrayQueue;
  NSObject<OS_dispatch_queue> *_pendingMessagesQueue;
  NSMutableDictionary *_pendingMessagesById;
  NSMutableDictionary *_pendingMessageRetriesById;
  BOOL _ackSuccess;
  CSLSOnWristMonitor *_wristMonitor;
}

@property (retain, nonatomic) NSHashTable *observers;
@property (retain, nonatomic) NSObject<SOSCoreAnalyticsReporting> *coreAnalyticsReporter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (BOOL)shouldHandoffToPairedDevice:(long long)device;
- (BOOL)tryPushToPairedDeviceWithUUID:(id)uuid triggerMechanism:(long long)mechanism;
- (BOOL)processEventWithUUID:(id)uuid triggerMechanism:(long long)mechanism;
- (void)syncProgressionWithPairedDevice:(long long)device sosStatus:(id)status;
- (void)service:(id)service account:(id)account incomingMessage:(id)message fromID:(id)id;
- (void)service:(id)service account:(id)account identifier:(id)identifier didSendWithSuccess:(BOOL)success error:(id)error;
- (BOOL)isIncomingMessageValidSOSHandoff:(id)soshandoff;
- (BOOL)isIncomingMessageValidHandoffAck:(id)ack;
- (void)handleSOSMessageTypeHandoffSOSAck:(id)sosack;
- (void)handleSOSMessageTypeHandoffSOS:(id)sos;
- (void)handleSOSMessageTypeProgressionSync:(id)sync;
- (void)sendUpdateToObserversWithStatus:(id)status progression:(long long)progression shouldHandleThirdParty:(BOOL)party;
- (BOOL)sendUrgentMessageToPairedDevice:(id)device;
- (BOOL)_sendUrgentMessageToPairedDevice:(id)device retries:(id)retries;
- (BOOL)shouldRetryMessage:(id)message;
- (void)sendAckToHandoffMessage:(id)message success:(BOOL)success;
- (id)effectivePairedDevice;
- (long long)SOSCoordinationMessageTypeForString:(id)string;
- (BOOL)isPairedDeviceNearby;
- (BOOL)isWatchOnWrist;
- (void)service:(id)service nearbyDevicesChanged:(id)changed;
- (void)_handleServiceUpdate:(id)update;
- (void)_updateStateForPairedDevice:(id)device;
- (long long)sourceDevice;
- (void)reportHandoff:(long long)handoff result:(long long)result;
@end

#endif /* SOSCoordinator_h */
