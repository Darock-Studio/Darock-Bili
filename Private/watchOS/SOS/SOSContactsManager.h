//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 498.300.11.0.0
//
#ifndef SOSContactsManager_h
#define SOSContactsManager_h
@import Foundation;

#include "SOSLegacyContactsManager.h"

@class HKHealthStore, NSArray, NSString;
@protocol OS_dispatch_semaphore;

@interface SOSContactsManager : NSObject {
  /* instance variables */
  int _healthContactsNotificationToken;
}

@property (retain, nonatomic) HKHealthStore *healthStore;
@property (retain, nonatomic) NSArray *medicalIDEmergencyContacts;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *medicalIDContactsInitialStateSemaphore;
@property (nonatomic) struct _opaque_pthread_mutex_t { long long x0; char x1[56] } medicalIDEmergencyContactsMutex;
@property (retain, nonatomic) NSString *activeSafetyMonitorSessionPrimaryHandle;
@property (retain, nonatomic) NSObject<OS_dispatch_semaphore> *safetyMonitorSessionInitialStateSemaphore;
@property (nonatomic) struct _opaque_pthread_mutex_t { long long x0; char x1[56] } safetyMonitorSessionHandleMutex;
@property (readonly, nonatomic) BOOL SOSContactsExist;
@property (readonly, nonatomic) SOSLegacyContactsManager *legacyContactsManager;

/* class methods */
+ (void)preloadContactStoreIfNecessary;
+ (id)contactStore;
+ (BOOL)authorizedToUseContactStore;

/* instance methods */
- (id)init;
- (id)initWithHealthStore:(id)store;
- (void)dealloc;
- (void)refreshCurrentEmergencyContacts;
- (void)SOSContactsWithTimeout:(double)timeout andCompletion:(id /* block */)completion;
- (id)SOSContactDestinations;
- (id)SOSContactRecipients;
- (id)sosDestinationsContainsPhoneNumber:(id)number sosRecipients:(id)recipients;
- (BOOL)isPhoneNumberEqual:(id)equal toNumber:(id)number;
- (BOOL)_isEmergencyNumber:(id)number;
- (BOOL)hasValidContactsToMessage;
- (id)phoneNumbersToMessage;
- (id)_userDefaults;
- (void)_fetchMedicalIDEmergencyContacts;
- (void)_medicalIDEmergencyContactsWithCompletion:(id /* block */)completion;
- (void)_waitForMedicalIDInitialState;
- (void)_medicalContactsDidChange;
- (void)_fetchSafetyMonitorSessionHandle;
- (void)_updateWithSafetyMonitorSessionState:(id)state isActiveDevice:(BOOL)device error:(id)error;
- (void)_waitForSafetyMonitorInitialState;
@end

#endif /* SOSContactsManager_h */
