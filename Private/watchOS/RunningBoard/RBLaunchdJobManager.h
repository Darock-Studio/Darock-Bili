//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 858.60.5.0.0
//
#ifndef RBLaunchdJobManager_h
#define RBLaunchdJobManager_h
@import Foundation;

#include "RBBundlePropertiesManaging-Protocol.h"
#include "RBContainerManager.h"
#include "RBLaunchdInterfacing-Protocol.h"
#include "RBPersonaManager.h"

@class NSMutableDictionary, NSMutableOrderedSet;
@protocol OS_dispatch_queue;

@interface RBLaunchdJobManager : NSObject {
  /* instance variables */
  NSMutableDictionary *_lock_jobsByIdentifier;
  NSMutableDictionary *_lock_monitoredJobsByIdentifier;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<RBLaunchdInterfacing> *_launchdInterface;
  RBPersonaManager *_personaManager;
  RBContainerManager *_containerManager;
  NSObject<RBBundlePropertiesManaging> *_bundlePropertiesManager;
  NSMutableOrderedSet *_lock_reslideIdentities;
  NSObject<OS_dispatch_queue> *_logQueue;
}

/* class methods */
+ (id)lastExitStatusForLabel:(id)label error:(out id *)error;

/* instance methods */
- (id)initWithLaunchdInterface:(id)interface personaManager:(id)manager containerManager:(id)manager bundlePropertiesManager:(id)manager;
- (void)_addReslideIdentityIfNeeded:(id)needed exitStatus:(id)status;
- (void)_addSharedPropertiesToData:(id)data forIdentity:(id)identity context:(id)context;
- (void)_addDextPropertiesToData:(id)data forIdentity:(id)identity context:(id)context;
- (void)_addStandardAppPropertiesToData:(id)data;
- (BOOL)_addAppPropertiesToData:(id)data forIdentity:(id)identity context:(id)context actualIdentity:(id *)identity error:(id *)error;
- (id)_generateDataWithIdentity:(id)identity context:(id)context actualIdentity:(id *)identity error:(id *)error;
- (id)_createLaunchdJobWithIdentity:(id)identity context:(id)context actualIdentity:(id *)identity error:(id *)error;
- (BOOL)_addPersonaFromExtensionContext:(id)context toServiceDict:(id)dict;
- (void)_addExtensionEnvironmentFromContainerURL:(id)url toServiceDict:(id)dict;
- (void)_addExtensionContainerURL:(id)url toServiceDict:(id)dict;
- (id)_containerURLForExtensionContext:(id)context;
- (BOOL)_addContainerPropertiesFromExtensionContext:(id)context toServiceDict:(id)dict;
- (id)_createAndSubmitExtensionJob:(id)job UUID:(id)uuid error:(id *)error;
- (id)createAndLaunchWithIdentity:(id)identity context:(id)context error:(out id *)error;
- (BOOL)_isRunningBoardLaunched:(id)launched;
- (BOOL)_removeJobWithInstance:(id)instance orJob:(id)job error:(out id *)error;
- (BOOL)removeJobWithInstance:(id)instance error:(out id *)error;
- (id)synchronizeJobs;
- (void)invokeOnProcessDeath:(id)death handler:(id /* block */)handler onQueue:(id)queue;
- (unsigned long long)test_trackedJobCount;
@end

#endif /* RBLaunchdJobManager_h */
