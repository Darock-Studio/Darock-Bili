//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 858.60.5.0.0
//
#ifndef RBProcessMonitor_h
#define RBProcessMonitor_h
@import Foundation;

#include "RBHistoricalStatisticsMaintaining-Protocol.h"
#include "RBProcessIndex.h"
#include "RBProcessMap.h"
#include "RBProcessMonitoring-Protocol.h"
#include "RBStateCaptureManaging-Protocol.h"
#include "RBStateCapturing-Protocol.h"

@class NSCountedSet, NSMutableSet, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface RBProcessMonitor : NSObject<RBProcessMonitoring, RBStateCapturing> {
  /* instance variables */
  RBProcessIndex *_processIndex;
  RBProcessMap *_stateMap;
  RBProcessMap *_suppressedState;
  RBProcessMap *_publishedState;
  NSCountedSet *_suppressedIdentities;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _observersLock;
  NSMutableSet *_observers;
  NSObject<RBStateCaptureManaging> *_stateCaptureManager;
  NSSet *_preventLaunchPredicates;
  NSObject<RBHistoricalStatisticsMaintaining> *_historicalStatistics;
  NSObject<OS_dispatch_queue> *_queue;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *monitorSerializationQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *stateCaptureTitle;

/* instance methods */
- (id)initWithStateCaptureManager:(id)manager historialStatistics:(id)statistics;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (id)preventLaunchPredicates;
- (id)statesMatchingPredicate:(id)predicate;
- (id)statesMatchingConfiguration:(id)configuration;
- (void)didAddProcess:(id)process withState:(id)state;
- (void)didUpdateProcessStates:(id)states;
- (void)didRemoveProcess:(id)process withState:(id)state;
- (void)didResolvePreventLaunchPredicates:(id)predicates;
- (void)trackStateForProcessIdentity:(id)identity;
- (void)removeStateForProcessIdentity:(id)identity;
- (void)suppressUpdatesForIdentity:(id)identity;
- (void)unsuppressUpdatesForIdentity:(id)identity;
- (id)captureState;
@end

#endif /* RBProcessMonitor_h */
