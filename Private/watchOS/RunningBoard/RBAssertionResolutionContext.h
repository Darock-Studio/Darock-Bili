//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 858.60.5.0.0
//
#ifndef RBAssertionResolutionContext_h
#define RBAssertionResolutionContext_h
@import Foundation;

#include "RBAssertionCollection.h"
#include "RBAttributeContext.h"
#include "RBBundlePropertiesManaging-Protocol.h"
#include "RBDomainAttributeManaging-Protocol.h"
#include "RBEntitlementManaging-Protocol.h"
#include "RBProcessIndex.h"
#include "RBProcessMap.h"
#include "RBProcessStateChangeSet.h"
#include "RBSystemState.h"

@class NSMapTable, NSMutableSet, NSSet;

@interface RBAssertionResolutionContext : NSObject {
  /* instance variables */
  NSMutableSet *_assertions;
  NSMutableSet *_targetsPendingResolution;
  RBProcessMap *_resolvedState;
  RBProcessMap *_originatorInheritances;
  RBAttributeContext *_attributeContext;
  RBAssertionCollection *_assertionCollection;
  RBProcessIndex *_processIndex;
  RBProcessMap *_stateMap;
  NSObject<RBDomainAttributeManaging> *_domainAttributeManager;
  NSObject<RBBundlePropertiesManaging> *_bundlePropertiesManager;
  NSObject<RBEntitlementManaging> *_entitlementManager;
  NSMapTable *_savedEndowments;
}

@property (readonly, nonatomic) RBProcessStateChangeSet *changeSet;
@property (readonly, nonatomic) RBSystemState *systemState;
@property (readonly, nonatomic) NSSet *touchedAssertions;
@property (readonly, nonatomic) NSSet *lostStartTimeDefining;
@property (readonly, nonatomic) NSSet *gainedStartTimeDefining;

/* instance methods */
- (id)_assertionGraphFromAssertion:(id)assertion;
- (void)_assertionGraphFromAssertion:(id)assertion graph:(id)graph;
- (void)_updateStatesForAssertion:(id)assertion;
- (id)_inheritancesForOriginator:(id)originator;
- (id)_originatorInheritancesForAssertion:(id)assertion;
- (id)_latestStateForIdentity:(id)identity;
- (void)_suspendAssertionsForTarget:(id)target;
- (void)_checkForSuspendableAssertionCycle:(id)cycle newState:(id)state;
- (void)_suspendOrResumeAssertionsForTarget:(id)target oldState:(id)state newState:(id)state;
- (void)_resolveProcessStateForTarget:(id)target ofType:(unsigned long long)type viaAssertion:(id)assertion;
- (void)_finalizeStateChangeSet;
- (void)_resolveSystemState;
@end

#endif /* RBAssertionResolutionContext_h */
