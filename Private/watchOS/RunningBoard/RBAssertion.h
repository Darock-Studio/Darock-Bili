//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 858.60.5.0.0
//
#ifndef RBAssertion_h
#define RBAssertion_h
@import Foundation;

#include "RBAssertionIntransientState.h"
#include "RBAssertionTransientState.h"
#include "RBConcreteTargeting-Protocol.h"
#include "RBInheritanceCollection.h"
#include "RBProcess.h"
#include "RBProcessState.h"
#include "RBStateCapturing-Protocol.h"

@class NSArray, NSDictionary, NSSet, NSString, RBSAssertionIdentifier, RBSProcessAssertionInfo;

@interface RBAssertion : NSObject<RBStateCapturing> {
  /* instance variables */
  RBProcess *_targetProcessForAbstract;
  id _targetState;
  RBAssertionTransientState *_transientState;
  NSSet *_originatorInheritances;
  NSDictionary *_lastConditions;
  RBSProcessAssertionInfo *_assertionInfo;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (readonly, copy, nonatomic) NSObject<RBConcreteTargeting> *target;
@property (readonly, nonatomic) RBProcess *originator;
@property (readonly, copy, nonatomic) RBSAssertionIdentifier *identifier;
@property (readonly, copy, nonatomic) NSString *explanation;
@property (readonly, copy, nonatomic) NSArray *attributes;
@property (readonly, copy, nonatomic) RBInheritanceCollection *inheritances;
@property (readonly, copy, nonatomic) RBAssertionIntransientState *intransientState;
@property (readonly, copy, nonatomic) RBProcessState *processState;
@property (readonly, nonatomic) unsigned long long startPolicy;
@property (readonly, nonatomic) unsigned long long endPolicy;
@property (readonly, nonatomic) BOOL persistent;
@property (readonly, nonatomic) BOOL active;
@property (readonly, nonatomic) BOOL suspended;
@property (readonly, nonatomic) BOOL invalid;
@property (readonly, nonatomic) BOOL suspendsOnOriginatorSuspension;
@property (readonly, nonatomic) BOOL invalidatesSynchronously;
@property (readonly, nonatomic) double invalidationDuration;
@property (readonly, nonatomic) double warningDuration;
@property (readonly, nonatomic) double creationTime;
@property (readonly, nonatomic) unsigned long long legacyReason;
@property (readonly, nonatomic) unsigned long long runningReason;
@property (readonly, nonatomic) BOOL definesRelativeStartTime;
@property (readonly, nonatomic) BOOL terminateTargetOnOriginatorExit;
@property (readonly, nonatomic) BOOL hasHereditaryGrant;
@property (readonly, nonatomic) BOOL hasDomainAttribute;
@property (readonly, nonatomic) NSSet *sourceEnvironments;
@property (nonatomic) unsigned char invalidationReason;
@property (retain, nonatomic) id plugInHoldToken;
@property (readonly, copy, nonatomic) NSString *stateCaptureTitle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)assertionWithDescriptor:(id)descriptor target:(id)target originator:(id)originator context:(id)context;
+ (id)assertionWithDescriptor:(id)descriptor target:(id)target originator:(id)originator context:(id)context creationTime:(double)time;
+ (id)assertionWithIdentifier:(id)identifier target:(id)target explanation:(id)explanation attributes:(id)attributes originator:(id)originator context:(id)context;

/* instance methods */
- (void)activate;
- (void)deactivate;
- (void)suspend;
- (void)resume;
- (BOOL)isActive;
- (BOOL)isSuspended;
- (BOOL)isValid;
- (unsigned long long)maxCPUUsageViolationPolicyForRole:(unsigned char)role;
- (BOOL)isPersistent;
- (BOOL)resolveStateWithContext:(id)context;
- (id)updateProcessStateWithAttributeContext:(id)context;
- (void)applyToProcessState:(id)state withAttributeContext:(id)context;
- (void)applyToAssertionTransientState:(id)state withAttributeContext:(id)context;
- (void)applyToSystemState:(id)state withAttributeContext:(id)context;
- (id)captureState;
- (void)setTargetProcessForAbstract:(id)abstract;
- (id)lock_targetProcessForAbstract;
@end

#endif /* RBAssertion_h */
