//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 858.60.5.0.0
//
#ifndef RBDaemon_h
#define RBDaemon_h
@import Foundation;

#include "RBAssertionDescriptorValidator.h"
#include "RBAssertionManager.h"
#include "RBAssertionManagerDelegate-Protocol.h"
#include "RBAssertionManaging-Protocol.h"
#include "RBAssertionOriginatorPidPersisting-Protocol.h"
#include "RBAssertionOriginatorPidStore.h"
#include "RBBundlePropertiesManager.h"
#include "RBBundlePropertiesManagerDelegate-Protocol.h"
#include "RBConnectionListener.h"
#include "RBDaemonContextProviding-Protocol.h"
#include "RBDomainAttributeManager.h"
#include "RBDomainAttributeManaging-Protocol.h"
#include "RBEntitlementManager.h"
#include "RBEntitlementManaging-Protocol.h"
#include "RBExtensionDataProviding-Protocol.h"
#include "RBHistoricalStatistics.h"
#include "RBHistoricalStatisticsMaintaining-Protocol.h"
#include "RBJetsamPropertyManager.h"
#include "RBJetsamPropertyManaging-Protocol.h"
#include "RBPowerAssertionManager.h"
#include "RBPowerAssertionManagerDelegate-Protocol.h"
#include "RBProcess.h"
#include "RBProcessManager.h"
#include "RBProcessManagerDelegate-Protocol.h"
#include "RBProcessManaging-Protocol.h"
#include "RBProcessMonitor.h"
#include "RBProcessMonitoring-Protocol.h"
#include "RBProcessReconnectManager.h"
#include "RBRequestManaging-Protocol.h"
#include "RBStateCaptureManager.h"
#include "RBStateCaptureManaging-Protocol.h"
#include "RBThermalResponseManager.h"
#include "RBThrottleBestEffortNetworkingManager.h"

@class NSString;

@interface RBDaemon : NSObject<RBAssertionManagerDelegate, RBProcessManagerDelegate, RBBundlePropertiesManagerDelegate, RBPowerAssertionManagerDelegate, RBDaemonContextProviding> {
  /* instance variables */
  RBAssertionDescriptorValidator *_assertionDescriptorValidator;
  RBBundlePropertiesManager *_bundlePropertiesManager;
  RBConnectionListener *_listener;
  RBPowerAssertionManager *_powerAssertionManager;
  RBProcessReconnectManager *_reconnectManager;
  RBThrottleBestEffortNetworkingManager *_throttleBestEffortNetworkingManager;
  RBThermalResponseManager *_thermalResponseManager;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSObject<RBAssertionManaging> *assertionManager;
@property (readonly, nonatomic) NSObject<RBEntitlementManaging> *entitlementManager;
@property (readonly, nonatomic) NSObject<RBProcessManaging> *processManager;
@property (readonly, nonatomic) NSObject<RBProcessMonitoring> *processMonitor;
@property (readonly, nonatomic) NSObject<RBStateCaptureManaging> *stateCaptureManager;
@property (readonly, nonatomic) NSObject<RBDomainAttributeManaging> *domainAttributeManager;
@property (readonly, nonatomic) NSObject<RBAssertionOriginatorPidPersisting> *assertionOriginatorPidStore;
@property (readonly, nonatomic) NSObject<RBJetsamPropertyManaging> *jetsamPropertyManager;
@property (readonly, nonatomic) NSObject<RBExtensionDataProviding> *extensionDataProvider;
@property (readonly, nonatomic) NSObject<RBRequestManaging> *requestManager;
@property (readonly, nonatomic) NSObject<RBHistoricalStatisticsMaintaining> *historicalStatistics;
@property (readonly, nonatomic) RBProcess *process;

/* class methods */
+ (void)run;

/* instance methods */
- (id)init;
- (void)assertionManager:(id)manager didAddProcess:(id)process withState:(id)state;
- (void)assertionManager:(id)manager didUpdateProcessStates:(id)states completion:(id /* block */)completion;
- (void)assertionManager:(id)manager didResolveSystemState:(id)state;
- (void)assertionManager:(id)manager didRemoveProcess:(id)process withState:(id)state;
- (void)assertionManager:(id)manager willExpireAssertionsSoonForProcess:(id)process expirationTime:(double)time;
- (void)assertionManager:(id)manager willInvalidateAssertion:(id)assertion;
- (void)assertionManager:(id)manager didInvalidateAssertions:(id)assertions;
- (void)assertionManager:(id)manager didBeginTrackingStateForProcessIdentity:(id)identity;
- (void)assertionManager:(id)manager didEndTrackingStateForProcessIdentity:(id)identity;
- (void)assertionManager:(id)manager didBeginTrackingInFightUpdatesForProcessIdentity:(id)identity;
- (void)assertionManager:(id)manager didEndTrackingInFightUpdatesForProcessIdentity:(id)identity;
- (void)assertionManager:(id)manager didRejectAcquisitionFromOriginatorWithExcessiveAssertions:(id)assertions;
- (void)powerAssertionManagerDidAllowIdleSleep:(id)sleep;
- (void)powerAssertionManagerDidPreventIdleSleep:(id)sleep;
- (void)processManager:(id)manager didReconnectProcesses:(id)processes;
- (void)processManager:(id)manager didAddProcess:(id)process;
- (void)processManager:(id)manager didRemoveProcess:(id)process;
- (void)bundlePropertiesManager:(id)manager didChangePropertiesForProcessIdentities:(id)identities;
@end

#endif /* RBDaemon_h */
