//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 858.60.5.0.0
//
#ifndef RBProcess_h
#define RBProcess_h
@import Foundation;

#include "RBBundleProperties-Protocol.h"
#include "RBConcreteTargeting-Protocol.h"
#include "RBJetsamProperties.h"
#include "RBProcess.h"
#include "RBProcessState.h"
#include "RBSProcessIdentifier-Protocol.h"

@class NSString, RBSAuditToken, RBSProcessExitContext, RBSProcessExitStatus, RBSProcessHandle, RBSProcessIdentifier, RBSProcessIdentity, RBSProcessInstance;
@protocol OS_dispatch_source;

@interface RBProcess : NSObject<RBSProcessIdentifier, RBConcreteTargeting> {
  /* instance variables */
  int _pid;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _dataLock;
  RBProcessState *_lock_appliedState;
  RBProcessState *_lock_state;
  int _appliedJetsamPriority;
  BOOL _usesSocketMonitoring;
  BOOL _systemPreventsIdleSleep;
  BOOL _diagnosticsStarted;
  BOOL _diagnosticsComplete;
  int _appNapEligible;
  int _isTestApp;
  int _memlimit;
  BOOL _wasVisible;
  unsigned char _manageFlags;
  NSObject<OS_dispatch_source> *_procSource;
  double _cachedProcessStartTime;
}

@property (readonly, copy, nonatomic) RBSProcessIdentifier *identifier;
@property (readonly, copy, nonatomic) RBSProcessHandle *handle;
@property (readonly, copy, nonatomic) RBSProcessIdentity *identity;
@property (readonly, copy, nonatomic) RBSProcessInstance *instance;
@property (readonly, copy, nonatomic) RBJetsamProperties *memoryLimits;
@property (copy, nonatomic) RBSAuditToken *auditToken;
@property (readonly, nonatomic) NSObject<RBBundleProperties> *bundleProperties;
@property (readonly, nonatomic) RBProcess *hostProcess;
@property (nonatomic) BOOL terminating;
@property (readonly, nonatomic) int pidversion;
@property (readonly, nonatomic) NSString *shortDescription;
@property (copy, nonatomic) RBSProcessExitStatus *intendedExitStatus;
@property (retain, nonatomic) RBSProcessExitContext *lastExitContext;
@property (readonly, nonatomic) BOOL beingPtraced;
@property (readonly, nonatomic) BOOL lifecycleManaged;
@property (readonly, nonatomic) BOOL jetsamManaged;
@property (readonly, nonatomic) BOOL reported;
@property (readonly, nonatomic) BOOL platformBinary;
@property (readonly, nonatomic) BOOL suspended;
@property (readonly, nonatomic) BOOL testApp;
@property (readonly, nonatomic) NSString *underlyingAssertion;
@property (readonly, nonatomic) double processStartTime;
@property (readonly, nonatomic) NSString *homeDirectory;
@property (readonly, nonatomic) NSString *tmpDirectory;
@property (readonly, nonatomic) BOOL containerized;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) RBProcess *process;
@property (readonly, copy, nonatomic) NSString *environment;
@property (readonly, nonatomic) BOOL system;

/* class methods */
+ (id)processStateApplicationQueue;
+ (id)testProcessWithPid:(int)pid;
+ (id)testProcessWithPid:(int)pid andIdentity:(id)identity;
+ (id)testProcessWithPid:(int)pid identity:(id)identity launchdProps:(id)props andBundleProps:(id)props;

/* instance methods */
- (id)init;
- (id)_initThinWithInstance:(id)instance auditToken:(id)token bundleProperties:(id)properties jetsamProperties:(id)properties hostProcess:(id)process properties:(id)properties;
- (id)_initWithInstance:(id)instance auditToken:(id)token bundleProperties:(id)properties jetsamProperties:(id)properties initialState:(id)state hostProcess:(id)process properties:(id)properties systemPreventsIdleSleep:(BOOL)sleep;
- (BOOL)isReported;
- (BOOL)isLifecycleManaged;
- (BOOL)isJetsamManaged;
- (BOOL)isBeingPtraced;
- (BOOL)isContainerized;
- (BOOL)isTestApp;
- (void)_systemPreventIdleSleepStateDidChange:(BOOL)change;
- (void)invalidate;
- (void)_applyState:(id)state;
- (void)collectDiagnostic:(unsigned long long)diagnostic description:(id)description domain:(unsigned int)domain code:(unsigned long long)code additionalPayload:(id)payload completion:(id /* block */)completion;
- (BOOL)terminateWithContext:(id)context;
- (BOOL)_sendSignal:(int)signal;
- (void)invokeHandlerOnProcessDeath:(id /* block */)death onQueue:(id)queue;
- (int)rbs_pid;
- (BOOL)matchesProcess:(id)process;
- (id)processPredicate;
- (BOOL)isSystem;
- (id)createRBSTarget;
- (BOOL)isPlatformBinary;
- (BOOL)isTerminating;
- (BOOL)isSuspended;
@end

#endif /* RBProcess_h */
