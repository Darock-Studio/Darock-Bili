//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 858.60.5.0.0
//
#ifndef RBAssertionManager_h
#define RBAssertionManager_h
@import Foundation;

#include "RBAssertionCollection.h"
#include "RBAssertionDescriptorValidating-Protocol.h"
#include "RBAssertionManagerDelegate-Protocol.h"
#include "RBAssertionManagerEventQueue.h"
#include "RBAssertionManagerQueueDelegate-Protocol.h"
#include "RBAssertionManaging-Protocol.h"
#include "RBAssertionOriginatorPidPersisting-Protocol.h"
#include "RBAssertionStateResolver.h"
#include "RBBundlePropertiesManaging-Protocol.h"
#include "RBDaemonContextProviding-Protocol.h"
#include "RBProcessIndex.h"
#include "RBProcessMap.h"
#include "RBStateCapturing-Protocol.h"
#include "RBSystemState.h"
#include "RBTimeProviding-Protocol.h"

@class NSCountedSet, NSMapTable, NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface RBAssertionManager : NSObject<RBAssertionManagerQueueDelegate, RBAssertionManaging, RBStateCapturing> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_workloop;
  NSObject<OS_dispatch_queue> *_calloutQueue;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<RBAssertionManagerDelegate> *_delegate;
  RBAssertionCollection *_assertions;
  NSMutableDictionary *_pluginHoldsForAssertions;
  RBProcessIndex *_processIndex;
  RBProcessMap *_stateMap;
  NSMutableDictionary *_relativeStartTimesByTargetIdentity;
  NSMapTable *_originatorExitTimesByAssertion;
  NSMutableDictionary *_originatorToInFlightOperationsCountMap;
  NSCountedSet *_inFlightAssertionTargets;
  NSMutableSet *_inFlightTerminations;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _inFlightOperationsLock;
  NSObject<RBBundlePropertiesManaging> *_bundlePropertiesManager;
  NSObject<RBAssertionDescriptorValidating> *_descriptorValidator;
  NSObject<RBAssertionOriginatorPidPersisting> *_originatorPidStore;
  NSObject<RBTimeProviding> *_timeProvider;
  NSObject<RBDaemonContextProviding> *_daemonContext;
  unsigned long long _maxOperationsInFlight;
  unsigned long long _maxAssertionsPerOriginator;
  RBAssertionStateResolver *_stateResolver;
  RBAssertionManagerEventQueue *_eventQueue;
  NSMutableSet *_assertionTargets;
  NSMutableSet *_acquiringAssertionIdentifiers;
  NSMutableSet *_invalidAssertions;
  NSMapTable *_savedEndowments;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) RBSystemState *systemState;
@property (readonly, copy, nonatomic) NSString *stateCaptureTitle;

/* class methods */
+ (id)sharedWorkloop;

/* instance methods */
- (void)periodicRunningProcessDump;
- (id)init;
- (id)initWithDelegate:(id)delegate bundlePropertiesManager:(id)manager originatorPidStore:(id)store assertionDescriptorValidator:(id)validator timeProvider:(id)provider daemonContext:(id)context maxOperationsInFlight:(unsigned long long)flight maxAssertionsPerOriginator:(unsigned long long)originator;
- (void)commitBatchWithContext:(id)context completion:(id /* block */)completion;
- (void)acquireAssertionWithContext:(id)context completion:(id /* block */)completion;
- (BOOL)invalidateAssertionFromOriginator:(id)originator sync:(BOOL)sync withIdentifier:(id)identifier;
- (BOOL)invalidateAssertionFromOriginator:(id)originator withIdentifier:(id)identifier;
- (BOOL)invalidateAssertionWithIdentifier:(id)identifier;
- (BOOL)_invalidateAssertion:(id)assertion sync:(BOOL)sync;
- (BOOL)invalidateAssertion:(id)assertion;
- (BOOL)invalidateAssertionsDueToCPUUsageViolationForProcessIdentifier:(id)identifier;
- (id)assertionDescriptorsWithFlattenedAttributes:(BOOL)attributes;
- (id)limitationsForInstance:(id)instance;
- (id)assertionsForOriginator:(id)originator;
- (BOOL)hasAssertionWithIdentifier:(id)identifier;
- (id)popPluginHoldForAssertion:(id)assertion;
- (void)processDidLaunch:(id)launch;
- (BOOL)isProcessForeground:(id)foreground;
- (void)processDidTerminate:(id)terminate;
- (id)stateForIdentity:(id)identity;
- (id)processForIdentity:(id)identity;
- (void)revalidateAssertionsForProcessIdentities:(id)identities;
- (id)attributesForDomain:(id)domain andName:(id)name context:(id)context withError:(id *)error;
- (id)originatorEntitlementsForDomain:(id)domain andName:(id)name;
- (id)endowmentNamespaceForDomain:(id)domain andName:(id)name;
- (BOOL)containsAttributeWithDomain:(id)domain andName:(id)name;
- (id)allEntitlements;
- (BOOL)areTargetPropertiesValidForContext:(id)context forAttributeWithDomain:(id)domain andName:(id)name;
- (id)additionalRestrictionsForDomain:(id)domain andName:(id)name;
- (id)restrictionsForDomain:(id)domain andName:(id)name;
- (id)targetEntitlementsForDomain:(id)domain andName:(id)name;
- (void)eventQueue:(id)queue handleAssertionsExpirationWarningEventForProcessIdentity:(id)identity expirationTime:(double)time;
- (void)eventQueue:(id)queue handleWarningEventForAssertion:(id)assertion;
- (void)eventQueue:(id)queue handleInvalidationEventForAssertion:(id)assertion;
- (double)eventQueue:(id)queue startTimeForAssertion:(id)assertion;
- (double)eventQueue:(id)queue remainingRuntimeForProcessIdentity:(id)identity;
- (id)captureState;
- (double)_remainingRuntimeForProcessIdentity:(id)identity;
- (id)_concreteTargetForTarget:(id)target allowAbstractTarget:(BOOL)target;
- (void)_increaseInFlightOperationsForTargetIdentities:(id)identities;
- (void)_decreaseInFlightOperationsForTargetIdentities:(id)identities;
- (BOOL)_increaseInFlightOperationsForOriginator:(id)originator andSuspendIfNeeded:(id)needed;
- (BOOL)_decreaseInFlightOperationsForOriginator:(id)originator;
- (void)_lock_enqueueAssertionsForRemoval:(id)removal;
- (void)_removeInvalidAssertions;
- (void)_lock_removeInvalidAssertions;
- (void)_lock_notifyDelegateOfProcessStateChangeSet:(id)set;
- (id)_lock_targetIdentitiesInAssertions:(id)assertions;
- (id)_lock_originatorIdentifiersInAssertions:(id)assertions;
- (id)_lock_deactivateAssertions:(id)assertions;
- (void)_lock_finalizeRemovingAssertions:(id)assertions;
- (void)_lock_notifyDelegateOfInvalidatedAssertions:(id)assertions;
- (void)_lock_removeAssertions:(id)assertions andUpdateChangedAssertions:(id)assertions;
- (void)_lock_dumpAssertionsForTarget:(id)target;
- (id)_lock_sortedAssertionsForTarget:(id)target;
- (void)_dumpAssertions;
- (void)_lock_removeAssertion:(id)assertion;
- (void)_lock_addAssertion:(id)assertion;
- (void)_lock_checkAssertionToInvalidateByCondition:(id)condition condition:(id)condition currentValue:(id)value assertionsToInvalidate:(id)invalidate;
- (id)_lock_invalidateAssertionByConditions:(id)conditions changedAssertions:(id *)assertions;
- (id)_lock_updateStatesDueToChangingAssertions:(id)assertions invalidatedAssertions:(id)assertions;
- (void)_lock_removeStateForProcessIdentityIfNecessary:(id)necessary;
- (void)_lock_setState:(id)state forProcessIdentity:(id)identity;
- (void)_lock_setSystemState:(id)state;
- (double)_lock_startTimeForAssertion:(id)assertion;
- (double)_lock_invalidationTimeForAssertion:(id)assertion;
- (double)_lock_relativeStartTimeForAssertion:(id)assertion;
- (double)_lock_originatorExitTimeForAssertion:(id)assertion;
- (id)_lock_deactivateDelayedAssertionsForTargets:(id)targets;
- (id)_lock_activateDelayedAssertionsForTargets:(id)targets;
- (void)_lock_clearStartTimesForUnbusyTargets:(id)targets;
- (double)_lock_delayedStartTimeForAssertion:(id)assertion;
- (unsigned long long)_lock_numberOfStartTimeDefiningAssertionsForTargetProcessIdentity:(id)identity;
- (BOOL)_lock_hasStartTimeDefiningAssertionsForTargetProcessIdentity:(id)identity;
- (void)_acquireUnderlyingAssertionForProcess:(id)process;
- (void)_invalidateAssertionsWithContext:(id)context;
- (BOOL)_lock_validateDescriptor:(id)descriptor originatorProcess:(id)process originatorState:(id)state concreteTarget:(id)target targetProcess:(id)process targetIdentity:(id)identity targetIdentifier:(id)identifier targetState:(id)state acquisitionContext:(id)context error:(out id *)error;
- (id)_lock_assertionCreationAttributeContextForTargetIdentity:(id)identity originator:(id)originator;
- (BOOL)_lock_originatorHasExited:(id)exited;
- (id)_lock_createAssertionWithAcquisitionContext:(id)context attributeContext:(id)context concreteTarget:(id)target targetIdentity:(id)identity originator:(id)originator error:(out id *)error;
- (id)_lock_createAssertionForDescriptor:(id)descriptor originatorState:(id)state acquisitionContext:(id)context error:(id *)error;
- (unsigned long long)_lock_incomingAssertionCountForBatchContext:(id)context originatorIdentifier:(id)identifier;
- (BOOL)_lock_willExceedAssertionLimitForOriginatorProcess:(id)process withIncomingCount:(unsigned long long)count;
- (void)_lock_notifyDelegateOfExcessiveAssertionsForOriginatorProcess:(id)process;
- (BOOL)_lock_enforceAssertionLimitIfNecessaryForBatchContext:(id)context originatorProcess:(id)process error:(id *)error;
- (id)_lock_createAssertionsForBatchContext:(id)context originatorState:(id)state errorsByIndex:(id)index;
- (id)_lock_deactivateExistingAssertionsDelayedByIncomingAssertions:(id)assertions;
- (void)_lock_invalidateAssertions:(id)assertions forceSync:(BOOL)sync;
- (void)_acquireAssertions:(id)assertions invalidateIdentifiers:(id)identifiers forOriginatorProcess:(id)process completionPolicy:(unsigned long long)policy acquisitionErrorsByIndex:(id)index completeStage:(id /* block */)stage;
- (unsigned long long)_lock_resolvePreliminaryStatesForNonExistingProcessesWithAssertions:(id)assertions completionPolicy:(unsigned long long)policy;
- (BOOL)_lock_batchContextInvalidatesSynchronously:(id)synchronously;
- (BOOL)addSavedEndowment:(id)endowment forProcess:(id)process;
- (id)_lock_savedEndowmentsForProcess:(id)process;
- (id)savedEndowmentsForProcess:(id)process;
@end

#endif /* RBAssertionManager_h */
