//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCAudioStreamSendGroup_h
#define VCAudioStreamSendGroup_h
@import Foundation;

#include "VCMediaStreamSendGroup.h"
#include "AVCBasebandCongestionDetector.h"
#include "VCAudioStreamGroup-Protocol.h"
#include "VCAudioStreamGroupCommon.h"
#include "VCRedundancyControllerDelegate-Protocol.h"
#include "VCSystemAudioCaptureSession.h"

@interface VCAudioStreamSendGroup : VCMediaStreamSendGroup<VCRedundancyControllerDelegate, VCAudioStreamGroup> {
  /* instance variables */
  BOOL _lastEnqueuedStreamUpdateEventWasEmpty;
  struct opaqueCMSimpleQueue * _audioStreamUpdateEventQueue;
  struct opaqueCMSimpleQueue * _audioRedundancyChangeEventQueue;
  struct tagVCMemoryPool { struct { void * x0; long long x1; } x0; unsigned long long x1; } * _audioStreamUpdatePool;
  struct tagVCMemoryPool { struct { void * x0; long long x1; } x0; unsigned long long x1; } * _audioRedundancyEventPool;
  struct tagVCMediaQueue * _mediaQueue;
  unsigned char _lastAudioPriority;
  BOOL _forcedAudioPriorityEnabled;
  unsigned char _forcedAudioPriorityValue;
  double _forcedAudioPriorityLastUpdateTime;
  struct opaqueVCVoiceDetector * _voiceDetector;
  VCSystemAudioCaptureSession *_systemAudioCaptureSession;
  struct tagVCAudioDucker * _audioDucker;
  BOOL _shouldScheduleMediaQueue;
  float _averageInputPower;
  BOOL _audioControllerSupportsVoiceActivityDetection;
}

@property (readonly) VCAudioStreamGroupCommon *common;
@property (nonatomic) BOOL isVADFilteringEnabled;
@property (nonatomic) BOOL isCurrentDTXEnabled;
@property (retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector;
@property (nonatomic) unsigned int cellularUniqueTag;
@property (nonatomic) BOOL isMuted;
@property (readonly, nonatomic) int deviceRole;
@property BOOL isPowerSpectrumEnabled;

/* instance methods */
- (id)initWithConfig:(id)config;
- (void)dealloc;
- (BOOL)setupStreamGroupWithConfig:(id)config;
- (BOOL)setDeviceRole:(int)role operatingMode:(int)mode;
- (BOOL)configureAudioStreams:(id)streams deviceRole:(int)role operatingMode:(int)mode;
- (void)setPowerSpectrumEnabled:(BOOL)enabled;
- (void)setVADFilteringEnabled:(BOOL)enabled;
- (void)updateActiveVoiceOnly:(BOOL)only;
- (void)setCurrentDTXEnabled:(BOOL)dtxenabled;
- (void)updateVoiceActivityEnabled:(BOOL)enabled isMediaPriorityEnabled:(BOOL)enabled;
- (id)willStart;
- (void)didStop;
- (void)setMuted:(BOOL)muted;
- (BOOL)configureStreams;
- (void)collectAndLogChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)setReportingAgent:(struct opaqueRTCReporting *)agent;
- (void)dispatchedUpdateActiveMediaStreamIDs:(id)ids withTargetBitrate:(unsigned int)bitrate mediaBitrates:(id)bitrates rateChangeCounter:(unsigned int)counter;
- (id)activeStreamKeys;
- (BOOL)addSyncDestination:(id)destination;
- (BOOL)removeSyncDestination:(id)destination;
- (id)startCapture;
- (id)stopCapture;
- (void)redundancyController:(id)controller redundancyPercentageDidChange:(unsigned int)change;
- (void)redundancyController:(id)controller redundancyIntervalDidChange:(double)change;
- (void)redundancyController:(id)controller redundancyVectorDidChange:(struct { unsigned short x0; struct { unsigned char x10; unsigned char x1; } x[32] })change;
- (BOOL)createIOEventQueues;
- (void)cleanupIOEventQueues;
- (void)flushAudioEventQueue;
- (void)flushAudioRedundancyEventQueue;
- (void)startVoiceActivityDetection;
- (void)stopVoiceActivityDetection;
- (void)startDynamicDucker;
- (void)stopDynamicDucker;
- (void)setMuteOnStreams;
- (id)setupRedundancyControllerForMode:(unsigned int)mode;
- (id)checkStreamsForAdditionalOptIn:(id)in;
- (void)didReceiveReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned int x0 :5; unsigned int x1 :1; unsigned int x2 :2; unsigned int x3 :8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; IIII} x6[1{tagRTCP_RRB=Ib8b24] } x0; struct tagRR_RTCP { unsigned int x0; IIII} x1[1{tagRTCP_RRB=Ib8b24] } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258] } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10] } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3] } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x13; struct tagRTCP_PSFB_LOSSFB { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO { unsigned int x0; unsigned short x1; unsigned char x2; unsigned char x3; } x1; } x14; struct tagRTCP_PSFB_LTRACK { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; unsigned int x1; } x15; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_RTPFB_INDIVIDUAL_GNACK { unsigned short x10; unsigned short x1; } x[256] } x16; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x17; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x18; struct tagVCRTCPXR { unsigned int x0; unsigned int x1[0] } x19; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4 :4; unsigned int x5 :4; } x2; SSCC} x3[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12] } x20; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned int x0 :4; unsigned int x1 :4; } x2; SSCC} x3[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12] } x21; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20] } x1; } x22; } x1; } *)packet arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })ntptime;
- (void)didReceiveCustomReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned int x0 :5; unsigned int x1 :1; unsigned int x2 :2; unsigned int x3 :8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; IIII} x6[1{tagRTCP_RRB=Ib8b24] } x0; struct tagRR_RTCP { unsigned int x0; IIII} x1[1{tagRTCP_RRB=Ib8b24] } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258] } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10] } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3] } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x13; struct tagRTCP_PSFB_LOSSFB { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO { unsigned int x0; unsigned short x1; unsigned char x2; unsigned char x3; } x1; } x14; struct tagRTCP_PSFB_LTRACK { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; unsigned int x1; } x15; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_RTPFB_INDIVIDUAL_GNACK { unsigned short x10; unsigned short x1; } x[256] } x16; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x17; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x18; struct tagVCRTCPXR { unsigned int x0; unsigned int x1[0] } x19; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4 :4; unsigned int x5 :4; } x2; SSCC} x3[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12] } x20; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned int x0 :4; unsigned int x1 :4; } x2; SSCC} x3[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12] } x21; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20] } x1; } x22; } x1; } *)packet arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })ntptime;
@end

#endif /* VCAudioStreamSendGroup_h */
