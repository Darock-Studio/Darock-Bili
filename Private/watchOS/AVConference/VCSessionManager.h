//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCSessionManager_h
#define VCSessionManager_h
@import Foundation;

#include "VCSessionDelegate-Protocol.h"

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface VCSessionManager : NSObject<VCSessionDelegate> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_xpcCommandQueue;
  NSObject<OS_dispatch_queue> *_sessionQueue;
}

@property (readonly, nonatomic) NSMutableDictionary *sessions;
@property (nonatomic) BOOL sharingEnabled;
@property (nonatomic) BOOL screenAndCameraMixingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (void)addNSError:(id)nserror toXPCArgumentDictionary:(id)dictionary;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)sessionForUUID:(id)uuid;
- (id)sessionForStreamToken:(unsigned int)token;
- (void)vcSession:(id)session didStart:(BOOL)start error:(id)error;
- (void)vcSession:(id)session didStopWithError:(id)error;
- (void)vcSession:(id)session uplinkRateAdaptationDidChangeWithInfo:(id)info;
- (void)vcSession:(id)session downlinkRateAdaptationDidChangeWithInfo:(id)info;
- (void)vcSession:(id)session addParticipantWithID:(id)id didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session removeParticipantWithID:(id)id didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session updateConfiguration:(id)configuration didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session oneToOneModeEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session participantID:(id)id audioEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session participantID:(id)id videoEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session participantID:(id)id screenEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session participantID:(id)id remoteAudioEnabledDidChange:(BOOL)change;
- (void)vcSession:(id)session participantID:(id)id remoteVideoEnabledDidChange:(BOOL)change;
- (void)vcSession:(id)session participantID:(id)id remoteScreenEnabledDidChange:(BOOL)change;
- (void)vcSession:(id)session participantID:(id)id audioPaused:(BOOL)paused didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session participantID:(id)id videoPaused:(BOOL)paused didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session participantID:(id)id remoteAudioPausedDidChange:(BOOL)change;
- (void)vcSession:(id)session participantID:(id)id remoteVideoPausedDidChange:(BOOL)change;
- (void)vcSession:(id)session participantID:(id)id mediaStateDidChange:(unsigned int)change forMediaType:(unsigned int)type didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSession:(id)session participantID:(id)id remoteMediaStateDidChange:(unsigned int)change forMediaType:(unsigned int)type;
- (void)vcSession:(id)session participantID:(id)id mixingDidChangeForMediaType:(unsigned int)type mixingMediaType:(unsigned int)type;
- (void)vcSessionShouldReconnect:(id)reconnect;
- (void)vcSession:(id)session participantID:(id)id didChangeMediaPriority:(unsigned char)priority description:(id)description;
- (void)vcSession:(id)session participantID:(id)id reactionDidStart:(id)start;
- (void)vcSession:(id)session participantDidStopReacting:(id)reacting;
- (void)vcSession:(id)session participantID:(id)id didDetectError:(id)error;
- (void)registerBlocksForService;
- (void)deregisterBlocksForService;
- (id)participantConfigFromXPCDictionary:(id)xpcdictionary;
- (void)releaseSession:(id)session;
@end

#endif /* VCSessionManager_h */
