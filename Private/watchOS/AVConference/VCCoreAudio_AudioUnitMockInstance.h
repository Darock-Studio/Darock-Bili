//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCCoreAudio_AudioUnitMockInstance_h
#define VCCoreAudio_AudioUnitMockInstance_h
@import Foundation;

#include "VCObject.h"

@interface VCCoreAudio_AudioUnitMockInstance : VCObject {
  /* instance variables */
  struct AURenderCallbackStruct { undefined *inputProc; void *inputProcRefCon; } _renderCallback;
  struct AURenderCallbackStruct { undefined *inputProc; void *inputProcRefCon; } _inputCallback;
  struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _inputStreamFormat;
  struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _renderStreamFormat;
  struct AudioBufferList { unsigned int mNumberBuffers; struct AudioBuffer { unsigned int mNumberChannels; unsigned int mDataByteSize; void *mData; } x[1] mBuffers; } _inputBuffer;
  struct AudioBufferList { unsigned int mNumberBuffers; struct AudioBuffer { unsigned int mNumberChannels; unsigned int mDataByteSize; void *mData; } x[1] mBuffers; } _renderBuffer;
  float _ioBufferDuration;
  double _renderSampleTime;
  double _inputSampleTime;
  double _hostTime;
  double _timebaseHostTimeConversionRatio;
  id /* block */ _mutedSpeechActivityListener;
}

@property (readonly, nonatomic) unsigned int enableInputIO;
@property (readonly, nonatomic) unsigned int enableOutputIO;
@property (nonatomic) BOOL isRunning;
@property (nonatomic) BOOL isInitialized;
@property (nonatomic) BOOL audioSessionIDSet;
@property (nonatomic) BOOL bufferFrameSizeSet;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)setupDefaultFormat:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)format;
- (void)runAudioCallback;
- (void)runAudioCallbackWithSampleCount:(unsigned int)count timeGap:(double)gap;
- (void)resetBuffer:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x10; unsigned int x1; void * x2; } x[1] } *)buffer format:(const struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)format;
- (int)setEnableIOWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int)size;
- (int)getEnableIOWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int *)size;
- (int)setRenderCallbackWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int)size;
- (int)getRenderCallbackWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int *)size;
- (int)setInputCallbackWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int)size;
- (int)getInputCallbackWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int *)size;
- (int)setStreamFormatWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int)size;
- (int)getStreamFormatWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int *)size;
- (int)setIOBufferDurationWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int)size;
- (int)getIOBufferDurationWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int *)size;
- (int)getMaximumMediadataByteSizeWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int *)size;
- (int)setMutedTalkerNotificiationHandlerWithScope:(unsigned int)scope data:(const void *)data dataSize:(unsigned int)size;
- (BOOL)generateMutedTalkerNotification:(unsigned int)notification;
@end

#endif /* VCCoreAudio_AudioUnitMockInstance_h */
