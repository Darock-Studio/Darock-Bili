//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCSystemAudioCapture_h
#define VCSystemAudioCapture_h
@import Foundation;

#include "VCObject.h"

@protocol OS_dispatch_queue;

@interface VCSystemAudioCapture : VCObject {
  /* instance variables */
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _stateLock;
  struct { struct OpaqueAudioQueue * x0; struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x1; struct AudioQueueBuffer * x2[10] unsigned int x3; int x4; } * _audioRecorderQueue;
  struct tagVCSystemAudioCaptureTapSettings { unsigned int tapType; union { int audioProcessIdToTap; unsigned int sessionTypeToTap; } x0; struct __CFString *captureContext; unsigned int source; } _tapSettings;
  struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _audioBasicDescriptionAudioQueue;
  struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _audioBasicDescriptionAudioCapture;
  unsigned int _samplesPerFrame;
  void * _sinkContext;
  undefined * _sinkProc;
  BOOL _firstAudioBufferReceived;
  struct opaqueVCAudioBufferList * _audioBufferAppendList;
  struct opaqueVCAudioBufferList * _audioBufferOutputList;
  double _conversionRatio;
  unsigned int _timestamp;
  double _hostTime;
  double _startHostTime;
  NSObject<OS_dispatch_queue> *_callbackQueue;
}

/* class methods */
+ (BOOL)isValidConfiguration:(struct { struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } x0; void * x1; undefined * x2; struct tagVCSystemAudioCaptureTapSettings { unsigned int x0; union { int x0; unsigned int x1; } x1; struct __CFString * x2; unsigned int x3; } x3; } *)configuration;
+ (id)newAudioTapWithProcessID:(int)id audioFormat:(id)format;
+ (unsigned int)audioTapSessionTypeForInternalSessionType:(unsigned int)type;
+ (id)newAudioTapWithSessionType:(unsigned int)type audioFormat:(id)format;
+ (id)newAudioTapWithCaptureContext:(struct __CFString *)context audioFormat:(id)format;

/* instance methods */
- (id)initWithConfiguration:(struct { struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } x0; void * x1; undefined * x2; struct tagVCSystemAudioCaptureTapSettings { unsigned int x0; union { int x0; unsigned int x1; } x1; struct __CFString * x2; unsigned int x3; } x3; } *)configuration;
- (void)dealloc;
- (BOOL)start;
- (BOOL)stop;
- (void)setQueueState:(int)state;
- (int)getQueueState;
- (id)newAudioTapWithAudioStreamBasicDescription:(struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)description;
- (void)setupCannedAudioInjection;
@end

#endif /* VCSystemAudioCapture_h */
