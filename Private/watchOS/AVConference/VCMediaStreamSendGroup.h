//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCMediaStreamSendGroup_h
#define VCMediaStreamSendGroup_h
@import Foundation;

#include "VCMediaStreamGroup.h"
#include "VCRedundancyControllerProtocol-Protocol.h"

@class NSMutableArray, NSMutableDictionary;

@interface VCMediaStreamSendGroup : VCMediaStreamGroup {
  /* instance variables */
  BOOL _isRedundancyEnabled;
  NSMutableArray *_peerSubscribedStreams;
  BOOL _isRemoteOnPeace;
  NSMutableDictionary *_sendGroupConfigForMode;
  unsigned int _streamGroupMode;
  BOOL _shouldSynchronizeWithSourceRTPTimestamps;
  struct _opaque_pthread_rwlock_t { long long __sig; char x[192] __opaque; } _sourceTimestampRWLock;
  unsigned int _lastSentSourceSampleTime;
  double _lastSentSourceHostTime;
  BOOL _isSourceTimestampInfoAvailable;
  double _sourceSampleRate;
}

@property (nonatomic) unsigned int currentUplinkTargetBitrate;
@property (nonatomic) unsigned int currentUplinkTotalBitrate;
@property (nonatomic) unsigned int uplinkBitrateCapWifi;
@property (nonatomic) unsigned int uplinkBitrateCapCell;
@property (nonatomic) BOOL isSuspended;
@property (retain, nonatomic) NSObject<VCRedundancyControllerProtocol> *redundancyController;
@property (nonatomic) BOOL isRetransmissionEnabled;

/* instance methods */
- (id)initWithConfig:(id)config;
- (void)dealloc;
- (id)streamGroupConfigForMode:(unsigned int)mode;
- (BOOL)setStreamGroupMode:(unsigned int)mode;
- (unsigned int)streamGroupMode;
- (void)updateEncryptionInformationWithConfig:(id)config;
- (BOOL)setupStreamGroupWithConfig:(id)config;
- (BOOL)updateConfig:(id)config forMode:(unsigned int)mode;
- (BOOL)shouldCompoundListIgnoreStream:(id)stream streamConfig:(id)config activeStreamIds:(id)ids;
- (void)updateStreamIDCompoundingWithBlock:(id /* block */)block activeStreamIds:(id)ids;
- (id)streamDescriptionForMediaStreamConfig:(id)config;
- (BOOL)shouldSubscribeToStreamID:(id)id peerSubscribedStreams:(id)streams;
- (BOOL)updateUplinkStreamsForPeerSubscribedStreams:(id)streams;
- (void)updateActiveMediaStreamIDs:(id)ids withTargetBitrate:(unsigned int)bitrate mediaBitrates:(id)bitrates rateChangeCounter:(unsigned int)counter;
- (void)dispatchedUpdateActiveMediaStreamIDs:(id)ids withTargetBitrate:(unsigned int)bitrate mediaBitrates:(id)bitrates rateChangeCounter:(unsigned int)counter;
- (BOOL)enableRedundancy:(BOOL)redundancy;
- (void)setRetransmissionEnabled:(BOOL)enabled;
- (void)updateUplinkBitrateCapCell:(unsigned int)cell activeStreamIDs:(id)ids;
- (void)updateUplinkBitrateCapWifi:(unsigned int)wifi activeStreamIDs:(id)ids;
- (id)peerSubscribedStreams;
- (BOOL)updatePeerSubscribedStreams:(id)streams containsRepairStreams:(BOOL)streams;
- (id)checkStreamsForAdditionalOptIn:(id)in;
- (id)mediaStreamInfosForEndToEndConnection:(BOOL)connection;
- (void)dispatchedUpdateStreamsWithActiveConnection:(id)connection;
- (void)setActiveConnection:(id)connection uplinkBitrateCap:(unsigned int)cap activeMediaStreamIDs:(id)ids mediaBitrates:(id)bitrates rateChangeCounter:(unsigned int)counter;
- (id)activeStreamKeys;
- (unsigned int)calculateUplinkTotalBitrateForMediaStreams:(id)streams;
- (void)updateActiveStreamsCount:(unsigned int)count;
- (void)updateEnabledState;
- (void)didStart;
- (void)didStop;
- (void)didPause:(BOOL)pause;
- (void)setStatisticsCollector:(id)collector;
- (void)didReceiveReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned int x0 :5; unsigned int x1 :1; unsigned int x2 :2; unsigned int x3 :8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; IIII} x6[1{tagRTCP_RRB=Ib8b24] } x0; struct tagRR_RTCP { unsigned int x0; IIII} x1[1{tagRTCP_RRB=Ib8b24] } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258] } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10] } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3] } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x13; struct tagRTCP_PSFB_LOSSFB { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO { unsigned int x0; unsigned short x1; unsigned char x2; unsigned char x3; } x1; } x14; struct tagRTCP_PSFB_LTRACK { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; unsigned int x1; } x15; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_RTPFB_INDIVIDUAL_GNACK { unsigned short x10; unsigned short x1; } x[256] } x16; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x17; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x18; struct tagVCRTCPXR { unsigned int x0; unsigned int x1[0] } x19; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4 :4; unsigned int x5 :4; } x2; SSCC} x3[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12] } x20; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned int x0 :4; unsigned int x1 :4; } x2; SSCC} x3[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12] } x21; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20] } x1; } x22; } x1; } *)packet arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })ntptime;
- (void)didReceiveCustomReportPacket:(struct tagRTCPPACKET { struct tagRTCPCOMMON { unsigned int x0 :5; unsigned int x1 :1; unsigned int x2 :2; unsigned int x3 :8; unsigned short x4; } x0; union { struct tagSR_RTCP { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; IIII} x6[1{tagRTCP_RRB=Ib8b24] } x0; struct tagRR_RTCP { unsigned int x0; IIII} x1[1{tagRTCP_RRB=Ib8b24] } x1; struct tagSDES_RTCP { unsigned int x0; struct tagRTCPSDES { unsigned char x0; unsigned char x1; char x2[258] } x1; } x2; struct tagBYE_RTCP { unsigned int x0; } x3; struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x4; struct tagRTCP_APP_LTRP { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x5; struct tagFIR_RTCP { unsigned int x0; unsigned short x1[10] } x6; struct tagNACK_RTCP { unsigned int x0; unsigned short x1; unsigned short x2; } x7; struct tagRTCP_PSFB_PLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; } x8; struct tagRTCP_PSFB_SLI { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x9; struct tagRTCP_PSFB_FIR { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned char x2; unsigned char x3[3] } x10; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x11; struct tagRTCP_PSFB_TST { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x12; struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x13; struct tagRTCP_PSFB_LOSSFB { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO { unsigned int x0; unsigned short x1; unsigned char x2; unsigned char x3; } x1; } x14; struct tagRTCP_PSFB_LTRACK { struct tagRTCP_PSFB_ALFB_HEADER { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; } x0; unsigned int x1; } x15; struct tagRTCP_RTPFB_GNACK { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_RTPFB_INDIVIDUAL_GNACK { unsigned short x10; unsigned short x1; } x[256] } x16; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x17; struct tagRTCP_RTPFB_TMMB { struct tagRTCP_FBCOMMON { unsigned int x0; unsigned int x1; } x0; unsigned int x1; unsigned int x2; } x18; struct tagVCRTCPXR { unsigned int x0; unsigned int x1[0] } x19; struct tagRTCP_CUSTOM_SR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_SENDER_INFO { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4 :4; unsigned int x5 :4; } x2; SSCC} x3[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12] } x20; struct tagRTCP_CUSTOM_RR { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; unsigned int x1; struct tagRTCP_CUSTOM_RECEIVER_INFO { unsigned int x0 :4; unsigned int x1 :4; } x2; SSCC} x3[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12] } x21; struct tagRTCP_CUSTOM_RCTL { struct tagRTCP_APP { unsigned int x0; unsigned int x1; } x0; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO { unsigned char x0[20] } x1; } x22; } x1; } *)packet arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })ntptime;
- (void)didReceiveRTCPPackets:(struct _RTCPPacketList { union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; } x0; unsigned char x1; struct tagRTCPPACKET * x2[10] struct OpaqueCMBlockBuffer * x3; char * x4; unsigned long long x5; unsigned int x6; unsigned char x7[1472] unsigned short x8[12] unsigned char x9; BOOL x10; unsigned long long x11; struct { struct _RTCPPacketList * x0; } x12; } *)rtcppackets;
@end

#endif /* VCMediaStreamSendGroup_h */
