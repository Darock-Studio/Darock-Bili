//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCMediaControlInfoFaceTimeAudio_h
#define VCMediaControlInfoFaceTimeAudio_h
@import Foundation;

#include "VCMediaControlInfo.h"

@interface VCMediaControlInfoFaceTimeAudio : VCMediaControlInfo {
  /* instance variables */
  unsigned int _controlInfoReceivedKbits;
  unsigned int _controlInfoReceivedPackets;
  unsigned int _controlInfoAudioPacketSize;
  unsigned int _controlInfoAudioTimestamp;
  double _controlInfoArrivalTime;
  struct { unsigned short timeStamp; unsigned short bandwithEstimation; unsigned short videoBurstLoss; unsigned short videoReceviedPkts; unsigned short audioBurstLoss; unsigned short audioReceviedPkts; unsigned int totalReceviedKbits; unsigned int receiveQueueTarget; unsigned int queuingDelay; unsigned short sendTimestamp; unsigned int owrd; unsigned int connectionStatsBuffer; unsigned short ecnECT1Count; unsigned short ecnCECount; } _controlFeedbackParameter;
  unsigned short _controlInfoSequenceNumber;
  BOOL _controlInfoIsDuplicatePacket;
  BOOL _controlInfoIsReceivedOnPrimary;
  unsigned char _controlInfoECNByte;
}

@property (readonly) unsigned long long feedbackSize;
@property BOOL videoEnabled;
@property BOOL ecnEnabled;

/* instance methods */
- (id)init;
- (id)initWithBuffer:(const char *)buffer length:(unsigned long long)length optionalControlInfo:(struct { double x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned short x7; BOOL x8; BOOL x9; unsigned char x10; } *)info version:(unsigned char)version;
- (unsigned long long)serializedSize;
- (id)description;
- (int)handleOptionalControlInfo:(struct { double x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned short x7; BOOL x8; BOOL x9; unsigned char x10; } *)info;
- (int)configureWithBuffer:(const char *)buffer length:(unsigned long long)length optionalControlInfo:(struct { double x0; int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned short x7; BOOL x8; BOOL x9; unsigned char x10; } *)info;
- (int)getInfoUnserialized:(struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned short x9; unsigned int x10; unsigned int x11; unsigned short x12; unsigned short x13; } *)unserialized type:(unsigned int)type;
- (int)setInfo:(void *)info size:(unsigned long long)size type:(unsigned int)type;
- (BOOL)hasInfoType:(unsigned int)type;
- (int)setInfoUnserialized:(struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned short x9; unsigned int x10; unsigned int x11; unsigned short x12; unsigned short x13; } *)unserialized type:(unsigned int)type;
- (int)getInfo:(void *)info bufferLength:(unsigned long long)length infoSize:(unsigned long long *)size type:(unsigned int)type;
- (int)serializeToBuffer:(char *)buffer bufferLength:(unsigned long long)length blobLength:(unsigned long long *)length;
@end

#endif /* VCMediaControlInfoFaceTimeAudio_h */
