//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCTransport_h
#define VCTransport_h
@import Foundation;

@class NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface VCTransport : NSObject {
  /* instance variables */
  struct tagHANDLE { int x0; } * tpHandle;
  NSMutableDictionary *iceBlocks;
  NSObject<OS_dispatch_queue> *delegateQueue;
  NSMutableDictionary *dataReceivedHandlers;
  NSObject<OS_dispatch_queue> *dataReceivedHandlerQueue;
}

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)setReportingAgent:(struct opaqueRTCReporting *)agent;
- (void)registerICEBlockForCallID:(unsigned int)id connectedBlock:(id /* block */)block newCandidatesBlock:(id /* block */)block newNominationBlock:(id /* block */)block removeIPPortBlock:(id /* block */)block;
- (int)updateInterfaceList:(unsigned int)list shouldFilterCellInterface:(BOOL)interface isUpdateNeeded:(int *)needed;
- (void)iceConnectedForCallID:(unsigned int)id result:(struct tagCONNRESULT { unsigned int x0; int x1; int x2; unsigned int x3; int x4; int x5; unsigned short x6; unsigned short x7; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x8; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x9; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x10; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x11; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x12; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x13; unsigned int x14; int x15; int x16; int x17; int x18; unsigned short x19; int x20; int x21; int x22; struct tagCONNRESULT * x23; int x24; } *)result didReceivePacket:(int)packet useRelay:(int)relay secretKey:(struct __CFData *)key skeResult:(int)result;
- (void)iceNewCandidatesForCallID:(unsigned int)id blob:(char *)blob size:(int)size newCandidateVersion:(unsigned short)version;
- (void)iceShouldNominateNewCandidate:(struct tagCANDIDATEPAIR { struct tagCANDIDATE { int x0; int x1; unsigned int x2; unsigned char x3[8] unsigned short x4; unsigned short x5; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x6; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x7; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x8; unsigned int x9; } x0; struct tagCANDIDATE { int x0; int x1; unsigned int x2; unsigned char x3[8] unsigned short x4; unsigned short x5; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x6; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x7; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x8; unsigned int x9; } x1; int x2; unsigned short x3; unsigned short x4; unsigned char x5[8] struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x6; unsigned int x7; int x8; int x9; int x10; int x11; int x12; int x13; int x14; int x15; struct tagCANDIDATEPARIR * x16; } *)candidate forCallID:(unsigned int)id interfaceMask:(int)mask nominated:(int *)nominated demote:(int *)demote connectionPriority:(int *)priority replaceOnly:(int *)only;
- (void)iceRemoveIPPort:(struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } *)ipport forCallID:(unsigned int)id isLocalInterface:(BOOL)interface;
- (void)registerDataReceivedHandler:(id /* block */)handler forCallID:(unsigned int)id;
- (void)receivedDataPacket:(char *)packet length:(int)length forCallID:(unsigned int)id encrypted:(BOOL)encrypted OFTType:(int)ofttype;
- (int)stopConnectivityCheckForCallID:(unsigned int)id;
- (id)getRemoteCIDForDstIPPort:(struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } *)ipport callID:(unsigned int)id;
- (int)getNextBestCandidate:(struct tagCANDIDATE { int x0; int x1; unsigned int x2; unsigned char x3[8] unsigned short x4; unsigned short x5; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x6; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x7; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x8; unsigned int x9; } *)candidate callID:(unsigned int)id isLocal:(int)local IPPortToExclude:(struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } *)exclude;
- (int)discardRelayBindingForCallID:(unsigned int)id;
- (int)discardRelayBindingForCallID:(unsigned int)id withChannelNumber:(int)number;
- (int)getConnectionDataForCallID:(unsigned int)id version:(unsigned char)version useCompressedData:(BOOL)data pConnectionData:(void * *)data connectDataSizeInBytes:(int *)bytes relayDictionary:(struct __CFDictionary *)dictionary interfaceUpdate:(BOOL)update nonCellularCandidateTimeout:(double)timeout;
- (int)setupDTLSSecurity:(unsigned int)dtlssecurity connectionResult:(struct tagCONNRESULT { unsigned int x0; int x1; int x2; unsigned int x3; int x4; int x5; unsigned short x6; unsigned short x7; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x8; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x9; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x10; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x11; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x12; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x13; unsigned int x14; int x15; int x16; int x17; int x18; unsigned short x19; int x20; int x21; int x22; struct tagCONNRESULT * x23; int x24; } *)result completionHandler:(id /* block */)handler;
- (int)detailedErrorCodeForConnectionWithCallID:(unsigned int)id;
- (int)startConnectionCheckForCallID:(unsigned int)id remoteConnectionDataBlob:(id)blob relayDictionary:(id)dictionary iceTimeout:(double)timeout securityIdentity:(struct __SecIdentity *)identity skeState:(struct SKEStateOpaque *)state usedRelay:(int *)relay;
- (BOOL)ipPortStillExists:(struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } *)exists requiresWifi:(BOOL)wifi;
- (int)sendUDPPacketReliableEncrypted:(id)encrypted localIPPort:(struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } *)ipport destinationIPPort:(struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } *)ipport oftType:(int)type;
- (int)sendData:(id)data localCallID:(unsigned int)id remoteCallID:(unsigned int)id encrypted:(BOOL)encrypted OFTType:(int)ofttype;
- (int)setForceRelayForCallID:(unsigned int)id;
- (int)setForceIPv6ForCallID:(unsigned int)id;
- (int)updateICERoleForCallID:(unsigned int)id role:(int)role remoteCallID:(unsigned int)id sessionID:(struct __CFString *)id;
- (int)setSKEState:(struct SKEStateOpaque *)skestate forCallID:(unsigned int)id;
- (int)setICETimeout:(double)icetimeout;
- (int)updateQoS:(BOOL)s;
- (int)getLoopbackIP:(struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } *)ip;
- (void)setARPLHandler:(id /* block */)arplhandler;
- (int)processRemoteInterfaceChangeMessageWithLocalCallID:(unsigned int)id remoteCallID:(unsigned int)id remoteData:(void *)data remoteLen:(int)len remoteCandidateVersion:(unsigned short)version;
- (int)getRemoteICEVersion:(unsigned int)iceversion remoteICEVersion:(unsigned int *)iceversion;
- (void)cleanup;
@end

#endif /* VCTransport_h */
