//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCVideoStreamTransmitter_h
#define VCVideoStreamTransmitter_h
@import Foundation;

#include "VCVideoTransmitterBase.h"
#include "AVCStatisticsCollector.h"
#include "VCMediaStreamStats.h"

@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface VCVideoStreamTransmitter : VCVideoTransmitterBase {
  /* instance variables */
  struct tagHANDLE { int x0; } * _videoRTP;
  NSObject<OS_dispatch_queue> *_transmitterQueue;
  struct tagVCRealTimeThread { unsigned int x0; unsigned int x1; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x2; id x3; undefined * x4; void * x5; struct OpaqueFigThread * x6; int x7; char x8[60] unsigned int x9; unsigned int x10; } * _encoderThread;
  BOOL _terminateEncoderThread;
  NSObject<OS_dispatch_semaphore> *_bufferQueueSemaphore;
  struct opaqueCMBufferQueue * _bufferQueue;
  char * _buffer;
  unsigned long long _bufferSize;
  int _maxPacketCount;
  int * _packetSizes;
  int * _packetFlags;
  unsigned long long _lastKeyFrameSampleBufferSize;
  int _iSMBCount;
  unsigned int _keyFrameIntervalDuration;
  unsigned short _recommendedMTU;
  long long _videoCodecType;
  int _videoSource;
  unsigned int _dwRefreshFrameCounter;
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _xMBs;
  int _shouldGenerateKeyFrame;
  VCMediaStreamStats *_stats;
  double _reportingIntervalStartTime;
  double _reportingLastUpdateTime;
  unsigned char _lastCameraStatusBits;
  BOOL _enableCVO;
  unsigned long long _cvoExtensionID;
  struct opaqueRTCReporting * _reportingAgent;
  int _reportingModuleID;
  struct { struct  *encoderVTable; int type; struct tagHANDLE *encoderHandle; } _encoder;
  struct tagVCMemoryPool { struct { void * x0; long long x1; } x0; unsigned long long x1; } * _encodingArgPool;
  BOOL _forceDisableBitrateCap;
  AVCStatisticsCollector *_statisticsCollector;
  unsigned int _totalPacketsSent;
  unsigned long long _totalBytesSent;
  unsigned int _tilesPerFrame;
  unsigned int _totalKeyFramesSent;
  struct __CFAllocator * _videoPacketAllocator;
}

/* instance methods */
- (id)initWithConfig:(id)config;
- (void)dealloc;
- (void)startVideo;
- (void)stopVideo;
- (void)generateKeyFrameWithFIRType:(int)firtype;
- (unsigned int)setTemporaryMaximumBitrate:(unsigned int)bitrate;
- (void)setTargetBitrate:(unsigned int)bitrate;
- (void)setKeyFrameOnlyStreamID:(unsigned short)id;
- (void)setStreamIDs:(unsigned short *)ids numOfStreamIDs:(unsigned char)ids repairedStreamIDs:(unsigned short *)ids numOfRepairedStreamIDs:(unsigned char)ids;
- (void)setFECRedundancyVector:(const struct { unsigned short x0; struct { unsigned char x10; unsigned char x1; } x[32] } *)vector;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; } *)suggestion;
- (BOOL)setEncodingMode:(int)mode;
- (void)handleThermalLevelChange:(int)change;
- (void)updateWindowState:(int)state isLocal:(BOOL)local windowRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)initVideoCompressionWithWidth:(unsigned int)width height:(unsigned int)height bitrate:(unsigned int)bitrate keyFrameIntervalDuration:(unsigned int)duration;
- (struct __CFDictionary *)forceKeyFrameProperties;
- (void)encodeVideoFrame:(struct opaqueCMSampleBuffer *)frame;
- (BOOL)prependSPSPPS:(unsigned long long *)spspps dataPointer:(char *)pointer sampleBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (BOOL)isKeyFrame:(struct opaqueCMSampleBuffer *)frame;
- (void)transmitEncodedVideoFrame:(struct opaqueCMSampleBuffer *)frame cameraStatusBits:(unsigned char)bits;
- (int)transmitEncodedVideoFrame:(char *)frame size:(unsigned long long)size timestamp:(unsigned int)timestamp hostTime:(double)time cameraStatusBits:(unsigned char)bits;
- (int)transmitFrameInGroups:(char *)groups numOfPackets:(int)packets timestamp:(unsigned int)timestamp hostTime:(double)time cameraStatusBits:(unsigned char)bits;
- (int)transmitVideoPackets:(const char *)packets packetSizes:(int *)sizes startPacket:(int)packet packetCount:(int)count lastGroup:(int)group timestamp:(unsigned int)timestamp hostTime:(double)time cameraStatusBits:(unsigned char)bits bytesSent:(int *)sent;
- (void)updateSendStatisticsWithTimestamp:(unsigned int)timestamp frameSize:(unsigned int)size packetsInFrame:(unsigned int)frame;
- (void)gatherRealtimeStats:(struct __CFDictionary *)stats;
- (void)reportingVideoStreamEvent:(unsigned short)event;
- (void)handleActiveConnectionChange:(id)change;
@end

#endif /* VCVideoStreamTransmitter_h */
