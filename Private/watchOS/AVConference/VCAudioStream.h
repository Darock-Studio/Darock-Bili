//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCAudioStream_h
#define VCAudioStream_h
@import Foundation;

#include "VCMediaStream.h"
#include "AVCStatisticsCollector.h"
#include "DTMFEventHandler.h"
#include "VCAudioIO.h"
#include "VCAudioIODelegate-Protocol.h"
#include "VCAudioIOSink-Protocol.h"
#include "VCAudioIOSource-Protocol.h"
#include "VCAudioPayload.h"
#include "VCAudioPowerSpectrumSource.h"
#include "VCAudioTransmitter.h"
#include "VCMediaStreamRateAdaptationDelegate-Protocol.h"
#include "VCMediaStreamSyncSource-Protocol.h"
#include "VCTelephonyInterface.h"
#include "VCTelephonyInterfaceDelegate-Protocol.h"
#include "WRMClient.h"

@class NSMutableArray, NSNumber, NSString;
@protocol OS_dispatch_semaphore, OS_dispatch_source, {_VCAudioStreamSourceContext="isRemoteMuted"B"soundMeter"{_METER_INFO="frequencyMeteringEnabled"B"fftMeter"^{opaqueVCFFTMeter}}"audioReceiver"^{tagVCAudioReceiver}"framesProcessed"I"volume"f"shouldPostProcessSamples"B"isSendOnly"B"isRemoteMediaStalled"B"lastReceivedAudioTimestamp"d"packetsSinceStallCount"i"remoteMediaStallTimeout"d"awdTimeReceiver"I"stallReportCount"C"transports"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"syncDelegateList"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"oneToOneStreamID"S"oneToOneStatisticsCollector"@"AVCStatisticsCollector""isMultiwayConfig"B"targetBitrate"I"delegate"@"<VCMediaStreamDelegate>""delegateFunctions"{tagVCMediaStreamDelegateRealtimeInstanceVTable="updateFrequencyLevel"^?}"self"@"VCAudioStream""momentsCollectorDelegate"@"<VCMomentsCollectorDelegate>""wrmInfo"^{tagWRMMetricsInfo}"defaultRtpHandle"^{tagHANDLE}};

@interface VCAudioStream : VCMediaStream<VCTelephonyInterfaceDelegate, VCMediaStreamRateAdaptationDelegate, VCMediaStreamSyncSource, VCAudioIOSource, VCAudioIOSink, VCAudioIODelegate> {
  /* instance variables */
  int _clientPid;
  int numBufferBytesAvailable;
  NSObject<OS_dispatch_source> *pausedAudioHeartBeat;
  double dAudioHostTime;
  BOOL lastVoiceActive;
  double _remoteMediaStallTimeout;
  unsigned int lastInputAudioTimeStamp;
  unsigned int lastSentAudioSampleTime;
  struct _opaque_pthread_rwlock_t { long long __sig; char x[192] __opaque; } stateLock;
  NSMutableArray *audioPayloads;
  struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } format; unsigned int samplesPerFrame; } _vpioFormat;
  BOOL _useExternalIO;
  int preferredAudioCodec;
  DTMFEventHandler *dtmfEventHandler;
  WRMClient *wrmClient;
  VCAudioPayload *currentAudioPayload;
  VCAudioPayload *currentDTXPayload;
  int _reportingModuleID;
  VCTelephonyInterface *_telephonyInterface;
  BOOL _isMuted;
  unsigned int * _reportingSSRCList;
  unsigned int _reportingSSRCCount;
  BOOL _rtpEnabledBeforeInterrupt;
  BOOL _rtcpEnabledBeforeInterrupt;
  unsigned int _pullAudioSamplesCount;
  struct _VCAudioStreamSinkContext { struct _METER_INFO { BOOL frequencyMeteringEnabled; struct opaqueVCFFTMeter *fftMeter; } soundMeter; } _sinkContext;
  struct _VCAudioStreamSourceContext { BOOL isRemoteMuted; struct _METER_INFO { BOOL frequencyMeteringEnabled; struct opaqueVCFFTMeter *fftMeter; } soundMeter; struct tagVCAudioReceiver *audioReceiver; unsigned int framesProcessed; float volume; BOOL shouldPostProcessSamples; BOOL isSendOnly; BOOL isRemoteMediaStalled; double lastReceivedAudioTimestamp; int packetsSinceStallCount; double remoteMediaStallTimeout; unsigned int awdTimeReceiver; unsigned char stallReportCount; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry *head; BOOL initialized; undefined *compare; unsigned long long countEntries; } transports; struct _VCSingleLinkedList { struct _VCSingleLinkedListEntry *head; BOOL initialized; undefined *compare; unsigned long long countEntries; } syncDelegateList; unsigned short oneToOneStreamID; AVCStatisticsCollector *oneToOneStatisticsCollector; BOOL isMultiwayConfig; unsigned int targetBitrate; <VCMediaStreamDelegate> *delegate; struct tagVCMediaStreamDelegateRealtimeInstanceVTable { undefined *updateFrequencyLevel; } delegateFunctions; VCAudioStream *self; <VCMomentsCollectorDelegate> *momentsCollectorDelegate; struct tagWRMMetricsInfo *wrmInfo; struct tagHANDLE *defaultRtpHandle; } _sourceContext;
  long long _inputAudioPowerSpectrumToken;
  long long _outputAudioPowerSpectrumToken;
  VCAudioPowerSpectrumSource *_inputAudioPowerSpectrumSource;
  VCAudioPowerSpectrumSource *_outputAudioPowerSpectrumSource;
  unsigned int _abnormalOWRDCount;
  double _lastAbnormalOWRDVerificationTime;
  double _lastNetworkHealthPrintTime;
  double _packetLossRateAccum;
  int _packetLossRateCount;
  double _packetLossRate5Secs;
  double _timeLastPLR5Secs;
  BOOL _anbrEnabled;
  BOOL _anbrActive;
  struct ifnet_interface_advisory { union { struct { unsigned char version; unsigned char direction; unsigned short _reserved; int rate_trend_suggestion; unsigned long long timestamp; unsigned long long max_bandwidth; unsigned long long total_byte_count; unsigned long long average_throughput; unsigned int flushable_queue_size; unsigned int non_flushable_queue_size; unsigned int average_delay; unsigned char frequency_band; unsigned char intermittent_state; unsigned short estimated_intermittent_period; unsigned short single_outage_period; unsigned char bt_coex; unsigned char quality_score_delay; unsigned char quality_score_loss; unsigned char quality_score_channel; } x0; struct { struct ifnet_interface_advisory_header { unsigned char version; unsigned char direction; unsigned char interface_type; unsigned char reserved; } header; struct ifnet_interface_advisory_capacity { int rate_trend_suggestion; unsigned long long timestamp; unsigned long long max_bandwidth; unsigned long long total_byte_count; unsigned long long average_throughput; unsigned int flushable_queue_size; unsigned int non_flushable_queue_size; unsigned int average_delay; } capacity; union { struct ifnet_interface_advisory_wifi_context { unsigned char frequency_band; unsigned char intermittent_state; unsigned short estimated_intermittent_period; unsigned short single_outage_period; unsigned char bt_coex; unsigned char quality_score_delay; unsigned char quality_score_loss; unsigned char quality_score_channel; unsigned char radio_coex; unsigned short wlan_duty_cycle; unsigned int x[6] wifi_observed_tx_bitrate; } wifi_context; struct ifnet_interface_advisory_cell_context { unsigned char radio_access_technology; short reference_signal_level; short signal_level; char signal_quality; unsigned char uplink_bler; unsigned char downlink_bler; unsigned char bandwidth_limitation_indication; unsigned char cdrx_state; unsigned short cdrx_cycle; unsigned short estimated_outage_period; unsigned char outage_state; unsigned char __pad; } cell_context; } x0; } x1; } x0; } _lastNWConnectionNotification;
  unsigned int _awdTimeTransmitter;
  struct opaqueCMSimpleQueue * _syncSourceDelegateQueue;
  struct __CFArray * _syncSourceDelegates;
  BOOL _isTelephony;
  unsigned int _uplinkRateAdaptationMaxAllowedBitrate;
  BOOL _isVoiceProcessingAt24KSupported;
  BOOL _isRamStadSRCEnabled;
  unsigned int _preferredMediaBitrate;
  AVCStatisticsCollector *_statsCollector;
  BOOL _enableAudioPowerSpectrum;
  unsigned int _audioSessionId;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _delegateLock;
  NSObject<OS_dispatch_semaphore> *_runLock;
  unsigned int _cachedConnectionMTU;
  unsigned int _constantTransportOverhead;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) VCAudioIO *audioIO;
@property (readonly) unsigned int conferenceID;
@property (nonatomic) BOOL isValid;
@property (nonatomic) int deviceRole;
@property (nonatomic) BOOL muted;
@property (nonatomic) BOOL remoteMuted;
@property (nonatomic) BOOL sendActiveVoiceOnly;
@property (nonatomic) BOOL currentDTXEnable;
@property (retain, nonatomic) NSNumber *targetStreamID;
@property (nonatomic) long long overlayToken;
@property (nonatomic) float volume;
@property (readonly, nonatomic) void * realtimeSourceContext;
@property (readonly, nonatomic) unsigned int actualAudioSendingBitrate;
@property (nonatomic) unsigned int lastNoVoiceActivityPacketCount;
@property (retain) VCAudioTransmitter *audioTransmitter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)isTelephony:(long long)telephony;
+ (BOOL)isVoLTE:(long long)lte;
+ (BOOL)shouldUseAACELDSBRForMode:(long long)mode;
+ (unsigned int)audioChannelCountForMode:(id)mode;
+ (unsigned int)audioIOTypeForMode:(long long)mode;
+ (id)newPayloadConfigForCodecConfig:(id)config streamConfig:(id)config inputSampleRate:(unsigned int)rate;
+ (int)operatingModeForAudioStreamMode:(long long)mode;
+ (unsigned char)audioIODirectionWithMediaStreamDirection:(long long)direction;
+ (void)terminateProcess:(id)process terminateSource:(id)source agent:(struct opaqueRTCReporting *)agent;
+ (id)supportedAudioPayloads;
+ (id)capabilities;
+ (BOOL)shouldUseRandomRTPTimestampForMode:(int)mode;

/* instance methods */
- (void)setIsLocalCelluar:(unsigned int)celluar;
- (void)handleCellularToWiFiHandover;
- (void)handleWiFiToCelluarHandover;
- (void)setJitterBufferMode:(int)mode;
- (BOOL)isVoLTERateAdaptationEnabled;
- (void)configureCellularFeatures;
- (void)notifyCodecModeChangeToCT:(struct _VCAudioCodecModeChangeEvent { int x0; int x1; int x2; unsigned int x3; struct EVSRFParams { unsigned int x0; unsigned int x1; } x4; })ct;
- (void)setRemoteCodecTypeAndSampleRate:(struct _VCAudioCodecModeChangeEvent { int x0; int x1; int x2; unsigned int x3; struct EVSRFParams { unsigned int x0; unsigned int x1; } x4; })rate;
- (void)queryAnbrBitrate:(unsigned int)bitrate forDirection:(long long)direction;
- (void)notifyCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent { int x0; int x1; int x2; unsigned int x3; struct EVSRFParams { unsigned int x0; unsigned int x1; } x4; })event didUpdateBandwidth:(BOOL)bandwidth didUpdateBitrate:(BOOL)bitrate;
- (void)handleCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent { int x0; int x1; int x2; unsigned int x3; struct EVSRFParams { unsigned int x0; unsigned int x1; } x4; })event;
- (void)handleUplinkANBR:(struct _VCAudioCodecModeChangeEvent { int x0; int x1; int x2; unsigned int x3; struct EVSRFParams { unsigned int x0; unsigned int x1; } x4; })anbr;
- (void)handleDownlinkANBR:(struct _VCAudioCodecModeChangeEvent { int x0; int x1; int x2; unsigned int x3; struct EVSRFParams { unsigned int x0; unsigned int x1; } x4; })anbr;
- (int)selectCodecBandwidthForCodecRateMode:(int)mode;
- (void)handleANBR:(unsigned int)anbr forDirection:(long long)direction;
- (void)telephonyInterface:(id)interface anbrActivationUpdate:(BOOL)update;
- (void)telephonyInterface:(id)interface anbrRecommendation:(unsigned int)recommendation forDirection:(long long)direction;
- (void)rateAdaptation:(id)adaptation targetBitrateDidChange:(unsigned int)change rateChangeCounter:(unsigned int)counter;
- (unsigned int)computePacketTimestampWithInputTimestamp:(unsigned int)timestamp numSamples:(int)samples hostTime:(double)time;
- (unsigned int)internalSampleRateForCodecType:(long long)type;
- (void)_computeInternalFormatForStreamConfigurations:(id)configurations;
- (BOOL)generateRTCPXRSummaryReports:(struct tagVCRTCPXRSummaryReport { BOOL x0; BOOL x1; BOOL x2; int x3; unsigned int x4; unsigned short x5; unsigned short x6; unsigned int x7; unsigned int x8; int x9; int x10; int x11; int x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; } *)reports reportCount:(char *)count;
- (BOOL)generateRTCPXRVoIPMetricsReports:(struct tagVCRTCPXRVoIPMetricsReport { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; unsigned short x17; unsigned short x18; unsigned short x19; } *)reports reportCount:(char *)count;
- (void)startAudioWithCompletionHandler:(id /* block */)handler;
- (void)stopAudioWithCompletionHandler:(id /* block */)handler;
- (id)getSupportedPayloads;
- (BOOL)setupPayloads;
- (id)codecConfigForOpusWithStreamConfig:(id)config;
- (void)getCodecConfigForPayload:(int)payload block:(id /* block */)block;
- (unsigned int)preferredAudioBitrateForPayload:(int)payload;
- (id)configForPayloadType:(int)type;
- (id)addAudioPayload:(int)payload;
- (void)setDTXPayload:(id)dtxpayload;
- (BOOL)setReceiverPayloads;
- (double)lastReceivedRTPPacketTime;
- (double)lastReceivedRTCPPacketTime;
- (void)updateSyncSourceState:(int)state;
- (void)willExitState:(int)state newState:(int)state;
- (void)didEnterState:(int)state oldState:(int)state;
- (void)setDeviceRoleForAudioStreamMode:(long long)mode direction:(long long)direction;
- (void)setupAudioPowerSpectrum;
- (id)initWithClientPid:(int)pid;
- (id)initWithClientPid:(int)pid ssrc:(unsigned int)ssrc;
- (id)initWithClientPid:(int)pid ssrc:(unsigned int)ssrc transportSessionID:(unsigned int)id;
- (id)setLocalParticipantInfo:(id)info networkSockets:(id)sockets withError:(id *)error;
- (BOOL)setupAudioStreamWithClientPid:(int)pid enableAudioPowerSpectrum:(BOOL)spectrum;
- (void)dealloc;
- (int)getPacketsPerBundleForStreamConfig:(id)config;
- (void)configureAudioJBAlgos:(struct tagVCAudioReceiverConfig { unsigned int x0; struct tagVCAudioReceiverStream { struct tagHANDLE * x10; unsigned short x1; BOOL x2; BOOL x3; struct tagVCCryptor * x4; int x5; BOOL x6; struct tagVCAudioReceiver * x7; void * x8; void * x9; } x[4] void * x2; unsigned int x3; int x4; unsigned int x5; int x6; int x7; BOOL x8; struct opaqueRTCReporting * x9; int x10; BOOL x11; struct __CFString * x12; struct __CFString * x13; unsigned short x14; BOOL x15; BOOL x16; BOOL x17; BOOL x18; BOOL x19; int x20; BOOL x21; void * x22; undefined * x23; undefined * x24; undefined * x25; struct tagVCJBTargetEstimatorSynchronizer * x26; void * x27; void * x28; unsigned int x29; BOOL x30; unsigned int x31; int x32; BOOL x33; BOOL x34; unsigned long long x35; BOOL x36; BOOL x37; struct __CFString * x38; BOOL x39; } *)jbalgos;
- (BOOL)createAudioReceiver;
- (unsigned int)packetExpirationTimeForStreamConfig:(id)config codecType:(long long)type;
- (BOOL)createAudioTransmitter:(long long)transmitter streamIDs:(id)ids;
- (BOOL)bitrateIsAudioOnly;
- (void)sendDTMFEvent:(id)dtmfevent;
- (void)stopSendDTMFEvent;
- (struct _METER_INFO { BOOL x0; struct opaqueVCFFTMeter * x1; } *)meterWithType:(int)type;
- (BOOL)isFrequencyMeteringEnabled:(int)enabled;
- (void)setFrequencyMeteringEnabled:(BOOL)enabled meterType:(int)type;
- (void)prepareAudio;
- (void)cleanupAudio;
- (BOOL)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned char x8; } *)list reportCount:(char *)count;
- (void)setStreamDirection:(long long)direction;
- (BOOL)isMuted;
- (BOOL)isRemoteMuted;
- (undefined *)pullSamplesCallback;
- (void)setVCStatistics:(struct tagVCStatisticsMessage { int x0; int x1; double x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; union { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; double x6; double x7; double x8; double x9; double x10; char x11[64] int x12; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; double x12; double x13; unsigned int x14; unsigned int x15; double x16; unsigned int x17; BOOL x18; struct { int x0; unsigned int x1; unsigned int x2; unsigned int x3; double x4; double x5; double x6; unsigned int x7; unsigned int x8; } x19; struct { unsigned short x0; BOOL x1; BOOL x2; unsigned int x3; } x20; struct tagVCStatisticsECNStats { unsigned short x0; unsigned short x1; } x21; struct tagVCStatisticsECNStats { unsigned short x0; unsigned short x1; } x22; BOOL x23; } x1; struct { double x0; double x1; double x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned long long x8; unsigned int x9; } x2; struct { unsigned int x0; BOOL x1; BOOL x2; BOOL x3; unsigned int x4; unsigned int x5; double x6; unsigned int x7; BOOL x8; struct { int x0; unsigned int x1; unsigned int x2; unsigned int x3; double x4; double x5; double x6; unsigned int x7; unsigned int x8; } x9; } x3; struct { unsigned char x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; double x10; double x11; double x12; double x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; double x3; } x5; struct { int x0; unsigned int x1; unsigned int x2; unsigned int x3; double x4; double x5; double x6; unsigned int x7; unsigned int x8; } x6; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x7; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; BOOL x6; unsigned int x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; BOOL x5; BOOL x6; double x7; double x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned long long x12; } x9; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned long long x9; int x10; unsigned int x11; union { struct { unsigned char x0; unsigned char x1; unsigned short x2; unsigned short x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; float x11; BOOL x12; unsigned short x13; unsigned int x14[6] } x0; struct { unsigned char x0; short x1; short x2; char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned short x8; unsigned short x9; unsigned char x10; } x1; } x12; } x10; struct tagVCStatisticsVideoLossFeedback { unsigned int x0; unsigned short x1; unsigned char x2; unsigned char x3; } x11; } x7; })vcstatistics;
- (void)setTargetBitrate:(unsigned int)bitrate rateChangeCounter:(unsigned int)counter;
- (BOOL)shouldUseNWConnectionBackingSocket;
- (id)supportedPayloads;
- (void)onCallIDChanged;
- (BOOL)validateAudioStreamConfigurations:(id)configurations;
- (BOOL)setupSourceTransport:(id)transport;
- (id)createTransportWithStreamConfig:(id)config;
- (void)createReportSSRCListWithStreamConfigs:(id)configs;
- (void)cleanupBeforeReconfigure:(id)reconfigure;
- (id)streamIDsFromTransport;
- (void)setPreferredMediaBitrateWithConfiguration:(id)configuration;
- (int)getRTPTimeStampRateScaleFactor;
- (BOOL)onConfigureStreamWithConfiguration:(id)configuration error:(id *)error;
- (void)updateRateAdaptationWithNetworkNotification:(struct ifnet_interface_advisory { union { struct { unsigned char x0; unsigned char x1; unsigned short x2; int x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned char x11; unsigned char x12; unsigned short x13; unsigned short x14; unsigned char x15; unsigned char x16; unsigned char x17; unsigned char x18; } x0; struct { struct ifnet_interface_advisory_header { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; } x0; struct ifnet_interface_advisory_capacity { int x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned int x5; unsigned int x6; unsigned int x7; } x1; union { struct ifnet_interface_advisory_wifi_context { unsigned char x0; unsigned char x1; unsigned short x2; unsigned short x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned short x9; unsigned int x10[6] } x0; struct ifnet_interface_advisory_cell_context { unsigned char x0; short x1; short x2; char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned short x8; unsigned short x9; unsigned char x10; unsigned char x11; } x1; } x2; } x1; } x0; } *)notification;
- (BOOL)shouldResetRTPTimestampOnStart;
- (BOOL)shouldReportNetworkInterfaceType;
- (BOOL)shouldRegisterReportingPeriodicTask;
- (void)registerAggregationHandlers;
- (void)deregisterAggregationHandlers;
- (void)onStartWithCompletionHandler:(id /* block */)handler;
- (void)onStopWithCompletionHandler:(id /* block */)handler;
- (void)redundancyController:(id)controller redundancyPercentageDidChange:(unsigned int)change;
- (void)onPauseWithCompletionHandler:(id /* block */)handler;
- (void)onResumeWithCompletionHandler:(id /* block */)handler;
- (void)onRTPTimeout;
- (void)onRTCPTimeout;
- (void)onSendRTCPPacket;
- (double)rtcpHeartbeatLeeway;
- (void)setStreamIDs:(id)ids repairStreamIDs:(id)ids;
- (void)setupPeriodicReporting;
- (void)setupReportingAgent:(id)agent;
- (BOOL)isStandaloneStreamClientSpecificUserInfoSupported;
- (struct __CFDictionary *)getClientSpecificUserInfo:(id)info;
- (int)getReportingClientType;
- (struct __CFString *)getReportingClientName;
- (id)getReportingServiceID;
- (void)gatherRealtimeStats:(struct __CFDictionary *)stats;
- (void)updateCodecPayloadAndBitrateForStartEvent:(int *)event bitrate:(unsigned int *)bitrate;
- (void)addStreamStartingMetricsToReport:(const struct __CFDictionary *)report;
- (void)reportingAudioStreamEvent:(unsigned short)event;
- (void)reportingAlgosAudioStreamEvent:(unsigned short)event;
- (int)getConnectionTypeForStreamMode:(long long)mode;
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)samples;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)samples;
- (BOOL)canProcessAudio;
- (void)setCanProcessAudio:(BOOL)audio;
- (void)addSyncSourceDelegate:(id)delegate;
- (void)removeSyncSourceDelegate:(id)delegate;
- (void)waitIdleForSyncSourceDelegates;
- (long long)getSyncSourceSampleRate;
- (void)registerCodecRateModeChangeNotifications;
- (void)registerActiveAudioStreamChangeNotifications;
- (void)unregisterCodecRateModeChangeNotifications;
- (void)didSuspendAudioIO:(id)io;
- (void)didResumeAudioIO:(id)io;
- (void)serverDidDie;
- (void)collectRxChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics interval:(float)interval;
- (void)collectRxChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)collectTxChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)handleActiveConnectionChange:(id)change;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo { unsigned int x0; double x1; } *)codec;
- (BOOL)isCurrentDTXEnabled;
@end

#endif /* VCAudioStream_h */
