//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCAudioRelayIO_h
#define VCAudioRelayIO_h
@import Foundation;

#include "VCObject.h"
#include "NSCopying-Protocol.h"
#include "VCAudioIOSink-Protocol.h"
#include "VCAudioIOSource-Protocol.h"
#include "VCBasebandCodecNotifications-Protocol.h"

@class NSString;

@interface VCAudioRelayIO : VCObject<NSCopying, VCBasebandCodecNotifications, VCAudioIOSink, VCAudioIOSource>

@property (readonly) const struct tagVCAudioRelayIOContext { struct tagVCAudioFrameFormat * x0; struct tagVCAudioFrameFormat * x1; undefined * x2; void * x3; struct opaqueVCAudioBufferList * x4; float x5; struct tagVCAudioClientControllerTimeInfo { unsigned int x0; unsigned int x1; BOOL x2; BOOL x3; double x4; unsigned int x5; unsigned int x6; unsigned long long x7; } x6; } * micContext;
@property (readonly) const struct tagVCAudioRelayIOContext { struct tagVCAudioFrameFormat * x0; struct tagVCAudioFrameFormat * x1; undefined * x2; void * x3; struct opaqueVCAudioBufferList * x4; float x5; struct tagVCAudioClientControllerTimeInfo { unsigned int x0; unsigned int x1; BOOL x2; BOOL x3; double x4; unsigned int x5; unsigned int x6; unsigned long long x7; } x6; } * speakerContext;
@property (readonly, nonatomic) BOOL isRunning;
@property BOOL usePacketThread;
@property (copy) id /* block */ startCompletionHandler;
@property (nonatomic) const struct _VCRemoteCodecInfo { unsigned int x0; double x1; } * remoteCodecInfo;
@property (readonly) struct PacketThread_s * packetThread;
@property (nonatomic) const struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } * clientFormat;
@property (readonly) const struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } * relayFormat;
@property undefined * micCallback;
@property void * micCallbackContext;
@property (readonly, nonatomic) struct opaqueVCAudioBufferList * micBuffer;
@property unsigned int micTimestamp;
@property float micPowerRMS;
@property undefined * speakerCallback;
@property void * speakerCallbackContext;
@property (readonly, nonatomic) struct opaqueVCAudioBufferList * speakerBuffer;
@property unsigned int speakerTimestamp;
@property float speakerPowerRMS;
@property undefined * updateRemoteCodecInfoCallback;
@property void * updateRemoteCodecInfoContext;
@property (readonly) double preferredIODuration;
@property NSObject<VCBasebandCodecNotifications> *relay;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithMicContext:(const struct tagVCAudioRelayIOContext { struct tagVCAudioFrameFormat * x0; struct tagVCAudioFrameFormat * x1; undefined * x2; void * x3; struct opaqueVCAudioBufferList * x4; float x5; struct tagVCAudioClientControllerTimeInfo { unsigned int x0; unsigned int x1; BOOL x2; BOOL x3; double x4; unsigned int x5; unsigned int x6; unsigned long long x7; } x6; } *)context speakerContext:(const struct tagVCAudioRelayIOContext { struct tagVCAudioFrameFormat * x0; struct tagVCAudioFrameFormat * x1; undefined * x2; void * x3; struct opaqueVCAudioBufferList * x4; float x5; struct tagVCAudioClientControllerTimeInfo { unsigned int x0; unsigned int x1; BOOL x2; BOOL x3; double x4; unsigned int x5; unsigned int x6; unsigned long long x7; } x6; } *)context;
- (void)dealloc;
- (void)initializeFormatContextPointers;
- (BOOL)isInitialized;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqualToRelayIO:(id)io;
- (void)createBuffersForIOContext:(struct tagVCAudioRelayIOContext { struct tagVCAudioFrameFormat * x0; struct tagVCAudioFrameFormat * x1; undefined * x2; void * x3; struct opaqueVCAudioBufferList * x4; float x5; struct tagVCAudioClientControllerTimeInfo { unsigned int x0; unsigned int x1; BOOL x2; BOOL x3; double x4; unsigned int x5; unsigned int x6; unsigned long long x7; } x6; } *)iocontext;
- (void)createAudioBuffers;
- (void)printStreamFormats;
- (void)internalPushAudioSamples:(struct opaqueVCAudioBufferList *)samples;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)samples;
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)samples;
- (BOOL)createPacketThreadWithIOBufferDuration:(double)duration name:(id)name error:(id *)error;
- (void)destroyPacketThread;
- (void)createRecordingsWithName:(id)name;
- (void)closeRecordings;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo { unsigned int x0; double x1; } *)codec;
@end

#endif /* VCAudioRelayIO_h */
