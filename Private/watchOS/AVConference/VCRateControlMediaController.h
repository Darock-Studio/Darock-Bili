//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCRateControlMediaController_h
#define VCRateControlMediaController_h
@import Foundation;

#include "AVCStatisticsCollector.h"
#include "SenderLargeFrameInfo.h"
#include "VCRateControlServerBag.h"

@interface VCRateControlMediaController : NSObject {
  /* instance variables */
  id _mediaControllerDelegate;
  struct tagHANDLE { int x0; } * _hMediaQueue;
  unsigned int _audioSendingBitrate;
  unsigned int _minTargetBitrate;
  BOOL _isVideoStoppedByBaseband;
  BOOL _isVideoPausedByUser;
  BOOL _isBasebandFlushing;
  BOOL _isAudioStall;
  double _lastAudioFractionChangeTime;
  double _lastAudioEnoughRateTime;
  unsigned char _videoPayloadType;
  unsigned int _videoRefreshFrameTimestamp;
  unsigned int _videoRefreshFramePacketCount;
  double _lastVideoKeyFrameTime;
  SenderLargeFrameInfo *_senderLargeFrameInfo;
  unsigned int _probingLargeFrameSizeCap;
  BOOL _shouldDisableLargeFrameRequestsWhenInitialRampUp;
  BOOL _isRateLimitedMaxTimeExceeded;
  double _minProbingSpacingAggressive;
  double _lastBasebandFlushAudioTime;
  double _lastBasebandFlushVideoTime;
  unsigned short _videoFlushTransactionID;
  unsigned int _audioStallBitrate;
  double _lastAudioStallFlushTime;
  unsigned int _basebandAverageBitrate;
  unsigned int _basebandAverageBitrateShort;
  unsigned int _basebandTotalQueueDepth;
  unsigned int _basebandFlushableQueueDepth;
  double _basebandExpectedQueuingDelay;
  double _basebandNBDCD;
  double _lastBasebandHighNBDCDTime;
  BOOL _isBasebandQueuingDelayHigh;
  void * _logBasebandDump;
  void * _logBWEDump;
  BOOL _fromSmartBrake;
}

@property (retain, nonatomic) AVCStatisticsCollector *statisticsCollector;
@property (nonatomic) unsigned int videoSendingBitrate;
@property (readonly, nonatomic) unsigned int targetBitrate;
@property (nonatomic) int basebandFlushCount;
@property (nonatomic) double lastBasebandFlushCountChangeTime;
@property (readonly, nonatomic) int basebandFlushedVideoCount;
@property (readonly, nonatomic) int basebandFlushedAudioCount;
@property (readonly, nonatomic) BOOL isVideoStoppedByVCRateControl;
@property (readonly, nonatomic) BOOL isInThrottlingMode;
@property (nonatomic) BOOL allowVideoStop;
@property (nonatomic) BOOL isSenderProbingEnabled;
@property (nonatomic) BOOL isAudioOnly;
@property (readonly, nonatomic) unsigned int probingLargeFrameSize;
@property (readonly, nonatomic) unsigned int probingSequencePacketCount;
@property (readonly, nonatomic) unsigned int probingSequencePacketSize;
@property (nonatomic) unsigned int afrcRemoteEstimatedBandwidth;
@property (nonatomic) BOOL isRTPFlushBasebandFromVCRateControl;
@property (readonly, nonatomic) int audioFractionTier;
@property (readonly, nonatomic) double lastVideoRefreshFrameTime;
@property (nonatomic) BOOL enableAggressiveProbingSequence;
@property (retain, nonatomic) VCRateControlServerBag *serverBag;
@property (nonatomic) struct tagVCMediaQueue * vcMediaQueue;
@property (nonatomic) struct tagHANDLE { int x0; } * mediaQueue;
@property (nonatomic) BOOL isRemoteAudioPaused;

/* instance methods */
- (id)initWithMediaQueue:(struct tagHANDLE { int x0; } *)queue delegate:(id)delegate;
- (void)dealloc;
- (void)enableBasebandLogDump:(void *)dump;
- (void)pauseVideoByUser:(BOOL)user;
- (void)decreaseFlushCount:(int)count;
- (BOOL)didMediaGetFlushedWithPayloadType:(unsigned char)type transactionID:(unsigned short)id packetDropped:(unsigned short)dropped sequenceNumberArray:(unsigned short *)array;
- (BOOL)rampUpAudioFraction;
- (void)scheduleProbingSequenceWithFrameSize:(unsigned int)size paddingBytes:(unsigned int)bytes timestamp:(unsigned int)timestamp fecRatio:(double)ratio isProbingSequenceScheduled:(BOOL *)scheduled;
- (void)recordVideoRefreshFrameWithTimestamp:(unsigned int)timestamp payloadType:(unsigned char)type packetCount:(unsigned int)count isKeyFrame:(BOOL)frame;
- (BOOL)increaseFlushCountForVideoRefresh:(int)refresh transactionID:(unsigned short)id;
- (void)scheduleProbingSequenceAtTime:(double)time;
- (void)printLargeFrameStatsAtTime:(double)time timestamp:(unsigned int)timestamp timeSinceLastProbingSequence:(double)sequence frameSize:(unsigned int)size wastedBytes:(unsigned int)bytes fecRatio:(double)ratio isFrameRequested:(BOOL)requested;
- (BOOL)isProbingLargeFrameRequiredAtTime:(double)time;
- (void)updateProbingLargeFrameSizeCap;
- (void)updateLargeFrameSizeWithBandwidth:(unsigned int)bandwidth;
@end

#endif /* VCRateControlMediaController_h */
