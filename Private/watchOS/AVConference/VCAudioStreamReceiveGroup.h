//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCAudioStreamReceiveGroup_h
#define VCAudioStreamReceiveGroup_h
@import Foundation;

#include "VCMediaStreamReceiveGroup.h"
#include "VCAudioStreamGroup-Protocol.h"
#include "VCAudioStreamGroupCommon.h"
#include "VCMediaStreamSyncSource-Protocol.h"

@interface VCAudioStreamReceiveGroup : VCMediaStreamReceiveGroup<VCAudioStreamGroup> {
  /* instance variables */
  VCAudioStreamGroupCommon *_common;
  struct tagVCAudioStreamGroupPriorityInfo { BOOL isAudioActive; unsigned int audioActiveProbabilityThreshold; unsigned int audioInactiveProbabilityThreshold; unsigned int audioActiveAccumulationThreshold; unsigned int audioInactiveAccumulationThreshold; unsigned int audioActiveCount; unsigned int lastAudioPriority; unsigned int refreshCounter; } _mediaPriorityInfo;
  undefined * _didPullSamplesCallback;
  void * _didPullSamplesCallbackContext;
  BOOL _receivingEndToEndStream;
  float _averageOutputPower;
  unsigned long long _speakerProcsCalled;
  unsigned long long _syncTargetCalled;
  BOOL _haveReportedPerfTimers;
  BOOL _didRegisterAsAudioSessionObserver;
  double _syncDestinationOutputLatency;
}

@property (readonly) NSObject<VCMediaStreamSyncSource> *syncSource;
@property (nonatomic) unsigned int audioChannelIndex;
@property (nonatomic) BOOL isMuted;
@property (readonly, nonatomic) int deviceRole;
@property BOOL isPowerSpectrumEnabled;

/* instance methods */
- (id)initWithConfig:(id)config;
- (void)dealloc;
- (BOOL)setDeviceRole:(int)role operatingMode:(int)mode;
- (void)setPowerSpectrumEnabled:(BOOL)enabled;
- (void)setMuted:(BOOL)muted;
- (BOOL)configureStreams;
- (void)collectAndLogChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)setReportingAgent:(struct opaqueRTCReporting *)agent;
- (void)setActiveStreamIDs:(id)ids;
- (void)setOptedInStreamID:(id)id;
- (id)willStart;
- (void)didStart;
- (void)didStop;
- (BOOL)addSyncDestination:(id)destination;
- (BOOL)removeSyncDestination:(id)destination;
- (void)dispatchedUpdateOutputLatencyForSyncDestinations:(double)destinations;
- (void)setMuteOnStreams;
- (id)startCapture;
- (id)stopCapture;
- (BOOL)isAudioExpected;
- (void)vcMediaStream:(id)stream remoteMediaStalled:(BOOL)stalled duration:(double)duration;
- (void)vcMediaStream:(id)stream didSwitchToAudioStreamWithID:(unsigned short)id;
- (void)vcMediaStream:(id)stream didReceiveFirstFrameWithTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)mediaStream:(id)stream didReceiveNewMediaKeyIndex:(id)index;
- (void)reportParticipantsPerfTimingsOnce;
@end

#endif /* VCAudioStreamReceiveGroup_h */
