//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCTransportSessionSocket_h
#define VCTransportSessionSocket_h
@import Foundation;

#include "VCTransportSession.h"
#include "VCNetworkAddress.h"

@interface VCTransportSessionSocket : VCTransportSession {
  /* instance variables */
  int _rtpVFD;
  int _rtcpVFD;
  BOOL _isRTPUsable;
  BOOL _isRTCPUsable;
  BOOL _isSharedSocket;
  struct sockaddr_storage { unsigned char ss_len; unsigned char ss_family; char x[6] __ss_pad1; long long __ss_align; char x[112] __ss_pad2; } _rtpIPPort;
  unsigned int _rtpIPPortLength;
  struct sockaddr_storage { unsigned char ss_len; unsigned char ss_family; char x[6] __ss_pad1; long long __ss_align; char x[112] __ss_pad2; } _rtcpIPPort;
  unsigned int _rtcpIPPortLength;
  VCNetworkAddress *_remoteAddress;
  int _networkInterfaceType;
  char _networkInterfaceName[16];
  BOOL _isIPv6;
  unsigned int _networkMTU;
}

/* instance methods */
- (id)initWithSocketDictionary:(id)dictionary notificationHandler:(undefined *)handler eventHandler:(undefined *)handler handlerQueue:(id)queue context:(void *)context;
- (id)initWithRTPSocket:(int)rtpsocket RTCPSocket:(int)rtcpsocket;
- (id)initWithSharedSocket:(int)socket;
- (id)initWithRTPSocket:(int)rtpsocket RTCPSocket:(int)rtcpsocket notificationHandler:(undefined *)handler eventHandler:(undefined *)handler handlerQueue:(id)queue context:(void *)context;
- (void)dealloc;
- (int)createVFD:(int *)vfd realSocket:(int)socket sockAddr:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)addr length:(unsigned int *)length isUsable:(BOOL *)usable;
- (id)streams;
- (int)updateTransportStream:(struct OpaqueVCTransportStream *)stream;
- (int)connectSocket:(int)socket remoteAddress:(id)address storage:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)storage;
- (int)setRemoteAddress:(id)address remoteRTCPPort:(int)rtcpport;
- (int)setAudioRTPStreamParamatersForSocket:(int *)socket packetType:(int *)type remoteIP:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)ip remoteIPLength:(unsigned int *)iplength;
- (int)setAudioRTCPStreamParamatersForSocket:(int *)socket packetType:(int *)type remoteIP:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)ip remoteIPLength:(unsigned int *)iplength;
- (int)setVideoRTPStreamParamatersForSocket:(int *)socket packetType:(int *)type remoteIP:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)ip remoteIPLength:(unsigned int *)iplength;
- (int)setVideoRTCPStreamParamatersForSocket:(int *)socket packetType:(int *)type remoteIP:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)ip remoteIPLength:(unsigned int *)iplength;
- (int)setBasebandNotificationStreamParamatersForSocket:(int *)socket packetType:(int *)type remoteIP:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)ip remoteIPLength:(unsigned int *)iplength;
- (int)configureParamatersForStreamType:(unsigned int)type socket:(int *)socket packetType:(int *)type remoteIP:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)ip remoteIPLength:(unsigned int *)iplength;
- (int)createAndConfigureVFDForSocket:(int)socket packetType:(int)type remoteIP:(struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } *)ip remoteIPLength:(unsigned int)iplength vfd:(int *)vfd;
- (int)createVFD:(int *)vfd forStreamType:(unsigned int)type;
- (void)start;
- (void)stop;
- (void)initializeInterfaceTypeWithSocket:(int)socket;
- (int)initializeNetworkInfoWithSocket:(int)socket;
- (struct tagVCNWConnectionMonitor *)createNWMonitor;
- (int)networkInterfaceType;
- (unsigned int)networkMTU;
- (BOOL)isIPv6;
@end

#endif /* VCTransportSessionSocket_h */
