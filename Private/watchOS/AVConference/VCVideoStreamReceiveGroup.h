//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCVideoStreamReceiveGroup_h
#define VCVideoStreamReceiveGroup_h
@import Foundation;

#include "VCMediaStreamReceiveGroup.h"
#include "VCRedundancyControllerDelegate-Protocol.h"
#include "VCRedundancyControllerVideo.h"

@class NSNumber;

@interface VCVideoStreamReceiveGroup : VCMediaStreamReceiveGroup<VCRedundancyControllerDelegate> {
  /* instance variables */
  atomic unsigned char _videoPriority;
  unsigned char _lastVideoPriority;
  BOOL _isVideoDegraded;
  double _isVideoDegradedStartTime;
  BOOL _haveReportedPerfTimers;
  BOOL _isProcessingVideoOptIn;
  NSNumber *_previousOptedInStreamID;
  VCRedundancyControllerVideo *_videoRedundancyController;
  BOOL _isRedundancyRequested;
  BOOL _isMediaSuspended;
  double _lastVideoExpectationSwitch;
  BOOL _isVideoExpected;
  BOOL _didReportExtendedPoorConnection;
  double _displayLatency;
  BOOL _shouldConvertSourceRTPTimestamp;
  unsigned long long _syncUpdateCalled;
}

@property (nonatomic) BOOL isRemoteMediaStalled;
@property (nonatomic) BOOL remoteVideoPaused;
@property (nonatomic) BOOL remoteVideoEnabled;
@property (nonatomic) unsigned char videoQuality;
@property (nonatomic) unsigned int visibilityIndex;
@property (readonly, nonatomic) unsigned int lastDisplayedFrameRTPTimestamp;

/* instance methods */
- (id)initWithConfig:(id)config;
- (void)dealloc;
- (void)resetDidReceiveFirstFrame;
- (void)resetPerfTimers;
- (void)didStart;
- (void)willStop;
- (id)setupRedundancyController;
- (BOOL)isVisible;
- (BOOL)isVideoExpected;
- (void)setShouldEnableFaceZoom:(BOOL)zoom;
- (void)updateShouldEnableFaceZoom;
- (BOOL)setSyncSource:(id)source;
- (void)setVideoStreamDelegate:(id)delegate delegateFunctions:(const struct tagVCVideoStreamDelegateRealtimeInstanceVTable { undefined * x0; } *)functions;
- (id)willStart;
- (void)setupVideoPriority;
- (void)updateVideoPriority:(unsigned char)priority;
- (void)setOptedInStreamID:(id)id;
- (void)setActiveStreamIDs:(id)ids;
- (void)setMediaSuspended:(BOOL)suspended forStreamToken:(id)token;
- (void)setVideoDegraded:(BOOL)degraded;
- (void)setShouldEnableMLEnhance:(BOOL)mlenhance streamID:(unsigned short)id;
- (void)redundancyController:(id)controller redundancyPercentageDidChange:(unsigned int)change;
- (void)redundancyController:(id)controller redundancyIntervalDidChange:(double)change;
- (void)redundancyController:(id)controller redundancyVectorDidChange:(struct { unsigned short x0; struct { unsigned char x10; unsigned char x1; } x[32] })change;
- (void)vcMediaStream:(id)stream priorityDidChange:(unsigned char)change;
- (void)vcMediaStream:(id)stream didReceiveFirstFrameWithTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)vcMediaStream:(id)stream didSwitchFromStreamID:(unsigned short)id toStreamID:(unsigned short)id;
- (void)updateVideoExpected;
- (void)vcMediaStream:(id)stream remoteMediaStalled:(BOOL)stalled duration:(double)duration;
- (void)vcMediaStream:(id)stream requestKeyFrameGenerationWithStreamID:(unsigned short)id firType:(int)type;
- (void)checkForExtendedPoorConnection;
- (void)reportParticipantsPerfTimingsOnce;
- (void)collectAndLogChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)mediaStream:(id)stream didReceiveNewMediaKeyIndex:(id)index;
- (BOOL)isRemoteVideoPaused;
- (BOOL)isRemoteVideoEnabled;
@end

#endif /* VCVideoStreamReceiveGroup_h */
