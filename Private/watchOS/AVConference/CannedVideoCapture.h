//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef CannedVideoCapture_h
#define CannedVideoCapture_h
@import Foundation;

#include "VCVideoCapture.h"
#include "VCCannedVideoCaptureSource.h"
#include "VCVideoSource-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface CannedVideoCapture : VCVideoCapture<VCVideoSource> {
  /* instance variables */
  struct CannedVideoCapturePrivate { struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x0; struct _VCVideoSourceToken { union { struct { unsigned int x0 :24; unsigned int x1 :8; } x0; unsigned int x1; } x0; } x1; int x2; BOOL x3; struct { BOOL x0; BOOL x1; int x2; BOOL x3; BOOL x4; int x5; unsigned char x6; } x4; } * _pimpl;
  NSObject<OS_dispatch_queue> *_captureSessionQueue;
  VCCannedVideoCaptureSource *_captureSource;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (int)cannedVideoTypeForPath:(id)path;
+ (int)createPixelBufferPool:(struct __CVPixelBufferPool * *)pool withWidth:(int)width height:(int)height;

/* instance methods */
- (id)initWithCaptureServer:(id)server protocolFunctions:(const struct tagVCVideoCaptureServerProtocolRealtimeInstanceVTable { undefined * x0; } *)functions width:(int)width height:(int)height frameRate:(int)rate videoSourceToken:(struct _VCVideoSourceToken { union { struct { unsigned int x0 :24; unsigned int x1 :8; } x0; unsigned int x1; } x0; })token video:(id)video isCamera:(BOOL)camera error:(int *)error;
- (void)dealloc;
- (int)setWidth:(int)width height:(int)height frameRate:(int)rate;
- (void)setOrientation:(int)orientation;
- (int)copyColorInfo:(const struct __CFDictionary * *)info;
- (int)configureCaptureWithToken:(struct _VCVideoSourceToken { union { struct { unsigned int x0 :24; unsigned int x1 :8; } x0; unsigned int x1; } x0; })token;
- (BOOL)isPreviewRunning;
- (int)setFrameRate:(int)rate;
- (int)getFrameRate;
- (int)startPreview;
- (int)startCaptureWithWidth:(int)width height:(int)height frameRate:(int)rate;
- (int)stop:(BOOL)stop;
- (BOOL)isFrontCamera;
- (BOOL)cameraSupportsFormatWidth:(int)width height:(int)height;
- (int)frameBecameAvailableCount:(int *)count figBufferQueueEmptyCount:(int *)count figBufferQueueErrorCount:(int *)count;
- (BOOL)isPortraitResolutionCaptureActive;
- (int)frameCount:(BOOL)count;
@end

#endif /* CannedVideoCapture_h */
