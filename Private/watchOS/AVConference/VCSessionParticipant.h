//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCSessionParticipant_h
#define VCSessionParticipant_h
@import Foundation;

#include "VCObject.h"
#include "AVCBasebandCongestionDetector.h"
#include "AVCStatisticsCollector.h"
#include "VCAudioIO.h"
#include "VCAudioIODelegate-Protocol.h"
#include "VCAudioIOSink-Protocol.h"
#include "VCAudioIOSource-Protocol.h"
#include "VCAudioPowerSpectrumSourceDelegate-Protocol.h"
#include "VCAudioRuleCollection.h"
#include "VCCallInfoBlob.h"
#include "VCConnectionChangedHandler-Protocol.h"
#include "VCMediaRecorder.h"
#include "VCMediaStreamDelegate-Protocol.h"
#include "VCMediaStreamGroupDelegate-Protocol.h"
#include "VCNetworkFeedbackController.h"
#include "VCRedundancyControllerDelegate-Protocol.h"
#include "VCRedundancyControllerVideo.h"
#include "VCSecurityEventHandler-Protocol.h"
#include "VCSecurityKeyManager.h"
#include "VCSessionMediaNegotiator.h"
#include "VCSessionParticipantDelegate-Protocol.h"
#include "VCSessionParticipantOneToOneConfig.h"
#include "VCSessionParticipantStreamDelegate-Protocol.h"

@class NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface VCSessionParticipant : VCObject<VCMediaStreamDelegate, VCSecurityEventHandler, VCAudioIOSink, VCAudioIOSource, VCAudioIODelegate, VCConnectionChangedHandler, VCRedundancyControllerDelegate, VCAudioPowerSpectrumSourceDelegate, VCMediaStreamGroupDelegate> {
  /* instance variables */
  unsigned int _state;
  NSObject<OS_dispatch_queue> *_participantQueue;
  int _processId;
  NSString *_sessionUUID;
  NSString *_idsDestination;
  NSData *_mediaBlobCompressed;
  NSDictionary *_participantInfo;
  unsigned int _transportSessionID;
  int _deviceRole;
  long long _direction;
  double _lastParticipantMKMRecoveryTime;
  double _participantMKMRecoveryTimeout;
  int _decryptionTimeOutInterval;
  BOOL _isMuted;
  BOOL _audioPausedToStart;
  BOOL _videoPausedToStart;
  NSMutableDictionary *_mediaTypeSettingsDict;
  VCAudioIO *_audioIO;
  unsigned int _preferredIOSampleRate;
  unsigned int _preferredIOSamplesPerFrame;
  VCRedundancyControllerVideo *_videoRedundancyController;
  id _reportingAgentWeak;
  BOOL _isGKVoiceChat;
  BOOL _isLowLatencyAudio;
  NSMutableDictionary *_streamGroups;
  NSMutableArray *_micStreamGroups;
  NSMutableArray *_videoStreamGroups;
  VCSecurityKeyManager *_securityKeyManager;
  VCNetworkFeedbackController *_networkFeedbackController;
}

@property (readonly, nonatomic) NSString *uuid;
@property (readonly, nonatomic) unsigned long long idsParticipantID;
@property (readonly, nonatomic) NSData *opaqueData;
@property (readonly, nonatomic) NSObject<VCSessionParticipantDelegate> *delegate;
@property (nonatomic) NSObject<VCSessionParticipantStreamDelegate> *streamDelegate;
@property (nonatomic) BOOL muted;
@property (nonatomic) BOOL audioEnabled;
@property (nonatomic) BOOL videoEnabled;
@property (nonatomic) BOOL screenEnabled;
@property (nonatomic) BOOL audioPaused;
@property (nonatomic) BOOL videoPaused;
@property (readonly, nonatomic) float audioPosition;
@property (readonly, nonatomic) float volume;
@property (readonly, nonatomic) NSArray *allParticipantStreamInfo;
@property (readonly, nonatomic) union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; } creationTime;
@property (readonly, nonatomic) NSDictionary *participantStreamTokens;
@property (retain, nonatomic) AVCStatisticsCollector *statisticsCollector;
@property (retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector;
@property (nonatomic) unsigned int cellularUniqueTag;
@property (readonly, nonatomic) VCAudioRuleCollection *supportedAudioRules;
@property (readonly, nonatomic) VCSessionMediaNegotiator *mediaNegotiator;
@property (nonatomic) BOOL localOnWiFi;
@property (nonatomic) struct opaqueRTCReporting * reportingAgent;
@property (retain, nonatomic) VCSessionParticipantOneToOneConfig *oneToOneConfig;
@property (nonatomic) struct tagVCMediaQueue * mediaQueue;
@property (nonatomic) BOOL oneToOneModeEnabled;
@property (readonly) VCCallInfoBlob *callInfoBlob;
@property (readonly, nonatomic) int operatingMode;
@property (nonatomic) BOOL sharingEnabled;
@property (readonly, nonatomic) NSDictionary *mediaTypeMixingList;
@property (nonatomic) unsigned char presentationState;
@property (retain, nonatomic) VCMediaRecorder *mediaRecorder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)participantInfoWithParticipantData:(id)data;
+ (id)participantDataWithParticipantInfo:(id)info;
+ (id)participantDataWithMediaNegotiatorVersion:(int)version participantData:(id)data;
+ (id)participantDataWithParticipantData:(id)data isReinit:(BOOL)reinit;
+ (id)streamGroupIDsFromParticipantData:(id)data;
+ (void)addCodecModesForPayload:(int)payload toCodecConfig:(id)config;
+ (void)applyVideoNegotiatedSettings:(id)settings toStreamConfiguration:(id)configuration withFeatureStringDictionary:(id)dictionary;
+ (unsigned int)mediaStreamGroupStateToVCStreamGroupState:(unsigned int)state;
+ (id)mediaTypesFromStreamGroupID:(unsigned int)id;

/* instance methods */
- (void)callDelegateWithBlock:(id /* block */)block;
- (void)callStreamDelegateWithBlock:(id /* block */)block;
- (void)logAllStreamTokens;
- (void)startOneToOneStreams;
- (void)dispatchedStartOneToOneStreams;
- (void)startMultiwayStreams;
- (id)stopMultiwayStreams;
- (void)dispatchedStart;
- (void)dispatchedStop;
- (void)dispatchedSetAudioEnabled:(BOOL)enabled;
- (void)dispatchedSetVideoEnabled:(BOOL)enabled;
- (void)dispatchedSetScreenEnabled:(BOOL)enabled;
- (void)dispatchedSetAudioPaused:(BOOL)paused;
- (void)dispatchedSetVideoPaused:(BOOL)paused;
- (void)dispatchedSetMediaState:(unsigned int)state forMediaType:(unsigned int)type;
- (void)dispatchSetMediaType:(unsigned int)type mixingWithMediaType:(unsigned int)type;
- (void)reportCameraCompositionEnabled:(BOOL)enabled;
- (id)generateEncryptionKey;
- (void)stopOneToOneStreams;
- (void)stopInternal;
- (BOOL)isAudioStream:(id)stream;
- (BOOL)isVideoStream:(id)stream;
- (void)onStartAudioIO;
- (id)startAudioIO;
- (id)stopAudioIO;
- (id)startMediaStreams:(id)streams;
- (id)stopMicStreamGroups;
- (id)startMicStreamGroups;
- (id)startCameraStreamGroups;
- (id)stopStreamGroups:(id)groups;
- (id)startStreamGroups:(id)groups;
- (id)updateStreamGroups:(id)groups;
- (BOOL)isActiveMediaType:(unsigned int)type;
- (BOOL)isStreamGroupActive:(id)active;
- (id)updateActiveStateForStreamGroup:(id)group;
- (id)startStreamGroups;
- (void)stopStreamGroups;
- (id)startVideo;
- (id)startScreenGroup;
- (id)stopScreenGroup;
- (void)startSystemAudioCapture;
- (void)stopSystemAudioCapture;
- (void)stopAudioIOCompletion;
- (id)stopMediaStreams:(id)streams;
- (id)stopAudioStreams;
- (id)setAudioStreamGroupsPaused:(BOOL)paused;
- (id)setCameraStreamGroupsPaused:(BOOL)paused;
- (id)setPaused:(BOOL)paused onStreamGroups:(id)groups;
- (void)onPauseAudioStreams;
- (BOOL)shouldSetPause:(BOOL)pause onStream:(id)stream;
- (id)pauseAudioStreams:(BOOL)streams;
- (id)pauseVideo:(BOOL)video;
- (void)onDidResumeAudio;
- (BOOL)setupAudioStreamConfiguration:(id)configuration audioRules:(id)rules;
- (void)updateOneToOneVideoStreamCustomResolution:(id)resolution videoSettings:(id)settings;
- (BOOL)isOneToOneTemporalSupportedForSettings:(id)settings streamDirection:(long long)direction;
- (id)newOneToOneVideoStreamMultiwayConfiguration:(unsigned char)configuration streamGroupId:(unsigned int)id videoSettings:(id)settings streamDirection:(long long)direction;
- (id)newOneToOneAudioStreamConfigWithAudioSettings:(id)settings streamDirection:(long long)direction streamGroupId:(unsigned int)id streamSsrc:(unsigned int)ssrc;
- (int)captureSourceIDFromStreamGroupID:(unsigned int)id;
- (BOOL)rtcpPSFBForFeedbackStoreBagConfig;
- (BOOL)rtcpPSFBForLTRAckStoreBagConfig;
- (id)newOneToOneVideoStreamConfigWithStreamDirection:(long long)direction streamGroupId:(unsigned int)id streamSsrc:(unsigned int)ssrc encodingType:(unsigned char)type videoSettings:(id)settings;
- (long long)participantMicrophoneToken;
- (long long)participantVideoToken;
- (id)cameraGroups;
- (id)cameraGroupsExt;
- (long long)participantScreenToken;
- (id)screenGroup;
- (id)systemAudioGroup;
- (id)microphoneGroup;
- (id)captionsGroup;
- (id)streamGroupWithID:(unsigned int)id;
- (int)securityKeyHolderUsageForStreamConfigDirection:(long long)direction;
- (BOOL)setupSecurityKeyHolderForStreamConfig:(id)config;
- (id)getAudioDumpName;
- (void)startAudioDump;
- (void)stopAudioDump;
- (void)setupNetworkAddressesForMediaConfig:(id)config;
- (BOOL)completeStreamSetup:(id)setup;
- (BOOL)configureAudioIOWithDeviceRole:(int)role operatingMode:(int)mode;
- (BOOL)updateConfigurationWithDeviceRole:(int)role;
- (BOOL)configureOneToOneAudioStreamsWithDeviceRole:(int)role;
- (BOOL)configureOneToOneAudioStreamsWithDeviceRole:(int)role streamInfoArray:(id)array;
- (id)newVideoRateControlConfigWithMediaControlInfoVersion:(unsigned char)version enableMediaControlInfoGenerator:(BOOL)generator enableFeedbackController:(BOOL)controller isOneToOne:(BOOL)one;
- (id)newAudioRateControlConfigWithMediaControlInfoVersion:(unsigned char)version enableFeedbackController:(BOOL)controller isOneToOne:(BOOL)one;
- (BOOL)configureOneToOneVideoStreamsWithDeviceRole:(int)role;
- (BOOL)configureOneToOneVideoStreamsWithDeviceRole:(int)role streamInfoArray:(id)array;
- (BOOL)configureOneToOneWithConfig:(id)config;
- (BOOL)configureWithDeviceRole:(int)role negotiatedVideoEnabled:(BOOL)enabled negotiatedScreenEnabled:(BOOL)enabled operatingMode:(int)mode;
- (BOOL)dispatchedConfigureWithDeviceRole:(int)role negotiatedVideoEnabled:(BOOL)enabled negotiatedScreenEnabled:(BOOL)enabled operatingMode:(int)mode;
- (BOOL)configureStreamInfosForMultiway:(id)multiway streamGroupID:(unsigned int)id;
- (BOOL)configureMultiwayStreamGroups;
- (id)initWithConfig:(id)config delegate:(id)delegate;
- (void)dealloc;
- (BOOL)updateMediaStatesWithConfig:(id)config;
- (void)setupMediaTypeSettingsWithConfig:(id)config;
- (void)setupPreferredIOSettings;
- (unsigned int)preferredRTPTimestampRateForGroupID:(unsigned int)id;
- (unsigned int)preferredIOSampleRateForGroupID:(unsigned int)id;
- (unsigned int)preferredIOSamplesPerFrameForGroupID:(unsigned int)id;
- (BOOL)setState:(unsigned int)state;
- (char *)participantStateToString:(unsigned int)string;
- (void)start;
- (void)stop;
- (id)applyVideoEnabledSetting:(BOOL)setting;
- (void)applyScreenEnabledSetting:(BOOL)setting;
- (id)streamGroupsForMediaType:(unsigned int)type;
- (id)streamGroupsForIDs:(id)ids;
- (id)applyMediaState:(unsigned int)state forMediaType:(unsigned int)type;
- (id)updateMediaState:(unsigned int)state forStreamGroups:(id)groups;
- (void)updateVideoPaused:(BOOL)paused;
- (void)updateAudioSpectrumState;
- (BOOL)isMuted;
- (void)setMediaState:(unsigned int)state forMediaType:(unsigned int)type;
- (void)setMediaType:(unsigned int)type mixingWithMediaType:(unsigned int)type;
- (unsigned int)streamGroupStateFromStreamGroupID:(unsigned int)id;
- (void)createRedundancyControllers;
- (void)collectVideoChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)collectAudioChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)handleStreamGroupsActiveConnectionChange:(id)change;
- (BOOL)setupMediaSyncForStreamGroup:(id)group;
- (BOOL)setupStreamGroupMediaSync;
- (void)swapScreenStreamGroupSyncSourceWithState:(unsigned int)state;
- (void)setStreamGroup:(unsigned int)group syncSourceStreamGroupID:(unsigned int)id;
- (void)vcMediaStream:(id)stream requestKeyFrameGenerationWithStreamID:(unsigned short)id firType:(int)type;
- (void)vcMediaStreamServerDidDie:(id)die;
- (BOOL)handleEncryptionInfoChange:(id)change;
- (void)resetDecryptionTimeout;
- (void)didEncryptionKeyRollTimeout;
- (void)didSuspendAudioIO:(id)io;
- (void)didResumeAudioIO:(id)io;
- (void)serverDidDie;
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)samples;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)samples;
- (void)handleActiveConnectionChange:(id)change;
- (void)redundancyController:(id)controller redundancyIntervalDidChange:(double)change;
- (void)redundancyController:(id)controller redundancyPercentageDidChange:(unsigned int)change;
- (void)audioPowerSpectrumSinkDidRegister;
- (void)audioPowerSpectrumSinkDidUnregister;
- (void)sendAudioPowerSpectrumSourceRegistration:(BOOL)registration;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo { unsigned int x0; double x1; } *)codec;
- (void)handleRemoteOneToOneSwitchWithStreamGroup:(id)group fromStreamID:(unsigned short)id toStreamID:(unsigned short)id;
- (void)handleSymptomReportForDecryptionError;
- (void)streamGroup:(id)group didChangeMediaPriority:(unsigned char)priority;
- (void)streamGroup:(id)group didChangePlayoutRTPTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })rtptime;
- (void)didChangeSendingStreamsForStreamGroup:(id)group;
- (void)didMediaDecryptionTimeOutForStreamGroup:(id)group;
- (void)streamGroup:(id)group didRemoteEnableChange:(BOOL)change;
- (void)streamGroup:(id)group didRemotePauseChange:(BOOL)change;
- (void)streamGroup:(id)group didSwitchFromStreamID:(unsigned short)id toStreamID:(unsigned short)id;
- (void)didChangeReceivingStreamsForStreamGroup:(id)group;
- (void)didChangeActualNetworkBitrateForStreamGroup:(id)group;
- (void)streamGroup:(id)group didRequestRedundancy:(BOOL)redundancy;
- (void)streamGroup:(id)group requestKeyFrameGenerationWithStreamID:(unsigned short)id firType:(int)type;
- (void)didDecryptionTimeOutForMKMRecoveryForStreamGroup:(id)group;
- (void)streamGroup:(id)group didSuspendStreams:(BOOL)streams;
- (void)streamGroup:(id)group remoteMediaStalled:(BOOL)stalled duration:(double)duration;
- (void)stopVideoCaptureClient;
- (void)streamGroup:(id)group didChangeState:(unsigned int)state;
- (void)streamGroup:(id)group didReceiveFlushRequestWithPayloads:(id)payloads;
- (BOOL)isAudioEnabled;
- (BOOL)isVideoEnabled;
- (BOOL)isAudioPaused;
- (BOOL)isVideoPaused;
- (BOOL)isLocalOnWiFi;
- (BOOL)isScreenEnabled;
- (BOOL)isOneToOneModeEnabled;
@end

#endif /* VCSessionParticipant_h */
