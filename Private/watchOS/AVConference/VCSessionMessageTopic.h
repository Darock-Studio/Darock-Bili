//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCSessionMessageTopic_h
#define VCSessionMessageTopic_h
@import Foundation;

#include "VCControlChannel.h"

@class NSArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface VCSessionMessageTopic : NSObject {
  /* instance variables */
  NSArray *associatedStrings;
  BOOL allowConcurrent;
  BOOL requireReliable;
  NSObject<OS_dispatch_queue> *outMessageQueue;
  VCControlChannel *controlChannel;
  NSObject<OS_dispatch_queue> *inMessageQueue;
  id /* block */ sendMessageCompletionBlock;
  id /* block */ sendMessageDataCompletionBlock;
  id /* block */ receiveMessageBlock;
  id /* block */ receiveMessageDictionaryBlock;
  long long latestOutgoingMessageIndex;
  BOOL shouldEncodeTopicKeyInMessage;
  NSMutableDictionary *transactionCache;
}

@property (nonatomic) BOOL isSendingEnabled;
@property (readonly, nonatomic) NSString *topicKey;

/* instance methods */
- (id)initWithTopicKey:(id)key strings:(id)strings allowConcurrent:(BOOL)concurrent controlChannel:(id)channel sendCompletionHandler:(id /* block */)handler receiveHandler:(id /* block */)handler;
- (id)initWithTopicKey:(id)key strings:(id)strings allowConcurrent:(BOOL)concurrent requireReliable:(BOOL)reliable controlChannel:(id)channel sendMessageDataCompletionHandler:(id /* block */)handler receiveMessageDictionaryHandler:(id /* block */)handler;
- (id)initWithTopicKey:(id)key strings:(id)strings allowConcurrent:(BOOL)concurrent requireReliable:(BOOL)reliable controlChannel:(id)channel sendCompletionHandler:(id /* block */)handler receiveHandler:(id /* block */)handler sendMessageDataCompletionHandler:(id /* block */)handler receiveMessageDictionaryHandler:(id /* block */)handler;
- (int)expectedMessageType;
- (void)dealloc;
- (BOOL)isPayloadAssociated:(id)associated;
- (void)sendMessage:(id)message;
- (id)messageForCommand:(id)command;
- (void)sendMessage:(id)message participantID:(unsigned long long)id;
- (void)handleSendMessageDidSucceed:(BOOL)succeed message:(id)message participantID:(id)id;
- (BOOL)sendReliableMessage:(id)message participantID:(unsigned long long)id withOptions:(id)options completion:(id /* block */)completion;
- (void)sendMessage:(id)message participantID:(unsigned long long)id withSequence:(long long)sequence numRetries:(long long)retries;
- (BOOL)isDuplicateMessageID:(id)id messageHistory:(id)history participantID:(id)id;
- (void)purgeExpiredEntries:(double)entries messageHistory:(id)history participantID:(id)id;
- (void)passMessage:(id)message sequence:(int)sequence fromParticipant:(id)participant;
- (void)clearTransactionCacheForParticipant:(id)participant;
@end

#endif /* VCSessionMessageTopic_h */
