//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCAudioTierPicker_h
#define VCAudioTierPicker_h
@import Foundation;

#include "BitrateLimits.h"
#include "VCAudioTier.h"

@class NSMutableDictionary;

@interface VCAudioTierPicker : NSObject {
  /* instance variables */
  NSMutableDictionary *_tierTablesForRedNumPayloads;
  VCAudioTier *_fallbackTier;
  BitrateLimits *_bitrateLimits;
  NSMutableDictionary *_tierTablePlist;
}

@property struct { unsigned char x0; struct __CFArray * x1; struct __CFArray * x2; struct __CFArray * x3; unsigned int x4; BOOL x5; BOOL x6; unsigned int x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; } config;
@property (readonly) VCAudioTier *defaultTier;

/* class methods */
+ (int)tierPickerModeToAVConferenceOperatingMode:(unsigned char)mode;
+ (unsigned char)operatingModeToTierPickerMode:(int)mode preferPlistForTierTable:(BOOL)table;
+ (BOOL)arrayHasObject:(id)object withPayloadType:(int)type;
+ (id)allPossibleCombinations:(id)combinations supportedPacketsPerBundle:(id)bundle redNumPayloads:(unsigned int)payloads headerSize:(unsigned int)size tierPickerMode:(unsigned char)mode usingCellular:(BOOL)cellular useCaseWatchContinuity:(BOOL)continuity;
+ (BOOL)usePlistForAudioTierTableFromMode:(unsigned char)mode;
+ (BOOL)isModeAudioOnly:(unsigned char)only;
+ (BOOL)isModeAudioVideo:(unsigned char)video;
+ (BOOL)isModeV2:(unsigned char)v2;
+ (BOOL)isModePlistSupported:(unsigned char)supported;
+ (BOOL)loadVCAudioTierFromTierTable:(id)table mode:(unsigned char)mode isIPv4:(BOOL)ipv4 cellular:(BOOL)cellular redNumPayloads:(unsigned int)payloads tierBitrate:(unsigned int)bitrate outEntry:(struct tagVCAudioTierPickerPlistEntry { int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)entry;
+ (BOOL)loadVCAudioTierFromTierTable:(id)table bitrate:(unsigned int)bitrate redNumPayloads:(unsigned int)payloads outEntry:(struct tagVCAudioTierPickerPlistEntry { int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)entry;
+ (id)selectHighestQualityAudioTiers:(id)tiers forBitrateLimits:(id)limits isHardLimit:(BOOL)limit;
+ (BOOL)shouldFilterTierForPayloadConfig:(id)config bitRate:(unsigned int)rate packetsPerBundle:(unsigned int)bundle mode:(unsigned char)mode redNumPayloads:(unsigned int)payloads cellular:(BOOL)cellular;
+ (id)valueForNetworkBitrate:(id)bitrate networkBitrate:(unsigned int)bitrate;

/* instance methods */
- (id)initWithConfig:(struct { unsigned char x0; struct __CFArray * x1; struct __CFArray * x2; struct __CFArray * x3; unsigned int x4; BOOL x5; BOOL x6; unsigned int x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; })config;
- (BOOL)reconfigureTierPicker:(struct { unsigned char x0; struct __CFArray * x1; struct __CFArray * x2; struct __CFArray * x3; unsigned int x4; BOOL x5; BOOL x6; unsigned int x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; })picker;
- (id)configToString:(struct { unsigned char x0; struct __CFArray * x1; struct __CFArray * x2; struct __CFArray * x3; unsigned int x4; BOOL x5; BOOL x6; unsigned int x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; })string;
- (void)logTierPickerConfig:(struct { unsigned char x0; struct __CFArray * x1; struct __CFArray * x2; struct __CFArray * x3; unsigned int x4; BOOL x5; BOOL x6; unsigned int x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; })config;
- (BOOL)setupTierPickerForConfig:(struct { unsigned char x0; struct __CFArray * x1; struct __CFArray * x2; struct __CFArray * x3; unsigned int x4; BOOL x5; BOOL x6; unsigned int x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; })config;
- (void)setupAlwaysOnRedTiersForSupportedRed:(id)red usingCellular:(BOOL)cellular;
- (void)dealloc;
- (id)generateAudioTiersDictFromPlistForBitrateLimits:(id)limits tierPickerConfig:(struct { unsigned char x0; struct __CFArray * x1; struct __CFArray * x2; struct __CFArray * x3; unsigned int x4; BOOL x5; BOOL x6; unsigned int x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; })config redNumPayloads:(unsigned int)payloads;
- (id)loadAudioTiersFromPlist:(id)plist;
- (void)printCreatedAudioTiers:(id)tiers;
- (id)tierForNetworkBitrate:(unsigned long long)bitrate withLegacyDuplication:(int)duplication;
- (id)chooseMultiwayAudioTierForRedPayload:(unsigned long long)payload;
- (id)tierForNetworkBitrate:(unsigned long long)bitrate withRedNumPayloads:(unsigned long long)payloads;
- (id)tierForAudioBitrate:(unsigned long long)bitrate withRedNumPayloads:(unsigned long long)payloads;
- (id)allAudioTiers;
@end

#endif /* VCAudioTierPicker_h */
