//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCStreamIOAudioController_h
#define VCStreamIOAudioController_h
@import Foundation;

#include "VCObject.h"
#include "VCAudioIOControllerClient.h"
#include "VCAudioIOControllerControl-Protocol.h"
#include "VCAudioRelay.h"
#include "VCAudioRelayIO.h"
#include "VCStreamInputAudio.h"
#include "VCStreamOutput.h"
#include "VCStreamOutputSource-Protocol.h"

@class NSDictionary, NSString;
@protocol OS_dispatch_queue;

@interface VCStreamIOAudioController : VCObject<VCAudioIOControllerControl, VCStreamOutputSource> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_stateQueue;
  BOOL _isRunning;
  BOOL _sourceStarted;
  BOOL _sinkStarted;
  VCAudioRelay *_outputThread;
  VCAudioRelayIO *_outputThreadClient;
  long long _streamToken;
  unsigned char _clientDirection;
  unsigned long long _networkClockID;
  VCStreamInputAudio *_streamInput;
  struct PacketThread_s * _packetThread;
  struct opaqueVCAudioBufferList * _inputSamples;
  struct __CFAllocator * _audioSampleBufferAllocator;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _streamOutputLock;
  struct _VCAudioIOControllerClientIO { void * x0; undefined * x1; id x2; unsigned int x3; unsigned int x4; unsigned int x5; struct opaqueVCAudioBufferList * x6; BOOL x7; BOOL x8; } * _sourceIO;
  struct __CFAllocator * _backingBufferAllocator;
  BOOL _timestampInitialized;
  unsigned int _nextExpectedSampleTime;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastHostTime;
  long long _lastSampleCount;
}

@property (retain) VCAudioIOControllerClient *runningClient;
@property (readonly, nonatomic) BOOL supportsVoiceActivityDetection;
@property (readonly, nonatomic) NSDictionary *reportingStats;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) VCStreamOutput *streamOutput;

/* instance methods */
- (id)initWithStreamInputID:(long long)id streamToken:(long long)token networkClockID:(unsigned long long)id;
- (void)dealloc;
- (BOOL)_packetThreadStartWithClientFormat:(const struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } *)format;
- (void)_packetThreadStop;
- (void)startClient:(id)client;
- (BOOL)startInputForClient:(id)client error:(id *)error;
- (BOOL)startOutputForClient:(id)client error:(id *)error;
- (BOOL)setupAndStartOutputClientThread;
- (void)cleanupOutputThread;
- (void)cleanupStreamOutput;
- (void)stopClient:(id)client;
- (BOOL)dispatchedStartClient:(id)client error:(id *)error;
- (void)dispatchedStopClient;
- (void)dispatchedUpdateClient:(id)client settings:(const struct tagVCAudioIOControllerClientSettings { unsigned char x0; BOOL x1; BOOL x2; BOOL x3; } *)settings;
- (void)updateClient:(id)client settings:(const struct tagVCAudioIOControllerClientSettings { unsigned char x0; BOOL x1; BOOL x2; BOOL x3; } *)settings;
- (BOOL)canSetDirection:(unsigned char)direction;
- (void)invalidate;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo { unsigned int x0; double x1; } *)codec;
@end

#endif /* VCStreamIOAudioController_h */
