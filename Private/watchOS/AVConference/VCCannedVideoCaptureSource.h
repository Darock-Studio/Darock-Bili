//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCCannedVideoCaptureSource_h
#define VCCannedVideoCaptureSource_h
@import Foundation;

#include "VCObject.h"
#include "VCCannedVideoFrameFeeder-Protocol.h"

@class VCWeakObjectHolder;
@protocol OS_dispatch_queue, {_tagVCCannedVideoCaptureSourceContext="attributeMutex"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"frameRate"Ai"hostClock"^{OpaqueCMClock}"producerThread"^{OpaqueFigThread}"producerThreadCanceled"B"producerMutex"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"producerConditional"{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}"consumerThread"^{OpaqueFigThread}"consumerThreadCanceled"B"consumerMutex"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"consumerConditional"{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}"frameRingBufferMutex"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"frameRingBuffer"^{Frame}"frameRingBufferIndex"i"helperQueue"@"NSObject<OS_dispatch_queue>"};

@interface VCCannedVideoCaptureSource : VCObject {
  /* instance variables */
  struct _tagVCCannedVideoCaptureSourceContext { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } attributeMutex; atomic  frameRate; int x0; struct OpaqueCMClock *hostClock; struct OpaqueFigThread *producerThread; BOOL producerThreadCanceled; struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } producerMutex; struct _opaque_pthread_cond_t { long long __sig; char x[40] __opaque; } producerConditional; struct OpaqueFigThread *consumerThread; BOOL consumerThreadCanceled; struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } consumerMutex; struct _opaque_pthread_cond_t { long long __sig; char x[40] __opaque; } consumerConditional; struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } frameRingBufferMutex; struct Frame *frameRingBuffer; int frameRingBufferIndex; NSObject<OS_dispatch_queue> *helperQueue; } _context;
  NSObject<VCCannedVideoFrameFeeder> *_frameFeeder;
  NSObject<OS_dispatch_queue> *_captureSessionQueue;
  VCWeakObjectHolder *_weakCallbackContext;
  undefined * _frameCallback;
  BOOL _enableTxTimestampAlignmentLogs;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stateLock;
}

/* instance methods */
- (id)initWithVideo:(id)video callbackContext:(id)context frameCallback:(undefined *)callback;
- (void)dealloc;
- (int)start;
- (int)stop;
- (void)setFrameRate:(int)rate;
- (int)frameRate;
- (void)setWidth:(int)width height:(int)height;
@end

#endif /* VCCannedVideoCaptureSource_h */
