//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCSessionUplinkBandwidthAllocatorOneToOne_h
#define VCSessionUplinkBandwidthAllocatorOneToOne_h
@import Foundation;

#include "VCObject.h"
#include "VCSessionUplinkBandwidthAllocator-Protocol.h"

@class NSMutableDictionary, NSString;

@interface VCSessionUplinkBandwidthAllocatorOneToOne : VCObject<VCSessionUplinkBandwidthAllocator> {
  /* instance variables */
  NSMutableDictionary *_streamTokenToTableEntryMap;
  NSMutableDictionary *_streamTokenToEnableMap;
  NSMutableDictionary *_bandwithAllocationTable;
}

@property (nonatomic) BOOL redundancyEnabled;
@property (nonatomic) BOOL redundancyEnabledFor720Stream;
@property (nonatomic) BOOL camera1080pAvailable;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)valueForNetworkBitrate:(id)bitrate networkBitrate:(unsigned int)bitrate;
+ (unsigned long long)insertionIndex:(id)index forValue:(id)value;
+ (id)microphoneOnlyTierTable;
+ (id)videoCallMicrophoneTierTable;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)addBandwidthAllocationTableEntry:(id)entry updateNow:(BOOL)now;
- (void)streamToken:(long long)token enabled:(BOOL)enabled;
- (BOOL)isEnabledStreamToken:(long long)token;
- (BOOL)peerSubscription:(BOOL)subscription streamID:(unsigned short)id;
- (void)getCurrentEnabledTierTables:(id)tables qualityIndices:(id)indices qualityIndexToStreamToken:(id)token;
- (void)generateBandwidthAllocationTableWithTierTables:(id)tables qualityIndices:(id)indices qualityIndexToStreamToken:(id)token;
- (void)recomputeAllocationTableIfRequired;
- (id)streamIDsIfStreamTokenIsPresent:(long long)present;
- (id)streamIDsForStreamToken:(long long)token;
- (id)repairStreamIDsForStreamToken:(long long)token;
- (BOOL)isRedundancyEnabled;
- (BOOL)isRedundancyEnabledFor720Stream;
- (id)findBitrateSplitForStreamToken:(long long)token targetBitrate:(unsigned int)bitrate;
- (unsigned long long)findAndSplitExtraBitrateFromCappedStreams:(id)streams remainderBitrate:(long long)bitrate currentStreamGroupBitrate:(unsigned long long)bitrate streamToken:(long long)token totalRemainderBitrateWeight:(unsigned long long)weight;
- (BOOL)isStreamGroupEnabled:(unsigned int)enabled;
- (BOOL)shouldUseMinMicBitrate:(unsigned long long)bitrate streamToken:(long long)token remainderBitrate:(long long)bitrate;
- (BOOL)shouldUseMultipleStreamGroupAlgorithm;
- (id)baseNetworkBitrateSplitForTargetBitrate:(unsigned int)bitrate baseNetworkBitrate:(unsigned long long *)bitrate;
- (id)targetBitratesForStreamToken:(long long)token targetNetworkBitrate:(unsigned int)bitrate preferNetworkBitrates:(BOOL)bitrates;
- (id)streamIDsIfStreamTokenIsEnabled:(long long)enabled;
- (id)streamIDsForStreamToken:(long long)token targetBitrate:(unsigned int)bitrate;
- (id)streamIDsForStreamToken:(long long)token targetBitrateCap:(unsigned int)cap;
- (BOOL)isCamera1080pAvailable;
@end

#endif /* VCSessionUplinkBandwidthAllocatorOneToOne_h */
