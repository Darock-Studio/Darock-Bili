//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCRateControlSmartBrake_h
#define VCRateControlSmartBrake_h
@import Foundation;

#include "VCObject.h"

@protocol OS_dispatch_queue;

@interface VCRateControlSmartBrake : VCObject {
  /* instance variables */
  float _previousInputTime;
  float _isStartTimeSet;
  struct tagVCRateControlSmartBrakeInputTensor { float time; float bitrate; float OWRD; float RTT; float APLR; float VPLR; } _inputTensor;
  struct tagVCRateControlSmartBrakeOutputTensor { float networkCongestionProbability; float bandwidth; float bandwidthSigma; } _outputTensor;
  struct tagVCRateControlSmartBrakeInputBuffers { struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } time; struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } bitrate; struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } OWRD; struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } RTT; struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } APLR; struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } VPLR; } _inputBuffers;
  struct tagVCRateControlSmartBrakeOutputBuffers { struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } networkCongestionProbability; struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } bandwidth; struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } bandwidthSigma; } _outputBuffers;
  float * _dataLSTM;
  unsigned long long _dataLSTMSize;
  struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } _bufferLSTMStateIn;
  struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } _bufferLSTMStateOut;
  struct { void *plan; int network_index; } _net;
  void * _context;
  void * _plan;
  int _compilationStatus;
  NSObject<OS_dispatch_queue> *_compilationQueue;
  id /* block */ _completionHandler;
}

@property (readonly, nonatomic) struct tagVCRateControlSmartBrakeConfig { float x0; float x1; float x2; unsigned char x3; } config;

/* instance methods */
- (id)init;
- (id)initWithCompletionHandler:(id /* block */)handler;
- (void)dealloc;
- (int)setupModel;
- (int)setupNetAndConfigFromPath:(id)path;
- (int)bindInputBuffers;
- (int)bindOutputBuffers;
- (int)bindLSTMBuffers;
- (void)compileModel;
@end

#endif /* VCRateControlSmartBrake_h */
