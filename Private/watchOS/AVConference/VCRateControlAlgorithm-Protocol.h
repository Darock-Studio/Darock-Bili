//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCRateControlAlgorithm_Protocol_h
#define VCRateControlAlgorithm_Protocol_h
@import Foundation;

@protocol VCRateControlAlgorithm <NSObject>

@property (retain, nonatomic) VCRateControlMediaController *mediaController;
@property (readonly, nonatomic) struct tagVCRateControlAlgorithmConfig { unsigned int x0; unsigned int * x1; int x2; int x3; int x4; int x5[2] int x6; int x7; int x8; int x9; int x10; int x11; int x12; int x13; int x14; int x15; int x16; double x17; double x18; double x19; double x20; double x21; double x22; double x23; double x24; double x25; double x26; double x27; double x28; double x29; double x30; int x31; int x32; int x33; double x34; double x35; double x36; double x37; double x38; double x39; double x40; double x41; double x42; double x43; double x44; unsigned int x45; unsigned int x46; unsigned int x47; unsigned int x48; unsigned int x49; BOOL x50; BOOL x51; BOOL x52; BOOL x53; BOOL x54; BOOL x55; BOOL x56; BOOL x57; BOOL x58; BOOL x59; BOOL x60; BOOL x61; int x62; BOOL x63; double x64; double x65; int x66; double x67; int x68; double x69; double x70; double x71; int x72; double x73; int x74; int x75; double x76; double x77; int x78; double x79; double x80; double x81; double x82; double x83; double x84; double x85; double x86; double x87; double x88; double x89; double x90; double x91; double x92; double x93; double x94; double x95; BOOL x96; double x97; int x98; int x99; BOOL x100; int x101; double x102; double x103; double x104; double x105; double x106; double x107; unsigned int x108; unsigned int x109; double x110; double x111; double x112; double x113; double x114; unsigned int x115; unsigned int x116; unsigned int x117; double x118; double x119; double x120; int x121; } config;
@property (readonly, nonatomic) unsigned int targetBitrate;
@property (readonly, nonatomic) unsigned int rateChangeCounter;
@property (readonly, nonatomic) BOOL isCongested;
@property (readonly, nonatomic) unsigned int mostBurstLoss;
@property (readonly, nonatomic) double packetLossRate;
@property (readonly, nonatomic) double packetLossRateAudio;
@property (readonly, nonatomic) double packetLossRateVideo;
@property (readonly, nonatomic) unsigned int totalPacketReceived;
@property (readonly, nonatomic) double roundTripTime;
@property (readonly, nonatomic) double worstRecentRoundTripTime;
@property (readonly, nonatomic) unsigned int worstRecentBurstLoss;
@property (readonly, nonatomic) double owrd;
@property (readonly, nonatomic) BOOL isNewRateSentOut;
@property (nonatomic) unsigned int localBandwidthEstimation;
@property (readonly, nonatomic) unsigned int remoteBandwidthEstimation;
@property (readonly, nonatomic) unsigned int actualBitrate;
@property (nonatomic) BOOL didMBLRampDown;
@property (readonly, nonatomic) BOOL isSendBitrateLimited;
@property (readonly, nonatomic) BOOL isFirstInitialRampUpDone;
@property (nonatomic) unsigned int rateSharingCount;
@property (readonly, nonatomic) BOOL isLossBasedAdaptationOn;
@property (nonatomic) BOOL isFirstTimestampArrived;
@property (readonly, nonatomic) struct tagVCRateControlAlgorithmReportStats { unsigned int x0; int x1; union { struct tagVCRateControlAlgorithmSmartBrakeStats { double x0; int x1; int x2; int x3; unsigned char x4; } x0; } x2; } reportStatistics;

@end

#endif /* VCRateControlAlgorithm_Protocol_h */
