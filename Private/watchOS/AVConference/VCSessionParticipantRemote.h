//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCSessionParticipantRemote_h
#define VCSessionParticipantRemote_h
@import Foundation;

#include "VCSessionParticipant.h"
#include "VCPositionalInfo.h"
#include "VCSessionBandwidthAllocationTable.h"
#include "VCSessionDownlinkBandwidthAllocatorClient-Protocol.h"
#include "VCSessionParticipantMediaStreamInfo.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSNumber, NSString, TimingCollection, VCAudioCaptionsCoordinator;
@protocol OS_dispatch_source, OS_nw_activity;

@interface VCSessionParticipantRemote : VCSessionParticipant<VCSessionDownlinkBandwidthAllocatorClient> {
  /* instance variables */
  BOOL _remoteSystemAudioPaused;
  BOOL _receivedFirstFrame;
  VCSessionBandwidthAllocationTable *_mediaTable;
  VCSessionBandwidthAllocationTable *_repairMediaTable;
  BOOL _isVideoDegraded;
  BOOL _isRedundancyRequested;
  BOOL _isRemoteMediaStalled;
  struct tagVCAudioStreamGroupPriorityInfo { BOOL isAudioActive; unsigned int audioActiveProbabilityThreshold; unsigned int audioInactiveProbabilityThreshold; unsigned int audioActiveAccumulationThreshold; unsigned int audioInactiveAccumulationThreshold; unsigned int audioActiveCount; unsigned int lastAudioPriority; unsigned int refreshCounter; } _mediaPriorityInfo;
  TimingCollection *_perfTimers;
  BOOL _haveReportedPerfTimers;
  BOOL _isMediaSuspended;
  BOOL _oneToOneVideoEnabled;
  BOOL _outOfProcessCodecsEnabled;
  int _thermalLevel;
  struct __CFDictionary * _mediaTypeToSpatialAudioMetadataEntryMap;
  NSObject<OS_nw_activity> *_nwActivity;
  NSObject<OS_nw_activity> *_participantPoorConnectionNwActivity;
  NSObject<OS_nw_activity> *_participantMediaStallNwActivity;
  double _lastVideoExpectationSwitch;
  BOOL _isVideoJitterForPlayoutEnabled;
  BOOL _remoteScreenEnabledStateChanged;
  NSMutableDictionary *_jbSynchronizerPerSyncGroupID;
  NSMutableDictionary *_remoteMediaStates;
  NSObject<OS_dispatch_source> *_remoteStreamGroupStateUpdateTimer;
  VCAudioCaptionsCoordinator *_captionsCoordinator;
}

@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *micStreamInfo;
@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *cameraStreamInfo;
@property (readonly, nonatomic) VCSessionParticipantMediaStreamInfo *screenStreamInfo;
@property (readonly, nonatomic) NSNumber *optedInAudioStreamID;
@property (readonly, nonatomic) NSNumber *optedInVideoStreamID;
@property (nonatomic) BOOL remoteVideoEnabled;
@property (nonatomic) BOOL remoteAudioEnabled;
@property (nonatomic) BOOL remoteScreenEnabled;
@property (nonatomic) BOOL screenControlEnabled;
@property (nonatomic) BOOL remoteVideoPaused;
@property (nonatomic) BOOL remoteAudioPaused;
@property (readonly, nonatomic) BOOL isVideoExpected;
@property (nonatomic) unsigned char videoQuality;
@property (nonatomic) unsigned int visibilityIndex;
@property (nonatomic) unsigned int prominenceIndex;
@property (readonly, nonatomic) unsigned int lastDisplayedFrameRTPTimestamp;
@property (nonatomic) struct _VCSessionParticipantCapabilities { BOOL x0; unsigned int x1; int x2; BOOL x3; BOOL x4; } capabilities;
@property (readonly, nonatomic) VCPositionalInfo *positionalInfo;
@property (readonly, nonatomic) NSDictionary *participantSpatialAudioSourceIDs;
@property (nonatomic) BOOL isServerRTxEnabled;
@property (readonly) NSString *uuid;
@property (readonly) NSArray *mediaEntries;
@property (readonly) BOOL isVisible;

/* class methods */
+ (BOOL)isDeviceLargeScreen;
+ (unsigned int)maxAudioNetworkBitrateForLocalInterfaceOnWiFi:(BOOL)fi isLowLatencyAudio:(BOOL)audio;
+ (unsigned int)maxCameraNetworkBitrateWithRedundancyForVideoQuality:(unsigned char)quality useWiFiBitrate:(BOOL)bitrate;
+ (unsigned int)maxCameraNetworkBitrateForVideoQuality:(unsigned char)quality useWiFiBitrate:(BOOL)bitrate isSharingEnabled:(BOOL)enabled;
+ (unsigned int)maxCameraNetworkBitrateForVideoQuality:(unsigned char)quality isLocalOnWiFi:(BOOL)fi isRedundancyRequested:(BOOL)requested isSharingEnabled:(BOOL)enabled;
+ (unsigned int)maxFtxtNetworkBitrateForVideoQuality:(unsigned char)quality isLocalOnWiFi:(BOOL)fi isRedundancyRequested:(BOOL)requested;
+ (unsigned int)maxBdatNetworkBitrateForVideoQuality:(unsigned char)quality isLocalOnWiFi:(BOOL)fi isRedundancyRequested:(BOOL)requested;
+ (unsigned int)maxFdatNetworkBitrateForVideoQuality:(unsigned char)quality isLocalOnWiFi:(BOOL)fi isRedundancyRequested:(BOOL)requested;
+ (unsigned int)maxNetworkBitrateForStreamGroupID:(unsigned int)id videoQuality:(unsigned char)quality isLocalOnWiFi:(BOOL)fi isRedundancyRequested:(BOOL)requested isSharingEnabled:(BOOL)enabled;

/* instance methods */
- (id)initWithConfig:(id)config delegate:(id)delegate;
- (void)dealloc;
- (void)start;
- (void)stop;
- (void)initializeParticipantType;
- (int)setupSpatialAudioWithMetadata:(void *)metadata spatialMetadataEntryMap:(struct __CFDictionary *)map;
- (void)cleanupSpatialAudio;
- (void *)spatialMetadataEntryForMediaType:(unsigned int)type;
- (int)storeSpatialAudioMetadataEntry:(void *)entry forMediaType:(unsigned int)type;
- (void)setAudioPaused:(BOOL)paused;
- (void)dispatchedSetRemoteAudioPaused:(BOOL)paused;
- (void)dispatchedSetRemoteAudioEnabled:(BOOL)enabled;
- (void)setVideoPaused:(BOOL)paused;
- (void)dispatchedSetRemoteVideoEnabled:(BOOL)enabled;
- (void)dispatchedSetRemoteScreenEnabled:(BOOL)enabled;
- (void)dispatchedSetScreenControlEnabled:(BOOL)enabled;
- (void)dispatchedSetRemoteSystemAudioPaused:(BOOL)paused;
- (void)setRemoteSystemAudioPaused:(BOOL)paused;
- (void)setTransitionToEnabled:(unsigned int)enabled;
- (void)setTransitionToPaused:(unsigned int)paused;
- (void)setTransitionToDisabled:(unsigned int)disabled;
- (id)updateMediaState:(unsigned int)state forStreamGroup:(id)group;
- (void)setRemoteMediaState:(id)state forMediaType:(id)type;
- (id)newSupportedRemoteMediaTypeStatesDict:(id)dict;
- (void)setRemoteMediaTypeStates:(id)states;
- (unsigned int)remoteMediaStateForMediaType:(unsigned int)type;
- (void)dispatchedSetRemoteVideoPaused:(BOOL)paused;
- (id)applyVideoEnabledSetting:(BOOL)setting;
- (void)updateDownlinkBandwithAllocatorClientConfigurations:(id)configurations;
- (void)updatePositionalInfo:(id)info shouldReapply:(BOOL)reapply;
- (BOOL)isInCanvas;
- (void)updateOneToOneAudioPositionalInfo:(const struct tagVCSpatialAudioMetadataPositionalInfo { float x0; float x1; float x2; unsigned int x3; unsigned int x4; unsigned int x5; } *)info;
- (BOOL)processParticipantInfo;
- (id)getMajorVersionNumber;
- (BOOL)supportsNegotiatedCoordinateSystem;
- (BOOL)supportsGFTSwitchToOneToOne;
- (BOOL)isParticipantPeace:(id)peace;
- (BOOL)isParticipantDawnburstOrLater;
- (id)setupStreamRTP:(id)rtp;
- (BOOL)configureAudioIOWithDeviceRole:(int)role operatingMode:(int)mode;
- (void)completeAndReleaseNwActivity:(id)activity withReason:(int)reason;
- (void)cleanupNwActivity;
- (BOOL)isActiveMediaType:(unsigned int)type;
- (BOOL)isStreamGroupActive:(id)active;
- (BOOL)setupAudioStreamConfiguration:(id)configuration withStreamGroupConfig:(id)config streamGroupStreamConfig:(id)config;
- (id)checkSubstreams:(id)substreams forLowerQualityIndex:(unsigned int)index;
- (BOOL)setupBandwidthAllocationTableForMediaStreamConfigs:(id)configs streamGroupID:(unsigned int)id entryType:(unsigned char)type;
- (id)entryForStreamID:(id)id;
- (id)getAudioDumpName;
- (void)setMuted:(BOOL)muted;
- (void)setActiveStreamIDs:(id)ids;
- (void)appendOptedInStreamID:(id)id toOptInStreamsIDs:(id)ids targetBandwidthEntry:(id)entry forceSeamlessTransition:(BOOL)transition;
- (id)recommendedStreamIDsForSelectedMediaEntries:(id)entries forceSeamlessTransition:(BOOL)transition;
- (void)negotiateAudioRules:(id)rules;
- (BOOL)isAudioActive;
- (void)updateAudioSpectrumState;
- (BOOL)isScreenActive;
- (id)systemAudioStreamInfo;
- (long long)participantScreenToken;
- (id)screenGroup;
- (id)videoGroup;
- (id)audioGroup;
- (long long)participantMicrophoneToken;
- (BOOL)configureWithOneToOneParticipantConfig:(id)config operatingMode:(int)mode;
- (void)dispatchedSetVideoReceiverFeedbackDelegate:(id)delegate;
- (void)setVideoReceiverFeedbackDelegate:(id)delegate;
- (void)setVideoStreamDelegate:(id)delegate delegateFunctions:(const struct tagVCVideoStreamDelegateRealtimeInstanceVTable { undefined * x0; } *)functions;
- (unsigned int)actualNetworkBitrateWithAudioBitrates:(id)bitrates;
- (id)startAudioIO;
- (id)stopAudioStreams;
- (id)startScreenGroup;
- (void)updateThermalLevel:(int)level;
- (void)setMediaRecorder:(id)recorder;
- (void)setStreamGroup:(unsigned int)group syncSourceStreamGroupID:(unsigned int)id;
- (void)reactionDidStart:(id)start;
- (void)didStopReacting;
- (id)optedInStreamIDForStreamGroupID:(unsigned int)id;
- (id)activeDownlinkStreamIDForStreamGroupID:(unsigned int)id;
- (unsigned int)actualNetworkBitrateForStreamGroup:(unsigned int)group;
- (unsigned int)optedInNetworkBitrateForStreamGroup:(unsigned int)group;
- (void)didReceiveFirstFrameForStreamGroup:(id)group;
- (void)redundancyController:(id)controller redundancyPercentageDidChange:(unsigned int)change;
- (void)redundancyController:(id)controller redundancyIntervalDidChange:(double)change;
- (void)collectVideoChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)collectAudioChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)pushEventToNwActivity:(long long)activity started:(BOOL)started;
- (void)setVideoDegraded:(BOOL)degraded;
- (void)networkQualityDidDegrade:(BOOL)degrade isLocalNetworkQualityDegraded:(BOOL)degraded;
- (void)setRemoteMediaStalled:(BOOL)stalled;
- (void)appendStreamGroup:(id)group maxBitrate:(unsigned int)bitrate mediaEntries:(id)entries;
- (unsigned char)cappedVideoQualityWithShouldLimitCameraQualityForPIP:(BOOL)pip;
- (void)appendStreamGroupsMediaEntries:(id)entries;
- (void)validateMediaEntries:(id)entries;
- (void)setMediaSuspended:(BOOL)suspended forStreamToken:(id)token;
- (void)updateScreenStreamConfigurationWithStreamGroupResult:(id)result multiwayConfig:(id)config screenStreamConfig:(id)config;
- (void)updateVideoMultiwayConfig:(id)config withStreamGroupStreamConfig:(id)config;
- (id)newMultiwayConfigWithStreamGroupStreamConfig:(id)config maxIDSStreamIDCount:(unsigned int)idcount groupID:(unsigned int)id;
- (BOOL)setupVideoStreamConfiguration:(id)configuration withStreamGroupStreamConfig:(id)config codecConfigs:(id)configs multiwayConfig:(id)config groupID:(unsigned int)id;
- (id)newMediaStreamConfigWithStreamGroupConfig:(id)config streamConfig:(id)config rateControlConfig:(id)config multiwayConfig:(id)config;
- (BOOL)setupStreamConfigWithCodecs:(id)codecs streamConfig:(id)config codecConfigs:(id)configs featureStringsDict:(id)dict;
- (id)newMediaStreamConfigWithStreamConfig:(id)config streamGroupConfig:(id)config maxIDSStreamIDCount:(unsigned int)idcount;
- (id)newMediaStreamInfoWithNegotiationConfig:(id)config streamToken:(long long)token;
- (void)setupMediaStreamGroupConfig:(id)config withNegotiationConfig:(id)config;
- (int)spatialChannelIndex:(unsigned int *)index spatialAudioSourceID:(unsigned long long *)id forMediaType:(unsigned int)type;
- (int)setupSpatialInfoForStreamGroupConfig:(id)config;
- (id)newStreamGroupConfigWithNegotiationConfig:(id)config;
- (id)newMediaStreamWithNegotiationConfig:(id)config streamToken:(long long)token;
- (BOOL)addOneToOneStreamConfigToMediaStreamInfo:(id)info negotiatorStreamGroupConfig:(id)config;
- (BOOL)oneToOneIsSupportedAudioStreamGroup:(unsigned int)group;
- (BOOL)oneToOneIsSupportedVideoStreamGroup:(unsigned int)group;
- (BOOL)setupStreamGroupWithConfig:(id)config;
- (id)newVideoStreamGroupWithStreamGroupConfig:(id)config;
- (BOOL)didNegotiateStreamGroupWithID:(unsigned int)id;
- (BOOL)shouldEnablePacketRetransmissionForStreamGroupID:(unsigned int)id;
- (BOOL)shouldSetupStreamGroupWithID:(unsigned int)id;
- (void)createJitterBufferTargetEstimatorSynchronizer:(struct tagVCJBTargetEstimatorSynchronizer * *)synchronizer syncGroupID:(unsigned int)id;
- (void)setupJBTargetSynchronizers;
- (BOOL)setupStreamGroups;
- (void)updateShouldEnableFaceZoom;
- (void)setShouldEnableFaceZoom:(BOOL)zoom;
- (void)setSharingEnabled:(BOOL)enabled;
- (void)updateStreamConfigWithMLEnhance:(id)mlenhance;
- (void)updateShouldEnableMLEnhance;
- (BOOL)shouldEnableMLEnhanceLowTier;
- (BOOL)shouldEnableMLEnhanceOneToOne;
- (BOOL)shouldEnableMLEnhanceHighTier;
- (void)updateShouldEnableMLEnhanceLowTierMultiway;
- (void)updateShouldEnableMLEnhanceHighTierMultiway;
- (BOOL)setShouldEnableMLEnhance:(BOOL)mlenhance streamWithVideoResolution:(long long)resolution videoStreamGroup:(id)group;
- (void)updateShouldEnableMLEnhanceOneToOne;
- (BOOL)isSeamlessTransitionSupportedForStreamGroup:(id)group;
- (void)createAndResumeFetchTimer;
- (void)cancelAndReleaseFetchTimer;
- (void)updateAndHandleVideoMediaStall:(BOOL)stall isOneToOneStream:(BOOL)stream;
- (void)reportCameraCompositionEnabled:(BOOL)enabled;
- (BOOL)isRemoteVideoEnabled;
- (BOOL)isRemoteVideoPaused;
- (BOOL)isRemoteScreenEnabled;
- (BOOL)isScreenControlEnabled;
- (BOOL)isRemoteAudioEnabled;
- (BOOL)isRemoteAudioPaused;
@end

#endif /* VCSessionParticipantRemote_h */
