//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef AVCRemoteVideoClient_h
#define AVCRemoteVideoClient_h
@import Foundation;

#include "AVConferenceXPCClient.h"
#include "VCCALayerHost.h"
#include "VideoAttributes.h"

@class CALayer, NSDictionary, NSString;
@protocol AVCRemoteVideoClientDelegate, OS_dispatch_queue;

@interface AVCRemoteVideoClient : NSObject {
  /* instance variables */
  CALayer *_primaryCameraLayer;
  CALayer *_secondaryCameraLayer;
  CALayer *_screenLayer;
  CALayer *_primaryCameraSubLayer;
  CALayer *_secondaryCameraSubLayer;
  CALayer *_screenSubLayer;
  VCCALayerHost *_caLayerHost;
  AVConferenceXPCClient *_connection;
  int _activeVideoMode;
  NSDictionary *_slotsForModes;
  NSObject<OS_dispatch_queue> *_avcRemoteVideoQueue;
  BOOL _layerHostMode;
}

@property (retain, nonatomic) VideoAttributes *remoteScreenAttributes;
@property (retain, nonatomic) VideoAttributes *remoteVideoAttributes;
@property (nonatomic) BOOL hasReceivedFirstFrame;
@property (nonatomic) BOOL isVideoPaused;
@property (nonatomic) BOOL isMediaStalled;
@property (nonatomic) BOOL isVideoDegraded;
@property (nonatomic) BOOL isVideoSuspended;
@property (nonatomic) BOOL hasReceivedLastFrame;
@property (nonatomic) BOOL shouldDisplayVideoInfoLayer;
@property (copy, nonatomic) NSString *connectionTypeString;
@property (nonatomic) BOOL isNetworkDegraded;
@property (nonatomic) BOOL isNetworkDegradedLocal;
@property (readonly, nonatomic) NSObject<AVCRemoteVideoClientDelegate> *delegate;
@property (readonly, nonatomic) long long streamToken;

/* instance methods */
- (id)initWithStreamToken:(long long)token delegate:(id)delegate;
- (void)cleanupVideoLayerForAllModes;
- (void)dealloc;
- (void)setVideoLayer:(id)layer forMode:(int)mode;
- (id)slotForMode:(int)mode;
- (void)setRootLayer:(id)layer;
- (void)setLayerHostBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (BOOL)createCALayerHostForRootLayer:(id)layer withContextId:(unsigned int)id;
- (void)setRemoteVideoLayerBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (BOOL)setVideoLayerHost:(id)host forMode:(int)mode;
- (void)remoteVideoDidPause:(BOOL)pause streamToken:(long long)token;
- (void)remoteMediaDidStall:(BOOL)stall streamToken:(long long)token;
- (void)remoteVideoDidDegrade:(BOOL)degrade streamToken:(long long)token;
- (void)remoteVideoDidSuspend:(BOOL)suspend streamToken:(long long)token;
- (void)releaseQueueForStreamToken:(long long)token;
- (void)remoteVideoServerDidDie;
- (void)insertSubLayerInLayer:(id)layer videoMode:(int)mode videoSlot:(id)slot;
- (id *)subLayerRefForMode:(int)mode;
- (id)subLayerForMode:(int)mode;
- (void)setActiveVideoLayerForMode:(int)mode;
- (void)cleanupSubLayerForMode:(int)mode;
- (void)cleanupLayerHost;
- (void)terminateConnection;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)adjustInfoSubLayerBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds forSuperLayer:(id)layer;
- (void)insertInfoSubLayerIntoLayer:(id)layer videoMode:(int)mode;
- (void)updateConnectionInfoWithLocalInterfaceType:(id)type remoteInterfaceType:(id)type;
- (void)drawText:(id)text inSubLayer:(id)layer;
- (id)findInfoSubLayerFromLayer:(id)layer;
@end

#endif /* AVCRemoteVideoClient_h */
