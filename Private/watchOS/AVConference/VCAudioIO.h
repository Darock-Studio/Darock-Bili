//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCAudioIO_h
#define VCAudioIO_h
@import Foundation;

#include "VCAudioIOControllerClient.h"
#include "VCAudioIOControllerControl-Protocol.h"
#include "VCAudioIOControllerDelegate-Protocol.h"

@class NSDictionary, NSString;
@protocol {_VCAudioEndpointData="converter"^{SoundDec_t}"isConverterNeeded"B"isAccumulatorNeeded"B"samplesPerFrame"I"sampleBuffer"^{opaqueVCAudioBufferList}"clientBuffer"^{opaqueVCAudioBufferList}"controllerBuffer"^{opaqueVCAudioBufferList}"isLastHostTimeValid"B"lastHostTime"d"lastTimestamp"I"timestampOffset"I"controllerChanged"B"isMuted"B"framesProcessed"I"delegateContext"{tagVCAudioIODelegateContext="delegate"@"<VCAudioIOSink><VCAudioIOSource>""clientCallback"^?"clientContext"^v"captionsCoordinator"@"VCAudioCaptionsCoordinator""streamToken"q}};

@interface VCAudioIO : NSObject<VCAudioIOControllerDelegate> {
  /* instance variables */
  NSObject<VCAudioIOControllerControl> *_audioIOController;
  VCAudioIOControllerClient *_controllerClient;
  id _delegate;
  id _sourceDelegate;
  id _sinkDelegate;
  BOOL _isMuted;
  BOOL _isControllerAudioFormatValid;
  BOOL _isControllerReset;
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _stateMutex;
  id /* block */ _startCompletionBlock;
  id /* block */ _stopCompletionBlock;
  struct _VCAudioEndpointData { struct SoundDec_t *converter; BOOL isConverterNeeded; BOOL isAccumulatorNeeded; unsigned int samplesPerFrame; struct opaqueVCAudioBufferList *sampleBuffer; struct opaqueVCAudioBufferList *clientBuffer; struct opaqueVCAudioBufferList *controllerBuffer; BOOL isLastHostTimeValid; double lastHostTime; unsigned int lastTimestamp; unsigned int timestampOffset; BOOL controllerChanged; BOOL isMuted; unsigned int framesProcessed; struct tagVCAudioIODelegateContext { <VCAudioIOSink><VCAudioIOSource> *delegate; undefined *clientCallback; void *clientContext; VCAudioCaptionsCoordinator *captionsCoordinator; long long streamToken; } delegateContext; } _sourceData;
  struct _VCAudioEndpointData { struct SoundDec_t *converter; BOOL isConverterNeeded; BOOL isAccumulatorNeeded; unsigned int samplesPerFrame; struct opaqueVCAudioBufferList *sampleBuffer; struct opaqueVCAudioBufferList *clientBuffer; struct opaqueVCAudioBufferList *controllerBuffer; BOOL isLastHostTimeValid; double lastHostTime; unsigned int lastTimestamp; unsigned int timestampOffset; BOOL controllerChanged; BOOL isMuted; unsigned int framesProcessed; struct tagVCAudioIODelegateContext { <VCAudioIOSink><VCAudioIOSource> *delegate; undefined *clientCallback; void *clientContext; VCAudioCaptionsCoordinator *captionsCoordinator; long long streamToken; } delegateContext; } _sinkData;
  unsigned int _audioType;
}

@property (readonly, nonatomic) const struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } * controllerFormat;
@property (readonly, nonatomic) NSDictionary *reportingStats;
@property (readonly, nonatomic) const struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } * clientFormat;
@property (nonatomic) BOOL muted;
@property (nonatomic) BOOL inputMeteringEnabled;
@property (nonatomic) BOOL outputMeteringEnabled;
@property (nonatomic) BOOL isGKVoiceChat;
@property (nonatomic) unsigned char direction;
@property (readonly, nonatomic) unsigned int state;
@property (readonly, nonatomic) unsigned int pullAudioSamplesCount;
@property (nonatomic) BOOL spatialAudioDisabled;
@property (readonly, nonatomic) BOOL supportsVoiceActivityDetection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)defaultControllerForAudioType:(unsigned int)type forDirection:(unsigned char)direction forOperatingMode:(int)mode;
+ (id)controllerForDeviceRole:(int)role audioType:(unsigned int)type direction:(unsigned char)direction operatingMode:(int)mode streamInputID:(long long)id streamToken:(long long)token networkClockID:(unsigned long long)id;

/* instance methods */
- (void)setUpAndTransferDelegateContext:(const struct tagVCAudioIODelegateContext { id x0; undefined * x1; void * x2; id x3; long long x4; } *)context toDestinationContext:(struct tagVCAudioIODelegateContext { id x0; undefined * x1; void * x2; id x3; long long x4; } *)context;
- (id)initWithConfiguration:(const struct tagVCAudioIOConfiguration { unsigned int x0; unsigned int x1; int x2; int x3; unsigned int x4; unsigned char x5; BOOL x6; id x7; int x8; unsigned int x9; unsigned int x10; BOOL x11; unsigned long long x12; unsigned int x13; long long x14; long long x15; unsigned long long x16; BOOL x17; BOOL x18; struct tagVCAudioIODelegateContext { id x0; undefined * x1; void * x2; id x3; long long x4; } x19; struct tagVCAudioIODelegateContext { id x0; undefined * x1; void * x2; id x3; long long x4; } x20; } *)configuration;
- (void)setupClientFormatWithConfiguration:(const struct tagVCAudioIOConfiguration { unsigned int x0; unsigned int x1; int x2; int x3; unsigned int x4; unsigned char x5; BOOL x6; id x7; int x8; unsigned int x9; unsigned int x10; BOOL x11; unsigned long long x12; unsigned int x13; long long x14; long long x15; unsigned long long x16; BOOL x17; BOOL x18; struct tagVCAudioIODelegateContext { id x0; undefined * x1; void * x2; id x3; long long x4; } x19; struct tagVCAudioIODelegateContext { id x0; undefined * x1; void * x2; id x3; long long x4; } x20; } *)configuration;
- (BOOL)reconfigureWithConfig:(const struct tagVCAudioIOConfiguration { unsigned int x0; unsigned int x1; int x2; int x3; unsigned int x4; unsigned char x5; BOOL x6; id x7; int x8; unsigned int x9; unsigned int x10; BOOL x11; unsigned long long x12; unsigned int x13; long long x14; long long x15; unsigned long long x16; BOOL x17; BOOL x18; struct tagVCAudioIODelegateContext { id x0; undefined * x1; void * x2; id x3; long long x4; } x19; struct tagVCAudioIODelegateContext { id x0; undefined * x1; void * x2; id x3; long long x4; } x20; } *)config;
- (void)dealloc;
- (void)cleanUpRealtimeDelegatesAndContext:(BOOL)context;
- (void)forceCleanup;
- (id)delegate;
- (void)setFarEndVersionInfo:(struct VoiceIOFarEndVersionInfo { unsigned char x0[64] unsigned char x1[64] unsigned int x2; } *)info;
- (void)setRemoteCodecType:(unsigned int)type sampleRate:(double)rate;
- (BOOL)isInputMeteringEnabled;
- (BOOL)isOutputMeteringEnabled;
- (BOOL)isMuted;
- (void)updateVoiceActivityEnabled:(BOOL)enabled isMediaPriorityEnabled:(BOOL)enabled;
- (BOOL)createConverterForSource:(BOOL)source error:(id *)error;
- (void)destroyBuffers;
- (void)releaseConverters;
- (int)operatingMode;
- (void)didStart:(BOOL)start error:(id)error;
- (void)didStop:(BOOL)stop error:(id)error;
- (void)controllerFormatChanged:(const struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } *)changed;
- (void)didSuspend;
- (void)didResume;
- (void)serverDidDie;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo { unsigned int x0; double x1; } *)codec;
- (void)startWithCompletionHandler:(id /* block */)handler;
- (id)start;
- (id)stopWithCompletionHandlerInternal:(id /* block */)internal;
- (void)stopWithCompletionHandler:(id /* block */)handler;
- (id)stop;
@end

#endif /* VCAudioIO_h */
