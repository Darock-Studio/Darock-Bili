//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCVideoStreamReceiver_h
#define VCVideoStreamReceiver_h
@import Foundation;

#include "VCVideoReceiverBase.h"
#include "VCMediaStreamStats.h"
#include "VCMediaStreamSyncDestination-Protocol.h"
#include "VCVideoStreamRateAdaptation.h"
#include "VideoAttributes.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface VCVideoStreamReceiver : VCVideoReceiverBase<VCMediaStreamSyncDestination> {
  /* instance variables */
  struct tagHANDLE { int x0; } * _hRTP;
  struct OpaqueCMMemoryPool * _blockBufferMemoryPool;
  struct __CFAllocator * _blockBufferMemoryPoolAllocator;
  struct OpaqueVTDecompressionSession * _decompressionSession;
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _decompressionSessionMutex;
  BOOL _receivedFirstPacket;
  BOOL _receivedFirstRemoteFrame;
  unsigned short _lastSequenceNumber;
  int _sequenceNumberOutOfOrder;
  unsigned char _firSequenceNumber;
  double _lastFIRArrivalTime;
  VCVideoStreamRateAdaptation *_rateAdaptation;
  struct opaqueCMBufferQueue * _videoQueue;
  unsigned int _mostRecentTimestamp;
  unsigned int _lastVideoTimestamp;
  unsigned int _videoTimestampWrapCount;
  struct opaqueCMFormatDescription * _formatDescription;
  NSObject<OS_dispatch_queue> *_videoStreamReceiverQueue;
  struct OpaqueFigThread * _networkReceiveThread;
  BOOL _runNetworkReceiveThread;
  int _sRecvReset;
  struct VideoPacketBuffer_t * _videoPacketBuffer;
  VideoAttributes *_remoteVideoAttributes;
  int _remoteVideoCamera;
  BOOL _remoteVideoMirrored;
  BOOL _enableCVO;
  unsigned long long _cvoExtensionID;
  unsigned long long _lastKeyFrameSampleBufferSize;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastFrameTime;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastDisplayTime;
  VCMediaStreamStats *_stats;
  double _reportingIntervalStartTime;
  double _reportingLastUpdateTime;
  unsigned int _receivedBytes;
  unsigned int _videoStallDurationMillis;
  double _videoStallStartTime;
  struct opaqueRTCReporting * _reportingAgent;
  int _reportingModuleID;
  BOOL _enableReceiveBitstreamDump;
  struct OpaqueVCTransportStreamRunLoop * _runLoop;
  void * _rtcpContext;
  undefined * _rtcpPacketsCallback;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConfig:(struct tagVCVideoStreamReceiverConfig { struct tagHANDLE * x0; id x1; struct tagVCVideoReceiverDelegateRealtimeInstanceVTable { undefined * x0; undefined * x1; } x2; struct opaqueRTCReporting * x3; unsigned int x4; int x5; id x6; BOOL x7; void * x8; undefined * x9; id x10; } *)config;
- (void)dealloc;
- (void)setEnableCVO:(BOOL)cvo cvoExtensionID:(unsigned long long)id;
- (void)setEnableRateAdaptation:(BOOL)adaptation maxBitrate:(unsigned int)bitrate minBitrate:(unsigned int)bitrate adaptationInterval:(double)interval;
- (void)startVideo;
- (void)stopVideo;
- (void)pauseVideo;
- (BOOL)startSynchronization:(id)synchronization;
- (void)stopSynchronization;
- (id)syncSource;
- (void)setSyncSource:(id)source;
- (void)updateSourcePlayoutTimestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)timestamp;
- (int)startNetworkReceiveThread;
- (int)stopNetworkReceiveThread;
- (void *)networkReceivePackets;
- (void)updateSequenceNumber:(unsigned short)number;
- (void)scheduleDecodeForTimestamp:(unsigned int)timestamp;
- (void)scheduleVideoDecode:(unsigned int)decode;
- (struct tagVCVideoPacketBufferConfig { unsigned short x0; unsigned int x1; int x2; void * x3; char x4[200] int x5; BOOL x6; BOOL x7; struct __CFAllocator * x8; BOOL x9; BOOL x10; BOOL x11; struct tagVCVideoPacketBufferFrameDecryptionCallbackContext { void * x0; undefined * x1; } x12; struct tagVCVideoPacketBufferEnqueueFailedFrameToJitterBufferCallbackContext { void * x0; undefined * x1; } x13; BOOL x14; struct tagVCNACKGenerator * x15; struct tagVCNACKGeneratorStoreBagsConfig { unsigned char x0; float x1; float x2; BOOL x3; float x4[4] float x5[4] } x16; })newVideoPacketBufferConfig:(struct _RTPMediaPacket { int x0; int x1; int x2; unsigned short x3; unsigned int x4; unsigned int x5; unsigned short x6; BOOL x7; double x8; BOOL x9; BOOL x10; BOOL x11; unsigned long long x12; unsigned short x13[12] unsigned char x14; unsigned char x15; struct { int x0; int x1; BOOL x2; unsigned long long x3; } x16; unsigned long long x17; struct VCBlockBuffer_t { struct OpaqueCMBlockBuffer * x0; unsigned long long x1; char * x2; } x18; struct VCBlockBuffer_t { struct OpaqueCMBlockBuffer * x0; unsigned long long x1; char * x2; } x19; struct VCBlockBuffer_t { struct OpaqueCMBlockBuffer * x0; unsigned long long x1; char * x2; } x20; BOOL x21; BOOL x22; BOOL x23; unsigned char x24; } *)config;
- (int)processVideoRTP;
- (void)rtcpSendIntervalElapsed;
- (void)processReceptionReportBlock:(struct tagRTCP_RRB { unsigned int x0; unsigned int x1 :8; unsigned int x2 :24; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; } *)block blockCount:(unsigned int)count arrivalNTPTime:(union tagNTP { unsigned long long x0; struct { unsigned int x0; unsigned int x1; } x1; })ntptime;
- (int)processVideoRTCP;
- (int)scheduleDecodeForFrameWithBuffer:(struct VCVideoReceiverSampleBuffer_t { struct __CFAllocator * x0; struct tagVCVideoDecodingArgs { int x0; int x1; unsigned int x2; unsigned short x3; unsigned char x4; BOOL x5; unsigned short x6; BOOL x7; double x8; int x9; unsigned short x10; BOOL x11; BOOL x12; unsigned short x13; double x14; BOOL x15; int x16; double x17; BOOL x18; BOOL x19; BOOL x20; BOOL x21; unsigned long long x22; BOOL x23; unsigned int x24; } x1; struct OpaqueCMBlockBuffer * x2; unsigned long long x3; struct OpaqueCMBlockBuffer * x4; struct VCBlockBuffer_t { struct OpaqueCMBlockBuffer * x0; unsigned long long x1; char * x2; } x5; struct VCBlockBuffer_t { struct OpaqueCMBlockBuffer * x0; unsigned long long x1; char * x2; } x6; struct VCBlockBuffer_t { struct OpaqueCMBlockBuffer * x0; unsigned long long x1; char * x2; } x7; struct VCBlockBuffer_t { struct OpaqueCMBlockBuffer * x0; unsigned long long x1; char * x2; } x8; int x9; } *)buffer timestamp:(unsigned int)timestamp hostTime:(double)time showFrame:(BOOL)frame;
- (void)updateVideoStallStatus:(BOOL)status;
- (void)createDecodeSession:(struct opaqueCMFormatDescription *)session;
- (void)teardownDecodeSession:(BOOL)session;
- (int)decodeFrame:(struct opaqueCMSampleBuffer *)frame showFrame:(BOOL)frame;
- (BOOL)canDequeue:(struct opaqueCMBufferQueue *)dequeue forTimestamp:(unsigned int)timestamp;
- (void)dequeueAndDecodeForTimestamp:(unsigned int)timestamp;
- (void)handleAlarmForTimeStamp:(unsigned int)stamp;
- (BOOL)handleRemoteVideoAttributesChange:(struct __CVBuffer *)change;
- (int)showDecodedFrame:(struct __CVBuffer *)frame atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)gatherRealtimeStats:(struct __CFDictionary *)stats;
- (void)reportingVideoStreamEvent:(unsigned short)event;
- (void)handleActiveConnectionChange:(id)change;
- (void)setJitterBufferMode:(int)mode;
@end

#endif /* VCVideoStreamReceiver_h */
