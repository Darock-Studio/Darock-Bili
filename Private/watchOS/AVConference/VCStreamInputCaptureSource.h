//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCStreamInputCaptureSource_h
#define VCStreamInputCaptureSource_h
@import Foundation;

#include "VCVideoCapture.h"
#include "VCVideoCaptureServer-Protocol.h"
#include "VCVideoSink-Protocol.h"
#include "VCVideoSource-Protocol.h"

@class NSMutableDictionary, NSString;

@interface VCStreamInputCaptureSource : VCVideoCapture<VCVideoSink, VCVideoCaptureServer> {
  /* instance variables */
  id _delegate;
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _sinkMutex;
  NSMutableDictionary *_videoSinkState;
  NSObject<VCVideoSource> *_cannedVideoCapture;
  int _cannedVideoWidth;
  int _cannedVideoHeight;
}

@property (nonatomic) int captureSourceID;
@property (readonly, nonatomic) long long streamInputID;
@property (readonly, nonatomic) struct opaqueCMFormatDescription * formatDescription;
@property (readonly, nonatomic) unsigned int frameRate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL followSystemCamera;
@property (readonly, nonatomic) int bestCameraCaptureFrameRate;
@property (readonly, nonatomic) BOOL is1080pCameraAvailable;

/* class methods */
+ (BOOL)readIntegerFromConfig:(id)config key:(id)key value:(long long *)value;
+ (BOOL)readUint32FromConfig:(id)config key:(id)key value:(unsigned int *)value;

/* instance methods */
- (id)initWithCaptureSourceID:(int)id configuration:(id)configuration;
- (void)loadCannedVideoReplay;
- (void)dealloc;
- (BOOL)isEqual:(id)equal;
- (BOOL)setupFormatWithConfiguration:(id)configuration;
- (BOOL)setupVideoFormatWithConfiguration:(id)configuration;
- (BOOL)setupDataFormatWithConfiguration:(id)configuration;
- (void)setDelegate:(id)delegate;
- (BOOL)onVideoFrame:(struct opaqueCMSampleBuffer *)frame frameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time attribute:(struct { BOOL x0; BOOL x1; int x2; BOOL x3; BOOL x4; int x5; unsigned char x6; })attribute;
- (void)sourceFrameRateDidChange:(unsigned int)change;
- (id /* block */)copyOnVideoFrameBlock;
- (unsigned int)addSink:(id)sink;
- (unsigned int)removeSink:(id)sink;
- (BOOL)allSinksSuspended;
- (void)didSuspendVideoSink:(id)sink;
- (void)didResumeVideoSink:(id)sink;
- (void)onCaptureScreenFrame:(struct opaqueCMSampleBuffer *)frame frameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time orientation:(int)orientation;
- (void)handleCaptureEvent:(id)event;
- (void)handleCaptureEvent:(id)event subType:(id)type;
- (void)setCameraZoomAvailable:(BOOL)available currentZoomFactor:(double)factor maxZoomFactor:(double)factor;
- (void)setCaptureFrameRate:(int)rate;
- (void)setCFAvailabilityChange:(BOOL)change;
- (int)getCaptureFrameRateForSource:(int)source;
@end

#endif /* VCStreamInputCaptureSource_h */
