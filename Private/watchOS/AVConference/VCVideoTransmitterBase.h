//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCVideoTransmitterBase_h
#define VCVideoTransmitterBase_h
@import Foundation;

#include "VCConnectionChangedHandler-Protocol.h"
#include "VCVideoRule.h"

@class NSString;

@interface VCVideoTransmitterBase : NSObject<VCConnectionChangedHandler> {
  /* instance variables */
  void * _controlInfoGenerator;
  unsigned int _captureWidth;
  unsigned int _captureHeight;
  unsigned int _txMaxBitrate;
  unsigned int _txMinBitrate;
  unsigned int _temporaryMaximumBitrate;
  VCVideoRule *_videoRule;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _latestSampleBufferTimestamp;
  unsigned int _timestamp;
  NSString *_profileLevel;
  struct tagVCVideoTransmitterRealtimeSPI { undefined *setFECRatio; undefined *enqueueVideoFrame; undefined *setMediaQueueSize; } _realtimeSPI;
}

@property struct { long long x0; int x1; unsigned int x2; long long x3; } lastFrameTime;
@property double lastKeyFrameSentTime;
@property unsigned int lastRTPTimestamp;
@property unsigned int lastSentAudioSampleTime;
@property double lastSentAudioHostTime;
@property (nonatomic) BOOL isServerBasedBandwidthProbingEnabled;
@property (nonatomic) BOOL isEndToEndBasedBandwidthProbingEnabled;
@property (nonatomic) unsigned int targetBitrate;
@property (nonatomic) unsigned int targetBitrateChangeCounter;
@property (readonly) unsigned int encodingWidth;
@property (readonly) unsigned int encodingHeight;
@property (readonly) unsigned int targetFramerate;
@property (nonatomic) BOOL rtxEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConfig:(id)config;
- (void)dealloc;
- (void)startVideo;
- (void)stopVideo;
- (void)generateKeyFrameWithFIRType:(int)firtype;
- (unsigned int)setTemporaryMaximumBitrate:(unsigned int)bitrate;
- (void)setKeyFrameOnlyStreamID:(unsigned short)id;
- (void)setStreamIDs:(unsigned short *)ids numOfStreamIDs:(unsigned char)ids repairedStreamIDs:(unsigned short *)ids numOfRepairedStreamIDs:(unsigned char)ids;
- (void)collectChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics interval:(float)interval;
- (void)setFECRatio:(double)fecratio;
- (void)setFECRedundancyVector:(const struct { unsigned short x0; struct { unsigned char x10; unsigned char x1; } x[32] } *)vector;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; } *)suggestion;
- (BOOL)setEncodingMode:(int)mode;
- (void)handleThermalLevelChange:(int)change;
- (void)updateWindowState:(int)state isLocal:(BOOL)local windowRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)setTemporalBitrateArray:(id)array;
- (void)setHighestActiveQualityIndex:(unsigned int)index;
- (void)handleActiveConnectionChange:(id)change;
- (BOOL)isRtxEnabled;
@end

#endif /* VCVideoTransmitterBase_h */
