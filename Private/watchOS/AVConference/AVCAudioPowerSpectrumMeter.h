//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef AVCAudioPowerSpectrumMeter_h
#define AVCAudioPowerSpectrumMeter_h
@import Foundation;

#include "AVConferenceXPCClient.h"
#include "VCAudioPowerSpectrumMeter.h"
#include "VCAudioPowerSpectrumMeterDelegate-Protocol.h"

@class NSSet, NSString;
@protocol AVCAudioPowerSpectrumMeterDelegate, OS_dispatch_queue;

@interface AVCAudioPowerSpectrumMeter : NSObject<VCAudioPowerSpectrumMeterDelegate> {
  /* instance variables */
  AVConferenceXPCClient *_connection;
  double _audioSpectrumRefreshRate;
  unsigned short _audioSpectrumBinCount;
  NSSet *_allowListedXPCObjects;
  VCAudioPowerSpectrumMeter *_powerSpectrumMeter;
}

@property (readonly, nonatomic) NSObject<AVCAudioPowerSpectrumMeterDelegate> *delegate;
@property (readonly, nonatomic) unsigned int sessionToken;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (unsigned int)cellularTapTypeWithClientCellularTapType:(unsigned int)type;

/* instance methods */
- (id)initWithConfig:(struct _AVCAudioPowerSpectrumMeterConfig { long long x0; unsigned int x1; unsigned short x2; double x3; })config delegate:(id)delegate queue:(id)queue;
- (void)dealloc;
- (void)registerPowerSpectrumForStreamToken:(long long)token;
- (void)unregisterPowerSpectrumForStreamToken:(long long)token;
- (BOOL)registerPowerSpectrumForCellularTapType:(unsigned int)type error:(id *)error;
- (BOOL)unregisterPowerSpectrumForCellularTapType:(unsigned int)type error:(id *)error;
- (BOOL)setupXPCConnection;
- (void)cleanupXPCConnection;
- (BOOL)storeDelegate:(id)delegate delegateQueue:(id)queue;
- (void)cleanupDelegate;
- (BOOL)setupPowerSpectrumMeter;
- (void)cleanupPowerSpectrumMeter;
- (void)registerBlocksForNotifications;
- (void)deregisterBlocksForService;
- (void)audioPowerSpectrumMeter:(id)meter didUpdateAudioPowerSpectrums:(id)spectrums;
@end

#endif /* AVCAudioPowerSpectrumMeter_h */
