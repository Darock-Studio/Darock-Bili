//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCSessionParticipantDelegate_Protocol_h
#define VCSessionParticipantDelegate_Protocol_h
@import Foundation;

@protocol VCSessionParticipantDelegate <VCServerDelegate>
/* instance methods */
- (void)vcSessionParticipant:(id)participant audioEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSessionParticipant:(id)participant videoEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSessionParticipant:(id)participant screenEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSessionParticipant:(id)participant remoteAudioEnabledDidChange:(BOOL)change;
- (void)vcSessionParticipant:(id)participant remoteVideoEnabledDidChange:(BOOL)change;
- (void)vcSessionParticipant:(id)participant remoteScreenEnabledDidChange:(BOOL)change;
- (void)vcSessionParticipant:(id)participant audioPaused:(BOOL)paused didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSessionParticipant:(id)participant videoPaused:(BOOL)paused didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSessionParticipant:(id)participant mediaStateDidChange:(unsigned int)change forMediaType:(unsigned int)type didSucceed:(BOOL)succeed error:(id)error;
- (void)vcSessionParticipant:(id)participant remoteMediaStateDidChange:(unsigned int)change forMediaType:(unsigned int)type;
- (void)vcSessionParticipant:(id)participant mediaMixingDidChangeForMediaType:(unsigned int)type mixingMediaType:(unsigned int)type;
- (void)vcSessionParticipant:(id)participant remoteAudioPausedDidChange:(BOOL)change;
- (void)vcSessionParticipant:(id)participant remoteVideoPausedDidChange:(BOOL)change;
- (void)vcSessionParticipant:(id)participant didChangeMediaPriority:(unsigned char)priority description:(id)description;
- (void)vcSessionParticipant:(id)participant didChangeActualNetworkBitrateForStreamGroupID:(unsigned int)id;
- (void)vcSessionParticipant:(id)participant requestKeyFrameGenerationWithStreamID:(unsigned short)id streamGroupID:(unsigned int)id firType:(int)type;
- (void)vcSessionParticipant:(id)participant didSwitchFromStreamID:(unsigned short)id toStreamID:(unsigned short)id;
- (void)vcSessionParticipant:(id)participant didRequestVideoRedundancy:(BOOL)redundancy;
- (void)vcSessionParticipantDidChangeSendingStreams:(id)streams;
- (void)vcSessionParticipantDidChangeReceivingStreams:(id)streams;
- (void)vcSessionParticipantDidMediaDecryptionTimeOut:(id)out;
- (void)vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:(id)mkmrecovery;
- (void)vcSessionParticipantFetchStreamGroupState:(id)state;
- (void)vcSessionParticipantDidRemoteMediaStallTimeout:(id)timeout duration:(double)duration;
- (void)vcSessionParticipant:(id)participant didDetectError:(id)error;
- (void)vcSessionParticipant:(id)participant oneToOneModeDidChange:(BOOL)change;
- (void)vcSessionParticipant:(id)participant reactionDidStart:(id)start;
- (void)vcSessionParticipantDidStopReacting:(id)reacting;
- (void)vcSessionParticipantDidMediaReceiveFlushRequestWithPayloads:(id)payloads;
@end

#endif /* VCSessionParticipantDelegate_Protocol_h */
