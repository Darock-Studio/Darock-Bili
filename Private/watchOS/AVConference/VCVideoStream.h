//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCVideoStream_h
#define VCVideoStream_h
@import Foundation;

#include "VCMediaStream.h"
#include "AVCStatisticsCollector.h"
#include "VCMediaStreamRateAdaptationDelegate-Protocol.h"
#include "VCMediaStreamSyncDestination-Protocol.h"
#include "VCRedundancyControllerDelegate-Protocol.h"
#include "VCRedundancyControllerVideo.h"
#include "VCVideoCaptureClient-Protocol.h"
#include "VCVideoCaptureConverter.h"
#include "VCVideoReceiverBase.h"
#include "VCVideoReceiverDelegate-Protocol.h"
#include "VCVideoReceiverFeedbackDelegate-Protocol.h"
#include "VCVideoRule.h"
#include "VCVideoSink-Protocol.h"
#include "VCVideoTransmitterBase.h"

@class NSNumber, NSString;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface VCVideoStream : VCMediaStream<VCVideoReceiverDelegate, VCMediaStreamSyncDestination, VCVideoSink, VCVideoCaptureClient, VCMediaStreamRateAdaptationDelegate, VCRedundancyControllerDelegate> {
  /* instance variables */
  long long _type;
  NSObject<OS_dispatch_queue> *_lastDecodedFrameQueue;
  unsigned int _uplinkOperatingBitrate;
  struct __CVBuffer * _cachedRemoteVideoFrame;
  VCVideoRule *_videoRule;
  int _reportingModuleID;
  unsigned int _reportingDefaultRealtimePeriod;
  NSObject<OS_dispatch_semaphore> *_bufferQueueSemaphore;
  struct opaqueCMBufferQueue * _bufferQueue;
  VCVideoCaptureConverter *_captureConverter;
  unsigned char _lastMediaPriority;
  unsigned short _currentStreamID;
  BOOL _shouldCacheRemoteVideoFrame;
  atomic BOOL _isVideoCaptureRegistered;
  int _captureSource;
  int _streamInputCaptureSource;
  long long _captureSourceID;
  unsigned int _mediaQueueSizeInMillisecond;
  unsigned int _tilesPerFrame;
  unsigned int _initialTargetBitrate;
  struct OpaqueFigCFWeakReference * _weakStream;
  AVCStatisticsCollector *_statisticsCollector;
  VCRedundancyControllerVideo *_redundancyController;
  int _lastDisplayedFromImageQueueCount;
  int _lastDroppedFromImageQueueCount;
  double _lastDecodedVideoFrameTime;
  double _lastStatisticsCollectorVideoStallTotalUpdateTime;
  BOOL _isRemoteMediaStalled;
  double _lastMediaStallReportTime;
  unsigned int _rtpTimestampRate;
  unsigned short _temporalScalingBaseLayerStreamID;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastSentFrameHostTimeBeforeStop;
  unsigned int _lastSentFrameRTPTimestampBeforeStop;
  id _videoStreamDelegate;
  struct tagVCVideoStreamDelegateRealtimeInstanceVTable { undefined *remoteScreenAttributesDidChange; } _videoStreamDelegateFunctions;
  struct __CFDictionary * _colorInfo;
  unsigned int _baseQualityIndex;
  unsigned int _cachedConnectionMTU;
  unsigned int _constantTransportOverhead;
}

@property (readonly) unsigned int networkMTU;
@property (readonly) VCVideoReceiverBase *videoReceiver;
@property (readonly) VCVideoTransmitterBase *videoTransmitter;
@property unsigned int lastSentAudioSampleTime;
@property double lastSentAudioHostTime;
@property (readonly, nonatomic) unsigned int lastDisplayedFrameRTPTimestamp;
@property (nonatomic) BOOL isServerBasedBandwidthProbingEnabled;
@property (nonatomic) BOOL isEndToEndBasedBandwidthProbingEnabled;
@property (retain, nonatomic) NSNumber *targetStreamID;
@property (readonly, nonatomic) NSNumber *sendingStreamID;
@property (nonatomic) NSObject<VCVideoReceiverFeedbackDelegate> *videoReceiverFeedbackDelegate;
@property (readonly, nonatomic) BOOL isCompoundStreamIDsIncreased;
@property (nonatomic) BOOL shouldEnableFaceZoom;
@property (nonatomic) BOOL didReceiveFirstFrame;
@property (nonatomic) double fecRatio;
@property (nonatomic) unsigned int screenDisplayID;
@property (nonatomic) unsigned int customWidth;
@property (nonatomic) unsigned int customHeight;
@property (nonatomic) unsigned int targetEncoderBitrate;
@property (nonatomic) unsigned int targetBitrateChangeCounter;
@property (readonly, nonatomic) BOOL isTemporalScalingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)newFeatureListStringsWithConfiguration:(id)configuration;
+ (BOOL)shouldUseRandomRTPTimestampWithType:(long long)type;
+ (void)terminateProcess:(id)process terminateSource:(id)source agent:(struct opaqueRTCReporting *)agent;
+ (id)supportedVideoPayloads;
+ (id)capabilities;
+ (BOOL)isLowLatencyStreamType:(long long)type;
+ (BOOL)isFeatureListStringExpectedForStreamType:(long long)type;
+ (BOOL)shouldEnableRateControlForStreamType:(long long)type;
+ (BOOL)shouldRegisterReportingForStreamType:(long long)type;

/* instance methods */
- (void)overrideConfigWithDefaults;
- (id)newVideoTransmitterConfigWithVideoStreamConfig:(id)config;
- (BOOL)isFECGeneratorEnabled;
- (void)initVideoTransmitter;
- (void)destroyVideoTransmitter;
- (id)newScreenCaptureConfigForVideoConfig:(id)config;
- (BOOL)isScreenConfig:(id)config;
- (void)setupMultiwayVideoReceiverTemporalScalingConfig:(struct tagVCVideoReceiverStreamConfig { struct tagVCVideoReceiverStreamIDInfo { unsigned short x0; unsigned short x1; unsigned short x2; unsigned int x3; unsigned short x4[9] unsigned short x5[9] } x0; struct tagHANDLE * x1; struct __CFDictionary * x2; BOOL x3; unsigned short x4; unsigned char x5; BOOL x6; BOOL x7; struct tagVCCryptor * x8; void * x9; void * x10; int x11; BOOL x12; BOOL x13; BOOL x14; int x15; BOOL x16; } *)config forTransportStream:(id)stream;
- (void)setupMultiwayVideoReceiverStreamSwitchInfo:(struct tagVCVideoReceiverStreamConfig { struct tagVCVideoReceiverStreamIDInfo { unsigned short x0; unsigned short x1; unsigned short x2; unsigned int x3; unsigned short x4[9] unsigned short x5[9] } x0; struct tagHANDLE * x1; struct __CFDictionary * x2; BOOL x3; unsigned short x4; unsigned char x5; BOOL x6; BOOL x7; struct tagVCCryptor * x8; void * x9; void * x10; int x11; BOOL x12; BOOL x13; BOOL x14; int x15; BOOL x16; } *)info forTransportStream:(id)stream;
- (void)setupMultiwayVideoReceiverConfig:(struct tagVCVideoReceiverConfig { unsigned int x0; S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBiB} x1[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9] int x2; int x3; long long x4; int x5; int x6; int x7; unsigned int x8; int x9; int x10; int x11; int x12; int x13; int x14; BOOL x15; BOOL x16; BOOL x17; double x18; void * x19; undefined * x20; undefined * x21; undefined * x22; undefined * x23; undefined * x24; undefined * x25; undefined * x26; unsigned long long x27; BOOL x28; unsigned short x29; BOOL x30; struct tagWRMMetricsInfo * x31; unsigned int x32; BOOL x33; BOOL x34; BOOL x35; BOOL x36; BOOL x37; BOOL x38; BOOL x39; BOOL x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; BOOL x45; void * x46; BOOL x47; BOOL x48; unsigned int x49; BOOL x50; BOOL x51; unsigned short x52; struct tagVCJBTargetEstimatorSynchronizer * x53; struct __CFString * x54; struct __CFString * x55; unsigned int x56; BOOL x57; BOOL x58; BOOL x59; int x60; BOOL x61; BOOL x62; struct tagVCNACKGeneratorStoreBagsConfig { unsigned char x0; float x1; float x2; BOOL x3; float x4[4] float x5[4] } x63; BOOL x64; void * x65; void * x66; long long x67; double x68; } *)config forTransportStream:(id)stream;
- (void)addReceiverStreamConfigsToReceiverConfig:(struct tagVCVideoReceiverConfig { unsigned int x0; S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBiB} x1[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9] int x2; int x3; long long x4; int x5; int x6; int x7; unsigned int x8; int x9; int x10; int x11; int x12; int x13; int x14; BOOL x15; BOOL x16; BOOL x17; double x18; void * x19; undefined * x20; undefined * x21; undefined * x22; undefined * x23; undefined * x24; undefined * x25; undefined * x26; unsigned long long x27; BOOL x28; unsigned short x29; BOOL x30; struct tagWRMMetricsInfo * x31; unsigned int x32; BOOL x33; BOOL x34; BOOL x35; BOOL x36; BOOL x37; BOOL x38; BOOL x39; BOOL x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; BOOL x45; void * x46; BOOL x47; BOOL x48; unsigned int x49; BOOL x50; BOOL x51; unsigned short x52; struct tagVCJBTargetEstimatorSynchronizer * x53; struct __CFString * x54; struct __CFString * x55; unsigned int x56; BOOL x57; BOOL x58; BOOL x59; int x60; BOOL x61; BOOL x62; struct tagVCNACKGeneratorStoreBagsConfig { unsigned char x0; float x1; float x2; BOOL x3; float x4[4] float x5[4] } x63; BOOL x64; void * x65; void * x66; long long x67; double x68; } *)config streamConfig:(id)config;
- (void)cleaunpReceiverConfig:(struct tagVCVideoReceiverConfig { unsigned int x0; S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBiB} x1[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9] int x2; int x3; long long x4; int x5; int x6; int x7; unsigned int x8; int x9; int x10; int x11; int x12; int x13; int x14; BOOL x15; BOOL x16; BOOL x17; double x18; void * x19; undefined * x20; undefined * x21; undefined * x22; undefined * x23; undefined * x24; undefined * x25; undefined * x26; unsigned long long x27; BOOL x28; unsigned short x29; BOOL x30; struct tagWRMMetricsInfo * x31; unsigned int x32; BOOL x33; BOOL x34; BOOL x35; BOOL x36; BOOL x37; BOOL x38; BOOL x39; BOOL x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; BOOL x45; void * x46; BOOL x47; BOOL x48; unsigned int x49; BOOL x50; BOOL x51; unsigned short x52; struct tagVCJBTargetEstimatorSynchronizer * x53; struct __CFString * x54; struct __CFString * x55; unsigned int x56; BOOL x57; BOOL x58; BOOL x59; int x60; BOOL x61; BOOL x62; struct tagVCNACKGeneratorStoreBagsConfig { unsigned char x0; float x1; float x2; BOOL x3; float x4[4] float x5[4] } x63; BOOL x64; void * x65; void * x66; long long x67; double x68; } *)config;
- (struct tagVCVideoStreamReceiverConfig { struct tagHANDLE * x0; id x1; struct tagVCVideoReceiverDelegateRealtimeInstanceVTable { undefined * x0; undefined * x1; } x2; struct opaqueRTCReporting * x3; unsigned int x4; int x5; id x6; BOOL x7; void * x8; undefined * x9; id x10; })videoStreamReceiverConfigWithDumpID:(unsigned int)id reportingAgent:(struct opaqueRTCReporting *)agent;
- (struct tagVCVideoReceiverConfig { unsigned int x0; S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBiB} x1[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9] int x2; int x3; long long x4; int x5; int x6; int x7; unsigned int x8; int x9; int x10; int x11; int x12; int x13; int x14; BOOL x15; BOOL x16; BOOL x17; double x18; void * x19; undefined * x20; undefined * x21; undefined * x22; undefined * x23; undefined * x24; undefined * x25; undefined * x26; unsigned long long x27; BOOL x28; unsigned short x29; BOOL x30; struct tagWRMMetricsInfo * x31; unsigned int x32; BOOL x33; BOOL x34; BOOL x35; BOOL x36; BOOL x37; BOOL x38; BOOL x39; BOOL x40; BOOL x41; BOOL x42; BOOL x43; BOOL x44; BOOL x45; void * x46; BOOL x47; BOOL x48; unsigned int x49; BOOL x50; BOOL x51; unsigned short x52; struct tagVCJBTargetEstimatorSynchronizer * x53; struct __CFString * x54; struct __CFString * x55; unsigned int x56; BOOL x57; BOOL x58; BOOL x59; int x60; BOOL x61; BOOL x62; struct tagVCNACKGeneratorStoreBagsConfig { unsigned char x0; float x1; float x2; BOOL x3; float x4[4] float x5[4] } x63; BOOL x64; void * x65; void * x66; long long x67; double x68; })videoReceiverConfigWithVideoStreamConfig:(id)config;
- (struct tagVCNACKGeneratorStoreBagsConfig { unsigned char x0; float x1; float x2; BOOL x3; float x4[4] float x5[4] })readServerPacketRetransmissionsForVideoStoreBagConfig:(id)config;
- (void)setupVideoReceiver:(id)receiver withTransmitterHandle:(struct tagHANDLE { int x0; } *)handle;
- (BOOL)useUEPForVideoConfig:(int)config;
- (void)updateVideoReceiver:(id)receiver;
- (void)destroyVideoReceiver;
- (void)destroyVideoModules;
- (void)setupCompoundStreamIDsWithStreamIDs:(id)ids;
- (unsigned int)dumpIDFromCallID;
- (void)enableRedundancyController:(id)controller;
- (void)startRateAdaptationWithStreamConfig:(id)config;
- (void)stopRateAdaptation;
- (struct tagVCVideoReceiverDelegateRealtimeInstanceVTable { undefined * x0; undefined * x1; })videoReceiverDelegateFunctions;
- (void)handleNWConnectionNotification:(struct ifnet_interface_advisory { union { struct { unsigned char x0; unsigned char x1; unsigned short x2; int x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned char x11; unsigned char x12; unsigned short x13; unsigned short x14; unsigned char x15; unsigned char x16; unsigned char x17; unsigned char x18; } x0; struct { struct ifnet_interface_advisory_header { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; } x0; struct ifnet_interface_advisory_capacity { int x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned int x5; unsigned int x6; unsigned int x7; } x1; union { struct ifnet_interface_advisory_wifi_context { unsigned char x0; unsigned char x1; unsigned short x2; unsigned short x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned short x9; unsigned int x10[6] } x0; struct ifnet_interface_advisory_cell_context { unsigned char x0; short x1; short x2; char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned short x8; unsigned short x9; unsigned char x10; unsigned char x11; } x1; } x2; } x1; } x0; } *)notification;
- (void)handleNWConnectionPacketEvent:(struct packet_id { unsigned char x0; unsigned char x1; unsigned short x2; unsigned int x3; unsigned int x4; unsigned int x5; } *)event eventType:(int)type;
- (void)setMediaSuggestion:(struct VCRateControlMediaSuggestion { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; } *)suggestion;
- (void)setupColorInfo:(id)info;
- (void)setupVideoTransmitterConfigColorInfo:(id)info;
- (void)updateShouldCacheRemoteVideoFrame;
- (BOOL)setRTPPayloads:(int *)rtppayloads numPayloads:(int)payloads withError:(id *)error;
- (double)lastReceivedRTPPacketTime;
- (double)lastReceivedRTCPPacketTime;
- (id)init;
- (id)initWithTransportSessionID:(unsigned int)id idsParticipantID:(unsigned long long)id ssrc:(unsigned int)ssrc streamToken:(long long)token;
- (void)setupVideoStream;
- (void)dealloc;
- (void)updateVideoConfig:(id)config;
- (void)requestLastDecodedFrame;
- (void)resetRemoteMediaStalled;
- (void)updateSourcePlayoutTimestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)timestamp;
- (void)generateKeyFrameWithFIRType:(int)firtype;
- (void)setFECRedundancyVector:(const struct { unsigned short x0; struct { unsigned char x10; unsigned char x1; } x[32] } *)vector;
- (void)sendLastRemoteVideoFrame:(struct __CVBuffer *)frame;
- (BOOL)validateVideoStreamConfigurations:(id)configurations;
- (void)cleanupBeforeReconfigure:(id)reconfigure;
- (void)setShouldEnableMLEnhance:(BOOL)mlenhance streamID:(unsigned short)id;
- (BOOL)isLowLatencyStreamType;
- (BOOL)validateStreamConfiguration:(id)configuration error:(id *)error;
- (BOOL)setEncodingMode:(int)mode;
- (BOOL)enableRateControlFeebackInConfig:(id)config;
- (void)setJitterBufferMode:(int)mode;
- (void)setUplinkRetransmissionEnabled:(BOOL)enabled;
- (id)supportedPayloads;
- (void)onCallIDChanged;
- (id)getTransmitMediaControllerWithStreamConfig:(id)config;
- (id)getTransmitStatsCollectorWithStreamConfig:(id)config;
- (id)getReceiveStatsCollectorWithStreamConfig:(id)config;
- (void)deregisterCurrentStreamInputCaptureSource;
- (BOOL)configureStreamInputCaptureSourceWithStreamInputID:(long long)id frameRate:(unsigned int)rate;
- (unsigned int)maxFramerateFromStreamConfigs:(id)configs;
- (void)configureNetworkSampleRateScaleForStream:(id)stream transport:(id)transport;
- (BOOL)onConfigureStreamWithConfiguration:(id)configuration error:(id *)error;
- (int)operatingModeForVideoStreamType:(long long)type;
- (void)deregisterForVideoCapture;
- (void)reportFailedToRegisterVideoFramesFromSource:(int)source width:(int)width height:(int)height frameRate:(int)rate;
- (BOOL)registerForCameraCaptureWithConfig:(id)config;
- (BOOL)registerForVideoCapture;
- (void)collectImageQueuePerformanceMetrics:(struct __CFDictionary *)metrics;
- (void)setupReportingAgent;
- (void)gatherRealtimeStats:(struct __CFDictionary *)stats;
- (BOOL)isTransportIPv6;
- (BOOL)shouldReportNetworkInterfaceType;
- (void)setupInternalRedundancyControllerWithStreamConfig:(id)config;
- (void)registerAggregationHandlers;
- (void)deregisterAggregationHandlers;
- (void)onStartWithCompletionHandler:(id /* block */)handler;
- (void)onStopWithCompletionHandler:(id /* block */)handler;
- (void)onPauseWithCompletionHandler:(id /* block */)handler;
- (void)onResumeWithCompletionHandler:(id /* block */)handler;
- (void)onRTPTimeout;
- (void)onRTCPTimeout;
- (void)onSendRTCPPacket;
- (double)rtcpHeartbeatLeeway;
- (unsigned int)getMaxTemporalBitrateForStreamIDs:(id)ids;
- (void)setTransmitterStreamIDs:(id)ids repairStreamIDs:(id)ids;
- (void)setStreamIDs:(id)ids repairStreamIDs:(id)ids;
- (void)setPeerSubscribedStreamIDs:(id)ids;
- (void)handleVTPSendFailedWithData:(void *)data;
- (void)setVideoStreamDelegate:(id)delegate delegateFunctions:(const struct tagVCVideoStreamDelegateRealtimeInstanceVTable { undefined * x0; } *)functions;
- (int)reportingClientTypeForClientName;
- (struct __CFString *)getReportingClientName;
- (int)reportVideoStreamType;
- (BOOL)isClientSpecificUserInfoSupported:(int)supported;
- (struct __CFDictionary *)getClientSpecificUserInfo;
- (BOOL)startSynchronization:(id)synchronization;
- (void)stopSynchronization;
- (id)getVideoReceiverFeedbackDelegate;
- (void)vcVideoReceiver:(id)receiver requestKeyFrameGenerationWithStreamID:(unsigned short)id firType:(int)type;
- (void)vcVideoReceiverRequestKeyFrame:(id)frame rtcpPSFBType:(unsigned int)psfbtype;
- (void)vcVideoReceiver:(id)receiver downlinkQualityDidChange:(id)change;
- (unsigned int)vcVideoReceiver:(id)receiver receivedTMMBR:(unsigned int)tmmbr;
- (void)vcVideoReceiver:(id)receiver didSwitchFromStreamID:(unsigned short)id toStreamID:(unsigned short)id;
- (BOOL)onVideoFrame:(struct opaqueCMSampleBuffer *)frame frameTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time attribute:(struct { BOOL x0; BOOL x1; int x2; BOOL x3; BOOL x4; int x5; unsigned char x6; })attribute;
- (void)sourceFrameRateDidChange:(unsigned int)change;
- (id /* block */)copyOnVideoFrameBlock;
- (void)avConferencePreviewError:(id)error;
- (void)avConferenceScreenCaptureError:(id)error;
- (id)clientCaptureRule;
- (void)thermalLevelDidChange:(int)change;
- (void)cameraAvailabilityDidChange:(BOOL)change;
- (void)reactionDidStart:(id)start;
- (void)collectRxChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics interval:(float)interval;
- (void)collectRxChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)collectTxChannelMetrics:(struct { unsigned int x0; unsigned int x1[5] unsigned int x2; double x3; struct CGSize { double x0; double x1; } x4; double x5; unsigned int x6; double x7; unsigned int x8; unsigned int x9; } *)metrics;
- (void)handleActiveConnectionChange:(id)change;
- (void)rateAdaptation:(id)adaptation targetBitrateDidChange:(unsigned int)change rateChangeCounter:(unsigned int)counter;
- (void)redundancyController:(id)controller redundancyPercentageDidChange:(unsigned int)change;
- (void)redundancyController:(id)controller redundancyIntervalDidChange:(double)change;
- (void)redundancyController:(id)controller redundancyVectorDidChange:(struct { unsigned short x0; struct { unsigned char x10; unsigned char x1; } x[32] })change;
- (void)updateWindowState:(int)state isLocal:(BOOL)local windowRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
@end

#endif /* VCVideoStream_h */
