//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef AVConferenceXPCServer_h
#define AVConferenceXPCServer_h
@import Foundation;

@class NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface AVConferenceXPCServer : NSObject {
  /* instance variables */
  NSMutableArray *clientConnections;
  NSObject<OS_dispatch_queue> *incomingMessageQueue;
  NSObject<OS_dispatch_queue> *outgoingMessageQueue;
  NSObject<OS_dispatch_queue> *clientConnectionsQueue;
}

@property (readonly) NSObject<OS_xpc_object> *listener;
@property (readonly) NSMutableDictionary *registeredBlocks;

/* class methods */
+ (id)AVConferenceXPCServerSingleton;
+ (BOOL)clientWithToken:(struct { unsigned int x0[8] })token hasEntitlement:(id)entitlement;

/* instance methods */
- (void)_xpc_handle_incoming_request:(id)_xpc_handle_incoming_request;
- (void)_xpc_add_connection_to_list:(id)_xpc_add_connection_to_list;
- (void)_xpc_remove_connection_from_list:(id)_xpc_remove_connection_from_list;
- (void)_xpc_remove_connections_from_list;
- (id)_xpc_get_connection_from_list_for_connection:(id)_xpc_get_connection_from_list_for_connection;
- (id)_xpc_get_connection_from_list_for_context:(id)_xpc_get_connection_from_list_for_context;
- (id)_xpc_get_connections_from_list_for_context:(id)_xpc_get_connections_from_list_for_context;
- (id)init;
- (void)dealloc;
- (id)allocWithZone:(struct _NSZone *)zone;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)retain;
- (unsigned long long)retainCount;
- (void)release;
- (id)autorelease;
- (void)sendMessageAsync:(char *)async arguments:(id)arguments;
- (void)sendMessageAsync:(char *)async arguments:(id)arguments xpcArguments:(id)arguments context:(id)context;
- (void)sendMessageAsync:(char *)async arguments:(id)arguments context:(id)context;
- (void)sendMessageAsync:(char *)async arguments:(id)arguments toAllClientsWithContext:(id)context;
- (void)registerBlockForService:(const char *)service block:(id /* block */)block;
- (void)registerBlockForService:(const char *)service block:(id /* block */)block queue:(id)queue;
- (void)registerBlockForService:(const char *)service block:(id /* block */)block queue:(id)queue eventLogLevel:(int)level;
- (void)deregisterFromService:(const char *)service;
- (id)newNSDictionaryFromXPCDictionary:(id)xpcdictionary;
- (id)newXPCDictionaryFromNSDictionary:(id)nsdictionary forEvent:(id)event;
- (id)newNSErrorFromNSDictionary:(id)nsdictionary;
- (id)newNSDictionaryFromNSError:(id)nserror;
- (id)newNSDictionaryWidthNSDictionary:(id)nsdictionary;
- (id)newClientDiedDictionary;
- (void)appendPIDToDictionary:(id)dictionary pid:(int)pid;
- (void)appendContextToDictionary:(id)dictionary forConnection:(id)connection;
- (void)_xpc_start_listening_for_connections;
- (id)authorizedTokenData;
@end

#endif /* AVConferenceXPCServer_h */
