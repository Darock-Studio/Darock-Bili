//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef AVCSession_h
#define AVCSession_h
@import Foundation;

#include "AVCSessionConfiguration.h"
#include "AVCSessionParticipant.h"
#include "AVCSessionParticipantControlProtocol-Protocol.h"
#include "AVCSessionParticipantDelegate-Protocol.h"
#include "VCSessionPresentationInfo.h"
#include "VCXPCClientShared.h"

@class NSArray, NSData, NSDictionary, NSMutableDictionary, NSString;
@protocol AVCSessionDelegate, OS_dispatch_queue;

@interface AVCSession : NSObject<AVCSessionParticipantDelegate, AVCSessionParticipantControlProtocol> {
  /* instance variables */
  NSData *_cachedNegotiationData;
  NSString *_transportToken;
  NSObject<OS_dispatch_queue> *_stateQueue;
  VCXPCClientShared *_connection;
  int _activeConfigurationCount;
}

@property (retain, nonatomic) NSDictionary *capabilities;
@property (retain, nonatomic) AVCSessionConfiguration *configuration;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateNotificationQueue;
@property (readonly, nonatomic) NSMutableDictionary *remoteParticipantsMap;
@property (readonly, nonatomic) NSMutableDictionary *participantsToAdd;
@property (readonly, nonatomic) AVCSessionParticipant *localParticipant;
@property (readonly, nonatomic) VCXPCClientShared *xpcConnection;
@property (readonly, nonatomic) long long sessionToken;
@property (readonly, nonatomic) NSArray *remoteParticipants;
@property (nonatomic) NSObject<AVCSessionDelegate> *delegate;
@property (nonatomic) struct tagAVCSessionPresentationInfo { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; unsigned int x1; unsigned int x2; unsigned char x3; } presentationInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *uuid;
@property (readonly, nonatomic) NSData *negotiationData;
@property (nonatomic) BOOL audioMuted;
@property (nonatomic) BOOL audioEnabled;
@property (nonatomic) BOOL videoEnabled;
@property (nonatomic) BOOL screenEnabled;
@property (nonatomic) BOOL audioPaused;
@property (nonatomic) BOOL videoPaused;
@property (nonatomic) BOOL oneToOneEnabled;
@property (nonatomic) float volume;
@property (readonly, nonatomic) NSData *frequencyLevels;

/* class methods */
+ (int)mediaNegotiatorVersionWithNegotiationProtocolVersion:(unsigned int)version;
+ (id)configurationWithSessionMode:(long long)mode;

/* instance methods */
- (void)dealloc;
- (id)dispatchedConfiguration;
- (void)updateOneToOneModeEnabled:(BOOL)enabled;
- (id)negotiationDataForProtocolVersion:(unsigned int)version;
- (id)negotiationDataForLoopbackParticipant;
- (BOOL)isAudioPaused;
- (BOOL)isVideoPaused;
- (BOOL)isAudioEnabled;
- (BOOL)isVideoEnabled;
- (BOOL)isScreenEnabled;
- (BOOL)isAudioMuted;
- (BOOL)isOneToOneEnabled;
- (id)initPrivateWithTransportToken:(id)token configuration:(id)configuration negotiationData:(id)data delegate:(id)delegate queue:(id)queue;
- (void)setMediaState:(unsigned int)state forMediaType:(unsigned int)type;
- (unsigned int)mediaStateForMediaType:(unsigned int)type;
- (id)initWithTransportToken:(id)token configuration:(id)configuration negotiationData:(id)data delegate:(id)delegate queue:(id)queue;
- (id)initWithTransportToken:(id)token configuration:(id)configuration delegate:(id)delegate queue:(id)queue;
- (void)addParticipant:(id)participant;
- (void)addParticipants:(id)participants;
- (BOOL)validateParticipantToAdd:(id)add;
- (BOOL)validateParticipantToRemove:(id)remove;
- (void)removeParticipant:(id)participant;
- (void)removeParticipants:(id)participants;
- (void)start;
- (void)stop;
- (void)stopWithError:(id)error;
- (void)updateConfiguration:(id)configuration;
- (void)beginParticipantConfiguration;
- (void)appendConfigurationToXPCArguments:(id)xpcarguments;
- (void)endParticipantConfiguration;
- (void)validateParticipantConfiguration;
- (void)didAddParticipantHandlerWithResult:(id)result;
- (id)newNSErrorWithErrorDictionary:(id)dictionary;
- (void)registerBlocksForNotifications;
- (void)deregisterFromNotifications;
- (void)setupNotificationQueue:(id)queue;
- (void)participant:(id)participant frequencyLevelsDidChange:(id)change;
- (void)participant:(id)participant audioEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)participant:(id)participant videoEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)participant:(id)participant screenEnabled:(BOOL)enabled didSucceed:(BOOL)succeed error:(id)error;
- (void)participant:(id)participant audioPaused:(BOOL)paused didSucceed:(BOOL)succeed error:(id)error;
- (void)participant:(id)participant videoPaused:(BOOL)paused didSucceed:(BOOL)succeed error:(id)error;
- (void)participant:(id)participant mediaStateDidChange:(unsigned int)change forMediaType:(unsigned int)type didSucceed:(BOOL)succeed error:(id)error;
- (void)participant:(id)participant mediaPrioritiesDidChange:(id)change;
- (void)participant:(id)participant mixingDidStartForMediaType:(unsigned int)type mixingMediaType:(unsigned int)type;
- (void)participant:(id)participant mixingDidStopForMediaType:(unsigned int)type;
- (void)participant:(id)participant didReact:(id)react;
- (void)participantDidStopReacting:(id)reacting;
@end

#endif /* AVCSession_h */
