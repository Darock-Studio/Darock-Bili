//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCConnectionManager_h
#define VCConnectionManager_h
@import Foundation;

#include "AVCStatisticsCollector.h"
#include "VCConnectionHealthMonitor.h"
#include "VCConnectionHealthMonitorDelegate-Protocol.h"
#include "VCConnectionManagerDelegate-Protocol.h"
#include "VCConnectionProtocol-Protocol.h"
#include "VCConnectionSelector.h"
#include "VCCoreMotionManager.h"
#include "VCCoreMotionManagerDelegate-Protocol.h"
#include "VCDuplicationHandler.h"
#include "VCLinkProbingHandler.h"
#include "VCLinkProbingHandlerDelegate-Protocol.h"
#include "VCStatsRecorder.h"
#include "VCWRMHandler.h"
#include "VCWifiAssistManager.h"
#include "VCWifiAssistManagerDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface VCConnectionManager : NSObject<VCConnectionHealthMonitorDelegate, VCWifiAssistManagerDelegate, VCLinkProbingHandlerDelegate, VCCoreMotionManagerDelegate> {
  /* instance variables */
  struct tagVCConnectionManagerRealtimeInstanceVTable { undefined *copyConnection; undefined *updateConnectionForDuplication; undefined *synchronizeParticipantGenerationCounter; undefined *isSourceOnCellularIPv6; undefined *copyPrimaryConnection; undefined *setPrimaryConnection; undefined *updatePacketAndByteCount; undefined *addLinkProbingTelemetry; } _vTable;
  BOOL _isStarted;
  int _connectionSelectionVersion;
  struct _opaque_pthread_rwlock_t { long long __sig; char x[192] __opaque; } _stateRWlock;
  NSObject<VCConnectionProtocol> *_primaryConnection;
  NSMutableArray *_connectionArray;
  struct opaqueRTCReporting * _reportingAgent;
  BOOL _isInitialConnectionEstablished;
  NSObject<OS_dispatch_queue> *_delegateQueue;
  undefined * _duplicationCallback;
  BOOL _enableDuplication;
  double _lastConnectionUnstableTime;
  NSObject<OS_dispatch_queue> *_callbackQueue;
  void * _duplicationContext;
  BOOL _duplicationPending;
  BOOL _isPrimaryLocalUsingCell;
  VCWifiAssistManager *_vcWifiAssist;
  BOOL _hasAssertedCell;
  struct { double lastReceivedPacketTime; double lastReceivedPacketOnPrimaryTime; double lastReportTime; double maxPrimaryNoPacketInterval; double noPacketInterval; BOOL isConnectionPaused; int type; } _localConnectionStats;
  struct { double lastReceivedPacketTime; double lastReceivedPacketOnPrimaryTime; double lastReportTime; double maxPrimaryNoPacketInterval; double noPacketInterval; BOOL isConnectionPaused; int type; } _remoteConnectionStats;
  VCWRMHandler *_wrmHandler;
  VCDuplicationHandler *_duplicationHandler;
  VCConnectionSelector *_connectionSelector;
  double _lastDefaultCheckTime;
  double _lastTransitionToFECTime;
  double _lastiRATCheckTime;
  double _iRATNotificationRequestTime;
  int _localWRMLinkTypeFromDefaults;
  BOOL _allowRequestForWRMNotification;
  BOOL _forceHandoverToCell;
  BOOL _disableRemoteInterfaceInference;
  undefined * _wrmStatusUpdateCallback;
  undefined * _wrmRequestNotificationCallback;
  void * _wrmCallbacksContext;
  struct { BOOL preferRelayOverP2P; BOOL preferIPv6OverIPv4; BOOL preferNonVPN; BOOL e2eCriteriaEnabled; BOOL preferE2E; BOOL preferWired; } _connectionSelectionPolicy;
  int _localRATTypeOverride;
  int _localWRMAlertFromDefaults;
  VCLinkProbingHandler *_linkProbingHandler;
  struct tagVCNWConnectionMonitor * _nwMonitor;
  int _mediaHealthStatisticsHandlerIndex;
  NSObject<OS_dispatch_queue> *_nwConnectionMonitorQueue;
  unsigned char _preferRelayOverP2PReason;
  struct tagVCNetworkConditionMonitor * _networkConditionMonitor;
  BOOL _isRTXSupported;
  VCCoreMotionManager *_coreMotionManager;
  BOOL _isNWConnectionMonitorEnabled;
  BOOL _ignoreNWConnectionMonitorNotification;
  NSString *_nwMonitorInterfaceName;
  struct { unsigned char version; unsigned char direction; unsigned char interfaceType; unsigned long long timestamp; unsigned long long maxThroughputBps; unsigned long long totalByteCount; unsigned int flushableQueueSize; unsigned int nonFlushableQueueSize; unsigned int averageDelayMillisecond; unsigned long long averageThroughputBps; int rateTrendSuggestion; unsigned int packetLossPerFrame; union { struct { unsigned char frequencyBand; unsigned char intermittentState; unsigned short estimatedIntermittentPeriod; unsigned short singleOutagePeriod; unsigned char btCoex; unsigned char radioCoex; unsigned char qualityScoreDelayRx; unsigned char qualityScoreDelayTx; unsigned char qualityScoreLossRx; unsigned char qualityScoreLossTx; unsigned char qualityScoreChannel; float offChannelTimeRatio; BOOL detectedFrequentOffChannelActivity; unsigned short wlanDutyCycle; unsigned int x[6] wifiObservedTxBitrate; } wifi; struct { unsigned char radioAccessTechnology; short referenceSignalLevel; short signalLevel; char signalQuality; unsigned char uplinkBLER; unsigned char downlinkBLER; unsigned char bandwidthLimitationIndication; unsigned char cdrxState; unsigned short cdrxCycle; unsigned short estimatedOutagePeriod; unsigned char outageState; } baseband; } x0; } _lastNWStatistics;
  NSObject<VCConnectionProtocol> *_lastActivePrimaryConnection;
  NSMutableDictionary *_mediaDegradedHistories;
  NSMutableDictionary *_mediaDegradedHistoryIndices;
  NSMutableDictionary *_aggregateStallTimeDuration;
  BOOL _isDuplicationAllowedForMediaDegraded;
  int _endToEndConnectionStatisticsHandlerIndex;
  int _serverBasedConnectionStatisticsHandlerIndex;
  BOOL _isVideoExpected;
  BOOL _isPrimaryLinkUsable;
  BOOL _resetMediaHealthStats;
  int _wrmPendingBitrateCapDelta;
  BOOL _isWRMNotificationPending;
  struct { int applicationType; int linkTypeSuggestion; unsigned long long linkTypeChangeReasonCode; char x[128] linkTypeChangeReasonString; unsigned long long linkBandwidthMin; unsigned long long linkBandwidthMax; } _savedWRMNotification;
  unsigned int _downlinkTargetBitrate;
  unsigned int _downlinkTargetCellBitrateCap;
  BOOL _useMediaDrivenDuplicationFeatureFlag;
  double _mediaDegradedThreshold;
  BOOL _previousNoRemoteInProgress;
  long long _initialSentBytes;
  long long _initialReceivedBytes;
  BOOL _dropLinkRecommendation;
  unsigned char _linkPreferSuggestion;
  unsigned char _linkConfidenceScore;
  unsigned char _linkPreferDecision;
  BOOL _reportLinkPreferSuggestion;
  unsigned char _linkIPPreference;
  BOOL _useIDSLinkSuggestionFeatureFlag;
  NSObject<OS_dispatch_queue> *_reportingQueue;
  int _shouldForceRelayLinksWhenScreenEnabled;
  BOOL _canUseP2PLinks;
  double _brokenBackhaulDetectionTriggerThreshold;
  double _lastReceivedFeedbackTime;
  BOOL _brokenBackhaulDetectionStarted;
  BOOL _isUserMoving;
  struct tagVCOverlaySource { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; long long x1; unsigned int x2; unsigned char x3; int x4; int x5; struct tagVCOverlaySourceInfo * x6; struct tagVCOverlaySourceInfo * x7; struct tagVCOverlaySourceInfo * x8; } * _overlaySource;
  struct tagVCOverlayInfoNetwork { BOOL primaryLocalIsOnCell; BOOL primaryRemoteIsOnCell; BOOL primaryIsRelay; BOOL isDuplicating; BOOL duplicatingLocalIsOnCell; BOOL duplicatingRemoteIsOnCell; BOOL duplicatingIsRelay; } _overlayDetails;
}

@property (retain, nonatomic) NSObject<VCConnectionProtocol> *lastPrimaryConnectionInUse;
@property long long overlayToken;
@property unsigned int callID;
@property int relayServerProvider;
@property (readonly) BOOL isPreWarmStateEnabled;
@property (nonatomic) BOOL remotePreWarmStateEnabled;
@property unsigned char preferredLocalInterfaceForDuplication;
@property unsigned char preferredRemoteInterfaceForDuplication;
@property (readonly) BOOL isLocalCellularInterfaceUsed;
@property NSObject<VCConnectionManagerDelegate> *delegate;
@property BOOL isAudioOnly;
@property BOOL supportDuplication;
@property (retain, nonatomic) NSObject<VCConnectionProtocol> *secondaryConnection;
@property (retain, nonatomic) NSObject<VCConnectionProtocol> *connectionForDuplication;
@property (readonly) int connectionCount;
@property (readonly) unsigned long long mediaExcessiveCellularTxBytes;
@property (readonly) unsigned long long mediaExcessiveCellularRxBytes;
@property (readonly) unsigned long long signalingExcessiveCellularTxBytes;
@property (readonly) unsigned long long signalingExcessiveCellularRxBytes;
@property (readonly) unsigned long long budgetConsumingCellularTxBytes;
@property (readonly) unsigned long long budgetConsumingCellularRxBytes;
@property (readonly) unsigned long long mediaCellularTxBytes;
@property (readonly) unsigned long long mediaCellularRxBytes;
@property (readonly) unsigned long long mediaWifiTxBytes;
@property (readonly) unsigned long long mediaWifiRxBytes;
@property (readonly) double noRemotePacketInterval;
@property (readonly) double remoteNoRemotePacketInterval;
@property (readonly, nonatomic) VCStatsRecorder *statsRecorder;
@property (nonatomic) BOOL preferRelayOverP2PEnabled;
@property BOOL fastMediaDuplicationEnabled;
@property BOOL cellPrimaryInterfaceChangeEnabled;
@property BOOL duplicateImportantPktsEnabled;
@property BOOL lowNetworkModeEnabled;
@property BOOL duplicationEnhancementEnabled;
@property (nonatomic) BOOL iRATDuplicationEnabled;
@property double noRemoteDuplicationThresholdFast;
@property unsigned int realRATType;
@property (readonly) unsigned char linkProbingCapabilityVersion;
@property (nonatomic) unsigned char remoteLinkProbingCapabilityVersion;
@property (readonly) double primaryConnHealthAllowedDelay;
@property (retain, nonatomic) AVCStatisticsCollector *statisticsCollector;
@property (readonly, nonatomic) VCConnectionHealthMonitor *connectionHealthMonitor;
@property BOOL optIntoExistingSubscribedStreams;
@property (nonatomic) BOOL isDuplicationAllowed;
@property (nonatomic) BOOL isOneToOneModeEnabled;
@property (nonatomic) BOOL useMediaDrivenDuplication;
@property (nonatomic) BOOL startConnectionHealthMonitoring;
@property (nonatomic) BOOL isRemoteMediaQualityDegraded;
@property (readonly) unsigned int sendSuccessCountSinceLastCheck;
@property (readonly) unsigned int sendFailureCountSinceLastCheck;
@property (readonly) atomic unsigned long long onTheWireTotalBytesSentSinceLastCheck;
@property (readonly) atomic unsigned long long onTheWireTotalBytesReceivedSinceLastCheck;
@property (nonatomic) BOOL isOneToOneScreenEnabled;
@property (nonatomic) BOOL isRemoteNetworkQualityDegraded;
@property (readonly) BOOL enableNetworkConditionMonitoring;
@property (readonly) BOOL enableMotionBasedDuplication;
@property (nonatomic) BOOL isUplinkRetransmissionSupported;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)setUpVTable;
- (id)init;
- (void)dealloc;
- (void)invalidateNetworkConditionMonitor;
- (void)registerStatisticsHandlers;
- (void)unregisterStatisticsHandlers;
- (void)setupConnectionHealthMonitorMultiway;
- (void)setupConnectionHealthMonitor;
- (void)setPreferRelayOverP2P:(BOOL)p reason:(unsigned char)reason;
- (void)resetConnectionStatTimers;
- (void)start;
- (void)stop;
- (void)registerPeriodicTask;
- (void)deregisterPeriodicTask;
- (void)createOverlaySource;
- (void)periodicTask:(void *)task;
- (void)setReportingAgent:(struct opaqueRTCReporting *)agent;
- (void)setConnectionSelectionVersionWithLocalFrameworkVersion:(id)version remoteFrameworkVersion:(id)version;
- (void)checkAndUpdatePrimaryConnection;
- (BOOL)isBetterPrimaryConnectionAvailable;
- (void)setDuplicationCallback:(undefined *)callback withContext:(void *)context;
- (void)setConnectionPause:(BOOL)pause isLocalConnection:(BOOL)connection;
- (void)setiRATDuplicationEnabled:(BOOL)enabled;
- (BOOL)isDuplicationEnabled;
- (int)setWRMUpdateCallback:(undefined *)callback requestNotificationCallback:(undefined *)callback withContext:(void *)context completionHandler:(id /* block */)handler;
- (void)setDuplicationDownlinkCellBitrateCap:(unsigned int)cap currentBitrate:(unsigned int)bitrate;
- (void)checkForCachedWRMNotification;
- (void)processWRMCoexMetrics:(id)metrics;
- (int)processRemoteWRMSuggestion:(int)wrmsuggestion isRemoteDuplicating:(BOOL)duplicating;
- (void)getSentBytes:(long long *)bytes receivedBytes:(long long *)bytes;
- (int)getConnectionTypeForActiveConnectionWithQuality:(int)quality forLocalInterface:(BOOL)interface;
- (int)getCellularTechForActiveConnectionWithQuality:(int)quality forLocalInterface:(BOOL)interface;
- (int)getCellularMTUForActiveConnectionWithQuality:(int)quality;
- (BOOL)isConnectedOnIPv6ForActiveConnectionWithQuality:(int)quality;
- (BOOL)isConnectedOnRelayForActiveConnectionWithQuality:(int)quality;
- (unsigned int)getPacketCountWithIndex:(unsigned char)index isOutgoing:(BOOL)outgoing;
- (unsigned int)getByteCountWithIndex:(unsigned char)index isOutgoing:(BOOL)outgoing;
- (void)updateSessionStats:(unsigned short)stats;
- (void)reportActiveConnectionOneToOne:(id)one isAudioOnly:(BOOL)only;
- (void)reportFirstActiveConnectionOneToOne:(id)one remoteOSVersion:(id)osversion redState:(BOOL)state isAudioOnly:(BOOL)only;
- (void)reportCurrentPrimaryConnection;
- (void)updateStatResponseResult:(id)result;
- (void)addMediaHealthStatsHistoryEntryForParticipantID:(id)id;
- (void)removeMediaHealthStatsHistoryEntryForParticipantID:(id)id;
- (void)duplicationStateUpdateWithEvent:(struct { unsigned char x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; int x8; BOOL x9; BOOL x10; })event;
- (void)aggregateStallTimeDuration:(struct { double x0; BOOL x1; double x2; double x3; } *)duration idsParticipantID:(id)id;
- (void)checkMediaQualityDegradedForParticipantID:(id)id;
- (void)updateMediaHealthStats:(struct { double x0; BOOL x1; double x2; double x3; } *)stats idsParticipantID:(id)id;
- (void)updateMediaDegradedHistoryWithValue:(double)value idsParticipantID:(id)id;
- (BOOL)isDuplicationAllowedForParticipantID:(id)id bucketsToSum:(int)sum threshold:(double)threshold;
- (void)updateMediaDegradedHistoryWithCurrentVideoStallDuration:(double)duration idsParticipantID:(id)id;
- (void)updateMediaDegradedHistoryWithCurrentAudioErasure:(double)erasure idsParticipantID:(id)id;
- (void)updateWithRemoteMediaHealthDuplication:(BOOL)duplication;
- (void)resetMediaHealthStats;
- (id)activeConnectionRegistry;
- (void)configureNWConnectionMonitor:(id)monitor;
- (void)setupNetworkConditionMonitor;
- (void)startBrokenNetworkDetection;
- (void)stopBrokenNetworkDetection;
- (void)checkpointPrimaryConnection:(id)connection;
- (void)primaryConnectionChanged:(id)changed oldPrimaryConnection:(id)connection;
- (void)renewNWMonitor;
- (void)setVCNWConnectionMonitorStatisticsHandler;
- (void)destroyNWMonitor;
- (void)destroyNWMonitorInternal;
- (void)disableRemotePreferredInterfaceInference:(BOOL)inference;
- (int)getConnectionSelectionVersionFromFrameworkVersion:(id)version;
- (void)promoteSecondaryConnectionToPrimary:(id)primary;
- (BOOL)isBetterConnection:(id)connection asPrimary:(BOOL)primary;
- (BOOL)isOptimalConnection:(id)connection asPrimary:(BOOL)primary interfaceMask:(int)mask;
- (void)updateWRMDuplicationForHandover;
- (void)reportConnection:(id)connection isInitialConnection:(BOOL)connection;
- (void)reportConnectionUpdateWithRespCode:(unsigned short)code;
- (void)reportConnectionUpdateWithResponseCode:(unsigned short)code delay:(double)delay;
- (void)setDefaultLinkProbingCapabilityVersionForDeviceRole:(int)role;
- (int)setConnectionHealthOnControlInfo:(void *)info;
- (int)processConnectionHealthFromControlInfo:(void *)info;
- (void)useConnectionAsPrimary:(id)primary;
- (int)addConnection:(id)connection;
- (int)removeConnection:(id)connection;
- (void)updateCellularMTU:(int)mtu;
- (void)updateCellularTech:(int)tech forLocalInterface:(BOOL)interface;
- (void)updateOneToOneBitrateCapsForConnection:(id)connection;
- (void)updateAllBitrateCapsForConnection:(id)connection;
- (BOOL)shouldAcceptDataFromSourceDestinationInfo:(struct tagVCSourceDestinationInfo { int x0; union { struct { struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x1; struct { BOOL x0; unsigned short x1; } x2; } x0; struct { int x0; int x1; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x2; int x3; } x1; struct { unsigned int x0; struct { char x0; unsigned short x1; unsigned char x2; unsigned short x3; unsigned char x4; } x1; BOOL x2; } x2; struct { id x0; } x3; } x1; unsigned int x2; struct tagVCSourceDestinationInfo * x3; void * x4; } *)info;
- (void)reportLinkProbingStatsWithDuplicationJustStarted:(BOOL)started;
- (void)updateNegotiatedSettingsOnetoOne:(id)one;
- (void)updateDuplicationStateWithEventType:(unsigned char)type;
- (void)reportNoPacketUpdateUsingCurrentTime:(double)time lastReceivedPacketTime:(double)time;
- (void)connectionHealthDidUpdate:(int)update isLocalConnection:(BOOL)connection;
- (void)updateConnectionStatsWithIndicatorNoPacket:(struct { double x0; double x1; double x2; double x3; double x4; BOOL x5; int x6; } *)packet;
- (void)updateConnectionStatsWithIndicatorOnlyPrimaryNoPacket:(struct { double x0; double x1; double x2; double x3; double x4; BOOL x5; int x6; } *)packet;
- (void)updateConnectionStatsWithIndicatorNone:(struct { double x0; double x1; double x2; double x3; double x4; BOOL x5; int x6; } *)none;
- (void)updateConnectionStatsWithIndicatorPrimaryImproved:(struct { double x0; double x1; double x2; double x3; double x4; BOOL x5; int x6; } *)improved;
- (void)updateConnectionHealthWithVCStatisticsMessage:(struct tagVCStatisticsMessage { int x0; int x1; double x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; union { struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; double x6; double x7; double x8; double x9; double x10; char x11[64] int x12; } x0; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; double x12; double x13; unsigned int x14; unsigned int x15; double x16; unsigned int x17; BOOL x18; struct { int x0; unsigned int x1; unsigned int x2; unsigned int x3; double x4; double x5; double x6; unsigned int x7; unsigned int x8; } x19; struct { unsigned short x0; BOOL x1; BOOL x2; unsigned int x3; } x20; struct tagVCStatisticsECNStats { unsigned short x0; unsigned short x1; } x21; struct tagVCStatisticsECNStats { unsigned short x0; unsigned short x1; } x22; BOOL x23; } x1; struct { double x0; double x1; double x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned long long x8; unsigned int x9; } x2; struct { unsigned int x0; BOOL x1; BOOL x2; BOOL x3; unsigned int x4; unsigned int x5; double x6; unsigned int x7; BOOL x8; struct { int x0; unsigned int x1; unsigned int x2; unsigned int x3; double x4; double x5; double x6; unsigned int x7; unsigned int x8; } x9; } x3; struct { unsigned char x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; double x10; double x11; double x12; double x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; } x4; struct { unsigned int x0; unsigned int x1; unsigned int x2; double x3; } x5; struct { int x0; unsigned int x1; unsigned int x2; unsigned int x3; double x4; double x5; double x6; unsigned int x7; unsigned int x8; } x6; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x7; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; BOOL x6; unsigned int x7; } x8; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; BOOL x5; BOOL x6; double x7; double x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned long long x12; } x9; struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned long long x9; int x10; unsigned int x11; union { struct { unsigned char x0; unsigned char x1; unsigned short x2; unsigned short x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; float x11; BOOL x12; unsigned short x13; unsigned int x14[6] } x0; struct { unsigned char x0; short x1; short x2; char x3; unsigned char x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned short x8; unsigned short x9; unsigned char x10; } x1; } x12; } x10; struct tagVCStatisticsVideoLossFeedback { unsigned int x0; unsigned short x1; unsigned char x2; unsigned char x3; } x11; } x7; })message;
- (BOOL)shouldDropCurrentPrimaryConnectionWithConnectionStats:(struct { double x0; double x1; double x2; double x3; double x4; BOOL x5; int x6; } *)stats;
- (void)updateProbingResults:(id)results;
- (void)updateLinkPreferSuggestion:(id)suggestion;
- (void)applyLinkRecommendation;
- (void)reportLinkSuggestion;
- (void)applyLinkFlags:(unsigned short)flags isCellular:(BOOL)cellular;
- (void)applyRemoteLinkFlags:(unsigned short)flags isCellular:(BOOL)cellular;
- (void)reselectPrimaryConnection;
- (void)startActiveProbingWithOptions:(id)options;
- (void)stopActiveProbingWithOptions:(id)options;
- (void)queryProbingResultsWithOptions:(id)options;
- (void)flushLinkProbingStatusWithOptions:(id)options;
- (struct { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; } *)getConnectionSelectionPolicy;
- (void)updateConnectionSelectionPolicyWithPreferE2E:(BOOL)e;
- (void)didChangeWifiAssistAvailable:(BOOL)available reason:(unsigned char)reason;
@end

#endif /* VCConnectionManager_h */
