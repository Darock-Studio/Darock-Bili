//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VideoConferenceManager_h
#define VideoConferenceManager_h
@import Foundation;

#include "ICEResultWaitQueue.h"
#include "VideoConference.h"
#include "VideoConferenceDelegate-Protocol.h"

@class NSMutableArray;
@protocol OS_dispatch_queue;

@interface VideoConferenceManager : NSObject<VideoConferenceDelegate> {
  /* instance variables */
  unsigned char _clientUUID[16];
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } stateLock;
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } sipLock;
  NSObject<OS_dispatch_queue> *_xpcCommandQueue;
  struct tagHANDLE { int x0; } * hSIP;
  int sipRefCount;
  id _vtpWrapper;
  BOOL isVTPInitialized;
  id _networkAgent;
}

@property VideoConference *activeConference;
@property VideoConference *conferenceWithMic;
@property (readonly) ICEResultWaitQueue *resultQueue;
@property (readonly) NSMutableArray *vcList;

/* class methods */
+ (id)defaultVideoConferenceManager;
+ (void)addNSError:(id)nserror toConferenceXPCArgumentDictionary:(id)dictionary;

/* instance methods */
- (void)registerBlocksForConference;
- (id)init;
- (void)videoConference:(id)conference localIPChange:(id)ipchange withCallID:(unsigned int)id;
- (void)videoConference:(id)conference didStartSession:(BOOL)session withCallID:(unsigned int)id error:(id)error;
- (void)videoConference:(id)conference didStartSession:(BOOL)session withCallID:(unsigned int)id withUserInfo:(id)info error:(id)error;
- (void)videoConference:(id)conference didStopWithCallID:(unsigned int)id error:(id)error callMetadata:(id)metadata;
- (void)videoConference:(id)conference withCallID:(unsigned int)id didPauseAudio:(BOOL)audio error:(id)error;
- (void)videoConference:(id)conference withCallID:(unsigned int)id isSendingAudio:(BOOL)audio error:(id)error;
- (void)videoConference:(id)conference withCallID:(unsigned int)id didPauseVideo:(BOOL)video error:(id)error;
- (void)videoConference:(id)conference receivedNoRemotePacketsForTime:(double)time callID:(unsigned int)id;
- (void)videoConference:(id)conference remoteMediaStalled:(BOOL)stalled callID:(unsigned int)id;
- (void)videoConference:(id)conference didReceiveFirstRemoteFrameForCallID:(unsigned int)id;
- (void)videoConference:(id)conference remoteAudioPaused:(BOOL)paused callID:(unsigned int)id;
- (void)videoConference:(id)conference remoteVideoPaused:(BOOL)paused callID:(unsigned int)id;
- (void)videoConference:(id)conference didRemoteVideoAttributesChange:(id)change forCallID:(unsigned int)id;
- (void)videoConference:(id)conference didRemoteScreenAttributesChange:(id)change forCallID:(unsigned int)id;
- (void)videoConference:(id)conference updateInputFrequencyLevel:(id)level;
- (void)videoConference:(id)conference updateOutputFrequencyLevel:(id)level;
- (void)videoConference:(id)conference updateInputMeterLevel:(float)level;
- (void)videoConference:(id)conference updateOutputMeterLevel:(float)level;
- (void)videoConference:(id)conference isRemoteAudioBelowThreshold:(BOOL)threshold;
- (void)videoConference:(id)conference inititiateRelayRequest:(unsigned int)request requestDict:(id)dict;
- (void)videoConference:(id)conference sendRelayUpdate:(unsigned int)update updateDict:(id)dict;
- (void)videoConference:(id)conference cancelRelayRequest:(unsigned int)request requestDict:(id)dict;
- (void)videoConference:(id)conference videoQualityNotificationForCallID:(unsigned int)id isDegraded:(BOOL)degraded isRemote:(BOOL)remote;
- (void)videoConference:(id)conference withCallID:(unsigned int)id networkHint:(BOOL)hint;
- (void)videoConference:(id)conference didReceiveARPLData:(id)arpldata fromCallID:(unsigned int)id;
- (void)videoConference:(id)conference didChangeLocalVariablesForCallID:(unsigned int)id;
- (void)videoConference:(id)conference didReceiveData:(id)data forCallID:(unsigned int)id;
- (void)videoConference:(id)conference remoteAudioEnabled:(BOOL)enabled forCallID:(unsigned int)id;
- (void)videoConference:(id)conference localAudioEnabled:(BOOL)enabled forCallID:(unsigned int)id error:(id)error;
- (void)videoConference:(id)conference closeConnectionForCallID:(unsigned int)id;
- (void)videoConference:(id)conference remoteCallingModeChanged:(unsigned int)changed forCallID:(unsigned int)id;
- (struct tagHANDLE { int x0; } *)SIPHandle;
- (void)setupVTPCallback;
- (void)createSIPWithPacketMultiplexMode:(int)mode;
- (void)startSIPWithPacketMultiplexMode:(int)mode transportType:(unsigned int)type;
- (BOOL)isSIPHandleValid:(struct tagHANDLE { int x0; } *)valid;
- (void)cleanupVTP;
- (void)stopSIPWithTransportType:(unsigned int)type;
- (void)addVideoConference:(id)conference;
- (void)removeVideoConference:(id)conference;
- (id)conferenceForCallID:(unsigned int)id;
- (BOOL)hasVideoConference:(id)conference;
- (id)conferenceForParticipantID:(id)id;
- (id)conferenceForSourceDestinationInfo:(struct tagVCSourceDestinationInfo { int x0; union { struct { struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x1; struct { BOOL x0; unsigned short x1; } x2; } x0; struct { int x0; int x1; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x2; int x3; } x1; struct { unsigned int x0; struct { char x0; unsigned short x1; unsigned char x2; unsigned short x3; unsigned char x4; } x1; BOOL x2; } x2; struct { id x0; } x3; } x1; unsigned int x2; struct tagVCSourceDestinationInfo * x3; void * x4; } *)info;
- (void)pauseVideoConferences:(BOOL)conferences;
- (void)broadcastCellTechChange:(int)change cellularMaxPktLen:(unsigned short)len;
- (void)getClientUUID:(unsigned char x[16])uuid;
@end

#endif /* VideoConferenceManager_h */
