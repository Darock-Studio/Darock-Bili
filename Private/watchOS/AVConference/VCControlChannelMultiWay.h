//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCControlChannelMultiWay_h
#define VCControlChannelMultiWay_h
@import Foundation;

#include "VCControlChannel.h"
#include "VCControlChannelTransactionDelegate-Protocol.h"

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface VCControlChannelMultiWay : VCControlChannel<VCControlChannelTransactionDelegate> {
  /* instance variables */
  struct _opaque_pthread_t { long long x0; struct __darwin_pthread_handler_rec * x1; char x2[8176] } * _pidReceiveProc;
  NSMutableDictionary *_activeParticipants;
  NSMutableDictionary *_cryptors;
  void * _currentSendMKI;
  void * _currentReceiveMKI;
  NSObject<OS_dispatch_queue> *_sequentialKeyMaterialQueue;
  long long _transactionID;
  BOOL _didSubmitCCReliableDataNotReceivedSymptom;
}

@property (nonatomic) unsigned int transportSessionID;
@property (nonatomic) int vfdMessage;
@property (nonatomic) int vfdCancel;
@property (readonly, nonatomic) NSMutableDictionary *dialogs;
@property (readonly) BOOL isRunning;
@property (readonly, nonatomic) unsigned long long nextTransactionID;
@property (readonly) BOOL isEncryptionEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)allocPayoadDataFromVTPPacket:(struct VCBlockBuffer_t { struct OpaqueCMBlockBuffer * x0; unsigned long long x1; char * x2; } *)vtppacket vpktFlags:(struct tagVPKTFLAG { int x0; unsigned int x1; unsigned int x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; int x7; int x8; struct tagVCSourceDestinationInfo { int x0; union { struct { struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x1; struct { BOOL x0; unsigned short x1; } x2; } x0; struct { int x0; int x1; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x2; int x3; } x1; struct { unsigned int x0; struct { char x0; unsigned short x1; unsigned char x2; unsigned short x3; unsigned char x4; } x1; BOOL x2; } x2; struct { id x0; } x3; } x1; unsigned int x2; struct tagVCSourceDestinationInfo * x3; void * x4; } x9; unsigned char x10; int x11; int x12; int x13; int x14; int x15; BOOL x16; BOOL x17; BOOL x18; struct tagVCIDSChannelDataFormat { unsigned short x0[12] unsigned char x1; BOOL x2; unsigned short x3; unsigned char x4; BOOL x5; BOOL x6; unsigned long long x7; BOOL x8; BOOL x9; BOOL x10; unsigned short x11; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x12; BOOL x13; BOOL x14; BOOL x15; unsigned long long x16; BOOL x17; unsigned short x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; } x19; struct tagPKT_TAG { unsigned long long x0[4] } x20; unsigned int x21; unsigned char x22[16] BOOL x23; BOOL x24; BOOL x25; unsigned char x26; BOOL x27; } *)flags channelDataFormat:(struct tagVCIDSChannelDataFormat * *)format;

/* instance methods */
- (void)initializeEncryption;
- (void)finalizeEncryption;
- (void)initializeSRTPInfo:(struct tagSRTPINFO { int x0; int x1; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x2; struct _opaque_pthread_cond_t { long long x0; char x1[40] } x3; unsigned int x4; unsigned int x5; unsigned short x6; unsigned short x7; unsigned int x8; unsigned int x9; unsigned long long x10; int x11; int x12; unsigned char x13[32] unsigned char x14[14] unsigned char x15[32] unsigned char x16[14] unsigned char x17[20] struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x18; void * x19; void * x20; unsigned int x21; unsigned int x22; struct os_unfair_lock_s { unsigned int x0; } x23; struct tagSRTPCryptContext { struct _CCCryptor * x0; } x24; struct tagSRTPTransformPolicy { int x0; int x1; int x2; int x3; int x4; int x5; int x6; int x7; } x25; unsigned int x26; BOOL x27; } *)srtpinfo;
- (void)updateEncryptionWithEncryptionMaterial:(struct { struct tagSRTPExchangeInfo { char x0[65] char x1[29] void * x2; } x0; unsigned int x1; struct tagSRTPExchangeInfo { char x0[65] char x1[29] void * x2; } x2; unsigned int x3; int x4; int x5; } *)material;
- (void)updateEncryptionWithKeyMaterial:(id)material;
- (void)setCurrentSendMKIWithKeyMaterial:(id)material;
- (int)getKeyDerivationCryptoSet:(struct { char x0[65] int x1; char x2[65] int x3; void * x4; } *)set withKeyMaterial:(id)material derivedSSRC:(unsigned int *)ssrc;
- (int)updateEncryption:(struct { char x0[65] int x1; char x2[65] int x3; void * x4; } *)encryption derivedSSRC:(unsigned int)ssrc;
- (BOOL)encryptData:(char *)data size:(int)size sequenceNumber:(unsigned short)number;
- (BOOL)decryptWithMKI:(void *)mki data:(char *)data size:(int)size sequenceNumber:(unsigned short)number;
- (id)initWithTransportSessionID:(unsigned int)id reportingAgent:(struct opaqueRTCReporting *)agent mode:(int)mode;
- (id)initWithTransportSessionID:(unsigned int)id reportingAgent:(struct opaqueRTCReporting *)agent;
- (void)dealloc;
- (void)start;
- (void)stop;
- (void)flushActiveMessages;
- (id)remoteParticipantIDFromChannelDataFormat:(struct tagVCIDSChannelDataFormat { unsigned short x0[12] unsigned char x1; BOOL x2; unsigned short x3; unsigned char x4; BOOL x5; BOOL x6; unsigned long long x7; BOOL x8; BOOL x9; BOOL x10; unsigned short x11; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x12; BOOL x13; BOOL x14; BOOL x15; unsigned long long x16; BOOL x17; unsigned short x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; } *)format;
- (void)messageReceived:(id)received participantInfo:(struct tagVCIDSChannelDataFormat { unsigned short x0[12] unsigned char x1; BOOL x2; unsigned short x3; unsigned char x4; BOOL x5; BOOL x6; unsigned long long x7; BOOL x8; BOOL x9; BOOL x10; unsigned short x11; struct { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; } x12; BOOL x13; BOOL x14; BOOL x15; unsigned long long x16; BOOL x17; unsigned short x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; } *)info;
- (BOOL)sendReliableMessageAndWait:(id)wait withTopic:(id)topic participantID:(unsigned long long)id;
- (id)copyDialogForParticipantID:(id)id;
- (BOOL)sendReliableMessageAndWait:(id)wait withTopic:(id)topic participantID:(unsigned long long)id timeout:(id)timeout withOptions:(id)options;
- (BOOL)sendReliableMessage:(id)message withTopic:(id)topic participantID:(unsigned long long)id timeout:(unsigned int)timeout completion:(id /* block */)completion;
- (BOOL)sendReliableMessage:(id)message withTopic:(id)topic participantID:(unsigned long long)id timeout:(unsigned int)timeout withOptions:(id)options completion:(id /* block */)completion;
- (void)sendReliableMessage:(id)message withTopic:(id)topic participantID:(unsigned long long)id;
- (void)sendUnreliableMessage:(id)message withTopic:(id)topic participantID:(unsigned long long)id;
- (BOOL)addActiveParticipant:(unsigned long long)participant participantUUID:(id)uuid withConfiguration:(struct { int x0; struct tagVCSecurityKeyHolder * x1; struct tagVCSecurityKeyHolder * x2; struct __CFData * x3; struct __CFData * x4; BOOL x5; } *)configuration;
- (void)processParticipantRemoval:(id)removal;
- (void)removeActiveParticipant:(unsigned long long)participant;
- (void)removeAllActiveParticipants;
- (void)scheduleAfter:(unsigned int)after block:(id /* block */)block;
- (void)updateTransactionIDWithKeyMaterial:(id)material;
- (void)addNewKeyMaterial:(id)material;
- (void)setEncryptionWithEncryptionMaterial:(struct { struct tagSRTPExchangeInfo { char x0[65] char x1[29] void * x2; } x0; unsigned int x1; struct tagSRTPExchangeInfo { char x0[65] char x1[29] void * x2; } x2; unsigned int x3; int x4; int x5; } *)material;
- (void)addToSentStats:(int)stats;
- (void)addToReceivedStats:(int)stats;
- (BOOL)isParticipantActive:(unsigned long long)active;
- (id)lastUsedMKIBytes;
- (int)protocolVersionforParticipantID:(id)id;
- (void)reportSignificantHandshakeDelaySymptomForParticipantID:(id)id;
- (void)periodicTask:(void *)task;
- (void)registerPeriodicTask;
- (void)deregisterPeriodicTask;
- (void)flushRealTimeReportingStats;
- (void)flushReportingStats;
@end

#endif /* VCControlChannelMultiWay_h */
