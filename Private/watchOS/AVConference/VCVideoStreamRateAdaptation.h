//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCVideoStreamRateAdaptation_h
#define VCVideoStreamRateAdaptation_h
@import Foundation;

#include "VCMediaStreamRateAdaptation.h"
#include "VCMediaStreamStats.h"
#include "VCVideoStreamRateController.h"

@interface VCVideoStreamRateAdaptation : VCMediaStreamRateAdaptation {
  /* instance variables */
  unsigned int _receivedTmmbnBitrate;
  BOOL _rateAdaptationEnabled;
  BOOL _downlinkQualityDidChange;
  double _tmmbrSendTime;
  double _tmmbnReceiveTime;
  double _tmmbRTT;
  double _adaptationTime;
  double _averageBitrateWindowDuration;
  struct opaqueRTCReporting * _reportingAgent;
  int _reportingModuleID;
  VCVideoStreamRateController *_rateController;
}

@property (readonly, nonatomic) struct tagHANDLE { int x0; } * rtpHandle;
@property (readonly, nonatomic) double packetLossPercentage;
@property (readonly, nonatomic) double roundTripTime;
@property (readonly, nonatomic) double owrd;
@property (readonly, nonatomic) double nowrd;
@property (readonly, nonatomic) double nowrdShort;
@property (readonly, nonatomic) double nowrdAcc;
@property (readonly, nonatomic) unsigned int operatingBitrate;
@property (readonly, nonatomic) unsigned int sendTmmbrBitrate;
@property (readonly, nonatomic) BOOL isOperatingAtMaxBitrate;
@property (readonly, nonatomic) BOOL isOperatingAtMinBitrate;
@property (nonatomic) double maxOWRD;
@property (retain, nonatomic) VCMediaStreamStats *stats;

/* instance methods */
- (id)initWithMediaStreamRateAdaptationParam:(const struct tagVCMediaStreamRateAdaptationParams { id x0; unsigned int x1; struct opaqueRTCReporting * x2; int x3; struct tagVCMediaStreamRateAdaptationConfig { long long x0; union tagVCMediaStreamRateAdaptationAlgorithmConfig { struct tagVCMediaStreamRateAdaptationConfigTelephonyUplink { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } x0; struct tagVCMediaStreamRateAdaptationConfigScreenShare { unsigned int x0; unsigned int x1; unsigned int x2; int x3; } x1; } x1; } x4; struct tagHANDLE * x5; int x6; BOOL x7; id x8; id x9; } *)param;
- (void)dealloc;
- (void)setEnableRateAdaptation:(BOOL)adaptation maxBitrate:(unsigned int)bitrate minBitrate:(unsigned int)bitrate adaptationInterval:(double)interval;
- (BOOL)runVideoStreamRateAdaptation;
- (void)receivedTMMBN:(unsigned int)tmmbn;
- (void)updateVideoStall:(BOOL)stall withStallDuration:(unsigned int)duration;
- (void)updateRTPReceiveWithTimestamp:(unsigned int)timestamp sampleRate:(unsigned int)rate time:(double)time size:(unsigned int)size endOfFrame:(BOOL)frame;
- (unsigned int)averageReceivedBitrate;
- (void)scheduleTMMBR:(unsigned int)tmmbr;
- (id)className;
- (void)reportingVideoStreamEvent:(unsigned short)event;
@end

#endif /* VCVideoStreamRateAdaptation_h */
