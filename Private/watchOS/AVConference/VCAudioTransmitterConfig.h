//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCAudioTransmitterConfig_h
#define VCAudioTransmitterConfig_h
@import Foundation;

#include "AVCStatisticsCollector.h"
#include "VCAudioPayload.h"
#include "VCTransportSession.h"

@class NSArray, NSMutableArray;

@interface VCAudioTransmitterConfig : NSObject {
  /* instance variables */
  BOOL _shouldUseRedAsBoolean;
}

@property (nonatomic) struct tagHANDLE { int x0; } * rtpHandle;
@property (nonatomic) struct tagHANDLE { int x0; } * afrcHandle;
@property (nonatomic) struct tagHANDLE { int x0; } * mediaQueue;
@property (nonatomic) struct tagHANDLE { int x0; } * rtpVideo;
@property (nonatomic) void * controlInfoGenerator;
@property (retain, nonatomic) NSMutableArray *audioPayloads;
@property (retain, nonatomic) VCAudioPayload *chosenAudioPayload;
@property (retain, nonatomic) VCAudioPayload *chosenDTXPayload;
@property (nonatomic) unsigned char packetsPerBundle;
@property (nonatomic) BOOL useRateControl;
@property (nonatomic) int bundlingScheme;
@property (nonatomic) BOOL isUseCaseWatchContinuity;
@property (nonatomic) BOOL allowAudioSwitching;
@property (nonatomic) BOOL supportsAdaptation;
@property (nonatomic) BOOL needsPacketThread;
@property (nonatomic) int chosenRedPayloadType;
@property (nonatomic) BOOL redEnabled;
@property (nonatomic) BOOL includeRedSequenceOffset;
@property (nonatomic) unsigned int redNumPayloads;
@property (nonatomic) unsigned int redMaxDelay20ms;
@property (nonatomic) BOOL transmitROC;
@property (nonatomic) int operatingMode;
@property (retain, nonatomic) VCTransportSession *transportSession;
@property (nonatomic) struct tagVCAudioFrameFormat { struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } x0; unsigned int x1; } inputFormat;
@property (nonatomic) struct opaqueRTCReporting * reportingAgent;
@property (nonatomic) int reportingParentID;
@property (retain, nonatomic) AVCStatisticsCollector *statisticsCollector;
@property (nonatomic) BOOL ignoreSilence;
@property (nonatomic) int ratType;
@property (retain, nonatomic) NSArray *streamIDs;
@property (nonatomic) unsigned int tierNetworkBitrate;
@property (nonatomic) unsigned int maxIDSStreamIdCount;
@property (retain, nonatomic) NSArray *supportedNumRedundantPayload;
@property (nonatomic) BOOL sendActiveVoiceOnly;
@property (nonatomic) BOOL currentDTXEnable;
@property (nonatomic) unsigned char mediaControlInfoVersion;
@property (nonatomic) BOOL alwaysOnAudioRedundancyEnabled;
@property (nonatomic) BOOL cellularAllowRedLowBitratesEnabled;
@property (nonatomic) BOOL wifiAllowRedLowBitratesEnabled;
@property (nonatomic) unsigned long long remoteIDSParticipantID;
@property (nonatomic) BOOL shouldCreateRedundancyController;
@property (nonatomic) BOOL useChannelDataFormat;
@property (nonatomic) BOOL shouldApplyRedAsBoolean;
@property (nonatomic) unsigned int qualityIndex;
@property (nonatomic) BOOL useWifiTiers;
@property (nonatomic) BOOL supportsCodecBandwidthUpdate;
@property (nonatomic) struct tagVCCryptor * sframeCryptor;
@property (nonatomic) unsigned int packetExpirationTime;
@property (nonatomic) BOOL audioIssueDetectorEnabled;
@property (nonatomic) BOOL targetBitrateIsAudioOnly;
@property (nonatomic) BOOL audioDumpEnabled;
@property (nonatomic) unsigned char tierPickerMode;
@property (nonatomic) BOOL ramStadSRCEnabled;
@property (nonatomic) unsigned int maxAudioPacketSize;
@property (nonatomic) unsigned int constantTransportOverhead;

/* instance methods */
- (void)dealloc;
- (id)description;
- (BOOL)isRedEnabled;
- (BOOL)isCurrentDTXEnabled;
@end

#endif /* VCAudioTransmitterConfig_h */
