//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef VCMediaStreamTransport_h
#define VCMediaStreamTransport_h
@import Foundation;

#include "AVCBasebandCongestionDetector.h"
#include "VCMediaStreamConfig.h"

@interface VCMediaStreamTransport : NSObject {
  /* instance variables */
  unsigned int _localSSRC;
  BOOL _isSRTPInitialized;
  int _payloadType;
  struct { void *context; undefined *creationCallback; BOOL isReceiveExternallyScheduled; } _transportStreamInfo;
}

@property (readonly, nonatomic) VCMediaStreamConfig *streamConfig;
@property (readonly, nonatomic) struct tagHANDLE { int x0; } * rtpHandle;
@property (readonly, nonatomic) unsigned short idsStreamId;
@property (readonly, nonatomic) double lastReceivedRTCPPacketTime;
@property (readonly, nonatomic) BOOL rtcpSendEnabled;
@property (readonly, nonatomic) BOOL encryptionInfoReceived;
@property (nonatomic) long long streamDirection;
@property (nonatomic) double rtpTimeoutInterval;
@property (nonatomic) BOOL rtpTimeoutEnabled;
@property (nonatomic) BOOL decryptionTimeoutEnabled;
@property (nonatomic) double rtcpTimeoutInterval;
@property (nonatomic) double rtcpSendInterval;
@property (nonatomic) BOOL rtcpTimeoutEnabled;
@property (nonatomic) BOOL rtcpEnabled;
@property (readonly, nonatomic) BOOL rtcpXREnabled;
@property (retain, nonatomic) AVCBasebandCongestionDetector *basebandCongestionDetector;
@property (readonly, nonatomic) struct tagVCCryptor * receiverSframeCryptor;
@property (readonly, nonatomic) struct tagVCCryptor * transmitterSframeCryptor;

/* class methods */
+ (int)getSRTPMediaKeyLength:(long long)length;
+ (int)SRTPCipherSuiteForVCMediaStreamCipherSuite:(long long)suite;
+ (BOOL)isSameSRTPKey:(id)srtpkey newKey:(id)key;

/* instance methods */
- (id)initWithHandle:(struct tagHANDLE { int x0; } *)handle localSSRC:(unsigned int)ssrc;
- (void)dealloc;
- (BOOL)isSameSRTPConfig:(id)srtpconfig;
- (void)updateLastGeneratedKeyMaterial;
- (int)onStart;
- (void)onStop;
- (BOOL)configureWithStreamConfig:(id)config setupInfo:(struct _VCMediaStreamTransportSetupInfo { unsigned char x0; union { struct { int x0; int x1; } x0; struct { struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x1; } x1; struct { void * x0; undefined * x1; BOOL x2; } x2; id x3; } x1; unsigned int x2; unsigned int x3; BOOL x4; } *)info reducedSizeRTCPPackets:(BOOL)rtcppackets hopByHopEncryptRTCPPackets:(BOOL)rtcppackets statisticsCollector:(id)collector basebandCongestionDetector:(id)detector error:(id *)error;
- (BOOL)isSendingMedia:(id)media;
- (struct tagVCCryptor *)createSframeCryptorWithStreamConfig:(id)config ssrc:(unsigned int)ssrc error:(id *)error;
- (BOOL)setupSframeCryptorsWithError:(id *)error;
- (void)reset;
- (void)resetPayloadMapping;
- (void)sendControlPacketWithParameters:(struct _RTCP_SEND_CONTROL_PARAMETERS { unsigned int x0; int x1; char * x2; unsigned long long x3; unsigned char x4; unsigned short * x5; int x6; unsigned short x7; unsigned short x8; unsigned int x9; struct _RTCP_RECEPTION_REPORT * x10; unsigned char x11; struct tagRTCP_CUSTOM_RATE_CONTROL_INFO * x12; struct tagVCRTCPXRSummaryReport * x13; unsigned char x14; struct tagVCRTCPXRVoIPMetricsReport * x15; unsigned char x16; unsigned short x17[12] unsigned char x18; BOOL x19; unsigned long long x20; BOOL x21; BOOL x22; struct tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO * x23; unsigned int x24; } *)parameters;
- (int)getCryptoSet:(struct tagSRTPExchangeInfo { char x0[65] char x1[29] void * x2; } *)set withMediaKey:(id)key;
- (int)setupSRTP;
- (BOOL)setupRTPWithSockets:(struct _VCMediaStreamTransportSetupInfo { unsigned char x0; union { struct { int x0; int x1; } x0; struct { struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x1; } x1; struct { void * x0; undefined * x1; BOOL x2; } x2; id x3; } x1; unsigned int x2; unsigned int x3; BOOL x4; } *)sockets error:(id *)error;
- (int)setupRTPWithTransportStreams;
- (BOOL)setupRTPWithNWConnection:(struct _VCMediaStreamTransportSetupInfo { unsigned char x0; union { struct { int x0; int x1; } x0; struct { struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x1; } x1; struct { void * x0; undefined * x1; BOOL x2; } x2; id x3; } x1; unsigned int x2; unsigned int x3; BOOL x4; } *)nwconnection error:(id *)error;
- (BOOL)setupRTPForIDS:(id *)ids;
- (BOOL)setupRTPWithIPInfo:(struct _VCMediaStreamTransportSetupInfo { unsigned char x0; union { struct { int x0; int x1; } x0; struct { struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x1; } x1; struct { void * x0; undefined * x1; BOOL x2; } x2; id x3; } x1; unsigned int x2; unsigned int x3; BOOL x4; } *)ipinfo error:(id *)error;
- (BOOL)setupRTPWithTransportSetupInfo:(struct _VCMediaStreamTransportSetupInfo { unsigned char x0; union { struct { int x0; int x1; } x0; struct { struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x0; struct tagIPPORT { int x0; char x1[16] union { unsigned int x0; unsigned char x1[16] } x2; unsigned short x3; } x1; } x1; struct { void * x0; undefined * x1; BOOL x2; } x2; id x3; } x1; unsigned int x2; unsigned int x3; BOOL x4; } *)info error:(id *)error;
- (void)registerRTPPayloadMappings;
- (id)rxNetworkPayloads;
- (void)handleEncryptionInfoChange:(id)change;
- (BOOL)isRTCPEnabled;
- (BOOL)isRTCPXREnabled;
- (BOOL)isRTCPSendEnabled;
- (BOOL)isRTPTimeoutEnabled;
- (BOOL)isRTCPTimeoutEnabled;
- (BOOL)isDecryptionTimeoutEnabled;
- (BOOL)sendIntervalDidElapse:(int *)elapse remainingTime:(double *)time;
- (BOOL)setThrottlingInterval:(double)interval;
- (BOOL)generateReceptionReport:(struct _RTCP_RECEPTION_REPORT { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned char x8; } *)report reportCount:(char *)count;
- (BOOL)generateRTCPXRSummaryReport:(struct tagVCRTCPXRSummaryReport { BOOL x0; BOOL x1; BOOL x2; int x3; unsigned int x4; unsigned short x5; unsigned short x6; unsigned int x7; unsigned int x8; int x9; int x10; int x11; int x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; } *)report reportCount:(char *)count;
- (BOOL)generateRTCPXRVoIPMetricsReport:(struct tagVCRTCPXRVoIPMetricsReport { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned char x16; unsigned short x17; unsigned short x18; unsigned short x19; } *)report reportCount:(char *)count;
- (unsigned int)getRTCPReportNTPTimeMiddle32ForReportId:(unsigned char)id;
- (unsigned int)getExtendedSequenceNumberForSequenceNumber:(unsigned short)number;
@end

#endif /* VCMediaStreamTransport_h */
