//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 64562.3.1.1.0
//
#ifndef XRFrameCommutator_h
#define XRFrameCommutator_h
@import Foundation;

@protocol {unique_ptr<xray::scheduler::Commutator, std::default_delete<xray::scheduler::Commutator>>="__ptr_"{__compressed_pair<xray::scheduler::Commutator *, std::default_delete<xray::scheduler::Commutator>>="__value_"^{Commutator}}};

@interface XRFrameCommutator : NSObject {
  /* instance variables */
  struct unique_ptr<xray::scheduler::Commutator, std::default_delete<xray::scheduler::Commutator>> { struct __compressed_pair<xray::scheduler::Commutator *, std::default_delete<xray::scheduler::Commutator>> { struct Commutator *__value_; } __ptr_; } _commutatorImpl;
}

/* class methods */
+ (id)sharedCommutator;

/* instance methods */
- (id)initWithMinorFrameCount:(unsigned char)count;
- (id)init;
- (void)dealloc;
- (void)addRing:(id)ring;
- (void)removeRing:(id)ring;
- (id)newRing;
- (void)start;
- (void)stop;
- (void)observedTopOfMajorFrame;
- (void)setPeriod:(unsigned long long)period;
@end

#endif /* XRFrameCommutator_h */
