//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1547.1.1.3.0
//
#ifndef CalAccountsProvider_h
#define CalAccountsProvider_h
@import Foundation;

@class ACAccountStore, NSArray, NSMutableArray;

@interface CalAccountsProvider : NSObject

@property (retain, nonatomic) ACAccountStore *accountStore;
@property (retain, nonatomic) NSMutableArray *accountsWhenRunningUnitTests;
@property (readonly, nonatomic) NSArray *allAccounts;
@property (readonly, nonatomic) NSArray *accountsEnabledForCalendar;
@property (readonly, nonatomic) NSArray *accountsEnabledForReminders;
@property (readonly, nonatomic) NSArray *enabledAccounts;
@property (nonatomic) BOOL runningUnitTests;

/* class methods */
+ (id)defaultProvider;
+ (BOOL)accountIsDuplicate:(id)duplicate inStore:(id)store;
+ (id)uniqueStringsForHostname:(id)hostname;
+ (id)uniqueStringsForPrincipalPath:(id)path;
+ (id)verboseDescriptionForAccount:(id)account;
+ (id)_accountsWithAccountType:(id)type inStore:(id)store error:(id *)error;
+ (id)_accountTypeWithIdentifier:(id)identifier inStore:(id)store;
+ (id)_existingAccountForAccount:(id)account inStore:(id)store;
+ (id)_uniqueStringsForUsername:(id)username;

/* instance methods */
- (id)init;
- (BOOL)account:(id)account hasServerURL:(id)url;
- (BOOL)accountIsDuplicate:(id)duplicate;
- (id)accountsWithServerURL:(id)url;
- (id)accountsWithUsername:(id)username;
- (id)accountsWithServerURL:(id)url username:(id)username returnCachedVersions:(BOOL)versions;
- (id)accountTypeWithIdentifier:(id)identifier;
- (id)accountWithIdentifier:(id)identifier returnCachedVersion:(BOOL)version;
- (id)accountWithIdentifier:(id)identifier;
- (id)primaryAppleAccount;
- (id)allAccountsWithError:(id *)error;
- (id)accountsWithAccountTypeIdentifier:(id)identifier error:(id *)error;
- (id)clientTokenForAccountWithIdentifier:(id)identifier;
- (id)delegatePrincipalUIDsForAccount:(id)account;
- (id)existingAccountForAccount:(id)account;
- (id)oauthTokenForAccount:(id)account tokenType:(id)type;
- (void)removeAccount:(id)account withCompletionHandler:(id /* block */)handler;
- (BOOL)removeAccount:(id)account withError:(id *)error;
- (BOOL)renewCredentialsForAccount:(id)account;
- (BOOL)renewCredentialsForAccount:(id)account forceRenewal:(BOOL)renewal;
- (void)renewCredentialsForAccount:(id)account forceRenewal:(BOOL)renewal withCompletionHandler:(id /* block */)handler;
- (void)saveAccount:(id)account verify:(BOOL)verify withCompletionHandler:(id /* block */)handler;
- (void)saveAccount:(id)account withCompletionHandler:(id /* block */)handler;
- (BOOL)saveAccount:(id)account verify:(BOOL)verify withError:(id *)error;
- (BOOL)saveAccount:(id)account withError:(id *)error;
- (id)_accountsEnabledForDataClass:(id)class;
- (id)_accountsEnabledForDataClasses:(id)classes;
- (id)_providerForCalDAVAccount:(id)davaccount;
- (id)_supportedDataclassesForBundleID:(id)id;
- (BOOL)_bundleIDSupportsDataclassCalendars:(id)calendars;
- (BOOL)_bundleIDSupportsDataclassReminders:(id)reminders;
- (id)_mainBundleID;
- (id)_supportedDataclassesForMainBundleID;
@end

#endif /* CalAccountsProvider_h */
