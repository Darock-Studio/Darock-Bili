//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1547.1.1.3.0
//
#ifndef CalDateRange_h
#define CalDateRange_h
@import Foundation;

#include "CalDateRangeProtocol-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDate, NSString;

@interface CalDateRange : NSObject<NSCopying, CalDateRangeProtocol, NSSecureCoding>

@property (retain, nonatomic) NSDate *startDate;
@property (retain, nonatomic) NSDate *endDate;
@property (readonly, nonatomic) double duration;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)rangeWithStartDate:(id)date endDate:(id)date;
+ (id)rangeWithStartDate:(id)date duration:(double)duration;
+ (id)rangeWithRange:(id)range;
+ (id)rangeByExpandingRange:(id)range direction:(long long)direction multiplier:(unsigned long long)multiplier;
+ (id)rangeByExpandingRange:(id)range direction:(long long)direction duration:(double)duration;
+ (id)rangeByExpandingRange:(id)range direction:(long long)direction components:(id)components calendar:(id)calendar;
+ (BOOL)supportsSecureCoding;
+ (BOOL)range:(id)range intersectsRange:(id)range;
+ (BOOL)range:(id)range intersectsRange:(id)range allowSinglePointIntersection:(BOOL)intersection;
+ (BOOL)range:(id)range intersectsRangeWithStartDate:(id)date endDate:(id)date;
+ (BOOL)range:(id)range intersectsRangeWithStartDate:(id)date endDate:(id)date allowSinglePointIntersection:(BOOL)intersection;
+ (BOOL)rangesIntersectWithStartDate1:(id)date1 endDate1:(id)date1 startDate2:(id)date2 endDate2:(id)date2;
+ (BOOL)rangesIntersectWithStartDate1:(id)date1 endDate1:(id)date1 startDate2:(id)date2 endDate2:(id)date2 allowSinglePointIntersection:(BOOL)intersection;

/* instance methods */
- (id)initWithStartDate:(id)date endDate:(id)date;
- (id)initWithStartDate:(id)date duration:(double)duration;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (BOOL)isValid;
- (BOOL)isEqual:(id)equal;
- (void)setStartDate:(id)date endDate:(id)date;
- (void)setStartDate:(id)date duration:(double)duration;
- (BOOL)containsDate:(id)date;
- (BOOL)containsRange:(id)range;
- (BOOL)intersectsRange:(id)range;
- (BOOL)intersectsRange:(id)range allowSinglePointIntersection:(BOOL)intersection;
- (BOOL)intersectsRangeWithStartDate:(id)date endDate:(id)date;
- (BOOL)intersectsRangeWithStartDate:(id)date endDate:(id)date allowSinglePointIntersection:(BOOL)intersection;
- (id)intersectionWithRange:(id)range;
- (id)unionRange:(id)range;
- (id)subtractRange:(id)range;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)briefDescription;
- (id)midpoint;
- (id)_calculateMidnightsInCalendar:(id)calendar;
- (id)midnightsForRangeInTimeZoneString:(id)string;
@end

#endif /* CalDateRange_h */
