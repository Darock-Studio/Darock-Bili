//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1547.1.1.3.0
//
#ifndef CalAccumulatingQueue_h
#define CalAccumulatingQueue_h
@import Foundation;

@class NSMutableDictionary, NSMutableSet;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface CalAccumulatingQueue : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  id /* block */ _block;
  id /* block */ _throttleBlock;
  double _delay;
  NSMutableSet *_tags;
  NSMutableDictionary *_context;
  BOOL _executionPending;
  unsigned long long _pendingPopTime;
  NSObject<OS_dispatch_source> *_pendingExecutionTimer;
}

/* instance methods */
- (id)initWithQueue:(id)queue andBlock:(id /* block */)block;
- (id)initWithQueue:(id)queue andBlock:(id /* block */)block delay:(double)delay;
- (id)initWithQueue:(id)queue andBlock:(id /* block */)block throttle:(id /* block */)throttle;
- (id)_initWithQueue:(id)queue andBlock:(id /* block */)block delay:(double)delay throttle:(id /* block */)throttle;
- (void)_cancelPendingTimer;
- (void)_scheduleTimerWithDelay:(double)delay;
- (void)_callTargetBlockAndReset;
- (void)_executeBlockWithoutThrottleBlock;
- (void)_executeBlockWithThrottleBlock;
- (void)executeBlock;
- (void)updateTags:(id)tags;
- (void)updateTags:(id)tags withContext:(id)context;
- (void)updateTagsAndExecuteBlock:(id)block;
- (void)updateTagsAndExecuteBlock:(id)block withContext:(id)context;
@end

#endif /* CalAccumulatingQueue_h */
