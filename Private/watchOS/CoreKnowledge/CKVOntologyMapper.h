//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.3.1.0.0
//
#ifndef CKVOntologyMapper_h
#define CKVOntologyMapper_h
@import Foundation;

@interface CKVOntologyMapper : NSObject
/* class methods */
+ (id)ontologyGraphFromSpanMatch:(id)match outOntologyLabel:(id *)label;
+ (id)ontologyLabelFromFieldValueWithType:(long long)type;
+ (struct optional<std::tuple<const siri::ontology::OntologyNodeName *, const siri::ontology::OntologyEdgeName *, NSString *const>> { union { char x0; struct tuple<const siri::ontology::OntologyNodeName *, const siri::ontology::OntologyEdgeName *, NSString *const> { struct __tuple_impl<std::__tuple_indices<0, 1, 2>, const siri::ontology::OntologyNodeName *, const siri::ontology::OntologyEdgeName *, NSString *const> { struct OntologyNodeName * x0; struct OntologyEdgeName * x1; id x2; } x0; } x1; } x0; BOOL x1; })_ontologyMappingFromSpanMatch:(id)match;
+ (struct optional<std::tuple<const siri::ontology::OntologyNodeName *, const siri::ontology::OntologyEdgeName *, NSString *const>> { union { char x0; struct tuple<const siri::ontology::OntologyNodeName *, const siri::ontology::OntologyEdgeName *, NSString *const> { struct __tuple_impl<std::__tuple_indices<0, 1, 2>, const siri::ontology::OntologyNodeName *, const siri::ontology::OntologyEdgeName *, NSString *const> { struct OntologyNodeName * x0; struct OntologyEdgeName * x1; id x2; } x0; } x1; } x0; BOOL x1; })_ontologyMappingFromFieldType:(long long)type fieldComponent:(unsigned char)component;
+ (void)_setIdentifiersOnEdgeNode:(id)node entitySpan:(id)span spanInfo:(id)info probability:(float)probability;
+ (id)_entitySpanForMatch:(id)match startIndex:(unsigned int)index endIndex:(unsigned int)index label:(id)label;
+ (void)_appendSpanProperties:(id)properties forCustomTermMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forContactMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forAppInfoMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forHomeEntityMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forLinkDynamicTermMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forAutoShortcutMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forRadioEntityMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forGlobalTermMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forAppShortcutMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forLearnedContactMatch:(id)match;
+ (void)_appendSpanProperties:(id)properties forLearnedMediaEntityMatch:(id)match;
@end

#endif /* CKVOntologyMapper_h */
