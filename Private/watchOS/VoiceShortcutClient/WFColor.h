//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef WFColor_h
#define WFColor_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "WFGradient.h"

@class NSBundle, NSColor, NSString, UIColor;

@interface WFColor : NSObject<NSSecureCoding, NSCopying>

@property (readonly, nonatomic) unsigned int RGBAValue;
@property (readonly, nonatomic) NSString *hexValue;
@property (readonly, nonatomic) WFGradient *paletteGradient;
@property (readonly, nonatomic) BOOL hasPaletteGradient;
@property (readonly, nonatomic) WFGradient *gradient;
@property (readonly, nonatomic) NSString *colorName;
@property (readonly, nonatomic) NSBundle *bundle;
@property (readonly, nonatomic) unsigned long long representationType;
@property (readonly, nonatomic) struct CGColor * CGColor;
@property (readonly, nonatomic) UIColor *platformColor;
@property (readonly, nonatomic) UIColor *UIColor;
@property (readonly, nonatomic) NSColor *NSColor;
@property (readonly, nonatomic) unsigned long long systemColor;
@property (readonly, nonatomic) double red;
@property (readonly, nonatomic) double green;
@property (readonly, nonatomic) double blue;
@property (readonly, nonatomic) double alpha;

/* class methods */
+ (id)colorWithFocusColorName:(id)name;
+ (id)colorWithCGColor:(struct CGColor *)cgcolor;
+ (id)colorWithWhite:(double)white alpha:(double)alpha;
+ (id)colorWithRed:(double)red green:(double)green blue:(double)blue alpha:(double)alpha;
+ (id)colorWithDisplayP3Red:(double)red green:(double)green blue:(double)blue alpha:(double)alpha;
+ (id)colorWithSystemColor:(unsigned long long)color;
+ (id)colorNamed:(id)named inBundle:(id)bundle;
+ (id)colorWithHue:(double)hue saturation:(double)saturation brightness:(double)brightness alpha:(double)alpha;
+ (id)whiteColor;
+ (id)blackColor;
+ (id)clearColor;
+ (id)workflowPalette;
+ (id)workflowPaletteNames;
+ (id)workflowGradientPalette;
+ (id)colorWithPaletteColor:(unsigned long long)color;
+ (id)colorWithRGBAValue:(unsigned int)rgbavalue;
+ (id)colorWithP3RGBAValue:(unsigned int)rgbavalue;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)paletteGradientFallingBackToDefaultGradient:(BOOL)gradient;
- (id)initWithCGColor:(struct CGColor *)cgcolor;
- (void)dealloc;
- (id)init;
- (id)initWithWhite:(double)white alpha:(double)alpha;
- (id)initWithRed:(double)red green:(double)green blue:(double)blue alpha:(double)alpha;
- (id)initWithDisplayP3Red:(double)red green:(double)green blue:(double)blue alpha:(double)alpha;
- (id)initWithPlatformColor:(id)color;
- (id)initWithSystemColor:(unsigned long long)color;
- (id)initWithColorName:(id)name inBundle:(id)bundle;
- (id)initWithHue:(double)hue saturation:(double)saturation brightness:(double)brightness alpha:(double)alpha;
- (id)description;
- (BOOL)getRed:(double *)red green:(double *)green blue:(double *)blue alpha:(double *)alpha;
- (id)colorWithAlphaComponent:(double)component;
- (void)getHue:(double *)hue saturation:(double *)saturation value:(double *)value alpha:(double *)alpha;
- (BOOL)isCloseToColor:(id)color;
- (BOOL)isDark;
- (id)initWithSerializedRepresentation:(id)representation;
- (id)serializedRepresentation;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* WFColor_h */
