//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef WFBitmapContext_h
#define WFBitmapContext_h
@import Foundation;

@interface WFBitmapContext : NSObject

@property (readonly, nonatomic) struct CGSize { double x0; double x1; } size;
@property (readonly, nonatomic) double scale;
@property (readonly, nonatomic) struct CGContext * CGContext;

/* class methods */
+ (id)contextWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale;
+ (id)contextWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale flipped:(BOOL)flipped;
+ (id)contextWithDeviceScreenScaleAndSize:(struct CGSize { double x0; double x1; })size;
+ (id)HDRCapableContextWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale;
+ (id)currentContextWithScale:(double)scale;

/* instance methods */
- (id)image;
- (id)initWithCGContext:(struct CGContext *)cgcontext scale:(double)scale;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size opaque:(BOOL)opaque scale:(double)scale;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size opaque:(BOOL)opaque scale:(double)scale colorspace:(struct CGColorSpace *)colorspace;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size opaque:(BOOL)opaque scale:(double)scale colorspace:(struct CGColorSpace *)colorspace hdrCapable:(BOOL)capable;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size opaque:(BOOL)opaque scale:(double)scale colorspace:(struct CGColorSpace *)colorspace flipped:(BOOL)flipped;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size opaque:(BOOL)opaque scale:(double)scale colorspace:(struct CGColorSpace *)colorspace flipped:(BOOL)flipped hdrCapable:(BOOL)capable;
- (void)dealloc;
- (id)imageWithOrientation:(unsigned int)orientation;
- (void)becomeCurrent;
- (void)resignCurrent;
@end

#endif /* WFBitmapContext_h */
