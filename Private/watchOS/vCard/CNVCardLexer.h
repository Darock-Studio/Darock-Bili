//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3628.0.0.0.0
//
#ifndef CNVCardLexer_h
#define CNVCardLexer_h
@import Foundation;

@class NSArray, NSMutableData;

@interface CNVCardLexer : NSObject {
  /* instance variables */
  NSMutableData *_data;
  char * _bytes;
  unsigned long long _length;
  unsigned long long _peekedPoint;
  unsigned long long _cursor;
  BOOL _unicode;
  long long _errorCount;
  NSArray *_activeTokenSets;
}

/* class methods */
+ (id)singleByteTokens;
+ (id)utf16Tokens;
+ (id)returnDelimiterData;

/* instance methods */
- (id)os_log;
- (id)initWithData:(id)data;
- (unsigned long long)cursor;
- (long long)errorCount;
- (id)tokenSetForLength:(long long)length;
- (int)nextTokenPeekSingle:(BOOL)single length:(long long)length;
- (int)nextTokenPeekUnicode:(BOOL)unicode length:(long long)length;
- (int)peekAtNextToken;
- (int)readNextToken;
- (int)nextTokenPeek:(BOOL)peek;
- (int)nextTokenPeek:(BOOL)peek length:(long long)length;
- (id)nextQuotedPrintableData;
- (id)nextEscapedCharacter;
- (id)nextSingleByteStringInEncoding:(unsigned long long)encoding quotedPrintable:(BOOL)printable stopTokens:(int)tokens trim:(BOOL)trim maximumValueLength:(unsigned long long)length;
- (void)skipToStopTokens:(int)tokens;
- (void)appendDataInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range toData:(id)data;
- (void)appendNextQuotedPrintableDataToData:(id)data;
- (void)appendNextEscapedCharacterToData:(id)data;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })emptyRangeStartingAtCursor;
- (id)stringByRoundingData:(id)data toNextWholeCharacterUsingEncoding:(unsigned long long)encoding prefixLength:(unsigned long long)length suffixLength:(unsigned long long)length maximumValueLength:(unsigned long long)length;
- (id)clipAtGraphemeClusters:(id)clusters maximumValueLength:(unsigned long long)length addEllipsisIfClipped:(BOOL)clipped;
- (id)unicodeStringByRoundingData:(id)data toNextWholeCharacterUsingEncoding:(unsigned long long)encoding prefixLength:(unsigned long long)length suffixLength:(unsigned long long)length maximumValueLength:(unsigned long long)length;
- (id)stringFromData:(id)data encoding:(unsigned long long)encoding prefixLength:(unsigned long long)length suffixLength:(unsigned long long)length;
- (id)trimData:(id)data withPrefixLength:(unsigned long long)length suffixLength:(unsigned long long)length;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeWithLength:(unsigned long long)length lTrim:(unsigned long long)trim rTrim:(unsigned long long)trim;
- (id)stringFromSubData:(id)data encoding:(unsigned long long)encoding;
- (id)nextQuotedStringValueInEncoding:(unsigned long long)encoding;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })expandRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range untilNextByteIs:(id)is;
- (id)nextUnicodeStringStopTokens:(int)tokens quotedPrintable:(BOOL)printable trim:(BOOL)trim maximumValueLength:(unsigned long long)length;
- (void)unicodeSkipToStopTokens:(int)tokens;
- (BOOL)_applyNextStringInEncoding:(unsigned long long)encoding quotedPrintable:(BOOL)printable stopTokens:(int)tokens trim:(BOOL)trim maximumValueLength:(unsigned long long)length intoString:(id)string;
- (id)nextStringInEncoding:(unsigned long long)encoding quotedPrintable:(BOOL)printable stopTokens:(int)tokens trim:(BOOL)trim maximumValueLength:(unsigned long long)length;
- (int)tokenAtCursor;
- (unsigned short)charAtPosition:(unsigned long long)position withOffset:(long long)offset;
- (id)stringWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range encoding:(unsigned long long)encoding;
- (id)dataWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)nextArraySeperatedByToken:(int)token stoppingAt:(int)at inEncoding:(unsigned long long)encoding maximumValueLength:(unsigned long long)length;
- (int)tokenAtCursorIgnoringLineFolding;
- (id)nextUnicodeBase64Line:(BOOL *)line;
- (id)nextSingleByteBase64Line:(BOOL *)line;
- (id)nextBase64Line:(BOOL *)line;
- (id)nextBase64Data;
- (void)advanceToPeekPoint;
- (long long)advanceToUnicodeString;
- (long long)advanceToSingleByteString;
- (long long)advanceToString;
- (BOOL)advanceToToken:(int)token throughTypes:(long long)types;
- (BOOL)advanceToEOLUnicode;
- (BOOL)advanceToEOLSingle;
- (BOOL)advanceToEOL;
- (BOOL)advancePastEOLUnicode;
- (BOOL)advancePastEOLSingle;
- (BOOL)advancePastEOL;
- (BOOL)atEOF;
- (BOOL)advancedPastToken:(int)token;
@end

#endif /* CNVCardLexer_h */
