//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef CLKUICurvedLabel_h
#define CLKUICurvedLabel_h
@import Foundation;

#include "UILabel.h"
#include "CLKUILabel-Protocol.h"

@class NSAttributedString, NSLayoutManager, NSNumber, NSString, NSTextContainer, NSTextStorage, UIColor, UIFont, UIView;

@interface CLKUICurvedLabel : UILabel<CLKUILabel> {
  /* instance variables */
  NSTextStorage *_textStorage;
  NSLayoutManager *_layoutManager;
  NSTextContainer *_textContainer;
  BOOL _storageIsNonAttributedText;
  BOOL _storageIsEmpty;
  double _maxTextWidth;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cachedBounds;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _cachedGlyphsBoundingRect;
  struct CGSize { double width; double height; } _cachedSize;
  BOOL _cachedSizeIsValid;
  NSAttributedString *_attributedStringWithoutColorModification;
  NSAttributedString *_attributedStringUnmodified;
  double _viewAlpha;
  BOOL _hasMonospacedNumbers;
}

@property (nonatomic) double circleRadius;
@property (nonatomic) BOOL interior;
@property (nonatomic) double centerAngle;
@property (nonatomic) double maxAngularWidth;
@property (readonly, nonatomic) double maxLinearWidth;
@property (readonly, nonatomic) double maxLinearTextWidth;
@property (readonly, nonatomic) BOOL isTextTruncated;
@property (nonatomic) double tracking;
@property (nonatomic) BOOL attributedTextProvidesColor;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } textBoundingRect;
@property (nonatomic) unsigned long long imagePlacement;
@property (nonatomic) double imagePadding;
@property (weak, nonatomic) UIView *imageView;
@property (nonatomic) double animationAlpha;
@property (nonatomic) struct CGSize { double x0; double x1; } imageViewOverrideSize;
@property (retain, nonatomic) UIFont *font;
@property (retain, nonatomic) UIColor *textColor;
@property (nonatomic) long long textAlignment;
@property (readonly, nonatomic) double _lastLineBaseline;
@property (copy, nonatomic) NSString *text;
@property (copy, nonatomic) NSAttributedString *attributedText;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } opticalInsets;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)dealloc;
- (double)_extraWidthForImage;
- (void)_updateMaxSize;
- (void)_updateTextColor;
- (void)setAlpha:(double)alpha;
- (double)alpha;
- (void)setNumberOfLines:(long long)lines;
- (void)_setAttributedText:(id)text;
- (void)_updateTracking;
- (void)setImageView:(id)view placement:(unsigned long long)placement padding:(double)padding;
- (BOOL)_hasImage;
- (void)invalidateCachedSize;
- (void)layoutSubviews;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)traitCollectionDidChange:(id)change;
- (void)drawTextInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_drawableCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (struct __CTLine *)_newLineFromDrawableTextStorage;
- (void)getTextCenter:(struct CGPoint { double x0; double x1; } *)center startAngle:(double *)angle endAngle:(double *)angle;
- (struct CGPoint { double x0; double x1; })_offsetOfBoundingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_glyphsBoundingRect;
- (double)_distance;
- (void)_enumerateTransformsForDrawableCharacters:(id /* block */)characters;
- (void)_transformForImage:(id /* block */)image;
- (void)_enumerateTransforms:(BOOL)transforms callback:(id /* block */)callback;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_imageBounds;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transformForImage;
- (struct CGPoint { double x0; double x1; })centerForImage;
@end

#endif /* CLKUICurvedLabel_h */
