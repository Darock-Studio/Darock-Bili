//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef CLKUIQuadView_h
#define CLKUIQuadView_h
@import Foundation;

#include "UIView.h"
#include "CLKUIQuadViewRenderCoordinator.h"

@class NSArray, NSCountedSet, NSMutableArray, NSString;
@protocol CLKUIQuadViewDelegate, OS_dispatch_queue, OS_dispatch_semaphore;

@interface CLKUIQuadView : UIView {
  /* instance variables */
  NSMutableArray *_mutableQuads;
  CLKUIQuadViewRenderCoordinator *_renderCoordinator;
  struct { unsigned int x :1 quadViewWillDisplay; } _delegateRespondsTo;
  unsigned int _debugId;
  NSCountedSet *_disabledRenderingReasons;
  NSObject<OS_dispatch_queue> *_asyncRenderQueue;
  NSObject<OS_dispatch_semaphore> *_asyncSemaphore;
}

@property (weak, nonatomic) NSObject<CLKUIQuadViewDelegate> *delegate;
@property (readonly, nonatomic) NSArray *quads;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } drawableSize;
@property (nonatomic) BOOL paused;
@property (nonatomic) long long preferredFramesPerSecond;
@property (readonly, nonatomic) unsigned long long frameNum;
@property (nonatomic) BOOL singleBufferMode;
@property (readonly, copy, nonatomic) NSString *debugIdentifier;

/* class methods */
+ (id)quadViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame identifier:(id)identifier options:(unsigned long long)options colorSpace:(long long)space;
+ (id)quadViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame identifier:(id)identifier options:(unsigned long long)options;
+ (id)quadViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame identifier:(id)identifier;

/* instance methods */
- (void)_runOnRenderQueueIfNeeded:(id /* block */)needed;
- (BOOL)renderSynchronouslyWithImageQueueDiscard:(BOOL)discard inGroup:(id)group;
- (BOOL)renderSynchronouslyWithImageQueueDiscard:(BOOL)discard inGroup:(id)group completion:(id /* block */)completion;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame identifier:(id)identifier options:(unsigned long long)options asyncRenderQueue:(id)queue;
- (void)dealloc;
- (void)addDisabledRenderingReason:(id)reason;
- (void)removeDisabledRenderingReason:(id)reason;
- (void)_prepareAndRenderForTime:(double)time inGroup:(id)group checkForDrawable:(BOOL)drawable renderDiscontinuity:(BOOL)discontinuity completion:(id /* block */)completion;
- (void)_async_prepareAndRenderForTime:(double)time inGroup:(id)group checkForDrawable:(BOOL)drawable renderDiscontinuity:(BOOL)discontinuity completion:(id /* block */)completion;
- (BOOL)_sync_prepareAndRenderForTime:(double)time inGroup:(id)group checkForDrawable:(BOOL)drawable renderDiscontinuity:(BOOL)discontinuity completion:(id /* block */)completion;
- (void)enumerateHierarchyObserversFromView:(id)view withBlock:(id /* block */)block;
- (void)willMoveToWindow:(id)window;
- (void)didMoveToWindow;
- (BOOL)isPaused;
- (void)addQuad:(id)quad;
- (void)addQuadsFromArray:(id)array;
- (void)removeQuad:(id)quad;
- (void)removeAllQuads;
- (void)_prerenderForTime:(double)time;
- (id)snapshotInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect scale:(double)scale time:(double)time;
- (BOOL)_displayAndCheckForDrawable:(BOOL)drawable renderDiscontinuity:(BOOL)discontinuity withCompletion:(id /* block */)completion;
- (void)_handleQuadArrayChange:(id)change;
- (void)discardContents;
@end

#endif /* CLKUIQuadView_h */
