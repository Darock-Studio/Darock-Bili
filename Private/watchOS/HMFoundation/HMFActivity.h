//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 767.3.3.0.0
//
#ifndef HMFActivity_h
#define HMFActivity_h
@import Foundation;

#include "HMFObject.h"
#include "HMFActivity.h"
#include "HMFActivityMarking-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFObject-Protocol.h"

@class NSArray, NSMutableDictionary, NSMutableSet, NSString, NSUUID;
@protocol OS_os_activity, OS_voucher;

@interface HMFActivity : HMFObject<HMFLogging, HMFObject, HMFActivityMarking> {
  /* instance variables */
  NSObject<OS_os_activity> *_internal;
  NSObject<OS_voucher> *_voucher;
  NSMutableSet *_threadContexts;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableDictionary *_associatedObjects;
  NSArray *_internalAssertions;
  unsigned long long _startMachTime;
}

@property (copy, nonatomic) NSString *clientMetricIdentifier;
@property (readonly, copy) NSUUID *identifier;
@property (readonly, weak) HMFActivity *parent;
@property (readonly, copy) NSString *name;
@property (readonly) unsigned long long assertions;
@property (readonly) unsigned long long options;
@property (readonly) BOOL valid;
@property (readonly) BOOL started;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *shortDescription;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly, copy, nonatomic) NSArray *attributeDescriptions;

/* class methods */
+ (id)currentClientMetricIdentifier;
+ (void)activityWithName:(id)name block:(id /* block */)block;
+ (void)activityWithName:(id)name parent:(id)parent block:(id /* block */)block;
+ (void)activityWithName:(id)name parent:(id)parent assertions:(unsigned long long)assertions block:(id /* block */)block;
+ (void)activityWithName:(id)name parent:(id)parent options:(unsigned long long)options block:(id /* block */)block;
+ (id)bundleIdentifier;
+ (void)initialize;
+ (id)_currentActivity;
+ (id)currentActivity;
+ (id)currentActivityForMarking;
+ (void)markCurrentActivity;
+ (void)markCurrentActivityWithReason:(id)reason;
+ (void)markCurrentActivityWithFormat:(id)format;
+ (id)shortDescription;
+ (id)logCategory;

/* instance methods */
- (id)init;
- (id)initWithName:(id)name;
- (id)initWithName:(id)name parent:(id)parent;
- (id)initWithName:(id)name parent:(id)parent assertions:(unsigned long long)assertions;
- (id)initWithName:(id)name parent:(id)parent options:(unsigned long long)options;
- (id)initWithIdentifier:(id)identifier name:(id)name parent:(id)parent assertions:(id)assertions;
- (id)initWithIdentifier:(id)identifier name:(id)name parent:(id)parent options:(unsigned long long)options;
- (void)dealloc;
- (BOOL)hasStarted;
- (BOOL)isValid;
- (void)invalidate;
- (void)begin;
- (void)end;
- (void)mark;
- (void)markWithFormat:(id)format;
- (void)markWithReason:(id)reason;
- (id /* block */)blockWithBlock:(id /* block */)block;
- (id /* block */)blockWithQualityOfService:(long long)service block:(id /* block */)block;
- (void)performBlock:(id /* block */)block;
- (void)_setAssociatedObject:(id)object forKey:(id)key;
- (id)_associatedObjectForKey:(id)key;
- (void)synchronizeWithActivityLock:(id /* block */)lock;
- (id)logIdentifier;
@end

#endif /* HMFActivity_h */
