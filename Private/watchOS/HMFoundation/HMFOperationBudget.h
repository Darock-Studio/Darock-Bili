//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 767.3.3.0.0
//
#ifndef HMFOperationBudget_h
#define HMFOperationBudget_h
@import Foundation;

#include "HMFObject.h"
#include "HMFLogging-Protocol.h"
#include "HMFTimer.h"
#include "HMFTimerDelegate-Protocol.h"

@class NSString;

@interface HMFOperationBudget : HMFObject<HMFLogging, HMFTimerDelegate> {
  /* instance variables */
  struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } ourl_lock; unsigned int ourl_count; } _lock;
  HMFTimer *_timer;
}

@property (readonly, nonatomic) unsigned long long limit;
@property (readonly, nonatomic) struct _HMFRate { unsigned long long x0; double x1; } rate;
@property (readonly) unsigned long long value;
@property (readonly) BOOL full;
@property (readonly) BOOL empty;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
+ (id)logCategory;

/* instance methods */
- (id)init;
- (id)initWithLimit:(unsigned long long)limit rate:(struct _HMFRate { unsigned long long x0; double x1; })rate;
- (BOOL)isFull;
- (BOOL)isEmpty;
- (void)reset;
- (BOOL)decrement;
- (BOOL)decrementByCount:(unsigned long long)count;
- (void)timerDidFire:(id)fire;
@end

#endif /* HMFOperationBudget_h */
