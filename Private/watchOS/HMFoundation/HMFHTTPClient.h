//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 767.3.3.0.0
//
#ifndef HMFHTTPClient_h
#define HMFHTTPClient_h
@import Foundation;

#include "HMFObject.h"
#include "HMFHTTPClientConfiguration.h"
#include "HMFLogging-Protocol.h"
#include "HMFNetManager.h"
#include "HMFNetMonitor.h"
#include "HMFNetMonitorDelegate-Protocol.h"
#include "HMFNetService.h"
#include "HMFTimer.h"
#include "HMFTimerDelegate-Protocol.h"
#include "NSURLSessionDelegate-Protocol.h"

@class NSOperationQueue, NSString, NSURL, NSURLSession;
@protocol HMFHTTPClientDelegate, OS_dispatch_queue;

@interface HMFHTTPClient : HMFObject<HMFLogging, HMFNetMonitorDelegate, HMFTimerDelegate, NSURLSessionDelegate> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<OS_dispatch_queue> *_queue;
}

@property (readonly, nonatomic) NSURLSession *session;
@property (nonatomic) BOOL active;
@property (readonly, nonatomic) HMFNetMonitor *reachabilityMonitor;
@property (readonly, nonatomic) NSOperationQueue *reachabilityProbeQueue;
@property (readonly, nonatomic) HMFNetManager *netManager;
@property (retain, nonatomic) HMFTimer *delegatedPingTimer;
@property (nonatomic) BOOL pinging;
@property (nonatomic) BOOL reachable;
@property (copy) id /* block */ timerFactory;
@property (weak) NSObject<HMFHTTPClientDelegate> *delegate;
@property (readonly, copy, nonatomic) NSURL *baseURL;
@property (readonly, copy, nonatomic) HMFNetService *netService;
@property (readonly, nonatomic) unsigned long long options;
@property (nonatomic) BOOL allowAnonymousConnection;
@property (readonly, copy) HMFHTTPClientConfiguration *configuration;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)baseURLWithScheme:(id)scheme hostAddress:(id)address port:(unsigned long long)port;
+ (id)logCategory;

/* instance methods */
- (id)init;
- (id)initWithBaseURL:(id)url options:(unsigned long long)options;
- (id)initWithBaseURL:(id)url configuration:(id)configuration;
- (id)initWithBaseURL:(id)url configuration:(id)configuration netManager:(id)manager;
- (id)initWithBaseURL:(id)url configuration:(id)configuration session:(id)session reachabilityMonitor:(id)monitor netManager:(id)manager;
- (id)initWithNetService:(id)service options:(unsigned long long)options;
- (id)initWithService:(id)service configuration:(id)configuration;
- (id)initWithService:(id)service configuration:(id)configuration netManager:(id)manager;
- (id)initWithService:(id)service configuration:(id)configuration session:(id)session reachabilityMonitor:(id)monitor netManager:(id)manager;
- (id)createNSURLSession:(id)nsurlsession;
- (void)finishCommonInitialization;
- (void)dealloc;
- (id)attributeDescriptions;
- (BOOL)isReachable;
- (BOOL)isPinging;
- (void)startReachabilityProbe;
- (BOOL)requestClientReachabilityPingWithRetry:(BOOL)retry;
- (void)startDelegatedPingTimer;
- (void)stopDelegatedPingTimer;
- (void)sendRequest:(id)request completionHandler:(id /* block */)handler;
- (void)_sendRequest:(id)request baseURL:(id)url completionHandler:(id /* block */)handler;
- (void)cancelPendingRequests;
- (void)invalidate;
- (void)resolveWithCompletionHandler:(id /* block */)handler;
- (id)logIdentifier;
- (void)networkMonitorIsReachable:(id)reachable;
- (void)networkMonitorIsUnreachable:(id)unreachable;
- (void)timerDidFire:(id)fire;
- (void)URLSession:(id)urlsession didBecomeInvalidWithError:(id)error;
- (void)URLSession:(id)urlsession didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (BOOL)isActive;
@end

#endif /* HMFHTTPClient_h */
