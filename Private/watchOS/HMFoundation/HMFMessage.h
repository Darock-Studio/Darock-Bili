//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 767.3.3.0.0
//
#ifndef HMFMessage_h
#define HMFMessage_h
@import Foundation;

#include "HMFObject.h"
#include "HMFActivity.h"
#include "HMFFlow.h"
#include "HMFMessageDestination.h"
#include "HMFMessageInternal.h"
#include "HMFMessageTransport.h"
#include "NSCopying-Protocol.h"
#include "NSMutableCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDictionary, NSString, NSUUID;

@interface HMFMessage : HMFObject<NSCopying, NSMutableCopying, NSSecureCoding>

@property (readonly, copy) HMFFlow *flow;
@property (readonly, nonatomic) HMFMessageInternal *internal;
@property (copy, nonatomic) NSUUID *identifier;
@property (retain, nonatomic) HMFMessageDestination *destination;
@property (copy, nonatomic) NSDictionary *messagePayload;
@property (copy, nonatomic) id /* block */ responseHandler;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, nonatomic) double timeout;
@property (readonly, nonatomic) long long qualityOfService;
@property (readonly, nonatomic) NSString *untrustedClientIdentifier;
@property (readonly, weak, nonatomic) HMFMessageTransport *transport;
@property (readonly, nonatomic) HMFActivity *activity;
@property (readonly, copy, nonatomic) NSDictionary *userInfo;
@property (readonly, copy, nonatomic) NSDictionary *headers;

/* class methods */
+ (id)messageWithName:(id)name messagePayload:(id)payload;
+ (id)messageWithName:(id)name messagePayload:(id)payload responseHandler:(id /* block */)handler;
+ (id)messageWithName:(id)name identifier:(id)identifier messagePayload:(id)payload;
+ (id)messageWithMessage:(id)message messagePayload:(id)payload;
+ (id)messageWithMessage:(id)message messagePayload:(id)payload responseHandler:(id /* block */)handler;
+ (id)activityNameWithMessageName:(id)name;
+ (id)messageWithName:(id)name destination:(id)destination payload:(id)payload;
+ (id)messageWithName:(id)name qualityOfService:(long long)service destination:(id)destination payload:(id)payload;
+ (id)shortDescription;
+ (BOOL)supportsSecureCoding;
+ (id)allowedClassesForXPC;

/* instance methods */
- (id)uuidForKey:(id)key;
- (id)stringForKey:(id)key;
- (id)numberForKey:(id)key;
- (BOOL)boolForKey:(id)key;
- (BOOL)boolForKey:(id)key keyPresent:(BOOL *)present;
- (id)dictionaryForKey:(id)key;
- (id)arrayForKey:(id)key;
- (id)setForKey:(id)key;
- (id)dataForKey:(id)key;
- (id)dateForKey:(id)key;
- (id)nullForKey:(id)key;
- (id)timeZoneForKey:(id)key;
- (id)dateComponentsForKey:(id)key;
- (id)URLForKey:(id)key;
- (id)errorForKey:(id)key;
- (id)calendarForKey:(id)key;
- (id)predicateForKey:(id)key;
- (id)arrayOfDateComponentsForKey:(id)key;
- (id)unarchivedObjectForKey:(id)key ofClasses:(id)classes;
- (id)fileHandleForKey:(id)key;
- (id)initWithName:(id)name identifier:(id)identifier messagePayload:(id)payload responseHandler:(id /* block */)handler;
- (BOOL)respondWithOutcomeOf:(id)of;
- (id)init;
- (id)initWithName:(id)name destination:(id)destination payload:(id)payload;
- (id)initWithName:(id)name qualityOfService:(long long)service destination:(id)destination payload:(id)payload;
- (id)initWithName:(id)name qualityOfService:(long long)service destination:(id)destination userInfo:(id)info headers:(id)headers payload:(id)payload;
- (id)initWithInternalMessage:(id)message;
- (void)__initWithInternalMessage:(id)message;
- (id)shortDescription;
- (id)descriptionWithPointer:(BOOL)pointer;
- (id)debugDescription;
- (id)description;
- (id)logEventSession;
- (void)setLogEventSession:(id)session;
- (BOOL)respondWithSuccess;
- (BOOL)respondWithPayload:(id)payload;
- (BOOL)respondWithError:(id)error;
- (BOOL)respondWithPayload:(id)payload error:(id)error;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopy;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* HMFMessage_h */
