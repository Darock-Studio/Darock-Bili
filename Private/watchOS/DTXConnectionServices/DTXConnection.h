//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 64562.3.1.1.0
//
#ifndef DTXConnection_h
#define DTXConnection_h
@import Foundation;

#include "DTXBlockCompressor-Protocol.h"
#include "DTXChannel.h"
#include "DTXConnectionRemoteReceiveQueueCalls-Protocol.h"
#include "DTXMessageParser.h"
#include "DTXMessageTransmitter.h"
#include "DTXMessenger-Protocol.h"
#include "DTXResourceTracker.h"
#include "DTXTransport.h"

@class NSDictionary, NSMutableArray, NSMutableDictionary, NSSet, NSString;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface DTXConnection : NSObject<DTXConnectionRemoteReceiveQueueCalls, DTXMessenger> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_outgoing_message_queue;
  NSObject<OS_dispatch_queue> *_outgoing_control_queue;
  DTXTransport *_controlTransport;
  NSSet *_permittedBlockCompressors;
  NSObject<OS_dispatch_queue> *_receive_queue;
  NSObject<OS_dispatch_queue> *_handler_queue;
  unsigned int _nextChannelCode;
  NSMutableDictionary *_channelsByCode;
  NSMutableDictionary *_unconfiguredChannelsByCode;
  NSMutableDictionary *_handlersByIdentifier;
  NSMutableArray *_protocolHandlers;
  NSMutableDictionary *_localCapabilityVersions;
  NSMutableDictionary *_localCapabilityClasses;
  NSDictionary *_remoteCapabilityVersions;
  NSMutableArray *_capabilityOverrideBlocks;
  DTXResourceTracker *_resourceTracker;
  DTXResourceTracker *_incomingResourceTracker;
  NSObject<OS_dispatch_semaphore> *_firstMessageSem;
  DTXMessageParser *_incomingParser;
  DTXMessageTransmitter *_outgoingTransmitter;
  int _connectionIndex;
  id /* block */ _channelHandler;
  unsigned long long _logMessageCallstackSizeThreshold;
  int _remoteCompressionCapabilityVersion;
  int _newChannelCompressionHint;
  int _compressionTypeForUnspecified;
  unsigned long long _compressionMinSizeThreshold;
  NSObject<DTXBlockCompressor> *_compressor;
}

@property (readonly, retain, nonatomic) DTXChannel *defaultChannel;
@property (readonly, nonatomic) int atomicConnectionNumber;
@property (nonatomic) BOOL tracer;
@property (nonatomic) BOOL remoteTracer;
@property (nonatomic) unsigned long long maximumEnqueueSize;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *label;

/* class methods */
+ (void)observeDecompressionExceptionLogging:(id /* block */)logging;
+ (void)initialize;
+ (void)registerTransport:(Class)transport forScheme:(id)scheme;
+ (id)connectionToAddress:(id)address;

/* instance methods */
- (id)_testing_remoteCapabilityVersions;
- (void)overridePermittedBlockCompressors:(id)compressors;
- (void)replaceCompressorForCompression:(id)compression;
- (void)replaceCompressorForDecompression:(id)decompression;
- (void)handleProxyRequestForInterface:(id)interface peerInterface:(id)interface handler:(id /* block */)handler;
- (void)handleProxyRequestForInterface:(id)interface interfaceName:(id)name peerInterface:(id)interface peerInterfaceName:(id)name handler:(id /* block */)handler;
- (void)_handleProxyRequestForInterface:(id)interface interfaceName:(id)name peerInterface:(id)interface peerInterfaceName:(id)name handler:(id /* block */)handler;
- (id)makeProxyChannelWithRemoteInterface:(id)interface exportedInterface:(id)interface;
- (id)makeProxyChannelWithRemoteInterface:(id)interface remoteInterfaceName:(id)name exportedInterface:(id)interface exportedInterfaceName:(id)name;
- (id)_makeProxyChannelWithRemoteInterface:(id)interface remoteInterfaceName:(id)name exportedInterface:(id)interface exportedInterfaceName:(id)name;
- (void)publishServicesInImagePath:(id)path;
- (void)setCompressionHint:(int)hint forChannel:(id)channel;
- (void)_handleMessageParseException:(id)exception forChannelCode:(unsigned int)code messageID:(unsigned int)id fragmentCount:(unsigned int)count withPayloadBytes:(const void *)bytes ofLength:(unsigned long long)length;
- (void)_setupWireProtocols;
- (id)initWithTransport:(id)transport;
- (void)dealloc;
- (id)publishedAddresses;
- (void)publishCapability:(id)capability withVersion:(int)version forClass:(Class)class;
- (BOOL)publishCapability:(id)capability withVersion:(int)version forClass:(Class)class error:(id *)error;
- (id)localCapabilities;
- (id)_sendHeartbeatAsyncWithTimeout:(double)timeout;
- (double)preflightSynchronouslyWithTimeout:(double)timeout;
- (void)_handleMissingRemoteCapabilities;
- (int)remoteCapabilityVersion:(id)version;
- (void)registerCapabilityOverrideBlock:(id /* block */)block;
- (id)remoteCapabilityVersions;
- (void)suspend;
- (void)resume;
- (void)setMessageHandler:(id /* block */)handler;
- (void)setDispatchTarget:(id)target;
- (void)setChannelHandler:(id /* block */)handler;
- (void)registerDisconnectHandler:(id /* block */)handler;
- (void)cancel;
- (void)cancelWithSerializedTransport:(id /* block */)transport;
- (void)_cancelInternal:(id /* block */)internal;
- (void)sendControlAsync:(id)async replyHandler:(id /* block */)handler;
- (void)sendControlSync:(id)sync replyHandler:(id /* block */)handler;
- (BOOL)sendMessageAsync:(id)async replyHandler:(id /* block */)handler;
- (void)sendMessage:(id)message replyHandler:(id /* block */)handler;
- (void)sendMessageSync:(id)sync replyHandler:(id /* block */)handler;
- (BOOL)sendMessage:(id)message fromChannel:(id)channel sendMode:(int)mode syncWithReply:(BOOL)reply replyHandler:(id /* block */)handler;
- (BOOL)_addHandler:(id /* block */)handler forMessage:(unsigned int)message channel:(id)channel;
- (void)_routeMessage:(id)message;
- (void)_scheduleMessage:(id)message toChannel:(id)channel;
- (id)makeChannelWithIdentifier:(id)identifier;
- (void)_unregisterChannel:(id)channel;
- (void)_requestChannelWithCode:(unsigned int)code identifier:(id)identifier;
- (void)_notifyOfPublishedCapabilities:(id)capabilities;
- (void)_channelCanceled:(unsigned int)canceled;
- (void)_setTracerState:(unsigned int)state;
- (void)_receiveQueueSetCompressionHint:(unsigned int)hint onChannel:(id)channel;
- (void)_notifyCompressionHint:(unsigned int)hint forChannelCode:(unsigned int)code;
@end

#endif /* DTXConnection_h */
