//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 379.2.3.0.0
//
#ifndef BLTBulletinDistributorSubscriber_h
#define BLTBulletinDistributorSubscriber_h
@import Foundation;

#include "BLTBulletinDistributorSubscriberDelegate-Protocol.h"
#include "BLTBulletinDistributorSubscriberDeviceDelegate-Protocol.h"
#include "BLTPingService-Protocol.h"
#include "BLTPingSubscribing-Protocol.h"

@class NSMutableDictionary, NSSet, NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface BLTBulletinDistributorSubscriber : NSObject<BLTPingService> {
  /* instance variables */
  NSMutableDictionary *_subscriptions;
  NSObject<OS_dispatch_queue> *_queue;
}

@property (retain, nonatomic) NSObject<BLTPingSubscribing> *client;
@property (retain, nonatomic) NSXPCConnection *connection;
@property (copy) NSString *machServiceName;
@property (weak) NSObject<BLTBulletinDistributorSubscriberDelegate> *delegate;
@property (weak) NSObject<BLTBulletinDistributorSubscriberDeviceDelegate> *deviceDelegate;
@property (readonly, nonatomic) NSSet *sectionIDs;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithClient:(id)client;
- (void)subscribeToSectionID:(id)id forFullBulletins:(BOOL)bulletins withAck:(BOOL)ack ackAllowedOnLocalConnection:(BOOL)connection;
- (void)unsubscribeFromSectionID:(id)id;
- (void)pingWithBulletin:(id)bulletin ack:(id /* block */)ack;
- (void)pingWithRecordID:(id)id forSectionID:(id)id;
- (void)getWillNanoPresentNotificationForSectionID:(id)id completion:(id /* block */)completion;
- (void)getWillNanoPresentNotificationForSectionID:(id)id subsectionIDs:(id)ids completion:(id /* block */)completion;
- (void)sendBulletinSummary:(id)summary;
- (void)subscribeWithMachServiceName:(id)name;
- (void)_connectIfNecessary;
@end

#endif /* BLTBulletinDistributorSubscriber_h */
