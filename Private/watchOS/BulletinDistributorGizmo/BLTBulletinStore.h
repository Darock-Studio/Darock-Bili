//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 379.2.3.0.0
//
#ifndef BLTBulletinStore_h
#define BLTBulletinStore_h
@import Foundation;

@class NSDate, NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface BLTBulletinStore : NSObject {
  /* instance variables */
  NSMutableDictionary *_bulletins;
  NSMutableArray *_replyInfos;
  NSObject<OS_dispatch_queue> *_queue;
  struct sqlite3 * _db;
  struct sqlite3_stmt * _fetchBulletin;
  struct sqlite3_stmt * _fetchBulletins;
  struct sqlite3_stmt * _fetchActions;
  struct sqlite3_stmt * _deleteBulletin;
  struct sqlite3_stmt * _deleteActions;
  struct sqlite3_stmt * _upsertBulletin;
  struct sqlite3_stmt * _upsertAction;
  struct sqlite3_stmt * _fetchReplyInfos;
  struct sqlite3_stmt * _deleteReplyInfo;
  struct sqlite3_stmt * _upsertReplyInfo;
  struct sqlite3_stmt * _deleteExpiredReplyInfos;
  struct sqlite3_stmt * _fetchAttachment;
  struct sqlite3_stmt * _fetchAttachments;
  struct sqlite3_stmt * _deleteAttachment;
  struct sqlite3_stmt * _upsertAttachment;
  NSDate *_bulletinPurgeTime;
}

@property (nonatomic) int databaseUserVersion;

/* class methods */
+ (id)databasePath;

/* instance methods */
- (id)init;
- (id)initWithDatabasePath:(id)path;
- (void)dealloc;
- (void)addBulletin:(id)bulletin forDestinations:(unsigned long long)destinations;
- (void)addBulletin:(id)bulletin forDestinations:(unsigned long long)destinations completion:(id /* block */)completion;
- (void)removeBulletinWithPublisherBulletinID:(id)id recordID:(id)id sectionID:(id)id;
- (void)removeBulletinWithPublisherBulletinID:(id)id recordID:(id)id sectionID:(id)id completion:(id /* block */)completion;
- (void)removeBulletinsInSectionID:(id)id;
- (id)bulletinsWithSectionID:(id)id;
- (id)bulletinBySectionID;
- (id)replyInfos;
- (void)addReplyInfo:(id)info;
- (void)removeExpiredReplyInfos;
- (void)removeReplyInfos:(id)infos;
- (void)_purgeOldBulletins;
- (BOOL)_bulletin:(id)_bulletin matchesPublisherBulletinID:(id)id orRecordID:(id)id;
- (BOOL)_containsBulletin:(id)bulletin;
- (BOOL)_createBulletinTable;
- (BOOL)_createActionTable;
- (BOOL)_createReplyInfoTable;
- (BOOL)_createAttachmentTable;
- (BOOL)_table:(const char *)_table containsColumn:(const char *)column;
- (void)_upgradeDatabase;
- (void)performMigration:(SEL)migration ifDatabaseUserVersionLessThan:(int)than;
- (BOOL)executeSql:(id)sql handlerBlock:(id /* block */)block;
- (BOOL)executeSql:(id)sql;
- (BOOL)executeSqlTransaction:(id)transaction;
- (void)migrationAddIdentifierToAttachmentPrimaryKey;
- (void)_addColumnWithName:(const char *)name andType:(const char *)type toTableWithName:(const char *)name;
- (BOOL)_createDatabaseAtPath:(id)path withFilename:(id)filename;
- (BOOL)_databaseIntegrityCheck;
- (BOOL)_truncateDatabase;
- (BOOL)_prepareStatements;
- (void)_upsertAction:(id)action actionType:(unsigned long long)type forBulletin:(id)bulletin;
- (void)_upsertBulletin:(id)bulletin;
- (void)_upsertReplyInfo:(id)info;
- (void)_upsertAttachment:(id)attachment forBulletin:(id)bulletin;
- (void)_deleteBulletin:(id)bulletin withPublisherBulletinID:(id)id;
- (void)_removeContactIconsForBulletin:(id)bulletin;
- (void)_deleteBulletin:(id)bulletin;
- (void)_removeAttachmentsForBulletins:(id)bulletins;
- (void)_deleteAttachment:(id)attachment forBulletin:(id)bulletin;
- (void)_deleteActionsForBulletinWithPublisherBulletinID:(id)id sectionID:(id)id;
- (void)_deleteReplyInfo:(id)info;
- (void)_deleteExpiredReplyInfos;
- (id)_fetchBulletinWithPublisherBulletinID:(id)id sectionID:(id)id;
- (id)_fetchBulletins;
- (id)_fetchBulletinFromStatement:(struct sqlite3_stmt *)statement;
- (void)_fetchActionsForBulletin:(id)bulletin;
- (void)_fetchAttachmentsForBulletin:(id)bulletin;
- (id)_fetchAttachmentWithPublisherMatchID:(id)id sectionID:(id)id identifier:(id)identifier;
- (id)_fetchAttachmentFromStatement:(struct sqlite3_stmt *)statement;
- (void)_addBulletin:(id)bulletin;
- (id)_fetchReplyInfos;
@end

#endif /* BLTBulletinStore_h */
