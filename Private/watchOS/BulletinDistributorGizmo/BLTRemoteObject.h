//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 379.2.3.0.0
//
#ifndef BLTRemoteObject_h
#define BLTRemoteObject_h
@import Foundation;

#include "BLTAbstractIDSDevice-Protocol.h"
#include "BLTAbstractIDSService-Protocol.h"
#include "BLTPBProtobufSequenceNumberManager.h"
#include "BLTSimpleCache.h"
#include "IDSServiceDelegate-Protocol.h"

@class NSLock, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface BLTRemoteObject : NSObject<IDSServiceDelegate> {
  /* instance variables */
  NSMutableDictionary *_idsSendIDToCompletionHandler;
  NSMutableDictionary *_idsSendIDToResponseHandler;
  NSMutableDictionary *_idsFileIDToResponseHandler;
  NSString *_serviceName;
  BOOL _full;
  NSObject<OS_dispatch_queue> *_idsQueue;
  NSObject<BLTAbstractIDSDevice> *_defaultPairedDevice;
  NSMutableDictionary *_idsRequestMessageTypeToSelector;
  NSLock *_sequenceNumberSendLock;
  NSObject<OS_dispatch_queue> *_connectionStatusQueue;
  unsigned long long _stateHandler;
  unsigned long long _simConnectionState;
  id _simConnectionStateHandlerToken;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly, nonatomic) NSObject<BLTAbstractIDSService> *service;
@property (readonly, nonatomic) BLTPBProtobufSequenceNumberManager *sequenceNumberManager;
@property (retain, nonatomic) BLTSimpleCache *mruCacheOfSends;
@property (retain, nonatomic) BLTSimpleCache *mruCacheOfReceives;
@property (nonatomic) unsigned long long lastKnownConnectionStatus;
@property BOOL pairedDeviceReady;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithServiceName:(id)name idsQueueName:(char *)name;
- (id)initWithServiceName:(id)name idsQueueName:(char *)name andClientQueue:(id)queue;
- (void)dealloc;
- (void)_handleNewSessionState:(unsigned long long)state;
- (BOOL)_sequenceErrorDidHappenAndHandled:(long long)handled service:(id)service incomingIdentifier:(id)identifier;
- (void)handleIDSProtobuf:(id)idsprotobuf;
- (void)_queueHandleIDSProtobuf:(id)idsprotobuf;
- (void)handleIncomingMessage:(id)message;
- (void)_sendAssertForSession;
- (void)_sendAckInitialSequenceNumberForSession:(id)session sessionState:(unsigned long long)state;
- (void)_sendAckInitialSequenceNumberForSession:(id)session withAssert:(BOOL)assert sessionState:(unsigned long long *)state;
- (void)handleAckInitialSequenceNumberRequest:(id)request;
- (void)_storeProtobufAction:(SEL)action messageType:(unsigned short)type messageSendType:(long long)type;
- (void)setProtobufAction:(SEL)action forIncomingRequestsOfType:(unsigned short)type;
- (void)setProtobufAction:(SEL)action forIncomingResponsesOfType:(unsigned short)type;
- (unsigned long long)connectionStatus;
- (void)_updateConnectionStatus;
- (void)_updateConnectionStatusWithResetDefaulteDevice:(BOOL)device;
- (void)_queueUpdateConnectionStatusWithResetDefaulteDevice:(BOOL)device;
- (void)registerProtobufHandlers;
- (void)enableStandaloneTestModeWithMinimumSendDelay:(unsigned long long)delay maximumSendDelay:(unsigned long long)delay minimumResponseDelay:(unsigned long long)delay maximumResponseDelay:(unsigned long long)delay;
- (void)disableStandaloneTestMode;
- (void)_setStandaloneTestModeEnabled:(BOOL)enabled;
- (void)sendRequest:(id)request type:(unsigned short)type;
- (void)sendRequest:(id)request type:(unsigned short)type didSend:(id /* block */)send;
- (void)sendRequest:(id)request type:(unsigned short)type withTimeout:(id)timeout didSend:(id /* block */)send;
- (void)sendRequest:(id)request type:(unsigned short)type withTimeout:(id)timeout withDescription:(id)description didSend:(id /* block */)send;
- (void)sendRequest:(id)request type:(unsigned short)type withTimeout:(id)timeout withDescription:(id)description onlyOneFor:(id)for didSend:(id /* block */)send andResponse:(id /* block */)response;
- (void)sendResponse:(id)response type:(unsigned short)type withRequest:(id)request withTimeout:(id)timeout withDescription:(id)description onlyOneFor:(id)for didSend:(id /* block */)send;
- (void)sendRequest:(id)request type:(unsigned short)type withTimeout:(id)timeout didSend:(id /* block */)send didQueue:(id /* block */)queue;
- (void)sendRequest:(id)request;
- (void)_queuePerformSend:(id /* block */)send responseToRequest:(id)request withTimeout:(id)timeout withDescription:(id)description shortDescription:(id)description onlyOneFor:(id)for allowCloudDelivery:(BOOL)delivery nonWaking:(BOOL)waking didSend:(id /* block */)send andResponse:(id /* block */)response;
- (id)_wrapError:(id)error identifier:(id)identifier;
- (void)_queueSendRequest:(id)request;
- (void)sendFileURL:(id)url withTimeout:(id)timeout extraMetadata:(id)metadata responseHandlers:(id)handlers didSend:(id /* block */)send didQueue:(id /* block */)queue;
- (void)service:(id)service devicesChanged:(id)changed;
- (void)service:(id)service nearbyDevicesChanged:(id)changed;
- (void)_deviceConnectionStatusChanged:(id)changed;
- (void)_removeAndHandleResponseHandler:(id)handler;
- (void)service:(id)service account:(id)account identifier:(id)identifier didSendWithSuccess:(BOOL)success error:(id)error;
- (BOOL)_idsQueueCallSendCompletionHandlerWithSuccess:(BOOL)success identifier:(id)identifier error:(id)error;
- (BOOL)_callSendCompletionHandlerWithSuccess:(BOOL)success identifier:(id)identifier error:(id)error;
- (void)service:(id)service account:(id)account incomingResourceAtURL:(id)url metadata:(id)metadata fromID:(id)id context:(id)context;
- (void)handleFileURL:(id)url extraMetadata:(id)metadata;
- (BOOL)isPairedDeviceReady;
@end

#endif /* BLTRemoteObject_h */
