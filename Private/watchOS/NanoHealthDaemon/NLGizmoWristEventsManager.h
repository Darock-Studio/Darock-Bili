//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1880.5.0.0.0
//
#ifndef NLGizmoWristEventsManager_h
#define NLGizmoWristEventsManager_h
@import Foundation;

#include "HDDataObserver-Protocol.h"
#include "HDProfileReadyObserver-Protocol.h"

@class CSLSOnWristMonitor, HDProfile, NSCalendar, NSDate, NSHashTable, NSString, SWWakingTimer;
@protocol OS_dispatch_queue;

@interface NLGizmoWristEventsManager : NSObject<HDProfileReadyObserver, HDDataObserver> {
  /* instance variables */
  HDProfile *_profile;
  CSLSOnWristMonitor *_onWristMonitor;
  NSObject<OS_dispatch_queue> *_internalQueue;
  NSObject<OS_dispatch_queue> *_observerQueue;
  NSObject<OS_dispatch_queue> *_timerQueue;
  NSHashTable *_observers;
  SWWakingTimer *_wakingTimer;
  int _lastNotifiedState;
  long long _wristDetectionStateErrorCounter;
  unsigned long long _lastMonitorWristState;
  NSDate *_firstOnWristDateToday;
  BOOL _isProfileReady;
  NSCalendar *_calendarOverride;
  NSDate *_dateOverride;
}

@property (readonly) unsigned long long wristState;
@property (readonly) NSDate *mostRecentOnWristDate;
@property (readonly) NSDate *firstOnWristTodayDate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)_getFirstOnWristSamplesWithProfile:(id)profile sampleType:(id)type predicate:(id)predicate ascending:(BOOL)ascending;

/* instance methods */
- (void)_setCalendarOverride:(id)override;
- (void)_setDateOverride:(id)override;
- (void)_reset;
- (id)initWithProfile:(id)profile wakingTimer:(id)timer onWristMonitor:(id)monitor;
- (void)dealloc;
- (BOOL)daemonDidReceiveNotification:(const char *)notification;
- (void)addWristEventObserver:(id)observer;
- (void)removeWristEventObserver:(id)observer;
- (void)protectedDataDidBecomeAvailable;
- (void)profileDidBecomeReady:(id)ready;
- (void)samplesAdded:(id)added anchor:(id)anchor;
- (void)_internalQueue_persistWristStateChangeToState:(unsigned long long)state date:(id)date;
- (BOOL)_internalQueue_persistSamplesToDatabase:(id)database;
- (id)_internalQueue_sortedSamplesFromDefaults;
- (void)_internalQueue_persistSamplesToDefaults:(id)defaults;
- (void)_internalQueue_transferSamplesFromDefaultsToDatabase;
- (void)_internalQueue_updateCachesFromPersistentStore;
- (id)_internalQueue_calendar;
- (id)_internalQueue_now;
- (void)_clearCachedState;
- (void)_debounceTimerFired;
- (void)_fetchWristDetectionStateWithCompletion:(id /* block */)completion;
- (void)_fetchErrorHandledWristDetectionStateWithCompletion:(id /* block */)completion;
- (void)_refreshCurrentWristDetectionAndOnWristStateIfNeeded;
- (void)_refreshCurrentWristDetectionAndOnWristState;
- (void)_refreshCurrentOnWristState;
- (void)_wristStateChangedTo:(unsigned long long)to;
- (void)_internalQueue_handleGizmoDisabledWristState;
- (void)_internalQueue_cancelDebounceTimer;
- (void)_internalQueue_handleGizmoOnWristState;
- (void)_internalQueue_handleGizmoOffWristState;
- (void)_internalQueue_onWristMonitorStateDidChangeToState:(long long)state;
- (void)_internalQueue_performLastChanceSyncAndWait;
- (void)_internalQueue_scheduleDebounceTimerAtDate:(id)date;
- (void)_internalQueue_notifyObserversForWristState:(unsigned long long)state async:(BOOL)async;
- (void)_notifyObserver:(id)observer forWristState:(unsigned long long)state;
@end

#endif /* NLGizmoWristEventsManager_h */
