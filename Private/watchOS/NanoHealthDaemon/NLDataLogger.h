//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1880.5.0.0.0
//
#ifndef NLDataLogger_h
#define NLDataLogger_h
@import Foundation;

#include "HDCurrentActivitySummaryHelperObserver-Protocol.h"
#include "HDDataObserver-Protocol.h"
#include "HDDatabaseProtectedDataObserver-Protocol.h"
#include "HDHealthDaemonReadyObserver-Protocol.h"
#include "NLBridgeSettings.h"
#include "NLBridgeSettingsObserver-Protocol.h"
#include "NLCoachingAlertNotifier.h"
#include "NLDataLog.h"
#include "NLIngestionTrackerDelegate-Protocol.h"

@class AWDServerConnection, EKEventStore, HDProfile, NSDictionary, NSString;
@protocol OS_dispatch_queue;

@interface NLDataLogger : NSObject<HDCurrentActivitySummaryHelperObserver, HDDataObserver, HDHealthDaemonReadyObserver, NLBridgeSettingsObserver, NLIngestionTrackerDelegate, HDDatabaseProtectedDataObserver> {
  /* instance variables */
  HDProfile *_profile;
  NLBridgeSettings *_bridgeSettings;
  NLCoachingAlertNotifier *_notifier;
  long long _lastUploadedActivityCacheIndex;
  NSObject<OS_dispatch_queue> *_queue;
  EKEventStore *_eventStore;
  NLDataLog *_log;
  int _activityNotifyToken;
  int _managedConfigurationNotifyToken;
  int _settingChangeNotifyToken;
  BOOL _dataCollectionEnabled;
  AWDServerConnection *_awdServerConnection;
  BOOL _logSettingsAtNextUnlock;
  BOOL _daemonReady;
  NSDictionary *_ingestionTrackers;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_isDataLogEnabled;

/* instance methods */
- (id)initWithProfile:(id)profile coachingAlertNotifier:(id)notifier bridgeSettings:(id)settings;
- (void)_queue_startTracking;
- (void)_queue_startTrackingAfterDaemonReady;
- (void)_queue_endTracking;
- (void)dealloc;
- (void)_registerForActivityAppLaunchNotifications;
- (id)_logDirectoryPath;
- (void)_onQueueIfEnabled:(id /* block */)enabled;
- (void)_queue_updateEvent:(id)event withExperimentInstance:(id)instance;
- (void)_queue_updateEvent:(id)event withAchievement:(id)achievement;
- (void)_queue_updateEvent:(id)event withWeeklySummaryInfo:(id)info lastResponseInfo:(id)info recommendedGoal:(double)goal;
- (void)_queue_updateEvent:(id)event withGoalTypes:(id)types;
- (void)_queue_updateEvent:(id)event withResponseOptionsFromActions:(id)actions;
- (id)_queue_codableActivityCacheForActivitySummary:(id)summary;
- (void)logSkippedCoachingRequest:(id)request;
- (id)_queue_concurrentCalendarItemFromEvent:(id)event;
- (id)_queue_concurrentCalendarItemForDate:(id)date;
- (void)logCoachingResponse:(id)response;
- (void)logWristOnNowIsFirst:(BOOL)first;
- (void)logWristOffNow;
- (void)logStandHourDidStand:(BOOL)stand date:(id)date;
- (void)_queue_updateCalendarSummaryForWristOnSettings:(id)settings;
- (id)_dateAsDays:(id)days;
- (id)_queue_daysSinceFirstCalorieGoal;
- (id)_dateComponentsAsAge:(id)age;
- (id)_queue_codableUserCharacteristics;
- (void)_queue_logFirstWristOnSettings;
- (void)logFirstWristOnSettings;
- (void)_queue_logExperimentalCondition:(id)condition;
- (void)logExperimentalCondition:(id)condition;
- (void)_queue_logActivityAppDidLaunch;
- (void)logActivitySummary:(id)summary;
- (id)_queue_stepsFromDate:(id)date toDate:(id)date;
- (void)_queue_logWorkout:(id)workout;
- (void)daemonReady:(id)ready;
- (void)database:(id)database protectedDataDidBecomeAvailable:(BOOL)available;
- (void)settingsDidChange:(id)change;
- (void)_registerForSettingChangeNotifications;
- (void)_queue_readDataCollectionSetting;
- (void)ingestionTracker:(id)tracker didGenerateLatencyEvent:(id)event;
- (void)samplesAdded:(id)added anchor:(id)anchor;
- (void)currentActivitySummaryHelper:(id)helper didUpdateTodayActivitySummary:(id)summary changedFields:(unsigned long long)fields;
- (void)currentActivitySummaryHelper:(id)helper didUpdateYesterdayActivitySummary:(id)summary changedFields:(unsigned long long)fields;
- (void)_queue_logCodable:(id)codable metricId:(unsigned int)id;
@end

#endif /* NLDataLogger_h */
