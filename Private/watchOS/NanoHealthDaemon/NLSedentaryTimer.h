//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1880.5.0.0.0
//
#ifndef NLSedentaryTimer_h
#define NLSedentaryTimer_h
@import Foundation;

#include "HDCurrentActivitySummaryHelperObserver-Protocol.h"
#include "HDDatabaseProtectedDataObserver-Protocol.h"
#include "HDHealthDaemonReadyObserver-Protocol.h"
#include "NLBridgeSettings.h"
#include "NLBridgeSettingsObserver-Protocol.h"
#include "NLDataLogger.h"
#include "NLGizmoWristEventsManager.h"
#include "NLSedentaryTimerStateEngine.h"
#include "NLSedentaryTimerStateEngineDelegate-Protocol.h"

@class CMSedentaryTimer, HDProfile, HKActivitySummary, NLActivityAlarmMonitor, NLExperimentInstance, NLExperimentalCondition, NSString;
@protocol NLSedentaryTimerAlertDelegate, OS_dispatch_queue;

@interface NLSedentaryTimer : NSObject<HDHealthDaemonReadyObserver, HDDatabaseProtectedDataObserver, NLSedentaryTimerStateEngineDelegate, NLBridgeSettingsObserver, HDCurrentActivitySummaryHelperObserver> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  HDProfile *_profile;
  CMSedentaryTimer *_sedentaryTimer;
  NLGizmoWristEventsManager *_wristManager;
  NLSedentaryTimerStateEngine *_sedentaryTimerStateEngine;
  NLBridgeSettings *_bridgeSettings;
  NLDataLogger *_dataLogger;
  long long _retryInCaseOfErrorCounter;
  double _reminderInterval;
  HKActivitySummary *_currentActivitySummary;
  NLExperimentalCondition *_experimentalCondition;
  NLExperimentInstance *_currentExperimentInstance;
  NLActivityAlarmMonitor *_alarmMonitor;
  int _notifyToken;
}

@property (weak, nonatomic) NSObject<NLSedentaryTimerAlertDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithProfile:(id)profile bridgeSettings:(id)settings wristManager:(id)manager dataLogger:(id)logger;
- (void)_registerForFakeStandTriggerNotifications;
- (void)currentActivitySummaryHelper:(id)helper didUpdateTodayActivitySummary:(id)summary changedFields:(unsigned long long)fields;
- (void)currentActivitySummaryHelper:(id)helper didUpdateYesterdayActivitySummary:(id)summary changedFields:(unsigned long long)fields;
- (void)privacySettingsDidChange:(id)change;
- (void)database:(id)database protectedDataDidBecomeAvailable:(BOOL)available;
- (void)daemonReady:(id)ready;
- (long long)timerState;
- (long long)_sedentaryTimerState;
- (void)startSedentaryTimerIfPossibleWithDelay:(BOOL)delay;
- (void)stopSedentaryTimer;
- (BOOL)daemonDidReceiveNotification:(const char *)notification;
- (BOOL)_canStartSedentaryTimer;
- (void)_checkIfSedentaryTimerNeedsStartWithDelay:(BOOL)delay;
- (void)_checkIfSedentaryTimerNeedsStop;
- (void)_registerDaemonLaunchForSedentaryTimerFiredNotification;
- (id)_timer;
- (void)_queue_stopSedentaryTimerIfRequired;
- (void)_queue_stopSedentaryTimer;
- (void)_queue_stopTimerHandlerWithError:(id)error;
- (void)_timerStoppedWithError:(id)error;
- (void)_queue_startSedentaryTimerIfRequired;
- (void)_queue_startTimer;
- (void)_queue_startTimerHandlerWithError:(id)error;
- (void)_timerStarted;
- (void)_queue_registerTimerHandler;
- (void)_queue_processDataObjectsInArray:(id)array;
- (id)_roundedDateForDate:(id)date;
- (BOOL)_shouldFireReminderForHourWithStartDate:(id)date;
- (BOOL)_shouldFireCongratulatoryAlertForHourWithStartDate:(id)date;
- (BOOL)_queue_isReminderNotificationRequiredOfType:(long long)type forHourWithStartDate:(id)date;
- (BOOL)_hasMetGoalForNumberOfActiveHoursToday:(long long)today;
- (void)_queue_fireReminderNotificationImmediatelyOfType:(long long)type forHourWithStartDate:(id)date;
- (void)_fireReminderNotificationImmediatelyIfRequiredOfType:(long long)type forHourWithStartDate:(id)date force:(BOOL)force;
- (void)_queue_fireReminderNotificationIfRequiredOfType:(long long)type forHourWithStartDate:(id)date force:(BOOL)force;
- (id)_timeoutDateForSedentaryTimerAlertOfType:(long long)type withHourStartDate:(id)date;
- (void)_queue_fireCongratulatoryNotificationIfRequiredForHourWithStartDate:(id)date;
- (void)_saveMissedHourDetailsIntoDBWithStartDate:(id)date;
- (void)_saveActiveHourDetailsIntoDBWithStartDate:(id)date;
- (void)_cacheSedentaryHourStartDate:(id)date state:(long long)state;
- (void)_queue_processCachedSedentaryHourSamples;
- (BOOL)_dataExistsForHourStart:(id)start;
- (BOOL)_saveSedentaryHourDataObjects:(id)objects error:(id *)error;
- (void)_saveSedentaryHourDataIfRequired:(id)required;
- (id)_keyFromDate:(id)date;
- (id)_dateFromKey:(id)key;
- (long long)_numberOfAwakeHoursToday;
- (long long)_numberOfActiveHoursToday;
- (id)_wheelchairUseNumber;
- (id)_startDateForSedentaryTimer;
- (void)dealloc;
- (BOOL)_isSedentaryTimerNotificationEnabled;
- (void)_queue_showSedentaryAlertOfType:(long long)type withTimeoutDate:(id)date experimentInstance:(id)instance;
- (double)_delayIntervalForSedentaryTimerStart;
@end

#endif /* NLSedentaryTimer_h */
