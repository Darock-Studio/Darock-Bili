//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.8.1.0.0
//
#ifndef CDMClient_h
#define CDMClient_h
@import Foundation;

#include "CDMClientInterface.h"
#include "CDMClientInterface.h"
#include "CDMEmbeddingClient-Protocol.h"
#include "CDMSsuInferenceClient-Protocol.h"

@interface CDMClient : CDMClientInterface<CDMEmbeddingClient, CDMSsuInferenceClient> {
  /* instance variables */
  CDMClientInterface *_client;
}

/* class methods */
+ (id)graphNameForSsuInference;
+ (id)graphNameForEmbedding;
+ (BOOL)useXPC;

/* instance methods */
- (void)setupSsuInference:(id)inference serviceStateDirectory:(id)directory completionHandler:(id /* block */)handler;
- (void)processSsuInferenceRequest:(id)request completionHandler:(id /* block */)handler;
- (void)setupWithLocale:(id)locale embeddingVersion:(id)version completionHandler:(id /* block */)handler;
- (void)processEmbeddingRequest:(id)request completionHandler:(id /* block */)handler;
- (void)processEmbeddingRequest:(id)request requestId:(id)id completionHandler:(id /* block */)handler;
- (void)processNLUPreprocessRequest:(id)request completionHandler:(id /* block */)handler;
- (id)init;
- (id)initWithDelegate:(id)delegate;
- (id)initWithXPCDelegate:(BOOL)xpcdelegate withDelegate:(id)delegate;
- (id)initWithXPC:(BOOL)xpc;
- (void)sharedInitTasks;
- (void)initProxyObject:(BOOL)object delegate:(id)delegate;
- (void)dealloc;
- (void)setupKVOForwarding;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (BOOL)daemonKilled;
- (BOOL)successFromSetup;
- (id)errorFromSetup;
- (BOOL)areAssetsAvailable:(id)available;
- (BOOL)registerWithAssetsDelegate:(id)delegate;
- (void)handleOverridesAssetUpdateEvent:(id)event;
- (void)setup:(id)setup;
- (void)setup:(id)setup completionHandler:(id /* block */)handler;
- (void)warmupWithCompletionHandler:(id /* block */)handler;
- (void)processCDMNluRequest:(id)request;
- (void)processCDMNluRequest:(id)request completionHandler:(id /* block */)handler;
- (void)setDataDispatcherContext:(id)context;
- (void)waitForDataDispatcherCompletion;
- (void)doServiceCenterInitWithConfig:(id)config;
- (void)doHandleCommand:(id)command forCallback:(id /* block */)callback;
- (BOOL)isLighthouseAPIEnabled;
@end

#endif /* CDMClient_h */
