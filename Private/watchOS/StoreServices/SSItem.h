//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1450.2.4.0.0
//
#ifndef SSItem_h
#define SSItem_h
@import Foundation;

#include "SSItemImageCollection.h"
#include "SSItemOffer.h"
#include "SSURLConnectionRequest.h"
#include "SSURLConnectionRequestDelegate-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSMutableArray, NSNumber, NSString, NSURL;

@interface SSItem : NSObject<SSURLConnectionRequestDelegate> {
  /* instance variables */
  NSArray *_offers;
  NSDictionary *_properties;
  NSString *_tellAFriendBody;
  NSString *_tellAFriendBodyMIMEType;
  NSMutableArray *_tellAFriendHandlers;
  SSURLConnectionRequest *_tellAFriendRequest;
  NSString *_tellAFriendSubject;
}

@property (readonly, nonatomic) NSNumber *ITunesStoreIdentifier;
@property (readonly, nonatomic) NSArray *allItemOffers;
@property (readonly, nonatomic) SSItemOffer *defaultItemOffer;
@property (readonly, nonatomic) NSString *artistName;
@property (readonly, nonatomic) NSDate *expirationDate;
@property (readonly, nonatomic) NSString *itemTitle;
@property (readonly, nonatomic) NSString *itemKind;
@property (readonly, nonatomic) BOOL restricted;
@property (readonly, nonatomic) BOOL highDefinition;
@property (readonly, nonatomic) BOOL gameCenterEnabled;
@property (readonly, nonatomic) NSURL *viewItemURL;
@property (readonly, nonatomic) float averageUserRating;
@property (readonly, nonatomic) long long numberOfUserRatings;
@property (readonly, nonatomic) SSItemImageCollection *imageCollection;
@property (readonly, nonatomic) NSArray *thumbnailImages;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)dealloc;
- (BOOL)isGameCenterEnabled;
- (BOOL)isRestricted;
- (BOOL)isHighDefinition;
- (id)itemOfferForIdentifier:(id)identifier;
- (void)loadTellAFriendMessageWithCompletionHandler:(id /* block */)handler;
- (long long)numberOfPrintedPages;
- (id)relatedItemsForRelationType:(id)type;
- (id)tellAFriendBody;
- (id)tellAFriendBodyMIMEType;
- (id)tellAFriendBodyURL;
- (id)tellAFriendSubject;
- (id)tweetInitialText;
- (id)tweetURL;
- (id)valueForProperty:(id)property;
- (id)buyParameters;
- (id)playableMedia;
- (id)priceDisplay;
- (id)initWithItemDictionary:(id)dictionary;
- (id)artistIdentifier;
- (id)bundleIdentifier;
- (id)bundleVersion;
- (id)collectionArtistName;
- (id)collectionIdentifier;
- (id)collectionIndexInCollectionGroup;
- (id)collectionName;
- (id)composerName;
- (id)contentRating;
- (id)episodeIdentifier;
- (id)episodeSortIdentifier;
- (id)genreIdentifier;
- (id)genreName;
- (id)indexInCollection;
- (BOOL)isCompilation;
- (id)longDescription;
- (id)mediaKind;
- (id)networkName;
- (id)numberOfCollectionsInCollectionGroup;
- (id)numberOfItemsInCollection;
- (id)podcastEpisodeGUID;
- (id)podcastFeedURL;
- (id)rawItemDictionary;
- (id)releaseDate;
- (id)releaseDateString;
- (id)preOrderIdentifier;
- (id)seasonNumber;
- (id)sendGiftURL;
- (id)seriesName;
- (void)_setExpirationDate:(id)date;
- (id)shortDescription;
- (id)softwareType;
- (id)videoDetails;
- (id)viewReviewsURL;
- (void)request:(id)request didFailWithError:(id)error;
- (void)requestDidFinish:(id)finish;
- (void)urlConnectionRequest:(id)request didReceiveResponse:(id)response;
- (void)_finishTellAFriendLoadWithError:(id)error;
- (id)_offers;
- (id)_tellAFriendDictionary;
@end

#endif /* SSItem_h */
