//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1450.2.4.0.0
//
#ifndef SSAccountStore_h
#define SSAccountStore_h
@import Foundation;

#include "AKAppleIDAuthenticationDelegate-Protocol.h"
#include "SSAccount.h"
#include "SSKeyValueStore.h"
#include "SSPromise.h"

@class ACAccountStore, NSArray, NSString;
@protocol OS_dispatch_queue;

@interface SSAccountStore : NSObject<AKAppleIDAuthenticationDelegate>

@property (retain, nonatomic) NSArray *accountsCache;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *accountsCacheAccessQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *fetchAccountsQueue;
@property (nonatomic) BOOL inProcessCacheDisabled;
@property (retain, nonatomic) SSKeyValueStore *keyValueStore;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *metricsQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue;
@property (readonly, nonatomic) SSPromise *accountsPromise;
@property (readonly) BOOL authenticationActive;
@property (readonly, nonatomic) ACAccountStore *backingAccountStore;
@property (readonly, nonatomic) SSAccount *demoAccount;
@property (readonly, nonatomic) SSPromise *localAccount;
@property (readonly) SSAccount *activeAccount;
@property (readonly) SSAccount *activeSandboxAccount;
@property (readonly) SSAccount *activeLockerAccount;
@property (readonly, copy) NSArray *accounts;
@property (readonly, copy) SSAccount *localiTunesAccount;
@property (readonly) BOOL expired;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)defaultStore;
+ (double)tokenExpirationInterval;
+ (BOOL)URLResponseAllowsSilentAuthentication:(id)authentication;
+ (BOOL)areAccountStoreChangedNotificationsDisabled;
+ (id)existingDefaultStore;
+ (void)resetExpiration;
+ (void)resetExpirationForTokenType:(long long)type;
+ (BOOL)isExpired;
+ (BOOL)isExpiredForTokenType:(long long)type;
+ (BOOL)migrateToAccountsFramework;
+ (void)setAuthenticationStartedDate:(id)date;
+ (BOOL)unitTestModeEnabled;
+ (void)setUnitTestModeEnabled:(BOOL)enabled;
+ (void)_addAccountToUnitTestStore:(id)store;
+ (void)_removeAccountFromUnitTestStore:(id)store;
+ (id)_unitTestAccountsAccessQueue;
+ (id)_backingAccountForAccount:(id)account;
+ (id)_copyKVSDatabasePath;
+ (BOOL)_copyKVSDatabaseWithError:(id *)error;
+ (BOOL)_currentProcessLinksUIKit;
+ (void)_disableAccountStoreChangedNotifications;
+ (void)_enableAccountStoreChangedNotifications;
+ (void)_excludeCopyKVSDatabasePathFromBackups;
+ (id)_hashedDescriptionFromAccountDictionary:(id)dictionary;
+ (BOOL)_isBuddyRunning;
+ (void)_postAccountsChangedInternalDarwinNotification;
+ (void)_postAccountsChangedDarwinNotification;
+ (id)_refreshAccount:(id)account;
+ (void)_setActiveAccountIsManagedAppleIDPreference:(BOOL)idpreference;
+ (BOOL)_accountDictionaryRepresentsActiveAccount:(id)account inKeyValueStore:(id)store;
+ (BOOL)_accountDictionaryRepresentsActiveLockerAccount:(id)account inKeyValueStore:(id)store;
+ (void)_cleanupActiveAccountsAfterMigrationWithActiveDSID:(id)dsid activeLockerDSID:(id)dsid;
+ (id)_migrateAccountDictionary:(id)dictionary fromKeyValueStore:(id)store originalActiveDSID:(id)dsid originalActiveLockerDSID:(id)dsid logKey:(id)key error:(id *)error;
+ (void)_removeAccountDictionary:(id)dictionary fromKeyValueStore:(id)store;
+ (BOOL)_shouldRemoveAccountDictionaryWithoutMigration:(id)migration reason:(id *)reason;
+ (id)_createAuthenticationContextForAccount:(id)account silentAuthentication:(BOOL)authentication options:(id)options;
+ (id)_createAuthenticationController;
+ (id)_createUpdatedAccount:(id)account withAuthenticationResults:(id)results options:(id)options;
+ (BOOL)_allowSilentPasswordAuthForAccount:(id)account withOptions:(id)options;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)accountWithAccountName:(id)name;
- (id)accountWithAccountName:(id)name scope:(long long)scope;
- (id)accountWithAltDSID:(id)dsid;
- (id)accountWithAltDSID:(id)dsid scope:(long long)scope;
- (id)accountWithAltDSID:(id)dsid uniqueIdentifier:(id)identifier accountName:(id)name;
- (id)accountWithAltDSID:(id)dsid uniqueIdentifier:(id)identifier accountName:(id)name scope:(long long)scope;
- (id)accountWithUniqueIdentifier:(id)identifier;
- (id)accountWithUniqueIdentifier:(id)identifier scope:(long long)scope;
- (BOOL)isExpired;
- (void)resetLocalAccount;
- (id)iTunesStoreAccountType;
- (id)iTunesStoreAccountTypePromise;
- (BOOL)authenticationController:(id)controller shouldContinueWithAuthenticationResults:(id)results error:(id)error forContext:(id)context;
- (void)clearCachedAccounts;
- (BOOL)repairAccountWithBrokenDSID:(id)dsid;
- (id)accountWithUniqueIdentifier:(id)identifier reloadIfNecessary:(BOOL)necessary;
- (void)getDefaultAccountNameUsingBlock:(id /* block */)block;
- (BOOL)isAuthenticationActive;
- (BOOL)removeAccount:(id)account error:(id *)error;
- (void)removeAccount:(id)account completion:(id /* block */)completion;
- (void)removeAllAccountsWithCompletion:(id /* block */)completion;
- (void)removeCookiesForAccount:(id)account logKey:(id)key;
- (void)resetExpiration;
- (void)resetExpirationForTokenType:(long long)type;
- (void)saveAccount:(id)account completion:(id /* block */)completion;
- (BOOL)saveAccount:(id)account error:(id *)error;
- (void)saveAccount:(id)account verifyCredentials:(BOOL)credentials completion:(id /* block */)completion;
- (BOOL)saveAccount:(id)account verifyCredentials:(BOOL)credentials error:(id *)error;
- (void)setDefaultAccountName:(id)name completionBlock:(id /* block */)block;
- (void)signOutAccount:(id)account;
- (void)signOutAccount:(id)account completion:(id /* block */)completion;
- (id)updateAccountWithAuthKit:(id)kit store:(id)store options:(id)options;
- (id)_buyParamsForBuyParamsString:(id)string;
- (id)_cachedAccounts;
- (void)_postAccountStoreChangeNotification;
- (void)_postActiveAccountChangedNotification;
- (void)_postAuthenticationActivityNotification;
- (void)_recordAnalyticsForMetricsDialogEvent:(id)event withTopic:(id)topic;
- (id)_saveAccountInUnitTestMode:(id)mode ignoreValidationErrors:(BOOL)errors;
- (id)_saveAccount:(id)account verifyCredentials:(BOOL)credentials;
- (void)_setCachedAccounts:(id)accounts;
- (id)_convertPasswordToPET:(id)pet forAccount:(id)account options:(id)options;
- (id)_optionsForProxiedAuthenticationWithVerifyCredentialsOptions:(id)options;
- (id)_passwordEquivalentTokenFromAlternateAccountWithAltDSID:(id)dsid DSID:(id)dsid username:(id)username;
- (id)_promptCompanionForPETForAccount:(id)account store:(id)store options:(id)options;
- (id)_shouldCreateNewAccountForAccount:(id)account options:(id)options;
- (id)_updateAccountWithAuthKitViaPromptAuth:(id)auth store:(id)store options:(id)options;
- (id)_updateAccountWithAuthKitViaSilentAuth:(id)auth options:(id)options;
- (id)_updateAccountWithAuthKitViaSilentPasswordAuth:(id)auth options:(id)options;
- (id)_updateAccountWithAuthKitViaSilentPETAuth:(id)petauth options:(id)options;
- (id)addAccount:(id)account;
- (BOOL)isExpiredForTokenType:(long long)type;
- (void)reloadAccounts;
- (void)setAccountCredits:(id)credits forAccountWithUniqueIdentifier:(id)identifier;
- (void)signOutAllAccounts;
- (void)signOutAllAccountsWithCompletionBlock:(id /* block */)block;
- (BOOL)isInProcessCacheDisabled;
@end

#endif /* SSAccountStore_h */
