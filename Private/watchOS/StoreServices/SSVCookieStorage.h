//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1450.2.4.0.0
//
#ifndef SSVCookieStorage_h
#define SSVCookieStorage_h
@import Foundation;

#include "SSSQLiteDatabase.h"

@class NSURL;
@protocol OS_dispatch_queue;

@interface SSVCookieStorage : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_dispatchQueue;
  BOOL _usesSharedCookieDatabase;
}

@property (readonly, nonatomic) SSSQLiteDatabase *_database;
@property (nonatomic) BOOL performingMigration;
@property (readonly) NSURL *storageLocation;

/* class methods */
+ (id)sharedStorage;
+ (BOOL)responseHasSetCookies:(id)cookies;
+ (BOOL)_bindStatement:(struct sqlite3_stmt *)statement withValues:(id)values;
+ (BOOL)_fileURLRepresentsSharedStorageLocation:(id)location;
+ (id)_getGlobalSetCookiesForResponse:(id)response;
+ (id)_getSetCookiesForResponse:(id)response;
+ (id)_getUserSetCookiesForResponse:(id)response;
+ (BOOL)_setupCookieDatabase:(id)database forCookieStorage:(id)storage;
+ (BOOL)_migrateToVersion1WithDatabase:(id)database;
+ (BOOL)_migrateToVersion2WithDatabase:(id)database;
+ (id)_sharedStorageLocationPath;
+ (BOOL)_currentProcessIsRoot;
+ (BOOL)_currentProcessShouldUseRescuedStorageLocationForLocation:(id)location;
+ (BOOL)_fileIsOwnedByRoot:(id)root;
+ (id)_rescuedStorageLocationForLocation:(id)location;
+ (id)sharedInstance;

/* instance methods */
- (id)init;
- (id)initWithStorageLocation:(id)location;
- (void)dealloc;
- (id)allCookiesForAccount:(id)account;
- (id)allCookiesForUserIdentifier:(id)identifier;
- (id)allCookiesForUserIdentifier:(id)identifier scope:(long long)scope;
- (id)cookieHeadersForURL:(id)url account:(id)account;
- (id)cookieHeadersForURL:(id)url userIdentifier:(id)identifier;
- (id)cookieHeadersForURL:(id)url userIdentifier:(id)identifier scope:(long long)scope;
- (id)cookiesForURL:(id)url account:(id)account;
- (id)cookiesForURL:(id)url userIdentifier:(id)identifier;
- (id)cookiesForURL:(id)url userIdentifier:(id)identifier scope:(long long)scope;
- (void)removeAllCookies;
- (void)removeCookiesWithProperties:(id)properties;
- (void)removeCookiesWithAccount:(id)account;
- (void)removeCookiesWithUserIdentifier:(id)identifier;
- (void)removeCookiesWithUserIdentifier:(id)identifier scope:(long long)scope;
- (void)setCookies:(id)cookies forAccount:(id)account;
- (void)setCookies:(id)cookies forUserIdentifier:(id)identifier;
- (void)setCookiesForHTTPResponse:(id)httpresponse account:(id)account;
- (void)setCookiesForHTTPResponse:(id)httpresponse userIdentifier:(id)identifier;
- (void)setCookiesForHTTPResponse:(id)httpresponse userIdentifier:(id)identifier scope:(long long)scope;
- (void)setCookiesFromCookieStorage:(id)storage;
- (void)_handleSharedCookieDatabaseDidChangeDarwinNotification;
- (void)setFeatureEnablerInDictionary:(id)dictionary key:(id)key;
- (id)cookieArrayBySettingFeatureEnablerWithArray:(id)array key:(id)key;
- (BOOL)_shouldAddITFECookieToURL:(id)url;
- (void)synchronizeFeatureEnablerCookieWithCookieValue:(id)value key:(id)key result:(id /* block */)result;
- (id)fetchDefaults;
- (id)_accountForKey:(id)key;
- (id)_allCookieKeys;
- (void)_bindInsertStatement:(struct sqlite3_stmt *)statement forCookie:(id)cookie key:(id)key;
- (id)_columnNameForCookieProperty:(id)property;
- (void)_cookieDatabaseDidChange;
- (id)_copyCookieDictionaryForURL:(id)url key:(id)key;
- (id)_copyCookieObjectsForURL:(id)url key:(id)key;
- (id)_copyCookiesForPreparedSQLStatement:(struct sqlite3_stmt *)sqlstatement;
- (id)_copyCookiesWithKey:(id)key;
- (id)_copyPrivateCookiesForURL:(id)url key:(id)key;
- (id)_copyPrivateCookieObjectsForURL:(id)url key:(id)key;
- (id)_filterCookies:(id)cookies forURL:(id)url;
- (void)_insertCookies:(id)cookies forKey:(id)key;
- (void)_setCookies:(id)cookies forKey:(id)key;
- (BOOL)_stopIncludingLocalCookies;
- (void)synchronizeCookies;
@end

#endif /* SSVCookieStorage_h */
