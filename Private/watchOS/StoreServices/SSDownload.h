//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1450.2.4.0.0
//
#ifndef SSDownload_h
#define SSDownload_h
@import Foundation;

#include "SSEntity.h"
#include "SSDownloadMetadata.h"
#include "SSDownloadPolicy.h"
#include "SSDownloadStatus.h"
#include "SSXPCCoding-Protocol.h"
#include "SSXPCConnection.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSNumber, NSString;

@interface SSDownload : SSEntity<SSXPCCoding> {
  /* instance variables */
  NSMutableDictionary *_localAssets;
  NSNumber *_prioritizeAboveDownload;
}

@property (readonly) NSDictionary *_localAssets;
@property (readonly) SSXPCConnection *_XPCConnection;
@property (readonly, nonatomic) BOOL external;
@property (readonly, nonatomic) id downloadIdentifier;
@property (retain, nonatomic) NSArray *assets;
@property (copy, nonatomic) SSDownloadMetadata *metadata;
@property (retain, nonatomic) SSDownloadStatus *status;
@property (readonly) long long persistentIdentifier;
@property (readonly) BOOL cancelable;
@property (copy) SSDownloadPolicy *downloadPolicy;
@property (readonly) long long downloadSizeLimit;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (long long)_existsMessage;
+ (long long)_getExternalValuesMessage;
+ (long long)_getValueMessage;
+ (long long)_setExternalValuesMessage;
+ (long long)_setValuesMessage;

/* instance methods */
- (id)initWithPersistentIdentifier:(long long)identifier;
- (id)_initWithLocalPropertyValues:(id)values;
- (void)dealloc;
- (BOOL)addAsset:(id)asset forType:(id)type;
- (id)assetsForType:(id)type;
- (id)backgroundNetworkingJobGroupName;
- (long long)bytesDownloaded;
- (long long)bytesTotal;
- (id)downloadPhaseIdentifier;
- (double)estimatedSecondsRemaining;
- (id)failureError;
- (BOOL)isCancelable;
- (BOOL)isEligibleForRestore:(id *)restore;
- (id)networkConstraints;
- (void)pause;
- (double)percentComplete;
- (void)prioritizeAboveDownload:(id)download completionBlock:(id /* block */)block;
- (BOOL)removeAsset:(id)asset;
- (void)resume;
- (void)restart;
- (void)setBackgroundNetworkingJobGroupName:(id)name;
- (void)setDownloadHandler:(id)handler completionBlock:(id /* block */)block;
- (void)setNetworkConstraints:(id)constraints;
- (void)setValuesWithStoreDownloadMetadata:(id)metadata;
- (void)_addCachedExternalValues:(id)values;
- (void)_addCachedPropertyValues:(id)values;
- (void)_resetLocalIVars;
- (id)_newAssetWithURL:(id)url assetType:(id)type;
- (id)initWithDownloadMetadata:(id)metadata;
- (id)copyXPCEncoding;
- (void)handleWithDownloadHandler:(id)handler completionBlock:(id /* block */)block;
- (BOOL)isBackgroundNetworkingUserInitiated;
- (BOOL)isExternal;
- (void)setBackgroundNetworkingUserInitiated:(BOOL)initiated;
- (void)_resetStatus;
- (void)_applyPhase:(id)phase toStatus:(id)status;
- (id)_errorWithData:(id)data;
- (id)_errorWithXPCReply:(id)xpcreply;
@end

#endif /* SSDownload_h */
