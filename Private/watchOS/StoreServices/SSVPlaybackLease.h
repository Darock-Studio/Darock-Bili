//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1450.2.4.0.0
//
#ifndef SSVPlaybackLease_h
#define SSVPlaybackLease_h
@import Foundation;

#include "SSURLBag.h"
#include "SSVBarrierOperationQueue.h"
#include "SSVFairPlaySubscriptionController.h"
#include "SSVPlaybackLeaseConfiguration.h"
#include "SSVPlaybackLeaseRequest.h"
#include "SSVRefreshSubscriptionRequest.h"

@class NSData, NSDate, NSMutableArray, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source, SSVPlaybackLeaseDelegate;

@interface SSVPlaybackLease : NSObject {
  /* instance variables */
  NSMutableArray *_assetOperations;
  SSVPlaybackLeaseConfiguration *_configuration;
  NSObject<OS_dispatch_queue> *_delegateQueue;
  SSVFairPlaySubscriptionController *_fairPlaySubscriptionController;
  unsigned long long _kdMovieIdentifier;
  SSVPlaybackLeaseRequest *_lastKDLeaseRequest;
  int _leaseDidEndNotificationToken;
  NSDate *_leaseExpirationDate;
  long long _leaseType;
  SSVRefreshSubscriptionRequest *_offlineSlotRequest;
  SSVBarrierOperationQueue *_operationQueue;
  NSObject<OS_dispatch_source> *_refreshTimer;
  NSObject<OS_dispatch_queue> *_serialQueue;
  SSURLBag *_urlBag;
}

@property (weak) NSObject<SSVPlaybackLeaseDelegate> *delegate;
@property BOOL refreshesAutomatically;
@property (copy) NSData *certificateData;
@property (copy) NSString *certificateURLBagKey;

/* instance methods */
- (id)_initSSVPlaybackLease;
- (id)init;
- (id)initWithLeaseConfiguration:(id)configuration;
- (id)initWithURLBag:(id)urlbag;
- (id)initWithURLBag:(id)urlbag leaseType:(long long)type;
- (void)dealloc;
- (void)beginLeaseWithRequest:(id)request completionBlock:(id /* block */)block;
- (void)cancelAllAssetRequests;
- (void)endLease;
- (void)getAssetWithRequest:(id)request completionBlock:(id /* block */)block;
- (void)getCertificateDataWithCompletionBlock:(id /* block */)block;
- (void)preheatLeaseRequestsWithCompletionBlock:(id /* block */)block;
- (void)refreshLeaseWithRequest:(id)request completionBlock:(id /* block */)block;
- (void)updateWithExternalLeaseResponseError:(id)error;
- (id)_addOperationWithRequest:(id)request configurationURL:(id)url completionBlock:(id /* block */)block;
- (void)_cancelRefreshTimer;
- (void)_endLease;
- (void)_fireRefreshTimer;
- (void)_sendLeaseDidEndWithEndReasonType:(unsigned long long)type;
- (BOOL)_shouldEndLeaseForError:(id)error returningEndReasonType:(unsigned long long *)type;
- (void)_startRefreshTimerIfNecessary;
- (void)_updateForLeaseResponse:(id)response error:(id)error;
- (void)_updateWithLeaseResponseError:(id)error;
@end

#endif /* SSVPlaybackLease_h */
