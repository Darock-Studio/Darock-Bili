//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 25.300.51.0.0
//
#ifndef SKStatusPublishingService_h
#define SKStatusPublishingService_h
@import Foundation;

#include "SKStatusPublishingConnectionDelegateProtocol-Protocol.h"
#include "SKStatusPublishingDaemonConnection.h"
#include "SKStatusPublishingDaemonDelegateProtocol-Protocol.h"

@class NSArray, NSMapTable, NSString;
@protocol OS_dispatch_queue;

@interface SKStatusPublishingService : NSObject<SKStatusPublishingDaemonDelegateProtocol, SKStatusPublishingConnectionDelegateProtocol>

@property (retain, nonatomic) SKStatusPublishingDaemonConnection *daemonConnection;
@property (retain, nonatomic) NSMapTable *delegates;
@property (nonatomic) BOOL registeredForDelegateCallbacks;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *privateWorkQueue;
@property (readonly, nonatomic) NSString *statusTypeIdentifier;
@property (readonly, nonatomic) NSArray *invitedHandles;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logger;

/* instance methods */
- (BOOL)isHandleInvited:(id)invited;
- (void)isHandleInvited:(id)invited completion:(id /* block */)completion;
- (void)isHandleInvitable:(id)invitable completion:(id /* block */)completion;
- (void)inviteHandle:(id)handle withInvitationPayload:(id)payload completion:(id /* block */)completion;
- (void)inviteHandles:(id)handles withInvitationPayload:(id)payload completion:(id /* block */)completion;
- (id)initWithStatusTypeIdentifier:(id)identifier;
- (void)publishStatusRequest:(id)request completion:(id /* block */)completion;
- (BOOL)isHandleInvited:(id)invited fromSenderHandle:(id)handle;
- (BOOL)isHandleInvitedFromPrimaryAccountHandle:(id)handle;
- (BOOL)_isHandleInvited:(id)invited fromSenderHandle:(id)handle;
- (void)isHandleInvited:(id)invited fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)isHandleInvitedFromPrimaryAccountHandle:(id)handle completion:(id /* block */)completion;
- (void)_isHandleInvited:(id)invited fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)isHandleInvitableFromPrimaryAccountHandle:(id)handle completion:(id /* block */)completion;
- (void)isHandleInvitable:(id)invitable fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)fetchHandleInvitabilityFromPrimaryAccountHandle:(id)handle completion:(id /* block */)completion;
- (void)fetchHandleInvitability:(id)invitability fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)_fetchHandleInvitability:(id)invitability fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)_isHandleInvitable:(id)invitable fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)inviteHandle:(id)handle fromSenderHandle:(id)handle withInvitationPayload:(id)payload completion:(id /* block */)completion;
- (void)inviteHandleFromPrimaryAccountHandle:(id)handle withInvitationPayload:(id)payload completion:(id /* block */)completion;
- (void)_inviteHandle:(id)handle fromSenderHandle:(id)handle withInvitationPayload:(id)payload completion:(id /* block */)completion;
- (void)inviteHandles:(id)handles fromSenderHandle:(id)handle withInvitationPayload:(id)payload completion:(id /* block */)completion;
- (void)inviteHandlesFromPrimaryAccountHandle:(id)handle withInvitationPayload:(id)payload completion:(id /* block */)completion;
- (void)_inviteHandles:(id)handles fromSenderHandle:(id)handle withInvitationPayload:(id)payload completion:(id /* block */)completion;
- (void)removeInvitedHandle:(id)handle completion:(id /* block */)completion;
- (void)removeInvitedHandles:(id)handles completion:(id /* block */)completion;
- (void)removeAllInvitedHandlesWithCompletion:(id /* block */)completion;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)removeDelegate:(id)delegate;
- (void)_registerForDelegateCallbacksIfNecessary;
- (void)_simulateCrashIfNecessaryForError:(id)error;
- (void)_delegatesPerformOnResponseQueueForGroup:(id)group block:(id /* block */)block;
- (void)publishingDaemonConnectionDidDisconnect:(id)disconnect;
@end

#endif /* SKStatusPublishingService_h */
