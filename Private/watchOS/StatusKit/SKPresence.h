//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 25.300.51.0.0
//
#ifndef SKPresence_h
#define SKPresence_h
@import Foundation;

#include "SKPresenceConnectionDelegateProtocol-Protocol.h"
#include "SKPresenceDaemonConnection.h"
#include "SKPresenceDaemonDelegateProtocol-Protocol.h"
#include "SKPresenceOptions.h"
#include "SKPresencePayload.h"

@class NSArray, NSMapTable, NSString;
@protocol OS_dispatch_queue;

@interface SKPresence : NSObject<SKPresenceDaemonDelegateProtocol, SKPresenceConnectionDelegateProtocol>

@property (nonatomic) BOOL hasPresenceAssertion;
@property (nonatomic) BOOL hasTransientSubscription;
@property (retain, nonatomic) SKPresencePayload *payload;
@property (retain, nonatomic) SKPresenceOptions *options;
@property (retain, nonatomic) SKPresenceDaemonConnection *daemonConnection;
@property (retain, nonatomic) NSMapTable *delegates;
@property (nonatomic) BOOL registeredForDelegateCallbacks;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *privateWorkQueue;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x0; } lock;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x0; } delegateLock;
@property (readonly, nonatomic) NSString *presenceIdentifier;
@property (readonly, nonatomic) BOOL isPersonal;
@property (readonly, nonatomic) NSArray *presentDevices;
@property (readonly, nonatomic) NSArray *invitedHandles;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_logger;
+ (id)_oversizeLogger;

/* instance methods */
- (id)initWithPresenceIdentifier:(id)identifier isPersonal:(BOOL)personal;
- (id)initWithPresenceIdentifier:(id)identifier;
- (id)initWithPresenceIdentifier:(id)identifier options:(id)options;
- (void)assertPresenceWithCompletion:(id /* block */)completion;
- (void)assertPresenceWithPresencePayload:(id)payload completion:(id /* block */)completion;
- (void)releasePresenceWithCompletion:(id /* block */)completion;
- (void)retainTransientSubscriptionAssertionWithCompletion:(id /* block */)completion;
- (void)releaseTransientSubscriptionAssertionWithCompletion:(id /* block */)completion;
- (BOOL)isHandleInvited:(id)invited fromSenderHandle:(id)handle;
- (BOOL)isHandleInvitedFromPrimaryAccountHandle:(id)handle;
- (BOOL)_isHandleInvited:(id)invited fromSenderHandle:(id)handle;
- (void)isHandleInvited:(id)invited fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)isHandleInvitedFromPrimaryAccountHandle:(id)handle completion:(id /* block */)completion;
- (void)_isHandleInvited:(id)invited fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)fetchHandleInvitabilityFromPrimaryAccountHandle:(id)handle completion:(id /* block */)completion;
- (void)fetchHandleInvitability:(id)invitability fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)_fetchHandleInvitability:(id)invitability fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)inviteHandle:(id)handle fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)inviteHandleFromPrimaryAccountHandle:(id)handle completion:(id /* block */)completion;
- (void)_inviteHandle:(id)handle fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)inviteHandles:(id)handles fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)inviteHandlesFromPrimaryAccountHandle:(id)handle completion:(id /* block */)completion;
- (void)_inviteHandles:(id)handles fromSenderHandle:(id)handle completion:(id /* block */)completion;
- (void)removeInvitedHandle:(id)handle completion:(id /* block */)completion;
- (void)removeInvitedHandles:(id)handles completion:(id /* block */)completion;
- (void)fetchPresenceCapability:(id /* block */)capability;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)removeDelegate:(id)delegate;
- (void)_registerForDelegateCallbacksIfNecessary;
- (void)_simulateCrashIfNecessaryForError:(id)error;
- (void)_delegatesPerformOnResponseQueueForGroup:(id)group block:(id /* block */)block;
- (void)presentHandlesChangedForPresenceIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)invitedHandlesChangedForPresenceIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)presenceDaemonConnectionDidDisconnect:(id)disconnect;
- (void)_attemptReconnectingToDaemon;
- (void)_reassertPresenceWithCompletion:(id /* block */)completion;
- (void)_reRetainTransientSubscriptionWithCompletion:(id /* block */)completion;
- (void)releaseDaemonConnection;
- (void)setHasAssertion:(BOOL)assertion;
- (BOOL)hasAssertion;
@end

#endif /* SKPresence_h */
