//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 25.300.51.0.0
//
#ifndef SKStatusSubscriptionService_h
#define SKStatusSubscriptionService_h
@import Foundation;

#include "SKStatusSubscription.h"
#include "SKStatusSubscriptionConnectionDelegateProtocol-Protocol.h"
#include "SKStatusSubscriptionDaemonConnection.h"
#include "SKStatusSubscriptionDaemonDelegateProtocol-Protocol.h"

@class NSMapTable, NSString;
@protocol OS_dispatch_queue;

@interface SKStatusSubscriptionService : NSObject<SKStatusSubscriptionDaemonDelegateProtocol, SKStatusSubscriptionConnectionDelegateProtocol>

@property (retain, nonatomic) SKStatusSubscriptionDaemonConnection *daemonConnection;
@property (retain, nonatomic) NSMapTable *delegates;
@property (nonatomic) BOOL registeredForDelegateCallbacks;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *privateWorkQueue;
@property (readonly, nonatomic) NSString *statusTypeIdentifier;
@property (readonly, nonatomic) SKStatusSubscription *personalStatusSubscription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logger;

/* instance methods */
- (id)subscriptionValidationTokenForHandle:(id)handle error:(id *)error;
- (void)subscriptionValidationTokenForHandle:(id)handle completion:(id /* block */)completion;
- (void)validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:(id)token fromSender:(id)sender completion:(id /* block */)completion;
- (id)initWithStatusTypeIdentifier:(id)identifier;
- (id)statusSubscriptionForHandle:(id)handle;
- (void)statusSubscriptionForHandle:(id)handle completion:(id /* block */)completion;
- (id)allStatusSubscriptions;
- (id)allStatusSubscriptionsExceptPersonalSubscription;
- (id)allStatusSubscriptionsWithActiveAssertions;
- (id)allStatusSubscriptionsWithActiveSubscriptions;
- (id)_allStatusSubscriptionsIncludingPersonalSubscription:(BOOL)subscription;
- (void)allStatusSubscriptionsWithPersistentSubscriptionAssertionForApplicationIdentifier:(id)identifier completion:(id /* block */)completion;
- (id)subscriptionValidationTokensForHandle:(id)handle error:(id *)error;
- (void)subscriptionValidationTokensForHandle:(id)handle completion:(id /* block */)completion;
- (void)validatePersonalStatusSubscriptionMatchesSubscriptionValidationTokens:(id)tokens fromSender:(id)sender completion:(id /* block */)completion;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)removeDelegate:(id)delegate;
- (void)_registerForDelegateCallbacksIfNecessary;
- (void)subscriptionDaemonConnectionDidDisconnect:(id)disconnect;
- (void)subscriptionStateChangedForSubscriptions:(id)subscriptions completion:(id /* block */)completion;
- (void)subscriptionReceivedStatusUpdate:(id)update completion:(id /* block */)completion;
- (void)subscriptionInvitationReceived:(id)received completion:(id /* block */)completion;
- (void)_delegatesPerformOnResponseQueueForGroup:(id)group block:(id /* block */)block;
- (void)_simulateCrashIfNecessaryForError:(id)error;
@end

#endif /* SKStatusSubscriptionService_h */
