//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 141.1.1.0.0
//
#ifndef EXExtensionContextImplementation_h
#define EXExtensionContextImplementation_h
@import Foundation;

#include "EXExtensionContextHosting-Protocol.h"
#include "EXExtensionContextVending-Protocol.h"
#include "EXExtensionRequest.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "NSXPCListenerDelegate-Protocol.h"
#include "_NSExtensionAuxHostingBase-Protocol.h"
#include "_NSExtensionContextInternalImplementation-Protocol.h"

@class NSArray, NSExtensionContext, NSString, NSUUID, NSXPCConnection, NSXPCListener;
@protocol OS_os_transaction;

@interface EXExtensionContextImplementation : NSObject<NSSecureCoding, NSCopying, NSXPCListenerDelegate, _NSExtensionAuxHostingBase, _NSExtensionContextInternalImplementation>

@property (copy, nonatomic) NSUUID *_UUID;
@property (copy, nonatomic) NSArray *inputItems;
@property (retain, nonatomic) NSXPCConnection *_auxiliaryConnection;
@property BOOL _dummyExtension;
@property (readonly, weak) NSExtensionContext *extensionContext;
@property (retain) EXExtensionRequest *extensionRequest;
@property (retain) NSObject<EXExtensionContextHosting> *_extensionHostProxy;
@property struct { unsigned int x0[8] } _extensionHostAuditToken;
@property (retain) NSObject<OS_os_transaction> *_transaction;
@property id _principalObject;
@property (retain, @dynamic) id _processAssertion;
@property (retain) NSObject<EXExtensionContextVending> *_extensionVendorProxy;
@property (retain) NSXPCListener *_auxiliaryListener;
@property (copy, @dynamic) NSUUID *_pkUUID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy) id /* block */ _requestCleanUpBlock;

/* class methods */
+ (id)_extensionContextHostProtocolAllowedClassesForItems;
+ (id)_extensionContextHostProtocolWithAllowedErrorClasses:(id)classes;
+ (id)_defaultExtensionContextVendorProtocol;
+ (id)_extensionContextVendorProtocolWithAllowedErrorClasses:(id)classes;
+ (id)_extensionContextForIdentifier:(id)identifier;
+ (BOOL)supportsSecureCoding;
+ (id)_derivedExtensionAuxiliaryHostProtocolWithContextClass:(Class)class;

/* instance methods */
- (void)_setProcessAssertion:(id)assertion;
- (id)initWithInputItems:(id)items listenerEndpoint:(id)endpoint contextUUID:(id)uuid extensionContext:(id)context;
- (id)initWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (void)_initializeAuxillaryConnectionWithListenerEndpoint:(id)endpoint;
- (void)invalidate;
- (void)dealloc;
- (BOOL)_isHost;
- (void)_completeRequestReturningItemsSecondHalf:(id /* block */)half;
- (void)completeRequestReturningItems:(id)items completionHandler:(id /* block */)handler;
- (void)cancelRequestWithError:(id)error;
- (void)openURL:(id)url completionHandler:(id /* block */)handler;
- (void)_loadItemForPayload:(id)payload completionHandler:(id /* block */)handler;
- (void)_loadPreviewImageForPayload:(id)payload completionHandler:(id /* block */)handler;
- (void)_openURL:(id)url completion:(id /* block */)completion;
- (void)_willPerformHostCallback:(id /* block */)callback;
- (void)___nsx_pingHost:(id /* block */)host;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)_setRequestCleanUpBlock:(id /* block */)block;
- (void)_setExtensionHostProxy:(id)proxy;
- (void)_setExtensionHostAuditToken:(struct { unsigned int x0[8] })token;
- (void)_setTransaction:(id)transaction;
- (void)_setPrincipalObject:(id)object;
- (void)_setExtensionVendorProxy:(id)proxy;
- (void)_setAuxiliaryListener:(id)listener;
- (void)_setInputItems:(id)items;
- (void)_setAuxiliaryConnection:(id)connection;
- (BOOL)_isDummyExtension;
- (void)_setDummyExtension:(BOOL)extension;
@end

#endif /* EXExtensionContextImplementation_h */
