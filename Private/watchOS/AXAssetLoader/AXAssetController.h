//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXAssetController_h
#define AXAssetController_h
@import Foundation;

#include "AXAssetPolicy.h"

@class AXDispatchTimer, NSArray, NSHashTable, NSMutableSet;
@protocol OS_dispatch_queue;

@interface AXAssetController : NSObject {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _assetsLock;
  NSHashTable *_observers;
  NSArray *_cachedAvailableAssets;
  NSMutableSet *_cachedInProgressAssets;
  NSObject<OS_dispatch_queue> *_refreshQueue;
  AXDispatchTimer *_refreshDispatchTimer;
  int _notifyToken;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *mobileAssetQueue;
@property (nonatomic) BOOL shouldRefreshForAssetInstallNotifications;
@property (readonly, nonatomic) AXAssetPolicy *assetPolicy;
@property (nonatomic) BOOL userInitiated;
@property (readonly, nonatomic) BOOL hasInProgressDownloads;

/* class methods */
+ (id)assetControllerWithPolicy:(id)policy;
+ (id)assetControllerWithPolicy:(id)policy qosClass:(unsigned int)class;
+ (id)assetControllerWithPolicy:(id)policy qosClass:(unsigned int)class shouldRefreshForAssetInstallNotifications:(BOOL)notifications;

/* instance methods */
- (id)_initWithAssetPolicy:(id)policy qosClass:(unsigned int)class shouldRefreshForAssetInstallNotifications:(BOOL)notifications;
- (void)_registerForNotifications;
- (void)_deregisterForNotifications;
- (void)dealloc;
- (void)performWithinLock:(id /* block */)lock;
- (id)description;
- (void)refreshAssetsByForceUpdatingCatalog:(BOOL)catalog updatingCatalogIfNeeded:(BOOL)needed;
- (void)refreshAssetsByForceUpdatingCatalog:(BOOL)catalog updatingCatalogIfNeeded:(BOOL)needed catalogRefreshOverrideTimeout:(id)timeout;
- (void)refreshAssetsByForceUpdatingCatalog:(BOOL)catalog updatingCatalogIfNeeded:(BOOL)needed catalogRefreshOverrideTimeout:(id)timeout completion:(id /* block */)completion;
- (BOOL)isAssetCatalogInstalled;
- (id)refreshAssetsWithAttributesSynchronously:(id)synchronously installedOnly:(BOOL)only;
- (id)refreshInstalledAssetsSynchronously;
- (id)refreshWithoutCatalogUpdateSynchronously;
- (void)_refreshQueue_refreshAssets:(BOOL)assets completion:(id /* block */)completion;
- (void)stopDownloadAsset:(id)asset completion:(id /* block */)completion;
- (void)downloadAssets:(id)assets successStartBlock:(id /* block */)block;
- (void)downloadAssets:(id)assets successStartBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (void)purgeAssets:(id)assets;
- (void)purgeAssets:(id)assets completion:(id /* block */)completion;
- (void)purgeAssetsSynchronously:(id)synchronously;
- (void)getCachedAvailableAssets:(id /* block */)assets;
- (void)getCachedDownloadedAssets:(id /* block */)assets;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)performBlockOnAssetObservers:(id /* block */)observers;
- (void)_replaceCachedAssetsWithAssets:(id)assets error:(id)error completion:(id /* block */)completion;
- (void)addInProgressAsset:(id)asset;
- (void)removeInProgressAsset:(id)asset;
- (void)_handleAssetDownloadStarted:(id)started;
- (void)_handleAssetProgressUpdate:(id)update progressNotification:(id)notification;
- (void)_handleAssetDownloadCompletion:(id)completion downloadResult:(long long)result;
- (void)_queue_refreshAssets:(BOOL)assets completion:(id /* block */)completion;
- (void)_updateCatalogWithOverrideTimeout:(id)timeout completion:(id /* block */)completion;
- (void)_queue_downloadAssets:(id)assets successStartBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (void)_queue_purgeAssets:(id)assets completion:(id /* block */)completion;
- (void)_queue_updateDownloadPriorityIfNecessary;
- (void)purgeInMemoryCachedAssets;
- (void)setProductionServerURL;
@end

#endif /* AXAssetController_h */
