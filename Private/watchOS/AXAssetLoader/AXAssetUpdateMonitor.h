//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXAssetUpdateMonitor_h
#define AXAssetUpdateMonitor_h
@import Foundation;

#include "AXAssetController.h"
#include "AXAssetControllerObserver-Protocol.h"
#include "AXAssetPolicy.h"

@class AXDispatchTimer, NSArray, NSHashTable, NSString;
@protocol OS_dispatch_queue;

@interface AXAssetUpdateMonitor : NSObject<AXAssetControllerObserver> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _assetsLock;
  NSHashTable *_updateObservers;
  NSArray *_cachedInstalledAssets;
  AXDispatchTimer *_refreshDispatchTimer;
  NSObject<OS_dispatch_queue> *_workerQueue;
}

@property (retain, nonatomic) AXAssetController *assetController;
@property (readonly, nonatomic) AXAssetPolicy *assetPolicy;
@property (nonatomic) BOOL userInitiated;
@property (readonly, nonatomic) BOOL hasInProgressDownloads;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)assetMonitorWithPolicy:(id)policy;
+ (id)assetMonitorWithPolicy:(id)policy qosClass:(unsigned int)class;
+ (id)assetMonitorWithPolicy:(id)policy qosClass:(unsigned int)class targetQueue:(id)queue;

/* instance methods */
- (id)_initWithAssetPolicy:(id)policy qosClass:(unsigned int)class targetQueue:(id)queue;
- (void)logInfo:(id)info;
- (void)refreshAssetsAfterDelay:(double)delay;
- (void)stop;
- (void)addUpdateObserver:(id)observer;
- (void)removeUpdateObserver:(id)observer;
- (void)_updateCachedInstalledAssets:(id)assets;
- (void)_performWithinLock:(id /* block */)lock;
- (void)_workerQueue_refreshAssetsAfterDelay:(double)delay canRefreshCatalog:(BOOL)catalog;
- (id)_purgeUnneededAssetsFromInstalledAssets:(id)assets;
- (void)assetController:(id)controller didFinishRefreshingAssets:(id)assets wasSuccessful:(BOOL)successful error:(id)error;
- (void)assetController:(id)controller didFinishDownloadingAsset:(id)asset wasSuccessful:(BOOL)successful error:(id)error hasRemainingDownloads:(BOOL)downloads;
@end

#endif /* AXAssetUpdateMonitor_h */
