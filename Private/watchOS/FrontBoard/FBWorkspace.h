//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 867.10.0.0.0
//
#ifndef FBWorkspace_h
#define FBWorkspace_h
@import Foundation;

#include "FBProcess.h"
#include "FBSceneClient-Protocol.h"
#include "FBSceneClientProvider-Protocol.h"
#include "FBSceneClientProviderInternal-Protocol.h"
#include "FBWorkspaceEventDispatcherSource.h"

@class BSAuditToken, BSCompoundAssertion, FBSSerialQueue, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, RBSAssertion;
@protocol BSServiceConnection<BSServiceConnectionHost, FBWorkspaceDelegate, OS_dispatch_queue;

@interface FBWorkspace : NSObject<FBSceneClient, FBSceneClientProviderInternal, FBSceneClientProvider> {
  /* instance variables */
  NSObject<FBWorkspaceDelegate> *_weak_delegate;
  FBProcess *_weak_process;
  FBWorkspaceEventDispatcherSource *_lock_eventDispatcherSource;
  BSServiceConnection<BSServiceConnectionHost> *_lock_connection;
  NSMutableArray *_lock_waitForConnectBlocks;
  NSMutableDictionary *_lock_identityToSceneMap;
  NSMutableDictionary *_lock_identityToRemnantsMap;
  NSMutableArray *_lock_pendedRequests;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<OS_dispatch_queue> *_queue;
  FBSSerialQueue *_workspaceQueue;
  NSMutableSet *_lock_invalidationActions;
  RBSAssertion *_lock_lifeAssertion;
  RBSAssertion *_lock_connectAssertion;
  RBSAssertion *_lock_afterlifeAssertion;
  long long _lock_activeInterruptionPolicy;
  unsigned char _lock_activeAssertionState;
  BSCompoundAssertion *_compoundAssertion;
  RBSAssertion *_workspaceServiceInjector;
  BOOL _shouldInjectEndpoint;
  BOOL _lock_didReceiveHandshake;
  BOOL _lock_invalidated;
}

@property (nonatomic) BOOL test_rejectAllSceneClients;
@property (weak, nonatomic) NSObject<FBWorkspaceDelegate> *delegate;
@property (readonly, weak, nonatomic) FBProcess *process;
@property (readonly, nonatomic) BSAuditToken *auditToken;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)sendActions:(id)actions;
- (id)_sceneForHost:(id)host;
- (id)_sceneForIdentity:(id)identity;
- (id)_unregisterSceneForHost:(id)host;
- (void)_updateProcessAssertionState;
- (void)_lock_fireInvalidationAction;
- (void)_resolveSceneLifecycleStateAndInterruptionPolicy;
- (void)_terminateWithReason:(id)reason;
- (void)_lock_enqueueConnectBlock:(id /* block */)block;
- (id)createServiceQueue;
- (id)_acquireAssertionForReason:(id)reason withState:(unsigned char)state;
- (void)_handleSceneRequest:(id)request;
- (void)_callOutQueue_requestScene:(id)scene;
- (void)registerInvalidationAction:(id)action;
- (id)registerHost:(id)host settings:(id)settings initialClientSettings:(id)settings fromRemnant:(id)remnant error:(out id *)error;
- (void)unregisterHost:(id)host;
- (void)host:(id)host didUpdateSettings:(id)settings withDiff:(id)diff transitionContext:(id)context completion:(id /* block */)completion;
- (void)host:(id)host didInvalidateWithTransitionContext:(id)context completion:(id /* block */)completion;
- (void)host:(id)host didReceiveActions:(id)actions forExtension:(Class)extension;
- (void)handshakeWithRemnants:(id)remnants;
- (void)workspaceID:(id)id sendActions:(id)actions completion:(id /* block */)completion;
- (void)createSceneWithOptions:(id)options completion:(id /* block */)completion;
- (void)requestSceneWithOptions:(id)options completion:(id /* block */)completion;
- (void)sceneID:(id)id didUpdateClientSettingsWithDiff:(id)diff transitionContext:(id)context completion:(id /* block */)completion;
- (void)sceneID:(id)id didReceiveActions:(id)actions forExtension:(id)extension;
- (void)sceneID:(id)id sendMessage:(id)message withResponse:(id /* block */)response;
- (void)test_setRejectAllSceneClients:(BOOL)clients;
@end

#endif /* FBWorkspace_h */
