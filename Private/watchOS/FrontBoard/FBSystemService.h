//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 867.10.0.0.0
//
#ifndef FBSystemService_h
#define FBSystemService_h
@import Foundation;

#include "BSServiceConnectionListenerDelegate-Protocol.h"
#include "FBSOpenApplicationServiceServerInterface-Protocol.h"
#include "FBServiceFacilityServer.h"

@class BSServiceConnectionListener, FBSSerialQueue, NSString;
@protocol FBSApplicationInfoProvider, FBSystemServiceDelegate;

@interface FBSystemService : NSObject<BSServiceConnectionListenerDelegate, FBSOpenApplicationServiceServerInterface> {
  /* instance variables */
  BSServiceConnectionListener *_legacyOpenServiceListener;
  NSObject<FBSApplicationInfoProvider> *_lock_defaultInfoProvider;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _defaultInfoProviderLock;
}

@property (retain, nonatomic) FBServiceFacilityServer *server;
@property (readonly, nonatomic) NSObject<FBSApplicationInfoProvider> *_applicationInfoProvider;
@property (readonly, nonatomic) FBSSerialQueue *queue;
@property (readonly) BOOL pendingExit;
@property (weak, nonatomic) NSObject<FBSystemServiceDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (id)sharedInstanceIfExists;

/* instance methods */
- (id)initWithQueue:(id)queue;
- (id)init;
- (void)dealloc;
- (void)shutdownAndReboot:(BOOL)reboot;
- (void)shutdownWithOptions:(unsigned long long)options forSource:(long long)source;
- (void)shutdownUsingOptions:(id)options;
- (void)shutdownWithOptions:(id)options origin:(id)origin;
- (void)shutdownWithOptions:(unsigned long long)options;
- (void)exitAndRelaunch:(BOOL)relaunch;
- (void)prepareForExitAndRelaunch:(BOOL)relaunch;
- (void)setSystemIdleSleepDisabled:(BOOL)disabled forReason:(id)reason;
- (void)prepareDisplaysForExit;
- (BOOL)isPendingExit;
- (void)exitAndRelaunch:(BOOL)relaunch withOptions:(unsigned long long)options;
- (void)_terminateProcesses:(id)processes forReason:(long long)reason andReport:(BOOL)report withDescription:(id)description completion:(id /* block */)completion;
- (void)terminateApplication:(id)application forReason:(long long)reason andReport:(BOOL)report withDescription:(id)description completion:(id /* block */)completion;
- (void)terminateApplicationGroup:(long long)group forReason:(long long)reason andReport:(BOOL)report withDescription:(id)description completion:(id /* block */)completion;
- (void)_activateBundleID:(id)id requestID:(id)id isTrusted:(BOOL)trusted options:(id)options source:(id)source originalSource:(id)source withResult:(id /* block */)result;
- (BOOL)_shouldPendRequestForClientSequenceNumber:(unsigned long long)number clientCacheGUID:(id)guid ourSequenceNumber:(unsigned long long)number ourCacheGUID:(id)guid;
- (void)_reallyActivateApplication:(id)application requestID:(id)id options:(id)options source:(id)source originalSource:(id)source isTrusted:(BOOL)trusted sequenceNumber:(unsigned long long)number cacheGUID:(id)guid ourSequenceNumber:(unsigned long long)number ourCacheGUID:(id)guid withResult:(id /* block */)result;
- (void)isPasscodeLockedOrBlockedWithResult:(id /* block */)result;
- (void)handleActions:(id)actions source:(id)source withResult:(id /* block */)result;
- (void)listener:(id)listener didReceiveConnection:(id)connection withContext:(id)context;
- (void)canOpenApplication:(id)application completion:(id /* block */)completion;
- (void)openApplication:(id)application withOptions:(id)options originator:(id)originator requestID:(id)id completion:(id /* block */)completion;
- (void)_setInfoProvider;
- (void)_performExitTasksForRelaunch:(BOOL)relaunch;
- (BOOL)_isTrustedRequest:(id)request forCaller:(id)caller fromClient:(id)client forBundleInfo:(id)info withOptions:(id)options fatalError:(out id *)error;
- (BOOL)_isAllowListedLaunchSuspendedApp:(id)app;
- (unsigned long long)_mapShutdownOptionsToOptions:(id)options;
@end

#endif /* FBSystemService_h */
