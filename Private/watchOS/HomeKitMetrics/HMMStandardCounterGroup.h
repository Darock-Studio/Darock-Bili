//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMMStandardCounterGroup_h
#define HMMStandardCounterGroup_h
@import Foundation;

#include "HMMCoreDataCounterStorage.h"
#include "HMMCoreDataNamedGroup.h"
#include "HMMCounterDatePartitionProvider-Protocol.h"
#include "HMMCounterGroup-Protocol.h"

@class NSArray, NSMutableDictionary, NSString;

@interface HMMStandardCounterGroup : NSObject<HMMCounterGroup> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  long long _coreDataGroupToken;
}

@property (readonly, nonatomic) HMMCoreDataCounterStorage *coreDataStorage;
@property (readonly, nonatomic) NSMutableDictionary *ephemeralContainers;
@property (readonly, nonatomic) NSMutableDictionary *observers;
@property (retain, nonatomic) HMMCoreDataNamedGroup *coreDataGroup;
@property (readonly, nonatomic) NSObject<HMMCounterDatePartitionProvider> *partitionProvider;
@property (readonly, copy, nonatomic) NSArray *ephemeralContainerNames;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)groupFromSpecifier:(id)specifier partitionProvider:(id)provider coreDataStorage:(id)storage;
+ (void)deletePartitionsBeforeDate:(id)date coreDataStorage:(id)storage;
+ (void)deletePartitionsAfterDate:(id)date coreDataStorage:(id)storage;
+ (void)deleteCountersUsingPredicate:(id)predicate coreDataStorage:(id)storage;

/* instance methods */
- (id)initWithCoreDataGroup:(id)group partitionProvider:(id)provider coreDataStorage:(id)storage;
- (void)addObserver:(id)observer forCounter:(id)counter;
- (id)observersForCounter:(id)counter;
- (void)notifyObserversForCounter:(id)counter previousCount:(long long)count newCount:(long long)count;
- (void)incrementCounter:(id)counter;
- (void)incrementCounter:(id)counter by:(long long)by;
- (id)datePartitions;
- (long long)valueForCounter:(id)counter inDatePartition:(id)partition;
- (id)countersInDatePartition:(id)partition;
- (long long)sumOfCountersInDatePartition:(id)partition;
- (BOOL)addEphemeralContainer:(id)container;
- (void)deactivateEphemeralContainer:(id)container;
- (void)removeEphemeralContainer:(id)container;
- (long long)valueForCounter:(id)counter inEphemeralContainer:(id)container;
- (id)countersInEphemeralContainer:(id)container;
- (long long)sumOfCountersInEphemeralContainer:(id)container;
@end

#endif /* HMMStandardCounterGroup_h */
