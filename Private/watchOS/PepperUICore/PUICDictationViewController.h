//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.18.0.0
//
#ifndef PUICDictationViewController_h
#define PUICDictationViewController_h
@import Foundation;

#include "PUICQuickboardViewController.h"
#include "BLSAssertionObserving-Protocol.h"
#include "PUICContentUnavailableView.h"
#include "PUICDictationViewController.h"
#include "PUICDictationViewControllerDelegate-Protocol.h"
#include "PUICQuickboardLanguageControllerDelegate-Protocol.h"
#include "SUICFlamesViewDelegate-Protocol.h"
#include "_PUICDictationStrategy-Protocol.h"
#include "_PUICDictationStrategyDelegate-Protocol.h"
#include "_PUICDictationTextView.h"

@class AFAnalyticsTurnBasedInstrumentationContext, BLSAssertion, CSLSAlertSuppressionAssertion, NSString, NSTimer, NSUUID, SUICFlamesView, UIButton, UITapGestureRecognizer, UIView;
@protocol OS_xpc_object;

@interface PUICDictationViewController : PUICQuickboardViewController<SUICFlamesViewDelegate, BLSAssertionObserving, _PUICDictationStrategyDelegate, PUICQuickboardLanguageControllerDelegate> {
  /* instance variables */
  SUICFlamesView *_liveFlamesView;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _flamesViewFrame;
  UIButton *_changeLanguageButton;
  BLSAssertion *_backlightAssertion;
  CSLSAlertSuppressionAssertion *_alertSuppressionAssertion;
  NSTimer *_recordingLimitTimer;
  UIView *_selectedViewForDismissalAnimation;
  PUICContentUnavailableView *_contentUnavailableView;
  UITapGestureRecognizer *_textViewTapRecognizer;
  UITapGestureRecognizer *_flamesViewTapRecognizer;
  BOOL _shouldDisableDictation;
  BOOL _disabledDictationOnBackground;
  BOOL _presentedDataSharingView;
  BOOL _showsLanguageButton;
  BOOL _isObservingAssistantPreferences;
  BOOL _preventMicOnViewWillAppear;
  BOOL _systemThinksWereActive;
  NSObject<OS_xpc_object> *_thermalMonitorConnection;
}

@property (retain, nonatomic) AFAnalyticsTurnBasedInstrumentationContext *currentInstrumentationContext;
@property (nonatomic) BOOL hasPostedInstrumentationDictationContext;
@property (copy, nonatomic) NSString *userSelectedLanguage;
@property (readonly, nonatomic) _PUICDictationTextView *textView;
@property (nonatomic) BOOL showsTextView;
@property (retain, nonatomic) NSObject<_PUICDictationStrategy> *strategy;
@property (nonatomic) BOOL languageButtonHidden;
@property (nonatomic) BOOL prefersModernTextInputInset;
@property (nonatomic) int invocationSource;
@property (nonatomic) int endpoint;
@property (weak, nonatomic) NSObject<PUICDictationViewControllerDelegate> *dictationDelegate;
@property (nonatomic) long long dictationMode;
@property (nonatomic) BOOL startDictationAutomatically;
@property (copy, nonatomic) NSString *interactionIdentifier;
@property (copy, nonatomic) NSUUID *turnIdentifier;
@property (nonatomic) BOOL prefersShowingLanguageButton;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) PUICDictationViewController *dictationViewController;

/* class methods */
+ (BOOL)isDictationModeEnabled:(long long)enabled;
+ (BOOL)isDictationModeEnabled:(long long)enabled language:(id)language;
+ (BOOL)isTinker;
+ (id)_dictationInstrumentaionLocaleIdentifierWithLocalString:(id)string;

/* instance methods */
- (void)dealloc;
- (id)initWithDelegate:(id)delegate dictationMode:(long long)mode;
- (id)initWithCoder:(id)coder;
- (id)initWithDelegate:(id)delegate;
- (id)initWithDelegate:(id)delegate dictationMode:(long long)mode dictationConnection:(id)connection;
- (void)_initWithDictationMode:(long long)mode dictationConnection:(id)connection;
- (void)setLanguageController:(id)controller;
- (id)acceptButtonKey;
- (void)_insertPlatterView;
- (id)_platterImage;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)_beginPreventingMicOnViewWillAppear;
- (void)_endPreventingMicOnViewWillAppear;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)willMoveToParentViewController:(id)controller;
- (BOOL)_shouldPresentSiriOptIn;
- (void)_setupOrPresentSiriOptInIfNeeded;
- (void)_setup;
- (BOOL)canBecomeFirstResponder;
- (void)startPrelistening;
- (void)cancelPrelistening;
- (void)startDictation;
- (void)cancelDictation;
- (void)cleanupDictation;
- (void)tapAcceptButton;
- (void)acceptButtonTappedWithCompletion:(id /* block */)completion;
- (double)acceptButtonTrailingInset;
- (void)setShowsAcceptButton:(BOOL)button;
- (id)_flamesView;
- (void)createSiriFlamesIfNeeded;
- (void)addSiriFlames;
- (void)_startSiriFlames;
- (void)_stopSiriFlames;
- (float)audioLevelForFlamesView:(id)view;
- (void)applicationDidEnterBackground:(id)background;
- (void)applicationWillEnterForeground:(id)foreground;
- (void)applicationDidBecomeActive:(id)active;
- (void)_siriDataSharingPreferencesDidChange;
- (void)keepScreenOn;
- (void)tickleBacklightAssertion;
- (void)blockLowPriorityAlerts;
- (void)clearAssertions;
- (void)_scheduleDictationRecordingLimitTimer;
- (void)_cancelDictationRecordingLimitTimer;
- (void)_dictationRecordingLimitTimerFired;
- (void)assertion:(id)assertion didFailToAcquireWithError:(id)error;
- (void)assertion:(id)assertion didCancelWithError:(id)error;
- (void)configureStrategy;
- (void)updateDictationStrategyIfNeededForDictationMode:(long long)mode;
- (unsigned long long)strategyShouldFilterByContactPropertyKey;
- (void)strategyUpdatedText:(id)text;
- (void)strategyDidBeginListening;
- (void)strategyIsStillListening;
- (void)strategyIsProcessing;
- (void)strategyDidCancel;
- (void)strategyDidFinish;
- (void)strategyDidFailWithError:(id)error;
- (void)strategyDidFailWithError:(id)error title:(id)title message:(id)message;
- (void)hideContentWithCompletion:(id /* block */)completion;
- (void)setSelectedViewForDismissalAnimation:(id)animation;
- (void)_updateDictationAvailability;
- (void)_observeSiriDataSharingOptInPreferenceChanges;
- (void)_stopObservingSiriDataSharingOptInPreferenceChangesIfNecessary;
- (void)_presentDictationLanguageSelection;
- (void)languageControllerDidChangePrimaryLanguage:(id)language;
- (void)primaryLanguageDidChange:(id)change;
- (void)languageControllerDidChangePrimaryDictationLanguage:(id)language;
- (void)languageControllerDidCancelLanguageSelection:(id)selection;
- (void)languageControllerDidCancelDictationLanguageSelection:(id)selection;
- (void)startDictationAfterLanguageChange;
- (void)setTextViewFont:(id)font;
- (void)addContentViewAnimations:(BOOL)animations;
- (void)addDismissalAnimationsWithOptions:(unsigned long long)options;
- (BOOL)wantsBlur;
- (void)_logEventIfNecessary:(long long)necessary addContext:(BOOL)context;
- (void)_instrumentationDictationContextEmitInstrumentation;
- (id)_requestingBundleId;
- (id)_contextReasonKeyForEvent:(long long)event;
- (void)strategy:(id)strategy didRecognizedPhrases:(id)phrases secureOfflineOnly:(BOOL)only modelInfo:(id)info;
- (void)_tellSystemDictationIsActive;
- (void)_tellSystemDictationIsInactive;
- (void)_handlePowerStateDidChange:(id)change;
- (void)_establishThermalMonitorConnectionIfNeeded;
- (void)_invalidateThermalMonitorConnectionIfNeeded;
- (void)_disableDictation;
- (id)_dictationResultsView;
- (void)_showDisambiguationResultsControllerForQuery:(id)query transcribedObjects:(id)objects completion:(id /* block */)completion;
- (unsigned long long)inputType;
- (BOOL)isLanguageButtonHidden;
@end

#endif /* PUICDictationViewController_h */
