//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.18.0.0
//
#ifndef PUICAnimatedEmojiView_h
#define PUICAnimatedEmojiView_h
@import Foundation;

#include "UIView.h"
#include "ORBTapGestureRecognizerDelegate-Protocol.h"
#include "PUICAnimatedEmoji.h"
#include "PUICAnimatedEmojiChooser.h"
#include "PUICAnimatedImageView.h"
#include "PUICClientSideAnimation.h"
#include "PUICCrownInputSequencer.h"
#include "PUICCrownInputSequencerDelegate-Protocol.h"
#include "PUICDelayedBlock.h"
#include "PUICImageSequenceView.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "_JitterProofer.h"

@class NSString;

@interface PUICAnimatedEmojiView : UIView<ORBTapGestureRecognizerDelegate, PUICCrownInputSequencerDelegate, UIGestureRecognizerDelegate> {
  /* instance variables */
  PUICAnimatedEmojiChooser *_animatedEmojiChooser;
  PUICAnimatedEmojiChooser *_lastAnimatedEmojiChooser;
  float _initialPanningPercentage;
  struct CGPoint { double x; double y; } _panReferencePoint;
  _JitterProofer *_jitterProofer;
  PUICAnimatedImageView *_animatedImageSequenceView;
  PUICImageSequenceView *_imageSequenceView;
  double _panStartTime;
  BOOL _needsPanReferencePointReset;
  BOOL _panGestureActive;
  BOOL _orbLatchRecognized;
  BOOL _orbGestureActive;
  PUICClientSideAnimation *_imageSequenceAnimation;
  PUICCrownInputSequencer *_crownInputSequencer;
  PUICDelayedBlock *_endCrownInteractionBlock;
}

@property (retain, nonatomic) PUICAnimatedEmoji *animatedEmoji;
@property (readonly, nonatomic) PUICAnimatedEmoji *selectedAnimatedEmoji;
@property (nonatomic) struct CGSize { double x0; double x1; } preferredContentSize;
@property (nonatomic) struct CGSize { double x0; double x1; } preferredAnimatedImageSize;
@property (nonatomic) struct CGPoint { double x0; double x1; } animatedImageOffset;
@property (copy, nonatomic) id /* block */ didSelectAnimatedEmojiType;
@property (nonatomic) BOOL holdActivation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)updateCrownSequencerValues;
- (void)activate;
- (void)deactivate;
- (void)flashScrollIndicator;
- (void)layoutSubviews;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)_wheelChangedWithEvent:(id)event;
- (void)crownInputSequencerOffsetDidChange:(id)change;
- (void)_hideScrollIndicatorAfterDelay:(double)delay;
- (void)_hideScrollIndicator;
- (void)_hideScrollIndicatorAnimated:(BOOL)animated;
- (void)crownInputSequencer:(id)sequencer offsetDidReachBoundary:(long long)boundary;
- (void)_resetEndCrownInteractionBlockWithDelay:(double)delay;
- (void)_endCrownInteraction;
- (void)_setAnimatedEmojiChooserIfNeededForCrownInteraction;
- (void)_updateAnimatedEmojiChooserIfNeededForCrownOffset:(double)offset;
- (void)_updateCrownOffset;
- (void)_showScrollIndicator;
- (void)_showScrollIndicatorAnimated:(BOOL)animated;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)_handleOrbTapGesture:(id)gesture;
- (void)_setAnimatedEmojiChooserIfNeededWithPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_updateAnimatedEmojiChooserIfNeededWithPoint:(struct CGPoint { double x0; double x1; })point velocity:(struct CGPoint { double x0; double x1; })velocity;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (void)_handlePanGesture:(id)gesture;
- (id)_assetPathForAnimatedEmojiType:(long long)type;
- (void)_imageSequenceAnimationFinished:(BOOL)finished;
- (void)_animateImageSequenceView:(id)view fromIndex:(unsigned long long)index toIndex:(unsigned long long)index duration:(double)duration;
- (BOOL)canBecomeFirstResponder;
- (BOOL)_reallyBecomeFirstResponder;
- (void)selectEmojiForTesting;
- (BOOL)isHoldingActivation;
@end

#endif /* PUICAnimatedEmojiView_h */
