//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.18.0.0
//
#ifndef PUICClassicEmojiView_h
#define PUICClassicEmojiView_h
@import Foundation;

#include "UIView.h"
#include "PUICClassicEmojiViewSelectionDelegate-Protocol.h"
#include "PUICCollectionViewDelegateFlowLayout-Protocol.h"
#include "PUICDiverseEmojiSelectionView.h"
#include "PUICDiverseEmojiSelectionViewDelegate-Protocol.h"
#include "PUICEmojiCategoryHeaderView.h"
#include "PUICEmojiCollectionView.h"
#include "PUICEmojiCollectionViewDelegate-Protocol.h"
#include "PUICEmojiSectionDelegate-Protocol.h"
#include "PUICSectionedCollectionViewDataSource.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class NSIndexPath, NSMutableDictionary, NSString, UICollectionView;

@interface PUICClassicEmojiView : UIView<PUICEmojiCollectionViewDelegate, PUICEmojiSectionDelegate, PUICCollectionViewDelegateFlowLayout, UIGestureRecognizerDelegate, PUICDiverseEmojiSelectionViewDelegate> {
  /* instance variables */
  BOOL _showStickers;
  PUICEmojiCategoryHeaderView *_sizingHeader;
  NSMutableDictionary *_skinToneUsage;
  PUICSectionedCollectionViewDataSource *_dataSource;
  PUICDiverseEmojiSelectionView *_diverseEmojiSelectionView;
  NSIndexPath *_indexPathForDiverseEmojiView;
  BOOL _withHeader;
  NSString *_animojiStickerPackIdentifier;
  BOOL _isMemoji;
  BOOL _showEmojis;
}

@property (readonly, nonatomic) UICollectionView *collectionView;
@property (weak, nonatomic) NSObject<PUICClassicEmojiViewSelectionDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)stickerFromRecentItem:(id)item;
+ (BOOL)memojiPickerEnabled;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame categoryIdentifiers:(id)identifiers showStickers:(BOOL)stickers;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame categoryIdentifiers:(id)identifiers withHeader:(BOOL)header;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame animojiStickerPackIdentifier:(id)identifier;
- (id)initForMemojiWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame memojiStickerPackIdentifier:(id)identifier;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame showEmojis:(BOOL)emojis showMemojis:(BOOL)memojis showStickers:(BOOL)stickers;
- (void)configureCollectionViewWithCategoryIdentifiers:(id)identifiers;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_showDiverseEmojiPlatterForEmoji:(id)emoji atIndexPath:(id)path;
- (void)_dismissDiversePlatter;
- (void)activate;
- (void)deactivate;
- (void)clear;
- (void)setInitialContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)scrollViewWillEndDragging:(id)dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)offset;
- (BOOL)collectionView:(id)view canLongPressItemAtIndexPath:(id)path;
- (void)collectionView:(id)view longPressDidBeginForRowAtIndexPath:(id)path;
- (void)collectionView:(id)view longPressDidMoveToPoint:(struct CGPoint { double x0; double x1; })point;
- (void)longPressDidCancelForCollectionView:(id)view;
- (void)longPressDidEndForCollectionView:(id)view;
- (void)emojiSection:(id)section needsReloadFromStartIndex:(long long)index;
- (void)reloadData;
- (void)launchMemojiEditor;
- (void)collectionView:(id)view didSelectItemAtIndexPath:(id)path;
- (struct CGSize { double x0; double x1; })collectionView:(id)view layout:(id)layout sizeForItemAtIndexPath:(id)path;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })collectionView:(id)view layout:(id)layout insetForSectionAtIndex:(long long)index;
- (double)collectionView:(id)view layout:(id)layout minimumLineSpacingForSectionAtIndex:(long long)index;
- (double)collectionView:(id)view layout:(id)layout minimumInteritemSpacingForSectionAtIndex:(long long)index;
- (struct CGSize { double x0; double x1; })collectionView:(id)view layout:(id)layout referenceSizeForHeaderInSection:(long long)section;
- (unsigned long long)collectionView:(id)view layout:(id)layout notchBehaviorForItemAtIndexPath:(id)path;
- (void)diverseEmojiSelectionView:(id)view didSelectEmoji:(id)emoji;
- (BOOL)_itemAtIndexPathIsUnderHeaderOrFooter:(id)footer;
- (struct CGPoint { double x0; double x1; })_contentOffsetForProposedContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (id)_sizingHeader;
- (id)_emojiCategoryIdentifierForSection:(unsigned long long)section;
- (id)_emojiOrStickerForIndexPath:(id)path;
- (id)_animojiStickerPackForIndexPath:(id)path;
- (id)_animojiStickerForIndexPath:(id)path;
- (void)selectEmojiForTesting;
- (BOOL)_shouldShowPrereleaseWarningLabelForCategories:(id)categories;
@end

#endif /* PUICClassicEmojiView_h */
