//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.18.0.0
//
#ifndef PUICTableViewCellLayoutManager_h
#define PUICTableViewCellLayoutManager_h
@import Foundation;

#include "UITableViewCellLayoutManager.h"

@interface PUICTableViewCellLayoutManager : UITableViewCellLayoutManager {
  /* instance variables */
  BOOL _usingCompactLayout;
}

@property (readonly, nonatomic) BOOL compactLayout;
@property (nonatomic) double cellSeparatorHeight;

/* class methods */
+ (BOOL)_usesConstraintBasedLayout;
+ (void)_setUsesConstraintBasedLayout:(BOOL)layout;
+ (id)layoutManagerForTableViewCellStyle:(long long)style;
+ (BOOL)requiresLegacyLayout;
+ (double)_likelyFirstLineBaselineOffsetForLabel:(id)label;
+ (double)_contentSubviewXInset;
+ (double)_labelBaselineFromTopDefault;
+ (double)_defaultBottomBaselineOffset;
+ (double)_labelBaselineFromTopMin;

/* instance methods */
- (id)init;
- (double)_defaultHeightForCell:(id)cell;
- (BOOL)_cellHasFullSeparator:(id)separator;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_backgroundRectForCell:(id)cell showingButtonBar:(BOOL)bar fittingSize:(struct CGSize { double x0; double x1; })size;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedBackgroundRectForCell:(id)cell showingButtonBar:(BOOL)bar fittingSize:(struct CGSize { double x0; double x1; })size;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_accessoryRectForCell:(id)cell showingButtonBar:(BOOL)bar fittingSize:(struct CGSize { double x0; double x1; })size;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectForCell:(id)cell showingButtonBar:(BOOL)bar fittingSize:(struct CGSize { double x0; double x1; })size;
- (double)defaultTextLabelFontSizeForCell:(id)cell;
- (id)defaultImageViewForCell:(id)cell;
- (id)defaultTextLabelFontForCell:(id)cell;
- (id)defaultLabelForCell:(id)cell ofClass:(Class)class;
- (id)defaultLabelForCell:(id)cell;
- (id)defaultEditableTextFieldForCell:(id)cell;
- (id)imageViewForCell:(id)cell;
- (id)textLabelForCell:(id)cell;
- (id)detailTextLabelForCell:(id)cell;
- (id)editableTextFieldForCell:(id)cell;
- (double)contentIndentationForCell:(id)cell;
- (void)layoutSubviewsOfCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForCell:(id)cell forState:(unsigned long long)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forState:(unsigned long long)state;
- (BOOL)editControlShouldAppearForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editControlStartingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editControlStartingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editControlEndingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editControlEndingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state;
- (BOOL)editControlShouldFadeForCell:(id)cell;
- (BOOL)accessoryShouldAppearForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessoryStartingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessoryStartingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessoryEndingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessoryEndingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (BOOL)accessoryShouldFadeForCell:(id)cell;
- (BOOL)editingAccessoryShouldAppearForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editingAccessoryStartingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editingAccessoryStartingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editingAccessoryEndingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editingAccessoryEndingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (BOOL)editingAccessoryShouldFadeForCell:(id)cell;
- (BOOL)reorderControlShouldAppearForCell:(id)cell;
- (BOOL)reorderControlShouldFadeForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reorderControlStartingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reorderControlEndingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (BOOL)reorderSeparatorShouldAppearForCell:(id)cell;
- (BOOL)reorderSeparatorShouldFadeForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reorderSeparatorStartingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reorderSeparatorEndingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })deleteConfirmationRectForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })deleteConfirmationRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })backgroundStartingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })backgroundStartingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })backgroundEndingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })backgroundEndingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectedBackgroundEndingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectedBackgroundEndingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentStartingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentStartingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentEndingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentEndingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentStartingRectForCell:(id)cell forDisplayOfDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentStartingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forDisplayOfDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentEndingRectForCell:(id)cell forDisplayOfDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentEndingRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size forDisplayOfDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRectForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRectForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size;
- (void)getTextLabelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect detailTextLabelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect forCell:(id)cell;
- (void)getTextLabelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect detailTextLabelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect forCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size;
- (void)getTextLabelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect detailTextLabelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect forCell:(id)cell rowWidth:(double)width forSizing:(BOOL)sizing;
- (struct CGSize { double x0; double x1; })intrinsicContentSizeForCell:(id)cell;
- (struct CGSize { double x0; double x1; })intrinsicContentSizeForCell:(id)cell fittingSize:(struct CGSize { double x0; double x1; })size;
- (double)_defaultImageViewMaxWidth;
- (double)_defaultImageViewTopInset;
- (double)_imageViewToTextMargin;
- (double)_minTextRightMarginWithAccessory;
- (double)_defaultCellHeight;
- (double)_labelBaselineFromTopMin;
- (double)_labelBaselineFromBottomMin;
- (double)_cellContentXPadding;
- (BOOL)isCompactLayout;
@end

#endif /* PUICTableViewCellLayoutManager_h */
