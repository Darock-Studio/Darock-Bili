//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.18.0.0
//
#ifndef PUICTiledLayoutView_h
#define PUICTiledLayoutView_h
@import Foundation;

#include "UIScrollView.h"
#include "PUICTiledLayoutViewNotchProvider.h"

@class NSArray, NSHashTable, NSIndexPath, NSMutableArray, NSMutableDictionary, NSMutableSet;
@protocol PUICTiledLayoutViewDataSource, PUICTiledLayoutViewDelegate;

@interface PUICTiledLayoutView : UIScrollView

@property (retain, nonatomic) NSMutableArray *_mutableVisibleIndexPaths;
@property (retain, nonatomic) NSMutableArray *_sectionInfo;
@property (retain, nonatomic) NSMutableDictionary *_tilesByPath;
@property (retain, nonatomic) NSMutableDictionary *_tileByClassQueue;
@property (nonatomic) unsigned long long beginUpdatesCount;
@property (retain, nonatomic) NSIndexPath *pinnedIndexPath;
@property (nonatomic) struct { struct { unsigned long long x0; unsigned long long x1; } x0; struct { unsigned long long x0; unsigned long long x1; } x1; } _visibleRange;
@property (retain, nonatomic) NSHashTable *ownedTileViews;
@property (retain, nonatomic) NSMutableSet *calculatedFramesForNotches;
@property (nonatomic) BOOL notchesAreOutOfDate;
@property (weak, @dynamic, nonatomic) NSObject<PUICTiledLayoutViewDelegate> *delegate;
@property (weak, nonatomic) NSObject<PUICTiledLayoutViewDataSource> *dataSource;
@property (retain, nonatomic) PUICTiledLayoutViewNotchProvider *notchProvider;
@property (readonly, nonatomic) NSArray *visibleIndexPaths;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)beginUpdates;
- (void)endUpdatesAnimated:(BOOL)animated bounceForPinnedRow:(BOOL)row;
- (void)endUpdatesAnimated:(BOOL)animated bounceForPinnedRow:(BOOL)row verticalGravity:(double)gravity;
- (void)reloadData;
- (void)reloadDataInSection:(unsigned long long)section;
- (void)reloadDataInSection:(unsigned long long)section itemIndexes:(id)indexes;
- (void)layoutSubviews;
- (void)needsToUpdateNotches;
- (void)_calculateFramesForNotches;
- (struct { struct { unsigned long long x0; unsigned long long x1; } x0; struct { unsigned long long x0; unsigned long long x1; } x1; })_layoutSectionsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_layoutVisibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)adjustTargetContentOffset:(inout struct CGPoint { double x0; double x1; } *)offset verticalGravity:(double)gravity;
- (id)indexPathAtPoint:(struct CGPoint { double x0; double x1; })point;
- (unsigned long long)sectionIndexAtPoint:(struct CGPoint { double x0; double x1; })point;
- (struct CGPoint { double x0; double x1; })contentOffsetForIndexPath:(id)path verticalGravity:(double)gravity;
- (void)enqueueTile:(id)tile oldIndexPath:(id)path;
- (id)dequeueTileOfClass:(Class)class forIndexPath:(id)path;
- (id)tileAtIndexPath:(id)path;
- (void)tileTapped:(id)tapped;
- (BOOL)becomeFirstResponder;
- (double)titleTransitionIndexInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)titleBeforeTransitionIndex:(double)index includeEmptySections:(BOOL)sections;
- (id)titleAfterTransitionIndex:(double)index includeEmptySections:(BOOL)sections;
@end

#endif /* PUICTiledLayoutView_h */
