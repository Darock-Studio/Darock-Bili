//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef IPAImageGeometry_h
#define IPAImageGeometry_h
@import Foundation;

#include "IPAImageGeometry-Protocol.h"
#include "IPAQuadGeometry-Protocol.h"

@class NSString;

@interface IPAImageGeometry : NSObject<IPAQuadGeometry, IPAImageGeometry> {
  /* instance variables */
  NSString *_identifier;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _extent;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _domain;
  struct Quad2d { struct Vector2d { double X; double Y; } V0; struct Vector2d { double X; double Y; } V1; struct Vector2d { double X; double Y; } V2; struct Vector2d { double X; double Y; } V3; } _imageQuad;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)clearScene:(id)scene;
+ (void)addRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect withLabel:(id)label toScene:(id)scene;
+ (void)addQuadV0:(struct CGPoint { double x0; double x1; })v0 V1:(struct CGPoint { double x0; double x1; })v1 V2:(struct CGPoint { double x0; double x1; })v2 V3:(struct CGPoint { double x0; double x1; })v3 withLabel:(id)label toScene:(id)scene;
+ (void)addPoint:(struct CGPoint { double x0; double x1; })point radius:(double)radius withLabel:(id)label toScene:(id)scene;
+ (void)addLineFromP0:(struct CGPoint { double x0; double x1; })p0 P1:(struct CGPoint { double x0; double x1; })p1 withLabel:(id)label toScene:(id)scene;
+ (id)inputGeometryWithImageSize:(struct CGSize { double x0; double x1; })size;

/* instance methods */
- (id)initWithIdentifier:(id)identifier extent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent imageQuad:(const struct Quad2d { struct Vector2d { double x0; double x1; } x0; struct Vector2d { double x0; double x1; } x1; struct Vector2d { double x0; double x1; } x2; struct Vector2d { double x0; double x1; } x3; } *)quad;
- (id)initWithIdentifier:(id)identifier extent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent domain:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })domain;
- (id)initWithIdentifier:(id)identifier extent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
- (id)init;
- (id)identifier;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })domain;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
- (struct Quad2d { struct Vector2d { double x0; double x1; } x0; struct Vector2d { double x0; double x1; } x1; struct Vector2d { double x0; double x1; } x2; struct Vector2d { double x0; double x1; } x3; })imageQuad;
@end

#endif /* IPAImageGeometry_h */
