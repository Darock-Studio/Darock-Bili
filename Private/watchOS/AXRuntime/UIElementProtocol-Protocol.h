//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef UIElementProtocol_Protocol_h
#define UIElementProtocol_Protocol_h
@import Foundation;

@protocol UIElementProtocol <NSObject, NSCopying>

@property (readonly, nonatomic) NSDictionary *cachedAttributes;
@property (readonly, nonatomic) NSMutableDictionary *copyCachedAttributes;
@property (readonly, nonatomic) struct __AXUIElement * axElement;

/* class methods */
+ (void)applyElementAttributeCacheScheme:(unsigned long long)scheme;
+ (void)applyElementCustomAttributeCacheScheme:(id)scheme;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate forApplication:(struct __AXUIElement *)application contextId:(unsigned int)id;
+ (id)scrollAncestorAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate;
/* instance methods */
- (BOOL)isValid;
- (BOOL)isValidForApplication:(id)application;
- (id)arrayWithAXAttribute:(long long)axattribute;
- (id)stringWithAXAttribute:(long long)axattribute;
- (BOOL)boolWithAXAttribute:(long long)axattribute;
- (id)numberWithAXAttribute:(long long)axattribute;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectWithAXAttribute:(long long)axattribute;
- (struct CGPath *)pathWithAXAttribute:(long long)axattribute;
- (struct CGPoint { double x0; double x1; })pointWithAXAttribute:(long long)axattribute;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeWithAXAttribute:(long long)axattribute;
- (struct CGColor *)colorWithAXAttribute:(long long)axattribute;
- (id)objectWithAXAttribute:(long long)axattribute;
- (id)uiElementsWithAttribute:(long long)attribute;
- (id)uiElementsWithAttribute:(long long)attribute parameter:(void *)parameter;
- (id)uiElementsWithAttribute:(long long)attribute parameter:(void *)parameter fetchAttributes:(BOOL)attributes;
- (id)objectWithAXAttribute:(long long)axattribute parameter:(void *)parameter;
- (int)pid;
- (BOOL)canPerformAXAction:(int)axaction;
- (BOOL)performAXAction:(int)axaction;
- (BOOL)performAXAction:(int)axaction withValue:(id)value;
- (BOOL)performAXAction:(int)axaction withValue:(id)value fencePort:(unsigned int)port;
- (void)enableCache:(BOOL)cache;
- (void)disableCache;
- (void)updateCache:(long long)cache;
- (void)updateCacheWithAttributes:(id)attributes;
- (id)nextElementsWithCount:(unsigned long long)count;
- (id)previousElementsWithCount:(unsigned long long)count;
- (id)nextElementsWithParameters:(id)parameters;
- (id)previousElementsWithParameters:(id)parameters;
- (void)setAXAttribute:(long long)axattribute withBOOL:(BOOL)bool;
- (void)setAXAttribute:(long long)axattribute withString:(id)string;
- (void)setAXAttribute:(long long)axattribute withLong:(long long)long;
- (void)setAXAttribute:(long long)axattribute withFloat:(float)float;
- (void)setAXAttribute:(long long)axattribute withNumber:(id)number;
- (void)setAXAttribute:(long long)axattribute withPoint:(struct CGPoint { double x0; double x1; })point;
- (void)setAXAttribute:(long long)axattribute withSize:(struct CGSize { double x0; double x1; })size;
- (void)setAXAttribute:(long long)axattribute withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setAXAttribute:(long long)axattribute withUIElement:(id)uielement;
- (void)setAXAttribute:(long long)axattribute withUIElementArray:(id)array;
- (void)setAXAttribute:(long long)axattribute withArray:(id)array;
- (void)setAXAttribute:(long long)axattribute withObject:(id)object;
- (void)setAXAttribute:(long long)axattribute withObject:(id)object synchronous:(BOOL)synchronous;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })nextCursorRangeInDirection:(unsigned long long)direction unit:(unsigned long long)unit outputRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })nextCursorRangeInDirection:(unsigned long long)direction unit:(unsigned long long)unit outputRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range currentCursorRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (BOOL)isMockElement;
@end

#endif /* UIElementProtocol_Protocol_h */
