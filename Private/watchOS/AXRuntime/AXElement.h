//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXElement_h
#define AXElement_h
@import Foundation;

#include "AXElement.h"
#include "AXElementGroup.h"
#include "AXGroupable-Protocol.h"
#include "AXUIElement.h"

@class NSArray, NSDictionary, NSString, NSURL;

@interface AXElement : NSObject<AXGroupable>

@property (retain, nonatomic) AXUIElement *uiElement;
@property (retain, nonatomic) AXElement *cachedRemoteParent;
@property (retain, nonatomic) AXElement *cachedRemoteParentForContextID;
@property (retain, nonatomic) struct CGPath * cachedPath;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cachedFrame;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cachedVisibleFrame;
@property (readonly, nonatomic) struct __AXUIElement * elementRef;
@property (readonly, nonatomic) BOOL isSystemWideElement;
@property (nonatomic) BOOL passivelyListeningForEvents;
@property (readonly, nonatomic) AXElement *currentApplication;
@property (readonly, nonatomic) NSArray *currentApplications;
@property (readonly, nonatomic) NSArray *currentApplicationsIgnoringSiri;
@property (readonly, nonatomic) AXElement *springBoardApplication;
@property (readonly, nonatomic) AXElement *systemApplication;
@property (readonly, nonatomic) AXElement *accessibilityUIServerApplication;
@property (readonly, nonatomic) BOOL isScreenLocked;
@property (readonly, nonatomic) long long applicationOrientation;
@property (readonly, nonatomic) NSArray *visibleElements;
@property (readonly, nonatomic) AXElement *firstResponder;
@property (readonly, nonatomic) AXElement *nativeFocusElement;
@property (readonly, nonatomic) AXElement *nativeFocusPreferredElement;
@property (readonly, nonatomic) AXElement *firstElementInApplication;
@property (readonly, nonatomic) AXElement *firstElementInApplicationForFocus;
@property (readonly, nonatomic) NSString *bundleId;
@property (readonly, nonatomic) NSString *processName;
@property (readonly, nonatomic) BOOL isSpringBoard;
@property (readonly, nonatomic) BOOL isSystemApplication;
@property (readonly, nonatomic) BOOL isControlCenterVisible;
@property (readonly, nonatomic) BOOL isDictationListening;
@property (readonly, nonatomic) BOOL isAXUIServer;
@property (readonly, nonatomic) NSArray *explorerElements;
@property (readonly, nonatomic) NSArray *nativeFocusableElements;
@property (readonly, nonatomic) NSArray *elementsWithSemanticContext;
@property (readonly, nonatomic) NSArray *siriContentNativeFocusableElements;
@property (readonly, nonatomic) NSArray *siriContentElementsWithSemanticContext;
@property (readonly, nonatomic) NSString *focusedSceneIdentifier;
@property (readonly, nonatomic) AXElement *currentFocusContainer;
@property (readonly, nonatomic) AXElement *application;
@property (readonly, nonatomic) BOOL isAccessibleElement;
@property (readonly, nonatomic) BOOL isVisible;
@property (readonly, nonatomic) NSString *label;
@property (readonly, nonatomic) NSString *speakThisString;
@property (readonly, nonatomic) NSString *localizedStringKey;
@property (readonly, nonatomic) NSString *localizationBundleID;
@property (readonly, nonatomic) NSString *localizationBundlePath;
@property (readonly, nonatomic) NSString *localizedStringTableName;
@property (readonly, nonatomic) NSString *hint;
@property (readonly, nonatomic) NSString *speechInputLabel;
@property (readonly, nonatomic) NSArray *userInputLabels;
@property (nonatomic) NSString *value;
@property (readonly, nonatomic) struct CGPath * path;
@property (readonly, nonatomic) NSURL *url;
@property (readonly, nonatomic) NSString *language;
@property (readonly, nonatomic) NSString *identifier;
@property (readonly, nonatomic) unsigned long long traits;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } visibleFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } textCursorFrame;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } centerPoint;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } visiblePoint;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } focusableFrameForZoom;
@property (readonly, nonatomic) BOOL isValid;
@property (readonly, nonatomic) AXElement *touchContainer;
@property (readonly, nonatomic) AXElement *accessibleAncestor;
@property (readonly, nonatomic) NSArray *accessibleDescendants;
@property (readonly, nonatomic) unsigned long long containerType;
@property (readonly, nonatomic) BOOL isKeyboardKey;
@property (readonly, nonatomic) BOOL isTouchContainer;
@property (readonly, nonatomic) BOOL hasWebContent;
@property (readonly, nonatomic) BOOL hasTextEntry;
@property (readonly, nonatomic) BOOL isMathEquation;
@property (readonly, nonatomic) unsigned int windowContextId;
@property (readonly, nonatomic) NSString *fbSceneIdentifier;
@property (readonly, nonatomic) unsigned int windowDisplayId;
@property (readonly, nonatomic) NSString *windowSceneIdentifier;
@property (readonly, nonatomic) NSArray *variantKeys;
@property (readonly, nonatomic) BOOL hasVariantKeys;
@property (readonly, nonatomic) NSArray *textOperations;
@property (readonly, nonatomic) NSArray *typingCandidates;
@property (nonatomic) BOOL assistiveTechFocused;
@property (readonly, nonatomic) NSArray *customActions;
@property (readonly, nonatomic) NSArray *customContent;
@property (readonly, nonatomic) NSArray *drags;
@property (readonly, nonatomic) NSArray *drops;
@property (readonly, nonatomic) BOOL isAccessibilityOpaqueElementProvider;
@property (readonly, nonatomic) NSDictionary *semanticContext;
@property (readonly, nonatomic) AXElement *remoteParent;
@property (readonly, nonatomic) AXElement *elementParent;
@property (readonly, nonatomic) unsigned long long scanningBehaviorTraits;
@property (readonly, nonatomic) int pid;
@property (readonly, nonatomic) BOOL applicationIsModal;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } rowRange;
@property (readonly, nonatomic) BOOL required;
@property (readonly, nonatomic) NSString *roleDescription;
@property (readonly, nonatomic) NSString *textualContext;
@property (readonly, nonatomic) BOOL isComboBox;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } selectedTextRange;
@property (readonly, nonatomic) BOOL nativeFocus;
@property (readonly, nonatomic) BOOL canPerformEscape;
@property (readonly, nonatomic) BOOL canPerformZoom;
@property (readonly, nonatomic) NSString *elementTransactionSummary;
@property (readonly, nonatomic) NSArray *supportedGestures;
@property (readonly, nonatomic) AXElement *elementForTextInsertionAndDeletion;
@property (readonly, nonatomic) BOOL respondsToUserInteraction;
@property (readonly, nonatomic) BOOL isScannerElement;
@property (readonly, nonatomic) BOOL representsScannerGroup;
@property (readonly, nonatomic) long long scannerActivateBehavior;
@property (retain, nonatomic) AXElement *autoscrollTarget;
@property (readonly, nonatomic) BOOL isAutoscrolling;
@property (readonly, nonatomic) NSArray *children;
@property (readonly, nonatomic) NSArray *parent;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frame;
@property (nonatomic) AXElementGroup *parentGroup;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)elementWithAXUIElement:(struct __AXUIElement *)axuielement;
+ (id)elementWithUIElement:(id)uielement;
+ (id)elementsWithUIElements:(id)uielements;
+ (id)primaryApp;
+ (void)unregisterNotifications:(id)notifications;
+ (void)registerNotifications:(id)notifications withIdentifier:(id)identifier withHandler:(id /* block */)handler;
+ (id)elementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate withVisualPadding:(BOOL)padding displayID:(unsigned int)id;
+ (id)elementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate withVisualPadding:(BOOL)padding;
+ (id)systemWideElement;
+ (id)applicationAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate;
+ (id)systemEventDispatchElement;
+ (id)elementWithData:(id)data;
+ (id)systemApplication;

/* instance methods */
- (id)makeLookingGlassRequest:(id)request;
- (id)_makeTinkerKitRequest:(id)request;
- (unsigned int)displayIdForContextId:(unsigned int)id;
- (unsigned int)contextIdForPoint:(struct CGPoint { double x0; double x1; })point;
- (id)initWithAXUIElement:(struct __AXUIElement *)axuielement;
- (id)initWithUIElement:(id)uielement;
- (id)serializeToData;
- (void)dealloc;
- (BOOL)isEqual:(id)equal;
- (id)elementForAttribute:(long long)attribute;
- (id)elementForAttribute:(long long)attribute shouldFetchAttributes:(BOOL)attributes;
- (id)_elementForAttribute:(long long)attribute shouldUpdateCache:(BOOL)cache shouldFetchAttributes:(BOOL)attributes;
- (id)elementForAttribute:(long long)attribute parameter:(id)parameter;
- (id)elementsForAttribute:(long long)attribute parameter:(id)parameter;
- (id)elementsForAttribute:(long long)attribute;
- (BOOL)isPassivelyListeningForEvents;
- (id)carPlaySystemApplication;
- (void)sendUserEventOccurred;
- (BOOL)systemPressTVSelectButton;
- (BOOL)systemPressTVPlayPauseButton;
- (BOOL)systemPressTVUpButton;
- (BOOL)systemPressTVDownButton;
- (BOOL)systemPressTVLeftButton;
- (BOOL)systemPressTVRightButton;
- (BOOL)systemPressTVMenuButton;
- (BOOL)systemLongPressTVMenuButton;
- (BOOL)systemPressTVHomeButton;
- (BOOL)systemLongPressTVHomeButton;
- (BOOL)systemPressTVSiriButton;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect toContextId:(unsigned int)id;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect toContextId:(unsigned int)id displayId:(unsigned int)id;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect fromContextId:(unsigned int)id;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect fromContextId:(unsigned int)id displayId:(unsigned int)id;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point fromContextId:(unsigned int)id;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point fromContextId:(unsigned int)id displayId:(unsigned int)id;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point toContextId:(unsigned int)id;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point toContextId:(unsigned int)id displayId:(unsigned int)id;
- (struct CGPath *)convertPath:(struct CGPath *)path fromContextId:(unsigned int)id;
- (struct CGPath *)convertPath:(struct CGPath *)path fromContextId:(unsigned int)id displayId:(unsigned int)id;
- (void)updateCache:(long long)cache;
- (void)clearCachedFrame:(BOOL)frame cachedVisibleFrame:(BOOL)frame;
- (id)firstResponderForFocus;
- (id)focusContainersForCurrentSceneIdentifier:(id)identifier;
- (id)elementsMatchingText:(id)text;
- (id)remoteApplication;
- (id)accessibilityLocalizedStringKey;
- (id)accessibilityLocalizationBundleID;
- (id)accessibilityLocalizationBundlePath;
- (id)accessibilityLocalizedStringTableName;
- (id)auditIssuesForOptions:(id)options;
- (id)containerTypes;
- (id)keyboardContainer;
- (BOOL)isMap;
- (id)_textOperationsOperator;
- (id)_objectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withParameterizedAttribute:(long long)attribute;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForTextRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)nextElementsWithCount:(unsigned long long)count;
- (id)previousElementsWithCount:(unsigned long long)count;
- (BOOL)hasAllTraits:(unsigned long long)traits;
- (BOOL)hasAnyTraits:(unsigned long long)traits;
- (BOOL)hasOnlyTraits:(unsigned long long)traits;
- (double)distanceToElement:(id)element;
- (double)distanceToPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)isNativeFocused;
- (BOOL)viewHierarchyHasNativeFocus;
- (BOOL)setNativeFocus;
- (BOOL)eligibleForIconVision;
- (id)_remoteParentForContextID;
- (BOOL)canPerformTrackingDetail;
- (BOOL)_showContextMenuWithTargetPointValue:(id)value;
- (BOOL)showContextMenu;
- (BOOL)scrollToVisible;
- (BOOL)canScrollInAtLeastOneDirection;
- (BOOL)supportsAction:(int)action;
- (BOOL)performAction:(int)action;
- (BOOL)performAction:(int)action withValue:(id)value;
- (struct __AXUIElement *)scrollAncestorForScrollAction:(int)action;
- (BOOL)canPerformActivate;
- (BOOL)_performActivate;
- (BOOL)canPerformSecondaryActivate;
- (BOOL)press;
- (BOOL)longPress;
- (BOOL)_zoomInOrOut:(BOOL)out;
- (BOOL)zoomIn;
- (BOOL)zoomOut;
- (id)_uiElementForTextInsertionAndDeletion;
- (void)insertText:(id)text;
- (void)insertText:(id)text asUndoableAction:(BOOL)action;
- (void)insertTextWithAlternatives:(id)alternatives;
- (void)deleteText;
- (id)alternativesForTextAtPosition:(unsigned long long)position;
- (BOOL)autoscrollInDirection:(unsigned long long)direction;
- (void)pauseAutoscrolling;
- (void)increaseAutoscrollSpeed;
- (void)decreaseAutoscrollSpeed;
- (void)setAutoscrollSpeed:(double)speed;
- (id)scrollViewsForAutoScroll;
- (void)scrollToTop;
- (void)scrollToBottom;
- (BOOL)pressTVSelectButton;
- (BOOL)pressTVBackButton;
- (BOOL)pressTVMenuButton;
- (BOOL)pressTVPlayPauseButton;
- (BOOL)pressTVUpButton;
- (BOOL)pressTVDownButton;
- (BOOL)pressTVLeftButton;
- (BOOL)pressTVRightButton;
- (BOOL)pressTVPlayButton;
- (BOOL)pressTVPauseButton;
- (BOOL)pressTVStopButton;
- (BOOL)pressTVRewindButton;
- (BOOL)pressTVFastForwardButton;
- (BOOL)pressTVNextTrackButton;
- (BOOL)pressTVPreviousTrackButton;
- (BOOL)pressTVSkipForwardsButton;
- (BOOL)pressTVSkipBackwardsButton;
- (BOOL)pressTVDataOnScreenButton;
- (BOOL)pressTVMicButton;
- (id)highestAncestorGroup;
- (BOOL)isGroup;
- (id)_axElementsForAXUIElements:(id)axuielements;
- (void)_updateLabel;
@end

#endif /* AXElement_h */
