//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXUIElement_h
#define AXUIElement_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "UIElementProtocol-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSString;

@interface AXUIElement : NSObject<UIElementProtocol, NSCopying> {
  /* instance variables */
  long long _cachedRefCount;
  BOOL _isValid;
}

@property (readonly, nonatomic) struct __AXUIElement * axElement;
@property (readonly, @dynamic, nonatomic) NSDictionary *cachedAttributes;
@property (readonly, nonatomic) NSMutableDictionary *copyCachedAttributes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (struct __AXUIElement *)systemWideAXUIElement;
+ (id)uiSystemWideApplication;
+ (void)applyElementAttributeCacheScheme:(unsigned long long)scheme;
+ (void)applyElementCustomAttributeCacheScheme:(id)scheme;
+ (void)initialize;
+ (id)uiElementWithAXElement:(struct __AXUIElement *)axelement;
+ (id)uiElementWithAXElement:(struct __AXUIElement *)axelement cache:(id)cache;
+ (id)scrollAncestorAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate forApplication:(struct __AXUIElement *)application contextId:(unsigned int)id displayId:(unsigned int)id;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate forApplication:(struct __AXUIElement *)application contextId:(unsigned int)id;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate displayId:(unsigned int)id;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate startWithElement:(id)element;
+ (id)uiApplicationAtCoordinate:(struct CGPoint { double x0; double x1; })coordinate;
+ (id)uiApplicationForContext:(unsigned int)context;

/* instance methods */
- (id)copyWithZone:(struct _NSZone *)zone;
- (unsigned int)_activeKeyboardContextId;
- (id)initWithAXElement:(struct __AXUIElement *)axelement cache:(id)cache;
- (id)initWithAXElement:(struct __AXUIElement *)axelement;
- (void)dealloc;
- (void *)_cachedValueForAttribute:(long long)attribute;
- (void)_setCachedValue:(void *)value forAttribute:(long long)attribute;
- (int)pid;
- (BOOL)isEqual:(id)equal;
- (void)setAXElement:(struct __AXUIElement *)axelement;
- (void)_invalidate;
- (void *)modifyStaticCacheValue:(void *)value;
- (void)enableCache:(BOOL)cache;
- (void)disableCache;
- (void)_createCache:(BOOL)cache;
- (void)updateCacheWithAttributes:(id)attributes;
- (BOOL)isValidForApplication:(id)application;
- (BOOL)isValid;
- (id)_outputCache;
- (void)updateCache:(long long)cache;
- (id)arrayWithAXAttribute:(long long)axattribute;
- (id)stringWithAXAttribute:(long long)axattribute;
- (BOOL)boolWithAXAttribute:(long long)axattribute;
- (id)numberWithAXAttribute:(long long)axattribute;
- (struct CGPoint { double x0; double x1; })pointWithAXAttribute:(long long)axattribute;
- (struct CGPath *)pathWithAXAttribute:(long long)axattribute;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectWithAXAttribute:(long long)axattribute;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeWithAXAttribute:(long long)axattribute;
- (struct CGColor *)colorWithAXAttribute:(long long)axattribute;
- (id)objectWithAXAttribute:(long long)axattribute;
- (id)objectWithAXAttribute:(long long)axattribute parameter:(void *)parameter;
- (id)valueArrayWithAXAttributes:(struct __CFArray *)axattributes;
- (BOOL)performAXAction:(int)axaction withValue:(id)value;
- (BOOL)performAXAction:(int)axaction withValue:(id)value fencePort:(unsigned int)port;
- (BOOL)canPerformAXAction:(int)axaction;
- (BOOL)performAXAction:(int)axaction;
- (id)uiElementsWithAttribute:(long long)attribute parameter:(void *)parameter;
- (id)uiElementsWithAttribute:(long long)attribute parameter:(void *)parameter fetchAttributes:(BOOL)attributes;
- (id)uiElementsWithAttribute:(long long)attribute;
- (id)nextElementsWithParameters:(id)parameters;
- (id)previousElementsWithParameters:(id)parameters;
- (id)nextElementsWithCount:(unsigned long long)count;
- (id)nextElementsIncludingPrefetchedAttributesWithCount:(unsigned long long)count;
- (id)previousElementsWithCount:(unsigned long long)count;
- (id)childrenIncludingPrefetchedAttributesWithCount:(unsigned long long)count;
- (id)_elementsWithParameter:(long long)parameter parameters:(id)parameters prefetchAttributes:(BOOL)attributes;
- (void)setAXAttribute:(long long)axattribute withBOOL:(BOOL)bool;
- (void)setAXAttribute:(long long)axattribute withString:(id)string;
- (void)setAXAttribute:(long long)axattribute withLong:(long long)long;
- (void)setAXAttribute:(long long)axattribute withFloat:(float)float;
- (void)setAXAttribute:(long long)axattribute withNumber:(id)number;
- (void)setAXAttribute:(long long)axattribute withPoint:(struct CGPoint { double x0; double x1; })point;
- (void)setAXAttribute:(long long)axattribute withSize:(struct CGSize { double x0; double x1; })size;
- (void)setAXAttribute:(long long)axattribute withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setAXAttribute:(long long)axattribute withUIElement:(id)uielement;
- (void)setAXAttribute:(long long)axattribute withUIElementArray:(id)array;
- (void)setAXAttribute:(long long)axattribute withArray:(id)array;
- (void)setAXAttribute:(long long)axattribute withObject:(id)object synchronous:(BOOL)synchronous;
- (BOOL)isMockElement;
- (void)setAXAttribute:(long long)axattribute withObject:(id)object;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_selectedTextRange;
- (id)_objectForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withParameterizedAttribute:(long long)attribute;
- (id)_attributedValueForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)_valueForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (long long)_lineStartPosition;
- (long long)_lineEndPosition;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_lineRangeForPosition:(unsigned long long)position;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })nextCursorRangeInDirection:(unsigned long long)direction unit:(unsigned long long)unit outputRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_lineRangeWithFaultTolerance:(long long)tolerance forward:(BOOL)forward;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })nextCursorRangeInDirection:(unsigned long long)direction unit:(unsigned long long)unit outputRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range currentCursorRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
@end

#endif /* AXUIElement_h */
