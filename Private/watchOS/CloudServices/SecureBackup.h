//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 611.60.5.0.0
//
#ifndef SecureBackup_h
#define SecureBackup_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "SESWrapper.h"

@class EscrowPrerecord, NSData, NSDate, NSDictionary, NSError, NSNumber, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface SecureBackup : NSObject<NSSecureCoding>

@property (retain, nonatomic) SESWrapper *ses;
@property (copy, nonatomic) NSString *appleID;
@property (copy, nonatomic) NSString *authToken;
@property (retain, nonatomic) NSDate *backOffDate;
@property (retain, nonatomic) NSData *certData;
@property (copy, nonatomic) NSString *countryDialCode;
@property (copy, nonatomic) NSString *countryCode;
@property (nonatomic) BOOL deleteAll;
@property (copy, nonatomic) NSString *dsid;
@property (copy, nonatomic) NSString *emcsCred;
@property (retain, nonatomic) NSDictionary *emcsDict;
@property (nonatomic) BOOL emcsMode;
@property (copy, nonatomic) NSString *encodedMetadata;
@property (copy, nonatomic) NSString *duplicateEncodedMetadata;
@property (retain, nonatomic) NSDictionary *escrowRecord;
@property (copy, nonatomic) NSString *escrowProxyURL;
@property (nonatomic) BOOL excludeiCDPRecords;
@property (nonatomic) BOOL fmipRecovery;
@property (copy, nonatomic) NSString *fmipUUID;
@property (nonatomic) BOOL icdp;
@property (copy, nonatomic) NSString *iCloudEnv;
@property (retain, nonatomic) NSData *iCloudIdentityData;
@property (copy, nonatomic) NSString *iCloudPassword;
@property (retain, nonatomic) NSData *idmsData;
@property (nonatomic) BOOL idmsRecovery;
@property (retain, nonatomic) NSDictionary *metadata;
@property (retain, nonatomic) NSDictionary *metadataHash;
@property (copy, nonatomic) NSString *oldEMCSCred;
@property (copy, nonatomic) NSString *passphrase;
@property (copy, nonatomic) NSString *recordID;
@property (copy, nonatomic) NSString *recoveryKey;
@property (copy, nonatomic) NSString *smsTarget;
@property (nonatomic) BOOL silent;
@property (copy, nonatomic) NSNumber *specifiedFederation;
@property (nonatomic) BOOL stingray;
@property (nonatomic) BOOL synchronize;
@property (nonatomic) BOOL useCachedPassphrase;
@property (nonatomic) BOOL useRecoveryPET;
@property (nonatomic) BOOL usesMultipleiCSC;
@property (nonatomic) BOOL usesRandomPassphrase;
@property (nonatomic) BOOL usesRecoveryKey;
@property (copy, nonatomic) NSString *verificationToken;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSError *error;
@property (readonly, nonatomic) NSString *activityLabel;
@property (readonly, nonatomic) NSUUID *activityUUID;
@property (nonatomic) BOOL suppressServerFiltering;
@property (nonatomic) BOOL deleteDoubleOnly;
@property (nonatomic) BOOL nonViableRepair;
@property (nonatomic) BOOL sosCompatibleEscrowSorting;
@property (retain, nonatomic) NSString *deviceSessionID;
@property (retain, nonatomic) NSString *flowID;
@property (retain, nonatomic) NSString *recoveryUUID;
@property (retain, nonatomic) NSString *doubleRecoveryUUID;
@property (nonatomic) BOOL recoveryResult;
@property (nonatomic) BOOL silentDoubleRecovery;
@property (copy, nonatomic) NSString *hsa2CachedPrerecordUUID;
@property (retain, nonatomic) EscrowPrerecord *prerecord;

/* class methods */
+ (id)_ClassCreateSecureBackupConcurrentConnection;
+ (BOOL)supportsSecureCoding;
+ (void)asyncRequestEscrowRecordUpdate;
+ (unsigned int)needPasscodeForHSA2EscrowRecordUpdate:(id *)update;
+ (unsigned int)daemonPasscodeRequestOpinion:(id *)opinion;
+ (void)saveTermsAcceptance:(id)acceptance reply:(id /* block */)reply;
+ (void)getAcceptedTermsForAltDSID:(id)dsid reply:(id /* block */)reply;
+ (id)_getAcceptedTermsForAltDSID:(id)dsid withError:(id *)error;
+ (id)getAllAcceptedTermsWithError:(id *)error;
+ (id)getAcceptedTermsForAltDSID:(id)dsid withError:(id *)error;
+ (BOOL)moveToFederationAllowed:(id)allowed altDSID:(id)dsid error:(id *)error;
+ (id)knownICDPFederations:(id *)icdpfederations;

/* instance methods */
- (id)_CreateSecureBackupConnection;
- (id)initWithUserActivityLabel:(id)label;
- (id)init;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)populateWithInfo:(id)info;
- (void)getAccountInfoWithResults:(id /* block */)results;
- (void)enableWithCompletionBlock:(id /* block */)block;
- (void)recoverWithResults:(id /* block */)results;
- (void)recoverRecordContents:(id /* block */)contents;
- (void)createICDPRecordWithContents:(id)contents reply:(id /* block */)reply;
- (void)disableWithCompletionBlock:(id /* block */)block;
- (void)stashRecoveryDataWithCompletionBlock:(id /* block */)block;
- (void)updateMetadataWithCompletionBlock:(id /* block */)block;
- (void)cachePassphrase;
- (void)cachePassphraseWithCompletionBlock:(id /* block */)block;
- (void)uncachePassphraseWithCompletionBlock:(id /* block */)block;
- (void)cacheRecoveryKeyWithCompletionBlock:(id /* block */)block;
- (void)uncacheRecoveryKeyWithCompletionBlock:(id /* block */)block;
- (void)uncachePassphrase;
- (void)startSMSChallengeWithResults:(id /* block */)results;
- (void)getCountrySMSCodesWithResults:(id /* block */)results;
- (void)changeSMSTargetWithCompletionBlock:(id /* block */)block;
- (void)backupWithInfo:(id)info completionBlock:(id /* block */)block;
- (void)backOffDateWithCompletionBlock:(id /* block */)block;
- (void)setBackOffDateWithCompletionBlock:(id /* block */)block;
- (void)notificationInfo:(id /* block */)info;
- (void)stateCaptureWithCompletionBlock:(id /* block */)block;
- (id)getAccountInfoWithError:(id *)error;
- (id)getAccountInfoWithInfo:(id)info results:(id *)results;
- (void)getAccountInfoWithInfo:(id)info completionBlockWithResults:(id /* block */)results;
- (void)getAccountInfoWithInfo:(id)info completionBlock:(id /* block */)block;
- (BOOL)updateMetadataWithError:(id *)error;
- (id)updateMetadataWithInfo:(id)info;
- (void)updateMetadataWithInfo:(id)info completionBlock:(id /* block */)block;
- (BOOL)enableWithError:(id *)error;
- (id)enableWithInfo:(id)info;
- (void)enableWithInfo:(id)info completionBlock:(id /* block */)block;
- (id)recoverWithError:(id *)error;
- (id)recoverWithCDPContext:(id)cdpcontext escrowRecord:(id)record error:(id *)error;
- (id)recoverSilentWithCDPContext:(id)cdpcontext allRecords:(id)records error:(id *)error;
- (BOOL)isRecoveryKeySet:(id *)set;
- (void)restoreKeychainAsyncWithPassword:(id)password keybagDigest:(id)digest haveBottledPeer:(BOOL)peer viewsNotToBeRestored:(id)restored error:(id *)error;
- (BOOL)restoreKeychainWithBackupPassword:(id)password error:(id *)error;
- (BOOL)verifyRecoveryKey:(id)key error:(id *)error;
- (BOOL)removeRecoveryKeyFromBackup:(id *)backup;
- (id)recoverWithInfo:(id)info results:(id *)results;
- (void)recoverWithInfo:(id)info completionBlockWithResults:(id /* block */)results;
- (void)recoverWithInfo:(id)info completionBlock:(id /* block */)block;
- (BOOL)disableWithError:(id *)error;
- (id)disableWithInfo:(id)info;
- (void)disableWithInfo:(id)info completionBlock:(id /* block */)block;
- (void)stashRecoveryDataWithInfo:(id)info completionBlock:(id /* block */)block;
- (id)cachePassphraseWithInfo:(id)info;
- (void)cachePassphraseWithInfo:(id)info completionBlock:(id /* block */)block;
- (id)uncachePassphraseWithInfo:(id)info;
- (void)uncachePassphraseWithInfo:(id)info completionBlock:(id /* block */)block;
- (id)startSMSChallengeWithError:(id *)error;
- (id)startSMSChallengeWithInfo:(id)info results:(id *)results;
- (void)startSMSChallengeWithInfo:(id)info completionBlockWithResults:(id /* block */)results;
- (void)startSMSChallengeWithInfo:(id)info completionBlock:(id /* block */)block;
- (void)getCountrySMSCodesWithInfo:(id)info completionBlockWithResults:(id /* block */)results;
- (BOOL)changeSMSTargetWithError:(id *)error;
- (id)changeSMSTargetWithInfo:(id)info;
- (void)changeSMSTargetWithInfo:(id)info completionBlock:(id /* block */)block;
- (id)backupForRecoveryKeyWithInfo:(id)info;
- (id)backupWithInfo:(id)info;
- (void)backOffDateWithInfo:(id)info completionBlock:(id /* block */)block;
- (void)setBackOffDateWithInfo:(id)info completionBlock:(id /* block */)block;
- (id)srpInitNonce;
- (void)srpRecoveryUpdateDSID:(id)dsid recoveryPassphrase:(id)passphrase;
- (id)srpRecoveryBlobFromSRPInitResponse:(id)response error:(id *)error;
- (id)srpRecoveryBlobFromSRPInitResponse:(id)response;
- (void)prepareHSA2EscrowRecordContents:(BOOL)contents reply:(id /* block */)reply;
- (id)beginHSA2PasscodeRequest:(BOOL)request error:(id *)error;
- (id)beginHSA2PasscodeRequest:(BOOL)request uuid:(id)uuid error:(id *)error;
- (id)beginHSA2PasscodeRequest:(BOOL)request uuid:(id)uuid reason:(id)reason error:(id *)error;
- (void)getCertificates:(id /* block */)certificates;
- (BOOL)requiresDoubleEnrollment;
@end

#endif /* SecureBackup_h */
