//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.23.5.2.1
//
#ifndef AFPowerContextPolicy_h
#define AFPowerContextPolicy_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@interface AFPowerContextPolicy : NSObject<NSCopying, NSSecureCoding>

@property (readonly, nonatomic) struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; } asrAssistantPolicy;
@property (readonly, nonatomic) struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; } asrDictationPolicy;
@property (readonly, nonatomic) struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; } ttsPolicy;
@property (readonly, nonatomic) struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; } siriUIPolicy;
@property (readonly, nonatomic) unsigned long long thermalMitigationLevel;
@property (readonly, nonatomic) unsigned long long platformContext;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithAsrAssistantPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy asrDictationPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy ttsPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy siriUIPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })uipolicy thermalMitigationLevel:(unsigned long long)level platformContext:(unsigned long long)context;
- (id)initWithAsrAssistantPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy asrDictationPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy ttsPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy siriUIPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })uipolicy thermalMitigationLevel:(unsigned long long)level;
- (id)initWithAsrAssistantPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy asrDictationPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy ttsPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy siriUIPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })uipolicy;
- (id)initWithAsrAssistantPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy asrDictationPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy ttsPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy thermalMitigationLevel:(unsigned long long)level;
- (id)initWithAsrAssistantPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy asrDictationPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy ttsPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy thermalMitigationLevel:(unsigned long long)level platformContext:(unsigned long long)context;
- (id)initWithAsrAssistantPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy asrDictationPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy ttsPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy;
- (id)initWithAsrAssistantPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy asrDictationPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy ttsPolicy:(struct AFPowerContext { unsigned long long x0; unsigned long long x1; unsigned long long x2; })policy platformContext:(unsigned long long)context;
- (id)initWithEncodedPolicy:(unsigned long long)policy;
- (unsigned long long)encodePolicy;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)description;
@end

#endif /* AFPowerContextPolicy_h */
