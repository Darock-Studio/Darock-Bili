//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.23.5.2.1
//
#ifndef AFMyriadAccessoryMessage_h
#define AFMyriadAccessoryMessage_h
@import Foundation;

@class NSUUID;

@interface AFMyriadAccessoryMessage : NSObject {
  /* instance variables */
  struct myrAccessoryMessage { unsigned char version; unsigned long long requestType; unsigned long long session; double voiceTriggerEndTime; unsigned short audioHash; unsigned char goodnessScore; unsigned char userConfidenceScore; unsigned char tieBreaker; unsigned char deviceClass; unsigned char deviceGroup; unsigned char productType; unsigned char electionDecision; unsigned char emergencyHandled; unsigned char ack; } _message;
}

@property (readonly, nonatomic) unsigned char version;
@property (readonly, nonatomic) unsigned long long requestType;
@property (readonly, nonatomic) unsigned long long session;
@property (readonly, nonatomic) double voiceTriggerEndTime;
@property (readonly, nonatomic) unsigned short audioHash;
@property (readonly, nonatomic) unsigned char goodnessScore;
@property (readonly, nonatomic) unsigned char userConfidenceScore;
@property (readonly, nonatomic) unsigned char tieBreaker;
@property (readonly, nonatomic) unsigned char deviceClass;
@property (readonly, nonatomic) unsigned char deviceGroup;
@property (readonly, nonatomic) unsigned char productType;
@property (readonly, nonatomic) unsigned char electionDecision;
@property (readonly, nonatomic) unsigned char emergencyHandled;
@property (readonly, nonatomic) unsigned char ack;
@property (readonly, nonatomic) NSUUID *accessoryId;
@property (readonly, nonatomic) BOOL isSane;
@property (readonly, nonatomic) BOOL serializedProtocol;

/* class methods */
+ (id)protocolName;
+ (id)acknowledgeRequestKey;
+ (id)audioDataKey;
+ (id)deviceInfoKey;
+ (id)electionDecisionKey;
+ (id)emergencyHandledKey;
+ (id)sessionIdKey;
+ (id)requestTypeKey;
+ (id)messageKey;
+ (BOOL)isMyriadRequestMessage:(id)message;
+ (id)myriadRequestTypeAsString:(unsigned long long)string;

/* instance methods */
- (void)_copyRawBytesFromSource:(const void *)source toDest:(void *)dest length:(unsigned long long)length;
- (void)_initializeMessageObj:(id)obj;
- (void)_initializeMessageObjFromDictionary:(id)dictionary;
- (void)_initWithMessage:(const struct myrAccessoryMessage { unsigned char x0; unsigned long long x1; unsigned long long x2; double x3; unsigned short x4; unsigned char x5; unsigned char x6; unsigned char x7; unsigned char x8; unsigned char x9; unsigned char x10; unsigned char x11; unsigned char x12; unsigned char x13; } *)message;
- (id)initWithRequestType:(unsigned long long)type session:(unsigned long long)session voiceTriggerEndTime:(double)time audioHash:(unsigned short)hash goodnessScore:(unsigned char)score userConfidenceScore:(unsigned char)score tieBreaker:(unsigned char)breaker deviceClass:(unsigned char)class deviceGroup:(unsigned char)group productType:(unsigned char)type electionDecision:(unsigned char)decision emergencyHandled:(unsigned char)handled ack:(unsigned char)ack accessoryId:(id)id;
- (id)initPreheatMessageWithSessionId:(unsigned long long)id accessoryId:(id)id;
- (id)initElectionDecisionMessageWithSessionId:(unsigned long long)id decision:(BOOL)decision accessoryId:(id)id;
- (id)initResetMessageWithSessionId:(unsigned long long)id accessoryId:(id)id;
- (id)initWithAccessoryMessage:(id)message accessoryId:(id)id;
- (id)initWithAccessoryMessageAsDictionary:(id)dictionary accessoryId:(id)id;
- (id)messageAsData;
- (id)description;
- (unsigned char)electionWon;
- (unsigned char)isEmergencyHandled;
- (unsigned char)isAcknowledgement;
- (BOOL)usesSerializedProtocol;
@end

#endif /* AFMyriadAccessoryMessage_h */
