//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 470.14.3.0.0
//
#ifndef FigMetalContext_h
#define FigMetalContext_h
@import Foundation;

#include "FigMetalAllocator.h"
#include "FigMetalExecutionStatus.h"
#include "MTLCommandBuffer-Protocol.h"
#include "MTLCommandQueue-Protocol.h"
#include "MTLDevice-Protocol.h"

@class MTLVertexDescriptor, NSString;
@protocol MTLBuffer, MTLLibrary, MTLPipelineLibrarySPI;

@interface FigMetalContext : NSObject {
  /* instance variables */
  NSString *_gpuName;
}

@property (retain, nonatomic) NSObject<MTLDevice> *device;
@property (retain, nonatomic) NSObject<MTLCommandQueue> *commandQueue;
@property (retain, nonatomic) NSObject<MTLLibrary> *library;
@property (retain, nonatomic) NSObject<MTLCommandBuffer> *commandBuffer;
@property (retain, nonatomic) NSObject<MTLPipelineLibrarySPI> *pipelineLibrary;
@property (retain, nonatomic) FigMetalAllocator *allocator;
@property (retain, nonatomic) FigMetalExecutionStatus *executionStatus;
@property (nonatomic) BOOL allowCommandBufferCommitsOnlyByForceCommit;
@property (retain, nonatomic) NSObject<MTLBuffer> *fullRangeVertexBuf;
@property (retain, nonatomic) MTLVertexDescriptor *fullRangeVertexDesc;

/* class methods */
+ (id)createMetalDevice;

/* instance methods */
- (id)init;
- (id)initWithFigMetalContext:(id)context andOptionalCommandQueue:(id)queue;
- (id)initWithbundle:(id)withbundle andOptionalCommandQueue:(id)queue;
- (id)initWithLibraryData:(char *)data ofSize:(unsigned long long)size andOptionalCommandQueue:(id)queue;
- (id)initWithoutLibraryUsingOptionalCommandQueue:(id)queue;
- (int)commonInitWithOptionalCommandQueue:(id)queue;
- (int)initRangeVertex;
- (void)commit;
- (void)forceCommit;
- (void)commitAndWait;
- (void)waitForIdle;
- (void)waitForSchedule;
- (id)computePipelineStateFor:(id)for constants:(id)constants;
- (void)insertDebugCaptureBoundary;
- (int)setQueuePriority:(int)priority;
- (BOOL)WriteMetalTextureToFile:(const char *)file texture:(id)texture;
- (BOOL)WriteMetalTextureToFile:(const char *)file texture:(id)texture mipmapLevel:(int)level;
- (BOOL)ReadMetalTextureFromFile:(const char *)file texture:(id)texture;
- (BOOL)ReadMetalTextureFromFile:(const char *)file texture:(id)texture mipmapLevel:(int)level;
- (id)CreateMetalTextureFromFile:(const char *)file pixelFormat:(unsigned long long)format usage:(unsigned long long)usage width:(unsigned long long)width height:(unsigned long long)height;
- (unsigned long long)getPixelSizeInBytes:(unsigned long long)bytes;
- (id)bindPixelBufferToMTL2DTexture:(struct __CVBuffer *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage plane:(unsigned long long)plane alignmentFactor:(unsigned long long)factor;
- (id)bindPixelBufferToMTL2DTexture:(struct __CVBuffer *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage plane:(unsigned long long)plane slice:(unsigned long long)slice alignmentFactor:(unsigned long long)factor;
- (id)bindPixelBufferToMTL2DTexture:(struct __CVBuffer *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage plane:(unsigned long long)plane slice:(unsigned long long)slice widthAlignmentFactor:(unsigned long long)factor heightAlignmentFactor:(unsigned long long)factor;
- (id)bindPixelBufferToMTL2DTexture:(struct __CVBuffer *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage plane:(unsigned long long)plane widthAlignmentFactor:(unsigned long long)factor heightAlignmentFactor:(unsigned long long)factor;
- (id)bindPixelBufferToMTL2DTexture:(struct __CVBuffer *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage plane:(unsigned long long)plane slice:(unsigned long long)slice;
- (id)bindPixelBufferToMTL2DTexture:(struct __CVBuffer *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage plane:(unsigned long long)plane;
- (id)bindPixelBufferToMTLBuffer:(struct __CVBuffer *)mtlbuffer;
- (id)bindPixelBufferToMTL2DTexture:(struct __CVBuffer *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage textureSize:(struct CGSize { double x0; double x1; })size plane:(unsigned long long)plane slice:(unsigned long long)slice;
- (id)bindPixelBufferToMTL2DTexture:(struct __CVBuffer *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage textureSize:(struct CGSize { double x0; double x1; })size plane:(unsigned long long)plane;
- (id)bindIOSurfaceToMTL2DTexture:(struct __IOSurface *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage width:(unsigned long long)width height:(unsigned long long)height plane:(unsigned long long)plane slice:(unsigned long long)slice;
- (id)bindIOSurfaceToMTL2DTexture:(struct __IOSurface *)dtexture pixelFormat:(unsigned long long)format usage:(unsigned long long)usage width:(unsigned long long)width height:(unsigned long long)height plane:(unsigned long long)plane;
- (id)rebindTex:(id)tex format:(unsigned long long)format usage:(unsigned long long)usage plane:(int)plane slice:(int)slice xFactor:(int)factor;
- (id)rebindTex:(id)tex format:(unsigned long long)format usage:(unsigned long long)usage plane:(int)plane xFactor:(int)factor;
- (void)prewarmInternalMetalShadersForFormatsList:(id)list;
- (id)create2DTextureFromBuffer:(id)buffer offset:(unsigned long long)offset width:(int)width height:(int)height format:(unsigned long long)format usage:(unsigned long long)usage;
- (id)create2DTextureFromBuffer:(id)buffer offset:(unsigned long long)offset stride:(unsigned long long)stride width:(int)width height:(int)height format:(unsigned long long)format usage:(unsigned long long)usage;
- (void)_identifyGPU;
@end

#endif /* FigMetalContext_h */
