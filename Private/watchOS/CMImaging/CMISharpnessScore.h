//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 470.14.3.0.0
//
#ifndef CMISharpnessScore_h
#define CMISharpnessScore_h
@import Foundation;

#include "CMIStatistics.h"
#include "FigMetalAllocator.h"
#include "FigMetalContext.h"
#include "SSCHistogram.h"

@protocol MTLComputePipelineState, [4@"<MTLComputePipelineState>"];

@interface CMISharpnessScore : NSObject {
  /* instance variables */
  FigMetalContext *_metal;
  CMIStatistics *_statistics;
  SSCHistogram *_histogram;
  float _kernelWeight[25];
  <MTLComputePipelineState> * _applyConvolutionShaderFloat[4];
  <MTLComputePipelineState> * _applyConvolutionShaderUInt[4];
  NSObject<MTLComputePipelineState> *_computeClipValueWithHistogramShader;
}

@property (retain, nonatomic) FigMetalAllocator *allocator;

/* class methods */
+ (unsigned long long)bytesRequiredForProcessingImageWith:(int)with height:(int)height;
+ (id)externalMemoryDescriptorForConfiguration:(id)configuration;

/* instance methods */
- (id)initWithOptionalCommandQueue:(id)queue kernelWeights:(id)weights;
- (id)initWithOptionalCommandQueue:(id)queue externalMemoryResource:(id)resource kernelWeights:(id)weights;
- (int)calculateFromTexture:(id)texture andFromRoi:(id)roi sourceComponent:(int)component toResult:(id *)result;
- (int)calculateFromRawTexture:(id)texture andFromRoi:(id)roi sourceComponent:(int)component isQuadra:(BOOL)quadra firstPixel:(int)pixel toResult:(id *)result;
- (int)calculateFromPixelBuffer:(struct __CVBuffer *)buffer andFromRoi:(id)roi sourceComponent:(int)component toResult:(id *)result;
- (int)_calculateFromTexture:(id)texture andFromRoi:(id)roi sourceComponent:(int)component binning:(int)binning firstPixel:(int)pixel toResult:(id *)result;
- (int)_computeClipValueWithHistogram:(id)histogram andRoi:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })roi toClipValue:(id)value;
- (int)_computeSharpnessScore:(id)score outputTexture:(id)texture sourceComponent:(int)component binning:(int)binning firstPixel:(int)pixel roi:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })roi clipValueMetalBuffer:(id)buffer;
- (id)computePipelineFor:(unsigned long long)for sourceComponent:(int)component;
- (void)_getDefaultConvolutionWeights:(float *)weights;
- (int)_blurImage:(id)image toImage:(id)image sourceComponent:(int)component binning:(int)binning firstPixel:(int)pixel roi:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })roi;
@end

#endif /* CMISharpnessScore_h */
