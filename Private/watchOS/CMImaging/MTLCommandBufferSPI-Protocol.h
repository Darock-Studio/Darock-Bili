//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 470.14.3.0.0
//
#ifndef MTLCommandBufferSPI_Protocol_h
#define MTLCommandBufferSPI_Protocol_h
@import Foundation;

@protocol MTLCommandBufferSPI <MTLCommandBuffer>

@property (readonly, nonatomic) unsigned long long listIndex;
@property BOOL profilingEnabled;
@property (readonly) NSDictionary *profilingResults;
@property (readonly, nonatomic) NSMutableDictionary *userDictionary;
@property (readonly) unsigned long long globalTraceObjectID;
@property (readonly, retain) NSObject<MTLDeadlineProfile> *deadlineProfile;

/* instance methods */
- (void)encodeDashboardTagForResourceGroup:(id)group;
- (void)encodeDashboardFinalizeForResourceGroup:(id)group dashboard:(unsigned long long)dashboard value:(unsigned long long)value forIndex:(unsigned long long)index;
- (void)encodeDashboardFinalizeForResourceGroup:(id)group dashboard:(unsigned long long)dashboard values:(const unsigned long long *)values indices:(const unsigned long long *)indices count:(unsigned long long)count;
- (void)addPurgedResource:(id)resource;
- (void)addPurgedHeap:(id)heap;
- (void)commitWithDeadline:(unsigned long long)deadline;
- (BOOL)commitAndWaitUntilSubmittedWithDeadline:(unsigned long long)deadline;
- (void)setLogs:(id)logs;
- (void)presentDrawable:(id)drawable options:(id)options;
- (void)encodeSignalEvent:(id)event value:(unsigned long long)value agentMask:(unsigned long long)mask;
- (void)encodeConditionalAbortEvent:(id)event;
- (BOOL)isProfilingEnabled;
@optional
/* instance methods */
- (void *)debugBufferContentsWithLength:(unsigned long long *)length;
- (id)sampledRenderCommandEncoderWithDescriptor:(id)descriptor programInfoBuffer:(union { struct { unsigned int x0 :8; unsigned int x1 :24; unsigned int x2; unsigned long long x3; unsigned long long x4; } x0; struct { unsigned int x0 :8; unsigned int x1 :24; unsigned int x2; unsigned long long x3; unsigned long long x4; } x1; } *)buffer capacity:(unsigned long long)capacity;
- (id)sampledComputeCommandEncoderWithProgramInfoBuffer:(union { struct { unsigned int x0 :8; unsigned int x1 :24; unsigned int x2; unsigned long long x3; unsigned long long x4; } x0; struct { unsigned int x0 :8; unsigned int x1 :24; unsigned int x2; unsigned long long x3; unsigned long long x4; } x1; } *)buffer capacity:(unsigned long long)capacity;
- (id)sampledComputeCommandEncoderWithDispatchType:(unsigned long long)type programInfoBuffer:(union { struct { unsigned int x0 :8; unsigned int x1 :24; unsigned int x2; unsigned long long x3; unsigned long long x4; } x0; struct { unsigned int x0 :8; unsigned int x1 :24; unsigned int x2; unsigned long long x3; unsigned long long x4; } x1; } *)buffer capacity:(unsigned long long)capacity;
- (id)sampledComputeCommandEncoderWithDescriptor:(id)descriptor programInfoBuffer:(union { struct { unsigned int x0 :8; unsigned int x1 :24; unsigned int x2; unsigned long long x3; unsigned long long x4; } x0; struct { unsigned int x0 :8; unsigned int x1 :24; unsigned int x2; unsigned long long x3; unsigned long long x4; } x1; } *)buffer capacity:(unsigned long long)capacity;
- (id)debugCommandEncoder;
- (void)commitAndHold;
- (BOOL)commitAndWaitUntilSubmitted;
- (void)setProtectionOptions:(unsigned long long)options;
- (unsigned long long)protectionOptions;
- (void)encodeWaitForEvent:(id)event value:(unsigned long long)value timeout:(unsigned int)timeout;
- (void)setResourceGroups:(const id *)groups count:(unsigned long long)count;
- (void)dropResourceGroups:(const id *)groups count:(unsigned long long)count;
- (void)encodeCacheHintTag:(unsigned long long)tag resourceGroups:(const id *)groups count:(unsigned long long)count;
- (void)encodeCacheHintFinalize:(unsigned long long)finalize resourceGroups:(const id *)groups count:(unsigned long long)count;
- (void)encodeSignalEventScheduled:(id)scheduled value:(unsigned long long)value;
- (unsigned long long)getListIndex;
@end

#endif /* MTLCommandBufferSPI_Protocol_h */
