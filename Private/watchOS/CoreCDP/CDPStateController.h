//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 359.4.1.2.1
//
#ifndef CDPStateController_h
#define CDPStateController_h
@import Foundation;

#include "CDPController.h"

@interface CDPStateController : CDPController
/* instance methods */
- (id)init;
- (BOOL)isManateeAvailable:(id *)available;
- (void)handleCloudDataProtectionStateWithCompletion:(id /* block */)completion;
- (void)repairCloudDataProtectionStateWithCompletion:(id /* block */)completion;
- (void)startCircleApplicationApprovalServer:(id /* block */)server;
- (void)startCircleApplicationApprovalServerSkipEscrowFetches:(id /* block */)fetches;
- (void)recoverAndSynchronizeWithSquirrel:(id /* block */)squirrel;
- (void)recoverWithSquirrel:(id /* block */)squirrel;
- (void)attemptToEscrowPreRecord:(id)record preRecordUUID:(id)uuid secretType:(unsigned long long)type completion:(id /* block */)completion;
- (void)attemptToEscrowPreRecord:(id)record completion:(id /* block */)completion;
- (void)localSecretChangedTo:(id)to secretType:(unsigned long long)type completion:(id /* block */)completion;
- (void)finishOfflineLocalSecretChangeWithCompletion:(id /* block */)completion;
- (void)finishCyrusFlowAfterTermsAgreementWithContext:(id /* block */)context;
- (BOOL)shouldPerformRepairWithOptionForceFetch:(BOOL)fetch error:(id *)error;
- (void)shouldPerformRepairWithOptionForceFetch:(BOOL)fetch completion:(id /* block */)completion;
- (BOOL)shouldPerformAuthenticatedRepairWithOptionForceFetch:(BOOL)fetch error:(id *)error;
- (void)generateEscrowRecordReportUsingCache:(BOOL)cache completion:(id /* block */)completion;
- (void)authenticateAndGenerateNewRecoveryKeyWithCompletion:(id /* block */)completion;
- (void)generateNewRecoveryKey:(id /* block */)key;
- (void)authenticateAndDeleteRecoveryKeyWithCompletion:(id /* block */)completion;
- (void)deleteRecoveryKey:(id /* block */)key;
- (void)verifyRecoveryKey:(id /* block */)key;
- (BOOL)deleteRecoveryKeyWithError:(id *)error;
- (BOOL)isRecoveryKeyAvailableWithError:(id *)error;
- (void)isRecoveryKeyAvailableWithCompletion:(id /* block */)completion;
- (BOOL)isWalrusRecoveryKeyAvailableWithError:(id *)error;
- (void)isWalrusRecoveryKeyAvailableWithCompletion:(id /* block */)completion;
- (BOOL)verifyRecoveryKeyObservingSystemsHaveMatchingStateWithError:(id *)error;
- (id)generateRandomRecoveryKey:(id *)key;
- (void)handleURLActionWithInfo:(id)info;
- (void)handleURLActionWithInfo:(id)info completion:(id /* block */)completion;
- (void)fetchEscrowRecordDevicesWithContext:(id)context usingCache:(BOOL)cache completion:(id /* block */)completion;
- (void)deviceEscrowRecordRecoverableWithContext:(id)context completion:(id /* block */)completion;
- (BOOL)isDeviceEscrowRecordRecoverable:(id *)recoverable;
- (BOOL)shouldPerformSilentEscrowRecordRepairUsingCache:(BOOL)cache error:(id *)error;
- (void)shouldPerformSilentEscrowRecordRepairUsingCache:(BOOL)cache completion:(id /* block */)completion;
- (void)startSilentEscrowRecordRepairWithCompletion:(id /* block */)completion;
- (void)performSilentEscrowRecordRepairWithCompletion:(id /* block */)completion;
- (BOOL)updateLastSilentEscrowRecordRepairAttemptDate:(id)date error:(id *)error;
- (void)setKeyChainSyncCompatibilityState:(unsigned long long)state withAltDSID:(id)dsid;
@end

#endif /* CDPStateController_h */
