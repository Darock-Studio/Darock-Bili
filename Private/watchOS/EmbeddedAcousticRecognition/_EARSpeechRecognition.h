//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.7.1.0.0
//
#ifndef _EARSpeechRecognition_h
#define _EARSpeechRecognition_h
@import Foundation;

#include "NSCopying-Protocol.h"

@class NSArray, NSSet;

@interface _EARSpeechRecognition : NSObject<NSCopying>

@property (copy, nonatomic) NSArray *tokenSausage;
@property (readonly, copy, nonatomic) NSArray *interpretationIndices;
@property (readonly, copy, nonatomic) NSArray *nBest;
@property (readonly, copy, nonatomic) NSSet *endsOfSentencePunctuations;

/* class methods */
+ (id)tokens:(id)tokens alignedToTokens:(id)tokens;
+ (id)reconstructNBestFromSausage:(id)sausage interpretationIndices:(id)indices;

/* instance methods */
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)_initWithTokenSausage:(id)sausage interpretationIndices:(id)indices nBest:(id)best endsOfSentencePunctuations:(id)punctuations;
- (id)_initWithNBestList:(const void *)list useHatText:(BOOL)text endsOfSentencePunctuations:(id)punctuations;
- (id)_initWithTokenPhraseChoiceList:(const void *)list earNbest:(id)nbest endsOfSentencePunctuations:(id)punctuations;
- (id)_initWithTokenPhraseChoiceList:(const void *)list nBestList:(const void *)list endsOfSentencePunctuations:(id)punctuations;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)oneBest;
- (id)oneBestAlignedToTokens:(id)tokens;
- (struct pair<std::vector<std::vector<unsigned int>>, std::vector<std::vector<std::vector<quasar::Token>>>> { struct vector<std::vector<unsigned int>, std::allocator<std::vector<unsigned int>>> { void * x0; void * x1; struct __compressed_pair<std::vector<unsigned int> *, std::allocator<std::vector<unsigned int>>> { void * x0; } x2; } x0; struct vector<std::vector<std::vector<quasar::Token>>, std::allocator<std::vector<std::vector<quasar::Token>>>> { void * x0; void * x1; struct __compressed_pair<std::vector<std::vector<quasar::Token>> *, std::allocator<std::vector<std::vector<quasar::Token>>>> { void * x0; } x2; } x1; })_tokenPhraseChoiceList;
- (id)granularizedRecognition;
- (id)potentialPrecedingRecognition;
- (id)potentialCommandRecognition;
- (id)adjustSpaceForTokens:(id)tokens currTokenIndex:(unsigned long long)index endsOfSentencePunctuations:(id)punctuations isPotentialCommandRecognition:(BOOL)recognition;
- (id)splitRecognitionWithPotentialCommandRecognition:(BOOL)recognition;
- (id)description;
@end

#endif /* _EARSpeechRecognition_h */
