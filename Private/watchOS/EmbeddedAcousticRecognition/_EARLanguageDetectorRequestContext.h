//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.7.1.0.0
//
#ifndef _EARLanguageDetectorRequestContext_h
#define _EARLanguageDetectorRequestContext_h
@import Foundation;

#include "NSCopying-Protocol.h"

@class NSArray, NSDictionary, NSNumber, NSSet, NSString;
@protocol struct LDContext { struct map<quasar::language_detector::Locale, double, std::less<quasar::language_detector::Locale>, std::allocator<std::pair<const quasar::language_detector::Locale, double>>> { struct __tree<std::__value_type<quasar::language_detector::Locale, double>, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>, std::allocator<std::__value_type<quasar::language_detector::Locale, double>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::language_detector::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>> { unsigned long long x0; } x2; } x0; } x0; struct optional<std::set<quasar::language_detector::Locale>> { union { char x0; struct set<quasar::language_detector::Locale, std::less<quasar::language_detector::Locale>, std::allocator<quasar::language_detector::Locale>> { struct __tree<quasar::language_detector::Locale, std::less<quasar::language_detector::Locale>, std::allocator<quasar::language_detector::Locale>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<quasar::language_detector::Locale, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::less<quasar::language_detector::Locale>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x1; struct optional<quasar::language_detector::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x2; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x3; struct optional<std::vector<quasar::language_detector::Locale>> { union { char x0; struct vector<quasar::language_detector::Locale, std::allocator<quasar::language_detector::Locale>> { struct Locale * x0; struct Locale * x1; struct __compressed_pair<quasar::language_detector::Locale *, std::allocator<quasar::language_detector::Locale>> { struct Locale * x0; } x2; } x1; } x0; BOOL x1; } x4; struct optional<std::map<quasar::language_detector::Locale, double>> { union { char x0; struct map<quasar::language_detector::Locale, double, std::less<quasar::language_detector::Locale>, std::allocator<std::pair<const quasar::language_detector::Locale, double>>> { struct __tree<std::__value_type<quasar::language_detector::Locale, double>, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>, std::allocator<std::__value_type<quasar::language_detector::Locale, double>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::language_detector::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x5; struct optional<std::map<quasar::language_detector::Locale, double>> { union { char x0; struct map<quasar::language_detector::Locale, double, std::less<quasar::language_detector::Locale>, std::allocator<std::pair<const quasar::language_detector::Locale, double>>> { struct __tree<std::__value_type<quasar::language_detector::Locale, double>, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>, std::allocator<std::__value_type<quasar::language_detector::Locale, double>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::language_detector::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x6; struct optional<quasar::language_detector::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x7; struct optional<quasar::language_detector::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x8; struct optional<std::map<quasar::language_detector::Locale, double>> { union { char x0; struct map<quasar::language_detector::Locale, double, std::less<quasar::language_detector::Locale>, std::allocator<std::pair<const quasar::language_detector::Locale, double>>> { struct __tree<std::__value_type<quasar::language_detector::Locale, double>, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>, std::allocator<std::__value_type<quasar::language_detector::Locale, double>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::language_detector::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x9; };

@interface _EARLanguageDetectorRequestContext : NSObject<NSCopying>

@property (readonly) struct LDContext { struct map<quasar::language_detector::Locale, double, std::less<quasar::language_detector::Locale>, std::allocator<std::pair<const quasar::language_detector::Locale, double>>> { struct __tree<std::__value_type<quasar::language_detector::Locale, double>, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>, std::allocator<std::__value_type<quasar::language_detector::Locale, double>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::language_detector::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>> { unsigned long long x0; } x2; } x0; } x0; struct optional<std::set<quasar::language_detector::Locale>> { union { char x0; struct set<quasar::language_detector::Locale, std::less<quasar::language_detector::Locale>, std::allocator<quasar::language_detector::Locale>> { struct __tree<quasar::language_detector::Locale, std::less<quasar::language_detector::Locale>, std::allocator<quasar::language_detector::Locale>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<quasar::language_detector::Locale, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::less<quasar::language_detector::Locale>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x1; struct optional<quasar::language_detector::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x2; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x3; struct optional<std::vector<quasar::language_detector::Locale>> { union { char x0; struct vector<quasar::language_detector::Locale, std::allocator<quasar::language_detector::Locale>> { struct Locale * x0; struct Locale * x1; struct __compressed_pair<quasar::language_detector::Locale *, std::allocator<quasar::language_detector::Locale>> { struct Locale * x0; } x2; } x1; } x0; BOOL x1; } x4; struct optional<std::map<quasar::language_detector::Locale, double>> { union { char x0; struct map<quasar::language_detector::Locale, double, std::less<quasar::language_detector::Locale>, std::allocator<std::pair<const quasar::language_detector::Locale, double>>> { struct __tree<std::__value_type<quasar::language_detector::Locale, double>, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>, std::allocator<std::__value_type<quasar::language_detector::Locale, double>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::language_detector::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x5; struct optional<std::map<quasar::language_detector::Locale, double>> { union { char x0; struct map<quasar::language_detector::Locale, double, std::less<quasar::language_detector::Locale>, std::allocator<std::pair<const quasar::language_detector::Locale, double>>> { struct __tree<std::__value_type<quasar::language_detector::Locale, double>, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>, std::allocator<std::__value_type<quasar::language_detector::Locale, double>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::language_detector::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x6; struct optional<quasar::language_detector::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x7; struct optional<quasar::language_detector::Locale> { union { char x0; struct Locale { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; } x1; } x0; BOOL x1; } x8; struct optional<std::map<quasar::language_detector::Locale, double>> { union { char x0; struct map<quasar::language_detector::Locale, double, std::less<quasar::language_detector::Locale>, std::allocator<std::pair<const quasar::language_detector::Locale, double>>> { struct __tree<std::__value_type<quasar::language_detector::Locale, double>, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>, std::allocator<std::__value_type<quasar::language_detector::Locale, double>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<quasar::language_detector::Locale, double>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<quasar::language_detector::Locale, std::__value_type<quasar::language_detector::Locale, double>, std::less<quasar::language_detector::Locale>>> { unsigned long long x0; } x2; } x0; } x1; } x0; BOOL x1; } x9; } LDContext;
@property (copy, nonatomic) NSDictionary *languagePriors;
@property (copy, nonatomic) NSSet *dictationLanguages;
@property (copy, nonatomic) NSString *currentDictationLanguage;
@property (copy, nonatomic) NSNumber *wasLanguageToggled;
@property (copy, nonatomic) NSArray *multilingualKeyboardLanguages;
@property (copy, nonatomic) NSDictionary *keyboardConvoLanguagePriors;
@property (copy, nonatomic) NSDictionary *keyboardGlobalLanguagePriors;
@property (copy, nonatomic) NSString *previousMessageLanguage;
@property (copy, nonatomic) NSString *globalLastKeyboardUsed;
@property (copy, nonatomic) NSDictionary *dictationLanguagePriors;
@property (copy, nonatomic) NSArray *recentMessages;

/* class methods */
+ (id)contextFromLDContext:(const void *)ldcontext;

/* instance methods */
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* _EARLanguageDetectorRequestContext_h */
