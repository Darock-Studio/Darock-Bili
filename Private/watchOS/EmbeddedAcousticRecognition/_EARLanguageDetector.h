//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.7.1.0.0
//
#ifndef _EARLanguageDetector_h
#define _EARLanguageDetector_h
@import Foundation;

@protocol {unique_ptr<quasar::LanguageDetector, std::default_delete<quasar::LanguageDetector>>="__ptr_"{__compressed_pair<quasar::LanguageDetector *, std::default_delete<quasar::LanguageDetector>>="__value_"^{LanguageDetector}}};

@interface _EARLanguageDetector : NSObject {
  /* instance variables */
  struct unique_ptr<quasar::LanguageDetector, std::default_delete<quasar::LanguageDetector>> { struct __compressed_pair<quasar::LanguageDetector *, std::default_delete<quasar::LanguageDetector>> { struct LanguageDetector *__value_; } __ptr_; } languageDetector;
}

@property (nonatomic) unsigned int featureQueuePriority;

/* class methods */
+ (void)initialize;
+ (id)localesOfMessages:(id)messages;
+ (struct vector<std::optional<quasar::language_detector::Locale>, std::allocator<std::optional<quasar::language_detector::Locale>>> { void * x0; void * x1; struct __compressed_pair<std::optional<quasar::language_detector::Locale> *, std::allocator<std::optional<quasar::language_detector::Locale>>> { void * x0; } x2; })quasarLocalesOfMessages:(id)messages;
+ (struct shared_ptr<const quasar::LDContext> { struct LDContext * x0; struct __shared_weak_count * x1; })updateContext:(const void *)context withMessageLocales:(const void *)locales;

/* instance methods */
- (id)initWithConfigFile:(id)file;
- (id)initWithConfigFile:(id)file overrides:(id)overrides;
- (id)startRequestWith:(unsigned long long)with context:(id)context delegate:(id)delegate;
@end

#endif /* _EARLanguageDetector_h */
