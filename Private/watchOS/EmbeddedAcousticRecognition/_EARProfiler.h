//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.7.1.0.0
//
#ifndef _EARProfiler_h
#define _EARProfiler_h
@import Foundation;

@class NSString;
@protocol {vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}, {vector<void *, std::allocator<void *>>="__begin_"^^v"__end_"^^v"__end_cap_"{__compressed_pair<void **, std::allocator<void *>>="__value_"^^v}};

@interface _EARProfiler : NSObject {
  /* instance variables */
  unsigned long long _n_samples;
  double _max_rss;
  double _jetsam_max;
  double _jetsam_tot;
  struct vector<float, std::allocator<float>> { float *__begin_; float *__end_; struct __compressed_pair<float *, std::allocator<float>> { float *__value_; } __end_cap_; } _background_power;
  struct vector<void *, std::allocator<void *>> { void * *__begin_; void * *__end_; struct __compressed_pair<void **, std::allocator<void *>> { void * *__value_; } __end_cap_; } _networks;
  struct powerSummary { double total_energy; double ane_energy; double gpu_energy; double ecpu_energy; double pcpu_energy; double dram_energy; double other_energy; double total_power; double ane_power; double gpu_power; double ecpu_power; double pcpu_power; double dram_power; double other_power; } _power_summary;
  double _start_time;
  double _end_time;
  double _ane_time;
  NSString *_power_profiler_name;
  NSString *_background_power_logfile_name;
  NSString *_runtime_power_logfile_name;
}

@property BOOL _memoryProfiler;
@property BOOL _perfProfiler;
@property BOOL _powerProfiler;
@property BOOL _hasPMP;
@property BOOL _keepLogFiles;

/* class methods */
+ (id)sharedProfiler;

/* instance methods */
- (id)init;
- (void)reset;
- (void)setMemoryProfiler:(BOOL)profiler;
- (void)setPerfProfiler:(BOOL)profiler;
- (void)setPowerProfiler:(BOOL)profiler powerProfilerName:(id)name;
- (void)KeepLogFiles:(BOOL)files;
- (void)addProfilingNetwork:(void *)network;
- (void)sample;
- (void)finishProfilingNetworks;
- (void)finishProfiling;
- (id)reportProfilingAsDictionary;
- (void)reportProfiling;
- (void)cleanupLogfiles;
- (void)parsePowerSummary:(id)summary writeTo:(struct powerSummary { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; } *)to;
@end

#endif /* _EARProfiler_h */
