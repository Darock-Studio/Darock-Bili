//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.7.1.0.0
//
#ifndef _EARSpeechRecognitionResult_h
#define _EARSpeechRecognitionResult_h
@import Foundation;

#include "NSCopying-Protocol.h"

@class NSArray;
@protocol struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; }, {vector<quasar::Token, std::allocator<quasar::Token>>="__begin_"^{Token}"__end_"^{Token}"__end_cap_"{__compressed_pair<quasar::Token *, std::allocator<quasar::Token>>="__value_"^{Token}}};

@interface _EARSpeechRecognitionResult : NSObject<NSCopying>

@property (readonly, nonatomic) struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; } quasarTokens;
@property (readonly, nonatomic) struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; } quasarPreItnTokens;
@property (readonly, copy, nonatomic) NSArray *tokens;
@property (readonly, copy, nonatomic) NSArray *preITNTokens;
@property (readonly, nonatomic) double confidence;
@property (readonly, copy, nonatomic) NSArray *voiceCommandInterpretations;
@property (readonly, copy, nonatomic) NSArray *preITNVoiceCommandInterpretations;

/* instance methods */
- (id)_initWithTokens:(struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; })tokens preITNTokens:(struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; })itntokens;
- (id)_initWithTokens:(struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; })tokens preITNTokens:(struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; })itntokens confidence:(double)confidence;
- (id)_initWithTokens:(struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; })tokens preITNTokens:(struct vector<quasar::Token, std::allocator<quasar::Token>> { struct Token * x0; struct Token * x1; struct __compressed_pair<quasar::Token *, std::allocator<quasar::Token>> { struct Token * x0; } x2; })itntokens confidence:(double)confidence voiceCommandInterpretations:(id)interpretations preITNVoiceCommandInterpretations:(id)interpretations;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)description;
@end

#endif /* _EARSpeechRecognitionResult_h */
