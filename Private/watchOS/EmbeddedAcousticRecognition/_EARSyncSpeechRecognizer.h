//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.7.1.0.0
//
#ifndef _EARSyncSpeechRecognizer_h
#define _EARSyncSpeechRecognizer_h
@import Foundation;

#include "_EARFormatter.h"

@class NSString;
@protocol OS_dispatch_queue, {shared_ptr<quasar::SyncSpeechRecognizer>="__ptr_"^{SyncSpeechRecognizer}"__cntrl_"^{__shared_weak_count}};

@interface _EARSyncSpeechRecognizer : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_formatterQueue;
  _EARFormatter *_formatter;
  struct shared_ptr<quasar::SyncSpeechRecognizer> { struct SyncSpeechRecognizer *__ptr_; struct __shared_weak_count *__cntrl_; } _syncRecognizer;
  NSString *_configPath;
}

/* class methods */
+ (void)initialize;

/* instance methods */
- (id)initWithConfiguration:(id)configuration;
- (id)initWithConfiguration:(id)configuration memoryLock:(BOOL)lock;
- (void)resetWithSamplingRate:(unsigned int)rate language:(id)language taskType:(id)type userId:(id)id sessionId:(id)id deviceId:(id)id farField:(BOOL)field audioSource:(id)source maxAudioBufferSizeSeconds:(unsigned int)seconds;
- (id)getSpeechRecognitionResultFromTokens:(struct vector<std::vector<quasar::Token>, std::allocator<std::vector<quasar::Token>>> { void * x0; void * x1; struct __compressed_pair<std::vector<quasar::Token> *, std::allocator<std::vector<quasar::Token>>> { void * x0; } x2; })tokens taskName:(id)name;
- (id)resultsWithAddedAudio:(id)audio numberOfSamples:(unsigned long long)samples taskName:(id)name;
- (id)resultsWithAddedFloatAudio:(id)audio numberOfSamples:(unsigned long long)samples taskName:(id)name;
- (id)resultsWithEndedAudio;
@end

#endif /* _EARSyncSpeechRecognizer_h */
