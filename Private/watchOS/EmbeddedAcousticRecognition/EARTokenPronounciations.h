//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.7.1.0.0
//
#ifndef EARTokenPronounciations_h
#define EARTokenPronounciations_h
@import Foundation;

@class NSArray, NSString;

@interface EARTokenPronounciations : NSObject

@property (copy, nonatomic) NSString *token;
@property (copy, nonatomic) NSArray *pronunciations;

/* instance methods */
- (id)initWithToken:(id)token pronunciations:(id)pronunciations;
- (struct TokenProns { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct vector<quasar::PronChoice, std::allocator<quasar::PronChoice>> { struct PronChoice * x0; struct PronChoice * x1; struct __compressed_pair<quasar::PronChoice *, std::allocator<quasar::PronChoice>> { struct PronChoice * x0; } x2; } x1; struct vector<quasar::PronChoice, std::allocator<quasar::PronChoice>> { struct PronChoice * x0; struct PronChoice * x1; struct __compressed_pair<quasar::PronChoice *, std::allocator<quasar::PronChoice>> { struct PronChoice * x0; } x2; } x2; })_quasarProns;
@end

#endif /* EARTokenPronounciations_h */
