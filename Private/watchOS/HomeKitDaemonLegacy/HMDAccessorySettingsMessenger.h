//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessorySettingsMessenger_h
#define HMDAccessorySettingsMessenger_h
@import Foundation;

#include "HMFObject.h"
#include "HMDAccessorySettingsLegacyMessageReceiver.h"
#include "HMDAccessorySettingsLocalMessageHandler.h"
#include "HMDMessageRouter-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"

@class HMFMessageDispatcher, NSString, NSUUID;
@protocol HMMLogEventSubmitting, OS_dispatch_queue;

@interface HMDAccessorySettingsMessenger : HMFObject<HMFLogging, HMFMessageReceiver>

@property (readonly) HMFMessageDispatcher *messageDispatcher;
@property (readonly) NSObject<HMDMessageRouter> *messageRouter;
@property (readonly) HMDAccessorySettingsLocalMessageHandler *messageHandler;
@property (readonly) HMDAccessorySettingsLegacyMessageReceiver *legacyMessageReceiver;
@property (readonly) NSObject<HMMLogEventSubmitting> *logEventSubmitter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithMessageTargetUUID:(id)uuid messageDispatcher:(id)dispatcher messageRouter:(id)router messageHandler:(id)handler logEventSubmitter:(id)submitter legacyMessageReceiver:(id)receiver;
- (void)registerForMessagesWithHome:(id)home;
- (void)sendFetchAccessorySettingsRequestWithAccessoryUUID:(id)uuid keyPaths:(id)paths completionHandler:(id /* block */)handler;
- (id)fetchLogEventFromMessage:(id)message;
- (void)updateAndPostFetchSettingsEvent:(id)event responsePayload:(id)payload responseError:(id)error;
- (void)sendUpdateAccessorySettingRequestWithAccessoryUUID:(id)uuid keyPath:(id)path settingValue:(id)value completionHandler:(id /* block */)handler;
- (id)logIdentifier;
- (void)routeAccessorySettingsFetchRequestMessage:(id)message;
- (void)routeAccessorySettingsUpdateRequestMessage:(id)message;
- (id)legacyMessageForMessage:(id)message;
@end

#endif /* HMDAccessorySettingsMessenger_h */
