//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDCameraStreamControlMessageHandler_h
#define HMDCameraStreamControlMessageHandler_h
@import Foundation;

#include "HMFObject.h"
#include "HMDCameraMetricsMilestone.h"
#include "HMDCameraResidentMessageHandler.h"
#include "HMDCameraStreamControlManagerDelegate-Protocol.h"
#include "HMDCameraStreamControlMessageHandlerDataSource-Protocol.h"
#include "HMDCameraStreamManagerSession.h"
#include "HMDCameraStreamSnapshotHandler.h"
#include "HMDCameraSupportedConfigurationCache.h"
#include "HMDDynamicActivityAttributionPublisher.h"
#include "HMDHAPAccessory.h"
#include "HMDService.h"
#include "HMFLogging-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class HMFMessageDispatcher, HMFNetMonitor, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDCameraStreamControlMessageHandler : HMFObject<HMFTimerDelegate, HMDCameraStreamControlManagerDelegate, HMFLogging>

@property (readonly) HMDCameraResidentMessageHandler *residentMessageHandler;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly, weak) HMDHAPAccessory *accessory;
@property (readonly) NSUUID *uniqueIdentifier;
@property (readonly) NSUUID *profileUniqueIdentifier;
@property (retain) HMDCameraStreamManagerSession *streamSession;
@property (readonly) HMDCameraSupportedConfigurationCache *supportedConfigCache;
@property (readonly) HMDCameraStreamSnapshotHandler *streamSnapshotHandler;
@property (readonly) HMFNetMonitor *networkMonitor;
@property (retain) HMFMessageDispatcher *messageDispatcher;
@property (readonly) HMDDynamicActivityAttributionPublisher *dynamicActivityAttributionPublisher;
@property (readonly) NSObject<HMDCameraStreamControlMessageHandlerDataSource> *dataSource;
@property (readonly) BOOL streamingSessionInProgress;
@property (readonly) HMDService *streamManagementService;
@property (readonly, copy) NSString *streamSessionID;
@property (retain) HMDCameraMetricsMilestone *negotiationMilestone;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithWorkQueue:(id)queue streamSnapshotHandler:(id)handler accessory:(id)accessory streamManagementService:(id)service profileUniqueIdentifier:(id)identifier networkMonitor:(id)monitor residentMessageHandler:(id)handler dataSource:(id)source;
- (id)initWithWorkQueue:(id)queue streamSnapshotHandler:(id)handler accessory:(id)accessory streamManagementService:(id)service profileUniqueIdentifier:(id)identifier networkMonitor:(id)monitor;
- (void)dealloc;
- (void)configureWithMessageDispatcher:(id)dispatcher;
- (void)updateStreamClientUsingMessage:(id)message;
- (BOOL)_isNegotiateMessage:(id)message;
- (BOOL)_isStartMessage:(id)message;
- (BOOL)_isReconfigureMessage:(id)message;
- (BOOL)_isStopMessage:(id)message;
- (BOOL)_isSetAudioStreamSettingMessage:(id)message;
- (BOOL)_isSetAudioVolumeMessage:(id)message;
- (BOOL)_isRemoteSetupMessage:(id)message;
- (void)_stopStreamWithError:(id)error;
- (void)handleMessage:(id)message;
- (BOOL)_shouldHandleNegotiateMessage:(id)message accessoryReachable:(BOOL)reachable;
- (void)_handleNegotiateMessage:(id)message;
- (void)_handleRemoteSetupMessage:(id)message;
- (void)_handleStartMessage:(id)message;
- (void)_handleReconfigureMessage:(id)message;
- (void)_handleStopMessage:(id)message;
- (void)_handleSetAudioVolume:(id)volume;
- (void)setAudioVolume:(id)volume callback:(id /* block */)callback;
- (void)_handleSetAudioState:(id)state;
- (BOOL)isStreamingSessionInProgress;
- (BOOL)_shouldStopStreamSessionForProcessInfo:(id)info;
- (void)_attributeMicrophoneUsageToApplicationBundleIdentifier:(id)identifier;
- (void)_respondToLocalNegotiateStreamMessage:(id)message;
- (id)logIdentifier;
- (void)timerDidFire:(id)fire;
- (void)streamControlManager:(id)manager didNegotiateStreamWithSelectedParameters:(id)parameters;
- (void)streamControlManagerDidSetUpRemoteConnection:(id)connection;
- (void)streamControlManagerDidStartStream:(id)stream;
- (void)streamControlManagerDidReceiveFirstFrame:(id)frame;
- (void)streamControlManagerDidReconfigureStream:(id)stream;
- (void)streamControlManager:(id)manager didStopStreamWithSessionID:(id)id error:(id)error;
- (void)_sendStreamStoppedMessageWithError:(id)error;
- (void)_sendStreamStoppedRemoteNotificationWithError:(id)error;
- (void)_resetStreamSession:(id)session;
- (BOOL)isEqual:(id)equal;
- (void)handleCameraSettingsDidChangeNotification:(id)notification;
- (void)handleAccessoryUnconfigured:(id)unconfigured;
- (void)handleProcessStateChange:(id)change;
- (void)handleConnectionDeactivatedNotification:(id)notification;
@end

#endif /* HMDCameraStreamControlMessageHandler_h */
