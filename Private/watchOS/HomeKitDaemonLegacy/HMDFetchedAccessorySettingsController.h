//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDFetchedAccessorySettingsController_h
#define HMDFetchedAccessorySettingsController_h
@import Foundation;

#include "HMDFetchedAccessorySettingsControllerDataSource-Protocol.h"
#include "HMDFetchedAccessorySettingsControllerMutableKeyPathMap.h"
#include "HMDFetchedSettingsDriverDelegate-Protocol.h"
#include "HMDLegacyAccessorySettingsAdaptorSettingsOperationProvider-Protocol.h"
#include "HMFLogging-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSNotificationCenter, NSString;
@protocol OS_dispatch_queue, OS_os_log;

@interface HMDFetchedAccessorySettingsController : NSObject<HMDFetchedSettingsDriverDelegate, HMFLogging, HMDLegacyAccessorySettingsAdaptorSettingsOperationProvider> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableDictionary *_keyPathToSettingCache;
  NSObject<OS_os_log> *_logger;
}

@property (readonly) NSObject<OS_dispatch_queue> *queue;
@property (readonly) NSObject<HMDFetchedAccessorySettingsControllerDataSource> *dataSource;
@property (readonly) HMDFetchedAccessorySettingsControllerMutableKeyPathMap *driverMap;
@property (retain) NSMutableSet *pendingFetchKeyPaths;
@property (readonly, weak) NSNotificationCenter *notificationCenter;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithQueue:(id)queue dataSource:(id)source drivers:(id)drivers;
- (id)initWithQueue:(id)queue dataSource:(id)source drivers:(id)drivers notificationCenter:(id)center;
- (void)start;
- (void)fetchSettingsForKeyPaths:(id)paths completion:(id /* block */)completion;
- (void)updateSettingWithKeyPath:(id)path settingValue:(id)value completion:(id /* block */)completion;
- (void)languageValueListWithCompletion:(id /* block */)completion;
- (id)cachedSettingForKeyPath:(id)path;
- (void)driver:(id)driver didUpdateSettings:(id)settings;
- (void)driver:(id)driver didUpdatePrimaryUserInfo:(id)info;
- (void)driverDidReload:(id)reload;
@end

#endif /* HMDFetchedAccessorySettingsController_h */
