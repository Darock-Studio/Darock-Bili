//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDHomeWalletKeyManager_h
#define HMDHomeWalletKeyManager_h
@import Foundation;

#include "HMFObject.h"
#include "HMDApplicationRegistry.h"
#include "HMDBulletinBoard.h"
#include "HMDFileManager-Protocol.h"
#include "HMDHome.h"
#include "HMDHomeKeySetupWalletLogEvent.h"
#include "HMDHomeWalletDataSource-Protocol.h"
#include "HMDHomeWalletKeyAccessoryManagerDelegate-Protocol.h"
#include "HMDLostModeManager.h"
#include "HMDWalletPassLibrary-Protocol.h"
#include "HMDWalletPassLibraryDelegate-Protocol.h"
#include "HMDWatchManager.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"

@class HMFMessageDispatcher, HMFSystemInfo, NAFuture, NSMutableArray, NSNotificationCenter, NSString, NSUUID;
@protocol HAPKeyStore, OS_dispatch_queue;

@interface HMDHomeWalletKeyManager : HMFObject<HMFMessageReceiver, HMFLogging, HMDWalletPassLibraryDelegate, HMDHomeWalletKeyAccessoryManagerDelegate>

@property (readonly) NSObject<HMDFileManager> *fileManager;
@property (readonly) NSObject<HMDWalletPassLibrary> *passLibrary;
@property (retain) HMFMessageDispatcher *messageDispatcher;
@property (readonly, copy) NSUUID *uuid;
@property (weak) HMDHome *home;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly) NSNotificationCenter *notificationCenter;
@property (readonly) HMDWatchManager *watchManager;
@property (retain) NAFuture *addWalletKeyFuture;
@property (readonly) id /* block */ isoCredentialFactory;
@property (readonly) NSObject<HAPKeyStore> *keychainStore;
@property (readonly) HMDLostModeManager *lostModeManager;
@property (readonly) NSObject<HMDHomeWalletDataSource> *dataSource;
@property (readonly) NSMutableArray *pendingUpdateWalletKeyOperations;
@property BOOL isWalletKeyUpdateOperationInProgress;
@property BOOL isHomeBeingRemoved;
@property (readonly) HMDBulletinBoard *bulletinBoard;
@property (readonly) HMDApplicationRegistry *applicationRegistry;
@property (readonly) BOOL canSuspendWalletKey;
@property (readonly) HMFSystemInfo *systemInfo;
@property (retain) NSUUID *currentUserUUID;
@property (retain) HMDHomeKeySetupWalletLogEvent *logEvent;
@property (readonly, copy) NSString *passSerialNumber;
@property (readonly) BOOL hasHomeKeyInWallet;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)responsePayloadForPairedWatchesWithMessageName:(id)name responsePayloadByDevice:(id)device error:(id)error;
+ (id)homekitErrorWithPassLibraryError:(id)error;
+ (id)logCategory;

/* instance methods */
- (id)initWithUUID:(id)uuid workQueue:(id)queue;
- (id)initWithUUID:(id)uuid workQueue:(id)queue fileManager:(id)manager passLibrary:(id)library notificationCenter:(id)center watchManager:(id)manager keychainStore:(id)store lostModeManager:(id)manager dataSource:(id)source bulletinBoard:(id)board applicationRegistry:(id)registry systemInfo:(id)info isoCredentialFactory:(id /* block */)factory;
- (void)configureWithHome:(id)home;
- (void)updateCurrentUserUUID:(id)uuid;
- (id)walletKeySettingsFileURL;
- (void)storeWalletKeyMigrationSettingsToDisk;
- (void)_storeWalletKeyMigrationSettingsToDisk:(BOOL)disk;
- (void)recoverDueToUUIDChangeOfUser:(id)user fromOldUUID:(id)uuid;
- (void)handleAccessCodeChanged;
- (void)autoAddWalletKeyWithFlow:(id)flow;
- (void)handleFetchDeviceStateMessage:(id)message;
- (void)handleFetchWalletKeyColorMessage:(id)message;
- (void)handleFetchAvailableWalletKeyEncodedPKPassMessage:(id)message;
- (void)handleEnableExpressForWalletKeyMessage:(id)message;
- (void)handleMessageForPairedWatches:(id)watches;
- (void)handleAddWalletKeyMessage:(id)message;
- (void)handlePersistWalletKeyAddOptionsRemoteMessage:(id)message;
- (void)handleFetchMissingWalletKeysMessage:(id)message;
- (void)handleRestoreMissingWalletKeysMessage:(id)message;
- (void)addIssuerKeysToMatterAccessoriesWithFlow:(id)flow;
- (BOOL)canAutoAddWalletKeyWithError:(id *)error;
- (void)fetchExpressEnablementConflictingPassDescriptionWithFlow:(id)flow completion:(id /* block */)completion;
- (void)updateDeviceStateWithCanAddWalletKey:(id)key flow:(id)flow completion:(id /* block */)completion;
- (void)fetchHomeKeySupportedWithFlow:(id)flow completion:(id /* block */)completion;
- (void)updateDeviceStateWithWalletKey:(id)key flow:(id)flow completion:(id /* block */)completion;
- (void)updateDeviceStateWithExpressEnablementConflictingPassDescription:(id)description flow:(id)flow completion:(id /* block */)completion;
- (void)sendMessageWithName:(id)name payload:(id)payload toWatches:(id)watches completion:(id /* block */)completion;
- (void)fetchPayloadForAddWalletKeyRemoteMessageWithFlow:(id)flow completion:(id /* block */)completion;
- (void)addWalletKeyWithOptions:(long long)options flow:(id)flow completion:(id /* block */)completion;
- (void)fetchOrCreateReaderKeyWithFlow:(id)flow completion:(id /* block */)completion;
- (id)fetchWalletKeyColorOptionWithFlow:(id)flow;
- (void)addWalletKeyWithOptions:(long long)options nfcReaderKey:(id)key flow:(id)flow completion:(id /* block */)completion;
- (void)addWalletKey:(id)key withOptions:(long long)options assertion:(id)assertion flow:(id)flow;
- (void)enableExpressWithOptions:(long long)options flow:(id)flow completion:(id /* block */)completion;
- (void)createExpressModeSetUpBulletin;
- (void)removeWalletKeyOnboardingBulletin;
- (void)syncDeviceCredentialKey:(id)key flow:(id)flow;
- (void)enqueueWalletKeyUpdateOperation:(id /* block */)operation flow:(id)flow;
- (void)handlePendingWalletKeyUpdateOperationsWithFlow:(id)flow;
- (void)addISOCredentialWithPassAtURL:(id)url walletKey:(id)key flow:(id)flow completion:(id /* block */)completion;
- (id)createPassDirectoryWithResourceFilesWithFlow:(id)flow;
- (id)createPassDirectoryWithoutResourceFilesWithFlow:(id)flow;
- (void)createPassDirectoryWithWalletKey:(id)key options:(long long)options shouldSkipResourceFiles:(BOOL)files shouldCreateZipArchive:(BOOL)archive validateNFCInfo:(BOOL)nfcinfo flow:(id)flow completion:(id /* block */)completion;
- (id)updatePassJSONAtURL:(id)url withWalletKey:(id)key options:(long long)options validateNFCInfo:(BOOL)nfcinfo flow:(id)flow;
- (id)passSerialNumberWithUserUUID:(id)uuid;
- (id)walletKeyByAddingAccessCodeToWalletKey:(id)key;
- (void)updateWalletKeyStateToState:(long long)state flow:(id)flow;
- (void)syncDeviceCredentialKeyForAccessory:(id)accessory flow:(id)flow;
- (void)fetchShouldSuppressWalletNotificationWithCompletion:(id /* block */)completion;
- (void)updateWalletKeyAccessCodeFieldWithReason:(id)reason;
- (void)fetchShouldAutoEnableExpressWithCompletion:(id /* block */)completion;
- (void)autoAddWalletKeyWithReason:(id)reason flow:(id)flow completion:(id /* block */)completion;
- (void)showExpressEnabledNotificationForWalletKey:(id)key;
- (id)logIdentifier;
- (void)passLibrary:(id)library didAddPassWithSerialNumber:(id)number typeIdentifier:(id)identifier;
- (void)passLibrary:(id)library didRemovePassWithSerialNumber:(id)number typeIdentifier:(id)identifier;
- (void)accessoryManager:(id)manager didUpdateWalletKeyColor:(long long)color;
- (void)handleAccessorySupportsAccessCodeDidChangeNotification:(id)notification;
- (void)handleSystemInfoMigrationUpdatedNotification:(id)notification;
- (void)handleApplicationInstalled:(id)installed;
- (void)handleApplicationUninstalled:(id)uninstalled;
- (void)handleLostModeUpdated;
- (void)handleLostModeManagerDidExitLostModeWithAuthCompleteNotification;
- (void)handleHomeUserRemovedNotification:(id)notification;
- (void)handleHomeWillBeRemoved;
- (void)handleHomeNameChangedNotification:(id)notification;
- (void)handleHomeAddedAccessoryNotification:(id)notification;
- (void)handleHomeDidFinishPairingAccessoryNotification:(id)notification;
- (void)handleAccessorySupportsWalleyKeyDidChangeNotification:(id)notification;
- (void)handleHomeAccessoryRemovedNotification:(id)notification;
- (void)handleHomeDidUpdateNFCReaderKeyNotification:(id)notification;
- (void)handleNFCReaderKeyUpdatedForWalletKey:(id)key flow:(id)flow;
- (void)handleHomeHasOnboardedForWalletKeyChangeNotification:(id)notification;
@end

#endif /* HMDHomeWalletKeyManager_h */
