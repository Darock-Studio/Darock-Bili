//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessorySetupManager_h
#define HMDAccessorySetupManager_h
@import Foundation;

#include "HMFObject.h"
#include "HMDAccessorySetupCoordinator.h"
#include "HMDHomeManager.h"
#include "HMDSBSRemoteAlertHandle-Protocol.h"
#include "HMDSBSRemoteAlertHandleObserver-Protocol.h"
#include "HMDSBSRemoteAlertHandleProvider.h"
#include "HMDXPCClientConnection.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"

@class HMFMessageDispatcher, HMSetupAccessoryDescription, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDAccessorySetupManager : HMFObject<HMDSBSRemoteAlertHandleObserver, HMFLogging, HMFMessageReceiver> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (weak) HMDHomeManager *homeManager;
@property (readonly) HMDSBSRemoteAlertHandleProvider *alertHandleProvider;
@property (copy) id /* block */ pendingAccessorySetupCompletionHandler;
@property (retain) HMSetupAccessoryDescription *pendingSetupAccessoryDescription;
@property (retain) NSObject<HMDSBSRemoteAlertHandle> *alertHandle;
@property double activationStartTime;
@property (readonly) HMFMessageDispatcher *messageDispatcher;
@property (retain, nonatomic) HMDXPCClientConnection *accessorySetupHostClientConnection;
@property (retain, nonatomic) HMDAccessorySetupCoordinator *accessorySetupCoordinator;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;

/* class methods */
+ (id)accessorySetupHostBundleIdentifier;
+ (id)logCategory;

/* instance methods */
- (id)initWithWorkQueue:(id)queue homeManager:(id)manager;
- (id)initWithWorkQueue:(id)queue homeManager:(id)manager messageDispatcher:(id)dispatcher alertHandleProvider:(id)provider;
- (void)configure;
- (void)launchAccessorySetupHostToRequestSetupCodeForAccessoryWithUUID:(id)uuid accessoryName:(id)name homeUUID:(id)uuid clientConnection:(id)connection completionHandler:(id /* block */)handler;
- (id)_createSetupAccessoryPayloadWithSetupPayloadURL:(id)url error:(id *)error;
- (void)_launchHUISWithNFCProxSetupURL:(id)url;
- (void)_launchHUISWithRequest:(id)request connection:(id)connection completionHandler:(id /* block */)handler;
- (void)_updateAccessoryDescription:(id)description usingConnection:(id)connection;
- (void)_launchHUISWithSetupAccessoryDescription:(id)description resumeSetupUserInfo:(id)info completionHandler:(id /* block */)handler;
- (void)_finishAccessorySetupWithSetupCompletedInfo:(id)info setupError:(id)error;
- (id)_accessorySetupResultFromCompletedInfo:(id)info clientIdentifierSalt:(id)salt;
- (void)_handlePerformAccessorySetupMessage:(id)message;
- (void)_handleResumeAccessorySetupMessage:(id)message;
- (void)_handleFinishAccessorySetupMessage:(id)message;
- (void)_handleFailAccessorySetupMessage:(id)message;
- (void)handleNFCProxSetupNotification:(id)notification;
- (void)handleHomeUIServiceXPCConnectionStateDidChangeNotification:(id)notification;
- (void)remoteAlertHandleDidActivate:(id)activate;
- (void)remoteAlertHandleDidDeactivate:(id)deactivate;
- (void)remoteAlertHandle:(id)handle didInvalidateWithError:(id)error;
@end

#endif /* HMDAccessorySetupManager_h */
