//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDSiriSession_h
#define HMDSiriSession_h
@import Foundation;

#include "HMDActiveSiriSessionInfo.h"
#include "HMDActiveSiriSessionInfoDelegate-Protocol.h"
#include "HMDSiriRemoteInputServer.h"
#include "HMDSiriStreamStartEvent.h"
#include "HMFLogging-Protocol.h"

@class HMMLogEventDispatcher, NSNumber, NSString;
@protocol OS_os_log, OS_xpc_object;

@interface HMDSiriSession : NSObject<HMDActiveSiriSessionInfoDelegate, HMFLogging> {
  /* instance variables */
  NSObject<OS_os_log> *_logger;
}

@property (readonly, nonatomic) HMMLogEventDispatcher *logEventDispatcher;
@property (retain, nonatomic) HMDSiriStreamStartEvent *streamStartMetric;
@property (weak, nonatomic) HMDSiriRemoteInputServer *server;
@property (retain, nonatomic) HMDActiveSiriSessionInfo *activeSessionInfo;
@property (retain, nonatomic) NSNumber *deviceType;
@property (nonatomic) BOOL isActivationPending;
@property (retain, nonatomic) NSObject<OS_xpc_object> *boostMessage;
@property (readonly, nonatomic) NSString *identifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)siriSessionForUI;
+ (id)logCategory;

/* instance methods */
- (id)initWithIdentifier:(id)identifier logEventDispatcher:(id)dispatcher deviceType:(id)type;
- (id)initWithIdentifier:(id)identifier deviceType:(id)type;
- (BOOL)activateWithAccessory:(id)accessory metadata:(id)metadata;
- (BOOL)activateAfterHubInitiation;
- (void)deactivate;
- (id)activeSessionToken;
- (void)setActiveBulkSendSession:(id)session;
- (void)activeSiriSession:(id)session didCreateAudioFrame:(id)frame sequenceNumber:(id)number gain:(id)gain;
- (void)invalidate;
- (void)publish;
- (void)handleStartStream;
- (void)handleStopStream;
- (void)handleResetStream;
- (void)activeSiriSessionDidStop:(id)stop;
- (void)activeSiriSession:(id)session didReceiveButtonUpWithDuration:(id)duration;
- (void)activeSiriSession:(id)session didReceiveFirstPassMetadata:(id)metadata;
- (void)stopStream;
- (void)beginTrackingStreamStartMetricWithActivationType:(unsigned long long)type;
- (void)maybeSubmitStreamStartMetricWithError:(id)error;
- (BOOL)_startStream;
- (void)sendMsg:(const char *)msg args:(id)args;
- (id)_createArgsDictionaryWithError:(id)error;
@end

#endif /* HMDSiriSession_h */
