//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDXPCEventRouterServer_h
#define HMDXPCEventRouterServer_h
@import Foundation;

#include "HMDXPCEventRouterServerDataSource-Protocol.h"
#include "HMEPersistentConnectionServerDataSource-Protocol.h"
#include "HMEPersistentConnectionServerDelegate-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"

@class HMEPersistentConnectionServer, HMFMessageDispatcher, NSNotificationCenter, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDXPCEventRouterServer : NSObject<HMFMessageReceiver, HMEPersistentConnectionServerDelegate, HMEPersistentConnectionServerDataSource, HMFLogging>

@property (readonly) HMEPersistentConnectionServer *persistentConnectionServer;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly, copy) NSUUID *messageUUID;
@property (readonly, copy) NSString *changeRegistrationsMessageName;
@property (readonly, copy) NSString *updateEventsMessageName;
@property (readonly) HMFMessageDispatcher *messageDispatcher;
@property (readonly) NSNotificationCenter *notificationCenter;
@property (readonly, weak) NSObject<HMDXPCEventRouterServerDataSource> *dataSource;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithMessageUUID:(id)uuid dataSource:(id)source changeRegistrationsMessageName:(id)name updateEventsMessageName:(id)name messageDispatcher:(id)dispatcher queue:(id)queue notificationCenter:(id)center subscriptionProvider:(id)provider registrationEventRouter:(id)router storeReadHandle:(id)handle;
- (id)initWithMessageUUID:(id)uuid dataSource:(id)source changeRegistrationsMessageName:(id)name updateEventsMessageName:(id)name messageDispatcher:(id)dispatcher queue:(id)queue notificationCenter:(id)center persistentConnectionServerFactory:(id /* block */)factory;
- (id)logIdentifier;
- (void)registerForMessages;
- (void)_handleChangeRegistrationsRequest:(id)request;
- (void)handleXPCConnectionInvalidated:(id)invalidated;
- (void)handleConnectionActiveStateChange:(id)change;
- (void)sendUpdatedEvents:(id)events toConnection:(id)connection;
- (void)sendUpdatedCachedEvents:(id)events toConnection:(id)connection;
- (BOOL)shouldAllowEvent:(id)event topic:(id)topic connection:(id)connection;
- (unsigned long long)debounceTimeForConnection:(id)connection;
- (id)server:(id)server upstreamTopicsForTopic:(id)topic;
- (id)server:(id)server expandedTopicsForTopics:(id)topics;
- (void)configure;
- (id)dumpStateDescription;
@end

#endif /* HMDXPCEventRouterServer_h */
