//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDRemoteAccountManager_h
#define HMDRemoteAccountManager_h
@import Foundation;

#include "HMFObject.h"
#include "HMDAccountManager-Protocol.h"
#include "HMDBackingStore.h"
#include "HMDIDSService-Protocol.h"
#include "HMDIDSServiceDelegate-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFObject-Protocol.h"
#include "NSFastEnumeration-Protocol.h"

@class NSArray, NSMutableArray, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface HMDRemoteAccountManager : HMFObject<HMDAccountManager, HMFLogging, HMFObject, HMDIDSServiceDelegate, NSFastEnumeration> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } ourl_lock; unsigned int ourl_count; } _lock;
}

@property (readonly, nonatomic) NSObject<HMDIDSService> *service;
@property (nonatomic) BOOL monitoring;
@property (readonly, nonatomic) NSMutableArray *resolveOperations;
@property (retain, nonatomic) NSArray *accounts;
@property (retain, nonatomic) HMDBackingStore *backingStore;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *shortDescription;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly, copy, nonatomic) NSArray *attributeDescriptions;

/* class methods */
+ (id)sharedManager;
+ (id)logCategory;

/* instance methods */
- (void)__handleSendMessageFailureWithError:(id)error destination:(id)destination;
- (id)accountForSenderContext:(id)context;
- (id)deviceForSenderContext:(id)context;
- (id)init;
- (id)initWithIDSService:(id)idsservice;
- (void)start;
- (void)stop;
- (void)reset;
- (id)accountForIdentifier:(id)identifier;
- (id)accountForHandle:(id)handle;
- (id)accountForModelIdentifier:(id)identifier;
- (id)accountForDeviceHandle:(id)handle;
- (void)addAccount:(id)account;
- (void)removeAccount:(id)account;
- (void)_resolveAccountForHandle:(id)handle completionHandler:(id /* block */)handler;
- (BOOL)shouldCacheAccount:(id)account;
- (BOOL)shouldSyncAccount:(id)account;
- (BOOL)shouldSyncDevice:(id)device;
- (BOOL)shouldAccount:(id)account pushbackModel:(id)model actions:(id)actions;
- (BOOL)shouldDevice:(id)device processModel:(id)model actions:(id)actions;
- (BOOL)isCurrentDeviceDataOwnerForDevice:(id)device;
- (void)processAccountModel:(id)model message:(id)message;
- (void)processAccountModelRemove:(id)remove message:(id)message;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
- (void)service:(id)service account:(id)account identifier:(id)identifier didSendWithSuccess:(BOOL)success error:(id)error context:(id)context;
- (BOOL)isMonitoring;
@end

#endif /* HMDRemoteAccountManager_h */
