//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDCloudZone_h
#define HMDCloudZone_h
@import Foundation;

#include "HMFObject.h"
#include "HMDBackingStoreCacheZone.h"
#include "HMDCloudCache.h"
#include "HMDCloudGroup.h"

@class CKRecordID, CKRecordZone, CKRecordZoneSubscription, CKServerChangeToken, NSString;

@interface HMDCloudZone : HMFObject

@property (retain, nonatomic) HMDBackingStoreCacheZone *backingStoreZone;
@property (weak, nonatomic) HMDCloudCache *cache;
@property (readonly, nonatomic) NSString *zoneRootRecordName;
@property (retain, nonatomic) CKRecordZone *zone;
@property (retain, nonatomic) HMDCloudGroup *rootGroup;
@property (readonly, nonatomic) CKRecordID *privateZoneRootRecordID;
@property (readonly, nonatomic) BOOL processChangeEvenIfDecryptionFails;
@property (nonatomic) BOOL recordsAvailable;
@property (readonly, nonatomic) BOOL serverTokenAvailable;
@property (nonatomic) BOOL decrypted;
@property (readonly, nonatomic) NSString *owner;
@property (retain, nonatomic) NSString *subscriptionName;
@property (retain, nonatomic) CKRecordZoneSubscription *subscription;
@property (retain, nonatomic) CKServerChangeToken *serverChangeToken;

/* class methods */
+ (id)zoneRootRecordName;
+ (id)zoneSubscriptionName:(id)name;
+ (void)createZoneWithName:(id)name rootRecordName:(id)name subscriptionName:(id)name owner:(id)owner cacheZone:(id)zone cloudCache:(id)cache completion:(id /* block */)completion;
+ (id)shortDescription;

/* instance methods */
- (id)init;
- (id)initWithBackingStoreCacheZone:(id)zone cloudCache:(id)cache;
- (id)shortDescription;
- (id)description;
- (BOOL)doesProcessChangeEvenIfDecryptionFails;
- (id)cloudRecordWithName:(id)name;
- (void)cloudRecordWithNames:(id)names completionHandler:(id /* block */)handler;
- (void)cloudRecordWithName:(id)name completionHandler:(id /* block */)handler;
- (id)createCloudRecordWithObjectID:(id)id recordName:(id)name;
- (id)createCloudRecordWithFetchResult:(id)result;
- (id)__cloudRecordWithObjectID:(id)id;
- (id)cloudRecordWithObjectID:(id)id;
- (void)cloudRecordWithObjectIDs:(id)ids completionHandler:(id /* block */)handler;
- (void)cloudRecordWithObjectID:(id)id completionHandler:(id /* block */)handler;
- (void)cloudRecordsForParentID:(id)id completionHandler:(id /* block */)handler;
- (void)allDescendentsCloudRecordsForParentID:(id)id completionHandler:(id /* block */)handler;
- (void)fetchAllObjects:(id /* block */)objects;
- (void)fetchMigratedObjects:(id /* block */)objects;
- (void)markMigratedObjectsAsMigrated;
- (void)addCloudRecord:(id)record ownerID:(id)id;
- (BOOL)isRootRecord:(id)record;
- (BOOL)isRootCloudRecord:(id)record;
- (void)updateCloudRecord:(id)record;
- (void)updateCloudRecord:(id)record completionHandler:(id /* block */)handler;
- (void)deleteCloudRecordNames:(id)names;
- (void)deleteCloudRecord:(id)record;
- (id)createCloudZoneChangeTemporaryCache:(BOOL)cache;
- (BOOL)hasServerTokenAvailable;
- (void)_initializeSubscription:(id)subscription;
- (void)_initializeServerChangeToken:(id)token;
- (void)deleteZone;
- (void)updateCurrentServerChangeToken;
- (void)updateServerChangeToken:(id)token;
- (BOOL)hasRecordsAvailable;
- (BOOL)hasDecrypted;
@end

#endif /* HMDCloudZone_h */
