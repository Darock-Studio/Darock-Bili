//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessoryBrowser_h
#define HMDAccessoryBrowser_h
@import Foundation;

#include "HMFObject.h"
#include "HAPAccessoryServerBrowserDelegate-Protocol.h"
#include "HAPAccessoryServerDelegate-Protocol.h"
#include "HMDAccessoryBrowserHapProtocol-Protocol.h"
#include "HMDAccessoryBrowserManagerDelegate-Protocol.h"
#include "HMDAccessoryBrowserProtocol-Protocol.h"
#include "HMDAccessoryBrowserUnpairedAccessoryManagerDelegate-Protocol.h"
#include "HMDAccessoryServerBrowserDemo.h"
#include "HMDAuthServer.h"
#include "HMDAuthServerDelegate-Protocol.h"
#include "HMDHAP2Storage.h"
#include "HMDHomeManager.h"
#include "HMDMediaBrowser.h"
#include "HMDMediaBrowserDelegate-Protocol.h"
#include "HMDUnassociatedWACAccessory.h"
#include "HMDWACAccessoryConfigurationDelegate-Protocol.h"
#include "HMDWACBrowser.h"
#include "HMDWACBrowserDelegate-Protocol.h"
#include "HMDWatchSystemStateDelegate-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class BOOL *, HAPAccessoryServerBrowser, HAPAccessoryServerBrowserBTLE, HAPAccessoryServerBrowserIP, HMFMessageDispatcher, HMFTimer, HMMTRAccessoryServerBrowser, NSArray, NSData, NSHashTable, NSMutableArray, NSMutableSet, NSString, NSUUID;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface HMDAccessoryBrowser : HMFObject<HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate, HMFMessageReceiver, HMFTimerDelegate, HMDMediaBrowserDelegate, HMDWACBrowserDelegate, HMDWACAccessoryConfigurationDelegate, HMDWatchSystemStateDelegate, HMDAuthServerDelegate, HMFLogging, HMDAccessoryBrowserProtocol, HMDAccessoryBrowserHapProtocol> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableSet *_unassociatedWACAccessories;
  NSMutableSet *_browsingConnections;
  NSHashTable *_activeAssertions;
}

@property BOOL internalDiscoveryRequest;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (retain, nonatomic) NSUUID *uuid;
@property (retain, nonatomic) HMFMessageDispatcher *messageDispatcher;
@property (nonatomic) unsigned long long generationCounter;
@property (weak, nonatomic) HMDHomeManager *homeManager;
@property (weak, nonatomic) NSObject<HMDAccessoryBrowserManagerDelegate> *managerDelegate;
@property (weak, nonatomic) NSObject<HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> *unpairedAccessoryManagerDelegate;
@property (retain, nonatomic) NSMutableArray *accessoryServerBrowsers;
@property (retain, nonatomic) NSHashTable *discoveringAccessoryServerBrowsers;
@property (retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser;
@property (retain, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser;
@property (retain, nonatomic) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser;
@property (retain, nonatomic) HMDHAP2Storage *hap2Storage;
@property (retain, nonatomic) HMDMediaBrowser *mediaBrowser;
@property (retain, nonatomic) HMDWACBrowser *wacBrowser;
@property (retain, nonatomic) HMDUnassociatedWACAccessory *accessoryPerformingWAC;
@property (retain, nonatomic) HMDAuthServer *authServer;
@property (retain, nonatomic) HMDAccessoryServerBrowserDemo *demoAccessoryServerBrowser;
@property (readonly, nonatomic) HMFTimer *stopReprovisioningTimer;
@property (readonly, nonatomic) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property (retain, nonatomic) NSString *identifierOfAccessoryBeingReprovisioned;
@property (retain, nonatomic) NSData *wiFiPSKForAccessoryReprovisioning;
@property (retain, nonatomic) NSString *countrycodeForAccessoryReprovisioning;
@property (nonatomic) BOOL active;
@property (retain, nonatomic) NSMutableArray *pairedAccessories;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE;
@property (readonly, nonatomic) NSArray *unpairedHAPAccessories;
@property (readonly, nonatomic) NSArray *unassociatedMediaAccessories;
@property (readonly, nonatomic) NSArray *deviceSetupMediaAccessories;
@property (retain, nonatomic) NSMutableArray *currentlyPairingAccessories;
@property (retain, nonatomic) NSMutableArray *currentlyPairingProgressHandlers;
@property (readonly, nonatomic) NSHashTable *tombstonedHAPAccessoryServers;
@property (readonly, nonatomic) NSHashTable *discoveringBLEAccessoryServerIdentifiers;
@property (retain, nonatomic) NSMutableSet *discoveredAccessoryServerIdentifiers;
@property (retain, nonatomic) NSArray *browseableLinkTypes;
@property (nonatomic) BOOL hasActiveWACPairing;
@property (nonatomic) BOOL btlePowerState;
@property (nonatomic) unsigned long long unitTestBTLEReachabilityInterval;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, copy) NSArray *unassociatedAccessories;
@property (readonly) HMMTRAccessoryServerBrowser *chipAccessoryServerBrowser;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithMessageDispatcher:(id)dispatcher;
- (id)initWithMessageDispatcher:(id)dispatcher injectedSettings:(id)settings;
- (void)configureWithHomeManager:(id)manager;
- (void)configureWithHomeManager:(id)manager mediaBrowserFactory:(id /* block */)factory;
- (void)configureAccessory:(id)accessory trackState:(BOOL)state connectionPriority:(BOOL)priority;
- (void)setQOS:(long long)qos;
- (void)retrieveCurrentStateForIdentifier:(id)identifier stateNumber:(id *)number isReachable:(BOOL *)reachable linkQuality:(unsigned long long *)quality lastSeen:(id *)seen;
- (void)updateStateForIdentifier:(id)identifier stateNumber:(id)number;
- (void)updateBroadcastKeyForIdentifier:(id)identifier key:(id)key keyUpdatedStateNumber:(id)number keyUpdatedTime:(double)time;
- (void)dealloc;
- (void)validateLinkTypes:(id)types;
- (void)configureDemoBrowserWithDemoAccessories:(id)accessories finalized:(BOOL)finalized;
- (void)_handleTestModeConfigRequest:(id)request;
- (void)addUnassociatedAccessory:(id)accessory forDeviceSetup:(BOOL)setup;
- (void)removeUnassociatedAccessoryWithIdentifier:(id)identifier;
- (void)removeUnassociatedAccessory:(id)accessory;
- (id)unassociatedAccessoriesForClientRequest:(id)request;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)identifier;
- (void)handleAddedAccessory:(id)accessory;
- (void)_handleAddedAccessory:(id)accessory;
- (void)handleRemovedAccessory:(id)accessory;
- (void)_handleRemovedAccessory:(id)accessory;
- (void)_sendNewAccessoryData:(id)data messageName:(id)name;
- (id)dumpBrowsingConnections;
- (id)browsingConnections;
- (void)__resetBrowsingConnections;
- (BOOL)__isAccessoryBrowsingRequested;
- (BOOL)__isMediaAccessoryBrowsingRequested;
- (void)__removeBrowsingObserver:(id)observer error:(id)error;
- (void)__addBrowsingConnection:(id)connection;
- (void)_removeBrowsingConnection:(id)connection error:(id)error;
- (void)addPairedAccessory:(id)accessory;
- (void)removePairedAccessory:(id)accessory;
- (void)resetPairedAccessories;
- (void)removePairedAccessoryInfoWithIdentifier:(id)identifier;
- (id)pairedAccessoryInformationWithIdentifier:(id)identifier;
- (id)pairedAccessoryInformationWithSetupID:(id)id;
- (id)pairedHMDHAPAccessoryWithAccessoryServer:(id)server;
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)transports;
- (BOOL)areThereAnyPairedAccessories;
- (id)identifiersOfPairedBTLEAccessories;
- (BOOL)areThereAnyPairedBTLEAccessories;
- (id)identifiersOfAssociatedMediaAccessories;
- (BOOL)areThereAnyAssociatedAirPlayAccessories;
- (unsigned long long)numPairedIPAccessories;
- (id)beginActiveAssertionWithReason:(id)reason;
- (void)endActiveAssertion:(id)assertion;
- (void)__activate;
- (void)__inactivate;
- (void)_notifyDelegateOfReachabilityChange:(BOOL)change forAccessoryWithIdentifier:(id)identifier;
- (void)_handleAddedAccessoryAdvertisements:(id)advertisements;
- (void)_handleRemovedAccessoryAdvertisements:(id)advertisements;
- (void)resetConfiguration;
- (BOOL)isDiscoveringAccessoriesWithLinkType:(long long)type;
- (void)startDiscoveringPairedAccessories;
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)type;
- (void)startDiscoveringAccessories;
- (void)startDiscoveringAccessoriesWithLinkType:(long long)type;
- (void)startDiscoveringMediaAccessories;
- (void)stopDiscoveringAccessories;
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)type;
- (void)stopDiscoveringForUnpairedAccessoriesWithLinkType:(long long)type;
- (void)stopDiscoveringMediaAccessories;
- (void)btleAccessoryReachabilityProbeTimer:(BOOL)timer;
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)identifiers;
- (void)discoverAccessoryServer:(id)server linkType:(long long)type errorHandler:(id /* block */)handler;
- (void)activate:(BOOL)activate;
- (void)reprovisionAccessoryWithIdentifier:(id)identifier wiFiPSK:(id)psk countryCode:(id)code withCompletion:(id /* block */)completion;
- (void)_reprovisionAccessoryWithIdentifier:(id)identifier wiFiPSK:(id)psk countryCode:(id)code withCompletion:(id /* block */)completion;
- (void)handleConnectionDeactivation:(id)deactivation;
- (void)homeLocationChangeNotification:(id)notification;
- (void)handleNewlyPairedAccessory:(id)accessory linkType:(long long)type;
- (id)accessoryBrowserHapProtocol;
- (BOOL)isBrowsingAllowed;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)identifiers forceScan:(BOOL)scan withCompletion:(id /* block */)completion;
- (id)unpairedAccessoryWithUUID:(id)uuid;
- (id)_unpairedAccessoryMatchingPairingInfo:(id)info;
- (id)_pairingInformationForUnpairedAccessory:(id)accessory;
- (id)_pairingInformationForAccessoryIdentifier:(id)identifier;
- (id)_progressHandlerForUnpairedAccessory:(id)accessory;
- (void)addUnassociatedMediaAccessory:(id)accessory forDeviceSetup:(BOOL)setup;
- (void)_associate:(BOOL)_associate hapAccessoryWithAdvertisement:(id)advertisement;
- (void)_associateMediaAccessoryForServer:(id)server;
- (void)removeUnassociatedMediaAccessory:(id)accessory;
- (void)addUnassociatedWACAccessory:(id)wacaccessory;
- (void)removeUnassociatedWACAccessory:(id)wacaccessory;
- (void)updateUnassociatedWACAccessory:(id)wacaccessory;
- (void)setActiveWACSession:(id)wacsession;
- (id)getActiveWACSession;
- (void)requestPermissionToAssociateWACAccessory:(id)wacaccessory completionHandler:(id /* block */)handler;
- (void)unassociatedWACAccessoryDidStartAssociation:(id)association;
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)association withError:(id)error;
- (void)addUnpairedHAPAccessory:(id)hapaccessory;
- (void)removeUnpairedHAPAccessory:(id)hapaccessory;
- (void)_handleRemovedUnpairedHAPAccessory:(id)hapaccessory;
- (void)_removePairingInformationForUnpairedAccessory:(id)accessory;
- (void)_handleWACAccessoryFound;
- (void)_addUnpairedAccessoryForServer:(id)server;
- (void)registerPairedAccessory:(id)accessory transports:(unsigned long long)transports setupHash:(id)hash delegate:(id)delegate;
- (void)deregisterPairedAccessory:(id)accessory;
- (void)addUnpairedAccessoryServer:(id)server identifier:(id)identifier;
- (id)discoveredAccessoryServers;
- (void)_addDiscoveredAccessoryServerIdentifier:(id)identifier;
- (void)_removeDiscoveredAccessoryServerIdentifier:(id)identifier;
- (void)registerProgressHandler:(id /* block */)handler unpairedAccessoryUUID:(id)uuid;
- (void)pairAccessory:(id)accessory configuration:(id)configuration completionHandler:(id /* block */)handler;
- (void)pairAccessoryWithDescription:(id)description configuration:(id)configuration progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)description;
- (void)removePairingInformationForAccessoryServer:(id)server;
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)detail consent:(BOOL)consent;
- (void)handleSetupCodeAvailable:(id)available;
- (void)cancelPairingWithAccessory:(id)accessory error:(id)error;
- (void)_btleAccessoryReachabilityProbeTimer:(BOOL)timer;
- (void)_stopBtleAccessoryReachabilityProbeTimer;
- (void)evaluateAccessoryDiscoveryState;
- (void)_startOrStopAccessoryDiscovery;
- (void)_stopReprovisioningTimerHandler;
- (void)timerDidFire:(id)fire;
- (void)_discoverAccessoryServer:(id)server linkType:(long long)type errorHandler:(id /* block */)handler;
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)identifier linkType:(long long)type completion:(id /* block */)completion;
- (void)_startDiscoveringPairedAccessories:(id)accessories;
- (void)_startDiscoveringAccessoriesWithLinkType:(id)type;
- (void)_startDiscoveryForAccessoryServerBrowser:(id)browser;
- (void)_startDiscoveringMediaAccessories;
- (void)_stopDiscoveringMediaAccessories;
- (void)_stopDiscoveringAccessoriesWithLinkType:(id)type force:(BOOL)force error:(id)error;
- (void)_stopDiscoveringAccessoriesWithError:(id)error;
- (void)_stopDiscoveryForAccessoryServerBrowser:(id)browser;
- (void)startDiscoveringAccessoriesNeedingReprovisioning;
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;
- (void)_restartBrowsers;
- (void)restartBrowsers;
- (void)handleConnectionUpdateWithBonjourDeviceInfo:(id)info socketInfo:(id)info;
- (void)discoverAccessories:(id)accessories;
- (void)tombstoneAccessoryServer:(id)server;
- (void)resurrectAccessoryServer:(id)server;
- (void)_registerForMessages;
- (void)_registerForNotifications;
- (void)_cancelCurrentlyPairingAccessories:(long long)accessories linkType:(id)type;
- (void)__handleProcessStateChange:(id)change;
- (void)_handleCurrentWiFiNetworkChangedNotification:(id)notification;
- (void)_handleRequestFetchNewAccessories:(id)accessories;
- (void)_handleRequestSearchForNewAccessories:(id)accessories;
- (void)handleXPCConnectionInvalidated:(id)invalidated;
- (void)_setBTLEPowerChangeCompletionHandler;
- (id)unpairedAccessoryWithServerIdentifier:(id)identifier;
- (id)unpairedAccessoryForServer:(id)server;
- (void)_notifyManagerOfNewAccessory;
- (void)_handleSetupCodeAvailable:(id)available;
- (void)_cancelPairingWithAccessory:(id)accessory error:(id)error;
- (id)findAccessoryServerForAccessoryDescription:(id)description;
- (id)currentControllerPairingIdentity;
- (void)cancelPairingWithAccessoryDescription:(id)description error:(id)error;
- (void)_cancelPairingWithAccessoryDescription:(id)description error:(id)error;
- (void)_pairAccessoryWithDescription:(id)description configuration:(id)configuration progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (BOOL)_isOwnerPairingAccessoryWithConfiguration:(id)configuration;
- (BOOL)_isHomeHubMatterSharedAdminPairingCapableWithConfiguration:(id)configuration;
- (void)_pairAccessory:(id)accessory configuration:(id)configuration completionHandler:(id /* block */)handler;
- (void)_promptForPairingPasswordForServer:(id)server reason:(id)reason;
- (void)_updatePairingRetryTimerForAccessory:(id)accessory delay:(long long)delay;
- (void)_sendPairingCompletionStatusForServer:(id)server error:(id)error completionHandler:(id /* block */)handler;
- (id)messageDestination;
- (BOOL)_isAccessoryServerTombstoned:(id)tombstoned;
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)identifier;
- (BOOL)_shouldAccessoryServerBeTombstoned:(id)tombstoned;
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)server;
- (void)_tombstoneAccessoryServer:(id)server forceNotify:(BOOL)notify;
- (id)_requiredCharacteristicsTypesToReadFromBTLEServer:(id)btleserver;
- (void)_discoverAccessories:(id)accessories;
- (void)_resurrectAccessoryServer:(id)server;
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)server stateChanged:(BOOL)changed stateNumber:(id)number;
- (void)accessoryServerBrowser:(id)browser accessoryServer:(id)server didUpdateValuesForCharacteristics:(id)characteristics stateNumber:(id)number broadcast:(BOOL)broadcast;
- (void)_removePairingInformation:(id)information error:(id)error;
- (void)_checkIfPairingWithPairedAccessoryServer:(id)server errorCode:(long long)code;
- (void)accessoryServerBrowser:(id)browser didFindAccessoryServer:(id)server stateChanged:(BOOL)changed stateNumber:(id)number;
- (void)accessoryServerBrowser:(id)browser didFindAccessoryServerForReprovisioning:(id)reprovisioning;
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)identifier error:(id)error;
- (void)accessoryServerBrowser:(id)browser didFindAccessoryServerNeedingReprovisioning:(id)reprovisioning error:(id)error;
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)reprovisioning error:(id)error;
- (void)accessoryServerBrowser:(id)browser didFinishWACForAccessoryWithIdentifier:(id)identifier error:(id)error;
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)server error:(id)error;
- (void)_handlePairingInterruptedTimeout:(id)timeout error:(id)error;
- (void)_stopReconfirmTimer:(id)timer;
- (void)_startPairingInterruptionTimer:(id)timer;
- (void)_addReconfirmTimer:(id)timer accessoryServer:(id)server;
- (void)accessoryServerBrowser:(id)browser didRemoveAccessoryServer:(id)server error:(id)error;
- (void)accessoryServerBrowser:(id)browser didStartDiscoveringWithError:(id)error;
- (void)accessoryServerBrowser:(id)browser didStopDiscoveringWithError:(id)error;
- (void)_notifyDelegateOfDiscoveryFailure:(id)failure accessoryServer:(id)server linkType:(long long)type;
- (void)accessoryServerBrowser:(id)browser didFailToDiscoverAccessoryServerWithIdentifier:(id)identifier;
- (void)accessoryServerBrowser:(id)browser didChangeReachability:(BOOL)reachability forAccessoryServerWithIdentifier:(id)identifier;
- (void)_notifyDelegateOfReachabilityChangeChange:(BOOL)change forBTLEAccessories:(id)btleaccessories;
- (void)accessoryServerBrowser:(id)browser saveCache:(id)cache serverIdentifier:(id)identifier;
- (void)accessoryServerBrowser:(id)browser getCacheForAccessoryWithIdentifier:(id)identifier withCompletion:(id /* block */)completion;
- (void)accessoryServerBrowser:(id)browser removeCacheForAccessoryWithIdentifier:(id)identifier;
- (BOOL)isServerLinkTypeBrowseable:(long long)browseable;
- (void)saveAccessoryCache:(id)cache forIdentifier:(id)identifier;
- (void)fetchAccessoryCacheForIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)removeAccessoryCacheForIdentifier:(id)identifier;
- (void)accessoryServerBrowser:(id)browser getCommissioningCertificatesForNodeID:(id)id fabricID:(id)id publicKey:(id)key completion:(id /* block */)completion;
- (void)accessoryServerBrowser:(id)browser getOperationalCertificatesForFabricID:(id)id publicKey:(id)key completion:(id /* block */)completion;
- (void)accessoryServerBrowser:(id)browser cacheOperationalCertData:(id)data forFabricID:(id)id;
- (void)accessoryServerBrowser:(id)browser getCachedOperationalCertificateDataForFabricID:(id)id completion:(id /* block */)completion;
- (void)accessoryServerBrowser:(id)browser didFinishPairingForAccessoryServer:(id)server;
- (void)accessoryServerBrowser:(id)browser getThreadNetworkCredentialsForAccessoryWithIdentifier:(id)identifier withCompletion:(id /* block */)completion;
- (id)_getHAPMetadataFromHMMetadata:(id)hmmetadata;
- (void)_continueAfterPPIDValidation:(BOOL)ppidvalidation server:(id)server;
- (void)_callProgressOrErrorOut:(id)out pairingInfo:(id)info accessoryInfo:(id)info unpairedAccessory:(id)accessory progress:(long long)progress certStatus:(unsigned long long)status;
- (void)accessoryServer:(id)server promtDialog:(id)dialog forNotCertifiedAccessory:(id)accessory completion:(id /* block */)completion;
- (void)accessoryServer:(id)server requestUserPermission:(long long)permission accessoryInfo:(id)info error:(id)error;
- (void)accessoryServer:(id)server promptUserForPasswordWithType:(unsigned long long)type;
- (void)accessoryServer:(id)server didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)delay;
- (void)_notifyDelegateOfAccessoryServer:(id)server didStopPairingWithError:(id)error;
- (void)accessoryServer:(id)server didStopPairingWithError:(id)error;
- (void)_notifyDelegateOfAccessoryServer:(id)server didDiscoverAccessories:(id)accessories transaction:(id)transaction error:(id)error;
- (void)accessoryServer:(id)server updatePairingProgress:(long long)progress;
- (void)_updateHasActiveWACPairing:(long long)wacpairing;
- (void)updatePairingWithProgress:(long long)progress accessoryServer:(id)server;
- (void)updateAlreadyPairingProgressForAccessoryServerIdentifier:(id)identifier progressHandler:(id /* block */)handler;
- (void)updateProgressForMappedErrors:(id)errors accessoryServer:(id)server progressHandler:(id /* block */)handler;
- (void)accessoryServer:(id)server didDiscoverAccessories:(id)accessories transaction:(id)transaction error:(id)error;
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)confirmation withError:(id)error;
- (void)_notifyDelegateOfAccessoryServer:(id)server didUpdateValuesForCharacteristics:(id)characteristics stateNumber:(id)number broadcast:(BOOL)broadcast;
- (void)accessoryServer:(id)server didUpdateValuesForCharacteristics:(id)characteristics stateNumber:(id)number broadcast:(BOOL)broadcast;
- (void)accessoryServer:(id)server didDisconnectWithError:(id)error;
- (void)accessoryServer:(id)server didUpdateWakeNumber:(id)number;
- (void)_notifyDelegateOfAccessoryServer:(id)server didUpdateHasPairings:(BOOL)pairings;
- (void)accessoryServer:(id)server didUpdateHasPairings:(BOOL)pairings;
- (void)accessoryServerDidUpdateStateNumber:(id)number;
- (void)_notifyDelegateOfAccessoryServer:(id)server didUpdateCategory:(id)category;
- (void)accessoryServer:(id)server didUpdateCategory:(id)category;
- (void)accessoryServer:(id)server didUpdateName:(id)name;
- (void)accessoryServer:(id)server didFinishAuth:(id)auth;
- (void)accessoryServerNeedsOwnershipToken:(id)token;
- (void)accessoryServer:(id)server validateUUID:(id)uuid token:(id)token model:(id)model;
- (void)accessoryServer:(id)server validateCert:(id)cert model:(id)model;
- (void)accessoryServer:(id)server authenticateUUID:(id)uuid token:(id)token;
- (void)accessoryServer:(id)server confirmUUID:(id)uuid token:(id)token;
- (void)accessoryServer:(id)server didUpdateConnectionState:(BOOL)state linkLayerType:(long long)type withError:(id)error;
- (void)accessoryServer:(id)server didUpdateConnectionState:(BOOL)state sessionInfo:(id)info linkLayerType:(long long)type withError:(id)error;
- (void)accessoryServer:(id)server didUpdateConnectionState:(BOOL)state linkLayerType:(long long)type bookkeeping:(id)bookkeeping withError:(id)error;
- (void)browser:(id)browser didAddAdvertisements:(id)advertisements;
- (void)browser:(id)browser didRemoveAdvertisements:(id)advertisements;
- (void)browser:(id)browser didRemoveSessions:(id)sessions;
- (void)browser:(id)browser didUpdateEndpoints:(id)endpoints;
- (void)didFinishActivation:(id)activation context:(id)context;
- (void)handleActivationResponse:(id)response context:(id)context;
- (void)handlePPIDInfoResponse:(id)response context:(id)context error:(id)error;
- (void)vendorModel:(id *)model vendorManufacturer:(id *)manufacturer accessoryInfo:(id)info;
- (id)dumpUnassociatedAccessories;
- (id)dumpRegisteredPairedAccessories;
@end

#endif /* HMDAccessoryBrowser_h */
