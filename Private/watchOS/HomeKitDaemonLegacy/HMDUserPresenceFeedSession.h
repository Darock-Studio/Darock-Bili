//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDUserPresenceFeedSession_h
#define HMDUserPresenceFeedSession_h
@import Foundation;

#include "HMFObject.h"
#include "HMDUser.h"
#include "HMDUserPresenceFeedRetryTimer.h"
#include "HMDUserPresenceFeedSessionDelegate-Protocol.h"
#include "HMDUserPresenceRegion.h"
#include "HMDUserPresenceUpdateReason.h"
#include "HMFLogging-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class HMFMessageDispatcher, HMUserPresenceAuthorization, HMUserPresenceCompute, NSDate, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDUserPresenceFeedSession : HMFObject<HMFLogging, HMFTimerDelegate>

@property (copy, nonatomic) NSString *logIdentifierString;
@property (readonly, weak, nonatomic) NSObject<HMDUserPresenceFeedSessionDelegate> *delegate;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly, nonatomic) NSUUID *targetUUID;
@property (readonly, nonatomic) HMFMessageDispatcher *messageDispatcher;
@property (readonly, nonatomic) HMDUser *user;
@property (readonly, nonatomic) HMUserPresenceAuthorization *presenceAuthStatus;
@property (readonly, nonatomic) HMUserPresenceCompute *presenceComputeStatus;
@property (readonly, nonatomic) HMDUserPresenceRegion *presenceRegionStatus;
@property (retain, nonatomic) HMDUserPresenceUpdateReason *reason;
@property (readonly, nonatomic) NSDate *statusChangeDate;
@property (readonly, nonatomic) NSUUID *sessionID;
@property (retain, nonatomic) HMDUserPresenceFeedRetryTimer *statusUpdateRetryTimer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithDelegate:(id)delegate workQueue:(id)queue targetUUID:(id)uuid messageDispatcher:(id)dispatcher user:(id)user presenceAuthStatus:(id)status presenceComputeStatus:(id)status presenceRegionStatus:(id)status reason:(id)reason;
- (void)dealloc;
- (id)attributeDescriptions;
- (void)send;
- (void)_send;
- (void)_handleStatusUpdateMessageError:(id)error responseTime:(double)time;
- (void)_callDelegate;
- (id)logIdentifier;
- (void)timerDidFire:(id)fire;
@end

#endif /* HMDUserPresenceFeedSession_h */
