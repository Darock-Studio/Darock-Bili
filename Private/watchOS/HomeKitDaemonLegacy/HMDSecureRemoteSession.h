//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDSecureRemoteSession_h
#define HMDSecureRemoteSession_h
@import Foundation;

#include "HMFMessageTransport.h"
#include "HMDAccountRegistry.h"
#include "HMDDevice.h"
#include "HMDRemoteDeviceMonitor.h"
#include "HMDRemoteDeviceMonitorDeviceRegistrationClient-Protocol.h"
#include "HMDSecureRemoteSession-Protocol.h"
#include "HMDSecureRemoteSessionDataSource-Protocol.h"
#include "HMDSecureRemoteStreamDelegate-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageTransportDelegate-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface HMDSecureRemoteSession : HMFMessageTransport<HMDSecureRemoteStreamDelegate, HMFLogging, HMFTimerDelegate, HMDRemoteDeviceMonitorDeviceRegistrationClient, HMDSecureRemoteSession> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (readonly, nonatomic) NSObject<HMDSecureRemoteSessionDataSource> *dataSource;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly, nonatomic) HMDRemoteDeviceMonitor *deviceMonitor;
@property (readonly, nonatomic) HMDAccountRegistry *accountRegistry;
@property (nonatomic) unsigned long long maximumRemoteStreams;
@property (readonly, copy, nonatomic) NSArray *pendingMessages;
@property (readonly, copy, nonatomic) NSArray *clientStreams;
@property (readonly, copy, nonatomic) NSArray *serverStreams;
@property (nonatomic) long long state;
@property (nonatomic) BOOL reachable;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) HMDDevice *device;
@property (weak) NSObject<HMFMessageTransportDelegate> *delegate;

/* class methods */
+ (BOOL)isSecureRemoteSessionMessage:(id)message;
+ (id)logCategory;

/* instance methods */
- (id)init;
- (id)initWithDevice:(id)device deviceMonitor:(id)monitor accountRegistry:(id)registry;
- (id)initWithDevice:(id)device deviceMonitor:(id)monitor accountRegistry:(id)registry dataSource:(id)source;
- (void)dealloc;
- (void)openWithCompletionHandler:(id /* block */)handler;
- (void)close;
- (void)_closeWithError:(id)error;
- (void)sendMessage:(id)message completionHandler:(id /* block */)handler;
- (void)_queueMessage:(id)message;
- (id)_dequeMessage;
- (void)receivedSecureMessage:(id)message fromDevice:(id)device fromTransport:(id)transport;
- (void)_handleSecureClientMessage:(id)message fromDevice:(id)device transport:(id)transport;
- (void)_handleSecureServerMessage:(id)message fromDevice:(id)device transport:(id)transport;
- (void)_handleStreamInvalidationMessage:(id)message;
- (void)handleDeviceIsReachable:(id)reachable;
- (void)handleDeviceIsNotReachable:(id)reachable;
- (id)_clientStreamWithIdentiifer:(id)identiifer;
- (id)_clientStreamForMessage:(id)message;
- (id)_serverStreamWithIdentifier:(id)identifier;
- (void)_openClientStreamWithCompletionHandler:(id /* block */)handler;
- (void)_closeClientStream:(id)stream error:(id)error;
- (void)_openServerStreamWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)_closeServerStream:(id)stream error:(id)error;
- (void)secureRemoteStreamIsIdle:(id)idle;
- (void)secureRemoteStream:(id)stream didCloseWithError:(id)error;
- (void)secureRemoteStream:(id)stream receivedRequestToSendMessage:(id)message;
- (void)messageTransport:(id)transport didReceiveMessage:(id)message;
- (id)dumpState;
- (id)logIdentifier;
- (void)timerDidFire:(id)fire;
- (BOOL)isReachable;
@end

#endif /* HMDSecureRemoteSession_h */
