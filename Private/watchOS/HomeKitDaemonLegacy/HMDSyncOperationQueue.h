//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDSyncOperationQueue_h
#define HMDSyncOperationQueue_h
@import Foundation;

#include "HMFObject.h"
#include "HMDSyncOperationManager.h"
#include "HMFLogging-Protocol.h"

@class HMFExponentialBackoffTimer, NSArray, NSMutableArray, NSString;

@interface HMDSyncOperationQueue : HMFObject<HMFLogging> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (weak, nonatomic) HMDSyncOperationManager *manager;
@property (readonly, copy) NSArray *stagedOperations;
@property (readonly, copy) NSArray *waitingOperations;
@property (nonatomic) double initialDelay;
@property (nonatomic) double initialBackoff;
@property (nonatomic) BOOL hasExponentialBackoff;
@property (retain, nonatomic) HMFExponentialBackoffTimer *backoffTimer;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) long long count;
@property (readonly, nonatomic) long long countTotal;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initName:(id)name syncManager:(id)manager initialDelay:(double)delay initialBackoff:(double)backoff hasBackoff:(BOOL)backoff;
- (void)_addStagedOperation:(id)operation;
- (void)_removeStagedOperation:(id)operation;
- (void)_addWaitingOperation:(id)operation;
- (void)_removeWaitingOperation:(id)operation;
- (void)_createBackoffTimer;
- (void)resetBackoffTimer;
- (void)_addOperation:(id)operation;
- (void)addOperation:(id)operation withDelay:(double)delay;
- (void)stageOperation:(id)operation;
- (void)dropOperation:(id)operation;
- (void)dropAllOperations;
- (BOOL)processFiredTimer:(id)timer;
- (BOOL)isInMaximumTimeInterval;
- (id)nextOperation;
- (id)allOperations;
- (id)operationsToCancel;
@end

#endif /* HMDSyncOperationQueue_h */
