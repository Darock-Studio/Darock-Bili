//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDHomeRemoteEventRouterClientController_h
#define HMDHomeRemoteEventRouterClientController_h
@import Foundation;

#include "HMDHomeManager.h"
#include "HMDHomeRemoteEventRouterClientControllerDataSource-Protocol.h"
#include "HMDHomeRemoteEventRouterClientFactory-Protocol.h"
#include "HMDRemoteEventRouterClientDataSource-Protocol.h"
#include "HMDRemoteEventRouterPrimaryResidentClient.h"
#include "HMDUserMessagePolicy.h"
#include "HMEDelegatingEventRouterDataSource-Protocol.h"

@class HMEDelegatingEventRouter, NSMutableArray, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDHomeRemoteEventRouterClientController : NSObject<HMDRemoteEventRouterClientDataSource, HMEDelegatingEventRouterDataSource> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<OS_dispatch_queue> *_workQueue;
  NSUUID *_messageTargetUUID;
  NSString *_requestMessageName;
  NSString *_updateMessageName;
  NSObject<HMDHomeRemoteEventRouterClientControllerDataSource> *_dataSource;
  HMDUserMessagePolicy *_clientUserMessagePolicy;
  NSObject<HMDHomeRemoteEventRouterClientFactory> *_routerClientFactory;
  HMDRemoteEventRouterPrimaryResidentClient *_remoteEventRouterPrimaryResidentClient;
  NSMutableArray *_residentClients;
  NSUUID *_currentAccessoryUUID;
}

@property (readonly) HMEDelegatingEventRouter *residentDelegatingEventRouter;
@property (readonly) NSUUID *homeUUID;
@property (weak) HMDHomeManager *homeManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithMessageTargetUUID:(id)uuid workQueue:(id)queue dataSource:(id)source requestMessageName:(id)name updateMessageName:(id)name clientUserMessagePolicy:(id)policy currentAccessoryUUID:(id)uuid assertionController:(id)controller;
- (id)initWithMessageTargetUUID:(id)uuid workQueue:(id)queue dataSource:(id)source routerClientFactory:(id)factory requestMessageName:(id)name updateMessageName:(id)name clientUserMessagePolicy:(id)policy currentAccessoryUUID:(id)uuid assertionController:(id)controller delegatingRouterFactory:(id /* block */)factory;
- (void)updateCurrentAccessoryUUID:(id)uuid;
- (void)createResidentRouterForAccessoryUUID:(id)uuid;
- (void)removeResidentRouterForAccessoryUUID:(id)uuid;
- (void)networkAvailabilityDidChange:(BOOL)change;
- (id)dumpStateDescription;
- (id)routerClientMessageDestination:(id)destination serverIdentifier:(out id *)identifier;
- (BOOL)isCurrentDevicePrimaryResident;
- (BOOL)isNetworkAvailable;
- (id)routerClientPrimaryResidentDeviceIdentifier:(id)identifier;
- (id)primaryResidentChangeMonitorForRouterClient:(id)client;
- (BOOL)routerClientSupportsFragmentMessageForServerIdentifier:(id)identifier;
- (BOOL)routerClientShouldRestrictMessagingToLocalOnly:(id)only;
- (id)client:(id)client forwardingTopicsForTopics:(id)topics;
- (void)discoverPrimaryResidentForEventRouterClient:(id)client;
- (BOOL)client:(id)client isIdsIdentifier:(id)identifier ofAccessory:(id)accessory;
- (id)delegatingRouter:(id)router filteredTopics:(id)topics forRouter:(id)router;
- (id)delegatingRouter:(id)router upstreamTopicsFor:(id)for;
@end

#endif /* HMDHomeRemoteEventRouterClientController_h */
