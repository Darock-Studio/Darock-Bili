//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessorySettingsController_h
#define HMDAccessorySettingsController_h
@import Foundation;

#include "HMFObject.h"
#include "HMDAccessorySettingGroup.h"
#include "HMDAccessorySettingGroupDataSource-Protocol.h"
#include "HMDAccessorySettingsBackingStoreTransactionReceiverDelegate-Protocol.h"
#include "HMDAccessorySettingsController.h"
#include "HMDAccessorySettingsControllerDataSource-Protocol.h"
#include "HMDAccessorySettingsControllerDelegate-Protocol.h"
#include "HMDAccessorySettingsControllerDependencyFactory-Protocol.h"
#include "HMDAccessorySettingsMessageController-Protocol.h"
#include "HMDAccessorySettingsMessageHandler-Protocol.h"
#include "HMDBackingStoreObjectProtocol-Protocol.h"
#include "HMDHome.h"
#include "HMDLegacyAccessorySettingsAdaptor-Protocol.h"
#include "HMDLegacyAccessorySettingsAdaptorDelegate-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class HMFTimer, NSArray, NSMapTable, NSMutableArray, NSMutableSet, NSNotificationCenter, NSOperationQueue, NSString, NSUUID;
@protocol HMMLogEventSubmitting, OS_dispatch_queue, OS_os_log;

@interface HMDAccessorySettingsController : HMFObject<HMFLogging, HMFTimerDelegate, HMDAccessorySettingGroupDataSource, HMDLegacyAccessorySettingsAdaptorDelegate, HMDAccessorySettingsBackingStoreTransactionReceiverDelegate, HMDAccessorySettingsMessageController, NSSecureCoding> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<OS_os_log> *_logger;
}

@property (readonly) NSObject<HMDAccessorySettingsControllerDependencyFactory> *factory;
@property (readonly) NSMutableArray *allChildrenIdentifiers;
@property (readonly, weak) NSObject<HMDAccessorySettingsControllerDelegate> *delegate;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly) NSString *codingKey;
@property (readonly) NSMutableSet *dependantControllers;
@property (retain) NSMapTable *groupsMap;
@property (retain) NSMapTable *settingsMap;
@property (weak) HMDAccessorySettingsController *ownerController;
@property BOOL isSettingOwner;
@property BOOL isMigrationOwner;
@property BOOL hasCreatedUnprocessedRootGroup;
@property (retain) HMFTimer *fixupSettingsTimer;
@property (retain) HMFTimer *auditSettingsTimer;
@property (readonly) NSNotificationCenter *notificationCenter;
@property (retain, nonatomic) NSMutableSet *constraintItemsMarkedForRemoval;
@property (nonatomic) BOOL didInitiateSettingsCreationForOlderSoftwareCounterpart;
@property (retain, nonatomic) NSOperationQueue *constraintModifyOperationQueue;
@property (retain, nonatomic) HMFTimer *languageChangeDebounceTimer;
@property (retain, nonatomic) NSObject<HMDLegacyAccessorySettingsAdaptor> *legacySettingsAdaptor;
@property (retain) HMDAccessorySettingGroup *rootGroup;
@property (weak) NSObject<HMDAccessorySettingsControllerDataSource> *dataSource;
@property (readonly, copy) NSUUID *parentUUID;
@property (readonly) NSObject<HMDAccessorySettingsMessageHandler> *messageHandler;
@property (readonly) NSObject<HMMLogEventSubmitting> *logEventSubmitter;
@property (readonly) NSObject<HMDBackingStoreObjectProtocol> *transactionReceiver;
@property (readonly, copy) NSArray *childrenIdentifiers;
@property (readonly, copy) NSString *siriLanguage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSUUID *messageTargetUUID;
@property (readonly, weak) HMDHome *home;

/* class methods */
+ (id)logCategory;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithQueue:(id)queue delegate:(id)delegate dataSource:(id)source parentUUID:(id)uuid codingKey:(id)key logEventSubmitter:(id)submitter settingOwner:(BOOL)owner migrationOwner:(BOOL)owner factory:(id)factory rootGroup:(id)group notificationCenter:(id)center;
- (id)initWithQueue:(id)queue delegate:(id)delegate dataSource:(id)source parentUUID:(id)uuid codingKey:(id)key logEventSubmitter:(id)submitter;
- (id)initWithParentUUID:(id)uuid codingKey:(id)key;
- (BOOL)shouldEncodeSetting:(id)setting withCoder:(id)coder forAccessorySettingGroup:(id)group;
- (BOOL)shouldEncodeForNonAdminSharedUserForSetting:(id)setting;
- (BOOL)shouldEncodeForXPCTransportForSetting:(id)setting;
- (id)logIdentifier;
- (BOOL)isProxy;
- (BOOL)hasDependants;
- (id)_keyPathsForSettings;
- (void)settingsHierarchyDidChange;
- (void)_scheduleAuditWithReason:(unsigned long long)reason;
- (void)scheduleAuditWithReason:(unsigned long long)reason from:(id)from;
- (void)_performSettingsAudit;
- (void)_reevaluateDependantSettings;
- (void)timerDidFire:(id)fire;
- (void)_createSettings;
- (void)_migrateSettingsWithCompletion:(id /* block */)completion;
- (id)mergeWithSettingsMetadata:(id)metadata;
- (void)_removeDependant:(id)dependant;
- (void)_performDependantFixup;
- (void)scheduleDependantFixup;
- (void)owner:(id)owner didUpdateSettings:(id)settings;
- (BOOL)haveGroupWithUUID:(id)uuid;
- (id)settingForKeyPath:(id)path;
- (id)groupForKeyPath:(id)path;
- (void)onMessageUpdateValue:(id)value settingIdentifier:(id)identifier senderVersion:(id)version senderProductClass:(long long)class completion:(id /* block */)completion;
- (void)onMessageUpdateValue:(id)value settingKeyPath:(id)path senderVersion:(id)version senderProductClass:(long long)class completion:(id /* block */)completion;
- (void)_onMessageUpdateValue:(id)value settingKeyPath:(id)path senderVersion:(id)version senderProductClass:(long long)class completion:(id /* block */)completion;
- (void)_updateValue:(id)value forSetting:(id)setting senderVersion:(id)version senderProductClass:(long long)class completion:(id /* block */)completion;
- (void)_runUpdateTransactionWithValue:(id)value setting:(id)setting completion:(id /* block */)completion;
- (void)onMessageAddConstraint:(id)constraint keyPath:(id)path completion:(id /* block */)completion;
- (void)onMessageRemoveConstraint:(id)constraint keyPath:(id)path completion:(id /* block */)completion;
- (void)onMessageUpdateConstraints:(id)constraints keyPath:(id)path completion:(id /* block */)completion;
- (void)_cacheConstraintAdditions:(id)additions removals:(id)removals setting:(id)setting;
- (void)onMessageReplaceConstraintsWithAdditions:(id)additions constraintIdsToRemove:(id)remove settingIdentifier:(id)identifier senderProductClass:(long long)class isRemote:(BOOL)remote completion:(id /* block */)completion;
- (void)onMessageReplaceConstraintsWithAdditions:(id)additions constraintIdsToRemove:(id)remove keyPath:(id)path senderProductClass:(long long)class isRemote:(BOOL)remote completion:(id /* block */)completion;
- (void)_replaceConstraintsOnSetting:(id)setting additions:(id)additions removals:(id)removals completion:(id /* block */)completion;
- (void)_replaceConstraintsOnMessageToChildWithAdditions:(id)additions removedChildConstraints:(id)constraints settingKeyPath:(id)path senderProductClass:(long long)class completion:(id /* block */)completion;
- (BOOL)canUser:(id)user editConstraintsForSettingWithKeyPath:(id)path;
- (void)_removeManagedConfigurationProfile:(id)profile completion:(id /* block */)completion;
- (void)handleUpdatedGroupModel:(id)model completion:(id /* block */)completion;
- (void)handleRemovedGroupModel:(id)model completion:(id /* block */)completion;
- (void)handleUpdatedSettingModel:(id)model completion:(id /* block */)completion;
- (void)updatedSetting:(id)setting model:(id)model completion:(id /* block */)completion;
- (void)addedSettingModel:(id)model completion:(id /* block */)completion;
- (void)handleRemovedSettingModel:(id)model completion:(id /* block */)completion;
- (void)handleUpdatedSettingConstraintModel:(id)model completion:(id /* block */)completion;
- (void)handleRemovedSettingConstraintModel:(id)model completion:(id /* block */)completion;
- (void)handleLanguageChangeTimerFired;
- (void)_didAddGroup:(id)group;
- (void)_didRemoveGroup:(id)group;
- (void)_didAddSetting:(id)setting;
- (void)_didRemoveSetting:(id)setting;
- (void)didChangeSetting:(id)setting;
- (void)didUpdateSettingConstraints:(id)constraints;
- (void)didChangeDependantSettings:(id)settings ownerSettingsKeyPaths:(id)paths;
- (void)didBecomeIndependantOwner;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)decodeWithCoder:(id)coder;
- (void)setNestedGroupsDataSourcesWithGroup:(id)group;
- (void)configureIsSettingOwner:(BOOL)owner home:(id)home;
- (void)configureIsSettingOwner:(BOOL)owner home:(id)home legacySettingsAdaptor:(id)adaptor;
- (void)configureIsSettingOwner:(BOOL)owner migrationOwner:(BOOL)owner home:(id)home legacySettingsAdaptor:(id)adaptor;
- (id)modelObjectsForSettings;
- (void)addDependant:(id)dependant;
- (void)removeDependant:(id)dependant;
- (void)removeAllDependants;
- (void)auditOnFirstFetch;
- (void)updateSettingOwner:(BOOL)owner;
- (void)didDetectCounterpartUsesSoftwareVersionBasedMigrationOwner;
- (void)boolSettingForKeyPath:(id)path completion:(id /* block */)completion;
- (void)legacySettingsAdaptor:(id)adaptor didLoadSettingKeyPath:(id)path boolValue:(BOOL)value;
- (void)legacySettingsAdaptor:(id)adaptor didUpdateSettingKeyPath:(id)path boolValue:(BOOL)value;
- (void)legacySettingsAdaptor:(id)adaptor didLoadSettingKeyPath:(id)path numberValue:(id)value;
- (void)legacySettingsAdaptor:(id)adaptor didUpdateSettingKeyPath:(id)path numberValue:(id)value;
- (void)legacySettingsAdaptor:(id)adaptor didLoadSettingKeyPath:(id)path selectedLanguageValue:(id)value availableLanguageList:(id)list;
- (void)legacySettingsAdaptor:(id)adaptor didUpdateSettingKeyPath:(id)path selectedLanguageValue:(id)value availableLanguageList:(id)list;
- (id)languageValueList;
@end

#endif /* HMDAccessorySettingsController_h */
