//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessorySettingGroup_h
#define HMDAccessorySettingGroup_h
@import Foundation;

#include "HMFObject.h"
#include "HMDAccessorySettingGroup.h"
#include "HMDAccessorySettingGroupDataSource-Protocol.h"
#include "HMDSettingGroup-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSMutableSet, NSString, NSUUID;

@interface HMDAccessorySettingGroup : HMFObject<HMFLogging, NSSecureCoding, HMDSettingGroup> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (copy) NSUUID *parentIdentifier;
@property (weak) NSObject<HMDAccessorySettingGroupDataSource> *dataSource;
@property (readonly, copy) NSUUID *identifier;
@property (readonly, copy) NSString *name;
@property (readonly, copy) NSArray *settings;
@property (readonly, copy) NSArray *groups;
@property (weak) HMDAccessorySettingGroup *mediaSystemSettingGroup;
@property (readonly, copy) NSString *keyPath;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;
+ (BOOL)supportsSecureCoding;
+ (id)supportedSettingsClasses;
+ (id)supportedGroupsClasses;

/* instance methods */
- (id)fullDescription;
- (void)description:(id)description indent:(id)indent;
- (id)init;
- (id)initWithModel:(id)model;
- (id)initWithName:(id)name identifier:(id)identifier parentIdentifier:(id)identifier;
- (id)subGroupWithName:(id)name;
- (id)settingWithName:(id)name;
- (id)settingWithKeyPath:(id)path;
- (id)_settingWithKeys:(id)keys;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copyIdentical;
- (id)copyReplica;
- (BOOL)isPrivateToDevice;
- (id)settingWithIdentifier:(id)identifier;
- (void)addSetting:(id)setting;
- (void)removeSetting:(id)setting;
- (id)groupWithIdentifier:(id)identifier;
- (void)_reevaluateParentGroup:(id)group;
- (void)_setParentGroup:(id)group;
- (void)addGroup:(id)group;
- (void)removeGroup:(id)group;
- (id)logIdentifier;
- (id)initWithCoder:(id)coder;
- (BOOL)shouldEncodeForCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)dataSourceShouldEncodeSetting:(id)setting withCoder:(id)coder;
- (void)intersectSettingGroup:(id)group groupMetadata:(id)metadata shouldAddMissingItems:(BOOL)items;
- (BOOL)compareSettingsTree:(id)tree;
@end

#endif /* HMDAccessorySettingGroup_h */
