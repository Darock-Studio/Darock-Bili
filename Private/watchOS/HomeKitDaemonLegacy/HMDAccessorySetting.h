//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessorySetting_h
#define HMDAccessorySetting_h
@import Foundation;

#include "HMFObject.h"
#include "HMDAccessorySettingModel.h"
#include "HMDAccessorySettingProtocol-Protocol.h"
#include "HMDAccessorySettingUpdateProtocol-Protocol.h"
#include "HMDSettingBaseProtocol-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class HMFMessageDispatcher, NSArray, NSMutableArray, NSMutableSet, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDAccessorySetting : HMFObject<HMFLogging, HMDAccessorySettingUpdateProtocol, HMDAccessorySettingProtocol, NSSecureCoding, HMDSettingBaseProtocol> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableSet *_inMemoryCachedConstraintRemovals;
  NSMutableArray *_inMemoryCachedConstraints;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue;
@property (retain, nonatomic) HMFMessageDispatcher *messageDispatcher;
@property (readonly) HMDAccessorySettingModel *model;
@property (readonly, copy) NSArray *models;
@property (nonatomic) unsigned long long configurationVersion;
@property (readonly) BOOL isCollectionType;
@property (readonly, copy) NSUUID *identifier;
@property (readonly) unsigned long long properties;
@property (readonly) NSString *keyPath;
@property BOOL reflected;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) long long type;
@property (readonly, copy) NSString *name;
@property (readonly, copy) NSArray *constraints;
@property (readonly, copy) id value;
@property (readonly, copy) NSUUID *parentIdentifier;

/* class methods */
+ (id)decodedValue:(id)value error:(id *)error;
+ (id)logCategory;
+ (id)supportedValueClasses;
+ (id)supportedConstraintClasses;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithModel:(id)model;
- (id)initWithIdentifier:(id)identifier name:(id)name;
- (void)description:(id)description indent:(id)indent;
- (BOOL)isEqual:(id)equal;
- (BOOL)compareConstraints:(id)constraints;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copyIdentical;
- (id)copyReplica;
- (void)setGroup:(id)group;
- (void)_setType:(long long)type;
- (BOOL)isValid:(id *)valid;
- (BOOL)canAddConstraint:(id)constraint error:(id *)error;
- (BOOL)canRemoveConstraint:(id)constraint;
- (id)counterpartConstraintFor:(id)for;
- (id)constraintWithIdentifier:(id)identifier;
- (id)inMemoryConstraintWithIdentifier:(id)identifier;
- (id)replicatedMissingConstraintsFrom:(id)from;
- (void)mergeConstraintsFromOther:(id)other;
- (void)addConstraint:(id)constraint;
- (void)removeConstraint:(id)constraint;
- (void)addConstraintsInMemory:(id)memory;
- (void)removeConstraintsInMemory:(id)memory;
- (void)_mergeConstraintsLocallyWithAdditions:(id)additions removals:(id)removals;
- (BOOL)isConstraintMergeStrategyReflection;
- (id)modelsForConstraintsUpdate:(id)update;
- (BOOL)shouldBlockSettingUpdateFromVersion:(id)version isMultiUserEnabled:(BOOL)enabled;
- (BOOL)shouldTurnOffPersonalRequestsOnLanguageChangeTo:(id)to supportedMultiUserLanguageCodes:(id)codes isMultiUserEnabled:(BOOL)enabled;
- (id)logIdentifier;
- (id)_modelsForMergeStrategyConstraintsUpdate:(id)update;
- (id)initWithCoder:(id)coder;
- (id)constraintsForCodingXPC;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isReflected;
@end

#endif /* HMDAccessorySetting_h */
