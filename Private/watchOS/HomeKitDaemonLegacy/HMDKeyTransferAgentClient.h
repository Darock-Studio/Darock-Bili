//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDKeyTransferAgentClient_h
#define HMDKeyTransferAgentClient_h
@import Foundation;

#include "HMDKeyTransferAgent.h"
#include "HMFNetMonitorDelegate-Protocol.h"
#include "HMFNetServiceBrowserDelegate-Protocol.h"
#include "HMFNetServiceDelegate-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class HMFExponentialBackoffTimer, HMFNetMonitor, HMFNetServiceBrowser, NSMutableDictionary, NSMutableSet, NSString;

@interface HMDKeyTransferAgentClient : HMDKeyTransferAgent<HMFNetServiceDelegate, HMFTimerDelegate, HMFNetMonitorDelegate, HMFNetServiceBrowserDelegate>

@property (retain, nonatomic) HMFNetServiceBrowser *serviceBrowser;
@property (retain, nonatomic) NSMutableDictionary *idsKeys;
@property (retain, nonatomic) NSMutableDictionary *bonjourKeys;
@property (retain, nonatomic) NSMutableSet *targetsToProcess;
@property (nonatomic) BOOL resolutionInProgress;
@property (retain, nonatomic) NSString *pairingWithUUID;
@property (retain, nonatomic) HMFExponentialBackoffTimer *atHomeRetryTimer;
@property (nonatomic) unsigned long long residentProvisioningStatus;
@property (retain, nonatomic) HMFNetMonitor *netMonitor;
@property (nonatomic) BOOL haveCulledPlist;
@property (nonatomic) long long tfaState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithHomeManager:(id)manager;
- (void)dealloc;
- (void)timerDidFire:(id)fire;
- (void)networkMonitorIsReachable:(id)reachable;
- (void)_saveKeyPlist;
- (id)_deviceWithUUID:(id)uuid;
- (void)queryPlistDevices;
- (void)resetConfig;
- (void)_startBrowser;
- (void)_stopBrowser;
- (void)_reallyBeginBonjourResolution;
- (void)_beginBonjourResolution:(BOOL)resolution;
- (void)_endPairingWithError:(id)error suspendingTimer:(BOOL)timer;
- (void)_startPairingWithKeyUUID:(id)uuid forTarget:(id)target;
- (void)_tfaVerificationCompleteForKeyUUID:(id)uuid forTarget:(id)target;
- (void)_tryPairingWithAccessories:(id)accessories completionHandler:(id /* block */)handler;
- (void)_haveVerifiedTwoFactorAuthenticationWithKeyUUID:(id)uuid forTarget:(id)target;
- (void)_havePairVerifiedAccessoryWithKeyUUID:(id)uuid forDevice:(id)device;
- (void)_sendIOSPublicKey:(id)key withDevice:(id)device;
- (void)_sendATVPrivateKey:(id)key withDevice:(id)device retry:(unsigned long long)retry;
- (BOOL)_newDeviceSeen:(id)seen;
- (void)_device:(id)_device addedToAccount:(id)account;
- (void)__deviceAddedToAccount:(id)account;
- (void)__deviceUpdated:(id)updated;
- (void)_device:(id)_device removedFromAccount:(id)account;
- (void)__deviceRemovedFromAccount:(id)account;
- (void)__accessoryIsReachable:(id)reachable;
- (void)__accountChanged:(id)changed;
- (void)_restartKeyTransfer:(id)transfer;
- (void)_handleKeyTransferAgentMessage:(id)message;
- (void)_handleResidentProvisioningStatusChanged:(id)changed;
- (void)receivedBonjourTXTFrom:(id)txtfrom withUUIDData:(id)uuiddata;
- (void)netServiceBrowser:(id)browser didStopBrowsingWithError:(id)error;
- (void)netService:(id)service didUpdateTXTRecord:(id)txtrecord;
- (void)netServiceBrowser:(id)browser didAddService:(id)service;
@end

#endif /* HMDKeyTransferAgentClient_h */
