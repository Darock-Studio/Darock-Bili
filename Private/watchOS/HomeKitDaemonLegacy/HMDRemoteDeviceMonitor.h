//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDRemoteDeviceMonitor_h
#define HMDRemoteDeviceMonitor_h
@import Foundation;

#include "HMFObject.h"
#include "HMDAccountRegistry.h"
#include "HMDAppleAccountManager.h"
#include "HMDIDSActivityMonitorObserver.h"
#include "HMDIDSActivityMonitorObserverDelegate-Protocol.h"
#include "HMDIDSService-Protocol.h"
#include "HMDIDSServiceDelegate-Protocol.h"
#include "HMDRemoteAccountManager.h"
#include "HMDRemoteDeviceMonitorDeviceRegistrationClient-Protocol.h"
#include "HMDRemoteDeviceMonitorFactory-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFNetMonitorDelegate-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"
#include "IDSAccountDelegate-Protocol.h"
#include "IDSAccountRegistrationDelegate-Protocol.h"

@class HMFNetMonitor, HMFTimer, IDSAccount, NSArray, NSMapTable, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface HMDRemoteDeviceMonitor : HMFObject<HMFLogging, HMFTimerDelegate, HMDIDSServiceDelegate, IDSAccountDelegate, IDSAccountRegistrationDelegate, HMDIDSActivityMonitorObserverDelegate, HMFNetMonitorDelegate, HMDRemoteDeviceMonitorFactory, HMDRemoteDeviceMonitorDeviceRegistrationClient> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<OS_dispatch_queue> *_queue;
  NSOperationQueue *_operationQueue;
  BOOL _started;
  NSObject<HMDIDSService> *_service;
  IDSAccount *_iCloudAccount;
  HMDIDSActivityMonitorObserver *_activityObserver;
  HMDAppleAccountManager *_accountManager;
  HMDRemoteAccountManager *_remoteAccountManager;
  HMFNetMonitor *_netMonitor;
  NSObject<HMDRemoteDeviceMonitorFactory> *_factory;
  NSMapTable *_deviceInformationByDevice;
  HMFTimer *_deviceHealthTimer;
  HMFTimer *_initialDeviceHealthTimer;
}

@property (readonly, nonatomic) HMDAccountRegistry *accountRegistry;
@property (readonly) BOOL reachable;
@property (readonly) NSArray *unreachableDevices;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)pingMessageForDevice:(id)device timeout:(double)timeout restriction:(unsigned long long)restriction;
+ (id)logCategory;

/* instance methods */
- (id)init;
- (id)initWithAccountRegistry:(id)registry activityObserver:(id)observer accountManager:(id)manager;
- (id)initWithAccountRegistry:(id)registry activityObserver:(id)observer queue:(id)queue service:(id)service modernService:(id)service accountManager:(id)manager remoteAccountManager:(id)manager netMonitor:(id)monitor factory:(id)factory;
- (id)dumpState;
- (void)dealloc;
- (void)start;
- (BOOL)isReachable;
- (void)startMonitoringDevice:(id)device withInitialReachability:(id)reachability forClient:(id)client;
- (void)stopMonitoringDevice:(id)device forClient:(id)client;
- (void)_handleGlobalReachabilityChange;
- (void)confirmDevice:(id)device forClient:(id)client timeout:(double)timeout completionHandler:(id /* block */)handler;
- (void)handleCurrentDeviceUpdate:(id)update;
- (void)handleDeviceRemovedFromAccount:(id)account;
- (void)handleAccountRemoved:(id)removed;
- (id)newInitialDeviceHealthTimer;
- (id)newRepeatingDeviceHealthTimer;
- (id)newDeviceMonitoringTimer;
- (id)newSendMessageOperationWithMessage:(id)message;
- (id)newConfirmationHandlerWithTimeout:(double)timeout workQueue:(id)queue handler:(id /* block */)handler;
- (void)networkMonitorIsReachable:(id)reachable;
- (void)networkMonitorIsUnreachable:(id)unreachable;
- (void)timerDidFire:(id)fire;
- (void)account:(id)account isActiveChanged:(BOOL)changed;
- (void)account:(id)account loginChanged:(id)changed;
- (void)service:(id)service activeAccountsChanged:(id)changed;
- (void)service:(id)service account:(id)account incomingMessage:(id)message fromID:(id)id context:(id)context;
- (void)_handleIncomingMessageForDevice:(id)device;
- (void)observer:(id)observer didUpdateDevice:(id)device isOnline:(BOOL)online;
@end

#endif /* HMDRemoteDeviceMonitor_h */
