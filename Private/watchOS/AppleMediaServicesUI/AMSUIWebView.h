//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 5.2.12.0.0
//
#ifndef AMSUIWebView_h
#define AMSUIWebView_h
@import Foundation;

#include "AMSUICommonView.h"
#include "AMSUIWebClientContext.h"
#include "WKNavigationDelegatePrivate-Protocol.h"
#include "WKScriptMessageHandlerWithReply-Protocol.h"
#include "WKUIDelegate-Protocol.h"

@class AMSBinaryPromise, NSArray, NSString, WKWebView;

@interface AMSUIWebView : AMSUICommonView<WKUIDelegate, WKNavigationDelegatePrivate, WKScriptMessageHandlerWithReply>

@property (retain, nonatomic) NSArray *baseScripts;
@property (retain, nonatomic) AMSBinaryPromise *contentRulesPromise;
@property (weak, nonatomic) AMSUIWebClientContext *context;
@property (retain, nonatomic) AMSBinaryPromise *currentLoadPromise;
@property (readonly, nonatomic) BOOL contentLoaded;
@property (nonatomic) double topInset;
@property (nonatomic) double bottomInset;
@property (readonly, nonatomic) WKWebView *underlyingWebView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_getSetCookiesForResponse:(id)response;

/* instance methods */
- (id)initWithContext:(id)context additionalScripts:(id)scripts;
- (void)layoutSubviews;
- (void)dealloc;
- (id)loadRequest:(id)request response:(id)response responseData:(id)data;
- (id)loadRequest:(id)request;
- (id)sendJSRequest:(id)jsrequest;
- (void)takeSnapshotWithCompletion:(id /* block */)completion;
- (void)updateUserScriptsWithScripts:(id)scripts;
- (void)webView:(id)view didReceiveAuthenticationChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)userContentController:(id)controller didReceiveScriptMessage:(id)message replyHandler:(id /* block */)handler;
- (void)webView:(id)view decidePolicyForNavigationAction:(id)action decisionHandler:(id /* block */)handler;
- (void)webView:(id)view didCommitNavigation:(id)navigation;
- (void)webView:(id)view didFinishNavigation:(id)navigation;
- (void)webView:(id)view didStartProvisionalNavigation:(id)navigation;
- (void)_webView:(id)view navigation:(id)navigation didSameDocumentNavigation:(long long)navigation;
- (void)_webView:(id)view navigationDidFinishDocumentLoad:(id)load;
- (void)webView:(id)view didFailProvisionalNavigation:(id)navigation withError:(id)error;
- (void)_webView:(id)view navigation:(id)navigation didFailProvisionalLoadInSubframe:(id)subframe withError:(id)error;
- (void)_webView:(id)view didFailNavigation:(id)navigation withError:(id)error userInfo:(id)info;
- (void)_webView:(id)view contentRuleListWithIdentifier:(id)identifier performedAction:(id)action forURL:(id)url;
- (void)_addScriptsToContentController:(id)controller additionalScripts:(id)scripts;
- (void)_finishedLoading;
- (id)_jsonLogStringWithDictionary:(id)dictionary;
- (void)_openURL:(id)url completionHandler:(id /* block */)handler;
- (id)_parseRequestError:(id)error logKey:(id)key;
- (id)_prepareWithURL:(id)url loadBlock:(id /* block */)block;
- (void)_receiveJSObject:(id)jsobject logKey:(id)key replyHandler:(id /* block */)handler;
- (id)_setupContentRulesForWebView:(id)view context:(id)context;
@end

#endif /* AMSUIWebView_h */
