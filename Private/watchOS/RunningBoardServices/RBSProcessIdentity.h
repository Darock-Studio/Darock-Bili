//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 858.60.5.0.0
//
#ifndef RBSProcessIdentity_h
#define RBSProcessIdentity_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "RBSProcessIdentifier.h"
#include "RBSProcessIdentity.h"
#include "RBSProcessMatching-Protocol.h"
#include "RBSXPCSecureCoding-Protocol.h"

@class NSData, NSString, NSUUID;

@interface RBSProcessIdentity : NSObject<RBSProcessMatching, RBSXPCSecureCoding, NSSecureCoding, NSCopying> {
  /* instance variables */
  int _pid;
}

@property (readonly, nonatomic) unsigned char defaultManageFlags;
@property (readonly, nonatomic) BOOL extension;
@property (readonly, nonatomic) BOOL external;
@property (readonly, nonatomic) BOOL inheritsCoalitionBand;
@property (readonly, nonatomic) BOOL dext;
@property (readonly, nonatomic) BOOL anonymous;
@property (readonly, nonatomic) NSString *dextServerName;
@property (readonly, nonatomic) NSString *dextLabel;
@property (readonly, nonatomic) NSString *dextContainingAppBundleID;
@property (readonly, nonatomic) NSString *shortDescription;
@property (readonly, nonatomic) unsigned int auid;
@property (readonly, nonatomic) int platform;
@property (readonly, copy, nonatomic) NSString *consistentLaunchdJobLabel;
@property (nonatomic) unsigned char osServiceType;
@property (readonly, nonatomic) BOOL supportsLaunchingDirectly;
@property (readonly, nonatomic) BOOL embeddedApplication;
@property (readonly, copy, nonatomic) NSString *embeddedApplicationIdentifier;
@property (readonly, nonatomic) BOOL daemon;
@property (readonly, copy, nonatomic) NSString *daemonJobLabel;
@property (readonly, nonatomic) BOOL angel;
@property (readonly, copy, nonatomic) NSString *angelJobLabel;
@property (readonly, nonatomic) BOOL consistentLaunchdJob;
@property (readonly, nonatomic) BOOL XPCService;
@property (readonly, copy, nonatomic) NSString *xpcServiceIdentifier;
@property (readonly, copy, nonatomic) RBSProcessIdentity *hostIdentity;
@property (readonly, copy, nonatomic) RBSProcessIdentifier *hostIdentifier;
@property (readonly, copy, nonatomic) NSString *persona;
@property (readonly, copy, nonatomic) NSString *personaString;
@property (readonly, copy, nonatomic) NSData *validationToken;
@property (readonly, nonatomic) BOOL application;
@property (readonly, copy, nonatomic) NSString *applicationJobLabel;
@property (readonly, nonatomic) NSUUID *uuid;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)identityForPlugInKitIdentifier:(id)identifier;
+ (id)identityOfCurrentProcess;
+ (id)identityForApplicationJobLabel:(id)label bundleID:(id)id platform:(int)platform;
+ (id)identityForEmbeddedApplicationIdentifier:(id)identifier jobLabel:(id)label auid:(unsigned int)auid platform:(int)platform;
+ (id)identityForWrappedInfoProviderIdentity:(id)identity;
+ (id)identityForEmbeddedApplicationIdentifier:(id)identifier;
+ (id)identityForEmbeddedApplicationIdentifier:(id)identifier auid:(unsigned int)auid;
+ (id)identityForLSApplicationIdentity:(id)identity;
+ (id)identityForLSApplicationIdentity:(id)identity LSApplicationRecord:(id)record;
+ (id)identityForUnknownServiceWithJobLabel:(id)label;
+ (id)identityForApplicationJobLabel:(id)label;
+ (id)identityForMacApplicationJobLabel:(id)label wrappedInfoProvider:(id)provider platform:(int)platform;
+ (id)identityForMacApplicationJobLabel:(id)label appID:(id)id platform:(int)platform;
+ (id)identityForMacApplicationJobLabel:(id)label appID:(id)id bundleID:(id)id platform:(int)platform;
+ (id)identityForDaemonJobLabel:(id)label;
+ (id)identityForAngelJobLabel:(id)label;
+ (id)identityForDextWithServerName:(id)name tagString:(id)string containingAppBundleID:(id)id;
+ (id)identityForLaunchdJobLabel:(id)label isMultiInstance:(BOOL)instance pid:(int)pid auid:(unsigned int)auid;
+ (id)identityForExecutablePath:(id)path pid:(int)pid auid:(unsigned int)auid;
+ (id)identityForXPCServiceIdentifier:(id)identifier hostInstance:(id)instance UUID:(id)uuid persona:(id)persona validationToken:(id)token variant:(long long)variant;
+ (id)identityForXPCServiceIdentifier:(id)identifier hostInstance:(id)instance UUID:(id)uuid variant:(long long)variant;
+ (id)_identityForXPCServiceIdentifier:(id)identifier variant:(long long)variant;
+ (id)identityForXPCServiceIdentifier:(id)identifier;
+ (id)extensionIdentityForPlugInKitIdentifier:(id)identifier hostIdentifier:(id)identifier UUID:(id)uuid;
+ (id)externalExtensionIdentityForExtensionKitIdentifier:(id)identifier hostIdentifier:(id)identifier UUID:(id)uuid;
+ (id)extensionIdentityForPlugInKitIdentifier:(id)identifier bundledURL:(id)url hostIdentifier:(id)identifier UUID:(id)uuid;
+ (id)externalExtensionIdentityForExtensionKitIdentifier:(id)identifier bundledURL:(id)url hostIdentifier:(id)identifier UUID:(id)uuid;
+ (id)extensionIdentityForBundleIdentifier:(id)identifier persona:(id)persona instanceUUID:(id)uuid hostIdentifier:(id)identifier validationToken:(id)token;
+ (id)identityForXPCServiceExecutablePath:(id)path host:(id)host;
+ (id)identityForXPCServiceExecutablePath:(id)path pid:(int)pid auid:(unsigned int)auid host:(id)host UUID:(id)uuid;
+ (BOOL)shouldManageExtensionWithExtensionPoint:(id)point;
+ (BOOL)supportsSecureCoding;
+ (BOOL)supportsRBSXPCSecureCoding;

/* instance methods */
- (id)init;
- (id)_init;
- (id)copyWithAuid:(unsigned int)auid;
- (id)copyWithPersonaString:(id)string;
- (BOOL)isExtension;
- (BOOL)isExternal;
- (BOOL)isEmbeddedApplication;
- (BOOL)isXPCService;
- (BOOL)isDaemon;
- (BOOL)isAngel;
- (BOOL)isApplication;
- (BOOL)isDext;
- (BOOL)isAnonymous;
- (BOOL)hasConsistentLaunchdJob;
- (BOOL)treatedAsAnAppByFrontBoard:(id *)board;
- (id)encodeForJob;
- (id)initWithDecodeFromJob:(id)job;
- (BOOL)_matchesIdentity:(id)identity;
- (BOOL)matchesProcess:(id)process;
- (id)processPredicate;
- (BOOL)matchesRecoveredIdentity:(id)identity;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEqualToIdentity:(id)identity;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)encodeWithRBSXPCCoder:(id)rbsxpccoder;
- (id)initWithRBSXPCCoder:(id)rbsxpccoder;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* RBSProcessIdentity_h */
