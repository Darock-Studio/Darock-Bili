//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3431.206.0.0.0
//
#ifndef TILanguageSelectionController_h
#define TILanguageSelectionController_h
@import Foundation;

#include "TIInputMode.h"
#include "TILanguageLikelihoodModeling-Protocol.h"
#include "TILanguageModelAdaptationContext.h"
#include "TILanguageSelectionControllerDelegate-Protocol.h"
#include "TIMultilingualPreferenceProviding-Protocol.h"

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary;
@protocol {vector<TITokenID, std::allocator<TITokenID>>="__begin_"^{TITokenID}"__end_"^{TITokenID}"__end_cap_"{__compressed_pair<TITokenID *, std::allocator<TITokenID>>="__value_"^{TITokenID}}};

@interface TILanguageSelectionController : NSObject {
  /* instance variables */
  struct vector<TITokenID, std::allocator<TITokenID>> { struct TITokenID *__begin_; struct TITokenID *__end_; struct __compressed_pair<TITokenID *, std::allocator<TITokenID>> { struct TITokenID *__value_; } __end_cap_; } m_buffered_tokens;
}

@property (readonly, nonatomic) NSObject<TILanguageLikelihoodModeling> *languageLikelihoodModel;
@property (readonly, nonatomic) NSObject<TIMultilingualPreferenceProviding> *preferenceProvider;
@property (retain, nonatomic) TIInputMode *primaryInputMode;
@property (retain, nonatomic) TIInputMode *preferredSecondaryInputMode;
@property (retain, nonatomic) TIInputMode *inferredSecondaryInputMode;
@property (retain, nonatomic) NSArray *userEnabledInputModes;
@property (retain, nonatomic) NSArray *activeInputModes;
@property (readonly, nonatomic) NSMutableDictionary *inputModeProbabilities;
@property (copy, nonatomic) NSDictionary *referenceInputModeProbabilities;
@property (readonly, nonatomic) NSMutableArray *bufferedTokenStrings;
@property (nonatomic) NSObject<TILanguageSelectionControllerDelegate> *delegate;
@property (retain, nonatomic) TILanguageModelAdaptationContext *adaptationContext;

/* class methods */
+ (id)sharedLanguageLikelihoodModel;
+ (id)multilingualInputModesForInputModes:(id)modes;
+ (id)inferSecondaryInputModeForPrimary:(id)primary enabled:(id)enabled;
+ (id)inferSecondaryInputModeForPrimary:(id)primary enabled:(id)enabled enabledExcludingPreferredLanguages:(id)languages;
+ (id)inferInputModeForLanguage:(id)language enabled:(id)enabled;
+ (id)inputModeForLanguageIdentifier:(id)identifier;
+ (id)inputModesForLanguageIdentifiers:(id)identifiers;
+ (void)reportTypedTokens:(const void *)tokens activeInputModes:(id)modes;

/* instance methods */
- (id)init;
- (id)initWithLanguageLikelihoodModel:(id)model preferenceProvider:(id)provider;
- (void)dealloc;
- (id)fetchUserEnabledInputModes;
- (id)fetchUserEnabledInputModesExcludingPreferredLanguages;
- (id)fetchPreferredSecondaryInputMode;
- (void)appleKeyboardsPreferencesChanged:(id)changed;
- (void)appleKeyboardsInternalSettingsChanged:(id)changed;
- (void)updateActiveInputModesSuppressingNotification:(BOOL)notification;
- (BOOL)didProbabilityChangeSignificantly;
- (BOOL)updateInputModeProbabilities;
- (void)feedBufferedTokenStringsToModel;
- (float)priorProbabilityForInputMode:(id)mode;
- (BOOL)bufferIsCompatibleWithContext:(const struct TITokenID { unsigned int x0; unsigned int x1; } *)context contextLength:(unsigned long long)length;
- (void)addTokenString:(id)string tokenID:(struct TITokenID { unsigned int x0; unsigned int x1; })id context:(const struct TITokenID { unsigned int x0; unsigned int x1; } *)context contextLength:(unsigned long long)length;
- (void)removeTokenString:(id)string tokenID:(struct TITokenID { unsigned int x0; unsigned int x1; })id context:(const struct TITokenID { unsigned int x0; unsigned int x1; } *)context contextLength:(unsigned long long)length;
- (double)lastOfflineAdaptationTimeForApp:(id)app;
- (void)flushBuffer;
@end

#endif /* TILanguageSelectionController_h */
