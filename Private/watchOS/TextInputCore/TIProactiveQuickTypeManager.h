//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3431.206.0.0.0
//
#ifndef TIProactiveQuickTypeManager_h
#define TIProactiveQuickTypeManager_h
@import Foundation;

#include "TIKeyboardActivityObserving-Protocol.h"
#include "TIProactiveQuickTypeManaging-Protocol.h"
#include "TIProactiveTrigger.h"

@class NSDate, NSString;
@protocol OS_dispatch_queue, _ICPredictionManaging;

@interface TIProactiveQuickTypeManager : NSObject<TIProactiveQuickTypeManaging, TIKeyboardActivityObserving> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<_ICPredictionManaging> *_inputContextPredictionManager;
  TIProactiveTrigger *_lastTriggerForSuggestion;
  NSDate *_lastSuggestionTime;
  NSString *_maxLengthProactiveCandidate;
  unsigned long long _textBeforeLength;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)setSharedTIProactiveQuickTypeManager:(id)manager;
+ (id)buildSecureCandidateForTestFrom:(id)from withSecureCandidateRenderer:(id)renderer input:(id)input;
+ (id)sharedInstance;
+ (id)singletonInstance;
+ (id)proactiveTriggerForTextContentType:(id)type;
+ (id)proactiveTriggerForTextContentType:(id)type withContextBeforeInput:(id)input autofillMode:(unsigned long long)mode;
+ (id)buildSecureCandidateFrom:(id)from withSecureCandidateRenderer:(id)renderer input:(id)input;

/* instance methods */
- (id)initWithICManager:(id)icmanager;
- (id)getLastSuggestionTime;
- (id)init;
- (void)dealloc;
- (BOOL)usePQT2Flow;
- (id)_makeQueue;
- (id)renderItems:(id)items withAdditionalPredictions:(id)predictions withSecureCandidateRenderer:(id)renderer withRenderTraits:(id)traits withInput:(id)input;
- (void)addToTypologyTrace:(id /* block */)trace withTriggerSource:(id)source withTriggerType:(id)type withTriggerSubType:(id)type withPredictionResults:(id)results withFirstTrigger:(id)trigger;
- (id)generateAndRenderProactiveSuggestionsWithTriggers:(id)triggers withKeyboardState:(id)state withAdditionalPredictions:(id)predictions withSecureCandidateRenderer:(id)renderer withRenderTraits:(id)traits withInput:(id)input withRecipient:(id)recipient withApplication:(id)application withLocale:(id)locale nextInputWillInsertAutospace:(BOOL)autospace withAvailableApps:(id)apps logBlock:(id /* block */)block;
- (void)generateAndRenderProactiveSuggestionsForInput:(id)input withKeyboardState:(id)state withAdditionalPredictions:(id)predictions withSecureCandidateRenderer:(id)renderer withRenderTraits:(id)traits withInput:(id)input withRecipient:(id)recipient withApplication:(id)application withLocale:(id)locale nextInputWillInsertAutospace:(BOOL)autospace withIsResponseDenyListed:(BOOL)listed withShouldDisableAutoCaps:(BOOL)caps withAvailableApps:(id)apps logBlock:(id /* block */)block async:(BOOL)async completion:(id /* block */)completion;
- (void)userActionWithNoNewTriggers:(id)triggers fieldType:(id)type;
- (void)suggestionAccepted:(id)accepted fieldType:(id)type;
- (void)suggestionNotAccepted:(id)accepted;
- (id)searchForMeCardEmailAddresses;
- (id)generateAndRenderProactiveSuggestionsWithInput:(id)input withSecureCandidateRenderer:(id)renderer withRenderTraits:(id)traits textContentType:(id)type;
- (void)generateAndRenderProactiveSuggestionsWithInput:(id)input withSecureCandidateRenderer:(id)renderer withRenderTraits:(id)traits textContentType:(id)type async:(BOOL)async completion:(id /* block */)completion;
- (void)keyboardActivityDidTransition:(id)transition;
- (void)loggingProactiveEngagementMetric:(unsigned long long)metric withLocale:(id)locale fieldType:(id)type;
- (unsigned long long)matchProactiveCandidateToUserInput:(id)input userInput:(id)input;
- (void)reset;
- (void)provideFeedbackForString:(id)string type:(unsigned char)type style:(unsigned char)style;
- (void)propogateMetrics:(id)metrics data:(id)data;
- (id)searchForMeCardRegions;
- (BOOL)isEnabled;
- (BOOL)isAutoPopupEnabled;
- (BOOL)isAutoCompleteEnabled;
@end

#endif /* TIProactiveQuickTypeManager_h */
