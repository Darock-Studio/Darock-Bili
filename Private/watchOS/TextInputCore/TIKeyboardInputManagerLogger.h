//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3431.206.0.0.0
//
#ifndef TIKeyboardInputManagerLogger_h
#define TIKeyboardInputManagerLogger_h
@import Foundation;

#include "TIKeyboardInputManagerLogging-Protocol.h"
#include "TIStatusBarStyleOverrideLoggingCapture.h"
#include "TITypologyLogDelegate-Protocol.h"
#include "TITypologyPreferences-Protocol.h"

@class NSString, TITypologyLog, TITypologyStatistic;

@interface TIKeyboardInputManagerLogger : NSObject<TITypologyLogDelegate, TIKeyboardInputManagerLogging>

@property (retain, nonatomic) NSString *inputModeIdentifier;
@property (retain, nonatomic) TITypologyLog *typologyLog;
@property (retain, nonatomic) TITypologyStatistic *typologyStatistic;
@property (nonatomic) BOOL hadSecureText;
@property (retain, nonatomic) TIStatusBarStyleOverrideLoggingCapture *sbsOverrideLoggingCapture;
@property (readonly, nonatomic) NSObject<TITypologyPreferences> *typologyPreferences;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)createTypologyDirectoryAtURL:(id)url;
+ (id)_writeToFileWithTypologyLog:(id)log directoryURL:(id)url;
+ (id)accessibilityConfigInfo;
+ (void)_writeHumanReadableTraceForTypologyLog:(id)log directoryURL:(id)url;
+ (void)_backgroundWriteLog:(id)log preferences:(id)preferences completion:(id /* block */)completion;
+ (void)_backgroundPruneLogsWithPreferences:(id)preferences;
+ (void)submitAggregrateDictionaryReport:(id)report inputModeIdentifier:(id)identifier;
+ (void)pruneTypologyLogsAtDirectoryURL:(id)url toMaxNumBytes:(long long)bytes expirationInterval:(double)interval satisfyingPredicate:(id /* block */)predicate;

/* instance methods */
- (void)dealloc;
- (id)initWithTypologyPreferences:(id)preferences;
- (BOOL)shouldWriteToSyslogForKeyboardState:(id)state;
- (BOOL)shouldWriteToTypologyLogForKeyboardState:(id)state;
- (BOOL)allowTypologyLogForKeyboardState:(id)state;
- (void)tryStartingTypologyLogForSyncToKeyboardState:(id)state;
- (void)disableTypologyLogIfNecessaryForKeyboardState:(id)state;
- (void)didReachMaximumEntries:(id)entries;
- (id)writeToFile;
- (void)backgroundWriteLogs;
- (void)setConfig:(id)config;
- (void)_tryWriteToSyslogWithTrace:(id)trace;
- (void)logKeyboardConfig:(id)config forSyncToKeyboardState:(id)state;
- (void)logKeyboardOutput:(id)output keyboardConfiguration:(id)configuration trace:(id)trace forKeyboardInput:(id)input keyboardState:(id)state;
- (void)logAutocorrections:(id)autocorrections trace:(id)trace forKeyboardState:(id)state requestToken:(id)token;
- (void)logCandidateResultSet:(id)set trace:(id)trace forKeyboardState:(id)state requestToken:(id)token;
- (void)logKeyboardConfig:(id)config textToCommit:(id)commit forAcceptedCandidate:(id)candidate keyboardState:(id)state;
- (void)logReplacements:(id)replacements forString:(id)string keyLayout:(id)layout;
- (void)logRefinements:(id)refinements forCandidate:(id)candidate keyboardState:(id)state;
- (void)logHitKeyCode:(long long)code forTouchEvent:(id)event keyboardState:(id)state;
- (void)logReceivedSkipHitTestForTouchEvent:(id)event forKeyboardState:(id)state;
- (void)logKeyboardConfig:(id)config forAdjustedPhraseBoundaryInForwardDirection:(BOOL)direction granularity:(int)granularity keyboardState:(id)state;
- (void)logReceivedSetOriginalInput:(id)input;
- (void)logReceivedTextAccepted:(id)accepted;
- (void)logReceivedCandidateRejected:(id)rejected;
- (void)logReceivedLastAcceptedCandidateCorrected;
- (void)logKeyboardLayout:(id)layout name:(id)name;
@end

#endif /* TIKeyboardInputManagerLogger_h */
