//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3431.206.0.0.0
//
#ifndef TISKMetricCollector_h
#define TISKMetricCollector_h
@import Foundation;

#include "TIInputMode.h"
#include "TISensorWriterWrapper-Protocol.h"
#include "TITypingSession.h"
#include "TITypingSessionAggregatedEventObserver-Protocol.h"

@class NLTagger, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, TIKeyboardInput, TIUserModelDataStore;
@protocol OS_dispatch_queue;

@interface TISKMetricCollector : NSObject<TITypingSessionAggregatedEventObserver> {
  /* instance variables */
  TIInputMode *_inputMode;
  NSMutableDictionary *_touchToEventMap;
  NSMutableArray *_events;
  NSArray *_sortedEvents;
  NSMutableArray *_touches;
  NSMutableArray *_layoutIDs;
  NSMutableArray *_taps;
  long long _wordPosition;
  TIKeyboardInput *_lastInput;
  long long _currentWordPosition;
  long long _eventOrder;
  unsigned long long _aggregatedWordThreshold;
  TIUserModelDataStore *_userModelDataStore;
  BOOL _accentedLanguage;
  NSMutableArray *_accentedLayoutsMap;
  NSString *_identifier;
  NSObject<OS_dispatch_queue> *_workQueue;
  int _tccNotifyToken;
  BOOL _isTCCAuthorized;
  BOOL _skipTCCAuthorization;
  NSDictionary *_wordBucketDictionary;
  NSDictionary *_emojiBuckets;
  NLTagger *_tagger;
  NSString *_previousWord;
}

@property (nonatomic) unsigned long long wordAccumulationThreshold;
@property (retain, nonatomic) NSObject<TISensorWriterWrapper> *dataWriter;
@property (retain, nonatomic) NSMutableArray *savedSessionStatsArray;
@property (retain, nonatomic) NSMutableArray *currentSessionStatsArray;
@property (retain, nonatomic) TITypingSession *typingSession;
@property (nonatomic) BOOL isLoaded;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)makeMetricCollector:(id)collector wordsThreshold:(unsigned long long)threshold isTesting:(BOOL)testing;
+ (BOOL)isSensorKitSupported:(id)supported;

/* instance methods */
- (void)placeTaskOnWorkQueue:(id /* block */)queue;
- (id)init:(id)init;
- (id)init:(id)init wordsThreshold:(unsigned long long)threshold;
- (id)init:(id)init wordsThreshold:(unsigned long long)threshold accentedLanguage:(BOOL)language;
- (id)init:(id)init wordsThreshold:(unsigned long long)threshold accentedLanguage:(BOOL)language skipTCCAuthorization:(BOOL)tccauthorization;
- (id)loadDataWithFilename:(id)filename;
- (void)dealloc;
- (void)testTCCAuthorization;
- (void)_setupTCCAuthNotification;
- (id)consumeTypingSession:(id)session;
- (void)_resetConsumeState;
- (void)_clear;
- (long long)findIndexSessionStatsFromArray:(id)array thatHasLayout:(id)layout;
- (void)setupSessionStatsForLayouts;
- (id)_consumeTypingSession:(id)session;
- (void)_consumeUserAction:(id)action;
- (void)_consumeWordEntry:(id)entry;
- (void)_consumeDeleteWordEvent:(id)event;
- (void)_consumeInputsAndTouches:(id)touches occurenceTime:(double)time emojiSearchMode:(BOOL)mode;
- (void)_consumePathsAndPredictions:(id)predictions emojiSearchMode:(BOOL)mode;
- (void)_processEvents;
- (void)_haltSessionTypingTimer:(id)timer event:(id)event;
- (void)loadWordBucketDictionaryIfNecessary;
- (void)loadEmojiBucketDictionaryIfNecessary;
- (id)lemmatizeWord:(id)word;
- (id)getWordBucketCategoryForWord:(id)word;
- (void)_metricWalk;
- (void)_mapTapsToEvents;
- (id)_insertEmojiSwitchEvents:(id)events;
- (id)_mapIDToLayout:(unsigned long long)layout;
- (void)_coalesceTaps;
- (id)eventsDescription;
- (id)eventsDescription:(BOOL)description;
- (id)privateEventsDescription;
- (double)totalTimeSpan;
- (double)totalTimeSpanFromLastTap;
- (void)processNewSessionStatsArray:(id)array;
- (BOOL)publishIfSessionStatsHasWordCountMoreThanThreshold:(id)threshold withSessionStartTime:(BOOL)time;
- (void)sessionDidEnd:(id)end aligned:(id)aligned;
- (void)handleTypingSession:(id)session;
- (void)_loadStatsFromDataStore;
- (id)_retrieveSavedSessionSampleArray;
- (void)_persistSavedSessionStatsArray;
- (void)removeSessionStatsWithNegativeDurationFromArray:(id)array ForTypingSession:(id)session;
@end

#endif /* TISKMetricCollector_h */
