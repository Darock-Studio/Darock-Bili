//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3301.4.1.0.0
//
#ifndef SiriCoreNetworkingAnalytics_h
#define SiriCoreNetworkingAnalytics_h
@import Foundation;

#include "SiriCoreNetEventMessage.h"

@class NSUUID;
@protocol OS_dispatch_queue;

@interface SiriCoreNetworkingAnalytics : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSUUID *_netId;
  NSUUID *_orchestratorRequestId;
  BOOL _isConnectionActive;
  BOOL _netIdAvailable;
  unsigned int _sequenceNumber;
  SiriCoreNetEventMessage *_httpHeaderEvent;
  SiriCoreNetEventMessage *_preparationSnapshotEvent;
  SiriCoreNetEventMessage *_debugPreparationSnapshotEvent;
  SiriCoreNetEventMessage *_readySnapshotEvent;
  SiriCoreNetEventMessage *_debugReadySnapshotEvent;
  SiriCoreNetEventMessage *_sessionConnectionSnapthotEvent;
  SiriCoreNetEventMessage *_debugSessionConnectionSnapthotEvent;
  SiriCoreNetEventMessage *_sessionConnectionFailedEvent;
  SiriCoreNetEventMessage *_peerConnectionFailedEvent;
  NSUUID *_netIdForRequestLink;
}

/* class methods */
+ (int)endpointTypeFromNumber:(id)number;
+ (id)endpointFromDictionary:(id)dictionary;
+ (id)endpointsFromArray:(id)array;
+ (int)pathTypeFromNumber:(id)number;
+ (id)pathInterfacesFromArray:(id)array;
+ (int)pathStatusFromNumber:(id)number;
+ (id)establishmentResolutionFromArray:(id)array;
+ (id)proxyConfigurationFromDictionary:(id)dictionary;
+ (int)handshakeProtocolFromString:(id)string;
+ (id)handShakeProtocolFromArray:(id)array;
+ (int)snapshotStateFromStringEvent:(id)event;
+ (int)tlsFromString:(id)string;
+ (int)connectionMethodFromString:(id)string;
+ (int)connectionTypeFromString:(id)string;
+ (id)networkInterfacesFromDictionary:(id)dictionary;
+ (id)sessionConnectionNetworkFromSiriCoreConnectionMetrics:(id)metrics;
+ (int)phyModeFromString:(id)string;
+ (id)debugSessionConnectionNetworkFromSiriCoreConnectionMetrics:(id)metrics;
+ (id)debugNetworkInterfacesFromSiriCoreConnectionMetrics:(id)metrics;
+ (id)pingInfoFromSiriCoreConnectionMetrics:(id)metrics;
+ (int)qualityFromString:(id)string;
+ (id)sessionConnectionQualityFromSiriCoreConnectionMetrics:(id)metrics;
+ (int)providerFromString:(id)string;
+ (int)connectionModeFromString:(id)string;
+ (int)sessionTypeFromString:(id)string;
+ (int)sessionStateFromString:(id)string;
+ (id)sessionConnectionFailedError:(id)error connectionMode:(id)mode sessionType:(id)type sessionState:(id)state dormant:(BOOL)dormant analysisInfo:(id)info;
+ (id)sharedSiriCoreNetworkingAnalytics;

/* instance methods */
- (id)init;
- (id)_init;
- (void)reset;
- (void)resetNetId;
- (void)setNetId:(id)id;
- (unsigned int)getSequenceNumber;
- (void)setIsConnectionActive:(BOOL)active;
- (void)setNetIdAvailable:(BOOL)available;
- (BOOL)isNetIdAvailable;
- (void)increaseSequenceNumber;
- (void)resetSequenceNumber;
- (void)setOrchestratorRequestId:(id)id;
- (id)orchestratorRequestId;
- (BOOL)emitLogDebug;
- (id)_createRequestLinkInfoFromUUID:(id)uuid component:(int)component;
- (id)_createSchemaClientEventFromUUID:(id)uuid;
- (void)_emitAllCachedMessagesFor:(id)for;
- (void)logRequestLinkBetweenOrchestratorAndNetworkComponent;
- (void)logSessionConnectionHttpHeaderCreated:(id)created;
- (void)logNetworkConnectionStatePreparationSnapshotCaptured:(id)captured;
- (void)logDebugNetworkConnectionStatePreparationSnapshotCaptured:(id)captured;
- (void)logNetworkConnectionStateReadySnapshotCaptured:(id)captured;
- (void)logDebugNetworkConnectionStateReadySnapshotCaptured:(id)captured;
- (void)logSessionConnectionSnapshotCaptured:(id)captured;
- (void)logDebugSessionConnectionSnapshotCaptured:(id)captured;
- (void)logSessionConnectionFailed:(id)failed;
- (void)logPeerConnectionFailed:(id)failed;
@end

#endif /* SiriCoreNetworkingAnalytics_h */
