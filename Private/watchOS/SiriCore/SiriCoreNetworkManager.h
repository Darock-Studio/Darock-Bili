//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3301.4.1.0.0
//
#ifndef SiriCoreNetworkManager_h
#define SiriCoreNetworkManager_h
@import Foundation;

#include "CoreTelephonyClientCarrierBundleDelegate-Protocol.h"
#include "CoreTelephonyClientDataDelegate-Protocol.h"
#include "CoreTelephonyClientSubscriberDelegate-Protocol.h"
#include "SiriCoreWiFiManagerClient.h"

@class BOOL *, CTServiceDescriptor, CoreTelephonyClient, NSHashTable, NSNumber, NSString;
@protocol OS_dispatch_queue, OS_nw_path_evaluator;

@interface SiriCoreNetworkManager : NSObject<CoreTelephonyClientCarrierBundleDelegate, CoreTelephonyClientDataDelegate, CoreTelephonyClientSubscriberDelegate> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSHashTable *_observers;
  NSObject<OS_nw_path_evaluator> *_pathEvaluator;
  int _pathStatus;
  BOOL _pathUsesCellular;
  SiriCoreWiFiManagerClient *_wiFiManagerClient;
  BOOL _hasSymptomsBasedInstantCellQuality;
  BOOL _symptomsBasedInstantCellQualityIsGood;
  BOOL _hasSymptomsBasedInstantWiFiQuality;
  BOOL _symptomsBasedInstantWiFiQualityIsGood;
  BOOL _hasSymptomsBasedHistoricalCellQuality;
  BOOL _symptomsBasedHistoricalCellQualityIsGood;
  BOOL _hasSymptomsBasedHistoricalWiFiQuality;
  BOOL _symptomsBasedHistoricalWiFiQualityIsGood;
  BOOL _lastFetchInProgress;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _ctLock;
  CoreTelephonyClient *_coreTelephonyClient;
  long long _lastDataSubscriptionSlot;
  CTServiceDescriptor *_dataServiceDescriptor;
  NSString *_subscriptionSlotOneStatus;
  NSString *_subscriptionSlotTwoStatus;
  double _lastSuccessfulSymptomsFetch;
  NSNumber *_lastSignalStrength;
  unsigned long long _subscriptionCount;
  NSString *_carrierName;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (void)_ifnameTypeForName:(char *)name isWiFi:(BOOL *)fi isCellular:(BOOL *)cellular;
+ (long long)connectionSubTypeForCellularInterface;
+ (void)getCarrierName:(id *)name signalStrength:(id *)strength subscriptionCount:(id *)count;
+ (id)connectionTypeForInterfaceName:(id)name isCellular:(BOOL)cellular;
+ (long long)connectionTypeForInterface:(id)interface;
+ (void)acquireDormancySuspendAssertion:(const void * *)assertion;
+ (void)releaseDormancySuspendAssertion:(void *)assertion;

/* instance methods */
- (id)_init;
- (void)dealloc;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (id)_wiFiManagerClient;
- (void)_pathUpdated:(id)updated;
- (void)startMonitoringNetworkForHost:(id)host;
- (void)_stopMonitoringNetwork;
- (void)stopMonitoringNetwork;
- (void)_getNetworkPerformanceFeed;
- (void)getNetworkPerformanceFeed;
- (long long)cellularNetworkQuality;
- (long long)wifiNetworkQuality;
- (long long)anyNetworkQuality;
- (void)getQualityReport:(id /* block */)report;
- (long long)_reportCellularInstantQuality;
- (long long)_reportCellularHistoricalQuality;
- (long long)_reportWiFiInstantQuality;
- (long long)_reportWiFiHistoricalQuality;
- (void)getSignalStrength:(id *)strength subscriptionCount:(unsigned long long *)count;
- (void)_getCarrierName:(id *)name;
- (long long)_getConnectionTechnologyForCellularInterface;
- (void)forceFastDormancy;
- (void)releaseWiFiAssertion;
- (void)acquireWiFiAssertion:(long long)assertion;
- (void)_dataSubscriptionContextChange:(id)change;
- (void)_dataServiceDescriptorUpdate;
- (void)_serviceSubscriptionInfoUpdate;
- (void)_signalStrengthUpdate;
- (void)_signalStrengthChange:(id)change;
- (void)preferredDataSimChanged:(id)changed;
- (void)carrierBundleChange:(id)change;
- (void)simStatusDidChange:(id)change status:(id)status;
- (void)signalStrengthChanged:(id)changed info:(id)info;
- (BOOL)_defaultBTLinkRecommendation;
- (BOOL)_defaultWiFiLinkRecommendation;
- (BOOL)_getConnectionSuccessRate:(id)rate hasMetric:(BOOL *)metric;
@end

#endif /* SiriCoreNetworkManager_h */
