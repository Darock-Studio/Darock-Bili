//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3301.4.1.0.0
//
#ifndef SiriCoreSiriBackgroundConnection_h
#define SiriCoreSiriBackgroundConnection_h
@import Foundation;

#include "SiriCoreConnectionProvider-Protocol.h"
#include "SiriCoreConnectionProviderDelegate-Protocol.h"
#include "SiriCoreDataCompressor.h"
#include "SiriCoreDataDecompressor.h"
#include "SiriCorePingInfo.h"
#include "SiriCoreSiriBackgroundConnectionDelegate-Protocol.h"
#include "SiriCoreSiriConnectionInfo.h"

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_data, OS_dispatch_queue, OS_dispatch_source;

@interface SiriCoreSiriBackgroundConnection : NSObject<SiriCoreConnectionProviderDelegate> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<SiriCoreConnectionProvider> *_connectionProvider;
  SiriCoreSiriConnectionInfo *_connectionInfo;
  NSObject<OS_dispatch_data> *_bufferedInputData;
  NSObject<OS_dispatch_data> *_bufferedProviderHeaderOutputData;
  NSObject<OS_dispatch_data> *_bufferedGeneralOutputData;
  NSObject<OS_dispatch_data> *_bufferedUncompressedData;
  SiriCoreDataDecompressor *_inputDecompressor;
  SiriCoreDataCompressor *_outputCompressor;
  struct __CFHTTPMessage * _httpResponseHeader;
  BOOL _isOpened;
  BOOL _isCanceled;
  BOOL _hasReportedError;
  NSMutableDictionary *_errorsForConnectionMethods;
  NSObject<OS_dispatch_source> *_aceHeaderTimerSource;
  unsigned long long _aceHeaderTimerFireCount;
  NSObject<OS_dispatch_source> *_pingTimerSource;
  unsigned int _currentPingIndex;
  SiriCorePingInfo *_pingInfo;
  unsigned long long _lastInputLength;
  void * _lastInputDataPointer;
  unsigned long long _inputLengthUnchangedCounter;
  unsigned long long _lastOutputLength;
  void * _lastOutputDataPointer;
  unsigned long long _outputLengthUnchangedCounter;
  unsigned int _currentBarrierIndex;
  NSMutableDictionary *_outstandingBarriers;
  long long _connectionMethod;
  NSObject<OS_dispatch_data> *_safetyNetBuffer;
  NSObject<OS_dispatch_queue> *_metricsQueue;
  double _firstStartTime;
  double _currentStartTime;
  double _currentOpenTime;
  double _firstByteReadTime;
  unsigned long long _startCount;
  unsigned long long _metricsCount;
  NSMutableArray *_outgoingCommandsWithSendCompletions;
  BOOL _primaryConnectionViable;
  BOOL _betterPathAvailable;
  long long _secondaryConnectionOpenState;
  NSObject<SiriCoreConnectionProvider> *_secondaryConnectionProvider;
  BOOL _dispatchedSnapshotMetrics;
  double _receivedDataTime;
}

@property (weak, nonatomic) NSObject<SiriCoreSiriBackgroundConnectionDelegate> *delegate;
@property (copy, nonatomic) NSString *peerType;
@property (copy, nonatomic) NSString *peerVersion;
@property (copy, nonatomic) NSString *productTypePrefix;
@property (retain, nonatomic) Class peerProviderClass;
@property (nonatomic) BOOL usesProxyConnection;
@property (nonatomic) BOOL deviceIsInWalkaboutExperimentGroup;
@property (nonatomic) BOOL siriConnectionUsesPeerManagedSync;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithQueue:(id)queue;
- (id)init;
- (void)dealloc;
- (BOOL)_usingPOP;
- (BOOL)_usingFlorence;
- (BOOL)_usingPOPOnPeer;
- (BOOL)_usingPeer;
- (BOOL)_usingNetwork;
- (long long)_nextConnectionMethod;
- (void)startWithConnectionInfo:(id)info;
- (void)_startWithConnectionInfo:(id)info proposedFallbackMethod:(long long)method allowFallbackToNewMethod:(BOOL)method;
- (void)_setNetworkProvider:(id)provider;
- (Class)_providerClass;
- (id)_getInitialPayloadWithBufferedLength:(unsigned long long *)length forceReconnect:(BOOL)reconnect;
- (void)_updateBuffersForInitialPayload:(id)payload bufferedLength:(unsigned long long)length forceReconnect:(BOOL)reconnect;
- (void)_startNetworkProviderWithInfo:(id)info;
- (void)cancel;
- (void)updateActiveBackgroundConnectionWithSecondary;
- (void)_startSecondaryConnection;
- (void)_cancelSecondaryConnection;
- (void)_forceTriggerRetry;
- (id)_httpHeaderData;
- (id)_aceHeaderData;
- (void)_initializeBufferedGeneralOutputDataWithInitialPayload:(BOOL)payload;
- (void)_closeConnectionAndPrepareForReconnect:(BOOL)reconnect;
- (void)_closeConnection;
- (void)_didEncounterError:(id)error;
- (id)_bestErrorBetweenError:(id)error peerError:(id)error;
- (BOOL)_hasBufferedDataOrOutstandingPings;
- (BOOL)_shouldTrySameConnectionMethodForMethod:(long long)method error:(id)error;
- (void)_fallBackToNextConnectionMethod:(long long)method fromError:(id)error afterDelay:(double)delay;
- (void)_fallBackToNextConnectionMethodWithError:(id)error orElse:(id /* block */)else;
- (BOOL)_canFallBackFromError:(id)error;
- (void)_getCellularMetrics:(id)metrics;
- (long long)_normalizeSNR:(long long)snr;
- (void)_getWifiMetrics:(id)metrics;
- (BOOL)_tcpInfoIndicatesPoorLinkQuality;
- (BOOL)_wifiOrCellularMayBeBetterThanCurrentStream;
- (void)_scheduleAceHeaderTimeoutTimerWithInterval:(double)interval;
- (void)_aceHeaderTimeoutFired:(id)fired afterTimeout:(double)timeout;
- (void)setSendPings:(BOOL)pings;
- (void)_resumePingTimer;
- (void)_pingTimerFired;
- (long long)_checkForProgressOnReadingData;
- (long long)_checkPings;
- (void)probeConnection;
- (void)barrier:(id /* block */)barrier;
- (void)_handleBarrierReply:(unsigned int)reply;
- (void)_cancelOutstandingBarriers;
- (void)startHeartBeat;
- (void)stopHeartBeat;
- (void)connectionProvider:(id)provider receivedError:(id)error;
- (void)connectionProvider:(id)provider receivedViabilityChangeNotification:(BOOL)notification;
- (void)connectionProviderReceivedBetterRouteNotification:(id)notification;
- (BOOL)_hasReadHTTPHeader;
- (BOOL)_consumeHTTPHeaderWithData:(id)data bytesRead:(unsigned long long *)read error:(id *)error;
- (BOOL)_hasReadACEHeader;
- (id)_connectionType;
- (BOOL)_consumeAceHeaderWithData:(id)data bytesRead:(unsigned long long *)read error:(id *)error;
- (BOOL)_consumeAceDataWithData:(id)data bytesRead:(unsigned long long *)read error:(id *)error;
- (void)_connectionHasBytesAvailable:(id)available;
- (void)_networkProviderDidOpen;
- (id)_headerDataForURL:(id)url aceHost:(id)host languageCode:(id)code syncAssistantId:(id)id;
- (void)_tryToWriteBufferedOutputData;
- (void)_bufferGeneralData:(id)data;
- (void)_sendGeneralData:(id)data;
- (void)_prepareProviderHeaderWithForceReconnect:(BOOL)reconnect;
- (void)sendCommand:(id)command moreComing:(BOOL)coming errorHandler:(id /* block */)handler;
- (void)sendCommands:(id)commands errorHandler:(id /* block */)handler;
- (BOOL)_sendAcePingWithId:(unsigned int)id error:(id *)error;
- (BOOL)_sendAcePongWithId:(unsigned int)id error:(id *)error;
- (void)_setupReadHandlerOnProvider;
- (BOOL)_tryReadingHTTPHeaderData:(id)data withMessage:(struct __CFHTTPMessage *)message bytesRead:(unsigned long long *)read error:(id *)error;
- (BOOL)_tryParsingHTTPHeaderData:(id)data partialMessage:(struct __CFHTTPMessage *)message statusCode:(long long *)code bytesRead:(unsigned long long *)read error:(id *)error;
- (id)_tryReadingAceHeaderFromData:(id)data bytesParsed:(unsigned long long *)parsed error:(id *)error;
- (BOOL)_tryReadingParsedDataFromBytes:(const void *)bytes length:(unsigned long long)length packet:(struct { unsigned char x0; unsigned int x1; } *)packet object:(id *)object bytesParsed:(unsigned long long *)parsed error:(id *)error;
- (void)_handlePacket:(struct { unsigned char x0; unsigned int x1; } *)packet;
- (void)_handleAceNop;
- (void)_handleAceObject:(id)object;
- (void)_handleAcePing:(unsigned int)ping;
- (void)_handleAcePong:(unsigned int)pong;
- (void)_handleAceEnd;
- (id)analysisInfo;
- (id)getConnectionMethodUsed;
- (id)_connectionMethodDescription;
- (void)getConnectionMetrics:(id)metrics withCompletion:(id /* block */)completion;
@end

#endif /* SiriCoreSiriBackgroundConnection_h */
