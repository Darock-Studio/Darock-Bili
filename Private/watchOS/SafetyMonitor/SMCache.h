//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 895.0.11.0.2
//
#ifndef SMCache_h
#define SMCache_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "SMDeviceStatus.h"
#include "SMLocation.h"

@class GEOLocationShifter, NSData, NSSet, NSUUID;

@interface SMCache : NSObject<NSSecureCoding> {
  /* instance variables */
  GEOLocationShifter *_shifter;
}

@property (retain, nonatomic) SMDeviceStatus *deviceStatus;
@property (retain, nonatomic) NSSet *locationsDuringSession;
@property (retain, nonatomic) SMLocation *unlockLocation;
@property (retain, nonatomic) SMLocation *lockLocation;
@property (retain, nonatomic) SMLocation *mostRecentLocation;
@property (retain, nonatomic) SMLocation *startingLocation;
@property (retain, nonatomic) SMLocation *offWristLocation;
@property (retain, nonatomic) SMLocation *parkedCarLocation;
@property (retain, nonatomic) NSData *destinationMapItem;
@property (readonly, copy, nonatomic) NSUUID *identifier;

/* class methods */
+ (void)logNoCacheDataForSessionID:(id)id role:(id)role deviceType:(id)type transaction:(id)transaction;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithIdentifier:(id)identifier deviceStatus:(id)status locationsDuringSession:(id)session unlockLocation:(id)location lockLocation:(id)location mostRecentLocation:(id)location startingLocation:(id)location offWristLocation:(id)location parkedCarLocation:(id)location destinationMapItem:(id)item;
- (id)initWithDictionary:(id)dictionary;
- (id)outputToDictionary;
- (unsigned long long)identifierHash;
- (void)logCacheForSessionID:(id)id role:(id)role deviceType:(id)type transaction:(id)transaction hashString:(id)string;
- (BOOL)shiftRequiredForLocation:(id)location;
- (void)shiftLocation:(id)location queue:(id)queue withHandler:(id /* block */)handler;
- (void)shiftLocationsOnQueue:(id)queue handler:(id /* block */)handler;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)description;
@end

#endif /* SMCache_h */
