//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 895.0.11.0.2
//
#ifndef SMSafetyMonitorManager_h
#define SMSafetyMonitorManager_h
@import Foundation;

#include "SMEligibilityProtocol-Protocol.h"
#include "SMFrameworkProtocol-Protocol.h"
#include "SMHeartbeatTimer.h"
#include "SMInitiatorCacheProtocol-Protocol.h"
#include "SMInitiatorDestinationBoundSessionProtocol-Protocol.h"
#include "SMInitiatorProtocol-Protocol.h"
#include "SMInitiatorSafetyCacheMonitoringProtocol-Protocol.h"
#include "SMInitiatorSessionConfigurationProtocol-Protocol.h"
#include "SMInitiatorSessionMonitorProtocol-Protocol.h"
#include "SMMadridMessengerProtocol-Protocol.h"
#include "SMReceiverMonitorProtocol-Protocol.h"
#include "SMReceiverProtocol-Protocol.h"
#include "SMSessionStoreProtocol-Protocol.h"
#include "SMSuggestionsProtocol-Protocol.h"
#include "SMSuggestionsStoreProtocol-Protocol.h"
#include "SMUserNotificationProtocol-Protocol.h"

@class NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface SMSafetyMonitorManager : NSObject<SMFrameworkProtocol, SMInitiatorProtocol, SMInitiatorSafetyCacheMonitoringProtocol, SMInitiatorSessionConfigurationProtocol, SMInitiatorSessionMonitorProtocol, SMEligibilityProtocol, SMSuggestionsProtocol, SMInitiatorCacheProtocol, SMSuggestionsStoreProtocol, SMMadridMessengerProtocol, SMReceiverProtocol, SMReceiverMonitorProtocol, SMSessionStoreProtocol, SMUserNotificationProtocol, SMInitiatorDestinationBoundSessionProtocol>

@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (retain, nonatomic) NSString *restorationIdentifier;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) SMHeartbeatTimer *heartbeatTimer;
@property (copy, nonatomic) id /* block */ initiatorSafetyCacheHandler;
@property (copy, nonatomic) id /* block */ sessionStateHandler;
@property (copy, nonatomic) id /* block */ receiverSessionStatusHandler;
@property (copy, nonatomic) id /* block */ receiverSafetyCacheHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)defaultManager;

/* instance methods */
- (id)initWithRestorationIdentifier:(id)identifier;
- (id)init;
- (void)dealloc;
- (void)_createConnection;
- (void)_setUpMonitoring;
- (void)createConnection;
- (id)_getConnection;
- (void)handleDaemonStart;
- (id)_proxyForServicingSelector:(SEL)selector withErrorHandler:(id /* block */)handler;
- (id)_proxyForServicingSelector:(SEL)selector asynchronous:(BOOL)asynchronous withErrorHandler:(id /* block */)handler;
- (id)createSMProxyErrorWithSelector:(SEL)selector error:(id)error;
- (void)launchTaskWithSelector:(SEL)selector remainingAttempts:(unsigned long long)attempts proxyErrorHandler:(id /* block */)handler taskBlock:(id /* block */)block;
- (void)initializeSessionWithHandle:(id)handle handler:(id /* block */)handler;
- (void)cancelInitializationWithHandler:(id /* block */)handler;
- (void)cancelInitializationForSessionID:(id)id handler:(id /* block */)handler;
- (void)endSessionForSessionID:(id)id reason:(unsigned long long)reason handler:(id /* block */)handler;
- (void)modifySessionWithConfiguration:(id)configuration handler:(id /* block */)handler;
- (void)sendSafetyCacheForSessionID:(id)id handler:(id /* block */)handler;
- (void)startSessionWithConfiguration:(id)configuration handler:(id /* block */)handler;
- (void)respondToTriggerPromptForSessionID:(id)id response:(long long)response handler:(id /* block */)handler;
- (void)promptDestinationAnomalyVerificationWithContext:(id)context handler:(id /* block */)handler;
- (void)promptRoundTripAnomalyVerificationWithContext:(id)context handler:(id /* block */)handler;
- (void)promptTimerEndedVerificationWithContext:(id)context handler:(id /* block */)handler;
- (void)promptSafeArrivalWithContext:(id)context handler:(id /* block */)handler;
- (void)sendHeartbeatForSessionID:(id)id handler:(id /* block */)handler;
- (void)_startHeartbeatForSessionID:(id)id;
- (void)_stopHeartbeat;
- (void)processStateForHeartbeat:(id)heartbeat forActiveDevice:(BOOL)device withError:(id)error;
- (void)fetchInitiatorSafetyCacheForSessionID:(id)id completion:(id /* block */)completion;
- (void)startMonitoringSessionStateWithHandler:(id /* block */)handler;
- (void)stopMonitoringSessionStateWithHandler:(id /* block */)handler;
- (void)fetchCurrentSessionStateWithHandler:(id /* block */)handler;
- (void)onSessionStateChanged:(id)changed forActiveDevice:(BOOL)device withError:(id)error;
- (void)fetchSuggestionsWithOptions:(id)options handler:(id /* block */)handler;
- (void)fetchSuggestionsCountWithOptions:(id)options handler:(id /* block */)handler;
- (void)clearSuggestionsWithHandler:(id /* block */)handler;
- (void)storeSuggestions:(id)suggestions handler:(id /* block */)handler;
- (void)storeSessionManagerStates:(id)states handler:(id /* block */)handler;
- (void)storeSessionMonitorStates:(id)states handler:(id /* block */)handler;
- (void)storeSessionConfigurations:(id)configurations handler:(id /* block */)handler;
- (void)storeTriggerDestinationStates:(id)states handler:(id /* block */)handler;
- (void)fetchSessionManagerStatesWithOptions:(id)options handler:(id /* block */)handler;
- (void)fetchMostRecentSessionMonitorStateWithSessionID:(id)id handler:(id /* block */)handler;
- (void)fetchSessionConfigurationsWithOptions:(id)options handler:(id /* block */)handler;
- (void)clearSessionsWithHandler:(id /* block */)handler;
- (void)clearSessionMonitorStatesWithHandler:(id /* block */)handler;
- (void)clearTriggerDestinationStatesWithHandler:(id /* block */)handler;
- (void)fetchTriggerDestinationStateWithSessionID:(id)id handler:(id /* block */)handler;
- (void)runProactiveSuggestionsEngineWithContext:(id)context shouldStoreSuggestions:(BOOL)suggestions handler:(id /* block */)handler;
- (void)fetchSuggestedSessionConfigurationWithHandler:(id /* block */)handler;
- (void)launchSessionInitiationUIWithConfiguration:(id)configuration handler:(id /* block */)handler;
- (void)fetchMostLikelyReceiverHandlesWithHandler:(id /* block */)handler;
- (void)fetchMostLikelySessionDestinationsWithHandler:(id /* block */)handler;
- (void)showSuggestionsDetectionUIWithSuggestion:(id)suggestion handler:(id /* block */)handler;
- (void)shouldShowKeyboardSuggestionsForInitiator:(id)initiator receiver:(id)receiver handler:(id /* block */)handler;
- (void)shouldShowTipKitSuggestionsForInitiator:(id)initiator receiver:(id)receiver handler:(id /* block */)handler;
- (void)fetchShouldShowProactiveSuggestionsWithHandler:(id /* block */)handler;
- (void)sendIDSMessage:(id)idsmessage toHandle:(id)handle completion:(id /* block */)completion;
- (void)sendIDSMessageToMyDevices:(id)devices completion:(id /* block */)completion;
- (void)sendIDSMessageToPairedDevice:(id)device completion:(id /* block */)completion;
- (void)sendIDSMessageToMyNearbyDevices:(id)devices completion:(id /* block */)completion;
- (void)sendMadridMessage:(id)message associatedGUID:(id)guid toHandle:(id)handle summaryText:(id)text completion:(id /* block */)completion;
- (void)scheduleMadridMessageSendForMessage:(id)message messageGUID:(id)guid associatedGUID:(id)guid sendDate:(id)date toHandle:(id)handle summaryText:(id)text completion:(id /* block */)completion;
- (void)cancelMadridMessageSendForMessageGUID:(id)guid toHandle:(id)handle completion:(id /* block */)completion;
- (void)iMessageSendFor:(id)for guid:(id)guid successful:(BOOL)successful withError:(id)error;
- (void)iMessageScheduledSendScheduledFor:(id)for guid:(id)guid successful:(BOOL)successful withError:(id)error;
- (void)iMessageScheduledSendCancelFor:(id)for successful:(BOOL)successful withError:(id)error;
- (void)iMessageScheduledSendTriggeredFor:(id)for;
- (void)iMessageReceived:(id)received fromHandle:(id)handle fromMe:(BOOL)me;
- (void)iMessageDeletedFor:(id)for;
- (void)iMessageConversationDeletedFor:(id)for;
- (void)fetchSessionReceiptForSessionID:(id)id completion:(id /* block */)completion;
- (void)startMonitoringInitiatorSafetyCacheWithHandler:(id /* block */)handler;
- (void)stopMonitoringInitiatorSafetyCacheWithCompletion:(id /* block */)completion;
- (void)onInitiatorSafetyCacheChangeForSessionID:(id)id phoneCache:(id)cache watchCache:(id)cache cacheExpiryDate:(id)date cacheReleaseDate:(id)date;
- (void)fetchAllReceiverSessionStatusWithCompletion:(id /* block */)completion;
- (void)fetchReceiverSessionStatusForSessionID:(id)id completion:(id /* block */)completion;
- (void)startMonitoringReceiverSessionStatusWithHandler:(id /* block */)handler;
- (void)stopMonitoringReceiverSessionStatusWithCompletion:(id /* block */)completion;
- (void)onReceiverSessionStatusChangeForSessionID:(id)id sessionStatus:(id)status;
- (void)userRequestedCacheDownloadForSessionID:(id)id completion:(id /* block */)completion;
- (void)fetchReceiverSafetyCacheForSessionID:(id)id completion:(id /* block */)completion;
- (void)startMonitoringReceiverSafetyCacheWithHandler:(id /* block */)handler;
- (void)stopMonitoringReceiverSafetyCacheWithCompletion:(id /* block */)completion;
- (void)onReceiverSafetyCacheChangeForSessionID:(id)id phoneCache:(id)cache watchCache:(id)cache;
- (void)detailsViewOpenedForSessionID:(id)id;
- (void)checkInitiatorEligibilityWithHandler:(id /* block */)handler;
- (void)checkEligibilityOfDestination:(id)destination completionHandler:(id /* block */)handler;
- (void)calculateDistanceToDestination:(id)destination completionHandler:(id /* block */)handler;
- (void)estimateEtaToDestination:(id)destination transportType:(unsigned long long)type completionHandler:(id /* block */)handler;
- (long long)prepareUserInfoForNotificationContent:(id)content initiatorHandle:(id)handle messageUrl:(id)url;
- (void)respondToNotificationWithIdentifier:(id)identifier sessionIdentifier:(id)identifier actionIdentifier:(id)identifier handler:(id /* block */)handler;
- (BOOL)shouldDropMessage:(id)message from:(id)from fromMe:(BOOL)me;
- (double)requestTimeFromTimed;
- (void)submitInitializationAnalyticsEventWithError:(id)error duration:(double)duration;
@end

#endif /* SMSafetyMonitorManager_h */
