//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 217.20.3.0.0
//
#ifndef ANPlaybackSessionServiceListener_h
#define ANPlaybackSessionServiceListener_h
@import Foundation;

#include "ANAnnouncementCoordinatorDelegate-Protocol.h"
#include "ANLocalPlaybackSessionServiceInterface-Protocol.h"
#include "ANRemotePlaybackSessionServiceInterface-Protocol.h"
#include "ANRemotePlaybackStatusProvider-Protocol.h"
#include "NSXPCListenerDelegate-Protocol.h"

@class NSMutableSet, NSString, NSXPCListener;
@protocol OS_dispatch_queue;

@interface ANPlaybackSessionServiceListener : NSObject<ANLocalPlaybackSessionServiceInterface, ANRemotePlaybackSessionServiceInterface, NSXPCListenerDelegate, ANAnnouncementCoordinatorDelegate, ANRemotePlaybackStatusProvider>

@property (readonly, nonatomic) NSXPCListener *localPlaybackSessionListener;
@property (readonly, nonatomic) NSXPCListener *remotePlaybackSessionListener;
@property (readonly, nonatomic) BOOL remoteSessionsActive;
@property (retain) NSMutableSet *remotePlaybackClients;
@property (retain) NSMutableSet *localPlaybackClients;
@property (readonly) NSObject<OS_dispatch_queue> *playbackClientsSerialQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)cleanForExit;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)_removeConnection:(id)connection;
- (id)_clientForConnection:(id)connection;
- (BOOL)_endSessionForConnection:(id)connection;
- (void)_setTimersActive:(BOOL)active forEndPointID:(id)id;
- (void)startSessionForGroupID:(id)id reply:(id /* block */)reply;
- (void)endSessionWithReply:(id /* block */)reply;
- (void)setPlaybackStartedForAnnouncement:(id)announcement;
- (void)setPlaybackStoppedForAnnouncement:(id)announcement;
- (void)sendPlaybackCommand:(id)command forEndpointID:(id)id completionHandler:(id /* block */)handler;
- (void)resumeWithEndpointID:(id)id completionHandler:(id /* block */)handler;
- (void)lastPlayedAnnouncementInfoForEndpointID:(id)id completionHandler:(id /* block */)handler;
- (void)playbackStateForEndpointID:(id)id completionHandler:(id /* block */)handler;
- (BOOL)isExternalPlaybackActiveForEndpointID:(id)id;
- (void)coordinator:(id)coordinator didUpdateAnnouncements:(id)announcements forGroupID:(id)id forEndpointID:(id)id;
- (void)coordinator:(id)coordinator didReceiveAnnouncement:(id)announcement forGroupID:(id)id forEndpointID:(id)id;
- (void)coordinator:(id)coordinator didStartPlayingAnnouncementsAtMachAbsoluteTime:(unsigned long long)time forEndpointID:(id)id;
- (void)coordinator:(id)coordinator didFinishPlayingAnnouncementsForEndpointID:(id)id;
- (void)coordinator:(id)coordinator didUpdatePlaybackState:(unsigned long long)state forEndpointID:(id)id;
@end

#endif /* ANPlaybackSessionServiceListener_h */
