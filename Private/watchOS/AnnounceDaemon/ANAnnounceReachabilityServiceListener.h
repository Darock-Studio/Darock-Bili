//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 217.20.3.0.0
//
#ifndef ANAnnounceReachabilityServiceListener_h
#define ANAnnounceReachabilityServiceListener_h
@import Foundation;

#include "ANAnnounceReachabilityManager.h"
#include "ANAnnounceReachabilityManagerDelegate-Protocol.h"
#include "ANAnnounceReachabilityServiceInterface-Protocol.h"
#include "NSXPCListenerDelegate-Protocol.h"

@class NSMutableSet, NSString, NSXPCListener;

@interface ANAnnounceReachabilityServiceListener : NSObject<ANAnnounceReachabilityServiceInterface, ANAnnounceReachabilityManagerDelegate, NSXPCListenerDelegate>

@property (readonly, nonatomic) NSXPCListener *listener;
@property (retain, nonatomic) ANAnnounceReachabilityManager *reachabilityManager;
@property (retain) NSMutableSet *connections;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)cleanForExit;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)resumeWithCompletionHandler:(id /* block */)handler;
- (void)announceReachabilityForHomeName:(id)name reply:(id /* block */)reply;
- (void)announceReachabilityForRoomName:(id)name inHomeName:(id)name reply:(id /* block */)reply;
- (void)announceReachabilityForHomeUUID:(id)uuid reply:(id /* block */)reply;
- (void)announceReachabilityForRoomUUID:(id)uuid inHomeUUID:(id)uuid reply:(id /* block */)reply;
- (void)_addConnection:(id)connection;
- (void)_removeConnection:(id)connection;
- (void)_sendCurrentReachabilityToConnection:(id)connection;
- (void)reachabilityLevel:(unsigned long long)level didChangeForHome:(id)home;
- (void)reachabilityLevel:(unsigned long long)level didChangeForRoom:(id)room inHome:(id)home;
@end

#endif /* ANAnnounceReachabilityServiceListener_h */
