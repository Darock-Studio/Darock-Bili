//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 217.20.3.0.0
//
#ifndef ANMessenger_h
#define ANMessenger_h
@import Foundation;

#include "ANConnectionDelegate-Protocol.h"
#include "ANIDSConnectionProvider-Protocol.h"
#include "ANMessengerDelegate-Protocol.h"
#include "ANRapportConnectionProvider-Protocol.h"

@class ANParticipant, NSString;
@protocol OS_os_log;

@interface ANMessenger : NSObject<ANConnectionDelegate>

@property (readonly, nonatomic) NSObject<ANRapportConnectionProvider> *rapportConnection;
@property (readonly, nonatomic) NSObject<ANIDSConnectionProvider> *idsConnection;
@property (readonly, nonatomic) NSObject<OS_os_log> *log;
@property (weak, nonatomic) NSObject<ANMessengerDelegate> *delegate;
@property (readonly, nonatomic) ANParticipant *localParticipant;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)performBasicValidationForAnnouncement:(id)announcement type:(unsigned long long)type;
+ (id)validateAnnouncerInAnnouncement:(id)announcement home:(id)home;
+ (id)performIDSValidationForAnnouncement:(id)announcement withSenderContext:(id)context;
+ (id)performRapportValidationForAnnouncement:(id)announcement withSenderContext:(id)context;
+ (id)performPreflightChecksForSendingContent:(id)content toHome:(id)home rooms:(id)rooms zones:(id)zones;
+ (id)_performPreflightChecksForSendingContent:(id)content toHome:(id)home;
+ (id)_performPreflightChecksForSendingToRooms:(id)rooms zones:(id)zones;
+ (id)createAnnouncementWithRequest:(id)request forLocation:(id)location inHome:(id)home isReply:(BOOL)reply error:(id *)error;
+ (id)announcementForDevice:(id)device inHome:(id)home fromAnnouncement:(id)announcement;
+ (id)announcementForAccessory:(id)accessory inHome:(id)home fromAnnouncement:(id)announcement;
+ (id)announcementForUser:(id)user inHome:(id)home fromAnnouncement:(id)announcement;
+ (id)locationForHome:(id)home rooms:(id)rooms zones:(id)zones idsService:(id)service;
+ (id)locationForReplyToAnnouncement:(id)announcement home:(id)home idsService:(id)service;
+ (void)purgeTemporaryFiles;
+ (BOOL)_isAnnouncerAdminInAnnouncement:(id)announcement home:(id)home;
+ (void)_setIdentifiersForIDSService:(id)idsservice inLocation:(id)location home:(id)home;

/* instance methods */
- (id)init;
- (id)initWithIDSConnection:(id)idsconnection rapportConnection:(id)connection;
- (void)cleanForExit;
- (void)sendRequest:(id)request sentHandler:(id /* block */)handler;
- (void)sendAnnouncement:(id)announcement sentHandler:(id /* block */)handler;
- (void)sendReply:(id)reply forAnnouncement:(id)announcement completion:(id /* block */)completion;
- (void)broadcastReply:(id)reply forAnnouncement:(id)announcement completion:(id /* block */)completion;
- (void)forwardAnnouncementToCompanion:(id)companion;
- (void)mockAnnouncement:(id)announcement playbackDeadline:(id)deadline sentHandler:(id /* block */)handler;
- (void)_relayAnnouncementThroughHomePod:(id)pod inHome:(id)home rooms:(id)rooms sentHandler:(id /* block */)handler;
- (double)_calculateAnnouncementDeadline:(id)deadline;
- (void)_fulfillRelayRequest:(id)request withSenderContext:(id)context sentHandler:(id /* block */)handler;
- (void)_forwardRelayRequest:(id)request withSenderContext:(id)context sentHandler:(id /* block */)handler;
- (void)_sendAnnouncement:(id)announcement toDestination:(id)destination sentHandler:(id /* block */)handler;
- (BOOL)_willTargetReachableDevicesForAnnouncement:(id)announcement inDestination:(id)destination;
- (id)getScanningDeviceCandidates;
- (void)_logDebugInfoForHome:(id)home;
- (void)connection:(id)connection didReceiveMessage:(id)message fromSender:(id)sender senderContext:(id)context handler:(id /* block */)handler;
- (void)connection:(id)connection failedDeliveryForMessage:(id)message withError:(id)error;
- (id)connectionDidReceiveRequestForHomeLocationStatus:(id)status;
@end

#endif /* ANMessenger_h */
