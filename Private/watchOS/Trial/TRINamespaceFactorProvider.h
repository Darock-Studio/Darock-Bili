//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 396.4.0.0.0
//
#ifndef TRINamespaceFactorProvider_h
#define TRINamespaceFactorProvider_h
@import Foundation;

#include "TRIFBFastFactorLevels.h"
#include "TRIFactorLevelCaching-Protocol.h"
#include "TRINamespaceFactorProviding-Protocol.h"
#include "TRIPaths-Protocol.h"
#include "TRIReferenceManagedDirReaderLock.h"

@class NSCache, NSMutableDictionary, NSString;

@interface TRINamespaceFactorProvider : NSObject<TRINamespaceFactorProviding> {
  /* instance variables */
  NSString *_treatmentId;
  NSObject<TRIFactorLevelCaching> *_factorLevels;
  TRIReferenceManagedDirReaderLock *_factorDirectoryLock;
  NSObject<TRIPaths> *_paths;
  NSCache *_factorLevelCache;
  NSMutableDictionary *_warmupPersistentFactorLevelCache;
  BOOL _isFBFilePresent;
  BOOL _isFBReadEnabled;
  BOOL _isFBWriteEnabled;
  TRIFBFastFactorLevels *_fastFactorLevels;
  NSString *_referencePath;
}

@property (readonly, nonatomic) NSString *namespaceName;
@property (readonly, nonatomic) unsigned int namespaceCompatibilityVersion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)factorProviderWithNamespaceName:(id)name paths:(id)paths treatmentLayer:(unsigned long long)layer faultOnMissingFactors:(BOOL)factors shouldLockFactorDirectory:(BOOL)directory;
+ (id)factorProviderWithNamespaceDescriptor:(id)descriptor paths:(id)paths faultOnMissingFactors:(BOOL)factors shouldLockFactorDirectory:(BOOL)directory;
+ (id)_maAutoAssetReferencedInDir:(id)dir byFactorName:(id)name;
+ (id)populateMAPathsForFactorLevels:(id)levels loadedFromParentDir:(id)dir;
+ (id)factorLevelsWithTreatmentData:(id)data referencePath:(id)path filteredByNamespaceName:(id)name outTreatmentId:(id *)id error:(id *)error;
+ (id)_assetFilenameForFactor:(id)factor;
+ (id)pathForFactor:(id)factor directory:(id)directory;

/* instance methods */
- (id)overlayLevelsFromFactorProvider:(id)provider;
- (id)initWithNamespaceName:(id)name treatmentData:(id)data namespaceCompatibilityVersion:(unsigned int)version paths:(id)paths referencePath:(id)path isFlatbufferStorage:(BOOL)storage factorDirectoryLock:(id)lock error:(id *)error;
- (id)initWithNamespaceName:(id)name namespaceCompatibilityVersion:(unsigned int)version paths:(id)paths referencePath:(id)path factorLevels:(id)levels fastFactorLevels:(id)levels treatmentId:(id)id factorDirectoryLock:(id)lock;
- (void)setCacheSizeForFlatbuffers:(int)flatbuffers;
- (id)experimentId;
- (int)deploymentId;
- (id)treatmentId;
- (id)rolloutId;
- (id)factorLevels;
- (id)levelForFactor:(id)factor;
- (BOOL)overwriteItemAtPath:(id)path withItemAtPath:(id)path error:(id *)error;
- (id)_copyAssetsToDirectory:(id)directory;
- (BOOL)saveToPath:(id)path copyAssets:(BOOL)assets;
- (id)_readAllFactorLevelsFromStorage;
- (void)cacheFactorLevels;
- (unsigned int)namespaceId;
- (void)dispose;
@end

#endif /* TRINamespaceFactorProvider_h */
