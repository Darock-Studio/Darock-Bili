//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7617.1.17.12.4
//
#ifndef _SSBDatabaseStatus_h
#define _SSBDatabaseStatus_h
@import Foundation;

@protocol {DatabaseStatus="m_databases"{vector<SafeBrowsing::DatabaseStatus::Database, std::allocator<SafeBrowsing::DatabaseStatus::Database>>="__begin_"^{Database}"__end_"^{Database}"__end_cap_"{__compressed_pair<SafeBrowsing::DatabaseStatus::Database *, std::allocator<SafeBrowsing::DatabaseStatus::Database>>="__value_"^{Database}}}};

@interface _SSBDatabaseStatus : NSObject {
  /* instance variables */
  struct DatabaseStatus { struct vector<SafeBrowsing::DatabaseStatus::Database, std::allocator<SafeBrowsing::DatabaseStatus::Database>> { struct Database *__begin_; struct Database *__end_; struct __compressed_pair<SafeBrowsing::DatabaseStatus::Database *, std::allocator<SafeBrowsing::DatabaseStatus::Database>> { struct Database *__value_; } __end_cap_; } m_databases; } _databaseStatus;
}

@property (readonly, nonatomic) unsigned long long databaseCount;

/* instance methods */
- (id)initWithDatabaseStatus:(struct DatabaseStatus { struct vector<SafeBrowsing::DatabaseStatus::Database, std::allocator<SafeBrowsing::DatabaseStatus::Database>> { struct Database * x0; struct Database * x1; struct __compressed_pair<SafeBrowsing::DatabaseStatus::Database *, std::allocator<SafeBrowsing::DatabaseStatus::Database>> { struct Database * x0; } x2; } x0; })status;
- (id)nameOfDatabaseAtIndex:(unsigned long long)index;
- (unsigned long long)sizeOfDatabaseAtIndex:(unsigned long long)index;
- (unsigned int)hashCountOfDatabaseAtIndex:(unsigned long long)index;
- (id)lastUpdateTimeOfDatabaseAtIndex:(unsigned long long)index;
- (id)nextPollingTimeOfDatabaseAtIndex:(unsigned long long)index;
@end

#endif /* _SSBDatabaseStatus_h */
