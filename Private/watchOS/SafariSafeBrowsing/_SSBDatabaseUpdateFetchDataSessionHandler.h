//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7617.1.17.12.4
//
#ifndef _SSBDatabaseUpdateFetchDataSessionHandler_h
#define _SSBDatabaseUpdateFetchDataSessionHandler_h
@import Foundation;

#include "NSURLSessionDataDelegate-Protocol.h"

@class NSError, NSString;
@protocol {shared_ptr<ByteProvider>="__ptr_"^{ByteProvider}"__cntrl_"^{__shared_weak_count}}, {unique_ptr<Backend::Google::FetchThreatListUpdatesResponseParser, std::default_delete<Backend::Google::FetchThreatListUpdatesResponseParser>>="__ptr_"{__compressed_pair<Backend::Google::FetchThreatListUpdatesResponseParser *, std::default_delete<Backend::Google::FetchThreatListUpdatesResponseParser>>="__value_"^{FetchThreatListUpdatesResponseParser}}};

@interface _SSBDatabaseUpdateFetchDataSessionHandler : NSObject<NSURLSessionDataDelegate> {
  /* instance variables */
  struct unique_ptr<Backend::Google::FetchThreatListUpdatesResponseParser, std::default_delete<Backend::Google::FetchThreatListUpdatesResponseParser>> { struct __compressed_pair<Backend::Google::FetchThreatListUpdatesResponseParser *, std::default_delete<Backend::Google::FetchThreatListUpdatesResponseParser>> { struct FetchThreatListUpdatesResponseParser *__value_; } __ptr_; } _parser;
  struct shared_ptr<ByteProvider> { struct ByteProvider *__ptr_; struct __shared_weak_count *__cntrl_; } _byteProvider;
  unsigned long long _receivedBytes;
  NSError *_error;
  int _provider;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithCompletionHandler:(void *)handler provider:(int)provider;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithError:(id)error;
@end

#endif /* _SSBDatabaseUpdateFetchDataSessionHandler_h */
