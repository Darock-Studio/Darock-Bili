//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 651.5.0.0.0
//
#ifndef SWWakingTimer_h
#define SWWakingTimer_h
@import Foundation;

#include "BSCancellable-Protocol.h"
#include "BSInvalidatable-Protocol.h"
#include "BSTimerScheduleQuerying-Protocol.h"
#include "SWScheduledSystemWake.h"
#include "SWSystemSleepAssertionProviding-Protocol.h"
#include "SWSystemSleepMonitor.h"
#include "SWSystemSleepObserver-Protocol.h"

@class NSString;
@protocol BSTimerScheduleQuerying><BSCancellable><BSInvalidatable;

@interface SWWakingTimer : NSObject<SWSystemSleepObserver, BSTimerScheduleQuerying, BSCancellable, BSInvalidatable> {
  /* instance variables */
  SWScheduledSystemWake *_scheduledWake;
  SWSystemSleepMonitor *_sleepMonitor;
  NSObject<SWSystemSleepAssertionProviding> *_sleepAssertionProvider;
  NSObject<BSInvalidatable> *_preventSleepAssertion;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable> *_lock_timer;
  id /* block */ _lock_handler;
  double _lock_leeway;
  BOOL _lock_invalidated;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (readonly, nonatomic) BOOL scheduled;
@property (readonly, nonatomic) double timeRemaining;

/* instance methods */
- (id)initWithIdentifier:(id)identifier;
- (id)initWithIdentifier:(id)identifier sleepMonitor:(id)monitor sleepAssertionProvider:(id)provider;
- (void)dealloc;
- (BOOL)isScheduled;
- (void)scheduleWithFireInterval:(double)interval leewayInterval:(double)interval queue:(id)queue handler:(id /* block */)handler;
- (void)scheduleForDate:(id)date leewayInterval:(double)interval queue:(id)queue handler:(id /* block */)handler;
- (void)cancel;
- (void)invalidate;
- (void)systemSleepMonitor:(id)monitor sleepRequestedWithResult:(id /* block */)result;
- (void)systemSleepMonitor:(id)monitor prepareForSleepWithCompletion:(id /* block */)completion;
@end

#endif /* SWWakingTimer_h */
