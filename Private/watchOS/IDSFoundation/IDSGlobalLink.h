//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef IDSGlobalLink_h
#define IDSGlobalLink_h
@import Foundation;

#include "IDSGFTMetricsCollector.h"
#include "IDSGlobalLinkBlocks.h"
#include "IDSLink-Protocol.h"
#include "IDSLinkDelegate-Protocol.h"
#include "IDSNWLink.h"
#include "IDSServerMaterialExchangeController.h"
#include "IDSServerMaterialExchangeDelegate-Protocol.h"
#include "IDSStunCandidatePair.h"
#include "IDSStunCandidatePairDelegate-Protocol.h"
#include "IDSTCPLink.h"
#include "IDSUDPLink.h"

@class NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol IDSGlobalLinkP2PKeyNegotiatorProvider, OS_dispatch_source;

@interface IDSGlobalLink : NSObject<IDSLink, IDSLinkDelegate, IDSStunCandidatePairDelegate, IDSServerMaterialExchangeDelegate> {
  /* instance variables */
  BOOL _QUICForQREnabled;
  BOOL _H2FallbackEnabled;
  BOOL _QRIPv6Enabled;
  IDSUDPLink *_udpLink;
  IDSUDPLink *_udpLinkv6;
  IDSTCPLink *_tcpLink;
  IDSTCPLink *_tcpSSLLink;
  IDSNWLink *_nwLink;
  unsigned short _startPort;
  int _portRange;
  id /* block */ _connectReadyHandler;
  id /* block */ _disconnectCompletionHandler;
  long long _clientType;
  BOOL _isAutoDisconnectSupportedForGFTService;
  BOOL _allowOnlyOneQR;
  BOOL _allowP2P;
  BOOL _forceTCPFallbackOnWiFi;
  BOOL _forceTCPFallbackOnCell;
  BOOL _disallowWiFi;
  BOOL _disallowCellular;
  BOOL _preferCellularForCallSetup;
  BOOL _forceIPv6;
  BOOL _allowConcurrentQRSetup;
  struct tagIDSQRSendInfoList * _sendInfoList;
  unsigned short _linkIDCounter;
  char _linkIDForPlugin;
  double _natMappingTimeout;
  double _inviteSentTime;
  double _inviteRecvTime;
  unsigned int _acceptDelayU32;
  double _allocbindStartTime;
  double _allocbindEndTime;
  double _linkConnectTime;
  double _firstClientPacketTime;
  double _firstDataReceivedTime;
  BOOL _reportClientPacketTime;
  BOOL _reportDataReceivedTime;
  struct IDSNAT64PrefixCache_ * _nat64PrefixCache;
  NSMutableDictionary *_tokenToCandidatePairs;
  NSMutableDictionary *_linkIDToCandidatePairs;
  NSMutableDictionary *_channelToCandidatePairs;
  NSMutableDictionary *_transactionIDToRequestMetadata;
  NSMutableDictionary *_startTimeToStunReqID;
  NSMutableDictionary *_tokenToStunReqID;
  struct IDSSimpleUInt16List { unsigned long long listSize; unsigned long long itemCount; unsigned short *items; } _channelNumberList;
  struct IDSSimpleUInt16List { unsigned long long listSize; unsigned long long itemCount; unsigned short *items; } _reallocChannelList;
  NSMutableDictionary *_tokenToReallocBlocks;
  NSMutableDictionary *_reallocNewCandidatePairToOldCandidatePair;
  NSMutableDictionary *_unallocbindRequestToReason;
  NSObject<OS_dispatch_source> *_disconnectTimer;
  NSObject<OS_dispatch_source> *_activityTimer;
  NSMutableDictionary *_linkIDToReorderedPackets;
  NSMutableDictionary *_linkIDToRequestTimeStampAndRTT;
  NSMutableDictionary *_linkIDToHBCounter;
  NSMutableArray *_connectedLinkIDs;
  NSMutableArray *_activeProbingLinkIDs;
  NSMutableDictionary *_connectingCandidatePairSessionInfo;
  NSMutableArray *_interfaceAddressArray;
  NSMutableArray *_unusedLinkIDs;
  int _maxLinkID;
  BOOL _isInitiator;
  int _nominateCount;
  NSMutableArray *_localCandidateList;
  NSMutableArray *_remoteCandidateList;
  NSMutableDictionary *_tokenToStunCheckPairs;
  BOOL _enableSKE;
  NSData *_skeData;
  BOOL _recvRemoteSKEData;
  BOOL _delaySessionConnected;
  BOOL _skeToRemoteComplete;
  double _skeStartTime;
  NSString *_acceptedRelaySessionID;
  NSMutableArray *_nonAcceptedQRSessions;
  BOOL _isSessionAcceptedWithNoCandidatePair;
  long long _remoteCapabilityFlag;
  BOOL _delayedConnData;
  int _localConnDataCounter;
  int _remoteConnDataCounter;
  NSMutableArray *_delayedCellInterfaces;
  BOOL _hasPendingAllocation;
  NSMutableArray *_targetedAllocations;
  BOOL _useSecureControlMessage;
  NSData *_controlMessageKey;
  char _basebandPacketLinkID;
  unsigned short _basebandPacketChannelNumber;
  IDSGlobalLinkBlocks *_qraBlocks;
  NSMutableArray *_allocateTimeReportBlocks;
  BOOL _hasPendingSelfAllocation;
  NSMutableArray *_selfAllocateRequestIDs;
  unsigned char _clientUUID[16];
  NSString *_idsSessionID;
  unsigned long long _totalBytesSent;
  unsigned long long _totalPacketsSent;
  unsigned long long _totalBytesReceived;
  unsigned long long _totalPacketsReceived;
  unsigned long long _previousBytesSent;
  unsigned long long _previousPacketsSent;
  unsigned long long _previousBytesReceived;
  unsigned long long _previousPacketsReceived;
  double _previousReportTime;
  double _calleeAcceptTime;
  double _delayQUICDisconnectionAfterInfo;
  BOOL _isSecondOrLaterParticipant;
  BOOL _shouldReportAcceptDelay;
  unsigned int _probingTimeout;
  short _remoteGlobalLinkVersion;
  BOOL _reduceCellularUsage;
  BOOL _reduceRelayLinkCreation;
  BOOL _shouldProcessBasebandNotification;
  BOOL _supportChannelData;
  BOOL _islocalCellAttributeInexpensive;
  BOOL _shouldAcceptIncomingMKMOverQR;
  BOOL _shouldFallbackToTCPFirst;
  BOOL _receivedAllocbindResponse;
  NSMutableDictionary *_retryCountPerLinkType;
  unsigned int _remoteDeviceVersion;
  BOOL _isUPlusOneSession;
  unsigned int _localRelayInterfaceCounter;
  unsigned int _remoteRelayInterfaceCounter;
  double _remoteJoinedUPlusOneTime;
  NSMutableDictionary *_localRemoteRelayLinkIDToVirtualCandidatePairs;
  long long _delayFirstConnectionData;
  BOOL _receivedRemoteDeviceVersion;
  id /* block */ _pendingCommandConnectionDataBlock;
  id /* block */ _pendingCommandRelayInterfaceInfoBlock;
  BOOL _isLightweightParticipant;
  NSDate *_timeBase;
  NSDictionary *_QRServerDataBlob;
  IDSStunCandidatePair *_migratingCandidatePair;
  NSMutableDictionary *_pluginParticipantIDs;
  NSMutableDictionary *_pluginNameToPluginOptionsDict;
  NSMutableArray *_pluginControlDisconnectRecentTransactionIDs;
  NSData *_avcDataBlob;
  IDSServerMaterialExchangeController *_serverMaterialExchangeController;
  IDSGFTMetricsCollector *_metricsCollector;
  NSDictionary *_allocationsToTransportScoreCards;
  NSMutableArray *_transportScoreCards;
  BOOL _shouldEnable0RTT;
  BOOL _uplinkNackDisabled;
  NSDictionary *_qrSessionExperiments;
  NSDictionary *_qrChannelExperiments;
  NSDictionary *_qrExperiments;
  unsigned long long _clientUniquePID;
  NSMutableDictionary *_linkIDToStatsData;
  BOOL _hasSetServerDesiredMaterials;
  BOOL _isTLEEnabled;
  BOOL _shouldUseTLEAccordingToServer;
  BOOL _conversationShouldUseP2PTLEAccordingToServer;
  BOOL _shouldOverrideServerTestOptionTLEDisabled;
  BOOL _serverTestOptionTLEDisabled;
  BOOL _forceTLE;
  BOOL _forceP2PTLE;
  BOOL _allowTLEOverCellular;
  BOOL _allowTLEOverVRLinks;
  unsigned long long _nextP2PNegotiationAttempt;
  BOOL _disableDirectDatapath;
  NSObject<IDSGlobalLinkP2PKeyNegotiatorProvider> *_p2pNegotiatorProvider;
  NSString *_groupID;
  NSMutableSet *_usedLocalConnectionIDs;
  BOOL _sharedSessionJoined;
  BOOL _isReliableUnicastSession;
  BOOL _isReliableUnicastClient;
  BOOL _disablePureLinkFeature;
  BOOL _sharedSessionHasJoined;
}

@property (retain) NSString *cbuuid;
@property (retain) NSString *deviceUniqueID;
@property (readonly) NSString *linkTypeString;
@property (readonly) unsigned long long state;
@property (readonly) unsigned long long headerOverhead;
@property (weak) NSObject<IDSLinkDelegate> *delegate;
@property (weak) NSObject<IDSLinkDelegate> *alternateDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (Class)getGLClassWithOptions:(id)options;

/* instance methods */
- (id)initWithDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (void)dealloc;
- (void)invalidate;
- (id)_getLink:(int)link stunTransport:(long long)transport;
- (void)_callDisconnectCompletionHandler:(id)handler;
- (id)_createInterfaceAddressArray:(unsigned long long)array wantsWiFi:(BOOL)fi wantsCellular:(BOOL)cellular;
- (void)_delayProcessingCellularInterfaces:(id)interfaces;
- (void)_getNAT64PrefixForInterface:(int)interface interfaceName:(id)name completionBlock:(id /* block */)block;
- (BOOL)_synthesizeNAT64ForAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address withPrefix:(struct { int x0; unsigned char x1[12] } *)prefix toAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address;
- (id)_addSocketAndInterfaceAddress:(unsigned long long)address wantsWiFi:(BOOL)fi wantsCellular:(BOOL)cellular;
- (void)_parseClientUUID:(id)uuid;
- (void)startWithOptions:(id)options;
- (unsigned long long)defaultLinkType;
- (BOOL)hasReachableInterface:(unsigned long long)interface;
- (void)_addQRAAWDBlock:(id)qraawdblock allocateRequestTime:(double)time inferredExternalRAT:(unsigned int)rat stunTransport:(long long)transport relayProviderType:(long long)type idsSessionID:(id)id reportingDataBlob:(id)blob isInitiator:(BOOL)initiator;
- (void)connectWithSessionInfo:(id)info interfaceAddress:(id)address joinSession:(BOOL)session completionHandler:(id /* block */)handler withLocalInterfacePreference:(int)preference;
- (unsigned int)_getExternalIPAddressRAT:(id)rat;
- (BOOL)_isAcceptedRelaySessionForAllocationRequestID:(id)id acceptedRelaySessionID:(id)id;
- (void)_connectNWTCPLink:(id)nwtcplink disconnectAfterUse:(BOOL)use connectedHandler:(id /* block */)handler;
- (void)_connectNWLink:(id)nwlink disconnectAfterUse:(BOOL)use connectedHandler:(id /* block */)handler;
- (void)_connectWithSessionInfo:(id)info interfaceAddress:(id)address joinSession:(BOOL)session allocbindFailover:(BOOL)failover completionHandler:(id /* block */)handler withLocalInterfacePreference:(int)preference;
- (void)_selectStunTransport:(long long *)transport andInterfaceAddress:(id *)address forRelaySessionID:(id)id preferIPv4:(BOOL)ipv4 isValidSA:(BOOL)sa;
- (void)_selectStunTransport:(long long *)transport andInterfaceAddress:(id *)address forRelaySessionID:(id)id preferIPv4:(BOOL)ipv4 wantOnlyCell:(BOOL)cell wantOnlyNonCell:(BOOL)cell isValidSA:(BOOL)sa;
- (void)disconnectWithCompletionHandler:(id /* block */)handler;
- (void)setClientUniquePID:(unsigned long long)pid;
- (void)requestChildConnectionIDForLinkID:(char)id relayGroupID:(id)id relaySessionID:(id)id;
- (void)_updateDefaultCandidatePair:(id)pair;
- (void)_selectBetterDefaultCandidatePair:(id)pair;
- (BOOL)_hasCandidatePairInState:(unsigned long long)state relayCandidatePairsOnly:(BOOL)only excludeSelfAlloc:(BOOL)alloc;
- (BOOL)_hasCandidatePairInState:(unsigned long long)state anotherState:(unsigned long long)state relayCandidatePairsOnly:(BOOL)only excludeSelfAlloc:(BOOL)alloc;
- (BOOL)_hasConnectingRelayCandidatePair;
- (id)_getCandidatePairsWithSessionID:(id)id inState:(unsigned long long)state;
- (void)_discardCandidatePairsWithOption:(BOOL)option;
- (void)_discardAllCandidatePairs;
- (void)_discardNonAcceptedCandidatePairs;
- (void)_discardSelfAllocateCandidatePairs;
- (void)_removePacketNotificationFilter;
- (void)_sendSessionDisconnectedCommand;
- (void)_setChannelToCandidatePair:(id)pair localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address channelNumber:(unsigned short)number;
- (void)_setCandidatePairConnected:(id)connected;
- (id)_translateLinkTransportTypeWhenH2Enabled:(id)enabled;
- (void)_setLinkMetricsAttributesForCandidatePair:(id)pair;
- (void)_updateLinkIDForPlugin:(id)plugin;
- (void)_notifyCandidatePairConnected:(id)connected;
- (void)_notifyCandidatePairDisconnected:(id)disconnected withReason:(unsigned char)reason;
- (void)_notifyDefaultUnderlyingLinkChanged:(id)changed error:(long long)error;
- (void)_notifyLinkDisconnectedWithError:(long long)error reason:(unsigned char)reason;
- (void)_reportAWDAllocateTime;
- (void)_setFirstDefaultCandidatePair:(id)pair;
- (id)_getAllocbindReportingDataBlob:(id)blob;
- (BOOL)_postProcessAllocbindResponse:(id)response candidatePair:(id)pair candidatePairToken:(id)token;
- (BOOL)_processAllocbindResponse:(id)response fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (BOOL)_processUnallocbindResponse:(id)response fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (BOOL)_processReallocIndication:(id)indication fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (BOOL)_processDataIndication:(id)indication fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (long long)_getQRAllocateType;
- (void)setPluginCache:(id)cache;
- (void)setIsReliableUnicastSession:(BOOL)session isClient:(BOOL)client;
- (void)manageDesignatedDestinations:(id)destinations relayGroupID:(id)id relaySessionID:(id)id withType:(unsigned short)type sessionStateCounter:(unsigned int)counter;
- (void)removeParticipantIDs:(id)ids relayGroupID:(id)id relaySessionID:(id)id sessionStateCounter:(unsigned int)counter;
- (void)_destroyVirtualRelayLinksForCandidatePair:(id)pair;
- (void)updateURIToParticipantIDs:(id)ids relaySessionID:(id)id sessionInfo:(id)info;
- (BOOL)_processGoAwayIndication:(id)indication fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (BOOL)_processStunPacket:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)packet fromDeviceUniqueID:(id)id cbuuid:(id)cbuuid arrivalTime:(double)time headerOverhead:(unsigned long long)overhead;
- (void)_processDataOnReallocChannel:(unsigned short)channel localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address;
- (void)_processReallocChannelData:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)data channelNumber:(unsigned short)number fromDeviceUniqueID:(id)id cbuuid:(id)cbuuid arrivalTime:(double)time;
- (void)_saveStunRequest:(id)request startTime:(double)time token:(id)token;
- (void)_removeStunRequest:(id)request;
- (double)_startTimeForStunRequest:(id)request;
- (long long)_sendStunMessage:(id)message candidatePair:(id)pair;
- (long long)_sendStunMessage:(id)message sourceIfIndex:(int)index source:(const struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)source destination:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)destination stunTransport:(long long)transport token:(id)token linkID:(char)id delegatedLinkID:(char)id MTULimit:(int)mtulimit;
- (long long)_sendPacketBuffer:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)buffer stunTransport:(long long)transport token:(id)token linkID:(char)id delegatedLinkID:(char)id;
- (id)_createDataBlobMaterialProto;
- (void)_sendAllocbindRequest:(id)request stunMessage:(id)message isRealloc:(BOOL)realloc inResponseToNoSessionState:(BOOL)state;
- (void)_sendUnallocbindRequestTimeOut:(id)out stunMessage:(id)message reason:(unsigned char)reason;
- (void)_sendUnallocbindRequest:(id)request stunMessage:(id)message reason:(unsigned char)reason;
- (int)_getExpensiveLinkFlags:(BOOL)flags candidatePair:(id)pair;
- (id)_createCommandData:(long long)data options:(id)options candidatePair:(id)pair;
- (BOOL)_skipCommandMessage:(long long)message candidatePair:(id)pair timeNow:(double)now;
- (BOOL)_shouldSkipCommand:(long long)command withCandidatePair:(id)pair connectionDataCounter:(int)counter relayInterfaceCounter:(int)counter;
- (void)_sendCommandMessage:(long long)message stunMessage:(id)message options:(id)options candidatePairToken:(id)token;
- (BOOL)_processIncomingIndicationData:(char *)data length:(int)length candidatePairToken:(id)token arrivalTime:(double)time remoteRelayLinkID:(unsigned short)id;
- (void)_notifyQRSessionConnected:(id)connected;
- (void)_setRemoteGlobalLinkVersionWithCommand:(long long)command receivedRemoteVersion:(BOOL)version versionValue:(unsigned short)value receivedSKE:(BOOL)ske;
- (void)_processCommandConnected:(id)connected candidatePairToken:(id)token;
- (void)_processCommandDisconnected:(id)disconnected candidatePairToken:(id)token;
- (void)_processCommandHeartbeat:(id)heartbeat candidatePairToken:(id)token arrivalTime:(double)time remoteRelayLinkID:(unsigned short)id;
- (void)_processCommandConnectionData:(id)data candidatePairToken:(id)token;
- (void)_processCommandNominate:(id)nominate candidatePairToken:(id)token;
- (void)_sendConnectionDataWithRemovedAddressList:(id)list;
- (void)_sendNowConnectionDataWithRemovedAddressList:(id)list;
- (void)_handleDisconnectTimer;
- (void)_startDisconnectTimer;
- (void)_stopDisconnectTimer;
- (void)_startHB:(id)hb;
- (void)_handleNoRemotePacket;
- (void)_handleActivityTimer;
- (void)_startActivityTimer;
- (void)_stopActivityTimer;
- (void)_addStunCheckPair:(id)pair isRemoteCandidate:(BOOL)candidate excludeLocalAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address;
- (void)_addStunCheckPair:(id)pair isRemoteCandidate:(BOOL)candidate;
- (BOOL)_addCandidate:(id)candidate isRemoteCandidate:(BOOL)candidate;
- (BOOL)_hasActiveAllocbindFailoverTimerForSessionID:(id)id;
- (void)_startAllocbindFailoverTimerOnCandidatePair:(id)pair delay:(int)delay;
- (void)_handleAllocbindFailoverTimerWithTransportScoreCards:(id)cards failoverTimerOnCandidatePair:(id)pair onInterface:(int)interface;
- (BOOL)_findTriedCandidatePairForSession:(id)session wantOnlyCell:(BOOL)cell wantOnlyNonCell:(BOOL)cell;
- (void)_stopAllocbindFailoverTimer:(id)timer;
- (void)_handleAllocbindFailoverTimer:(id)timer failoverTimerOnCandidatePair:(id)pair onInterface:(int)interface;
- (BOOL)_isExtIPDiscoveryDone;
- (void)_handleSelfAllocationTimeout:(id)timeout;
- (void)_processXORMappedAddress:(id)address arrivalTime:(double)time;
- (BOOL)_IsExtIPDiscoveryNeeded:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)needed candidatePairList:(id)list;
- (void)_sendAllocbindRequestForExtIP:(id)ip startTime:(double)time;
- (BOOL)_requestSelfAllocationForInterfaceAddress:(id)address;
- (void)_startExtIPDiscovery;
- (void)_processRemoteCandidates:(id)candidates;
- (void)_startStunCheck:(id)check;
- (void)_updateNominatedCandidatePair:(id)pair;
- (void)_nominateCandidatePair:(id)pair;
- (void)_sendBindingRequest:(id)request stunMessage:(id)message;
- (BOOL)_shouldUseP2PTLE;
- (BOOL)_shouldUseVRTLE;
- (BOOL)_shouldUseQRTLE;
- (void)_getP2PNegotiationForCandidatePair:(id)pair completionBlock:(id /* block */)block;
- (void)_processRemoteLinkUUID:(id)uuid candidatePair:(id)pair;
- (BOOL)_isCellularInterfaceForCandidatePair:(id)pair localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address;
- (BOOL)_processBindingRequest:(id)request fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (void)_attemptP2PNegotiationForSTUNMessage:(id)stunmessage candidatePair:(id)pair completionHandler:(id /* block */)handler;
- (void)_receiveP2PNegotiationBlob:(id)blob attemptID:(unsigned long long)id remoteIDSConnectionID:(unsigned int)id remoteAVCConnectionID:(unsigned int)id candidatePair:(id)pair completionHandler:(id /* block */)handler;
- (void)setUpP2PQUICPodConnectionsForCandidatePair:(id)pair attemptID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (BOOL)_processBindingResponse:(id)response fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (void)_updateInterfaceAddressesWithAddList:(id)list removeList:(id)list;
- (void)_generateTransportScoreCard;
- (BOOL)_isUsingSameRATCandidatePair:(id)pair transportScoreCard:(id)card;
- (id)_transportInterfaceToString:(long long)string;
- (void)_setDefaultCandidatePairForNonFT;
- (BOOL)_processRemovedLocalAddressList:(id)list;
- (void)_processNewLocalAddressList:(id)list;
- (BOOL)_isInterfaceExpensiveWithInterfaceIndex:(unsigned int)index;
- (BOOL)_isInterfaceConstrainedWithInterfaceIndex:(unsigned int)index;
- (BOOL)_isInterfaceDelegatedWithInterfaceIndex:(unsigned int)index;
- (id)_interfaceNameForInterfaceIndex:(unsigned int)index;
- (void)_processRemovedRemoteCandidates:(id)candidates;
- (void)_processNewRemoteCandidates:(id)candidates;
- (void)_setupRelayConnectionForNetworkAddressChanges;
- (void)handleNetworkAddressChanges:(BOOL)changes hasIPv6AddressChange:(BOOL)change;
- (void)_processDelayedCellularInterfaces;
- (void)_handleNewRATChange;
- (void)handleCellularRATChange;
- (id)copyLinkStatsDict;
- (BOOL)remoteHostAwake;
- (void)_reportSessionSetupTime;
- (BOOL)_getPacketBufferSendInfo:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)info channelNumber:(unsigned short *)number transport:(long long *)transport;
- (void)_updateSendStatsWithResult:(unsigned long long)result bytesSent:(long long)sent packetsSent:(int)sent linkID:(char)id delegatedLinkID:(char)id token:(id)token isClientData:(BOOL)data sendTime:(double)time stunTransport:(long long)transport;
- (unsigned long long)_prepareOutgoingChannelData:(struct  * *)data arraySize:(int)size channelNumber:(unsigned short)number candidatePair:(id)pair linkID:(char)id delegatedLinkID:(char *)id stunTransport:(long long)transport;
- (unsigned long long)_sendChannelDataPacketBuffer:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)buffer candidatePair:(id)pair;
- (unsigned long long)sendPacketBuffer:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)buffer toDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (unsigned long long)sendPacketBufferArray:(struct  * *)array arraySize:(int)size toDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (id)generateLinkReport:(double)report isCurrentLink:(BOOL)link;
- (void)_sendSKEDataWithSelectedCandidatePair;
- (void)_sendSKEDataToSucceededCandidatePairs;
- (void)_requestNonUDPRelayAllocation:(long long)allocation relaySessionID:(id)id;
- (void)setAcceptedRelaySession:(id)session options:(id)options;
- (void)setHasPendingAllocation:(BOOL)allocation;
- (void)sendSKEData:(id)skedata;
- (void)sendKeyMaterialMessageData:(id)data relayGroupID:(id)id destinationURIs:(id)uris completionHandler:(id /* block */)handler;
- (void)setServerDesiredMaterialsForSession:(id)session materials:(id)materials signer:(id /* block */)signer;
- (void)requestMaterialsForSession:(id)session participantIDs:(id)ids materialType:(int)type;
- (BOOL)qrMaterialExchangePutMaterial:(id)material;
- (void)setDefaultUnderlyingLink:(char)link;
- (void)_resetRetryCountForCandidatePair:(id)pair;
- (void)setTimeBase:(id)base;
- (void)setSharedSessionHasJoined:(BOOL)joined;
- (void)setParticipantType:(unsigned short)type relayGroupID:(id)id relaySessionID:(id)id sessionStateCounter:(unsigned int)counter;
- (id)getLocalAttribute:(id)attribute;
- (id)_getLocalAttribute:(id)attribute;
- (id)getRemoteAttribute:(id)attribute;
- (id)_getRemoteAttribute:(id)attribute;
- (void)sendConnectedLinkInfoToAVC;
- (void)reportLinkEvent:(id)event linkID:(unsigned char)id;
- (void)setPacketNotificationFilter:(char)filter uniqueTag:(unsigned int)tag isEnabled:(BOOL)enabled;
- (void)dropIPPackets:(char)ippackets payloadArray:(id)array;
- (void)updateProtocolQualityOfService:(char)service isGood:(BOOL)good;
- (void)stopKeepAlive:(id)alive;
- (void)currentCellularSignalStrength:(int *)strength signalStrength:(int *)strength signalGrade:(int *)grade;
- (void)setWiFiAssistState:(BOOL)state;
- (void)startLinkProbing:(id)probing;
- (void)stopLinkProbing:(id)probing;
- (void)_stopProbingOnLinkID:(char)id;
- (void)queryLinkProbingStatus:(id)status;
- (void)flushLinkProbingStatus:(id)status;
- (void)sendStatsRequestForClient:(id)client;
- (void)sendStatsRequest:(id)request;
- (void)setReceivedRemoteDeviceVersion:(BOOL)version;
- (void)setRemoteDeviceVersion:(unsigned int)version;
- (BOOL)_sendInfoRequest:(id)request relaySessionID:(id)id;
- (BOOL)_getSessionParticipants:(id)participants relaySessionID:(id)id options:(id)options;
- (BOOL)_getSessionStreamInfo:(id)info relaySessionID:(id)id options:(id)options;
- (void)getSessionInfo:(id)info relaySessionID:(id)id requestType:(long long)type options:(id)options;
- (void)updateSessionParticipants:(id)participants relaySessionID:(id)id participants:(id)participants;
- (void)registerPluginWithOptions:(id)options relayGroupID:(id)id relaySessionID:(id)id;
- (void)setForceTCPFallbackOnWiFi:(BOOL)fi;
- (void)setForceTCPFallbackOnCell:(BOOL)cell;
- (void)setAllowP2P:(BOOL)p;
- (void)_enableE2E;
- (void)_sendRelayInterfaceInfo:(id)info;
- (void)receiveJoinNotificationFromAParticipant;
- (void)setIsUPlusOneSession:(BOOL)session;
- (void)enableUPlusOneSessionForTransition:(BOOL)transition;
- (void)_processCommandRelayInterfaceInfo:(id)info candidatePairToken:(id)token;
- (void)_discardKeyMaterialMessage:(long long)message;
- (id)_findVirtualCandidatePair:(id)pair;
- (unsigned long long)createAliasForParticipantID:(unsigned long long)id salt:(id)salt relayGroupID:(id)id relaySessionID:(id)id;
- (unsigned long long)participantIDForAlias:(unsigned long long)alias salt:(id)salt relayGroupID:(id)id relaySessionID:(id)id;
- (void)link:(id)link didConnectForDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (void)link:(id)link didDisconnectForDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (BOOL)link:(id)link didReceivePacket:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)packet fromDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (void)link:(id)link didMitigateCollision:(BOOL)collision;
- (void)linkTransactionIDMismatchDetected:(id)detected;
- (void)link:(id)link didFailConnectionOfType:(id)type;
- (BOOL)_qrLinkLimitExceededWithNewLinkType:(unsigned char)type cellularRelayLinkCount:(unsigned short)count wifiRelayLinkCount:(unsigned short)count;
- (unsigned char)_getNewLinkType:(id)type remoteInterface:(int *)interface;
- (id)_findCandidatePairWithRelaySessionID:(id)id;
- (BOOL)_isSharedQRSession:(id)qrsession;
- (void)_requestNewTwoWayQRAllocation:(id)qrallocation;
- (BOOL)_setupNewQRLinkIfNecessary:(id)necessary;
- (id)_convergeSharedSessions:(id)sessions;
- (void)_notifySessionInfoReceived:(id)received relayGroupID:(id)id relaySessionID:(id)id status:(unsigned int)status;
- (void)candidatePair:(id)pair didReceiveSessionInfo:(id)info status:(unsigned int)status;
- (void)candidatePair:(id)pair didReceiveSessionStats:(id)stats success:(BOOL)success;
- (void)_removeChannelFromChannelToCandidatePair:(id)pair;
- (BOOL)_handleRemapping:(id)remapping errorCode:(unsigned short)code reconnectQUIC:(BOOL)quic;
- (BOOL)_hasConnectedP2pLink;
- (void)candidatePair:(id)pair didReceiveStunErrorResponse:(long long)response errorCode:(unsigned short)code didLocalExternalAddressChange:(BOOL)change;
- (void)candidatePair:(id)pair didAddQREvent:(id)qrevent;
- (void)candidatePair:(id)pair didReceiveParticipantUpdate:(id)update status:(unsigned short)status;
- (void)candidatePair:(id)pair didReceivePluginRegistration:(unsigned long long)registration pluginName:(id)name;
- (void)candidatePair:(id)pair didReceivePluginUnregistration:(unsigned long long)unregistration pluginName:(id)name;
- (void)candidatePair:(id)pair didReceivePluginControlEvent:(unsigned long long)event operation:(unsigned char)operation transactionID:(id)id;
- (void)candidatePair:(id)pair didReceiveMappedParticipantsDict:(id)dict forLinkID:(char)id;
- (void)candidatePair:(id)pair didReceivePutMaterialIndication:(id)indication;
- (void)candidatePair:(id)pair didReceiveGetMaterialResponse:(id)response;
- (void)receiveKeyMaterials:(id)materials;
- (void)candidatePair:(id)pair didReceivePutMaterialResponse:(id)response;
- (void)_didReceiveRequestToPurgeRegistration;
- (void)_disconnectPluginConnectionsForParticipantID:(unsigned long long)id andPurgeRegistration:(BOOL)registration;
- (void)candidatePair:(id)pair protoRequestDidTimeOut:(unsigned long long)out;
- (void)disconnectIdleQUICConnectionForCandidatePair:(id)pair;
- (void)sendAllocbindRequest:(id)request isRealloc:(BOOL)realloc inResponseToNoSessionState:(BOOL)state reconnectQUIC:(BOOL)quic;
- (void)sendProbingRequestWithoptions:(id)withoptions candidatePairToken:(id)token;
- (long long)sendStunMessage:(id)message candidatePair:(id)pair;
- (BOOL)receiveNoSessionStateForCandidatePair:(id)pair didLocalExternalAddressChange:(BOOL)change;
- (void)receiveIdleClientErrorForCandidatePair:(id)pair;
- (void)receiveBlockedIndicationWithReason:(unsigned int)reason;
- (void)receiveErrorIndicationWithCode:(unsigned int)code;
- (id)createLinkCycleForCandidatePair:(id)pair;
- (id)_createInterfaceAddressArrayWithNWLink:(BOOL)nwlink wantsWiFi:(BOOL)fi wantsCellular:(BOOL)cellular;
- (id)_addSocketAndInterfaceAddressWithNWLink:(BOOL)nwlink wantsWiFi:(BOOL)fi wantsCellular:(BOOL)cellular;
- (void)_getAndProcessDatablobsFromReceivedMaterials:(id)materials;
- (BOOL)_postProcessQUICAllocbindResponse:(id)response candidatePair:(id)pair;
- (void)_parseActiveExperiments:(id)experiments;
- (void)_buildQrExperiments;
- (BOOL)_processNWLinkAllocbindResponse:(id)response fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (BOOL)_processQUICUnallocbindResponse:(id)response fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remmoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (BOOL)_processQUICReallocIndication:(id)indication fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (BOOL)_processQUICGoAwayIndication:(id)indication fromDevice:(id)device localIfIndex:(unsigned int)index localAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address remoteAddress:(struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address candidatePairToken:(id)token arrivalTime:(double)time;
- (BOOL)_processProtoPacket:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)packet fromDeviceUniqueID:(id)id cbuuid:(id)cbuuid arrivalTime:(double)time headerOverhead:(unsigned long long)overhead;
- (BOOL)_processRegisterIndication:(id)indication candidatePairToken:(id)token;
- (BOOL)_processRegisterAckResponse:(id)response candidatePairToken:(id)token;
- (BOOL)_processRegisterResponse:(id)response candidatePairToken:(id)token;
- (BOOL)_processReliableUnicastRegistrationErrorResponse:(id)response packetBuffer:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)buffer startTime:(double)time candidatePair:(id)pair;
- (void)_updateCandidatePair:(id)pair newLocalPort:(unsigned short)port;
- (void)_saveProtoRequest:(id)request token:(id)token;
- (void)_removeProtoRequest:(unsigned long long)request status:(unsigned int)status;
- (double)_startTimeForProtoRequest:(unsigned long long)request;
- (id)_tokenForProtoRequest:(unsigned long long)request;
- (long long)_sendProtoMessage:(id)message candidatePair:(id)pair;
- (void)_sendQUICAllocbindRequest:(id)request isRealloc:(BOOL)realloc inResponseToNoSessionState:(BOOL)state shouldConnectLinkFirst:(BOOL)first isPendingInResponseToNoSessionState:(BOOL)state;
- (void)_sendQUICUnallocbindRequest:(id)request reason:(unsigned char)reason;
- (long long)sendProtoMessage:(id)message candidatePair:(id)pair;
- (void)_sendChannelDataCommandMessage:(long long)message packetBuffer:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)buffer options:(id)options candidatePairToken:(id)token;
- (BOOL)_processChannelDataCommandMessage:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)message remoteRelayLinkID:(unsigned short)id channelNumber:(unsigned short)number fromDeviceUniqueID:(id)id cbuuid:(id)cbuuid arrivalTime:(double)time;
- (long long)getAllocBindErrorCodeForSessionID:(id)id;
@end

#endif /* IDSGlobalLink_h */
