//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef IDSUDPLink_h
#define IDSUDPLink_h
@import Foundation;

#include "IDSLink-Protocol.h"
#include "IDSLinkDelegate-Protocol.h"
#include "IDSSockAddrWrapper.h"

@class NSDictionary, NSIndexSet, NSString;

@interface IDSUDPLink : NSObject<IDSLink> {
  /* instance variables */
  int _addressFamily;
  IDSSockAddrWrapper *_localAddress;
  IDSSockAddrWrapper *_destinationAddress;
  BOOL _hasFixedDestination;
  NSDictionary *_destinationAddressToDeviceIDMap;
  BOOL _wantsAWDL;
  BOOL _wantsWiFi;
  BOOL _wantsCellular;
  BOOL _needToConnect;
  BOOL _hasTemporaryError;
  unsigned long long _totalBytesSent;
  unsigned long long _totalPacketsSent;
  unsigned long long _totalBytesReceived;
  unsigned long long _totalPacketsReceived;
  unsigned long long _previousBytesSent;
  unsigned long long _previousPacketsSent;
  unsigned long long _previousBytesReceived;
  unsigned long long _previousPacketsReceived;
  double _previousReportTime;
}

@property (nonatomic) unsigned short port;
@property (nonatomic) unsigned short cellularPort;
@property (readonly, nonatomic) int socket;
@property (readonly, nonatomic) int cellularSocket;
@property (nonatomic) BOOL useDefaultInterfaceOnly;
@property (readonly, nonatomic) BOOL isInvalidated;
@property (nonatomic) double lastDestinationSent;
@property (readonly, nonatomic) double lastDestinationReceived;
@property (nonatomic) BOOL allowsLinkLocal;
@property (nonatomic) BOOL skipTransportThread;
@property (retain, nonatomic) NSIndexSet *cellularInterfaceIndices;
@property (nonatomic) BOOL wifiAssistEnabled;
@property (retain) NSString *cbuuid;
@property (retain) NSString *deviceUniqueID;
@property (readonly) NSString *linkTypeString;
@property (readonly) unsigned long long state;
@property (readonly) unsigned long long headerOverhead;
@property (weak) NSObject<IDSLinkDelegate> *delegate;
@property (weak) NSObject<IDSLinkDelegate> *alternateDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (void)dealloc;
- (id)_createNetworkInterfaceArrayWithIPVersion:(unsigned long long)ipversion wantsAWDL:(BOOL)awdl wantsWiFi:(BOOL)fi wantsCellular:(BOOL)cellular allowsLinkLocal:(BOOL)local useDefaultInterfaceOnly:(BOOL)only defaultPairedDevice:(BOOL)device;
- (void)_processIncomingPacketOnSocket:(int)socket;
- (void)_processIncomingPacket;
- (void)_processIncomingCellularPacket;
- (unsigned long long)_sendBytes:(const void *)bytes length:(unsigned long long)length;
- (unsigned long long)_sendBytes:(const void *)bytes length:(unsigned long long)length destinationAddress:(const struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address;
- (unsigned long long)_sendBytesArray:(const void * *)array lengthArray:(unsigned long long *)array arraySize:(int)size localInterfaceIndex:(int)index localAddress:(const struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address destinationAddress:(const struct sockaddr { unsigned char x0; unsigned char x1; char x2[14] } *)address trafficClass:(unsigned short)class DSCP:(unsigned char)dscp;
- (int)_createNewUDPSocketWithIPVersion:(unsigned long long)ipversion localPort:(unsigned short *)port wantsAWDL:(BOOL)awdl clientUUID:(unsigned char x[16])uuid;
- (BOOL)_isInterfaceIndexCellular:(int)cellular;
- (int)_findSocketForInterfaceIndex:(int)index;
- (BOOL)_setTrafficClassOnSocket:(int)socket trafficClassValue:(int)value;
- (id)copyLinkStatsDict;
- (void)removeSocket;
- (void)invalidate;
- (BOOL)setDestinationAddress:(id)address isFixedDestination:(BOOL)destination fromAddress:(id)address;
- (BOOL)setDestinationAddress:(id)address localIfIndex:(unsigned int)index isFixedDestination:(BOOL)destination fromAddress:(id)address;
- (BOOL)setDestinationAddressToDeviceIDMap:(id)idmap;
- (void)reconnectWithLocalAddress:(id)address;
- (id)newSocketWithIPVersion:(unsigned long long)ipversion wantsAWDL:(BOOL)awdl wantsWiFi:(BOOL)fi wantsCellular:(BOOL)cellular clientUUID:(unsigned char x[16])uuid;
- (id)newSocketWithIPVersion:(unsigned long long)ipversion wantsAWDL:(BOOL)awdl wantsWiFi:(BOOL)fi wantsCellular:(BOOL)cellular;
- (id)copyCurrentNetworkInterfaces;
- (unsigned long long)sendPacketBuffer:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)buffer toDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (unsigned long long)sendPacketBuffer:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)buffer destination:(id)destination toDeviceID:(id)id;
- (unsigned long long)sendPacketBuffer:(struct { char * x0; unsigned long long x1; long long x2; long long x3; unsigned int x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; unsigned int x16; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x17; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x18; struct sockaddr_storage { unsigned char x0; unsigned char x1; char x2[6] long long x3; char x4[112] } x19; unsigned short x20; unsigned char x21; int x22; S]CBBBI} x23[8{?=*Si[12S]QCSCBBS{?=SSSSS}BBi[4] char x24; char x25; int x26; double x27; unsigned char x28[16] unsigned long long x29; unsigned long long x30; id x31; int x32; unsigned int x33; unsigned short x34; unsigned char x35[0] } *)buffer sourceInterface:(id)interface destination:(id)destination toDeviceID:(id)id;
- (unsigned long long)sendPacketBufferArray:(struct  * *)array arraySize:(int)size toDeviceUniqueID:(id)id cbuuid:(id)cbuuid;
- (id)generateLinkReport:(double)report isCurrentLink:(BOOL)link;
- (BOOL)setTrafficClass:(int)class;
- (void)setWiFiAssistState:(BOOL)state;
@end

#endif /* IDSUDPLink_h */
