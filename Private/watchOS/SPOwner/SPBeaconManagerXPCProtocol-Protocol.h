//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 356.6.0.0.0
//
#ifndef SPBeaconManagerXPCProtocol_Protocol_h
#define SPBeaconManagerXPCProtocol_Protocol_h
@import Foundation;

@protocol SPBeaconManagerXPCProtocol <NSObject, SPLocalBeaconManagerXPCProtocol>
/* instance methods */
- (void)beaconForUUID:(id)uuid completion:(id /* block */)completion;
- (void)ownedDeviceKeyRecordsForUUID:(id)uuid completion:(id /* block */)completion;
- (void)purgeOwnedDeviceKeyRecordsForUUID:(id)uuid completion:(id /* block */)completion;
- (void)createOwnedDeviceKeyRecordForUUID:(id)uuid completion:(id /* block */)completion;
- (void)notificationBeaconForSubscriptionId:(id)id completion:(id /* block */)completion;
- (void)allBeaconsWithCompletion:(id /* block */)completion;
- (void)allBeaconsOfTypes:(id)types includeDupes:(BOOL)dupes includeHidden:(BOOL)hidden completion:(id /* block */)completion;
- (void)startUpdatingSimpleBeaconsWithContext:(id)context completion:(id /* block */)completion;
- (void)unacceptedBeaconsWithCompletion:(id /* block */)completion;
- (void)beaconingKeysForUUID:(id)uuid dateInterval:(id)interval completion:(id /* block */)completion;
- (void)postedLocalNotifyWhenFoundNotificationForUUID:(id)uuid completion:(id /* block */)completion;
- (void)commandKeysForUUIDs:(id)uuids completion:(id /* block */)completion;
- (void)commandKeysForUUIDs:(id)uuids dateInterval:(id)interval completion:(id /* block */)completion;
- (void)commandKeysForUUID:(id)uuid withCriteria:(id)criteria completion:(id /* block */)completion;
- (void)allBeaconingKeysForUUID:(id)uuid dateInterval:(id)interval forceGenerate:(BOOL)generate completion:(id /* block */)completion;
- (void)fetchAllKeyMapFileDescriptorsWithCompletion:(id /* block */)completion;
- (void)allDuriansWithCompletion:(id /* block */)completion;
- (void)nearOwnerCommandKeysWithCompletion:(id /* block */)completion;
- (void)roleCategoriesWithCompletion:(id /* block */)completion;
- (void)firmwareUpdateCandidateBeaconsWithCompletion:(id /* block */)completion;
- (void)updateBeaconUUID:(id)uuid firmwareUpdateState:(long long)state systemVersion:(id)version error:(id)error completion:(id /* block */)completion;
- (void)initiateFirmwareUpdateForAllEligibleBeaconsWithCompletion:(id /* block */)completion;
- (void)beaconsInFirmwareUpdateState:(long long)state dateInterval:(id)interval completion:(id /* block */)completion;
- (void)firmwareUpdateStateForBeaconUUID:(id)uuid completion:(id /* block */)completion;
- (void)setRole:(long long)role beaconId:(id)id completion:(id /* block */)completion;
- (void)updateBeacon:(id)beacon updates:(id)updates completion:(id /* block */)completion;
- (void)setWildKeyBase:(unsigned long long)base interval:(unsigned long long)interval fallback:(unsigned long long)fallback forBeacon:(id)beacon completion:(id /* block */)completion;
- (void)setAlignmentUncertainty:(double)uncertainty atIndex:(unsigned long long)index date:(id)date forBeacon:(id)beacon completion:(id /* block */)completion;
- (void)setKeyRollInterval:(unsigned long long)interval forBeacon:(id)beacon completion:(id /* block */)completion;
- (void)setCurrentWildKeyIndex:(long long)index forBeacon:(id)beacon completion:(id /* block */)completion;
- (void)connectedToBeacon:(id)beacon withIndex:(unsigned long long)index completion:(id /* block */)completion;
- (void)fetchUserStatsForBeacon:(id)beacon completion:(id /* block */)completion;
- (void)fetchFirmwareVersionForBeacon:(id)beacon completion:(id /* block */)completion;
- (void)removeLocalAccountDataWithCompletion:(id /* block */)completion;
- (void)primaryAccountModified;
- (void)setServiceState:(id)state completion:(id /* block */)completion;
- (void)repairDataStore:(id /* block */)store;
- (void)updateObfuscatedIdentifierWithCompletion:(id /* block */)completion;
- (void)createDuplicateBeaconsForBeacon:(id)beacon skipGroupIdentifier:(BOOL)identifier count:(long long)count completion:(id /* block */)completion;
- (void)removeDuplicateBeaconsWithCompletion:(id /* block */)completion;
@end

#endif /* SPBeaconManagerXPCProtocol_Protocol_h */
