//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 356.6.0.0.0
//
#ifndef SPPairingManager_h
#define SPPairingManager_h
@import Foundation;

#include "SPPairingManagerXPCProtocol-Protocol.h"

@class FMXPCServiceDescription, FMXPCSession;
@protocol OS_dispatch_queue;

@interface SPPairingManager : NSObject

@property (retain, nonatomic) FMXPCServiceDescription *serviceDescription;
@property (retain, nonatomic) FMXPCSession *session;
@property (retain, nonatomic) NSObject<SPPairingManagerXPCProtocol> *proxy;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)userAgentProxy;
- (id)remoteInterface;
- (void)initiatePairingSessionWithCompletion:(id /* block */)completion;
- (void)invalidatePairingSession:(id)session completion:(id /* block */)completion;
- (void)verifyPairingWithPairingSession:(id)session signature:(id)signature attestation:(id)attestation systemPublicKey:(id)key refKeyPublicKey:(id)key systemVersion:(id)version vendorId:(long long)id productId:(long long)id ecid:(id)ecid chipId:(id)id serialNumber:(id)number collaborativeKey:(id)key completion:(id /* block */)completion;
- (void)finalizePairingWithSession:(id)session name:(id)name roleId:(long long)id roleEmoji:(id)emoji keyStatus:(id)status collaborativeKey:(id)key signature:(id)signature completion:(id /* block */)completion;
- (void)finalizePairingWithSession:(id)session configuration:(id)configuration completion:(id /* block */)completion;
- (void)unpairUUID:(id)uuid force:(BOOL)force completion:(id /* block */)completion;
- (void)getLocalPairingDataWithCompletion:(id /* block */)completion;
- (void)currentBeaconingKeyWithCompletion:(id /* block */)completion;
- (void)allPairingErrorsWithCompletion:(id /* block */)completion;
- (void)setAlwaysBeaconState:(BOOL)state completion:(id /* block */)completion;
- (void)setAlwaysBeaconWildState:(BOOL)state completion:(id /* block */)completion;
- (void)alwaysBeaconWildStateWithCompletion:(id /* block */)completion;
- (void)getOfflineFindingInfoWithCurrentData:(id)data completion:(id /* block */)completion;
@end

#endif /* SPPairingManager_h */
