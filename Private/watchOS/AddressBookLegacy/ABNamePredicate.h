//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 12698.0.0.0.0
//
#ifndef ABNamePredicate_h
#define ABNamePredicate_h
@import Foundation;

#include "ABPredicate.h"

@class NSArray, NSString;

@interface ABNamePredicate : ABPredicate {
  /* instance variables */
  void * _tokenizations;
  struct __CFArray * _tokenizationSortKeys;
}

@property (nonatomic) void * addressBook;
@property (copy, nonatomic) NSString *name;
@property (retain, nonatomic) NSArray *sources;
@property (retain, nonatomic) NSArray *groups;
@property (nonatomic) void * source;
@property (nonatomic) void * group;
@property (copy, nonatomic) NSString *accountIdentifier;
@property (nonatomic) BOOL matchWholeWords;
@property (nonatomic) BOOL matchPersonOrCompanyNamesExclusively;
@property (nonatomic) BOOL matchPreferredName;
@property (nonatomic) BOOL generateExceprts;
@property (retain, nonatomic) NSArray *scopedContactIdentifiers;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void *)tokenizations;
- (BOOL)isValid;
- (id)ab_metadataForMatchingRow:(struct CPSqliteStatement { struct CPSqliteConnection * x0; struct sqlite3_stmt * x1; double x2; BOOL x3; } *)row columnOffset:(int)offset;
- (id)emphasizedExcerptStringForMatchString:(id)string;
- (id)querySelectPropertiesForPredicateIdentifier:(int)identifier;
- (id)_matchClauseForColumns:(id)columns requiringAllTerms:(BOOL)terms;
- (id)queryJoinsInCompound:(BOOL)compound predicateIdentifier:(int)identifier;
- (id)_personNameKeys;
- (id)_personNonNameKeys;
- (id)queryWhereStringForPredicateIdentifier:(int)identifier;
- (id)queryRankStringForPredicateIdentifier:(int)identifier;
- (void)ab_bindJoinClauseComponentOfStatement:(struct CPSqliteStatement { struct CPSqliteConnection * x0; struct sqlite3_stmt * x1; double x2; BOOL x3; } *)statement withBindingOffset:(int *)offset predicateIdentifier:(int)identifier;
- (void)ab_bindWhereClauseComponentOfStatement:(struct CPSqliteStatement { struct CPSqliteConnection * x0; struct sqlite3_stmt * x1; double x2; BOOL x3; } *)statement withBindingOffset:(int *)offset predicateIdentifier:(int)identifier;
- (id)predicateFormat;
@end

#endif /* ABNamePredicate_h */
