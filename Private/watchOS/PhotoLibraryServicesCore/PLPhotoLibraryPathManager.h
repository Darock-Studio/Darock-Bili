//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLPhotoLibraryPathManager_h
#define PLPhotoLibraryPathManager_h
@import Foundation;

#include "PLFileSystemCapabilities.h"
#include "PLPhotoLibraryPathManager-Protocol.h"
#include "PLPhotoLibraryPathManagerCore.h"

@class NSString, NSURL;

@interface PLPhotoLibraryPathManager : NSObject<PLPhotoLibraryPathManager> {
  /* instance variables */
  PLPhotoLibraryPathManagerCore *_internalPathManager;
  NSString *_singletonPhotoLibraryPath;
  unsigned char _format;
}

@property (readonly) BOOL isUBF;
@property (readonly) BOOL isDCIM;
@property (readonly) unsigned short bundleScope;
@property (readonly, copy) NSURL *libraryURL;
@property (readonly, copy) NSString *baseDirectory;
@property (readonly) PLFileSystemCapabilities *capabilities;
@property (readonly, copy) NSString *assetUUIDRecoveryMappingPath;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)throwMultiLibraryAPIMisuseForLibraryPath:(id)path;
+ (void)throwMultiLibraryAPIMisuse;
+ (BOOL)bundleScopeShouldBePersistedForRebuild:(unsigned short)rebuild;
+ (id)managedPathWithUuid:(const char *)uuid base:(const char *)base fileMarker:(const char *)marker extension:(const char *)extension;
+ (BOOL)isMultiLibraryModeEnabled;
+ (void)enableMultiLibraryMode;
+ (void)assertSingleLibraryMode;
+ (id)systemLibraryPathManager;
+ (BOOL)isSystemPhotoLibraryURL:(id)url;
+ (id)systemLibraryURL;
+ (id)systemLibraryBaseDirectory;
+ (BOOL)setSystemLibraryURL:(id)url options:(unsigned short)options error:(id *)error;
+ (id)wellKnownPhotoLibraryURLForIdentifier:(long long)identifier;
+ (long long)wellKnownPhotoLibraryIdentifierForURL:(id)url;
+ (unsigned long long)libraryCreateOptionsForWellKnownLibraryIdentifier:(long long)identifier;
+ (BOOL)shouldAutoUpgradeWellKnownPhotoLibraryIdentifier:(long long)identifier;
+ (BOOL)ignoreFilesystemCheckForWellKnownPhotoLibraryIdentifier:(long long)identifier;
+ (BOOL)shouldProcessHighlightsForWellKnownPhotoLibraryIdentifier:(long long)identifier;
+ (id)allPhotosPathsOnThisDevice;

/* instance methods */
- (id)init;
- (id)initWithBaseDirectory:(id)directory;
- (id)initWithLibraryURL:(id)url;
- (id)initWithLibraryURL:(id)url bundleScope:(unsigned short)scope;
- (id)initWithLibraryURL:(id)url bundleScope:(unsigned short)scope libraryFormat:(unsigned char)format;
- (unsigned char)_bundleFormatFromLibraryURL:(id)url libraryFormat:(unsigned char)format;
- (id)redactedDescription;
- (void)setOrCompareLibraryURL:(id)url;
- (id)forwardingTargetForSelector:(SEL)selector;
- (id)timeMachineExclusionPathForPathType:(unsigned char)type;
- (BOOL)createTimeMachineExclusionPathsWithError:(id *)error;
- (void)setBackupExclusionAttributesForWellKnownLibrariesOrWithCreateOptions:(unsigned long long)options;
- (id)sqliteErrorIndicatorFilePath;
- (id)rebuildHistoryFilePath;
@end

#endif /* PLPhotoLibraryPathManager_h */
