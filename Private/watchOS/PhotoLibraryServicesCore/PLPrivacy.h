//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLPrivacy_h
#define PLPrivacy_h
@import Foundation;

#include "PLAssetsdPrivacySupportClient.h"

@protocol OS_dispatch_queue;

@interface PLPrivacy : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_isolationQueue;
  NSObject<OS_dispatch_queue> *_callbackQueue;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _cachedClientAuthLock;
  long long _cachedClientAuthRightFullAccess;
  long long _cachedClientAuthRightAddOnly;
  PLAssetsdPrivacySupportClient *_privacySupportClient;
}

@property BOOL hasHandledLimitedLibraryReprompt;
@property (nonatomic) BOOL limitedLibrarySupported;

/* class methods */
+ (id)sharedInstance;
+ (id)_logDictionaryFromPhotosPickerClientLogFile:(id)file;

/* instance methods */
- (id)init;
- (long long)_resolvePreflightStatusForScope:(long long)scope;
- (void)_setAuthStatus:(long long)status scope:(long long)scope;
- (long long)_authStatusForScope:(long long)scope;
- (void)_checkAuthStatusForPhotosAccessScope:(long long)scope preflightStatus:(long long)status promptIfUnknown:(BOOL)unknown resultHandler:(id /* block */)handler;
- (void)_isPhotosAccessAllowedWithScope:(long long)scope promptIfUnknown:(BOOL)unknown synchronous:(BOOL)synchronous resultHandler:(id /* block */)handler;
- (void)checkPhotosAccessAllowedWithScope:(long long)scope handler:(id /* block */)handler;
- (long long)checkPhotosAccessAllowedWithScope:(long long)scope;
- (long long)photosAccessAllowedWithScope:(long long)scope;
- (long long)photosAccessAllowedWithScope:(long long)scope auditToken:(struct { unsigned int x0[8] })token clientAuthorization:(id)authorization;
- (void)presentAsyncPromptForLimitedLibraryPickerIfNeeded;
- (void)requestLimitedLibraryPromptForApplicationIdentifier:(id)identifier;
- (void)reportPhotosUseWithClientAuthorization:(id)authorization;
- (void)logPhotosAccessWithClientAuthorization:(id)authorization;
- (void)logPhotosAccessWithPhotoPickerClientIdentification:(id)identification;
- (void)logPhotosAccessWithSelfAuditToken;
- (void)logPhotosPickerPresentedLibraryForClient:(id)client usingOptions:(long long)options;
- (id)photosPickerPresentedLibraryLogsByClient;
- (id)photosPickerPresentedLibraryLogForClient:(id)client;
- (BOOL)isLimitedLibrarySupported;
@end

#endif /* PLPrivacy_h */
