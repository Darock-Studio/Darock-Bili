//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLAssetsdCloudInternalServiceProtocol_Protocol_h
#define PLAssetsdCloudInternalServiceProtocol_Protocol_h
@import Foundation;

@protocol PLAssetsdCloudInternalServiceProtocol <NSObject>
/* instance methods */
- (void)createPhotostreamAlbumWithStreamID:(id)id;
- (void)enablePhotostreamsWithStreamID:(id)id;
- (void)updateSharedAlbumsCachedServerConfigurationLimits;
- (void)cloudSharingSpaceManagementRequestWithType:(unsigned long long)type optionalBytesToPurge:(unsigned long long)purge reply:(id /* block */)reply;
- (void)keyForEmailAddress:(id)address reply:(id /* block */)reply;
- (void)emailAddressForKey:(long long)key reply:(id /* block */)reply;
- (void)personInfoDictionaryForPersonID:(id)id reply:(id /* block */)reply;
- (void)setPersonInfoDictionary:(id)dictionary forPersonID:(id)id;
- (void)isReadyForCloudPhotoLibraryWithReply:(id /* block */)reply;
- (void)isReadyForAnalysisQuickCheckWithReply:(id /* block */)reply;
- (void)isReadyForAnalysisWithReply:(id /* block */)reply;
- (void)shouldAutoEnableiCPLOnOSXWithReply:(id /* block */)reply;
- (void)syncCloudPhotoLibrary;
- (void)setCloudPhotoLibraryEnabledState:(BOOL)state;
- (void)setCloudPhotoLibraryPauseState:(BOOL)state reason:(short)reason;
- (void)rampingRequestForResourceType:(unsigned long long)type numRequested:(unsigned long long)requested reply:(id /* block */)reply;
- (void)getCurrentTransferProgress:(id /* block */)progress;
- (void)getNotUploadedCount:(id /* block */)count;
- (void)getSystemBudgetsWithReply:(id /* block */)reply;
- (void)overrideSystemBudgetsForSyncSession:(BOOL)session pauseReason:(id)reason systemBudgets:(unsigned long long)budgets reply:(id /* block */)reply;
- (void)publishShareWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)fetchShareWithURL:(id)url ignoreExistingShare:(BOOL)share reply:(id /* block */)reply;
- (void)acceptShareWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)forceSyncMomentShareWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)queryUserIdentitiesWithEmails:(id)emails phoneNumbers:(id)numbers reply:(id /* block */)reply;
- (void)getResetSyncStatusWithReply:(id /* block */)reply;
- (id)activateLibraryScopeWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)deactivateLibraryScopeWithUUID:(id)uuid reply:(id /* block */)reply;
- (id)markOnboardingPreviewAssetsByProcessingRulesOnLibraryScopeWithUUID:(id)uuid excludePersonUUIDs:(id)uuids reply:(id /* block */)reply;
- (void)confirmAllRemainingOnboardingPreviewAssetsOnLibraryScopeWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)requestDeviceLibraryConfigurationChange:(long long)change reply:(id /* block */)reply;
- (void)resetLocalOnlyLibraryScopesAndAllLibraryScopeAssetStatesWithReply:(id /* block */)reply;
- (void)startExitFromLibraryScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(long long)source reply:(id /* block */)reply;
- (void)removeParticipantsWithParticipantUUIDs:(id)uuids fromLibraryScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(long long)source reply:(id /* block */)reply;
- (void)sharedLibraryRampCheckWithReply:(id /* block */)reply;
- (void)userViewedSharedLibraryParticipantAssetTrashNotificationWithReply:(id /* block */)reply;
- (void)forceParticipantAssetTrashNotificationWithReply:(id /* block */)reply;
- (void)refreshLibraryScopeWithIdentifier:(id)identifier reply:(id /* block */)reply;
- (void)getLibraryScopeStatusCountsForScopeWithIdentifier:(id)identifier reply:(id /* block */)reply;
- (void)unsharePendingAssetsSharedToScopeWithIdentifier:(id)identifier;
- (void)markResourcesPurgeableWithUrgency:(long long)urgency assetUuids:(id)uuids reply:(id /* block */)reply;
- (void)getCPLConfigrationValueForKey:(id)key reply:(id /* block */)reply;
@end

#endif /* PLAssetsdCloudInternalServiceProtocol_Protocol_h */
