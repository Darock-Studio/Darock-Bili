//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLFormatChooser_h
#define PLFormatChooser_h
@import Foundation;

#include "PLDeviceConfiguration.h"
#include "PLImageFormat.h"

@class NSArray;

@interface PLFormatChooser : NSObject {
  /* instance variables */
  PLDeviceConfiguration *_deviceConfiguration;
  PLImageFormat *_posterThumbnailFormat;
}

@property (readonly, nonatomic) NSArray *supportedDerivativeFormats;
@property (readonly, nonatomic) PLImageFormat *fullScreenFormatForCurrentDevice;
@property (readonly, nonatomic) PLImageFormat *indexSheetUnbakedFormat;
@property (readonly, nonatomic) PLImageFormat *largestUncroppedNonJPEGThumbnailFormat;
@property (readonly, nonatomic) PLImageFormat *masterThumbnailFormat;
@property (readonly, nonatomic) PLImageFormat *portraitScrubberThumbnailFormat;
@property (readonly, nonatomic) PLImageFormat *landscapeScrubberThumbnailFormat;

/* class methods */
+ (id)defaultFormatChooser;
+ (id)_suppportedFullSizeFormatIDs;
+ (struct CGSize { double x0; double x1; })_desiredImageSizeForRequestedViewSizeInPixels:(struct CGSize { double x0; double x1; })pixels isAspectFill:(BOOL)fill srcAspectRatio:(double)ratio;

/* instance methods */
- (id)initWithDeviceConfiguration:(id)configuration;
- (id)derivativeFormatThatFitsSize:(struct CGSize { double x0; double x1; })size contentMode:(long long)mode demoteFactor:(double)factor srcAspectRatio:(double)ratio desiredImagePixelSize:(struct CGSize { double x0; double x1; } *)size;
- (id)_bestFormatWithSize:(struct CGSize { double x0; double x1; })size specificVersionType:(long long)type contentMode:(long long)mode demoteFactor:(double)factor srcAspectRatio:(double)ratio hasAdjustmentsHandler:(id /* block */)handler desiredImagePixelSize:(struct CGSize { double x0; double x1; } *)size;
- (id)_nextLargestAcceptableFormatForFormat:(id)format;
- (id)_standardDegradedFormatFallingBackFromFormat:(id)format;
- (id)_fastestDegradedFormatFallingBackFromFormat:(id)format;
- (void)chooseFormatsForSize:(struct CGSize { double x0; double x1; })size specificVersionType:(long long)type contentMode:(long long)mode demoteFactor:(double)factor srcAspectRatio:(double)ratio degradedFormatPolicy:(long long)policy hasAdjustmentsHandler:(id /* block */)handler desiredImagePixelSize:(struct CGSize { double x0; double x1; } *)size bestFormat:(id *)format degradedFormat:(id *)format;
- (struct CGSize { double x0; double x1; })posterThumbnailSize;
@end

#endif /* PLFormatChooser_h */
