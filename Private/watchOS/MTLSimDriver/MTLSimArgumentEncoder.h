//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLSimArgumentEncoder_h
#define MTLSimArgumentEncoder_h
@import Foundation;

#include "_MTLIndirectArgumentEncoder.h"
#include "MTLArgumentEncoderSPI-Protocol.h"
#include "MTLDevice-Protocol.h"
#include "MTLSimBuffer.h"
#include "MTLSimDevice.h"
#include "MTLSimIndirectArgumentBufferLayout.h"

@class NSString;

@interface MTLSimArgumentEncoder : _MTLIndirectArgumentEncoder<MTLArgumentEncoderSPI> {
  /* instance variables */
  unsigned int _reference;
  MTLSimBuffer *_argumentBuffer;
  unsigned long long _offset;
}

@property (readonly, @dynamic) unsigned int argumentEncoderRef;
@property (readonly, nonatomic) _MTLIndirectArgumentBufferLayout *layout;
@property (readonly) NSObject<MTLDevice> *device;
@property (copy) NSString *label;
@property (readonly) unsigned long long encodedLength;
@property (readonly) unsigned long long alignment;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDevice:(id)device reference:(unsigned int)reference layout:(id)layout data:(struct { unsigned short x0; unsigned int x1; } *)data;
- (void)dealloc;
- (void)setArgumentBuffer:(id)buffer offset:(unsigned long long)offset;
- (void)setVisibleFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setVisibleFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setIntersectionFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setIntersectionFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setVisibleFunctionTable:(id)table atIndex:(unsigned long long)index;
- (void)setVisibleFunctionTables:(const id *)tables withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setIntersectionFunctionTable:(id)table atIndex:(unsigned long long)index;
- (void)setIntersectionFunctionTables:(const id *)tables withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setBuffer:(id)buffer offset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setTexture:(id)texture atIndex:(unsigned long long)index;
- (void)setTextures:(const id *)textures withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setSamplerState:(id)state atIndex:(unsigned long long)index;
- (void)setSamplerStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void *)constantDataAtIndex:(unsigned long long)index;
- (void)setRenderPipelineState:(id)state atIndex:(unsigned long long)index;
- (void)setRenderPipelineStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setComputePipelineState:(id)state atIndex:(unsigned long long)index;
- (void)setComputePipelineStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setIndirectCommandBuffer:(id)buffer atIndex:(unsigned long long)index;
- (void)setIndirectCommandBuffers:(const id *)buffers withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
@end

#endif /* MTLSimArgumentEncoder_h */
