//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLSimCommandBuffer_h
#define MTLSimCommandBuffer_h
@import Foundation;

#include "_MTLCommandBuffer.h"
#include "MTLCommandBufferSPI-Protocol.h"
#include "MTLCommandQueue-Protocol.h"
#include "MTLDevice-Protocol.h"
#include "MTLSerializerCommandStream-Protocol.h"

@class MTLResourceList, NSDictionary, NSError, NSMutableDictionary, NSString;
@protocol MTLDeadlineProfile, MTLLogContainer;

@interface MTLSimCommandBuffer : _MTLCommandBuffer<MTLCommandBufferSPI, MTLSerializerCommandStream> {
  /* instance variables */
  struct StorageEntry { unsigned long long x0; void * x1; id x2; struct StorageEntry * x3; } * commandHead;
  struct BufferStorageEntry { id x0; unsigned long long x1; struct BufferStorageEntry * x2; } * bufferHead;
  unsigned long long segmentCount;
  struct StorageEntry { unsigned long long x0; void * x1; id x2; struct StorageEntry * x3; } * commandCurrentStorage;
  struct StorageEntry { unsigned long long x0; void * x1; id x2; struct StorageEntry * x3; } * commandTail;
  struct StorageEntry { unsigned long long x0; void * x1; id x2; struct StorageEntry * x3; } * commandPrevious;
  struct BufferStorageEntry { id x0; unsigned long long x1; struct BufferStorageEntry * x2; } * bufferCurrentStorage;
  unsigned long long currentStorageOffset;
  BOOL continuation;
  unsigned int _reference;
  unsigned long long _protectionOptions;
  MTLResourceList *_resourceList;
}

@property (readonly) unsigned int commandBufferRef;
@property (readonly, nonatomic) unsigned long long listIndex;
@property BOOL profilingEnabled;
@property (readonly) NSDictionary *profilingResults;
@property (readonly, nonatomic) NSMutableDictionary *userDictionary;
@property (readonly) unsigned long long globalTraceObjectID;
@property (readonly, retain) NSObject<MTLDeadlineProfile> *deadlineProfile;
@property (readonly) NSObject<MTLDevice> *device;
@property (readonly) NSObject<MTLCommandQueue> *commandQueue;
@property (readonly) BOOL retainedReferences;
@property (readonly) unsigned long long errorOptions;
@property (copy) NSString *label;
@property (readonly) double kernelStartTime;
@property (readonly) double kernelEndTime;
@property (readonly) NSObject<MTLLogContainer> *logs;
@property (readonly) double GPUStartTime;
@property (readonly) double GPUEndTime;
@property (readonly) unsigned long long status;
@property (readonly) NSError *error;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy) id /* block */ splitHandler;

/* instance methods */
- (id)initWithQueue:(id)queue retainedReferences:(BOOL)references;
- (void)dealloc;
- (BOOL)commitAndWaitUntilSubmitted;
- (id)blitCommandEncoder;
- (id)blitCommandEncoderWithDescriptor:(id)descriptor;
- (id)computeCommandEncoder;
- (id)computeCommandEncoderWithDispatchType:(unsigned long long)type;
- (id)computeCommandEncoderWithDescriptor:(id)descriptor;
- (id)resourceStateCommandEncoderWithDescriptor:(id)descriptor;
- (id)parallelRenderCommandEncoderWithDescriptor:(id)descriptor;
- (id)renderCommandEncoderWithDescriptor:(id)descriptor;
- (void *)getCommandBytes:(unsigned long long)bytes forCommand:(unsigned int)command;
- (void)encodeSignalEvent:(id)event value:(unsigned long long)value;
- (void)encodeWaitForEvent:(id)event value:(unsigned long long)value timeout:(unsigned int)timeout;
- (void)encodeWaitForEvent:(id)event value:(unsigned long long)value;
- (void)encodeSignalEvent:(id)event value:(unsigned long long)value agentMask:(unsigned long long)mask;
- (id)resourceStateCommandEncoder;
- (BOOL)addResourceReference:(id)reference isWrite:(BOOL)write;
- (BOOL)addStateReference:(id)reference;
- (void *)getBufferBytes:(unsigned long long)bytes alignment:(unsigned long long)alignment buffer:(id *)buffer offset:(unsigned long long *)offset;
- (void)split;
- (void)endEncoding;
- (void *)getCommandBufferBytes:(unsigned long long)bytes;
- (void)merge:(id)merge;
- (void)beginContinuation;
- (void)addPurgedHeap:(id)heap;
- (void)addPurgedResource:(id)resource;
- (void)setProtectionOptions:(unsigned long long)options;
- (unsigned long long)protectionOptions;
@end

#endif /* MTLSimCommandBuffer_h */
