//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1161.4.0.0.0
//
#ifndef NPKPassSyncService_h
#define NPKPassSyncService_h
@import Foundation;

#include "IDSServiceDelegate-Protocol.h"
#include "NPKPassSyncEngine.h"
#include "NPKPassSyncEngineDataSource-Protocol.h"
#include "NPKPassSyncEngineDelegate-Protocol.h"
#include "NPKPassSyncServiceSyncStatus.h"

@class IDSService, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface NPKPassSyncService : NSObject<IDSServiceDelegate, NPKPassSyncEngineDelegate, NPKPassSyncEngineDataSource>

@property (retain, nonatomic) NPKPassSyncEngine *passSyncEngine;
@property (retain, nonatomic) IDSService *passSyncService;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *passSyncQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *passSyncEngineArchiveTimer;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *passSyncEngineSyncTimer;
@property (retain, nonatomic) NPKPassSyncServiceSyncStatus *passSyncStatus;
@property (nonatomic) BOOL dropAllMessages;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithPassSyncEngineRole:(unsigned long long)role;
- (void)start;
- (void)teardownSync;
- (void)handlePassLibraryChanged;
- (void)updatePassLibrary;
- (void)requestAssociatedData:(unsigned long long)data forPassWithUniqueID:(id)id;
- (void)handleSettingsChanged:(unsigned long long)changed forPassWithUniqueID:(id)id;
- (void)handleCatalogChangeWithCompanionCatalog:(id)catalog watchCatalog:(id)catalog;
- (void)suggestSync;
- (id)currentLibraryPassSyncStateWithReconciledState:(id)state;
- (unsigned long long)settingsForPassWithUniqueID:(id)id;
- (void)handleIncomingPassSettings:(unsigned long long)settings forPassWithUniqueID:(id)id;
- (void)handleIncomingCompanionCatalog:(id)catalog watchCatalog:(id)catalog;
- (id)companionCatalogToSendWithStateChange;
- (id)watchCatalogToSendWithStateChange;
- (void)syncStateChanged:(id)changed;
- (void)syncStateChangeProcessed:(id)processed;
- (void)reconciledStateUnrecognized:(id)unrecognized;
- (void)proposedReconciledState:(id)state;
- (void)reconciledStateAccepted:(id)accepted;
- (void)passSettingsChanged:(id)changed;
- (void)catalogChanged:(id)changed;
- (void)associatedPassDataRequested:(id)requested;
- (void)passSyncEngine:(id)engine sendStateChange:(id)change;
- (void)passSyncEngine:(id)engine sendStateChangeProcessedWithUUID:(id)uuid changeAccepted:(BOOL)accepted fullPassRequired:(BOOL)required;
- (void)passSyncEngine:(id)engine sendReconciledStateUnrecognizedWithHash:(id)hash version:(unsigned long long)version currentPassSyncState:(id)state;
- (void)passSyncEngine:(id)engine sendProposedReconciledState:(id)state;
- (void)passSyncEngine:(id)engine sendReconciledStateAcceptedWithHash:(id)hash;
- (void)passSyncEngineStateChanged:(id)changed;
- (void)passSyncEngine:(id)engine receivedStateChangeProcessed:(id)processed changeAccepted:(BOOL)accepted;
- (void)passSyncEngine:(id)engine finishedProcessingChange:(id)change;
- (void)passSyncEngine:(id)engine requestsAddPassData:(id)data forSyncStateItem:(id)item completion:(id /* block */)completion;
- (void)passSyncEngine:(id)engine requestsUpdatePassData:(id)data forSyncStateItem:(id)item baseManifestHashForPartialUpdate:(id)update remoteAssetsForPartialUpdate:(id)update completion:(id /* block */)completion;
- (void)passSyncEngine:(id)engine requestsRemovePassWithUniqueID:(id)id completion:(id /* block */)completion;
- (id)passSyncEngine:(id)engine partialDataForPassWithUniqueID:(id)id baseManifest:(id)manifest outRemoteAssets:(id *)assets;
- (id)passSyncEngine:(id)engine dataForPassWithUniqueID:(id)id;
- (id)passSyncEngineNeedsUpdatedPassLibraryState:(id)state;
- (void)handleRequestedAssociatedData:(unsigned long long)data forPassWithUniqueID:(id)id;
- (void)_provideUpdatedLibraryStateToSyncEngineAndSyncIfNecessary:(BOOL)necessary;
- (void)_archiveTimerFired;
- (void)_syncWhenAppropriate;
- (void)_syncNow;
- (void)_ensureSyncTimerIsSet;
- (void)_syncTimerFired;
- (id)_archivedPassSyncEngine;
@end

#endif /* NPKPassSyncService_h */
