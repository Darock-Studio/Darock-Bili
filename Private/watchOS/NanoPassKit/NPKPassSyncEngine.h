//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1161.4.0.0.0
//
#ifndef NPKPassSyncEngine_h
#define NPKPassSyncEngine_h
@import Foundation;

#include "NPKPassSyncChange.h"
#include "NPKPassSyncEngineDataSource-Protocol.h"
#include "NPKPassSyncEngineDelegate-Protocol.h"
#include "NPKPassSyncState.h"
#include "NSSecureCoding-Protocol.h"

@class BOOL *, NSString;

@interface NPKPassSyncEngine : NSObject<NSSecureCoding>

@property (nonatomic) BOOL requireAppleAccountForPaymentPasses;
@property (retain, nonatomic) NPKPassSyncState *backupState;
@property (weak, nonatomic) NSObject<NPKPassSyncEngineDelegate> *delegate;
@property (weak, nonatomic) NSObject<NPKPassSyncEngineDataSource> *dataSource;
@property (retain, nonatomic) NPKPassSyncState *libraryState;
@property (retain, nonatomic) NPKPassSyncState *reconciledState;
@property (retain, nonatomic) NPKPassSyncState *candidateState;
@property (retain, nonatomic) NPKPassSyncChange *candidateChange;
@property (retain, nonatomic) NPKPassSyncChange *processingChange;
@property (readonly, nonatomic) NSString *engineName;
@property (readonly, nonatomic) unsigned long long engineRole;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithRole:(unsigned long long)role;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)syncIfNecessary;
- (void)handleStateChange:(id)change;
- (void)_handleStateChange:(id)change attemptRecoverReconcileStateVersionMismatch:(BOOL)mismatch;
- (void)handleStateChangeProcessedWithUUID:(id)uuid changeAccepted:(BOOL)accepted fullPassRequired:(BOOL)required;
- (void)handleReconciledStateUnrecognizedWithHash:(id)hash version:(unsigned long long)version passSyncState:(id)state;
- (void)handleProposedReconciledState:(id)state;
- (void)handleReconciledStateAcceptedWithHash:(id)hash;
- (void)setMinSyncStateVersion:(unsigned long long)version;
- (void)_sendNextStateChange;
- (void)_shouldProcessAddOrUpdateChangeOfType:(unsigned long long)type changeSyncStateItem:(id)item librarySyncStateItem:(id)item reconciledSyncStateItem:(id)item candidateChange:(id)change shouldApplyToPassLibrary:(BOOL *)library shouldApplyToReconciledState:(BOOL *)state;
- (void)_sendStateChange:(id)change;
- (void)_sendStateChangeProcessedWithUUID:(id)uuid changeAccepted:(BOOL)accepted fullPassRequired:(BOOL)required;
- (void)_sendReconciledStateUnrecognizedWithHash:(id)hash version:(unsigned long long)version currentPassSyncState:(id)state;
- (void)_sendReconciledStateAcceptedWithHash:(id)hash;
- (void)_sendProposedReconciledState:(id)state;
- (void)_requestAddPassData:(id)data forSyncStateItem:(id)item completion:(id /* block */)completion;
- (void)_requestUpdatePassData:(id)data forSyncStateItem:(id)item baseManifestHashForPartialUpdate:(id)update remoteAssetsForPartialUpdate:(id)update completion:(id /* block */)completion;
- (void)_requestRemovePassWithUniqueID:(id)id completion:(id /* block */)completion;
- (void)_unexpectedEventOccurred;
- (void)_engineStateChanged;
- (void)_receivedStateChangeProcessed:(id)processed changeAccepted:(BOOL)accepted;
- (void)_finishedProcessingChange:(id)change;
@end

#endif /* NPKPassSyncEngine_h */
