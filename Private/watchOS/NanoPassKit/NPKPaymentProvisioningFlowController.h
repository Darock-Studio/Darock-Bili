//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1161.4.0.0.0
//
#ifndef NPKPaymentProvisioningFlowController_h
#define NPKPaymentProvisioningFlowController_h
@import Foundation;

#include "NPKFidoAuthCoordinator.h"
#include "NPKPaymentProvisioningFlowControllerPreconditionsStepContext.h"
#include "NPKPaymentProvisioningFlowControllerProtocol-Protocol.h"
#include "NPKPaymentProvisioningFlowControllerRequestContext.h"
#include "NSObject-Protocol.h"
#include "PKContactlessCardIngesterDelegate-Protocol.h"
#include "PKPaymentAuthorizationControllerDelegate-Protocol.h"
#include "PKPaymentAuthorizationControllerPrivateDelegate-Protocol.h"

@class NSData, NSDecimalNumber, NSString, PKAddPaymentPassRequest, PKAddPaymentPassRequestConfiguration, PKAppleBalanceCredential, PKContactlessCardIngester, PKPaymentAuthorizationController, PKPaymentCredential, PKPaymentPass, PKPaymentProvisioningController, PKPaymentProvisioningMethodMetadata, PKPaymentRequest, PKPaymentSetupFieldsModel, PKPaymentSetupProduct, PKPaymentWebService, PKServiceProviderPurchase;
@protocol NPKPaymentProvisioningFlowControllerDelegate, OS_dispatch_source;

@interface NPKPaymentProvisioningFlowController : NSObject<PKPaymentAuthorizationControllerDelegate, PKPaymentAuthorizationControllerPrivateDelegate, PKContactlessCardIngesterDelegate, NPKPaymentProvisioningFlowControllerProtocol>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) PKAddPaymentPassRequestConfiguration *inAppProvisioningRequestConfiguration;
@property (retain, nonatomic) PKAddPaymentPassRequest *inAppProvisioningRequest;
@property (retain, nonatomic) NSData *inAppProvisioningPublicKeyHash;
@property (retain, nonatomic) NSData *inAppProvisioningNonce;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *inAppProvisioningGetRequestTimer;
@property (retain, nonatomic) NPKFidoAuthCoordinator *fidoAuthCoordinator;
@property (retain, nonatomic) PKPaymentWebService *webService;
@property (nonatomic) int currentStep;
@property (retain, nonatomic) NPKPaymentProvisioningFlowControllerPreconditionsStepContext *preconditionsRequestContext;
@property (retain, nonatomic) NSString *chooseCredentialsStepIdentifier;
@property (retain, nonatomic) NSString *immediatelyBeforeTermsStepIdentifier;
@property (retain, nonatomic) PKPaymentSetupFieldsModel *fieldsModel;
@property (retain, nonatomic) NSObject<NSObject> *progressNotificationToken;
@property (retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *provisioningProgressRequestContext;
@property (retain, nonatomic) PKPaymentPass *issuerVerificationPass;
@property (retain, nonatomic) PKPaymentCredential *currentCredential;
@property (retain, nonatomic) PKAppleBalanceCredential *currentAppleBalanceCredential;
@property (retain, nonatomic) PKPaymentSetupProduct *currentProduct;
@property (nonatomic) unsigned long long termsReason;
@property (nonatomic) BOOL termsAcceptedOutOfBand;
@property (retain, nonatomic) PKPaymentRequest *digitalIssuancePaymentRequest;
@property (retain, nonatomic) NSDecimalNumber *digitalIssuanceAmount;
@property (retain, nonatomic) PKServiceProviderPurchase *digitalIssuancePurchase;
@property (retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *digitalIssuanceAmountRequestContext;
@property (retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *digitalIssuancePaymentRequestContext;
@property (retain, nonatomic) PKPaymentAuthorizationController *authorizationController;
@property (retain, nonatomic) PKContactlessCardIngester *cardIngester;
@property (nonatomic) unsigned long long internalIngestionState;
@property (nonatomic) unsigned long long flowIngestionState;
@property (nonatomic) double ingestionProgress;
@property (nonatomic) unsigned long long ingestionStateOnRetry;
@property (retain, nonatomic) NSString *ingestionCardSessionToken;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *ingestionCardNotFoundTimer;
@property (retain, nonatomic) PKPaymentProvisioningMethodMetadata *ingestionMethodMetadata;
@property (retain, nonatomic) NPKPaymentProvisioningFlowControllerRequestContext *readerModeRequestContext;
@property (weak, nonatomic) NSObject<NPKPaymentProvisioningFlowControllerDelegate> *delegate;
@property (readonly, nonatomic) PKPaymentProvisioningController *provisioningController;
@property (readonly, nonatomic) long long setupContext;
@property (nonatomic) BOOL readerModeProvisioningSupported;
@property (nonatomic) BOOL digitalIssuanceSupported;
@property (nonatomic) BOOL separateLocalDeviceEntryRequired;
@property (retain, nonatomic) PKPaymentAuthorizationController *unitTestingAuthorizationController;
@property (retain, nonatomic) PKContactlessCardIngester *unitTestingCardIngester;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_readerModeEntryAllowedForProduct:(id)product;
+ (id)_readerModeResources;
+ (id)_physicalCardURLFromMetadata:(id)metadata forScale:(double)scale;
+ (id)_displayableErrorWithIneligibilityReason:(long long)reason learnMoreURL:(id)url;
+ (id)_displayableErrorWithUnderlyingVerificationError:(id)error;
+ (id)_displayableCouldNotAddCardErrorWithUnderlyingError:(id)error;
+ (id)_flowPickerSectionsWithContext:(long long)context provisioningController:(id)controller readerModeSupported:(BOOL)supported digitalIssuanceSupported:(BOOL)supported;
+ (id)_filteredPaymentSetupProducts:(id)products localCredentials:(id)credentials setupContext:(long long)context webService:(id)service mobileCarrierRegion:(id)region readerModeSupported:(BOOL)supported digitalIssuanceSupported:(BOOL)supported;
+ (void)_addGroupedItemsToSections:(id)sections fromModel:(id)model webService:(id)service paymentSection:(id /* block */)section;
+ (void)_addAppleBalanceToSections:(id)sections fromModel:(id)model;
+ (void)_addCreditDebitItemToSection:(id /* block */)section webService:(id)service;
+ (id)_authContext;
+ (BOOL)_isHSA2Enabled;
+ (BOOL)_localCredentials:(id)credentials containProduct:(id)product;
+ (id)_filterAssociatedCredentials:(id)credentials forProduct:(id)product;
+ (id)_productsArrayFromPickerSection:(id)section;

/* instance methods */
- (void)_transitionToReaderModeForProduct:(id)product requestContext:(id)context;
- (void)_handleReaderModeTermsAccepted:(id)accepted;
- (void)_startReaderModeIngestion:(id)ingestion;
- (void)_noteProvisioningStateChangeForReaderMode:(long long)mode;
- (void)_setupCardIngester;
- (void)_tearDownCardIngester;
- (void)contactlessCardIngester:(id)ingester didUpdateCardIngestionStatus:(unsigned long long)status;
- (void)_transitionToFlowIngestionState:(unsigned long long)state progress:(double)progress;
- (void)contactlessCardIngester:(id)ingester didFailToIngestCardWithError:(id)error resetProvisioning:(BOOL)provisioning isRecoverable:(BOOL)recoverable;
- (void)_startIngestion;
- (void)_startReadingCard;
- (void)_startTransferringCard;
- (void)_resetReaderModeProvisioningState;
- (void)_removePassIfNecessary;
- (void)_transitionToFlowIngestionState:(unsigned long long)state;
- (void)_transitionToIngestionProgress:(double)progress;
- (void)_cardNotFoundTimerFired;
- (void)_startCardNotFoundTimer;
- (void)_invalidateCardNotFoundTimer;
- (id)_titleForState:(unsigned long long)state;
- (id)_subtitleForState:(unsigned long long)state;
- (void)_transitionToDigitalIssuanceForProduct:(id)product requestContext:(id)context;
- (void)_handleDigitalIssuanceTermsAccepted:(id)accepted;
- (void)_canMakeDigitalIssuancePaymentsForTransitProducts:(id)products withCompletion:(id /* block */)completion;
- (void)_canMakeDigitalIssuancePaymentsForTransitProductsWithCompletion:(id /* block */)completion;
- (void)_startDigitalIssuancePaymentWithAmount:(id)amount requestContext:(id)context;
- (void)_startDigitalIssuancePaymentWithAmount:(id)amount requestContext:(id)context serviceProviderProduct:(id)product productItem:(id)item;
- (id)_paymentRequestForAmount:(id)amount;
- (id)_paymentRequestForAmount:(id)amount serviceProviderProduct:(id)product productItem:(id)item;
- (void)paymentAuthorizationController:(id)controller didAuthorizePayment:(id)payment handler:(id /* block */)handler;
- (void)paymentAuthorizationControllerDidFinish:(id)finish;
- (void)paymentAuthorizationController:(id)controller didAuthorizePurchase:(id)purchase completion:(id /* block */)completion;
- (id)_addCardErrorForPaymentRequest:(id)request;
- (id)initWithProvisioningController:(id)controller setupContext:(long long)context;
- (void)dealloc;
- (void)reset;
- (void)startProvisioningFlow:(id)flow;
- (void)acknowledgeWelcome:(id)welcome;
- (void)chooseFlowForPickerItem:(id)item requestContext:(id)context;
- (BOOL)hasCredentialsAssociatedWithProduct:(id)product;
- (void)_ensureMetadataForCredentials:(id)credentials updateHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)_cardsOnFileForProduct:(id)product updateHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)ensureMetadataForCredentials:(id)credentials requestContext:(id)context updateHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)chooseCardsOnFileFlowForProduct:(id)product requestContext:(id)context preloadMetadata:(BOOL)metadata;
- (void)_chooseProductFromFlowPickerSection:(id)section requestContext:(id)context transitioningToStep:(int)step;
- (void)chooseTransitProductFromFlowPickerSection:(id)section requestContext:(id)context;
- (void)chooseEMoneyProductFromFlowPickerSection:(id)section requestContext:(id)context;
- (void)prefetchCredentialsForProduct:(id)product requestContext:(id)context completionHandler:(id /* block */)handler;
- (void)chooseProductAndCredentialsFlowForProduct:(id)product credentials:(id)credentials requestContext:(id)context;
- (void)chooseProduct:(id)product includeCardsOnFile:(BOOL)file requestContext:(id)context;
- (void)chooseProduct:(id)product requestContext:(id)context;
- (void)handleDigitalIssuanceAmount:(id)amount requestContext:(id)context;
- (void)handleDigitalIssuanceAmount:(id)amount serviceProviderProduct:(id)product item:(id)item requestContext:(id)context;
- (void)chooseReaderMode:(id)mode;
- (void)handleReaderModeFields:(id)fields requestContext:(id)context;
- (void)chooseCredentials:(id)credentials requestContext:(id)context;
- (void)chooseManualEntry:(id)entry;
- (void)handleManualEntryFields:(id)fields credential:(id)credential requestContext:(id)context;
- (void)handleProductSelection:(id)selection requestContext:(id)context;
- (void)handlePasscodeUpgradeCompleteWithSuccess:(BOOL)success error:(id)error requestContext:(id)context;
- (void)acknowledgeAppleBalanceAccountDetailsWithProduct:(id)product requestContext:(id)context;
- (void)acceptTerms:(id)terms;
- (void)skipProvisioning:(id)provisioning;
- (void)acknowledgeMoreInformation:(id)information;
- (void)presentTransitServiceProviderProductsWithRequestContext:(id)context;
- (void)startIssuerVerificationFlowForPaymentPass:(id)pass requestContext:(id)context;
- (void)handleIssuerVerificationChannel:(id)channel requestContext:(id)context;
- (void)handleIssuerVerificationFields:(id)fields requestContext:(id)context;
- (void)handleIssuerVerificationCode:(id)code requestContext:(id)context;
- (void)skipIssuerVerification:(id)verification;
- (void)startInAppProvisioningFlowWithConfiguration:(id)configuration requestContext:(id)context;
- (void)handleIssuerApplicationAddRequest:(id)request requestContext:(id)context;
- (void)_performRequirementsOrEligibilityForInAppProvisioning:(id)provisioning;
- (void)_fetchInAppProvisioningCertificates:(id)certificates;
- (void)_fetchAddRequestWithCertificatesResponse:(id)response requestContext:(id)context;
- (void)_handleProvisioningFlowStarted:(id)started;
- (void)_handlePreconditionsVerified:(id)verified;
- (void)_handleProductChosen:(id)chosen includeCardsOnFile:(BOOL)file requestContext:(id)context;
- (void)_handleAppleBalanceProductChosen:(id)chosen requestContext:(id)context;
- (void)_handleAppleBalanceAccountDetailsAcknowledgedWithProduct:(id)product requestContext:(id)context;
- (void)_handleProceedWithCredentials:(id)credentials chosenByUser:(BOOL)user requestContext:(id)context;
- (void)_startProvisioningForCredential:(id)credential requestContext:(id)context;
- (void)_performNextActionForProvisioningState:(id)state;
- (id)_newPaymentRequirementsRequest;
- (id)_newPaymentEligibilityRequest;
- (id)_newPaymentProvisioningRequest;
- (void)_requestRequirements:(id)requirements;
- (void)_performEligibility:(id)eligibility;
- (void)_performProvisioningEligibility:(id)eligibility;
- (BOOL)_isResolveLocalEligibilityRequired;
- (void)_performResolveLocalEligibilityARequirements:(id)arequirements completion:(id /* block */)completion;
- (BOOL)_isValidateSecurityRequirementsRequired;
- (void)_performValidateSecurityRequirements:(id)requirements completion:(id /* block */)completion;
- (void)_handlePasscodeUpgradeCompleteWithSuccess:(BOOL)success error:(id)error requestContext:(id)context;
- (BOOL)_isPasscodeUpgradeRequired;
- (void)_performPasscodeUpgrade:(id)upgrade;
- (void)_performTerms:(id)terms;
- (void)_performProvision:(id)provision;
- (void)_performProvisionWithRequest:(id)request requestContext:(id)context assertion:(id)assertion;
- (void)_handleFinished:(id)finished;
- (void)_performNextStepForProvisionedPass:(id)pass requestContext:(id)context;
- (void)_performNextStepForProvisionedPass:(id)pass moreInfoAcknowledged:(BOOL)acknowledged requestContext:(id)context;
- (void)_handleVerificationResponseForPass:(id)pass context:(id)context;
- (void)_requestVerificationOptionsForPass:(id)pass context:(id)context;
- (void)_updateVerificationForPass:(id)pass channel:(id)channel context:(id)context;
- (void)_handleVerificationFieldsForPass:(id)pass context:(id)context;
- (void)_handleVerificationCode:(id)code forPass:(id)pass context:(id)context;
- (void)_downloadAndAddUpdatedPassForPaymentPass:(id)pass completion:(id /* block */)completion;
- (void)_downloadRemoteAssetsAndAddPaymentPass:(id)pass completion:(id /* block */)completion;
- (void)_provisioningLocalizedProgressDescriptionDidChange:(id)change;
- (void)_transitionToChooseFlowWithSections:(id)sections requestContext:(id)context;
- (void)_transitionToChooseProductWithProducts:(id)products requestContext:(id)context;
- (void)_transitionBasedOnTermsForReason:(unsigned long long)reason URL:(id)url requestContext:(id)context;
- (void)_transitionToProvisioningProgressWithRequestContext:(id)context;
- (void)_transitionToProvisioningForCredential:(id)credential product:(id)product requestContext:(id)context;
- (void)_transitionBasedOnCredentials:(id)credentials product:(id)product requestContext:(id)context;
- (void)_transitionToChooseCredentials:(id)credentials product:(id)product requestContext:(id)context;
- (void)_transitionToAppleBalanceAccountDetailsWithProduct:(id)product requestContext:(id)context;
- (id)_curatedDefaultPaymentSetupProvisioningFields;
- (void)_transitionToManualEntry:(id)entry;
- (id)_credentialReadonlyFieldIdentifiers;
- (id)_secondaryFilteredFields:(id)fields forCredential:(id)credential;
- (void)_transitionToSecondaryManualEntryWithFields:(id)fields credential:(id)credential requestContext:(id)context;
- (void)_transitionToProductDisambiguationWithProducts:(id)products requestContext:(id)context;
- (void)_transitionToMoreInformationWithItems:(id)items pass:(id)pass requestContext:(id)context;
- (void)_transitionToVerificationChannelsWithPaymentPass:(id)pass channels:(id)channels requestContext:(id)context;
- (void)_transitionToVerificationFieldsWithPaymentPass:(id)pass fields:(id)fields requestContext:(id)context;
- (void)_transitionToVerificationCodeWithPaymentPass:(id)pass channel:(id)channel requestContext:(id)context;
- (void)_handleEndOfProvisioningFlowForCurrentPass:(id)pass requestContext:(id)context;
- (void)_endProvisioningFlowWithSuccessForPass:(id)pass requestContext:(id)context;
- (void)_endProvisioningFlowWithError:(id)error requestContext:(id)context;
- (void)_performTransitionToStep:(int)step withContext:(id)context;
- (void)_sendDidTransitionFromStep:(int)step toStep:(int)step withContext:(id)context;
- (void)_sendDidEncounterError:(id)error requestContext:(id)context;
- (id)_requiredFieldsFromRequirementsResponseExcludingLocalFields;
- (id)_localRequiredFieldsFromRequirementsResponse;
- (BOOL)_fieldsModelCompleteExceptForLocalFields:(id)fields;
- (BOOL)_fieldRequiresLocalEntry:(id)entry;
- (id)_filteredPaymentSetupFields:(id)fields forLocalDeviceEntry:(BOOL)entry;
- (id)_requiredFieldsFromRequirementsResponse;
- (void)_configureWebServiceIfNecessary:(id)necessary completion:(id /* block */)completion;
- (void)_verifyPasscodeStateIfNecessaryWithCompletion:(id /* block */)completion;
- (void)_requestPassDetailsForAccountCredential:(id)credential withCompletionHandler:(id /* block */)handler;
- (BOOL)isReaderModeProvisioningSupported;
- (BOOL)isDigitalIssuanceSupported;
- (BOOL)isSeparateLocalDeviceEntryRequired;
@end

#endif /* NPKPaymentProvisioningFlowController_h */
