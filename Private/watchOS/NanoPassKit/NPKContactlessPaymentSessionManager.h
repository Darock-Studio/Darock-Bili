//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1161.4.0.0.0
//
#ifndef NPKContactlessPaymentSessionManager_h
#define NPKContactlessPaymentSessionManager_h
@import Foundation;

#include "NPKBarcodePaymentSession.h"
#include "NPKBarcodePaymentSessionDelegate-Protocol.h"
#include "NPKContactlessPaymentSessionState.h"
#include "NPKIdentityCredentialSuspensionReasonManagerObserver-Protocol.h"
#include "NPKObserverManager.h"
#include "NPKPassesDataSourceObserver-Protocol.h"
#include "NPKQuickPaymentSession.h"
#include "NPKQuickPaymentSessionCleanupDelegate.h"
#include "NPKQuickPaymentSessionDelegate-Protocol.h"

@class NSData, NSString, PKPass;
@protocol OS_dispatch_source;

@interface NPKContactlessPaymentSessionManager : NSObject<NPKBarcodePaymentSessionDelegate, NPKIdentityCredentialSuspensionReasonManagerObserver, NPKQuickPaymentSessionDelegate, NPKPassesDataSourceObserver>

@property (retain, nonatomic) NSData *credential;
@property (retain, nonatomic) NPKQuickPaymentSession *quickPaymentSession;
@property (retain, nonatomic) NPKQuickPaymentSessionCleanupDelegate *cleanupDelegate;
@property (retain, nonatomic) NPKContactlessPaymentSessionState *lastSessionState;
@property (retain, nonatomic) NPKObserverManager *observersManager;
@property (retain, nonatomic) PKPass *userSelectedPass;
@property (nonatomic) BOOL contactlessPaymentInterfaceVisible;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *contactlessInterfaceVisibilityTimeoutTimer;
@property (nonatomic) int serviceModeRequestNotifyToken;
@property (retain, nonatomic) NPKBarcodePaymentSession *barcodePaymentSession;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)handleContactlessPaymentSession:(id)session authenticationExpected:(BOOL)expected;
- (void)handleDidPresentPasscodeAuthentication;
- (void)handleContactlessPaymentInterfaceDidAppear;
- (void)handleContactlessPaymentInterfaceDidDisappear;
- (void)handleCredential:(id)credential;
- (void)handleUserSelectedPass:(id)pass;
- (void)handleDoublePressReceivedAtDate:(id)date;
- (void)handleServiceModeRequestedForPass:(id)pass;
- (void)handleRKEActionRequestedForTileItem:(id)item pass:(id)pass completion:(id /* block */)completion;
- (void)handleEndSessionRequestedForReason:(unsigned long long)reason;
- (void)handleAutomaticSelectionValueAddedServicePasses:(id)passes;
- (void)handleStandaloneTransactionWithAction:(unsigned long long)action forPass:(id)pass;
- (void)handleRKETransactionForPass:(id)pass fromTile:(id)tile;
- (void)handleExpressTransactionStatus:(unsigned long long)status forPass:(id)pass;
- (void)handleExpressTransactionStatus:(unsigned long long)status forPass:(id)pass paymentApplication:(id)application concreteTransactions:(id)transactions ephemeralTransaction:(id)transaction mutatedBalances:(id)balances appletState:(id)state;
- (void)handleLocalAuthenticationError:(id)error;
- (void)handleEndQuickPaymentSessionRequestedByUI;
- (void)handlePaymentBarcodeRequested;
- (void)handleRetryLoadingPaymentBarcodeRequested;
- (void)handleBarcodePaymentUserIntentionConfirmation:(BOOL)confirmation;
- (void)handleBarcodePaymentPinCodeEntry:(id)entry;
- (void)handleEndBarcodePaymentSessionRequestedByUI;
- (void)handleTransactionStarted;
- (BOOL)_handleIfPossibleIdentityUnavailablePassWithSession:(id)session;
- (void)handleISO18013TransactionStarted;
- (void)handleISO18013DataReleaseCanceled;
- (void)handleAuthorize18013RequestWithDataToRelease:(id)release credential:(id)credential;
- (void)handleFailureToReleaseDataWithError:(id)error;
- (void)identityCredentialSuspensionReasonManager:(id)manager didUpdateSuspensionReason:(unsigned long long)reason;
- (void)barcodePaymentSession:(id)session didReceivePaymentBarcode:(id)barcode;
- (void)barcodePaymentSession:(id)session didUpdateTransactionStatus:(unsigned long long)status withTransaction:(id)transaction;
- (void)_cleanupBarcodePaymentSession;
- (void)passesDataSource:(id)source didAddPasses:(id)passes;
- (void)passesDataSource:(id)source didRemovePasses:(id)passes;
- (void)passesDataSource:(id)source didUpdatePasses:(id)passes withStates:(id)states;
- (void)passesDataSourceDidReloadPasses:(id)passes;
- (void)passesDataSourceDidReorderPasses:(id)passes;
- (void)registerObserver:(id)observer withRelativePriority:(unsigned long long)priority;
- (void)registerObserver:(id)observer;
- (void)unregisterObserver:(id)observer;
- (void)paymentSession:(id)session didMakePassCurrent:(id)current;
- (void)paymentSession:(id)session willActivatePass:(id)pass;
- (void)paymentSession:(id)session didActivatePass:(id)pass;
- (void)paymentSession:(id)session didFailTransactionForPass:(id)pass withValueAddedServiceTransactions:(id)transactions forValueAddedServicePasses:(id)passes;
- (void)paymentSession:(id)session didCompleteTransactionForReason:(unsigned long long)reason withTransactionContext:(id)context shouldCleanupSession:(BOOL)session;
- (void)paymentSessionDidEnterField:(id)field;
- (void)paymentSessionDidExitField:(id)field;
- (void)paymentSessionDidSelectPayment:(id)payment;
- (void)paymentSessionDidSelectValueAddedService:(id)service;
- (void)paymentSessionDidReceiveStartTransaction:(id)transaction;
- (void)paymentSessionDidReceiveActivityTimeout:(id)timeout;
- (void)paymentSessionDidReceiveCredential:(id)credential;
- (void)paymentSessionDidReceiveAuthorizationTimeout:(id)timeout;
- (void)paymentSessionDidReceiveActivationError:(id)error;
- (void)paymentSessionDidReceiveTransactionError:(id)error;
- (void)paymentSessionIsWaitingToStart:(id)start;
- (void)paymentSessionDidStart:(id)start;
- (void)_cleanupQuickPaymentSession;
- (id)_managerContextForContactlessInterfaceTransactionContext:(id)context;
- (void)_handleValueAddedServiceTransactions:(id)transactions forValueAddedServicePasses:(id)passes paymentTransaction:(id)transaction outUserInterventionRequiredPasses:(id *)passes;
- (id)_baseSessionStateForUpdate;
- (void)_prepareSessionStateForSendingToObservers:(id)observers;
- (void)_sendSessionStateToObservers:(id)observers;
- (id)_sessionStateForTransactionContext:(id)context;
- (id)_sessionStateForExpressTransactionStatus:(unsigned long long)status pass:(id)pass paymentApplication:(id)application concreteTransactions:(id)transactions ephemeralTransaction:(id)transaction mutatedBalances:(id)balances appletState:(id)state;
- (void)_startContactlessInterfaceVisibilityTimeoutTimer;
- (void)_stopContactlessInterfaceVisibilityTimeoutTimer;
- (void)_handleContactlessInterfaceVisibilityTimeoutTimer;
- (void)_handleServiceModeRequestEnded;
- (void)_registerForServiceModeRequestNotification;
- (BOOL)_canHandleRKEActionForTileItem:(id)item pass:(id)pass outAction:(id *)action outFunction:(id *)function outError:(id *)error;
- (void)_handleRKEActionRequestedForPass:(id)pass action:(id)action function:(id)function withSession:(id)session completion:(id /* block */)completion;
- (id)_sessionStateForPaymentBarcode:(id)barcode;
- (id)_sessionStateForBarcodeTransactionStatus:(unsigned long long)status paymentBarcode:(id)barcode transaction:(id)transaction;
- (id)_sessionStateForUserCanceledBarcodeTransaction;
- (id)_paymentBalancesFromTransitAppletBalances:(id)balances;
- (id)_updatedPassItemFieldWithPaymentPass:(id)pass transitAppletBalances:(id)balances appletState:(id)state paymentApplication:(id)application;
@end

#endif /* NPKContactlessPaymentSessionManager_h */
