//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1161.4.0.0.0
//
#ifndef NPKQuickPaymentSession_h
#define NPKQuickPaymentSession_h
@import Foundation;

#include "NPKQuickPaymentSessionDelegate-Protocol.h"
#include "PKContactlessInterfaceSessionDelegate-Protocol.h"

@class NSData, NSDictionary, NSMutableArray, NSString, PKContactlessInterfaceSession, PKFieldDetector, PKPass, PKPaymentSessionHandle;
@protocol OS_dispatch_queue;

@interface NPKQuickPaymentSession : NSObject<PKContactlessInterfaceSessionDelegate> {
  /* instance variables */
  NSData *_credential;
  atomic unsigned int _atomicIsSwitchingSessionTypeCount;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *paymentSessionQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *internalQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;
@property (retain, nonatomic) PKPaymentSessionHandle *contactlessSessionHandle;
@property (retain, nonatomic) PKContactlessInterfaceSession *contactlessSession;
@property (nonatomic) unsigned long long contactlessValidity;
@property (nonatomic) unsigned long long authorizationValidity;
@property (nonatomic) BOOL confirmed;
@property (nonatomic) BOOL performedFirstActivation;
@property (nonatomic) BOOL deactivating;
@property (nonatomic) BOOL deactivated;
@property (retain, nonatomic) NSMutableArray *deactivationCompletionBlocks;
@property (retain, nonatomic) PKFieldDetector *fieldDetector;
@property (weak, nonatomic) NSObject<NPKQuickPaymentSessionDelegate> *delegate;
@property (retain, nonatomic) PKPass *currentPass;
@property (readonly, nonatomic) BOOL sessionStarted;
@property (readonly, nonatomic) BOOL isSwitchingSessionType;
@property (readonly, nonatomic) unsigned long long sessionType;
@property (retain, nonatomic) NSDictionary *vasPasses;
@property (nonatomic) BOOL deferAuthorization;
@property (nonatomic) BOOL requireFirstInQueue;
@property (nonatomic) BOOL inServiceMode;
@property (nonatomic) BOOL endSessionWhenAuthorizationIsConsumed;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sessionWithQueue:(id)queue;
+ (id)_outstandingSessionHashTable;
+ (BOOL)hasOutstandingSessions;
+ (void)_handleNewContactlessSession:(id)session;

/* instance methods */
- (id)initWithQueue:(id)queue;
- (void)dealloc;
- (BOOL)startSession;
- (BOOL)startSessionWithCompletion:(id /* block */)completion;
- (void)authorize18013RequestWithDataToRelease:(id)release credential:(id)credential;
- (void)executeRKEActionForPass:(id)pass function:(id)function action:(id)action withCompletion:(id /* block */)completion;
- (void)_internalQueue_setCurrentPass:(id)pass;
- (void)setCredential:(id)credential;
- (void)confirmSessionExpectingCredential:(BOOL)credential;
- (void)_updateSessionWithCredentialAndActivate;
- (void)deactivateSessionWithCompletion:(id /* block */)completion;
- (void)_internalQueue_deactivateSessionWithCompletion:(id /* block */)completion;
- (void)_internalQueue_updateContactlessSessionForPass:(id)pass vasPasses:(id)passes deferAuthorization:(BOOL)authorization;
- (BOOL)_sessionQueue_updateContactlessSessionForPass:(id)pass paymentApplication:(id)application vasPasses:(id)passes sessionConfirmed:(BOOL)confirmed deferAuthorization:(BOOL)authorization;
- (void)_sessionQueue_invokeAppropriateCallbackForActivationWithSuccess:(BOOL)success invokeOnSuccess:(BOOL)success contactlessValidity:(unsigned long long)validity forPass:(id)pass;
- (BOOL)_sessionQueue_startContactlessSessionWithSuccessfulCompletionOnInternalQueue:(id /* block */)queue;
- (BOOL)_sessionQueue_enablePersistentCardEmulation;
- (BOOL)_sessionQueue_authorizeWithUseCredential:(BOOL)credential deferAuthorizationIfCredentialUsed:(BOOL)used;
- (void)_internalQueue_updateSessionWithCurrentPassAndLoyaltyState;
- (void)_internalQueue_updateContactlessValidityAndPerformWork:(id /* block */)work;
- (void)_updateAuthorizationValidity;
- (void)_internalQueue_getContactlessAndAuthorizationValidityAndPerformWork:(id /* block */)work;
- (void)_checkContactlessValidity:(unsigned long long)validity performWork:(id /* block */)work;
- (void)_checkContactlessValidity:(unsigned long long)validity authorizationValidity:(unsigned long long)validity performWork:(id /* block */)work;
- (void)contactlessInterfaceSessionDidEnterField:(id)field withProperties:(id)properties;
- (void)contactlessInterfaceSessionDidExitField:(id)field;
- (void)contactlessInterfaceSessionDidFailTransaction:(id)transaction forPaymentApplication:(id)application paymentPass:(id)pass;
- (void)contactlessInterfaceSessionDidTimeout:(id)timeout forPaymentApplication:(id)application paymentPass:(id)pass valueAddedServicePasses:(id)passes;
- (void)contactlessInterfaceSessionDidFail:(id)fail forPaymentApplication:(id)application paymentPass:(id)pass valueAddedServicePasses:(id)passes;
- (void)contactlessInterfaceSessionDidStartTransaction:(id)transaction;
- (void)contactlessInterfaceSessionDidReceiveActivityTimeout:(id)timeout;
- (void)contactlessInterfaceSession:(id)session didFinishTransactionWithContext:(id)context;
- (void)contactlessInterfaceSessionDidReceiveUntrustedTerminal:(id)terminal;
- (void)contactlessInterfaceSessionDidTerminate:(id)terminate withErrorCode:(unsigned long long)code;
- (void)contactlessInterfaceSessionDidTerminate:(id)terminate;
- (void)contactlessInterfaceSession:(id)session didEndPersistentCardEmulationWithContext:(id)context;
- (void)contactlessInterfaceSessionDidSelectPayment:(id)payment;
- (void)contactlessInterfaceSessionDidSelectValueAddedService:(id)service;
- (void)contactlessInterfaceSessionDidFailDeferredAuthorization:(id)authorization;
- (void)contactlessInterfaceSessionHasPendingServerRequest:(id)request;
- (void)_handleTransactionCompleteWithContext:(id)context;
- (void)_handleConventionalTransactionWithContext:(id)context;
- (void)_loyaltyEngineConfigurationChanged:(id)changed;
- (void)_callbackQueue_invokeDidCompleteForReason:(unsigned long long)reason withTransactionContext:(id)context shouldCleanupSession:(BOOL)session;
- (BOOL)_invokeStateUpdateForReason:(unsigned long long)reason shouldCleanupSession:(BOOL)session;
- (void)_internalQueue_invokeDeactivationCompletionBlocks;
- (BOOL)isConfirmed;
- (BOOL)hasPerformedFirstActivation;
- (BOOL)isDeactivating;
- (BOOL)isDeactivated;
@end

#endif /* NPKQuickPaymentSession_h */
