//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 573.2.0.0.0
//
#ifndef ACHEarnedInstanceEntity_h
#define ACHEarnedInstanceEntity_h
@import Foundation;

#include "HDHealthEntity.h"
#include "HDNanoSyncEntity-Protocol.h"
#include "HDSyncEntity-Protocol.h"

@class NSString;

@interface ACHEarnedInstanceEntity : HDHealthEntity<HDSyncEntity, HDNanoSyncEntity>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)setSyncedEarnedInstancesObserver:(id)observer;
+ (id)syncedEarnedInstancesObserver;
+ (void)setJournalEntryAppliedObserver:(id)observer;
+ (id)journalEntryAppliedObserver;
+ (id)databaseTable;
+ (id)createTableSQL;
+ (const struct { id x0; id x1; unsigned char x2; } *)columnDefinitionsWithCount:(unsigned long long *)count;
+ (long long)protectionClass;
+ (id)entityEncoderForProfile:(id)profile transaction:(id)transaction purpose:(long long)purpose encodingOptions:(id)options authorizationFilter:(id /* block */)filter;
+ (id)insertEarnedInstances:(id)instances provenance:(long long)provenance useLegacySyncIdentity:(BOOL)identity profile:(id)profile databaseContext:(id)context error:(id *)error;
+ (id)allEarnedInstancesWithProfile:(id)profile error:(id *)error;
+ (id)mostRecentEarnedInstanceForTemplateUniqueName:(id)name profile:(id)profile error:(id *)error;
+ (id)earnedInstancesForTemplateUniqueName:(id)name profile:(id)profile error:(id *)error;
+ (unsigned long long)countOfEarnedInstancesForTemplateUniqueName:(id)name profile:(id)profile error:(id *)error;
+ (id)earnedInstancesForDateComponents:(id)components profile:(id)profile error:(id *)error;
+ (BOOL)removeEarnedInstances:(id)instances profile:(id)profile error:(id *)error;
+ (BOOL)removeEarnedInstancesForTemplateUniqueName:(id)name profile:(id)profile error:(id *)error;
+ (BOOL)removeAllEarnedInstancesWithProfile:(id)profile error:(id *)error;
+ (unsigned long long)_countOfEarnedInstancesWithPredicate:(id)predicate profile:(id)profile error:(id *)error;
+ (id)_earnedInstancesWithPredicate:(id)predicate profile:(id)profile error:(id *)error;
+ (id)_earnedInstancesWithPredicate:(id)predicate limit:(unsigned long long)limit ascendingByEarnedDate:(BOOL)date profile:(id)profile error:(id *)error;
+ (id)_insertEarnedInstances:(id)instances provenance:(long long)provenance useLegacySyncIdentity:(BOOL)identity profile:(id)profile databaseContext:(id)context error:(id *)error;
+ (id)_insertEarnedInstance:(id)instance provenance:(long long)provenance syncIdentity:(long long)identity database:(id)database error:(id *)error;
+ (BOOL)supportsSyncStore:(id)store;
+ (id)syncEntityIdentifier;
+ (id)decodeSyncObjectWithData:(id)data;
+ (id)syncEntityDependenciesForSyncProtocolVersion:(int)version;
+ (id)propertyForSyncProvenance;
+ (long long)nextSyncAnchorWithSession:(id)session startSyncAnchor:(long long)anchor profile:(id)profile error:(id *)error;
+ (BOOL)generateSyncObjectsForSession:(id)session syncAnchorRange:(struct HDSyncAnchorRange { long long x0; long long x1; })range profile:(id)profile messageHandler:(id)handler error:(id *)error;
+ (long long)receiveSyncObjects:(id)objects version:(struct { int x0; int x1; })version syncStore:(id)store profile:(id)profile error:(id *)error;
+ (unsigned long long)supportedNanoSyncDirectionsForProtocolVersion:(int)version;
+ (id)codableEarnedInstanceForEarnedInstanceInDatabase:(id)database profile:(id)profile error:(id *)error;
@end

#endif /* ACHEarnedInstanceEntity_h */
