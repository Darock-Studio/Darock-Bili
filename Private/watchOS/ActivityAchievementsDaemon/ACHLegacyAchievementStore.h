//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 573.2.0.0.0
//
#ifndef ACHLegacyAchievementStore_h
#define ACHLegacyAchievementStore_h
@import Foundation;

#include "ACHAchievementProgressEngine.h"
#include "ACHAchievementStoring-Protocol.h"
#include "ACHEarnedInstanceStore.h"
#include "ACHEarnedInstanceStoreObserving-Protocol.h"
#include "ACHTemplateAssetRegistry.h"
#include "ACHTemplateAssetRegistryDelegate-Protocol.h"
#include "ACHTemplateStore.h"
#include "ACHTemplateStoreObserving-Protocol.h"

@class NSHashTable, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface ACHLegacyAchievementStore : NSObject<ACHTemplateStoreObserving, ACHEarnedInstanceStoreObserving, ACHTemplateAssetRegistryDelegate, ACHAchievementStoring>

@property (retain, nonatomic) ACHTemplateStore *templateStore;
@property (retain, nonatomic) ACHEarnedInstanceStore *earnedInstanceStore;
@property (retain, nonatomic) ACHTemplateAssetRegistry *templateAssetRegistry;
@property (retain, nonatomic) ACHAchievementProgressEngine *progressProvider;
@property (retain, nonatomic) NSMutableDictionary *achievementsByTemplateUniqueName;
@property (retain, nonatomic) NSHashTable *observers;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *synchronizationQueue;
@property (nonatomic) BOOL templateStoreDidFinishInitialFetch;
@property (nonatomic) BOOL earnedInstanceStoreDidFinishInitialFetch;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithTemplateStore:(id)store earnedInstanceStore:(id)store templateAssetRegistry:(id)registry progressProvider:(id)provider;
- (void)loadAllAchievementsFromDatabaseIfNecessaryWithCompletionHandler:(id /* block */)handler;
- (id)achievementsForEarnedDateComponents:(id)components;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)_notifyObserversOfInitialFetchCompletion;
- (void)_notifyObserversOfNewAchievements:(id)achievements;
- (void)_notifyObserversOfUpdatedAchievements:(id)achievements;
- (void)_notifyObserversOfRemovedAchievements:(id)achievements;
- (id)allAchievements;
- (id)achievementWithTemplateUniqueName:(id)name;
- (id)ephemeralAchievementWithTemplateUniqueName:(id)name;
- (id)_queue_ephemeralMonthlyChallengeAchievementForTemplateUniqueName:(id)name earnedInstance:(id)instance;
- (void)recalculateProgressForAllAchievements;
- (void)processAchievementProgressUpdates:(id)updates;
- (void)requestUpdateProgressValuesForProgressProvider:(id)provider;
- (void)templateStoreDidFinishInitialFetch:(id)fetch;
- (void)templateStore:(id)store didAddNewTemplates:(id)templates;
- (void)templateStore:(id)store didRemoveTemplates:(id)templates;
- (void)earnedInstanceStoreDidFinishInitialFetch:(id)fetch;
- (void)earnedInstanceStore:(id)store didAddNewEarnedInstances:(id)instances;
- (void)earnedInstanceStoreDidReceiveSyncNotification:(id)notification;
- (void)earnedInstanceStore:(id)store didRemoveEarnedInstances:(id)instances;
- (void)_queue_addTemplatesToLocalStore:(id)store;
- (void)_queue_removeTemplatesFromLocalStore:(id)store;
- (void)templateAssetRegistry:(id)registry didUpdateResourcesForTemplatesWithSourceName:(id)name;
- (void)_queue_populateResourcesForAchievementsWithTemplateSourceName:(id)name;
- (void)_queue_addEarnedInstancesToLocalStore:(id)store;
- (void)_queue_removeEarnedInstancesFromLocalStore:(id)store;
- (void)progressEngine:(id)engine didUpdateProgressValuesForAchievements:(id)achievements;
- (void)progressEngine:(id)engine requestUpdateProgressValuesForProgressProvider:(id)provider;
- (void)progressProviderDidUpdateProgressValues:(id)values;
- (BOOL)_queue_addProgressAndGoalToAchievement:(id)achievement;
@end

#endif /* ACHLegacyAchievementStore_h */
