//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1852.4.7.0.3
//
#ifndef _DKKnowledgeStore_h
#define _DKKnowledgeStore_h
@import Foundation;

#include "_DKKnowledgeDeleting-Protocol.h"
#include "_DKKnowledgeEventStreamDeleting-Protocol.h"
#include "_DKKnowledgeQuerying-Protocol.h"
#include "_DKKnowledgeSaving-Protocol.h"
#include "_DKKnowledgeSynchronizing-Protocol.h"
#include "_DKPrivacyPolicyEnforcer.h"
#include "_DKRateLimitPolicyEnforcer.h"

@protocol OS_dispatch_queue, _DKKnowledgeQuerying><_DKKnowledgeSaving><_DKKnowledgeDeleting><_DKKnowledgeEventStreamDeleting;

@interface _DKKnowledgeStore : NSObject<_DKKnowledgeEventStreamDeleting, _DKKnowledgeSynchronizing, _DKKnowledgeSaving, _DKKnowledgeDeleting, _DKKnowledgeQuerying> {
  /* instance variables */
  NSObject<_DKKnowledgeQuerying><_DKKnowledgeSaving><_DKKnowledgeDeleting><_DKKnowledgeEventStreamDeleting> *_knowledgeStoreHandle;
  _DKRateLimitPolicyEnforcer *_rateLimitEnforcer;
  _DKPrivacyPolicyEnforcer *_privacyEnforcer;
  NSObject<OS_dispatch_queue> *_defaultQueue;
}

/* class methods */
+ (id)knowledgeStore;
+ (id)userKnowledgeStore;
+ (id)knowledgeStoreWithDirectReadOnlyAccess;
+ (id)userKnowledgeStoreWithDirectReadOnlyAccess;
+ (id)userKnowledgeStoreWithDirectReadWriteAccess;
+ (id)knowledgeStoreWithDirectReadOnlyAccessWithXPCStore:(id)xpcstore storeDirectory:(id)directory;
+ (id)knowledgeStoreWithDirectReadWriteAccess;

/* instance methods */
- (id)initWithKnowledgeStoreHandle:(id)handle readOnly:(BOOL)only;
- (id)init;
- (BOOL)saveObjects:(id)objects error:(id *)error;
- (void)saveObjects:(id)objects responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (void)saveObjects:(id)objects tracker:(id /* block */)tracker responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (BOOL)deleteObjects:(id)objects error:(id *)error;
- (void)deleteObjects:(id)objects responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (id)executeQuery:(id)query error:(id *)error;
- (void)executeQuery:(id)query responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (void)executeQuery:(id)query responseQueue:(id)queue;
- (unsigned long long)deleteAllEventsInEventStream:(id)stream error:(id *)error;
- (void)deleteAllEventsInEventStream:(id)stream responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (unsigned long long)deleteAllEventsMatchingPredicate:(id)predicate error:(id *)error;
- (void)deleteAllEventsMatchingPredicate:(id)predicate responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (BOOL)synchronizeWithError:(id *)error;
- (BOOL)synchronizeWithUrgency:(unsigned long long)urgency client:(id)client error:(id *)error;
- (void)synchronizeWithUrgency:(unsigned long long)urgency client:(id)client responseQueue:(id)queue completion:(id /* block */)completion;
- (BOOL)deleteRemoteState:(id *)state;
- (id)sourceDeviceIdentityFromObject:(id)object error:(id *)error;
- (id)sourceDeviceIdentityWithError:(id *)error;
- (id)deviceUUID;
@end

#endif /* _DKKnowledgeStore_h */
