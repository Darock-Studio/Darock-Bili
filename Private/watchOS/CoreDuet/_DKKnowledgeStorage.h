//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1852.4.7.0.3
//
#ifndef _DKKnowledgeStorage_h
#define _DKKnowledgeStorage_h
@import Foundation;

#include "_DKCoreDataStorage.h"
#include "_DKCoreDataStorageDelegate-Protocol.h"
#include "_DKKnowledgeDeleting-Protocol.h"
#include "_DKKnowledgeEventStreamDeleting-Protocol.h"
#include "_DKKnowledgeQuerying-Protocol.h"
#include "_DKKnowledgeSaving-Protocol.h"
#include "_DKTombstonePolicy.h"

@class NSHashTable, NSString, NSURL, NSUUID;
@protocol OS_dispatch_queue;

@interface _DKKnowledgeStorage : NSObject<_DKCoreDataStorageDelegate, _DKKnowledgeEventStreamDeleting, _DKKnowledgeSaving, _DKKnowledgeDeleting, _DKKnowledgeQuerying> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_defaultResponseQueue;
  NSString *_directory;
  NSURL *_modelURL;
  NSHashTable *_knowledgeStorageEventNotificationDelegates;
  unsigned long long _insertsAndDeletesObserverCount;
  NSString *_clientID;
  NSObject<OS_dispatch_queue> *_executionQueue;
}

@property (readonly, nonatomic) NSUUID *deviceUUID;
@property (retain) _DKTombstonePolicy *tombstonePolicy;
@property (nonatomic) BOOL enableBiomeMigrationDeletion;
@property (readonly, nonatomic) BOOL localOnly;
@property (readonly, nonatomic) _DKCoreDataStorage *storage;
@property (readonly, nonatomic) _DKCoreDataStorage *syncStorage;

/* class methods */
+ (id)storageWithShallowCopyFromStorage:(id)storage clientIdentifier:(id)identifier;
+ (id)storeWithDirectory:(id)directory readOnly:(BOOL)only;
+ (id)storageWithDirectory:(id)directory readOnly:(BOOL)only;
+ (id)storageWithDirectory:(id)directory readOnly:(BOOL)only localOnly:(BOOL)only;
+ (id)sourceDeviceIdentityFromObject:(id)object;

/* instance methods */
- (id)keyValueStoreForDomain:(id)domain;
- (id)syncPeersWithError:(id *)error;
- (BOOL)saveSyncPeer:(id)peer error:(id *)error;
- (void)removeSyncPeer:(id)peer;
- (BOOL)deleteStorage;
- (BOOL)deleteSyncStorage;
- (void)addKnowledgeStorageEventNotificationDelegate:(id)delegate;
- (void)removeKnowledgeStorageEventNotificationDelegate:(id)delegate;
- (void)dealloc;
- (void)saveObjects:(id)objects responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (void)saveObjects:(id)objects tracker:(id /* block */)tracker responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (BOOL)saveObjects:(id)objects error:(id *)error;
- (void)deleteObjects:(id)objects responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (BOOL)deleteObjects:(id)objects error:(id *)error;
- (void)deleteAllEventsInEventStream:(id)stream responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (unsigned long long)deleteAllEventsInEventStream:(id)stream error:(id *)error;
- (void)deleteAllEventsMatchingPredicate:(id)predicate responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (unsigned long long)deleteAllEventsMatchingPredicate:(id)predicate error:(id *)error;
- (void)executeQuery:(id)query responseQueue:(id)queue;
- (void)executeQuery:(id)query responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (id)executeQuery:(id)query error:(id *)error;
- (unsigned long long)deleteObjectsOlderThanDate:(id)date excludingPredicate:(id)predicate limit:(unsigned long long)limit;
- (unsigned long long)deleteEventsStartingEarlierThanDate:(id)date limit:(unsigned long long)limit;
- (unsigned long long)deleteEventsMatchingPredicate:(id)predicate limit:(unsigned long long)limit;
- (unsigned long long)deleteOldObjectsIfNeededToLimitTotalNumber:(unsigned long long)number excludingPredicate:(id)predicate limit:(unsigned long long)limit;
- (unsigned long long)deleteOrphanedEntities;
- (unsigned long long)eventCount;
- (unsigned long long)totalEventCountForStreams:(id)streams;
- (id)eventCountPerStreamName;
- (id)eventCountsForStreams:(id)streams;
- (unsigned long long)deleteObjectsInEventStreams:(id)streams olderThanDate:(id)date limit:(unsigned long long)limit;
- (unsigned long long)deleteObjectsInEventStream:(id)stream ifNeededToLimitEventCount:(unsigned long long)count batchLimit:(unsigned long long)limit;
- (void)closeStorage;
- (void)closeSyncStorage;
- (BOOL)migrateDataToBiomeWithManagedObjectContext:(id)context;
- (BOOL)coreDataStorage:(id)storage shouldCallDelegateBeforeAutoMigrationFromManagedObjectModelHavingVersion:(unsigned long long)version;
- (BOOL)coreDataStorage:(id)storage shouldCallDelegateAfterAutoMigrationToManagedObjectModelHavingVersion:(unsigned long long)version;
- (id)coreDataStorage:(id)storage needsManagedObjectModelNameForVersion:(unsigned long long)version;
- (BOOL)coreDataStorage:(id)storage willAutoMigrateStoreAtURL:(id)url fromManagedObjectModel:(id)model havingVersion:(unsigned long long)version error:(id *)error;
- (BOOL)coreDataStorage:(id)storage didAutoMigratePersistentStore:(id)store toManagedObjectModel:(id)model havingVersion:(unsigned long long)version error:(id *)error;
- (void)saveHistogram:(id)histogram responseQueue:(id)queue withCompletion:(id /* block */)completion;
- (unsigned long long)deleteHistogram:(id)histogram;
- (id)fetchLocalChangesSinceDate:(id)date error:(id *)error;
- (id)fetchSyncChangesSinceDate:(id)date error:(id *)error;
- (BOOL)saveChangeSetsForSync:(id)sync error:(id *)error;
- (unsigned long long)lastSequenceNumberForChangeSetWithEntityName:(id)name error:(id *)error;
- (void)startSyncDownFromCloudWithResponseQueue:(id)queue withCompletion:(id /* block */)completion;
- (void)startSyncUpToCloudWithResponseQueue:(id)queue withCompletion:(id /* block */)completion;
- (id)lastChangeSetWithEntityName:(id)name error:(id *)error;
- (void)_databaseChangedWithNotification:(id)notification;
- (void)incrementInsertsAndDeletesObserverCount;
- (void)decrementInsertsAndDeletesObserverCount;
- (id)sourceDeviceIdentity;
- (id)syncStorageAssertion;
@end

#endif /* _DKKnowledgeStorage_h */
