//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1852.4.7.0.3
//
#ifndef _DKSyncCloudKitKnowledgeStorage_h
#define _DKSyncCloudKitKnowledgeStorage_h
@import Foundation;

#include "APSConnectionDelegate-Protocol.h"
#include "_CDPeriodicSchedulerJob.h"
#include "_DKKeyValueStore-Protocol.h"
#include "_DKSyncPeerStatusTracker.h"
#include "_DKSyncRemoteKnowledgeStorageFetchDelegate-Protocol.h"
#include "_DKThrottledActivity.h"

@class APSConnection, CKContainer, CKServerChangeToken, NSHashTable, NSMutableDictionary, NSMutableSet, NSOperation, NSString;

@interface _DKSyncCloudKitKnowledgeStorage : NSObject<APSConnectionDelegate> {
  /* instance variables */
  BOOL _started;
  NSObject<_DKKeyValueStore> *_keyValueStore;
  _DKThrottledActivity *_activityThrottler;
  _DKSyncPeerStatusTracker *_tracker;
  _CDPeriodicSchedulerJob *_updateSourceDeviceIdentifiersPeriodicJob;
  BOOL _cloudSyncAvailablityObserverRegistered;
  CKContainer *_container;
  APSConnection *_connection;
  double _updateSourceDeviceIdentifiersBackoffTimeInterval;
  NSMutableDictionary *_zoneIDsBySourceDeviceID;
  NSMutableDictionary *_recordZonesByZoneID;
  BOOL _databaseChangesExist;
  BOOL _isPrewarmed;
  NSMutableSet *_zoneIDsWithAdditionChanges;
  NSMutableSet *_zoneIDsWithDeletionChanges;
  NSMutableSet *_zoneIDsWithUnrecoverableDecryptionErrors;
  CKServerChangeToken *_fetchDatabaseChangesServerChangeToken;
  NSOperation *_previousDependentOperation;
  NSHashTable *_outstandingOperations;
  BOOL _available;
  NSObject<_DKSyncRemoteKnowledgeStorageFetchDelegate> *_delegate;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)mySyncZoneID;
+ (id)zoneIDWithDeviceID:(id)id;
+ (id)deviceIDFromZoneID:(id)id;

/* instance methods */
- (void)connection:(id)connection didReceivePublicToken:(id)token;
- (void)connection:(id)connection didReceiveIncomingMessage:(id)message;
- (id)init;
- (void)dealloc;
- (void)start;
- (void)cancelOutstandingOperations;
- (void)_cloudSyncAvailabilityDidChange:(id)change;
- (BOOL)hasAdditionsFlagForPeer:(id)peer;
- (void)setHasAdditionsFlag:(BOOL)flag forPeer:(id)peer;
- (BOOL)hasDeletionsFlagForPeer:(id)peer;
- (void)setHasDeletionsFlag:(BOOL)flag forPeer:(id)peer;
- (void)clearPrewarmedFlag;
- (void)prewarmFetchWithCompletion:(id /* block */)completion;
- (void)fetchEventsFromPeer:(id)peer windows:(id)windows streamNames:(id)names limit:(unsigned long long)limit fetchOrder:(long long)order highPriority:(BOOL)priority completion:(id /* block */)completion;
- (void)fetchDeletedEventIDsFromPeer:(id)peer sinceDate:(id)date streamNames:(id)names limit:(unsigned long long)limit highPriority:(BOOL)priority completion:(id /* block */)completion;
- (void)fetchAdditionsHighWaterMarkWithPeer:(id)peer highPriority:(BOOL)priority completion:(id /* block */)completion;
- (void)fetchDeletionsHighWaterMarkWithPeer:(id)peer highPriority:(BOOL)priority completion:(id /* block */)completion;
- (void)fetchSourceDeviceIDFromPeer:(id)peer highPriority:(BOOL)priority completion:(id /* block */)completion;
- (void)setFetchDelegate:(id)delegate;
- (void)updateStorageWithAddedEvents:(id)events deletedEventIDs:(id)ids highPriority:(BOOL)priority completion:(id /* block */)completion;
- (id)name;
- (long long)transportType;
@end

#endif /* _DKSyncCloudKitKnowledgeStorage_h */
