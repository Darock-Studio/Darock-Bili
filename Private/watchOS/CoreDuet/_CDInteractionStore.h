//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1852.4.7.0.3
//
#ifndef _CDInteractionStore_h
#define _CDInteractionStore_h
@import Foundation;

#include "_CDInteraction.h"
#include "_CDInteractionDeleting-Protocol.h"
#include "_CDInteractionQuerying-Protocol.h"
#include "_CDInteractionRecording-Protocol.h"
#include "_CDInteractionStoreNotifier.h"
#include "_DKCoreDataStorage.h"
#include "_DKKnowledgeStore.h"

@protocol OS_dispatch_queue;

@interface _CDInteractionStore : NSObject<_CDInteractionRecording, _CDInteractionQuerying, _CDInteractionDeleting> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_workQueue;
  _CDInteractionStoreNotifier *_notifier;
  NSObject<OS_dispatch_queue> *_pendingShareInteractionQueue;
  BOOL _inMaintenanceMode;
  _DKKnowledgeStore *_knowledgeStore;
}

@property (retain, nonatomic) _CDInteraction *pendingShareSheetInteraction;
@property (readonly, nonatomic) _DKCoreDataStorage *storage;
@property (nonatomic) BOOL readConcurrently;

/* class methods */
+ (id)storeWithDirectory:(id)directory readOnly:(BOOL)only;
+ (id)storeWithDirectory:(id)directory knowledgeStore:(id)store readOnly:(BOOL)only;
+ (id)defaultDatabaseDirectory;

/* instance methods */
- (id)initWithDatabasePath:(id)path inDirectory:(id)directory;
- (id)initWithDirectory:(id)directory knowledgeStore:(id)store readOnly:(BOOL)only;
- (id)init;
- (id)fetchOrCreateKeywordRecord:(id)record context:(id)context error:(id *)error;
- (id)fetchOrCreateKeywordRecord:(id)record context:(id)context cache:(id)cache error:(id *)error;
- (id)fetchOrCreateAttachmentRecord:(id)record context:(id)context cache:(id)cache error:(id *)error;
- (id)fetchOrCreateContactRecord:(id)record context:(id)context error:(id *)error;
- (id)fetchOrCreateContactRecord:(id)record context:(id)context cache:(id)cache error:(id *)error;
- (id)batchFetchExistingKeywordRecords:(id)records context:(id)context error:(id *)error;
- (id)errorForException:(id)exception;
- (id)batchFetchExistingAttachmentRecords:(id)records context:(id)context error:(id *)error;
- (id)batchFetchExistingContactRecords:(id)records context:(id)context error:(id *)error;
- (id)batchFetchExistingInteractionsWithUUIDs:(id)uuids context:(id)context error:(id *)error;
- (void)fillWithoutRelationshipsInteractionRecord:(id)record fromInteraction:(id)interaction;
- (void)updateCachedStatsForContactRecord:(id)record isSender:(BOOL)sender withInteraction:(id)interaction;
- (id)createInteractionRecord:(id)record context:(id)context keywordCache:(id)cache attachmentCache:(id)cache contactCache:(id)cache error:(id *)error;
- (id)dateFromTimeIntervalSinceRef:(double)ref;
- (id)getContactForRecord:(id)record;
- (id)createAttachmentFromRecord:(id)record;
- (id)createKeywordFromRecord:(id)record;
- (id)createInteractionFromRecord:(id)record;
- (BOOL)recordInteraction:(id)interaction;
- (BOOL)recordInteractions:(id)interactions;
- (BOOL)recordInteractions:(id)interactions error:(id *)error;
- (void)recordInteractions:(id)interactions completionHandler:(id /* block */)handler;
- (BOOL)recordInteractionsBatch:(id)batch error:(id *)error;
- (BOOL)openAndCheckIfReadable;
- (id)recipientArrayWithMostRecentSenderFirstFromIncomingInteraction:(id)interaction outgoingInteraction:(id)interaction;
- (unsigned long long)countInteractionsUsingPredicate:(id)predicate error:(id *)error;
- (void)countInteractionsUsingPredicate:(id)predicate completionHandler:(id /* block */)handler;
- (unsigned long long)countContactsUsingPredicate:(id)predicate error:(id *)error;
- (void)countContactsUsingPredicate:(id)predicate completionHandler:(id /* block */)handler;
- (unsigned long long)numberOfInteractionsMatchingPredicate:(id)predicate;
- (id)queryInteractionsUsingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit error:(id *)error;
- (id)queryInteractionsUsingPredicate:(id)predicate matchingNameTokens:(id)tokens sortDescriptors:(id)descriptors limit:(unsigned long long)limit error:(id *)error;
- (id)queryInteractionsUsingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit offset:(unsigned long long)offset error:(id *)error;
- (id)queryInteractionsUsingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit offset:(unsigned long long)offset objectIDs:(id *)ids error:(id *)error;
- (id)queryInteractionsUsingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit;
- (void)queryInteractionsUsingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit completionHandler:(id /* block */)handler;
- (id)queryInteractionsUsingPredicate:(id)predicate withLimit:(unsigned long long)limit;
- (id)queryContactsUsingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit error:(id *)error;
- (id)queryContactsUsingPredicate:(id)predicate withLimit:(unsigned long long)limit error:(id *)error;
- (void)queryContactsUsingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit completionHandler:(id /* block */)handler;
- (unsigned long long)numberOfContactsMatchingPredicate:(id)predicate;
- (id)queryContactInteractionsUsingPredicate:(id)predicate withLimit:(unsigned long long)limit;
- (id)histogramContactInteractionsUsingPredicate:(id)predicate withLimit:(unsigned long long)limit;
- (id)interactionCountPerMechanism;
- (id)usersWithInteractions;
- (id)conversationsWithInteractions;
- (id)kMostRecentConversationsWithLimit:(unsigned long long)limit predicate:(id)predicate;
- (void)enterMaintenanceMode;
- (void)exitMaintenanceMode;
- (unsigned long long)deleteUnreferencedKeywords;
- (unsigned long long)deleteUnreferencedContacts;
- (unsigned long long)deleteInteractionsOlderThanDate:(id)date limit:(unsigned long long)limit;
- (unsigned long long)deleteOldInteractionsIfNeededToLimitTotalNumber:(unsigned long long)number limit:(unsigned long long)limit;
- (void)closeStorage;
- (long long)queryVersionNumber;
- (BOOL)recordVersionNumber:(long long)number;
- (BOOL)deleteStorage;
- (unsigned long long)deleteInteractionsMatchingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit error:(id *)error;
- (unsigned long long)deleteInteractionsWithBundleId:(id)id error:(id *)error;
- (unsigned long long)deleteInteractionsWithBundleId:(id)id account:(id)account error:(id *)error;
- (unsigned long long)deleteInteractionsWithBundleId:(id)id domainIdentifier:(id)identifier error:(id *)error;
- (unsigned long long)deleteInteractionsWithBundleId:(id)id domainIdentifiers:(id)identifiers error:(id *)error;
- (void)deleteInteractionsMatchingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(unsigned long long)limit completionHandler:(id /* block */)handler;
- (void)deleteInteractionsWithBundleId:(id)id completionHandler:(id /* block */)handler;
- (void)deleteInteractionsWithBundleId:(id)id account:(id)account completionHandler:(id /* block */)handler;
- (void)deleteInteractionsWithBundleId:(id)id domainIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)deleteInteractionsWithBundleId:(id)id domainIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (id)anonymizedCopyToDirectory:(id)directory salt:(id)salt;
- (void)anonymizeWithSalt:(id)salt;
- (void)anonymizeInteractionsWithSalt:(id)salt;
- (void)anonymizeKeywordsWithSalt:(id)salt;
- (void)anonymizeContactsWithSalt:(id)salt;
- (void)anonymizeAttachmentsWithSalt:(id)salt;
@end

#endif /* _CDInteractionStore_h */
