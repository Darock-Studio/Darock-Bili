//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 600.0.0.0.0
//
#ifndef TKTonePickerViewController_h
#define TKTonePickerViewController_h
@import Foundation;

#include "PUICTableViewController.h"
#include "MPMediaPickerControllerDelegate-Protocol.h"
#include "TKToneClassicsTableViewController.h"
#include "TKTonePickerController.h"
#include "TKTonePickerControllerDelegate-Protocol.h"
#include "TKTonePickerControllerDelegateInternal-Protocol.h"
#include "TKTonePickerTableViewControllerHelper-Protocol.h"
#include "TKTonePickerTableViewLayoutMarginsObserver-Protocol.h"
#include "TKTonePickerTableViewSeparatorObserver-Protocol.h"

@class MPMediaPickerController, MPMusicPlayerController, NSMutableArray, NSMutableDictionary, NSNumber, NSString, UIBarButtonItem, UIImage;
@protocol TKTonePickerStyleProvider, TKTonePickerViewControllerDelegate;

@interface TKTonePickerViewController : PUICTableViewController<TKTonePickerControllerDelegate, TKTonePickerControllerDelegateInternal, TKTonePickerTableViewControllerHelper, TKTonePickerTableViewLayoutMarginsObserver, TKTonePickerTableViewSeparatorObserver, MPMediaPickerControllerDelegate> {
  /* instance variables */
  TKTonePickerController *_tonePickerController;
  UIImage *_checkmarkImage;
  long long _tonePickerTableViewStyle;
  BOOL _showsToneStoreWasSetExplicitly;
  BOOL _allowsAutoScrollingToSelectedTone;
  BOOL _allowsAutoScrollingToSelectedToneWasSetExplicitly;
  BOOL _needsScrollPositionReset;
  UIBarButtonItem *_storeBarButtonItem;
  NSMutableDictionary *_toneSectionHeaderViews;
  MPMediaPickerController *_mediaPickerController;
  NSMutableArray *_mediaItems;
  MPMusicPlayerController *_musicPlayer;
  NSNumber *_playingMediaItemIdentifier;
  TKToneClassicsTableViewController *_toneClassicsTableViewController;
  BOOL _isHandlingSwitchControlValueChanged;
  NSMutableArray *_switchControlsBeingObserved;
}

@property (nonatomic) BOOL _allowsAutoScrollingToSelectedTone;
@property (copy, nonatomic) NSString *_overrideFirstToneSectionTitle;
@property (readonly, nonatomic) long long alertType;
@property (copy, nonatomic) NSString *topic;
@property (nonatomic) BOOL showsDefault;
@property (copy, nonatomic) NSString *defaultToneIdentifier;
@property (nonatomic) BOOL showsNone;
@property (nonatomic) BOOL noneAtTop;
@property (copy, nonatomic) NSString *noneString;
@property (nonatomic) BOOL showsNothingSelected;
@property (nonatomic) BOOL showsToneStore;
@property (copy, nonatomic) NSString *selectedToneIdentifier;
@property (weak, nonatomic) NSObject<TKTonePickerViewControllerDelegate> *delegate;
@property (nonatomic) BOOL showsIgnoreMute;
@property (nonatomic) BOOL ignoreMute;
@property (nonatomic) BOOL showsMedia;
@property (nonatomic) BOOL mediaAtTop;
@property (copy, nonatomic) NSNumber *selectedMediaIdentifier;
@property (nonatomic) BOOL showsVibrations;
@property (copy, nonatomic) NSString *selectedVibrationIdentifier;
@property (retain, nonatomic) NSObject<TKTonePickerStyleProvider> *styleProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_checkmarkImage;

/* instance methods */
- (id)initWithStyle:(long long)style;
- (id)initWithAlertType:(long long)type;
- (id)_initWithAlertType:(long long)type tableViewStyle:(long long)style;
- (void)dealloc;
- (BOOL)isNoneAtTop;
- (void)_setAllowsAutoScrollingToSelectedTone:(BOOL)tone;
- (void)_setOverrideFirstToneSectionTitle:(id)title;
- (void)_handleSwitchControlValueChanged:(id)changed;
- (void)_updateStyleOfTableView:(id)view forStyleProvider:(id)provider;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidLayoutSubviews;
- (void)applicationWillSuspend;
- (BOOL)_canShowWhileLocked;
- (id)_customHeaderViewForHeaderInSection:(long long)section;
- (void)_didSelectToneWithIdentifier:(id)identifier;
- (void)_configureTextColorOfLabelInCell:(id)cell shouldTintText:(BOOL)text checked:(BOOL)checked;
- (id)_pickerRowItemForIndexPath:(id)path;
- (void)_reloadData;
- (void)_resetScrollingPosition;
- (BOOL)_shouldShowCheckmarkOnTrailingEdge;
- (void)_updateCell:(id)cell withDownloadProgress:(float)progress animated:(BOOL)animated;
- (void)_handlePreferredContentSizeCategoryDidChangeNotification:(id)notification;
- (void)_handleMediaLibraryDidChangeNotification;
- (BOOL)isMediaAtTop;
- (id)selectedIdentifier:(BOOL *)identifier;
- (void)addMediaItems:(id)items;
- (void)removeMediaItems:(id)items;
- (unsigned long long)_addMediaIdentifierToList:(id)list;
- (id)_mediaItemForIdentifier:(id)identifier;
- (void)_didSelectMediaItemWithIdentifier:(id)identifier;
- (id)_musicPlayer;
- (void)_togglePlayMediaItemWithIdentifier:(id)identifier;
- (void)_playMediaItemWithIdentifier:(id)identifier;
- (void)_didFinishPreparingToPlayMediaItemWithIdentifier:(id)identifier error:(id)error;
- (void)_stopMediaItemPlaybackWithFadeOutDuration:(double)duration;
- (void)mediaPickerDidCancel:(id)cancel;
- (void)mediaPicker:(id)picker didPickMediaItems:(id)items;
- (void)loadViewForTonePickerTableViewController:(id)controller;
- (id)tableView:(id)view cellForPickerRowItem:(id)item;
- (void)tableView:(id)view willDisplayCell:(id)cell forPickerRowItem:(id)item;
- (id)selectedTonePickerItem;
- (void)tableView:(id)view updateCell:(id)cell withSeparatorForPickerRowItem:(id)item;
- (void)updateCell:(id)cell withCheckedStatus:(BOOL)status forTonePickerItem:(id)item;
- (void)updateCell:(id)cell withDetailText:(id)text;
- (void)updateDividerContentColorToMatchSeparatorColorInTableView:(id)view;
- (void)tableView:(id)view didSelectRowAtIndexPath:(id)path forPickerRowItem:(id)item;
- (void)tonePickerTableViewWillDisappear:(BOOL)disappear;
- (void)tonePickerTableViewControllerWillBeDeallocated:(id)deallocated;
- (void)layoutMarginsDidChangeInTonePickerTableView:(id)view;
- (void)separatorColorDidChangeInTonePickerTableView:(id)view;
- (id)tableView:(id)view cellForRowAtIndexPath:(id)path;
- (long long)numberOfSectionsInTableView:(id)view;
- (long long)tableView:(id)view numberOfRowsInSection:(long long)section;
- (long long)tableView:(id)view editingStyleForRowAtIndexPath:(id)path;
- (void)tableView:(id)view commitEditingStyle:(long long)style forRowAtIndexPath:(id)path;
- (void)tableView:(id)view didSelectRowAtIndexPath:(id)path;
- (double)tableView:(id)view heightForRowAtIndexPath:(id)path;
- (id)tableView:(id)view viewForHeaderInSection:(long long)section;
- (id)tableView:(id)view titleForHeaderInSection:(long long)section;
- (double)tableView:(id)view heightForHeaderInSection:(long long)section;
- (id)tableView:(id)view titleForFooterInSection:(long long)section;
- (void)tableView:(id)view willDisplayCell:(id)cell forRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view shouldHighlightRowAtIndexPath:(id)path;
- (void)tonePickerControllerDidReloadTones:(id)tones;
- (void)tonePickerController:(id)controller requestsPerformingBatchUpdates:(id /* block */)updates completion:(id /* block */)completion;
- (void)tonePickerController:(id)controller didDeletePickerRowItems:(id)items;
- (void)tonePickerController:(id)controller didDeleteTonePickerSectionItems:(id)items;
- (void)tonePickerController:(id)controller didInsertPickerRowItems:(id)items;
- (void)tonePickerController:(id)controller didInsertTonePickerSectionItems:(id)items;
- (void)tonePickerController:(id)controller didUpdateHeaderTextOfTonePickerSectionItems:(id)items;
- (void)tonePickerController:(id)controller didUpdateFooterTextOfTonePickerSectionItems:(id)items;
- (void)tonePickerController:(id)controller didUpdateCheckedStatus:(BOOL)status ofTonePickerItem:(id)item;
- (void)tonePickerController:(id)controller didUpdateDownloadProgressOfTonePickerItem:(id)item;
- (void)tonePickerController:(id)controller didUpdateTonePickerItem:(id)item;
- (void)tonePickerController:(id)controller didUpdateDetailText:(id)text ofTonePickerItem:(id)item;
- (void)tonePickerController:(id)controller selectedToneWithIdentifier:(id)identifier;
- (void)tonePickerController:(id)controller selectedMediaItemWithIdentifier:(id)identifier;
- (BOOL)tonePickerControllerShouldShowMedia:(id)media;
- (void)tonePickerControllerRequestsMediaItemsRefresh:(id)refresh;
- (unsigned long long)numberOfMediaItemsInTonePickerController:(id)controller;
- (id)tonePickerController:(id)controller identifierOfMediaItemAtIndex:(unsigned long long)index;
- (id)tonePickerController:(id)controller titleOfMediaItemAtIndex:(unsigned long long)index;
- (unsigned long long)tonePickerController:(id)controller indexOfMediaItemWithIdentifier:(id)identifier;
- (void)tonePickerController:(id)controller didSelectMediaItemAtIndex:(unsigned long long)index selectionDidChange:(BOOL)change;
- (void)tonePickerControllerRequestsPresentingMediaItemPicker:(id)picker;
- (void)tonePickerControllerDidStopPlaying:(id)playing withFadeOutDuration:(double)duration;
- (void)tonePickerController:(id)controller willBeginPlaybackOfToneWithIdentifier:(id)identifier;
- (void)tonePickerController:(id)controller didUpdateIgnoreMute:(BOOL)mute forTonePickerItem:(id)item atIndexPath:(id)path;
- (void)tonePickerController:(id)controller requestsPresentingToneClassicsPickerForItem:(id)item;
- (void)tonePickerController:(id)controller requestsPresentingAlertWithTitle:(id)title message:(id)message;
@end

#endif /* TKTonePickerViewController_h */
