//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 452.0.6.0.0
//
#ifndef AXSSLanguageTagger_h
#define AXSSLanguageTagger_h
@import Foundation;

@interface AXSSLanguageTagger : NSObject
/* class methods */
+ (id)languageTagsForContent:(id)content;
+ (id)primaryLanguageForContent:(id)content hints:(struct { int x0; float x1; } *)hints;
+ (id)primaryLanguageForContent:(id)content;
+ (id)primaryLanguageWithHigherProbInDefaultLanguage:(id)language;
+ (id)markupLanguageTagForAttributedString:(id)string;
+ (void *)_scriptTaggerForContent:(id)content;
+ (void *)_languageTaggerForContent:(id)content;
+ (void *)_tokenTaggerForContent:(id)content;
+ (void *)_taggerForContent:(id)content tagScheme:(id)scheme;
+ (void)_tagRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range document:(id)document tags:(id)tags createdFromNewline:(BOOL)newline;
+ (id)_createTagForContent:(id)content tokenRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range document:(id)document createdFromNewline:(BOOL)newline;
+ (id)_languageTagForDateIfNecessary:(id)necessary;
+ (struct { int x0; float x1; } *)_createLanguageHintsForContent:(id)content;
+ (struct { int x0; float x1; } *)_createLanguageHintWithHighProbInDefault:(id)default;
+ (struct { int x0; float x1; } *)_createLanguageHintsForContent:(id)content probInSystemLanguage:(float)language;
+ (float)_systemLanguageProbabilityForContent:(id)content;
+ (void)_hypothesesForContent:(id)content withHints:(struct { int x0; float x1; } *)hints guesses:(struct { int x0; float x1; } *)guesses;
+ (id)_dialectWithHighestProbability:(struct { int x0; float x1; } *)probability;
+ (id)_secondaryDialects:(struct { int x0; float x1; } *)dialects;
+ (id)_overrideLanguageDetection:(id)detection;
+ (struct _NSRange { unsigned long long x0; unsigned long long x1; })_manuallyProcessContent:(id)content tokenRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range currentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
+ (struct _NSRange { unsigned long long x0; unsigned long long x1; })_extendRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range forContent:(id)content withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
+ (BOOL)_isNewline:(id)newline;
+ (struct { int x0; float x1; } *)_createLanguageHintsEvenlyDistributedWithProbability:(float)probability excludingHints:(id)hints;
+ (id)_allLangIDs;
+ (id)langCodeForlangId:(int)id;
+ (int)langIDforLangCode:(id)code;
+ (BOOL)isSupportedLanguage:(id)language;
@end

#endif /* AXSSLanguageTagger_h */
