//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 221.0.4.0.0
//
#ifndef SCRCGestureFactory_h
#define SCRCGestureFactory_h
@import Foundation;

#include "SCRCGestureFactory.h"
#include "SCRCTargetSelectorTimer.h"

@protocol SCRCGestureFactoryCallback;

@interface SCRCGestureFactory : NSObject {
  /* instance variables */
  double _stallDistance;
  double _maxDimension;
  double _thumbRegion;
  long long _orientation;
  long long _directions[7];
  struct { double horizontal; double vertical; } _axisFlipper;
  double _scaledTrackingDistance;
  BOOL _setTrackingTimer;
  double _flickVelocityThreshold;
  double _tapVelocityThreshold;
  double _echoWaitTime;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _tapSpeedRegion;
  double _tapVelocityThresholdForRegion;
  long long _tapSpeedFingerCount;
  BOOL _inTapSpeedRegionForDownEvent;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _mainFrame;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _gutterFrame;
  double _lastTime;
  double _lastDownTime;
  double _lastGutterDownTime;
  double _lastDegrees;
  double _startDegrees;
  double _startDistance;
  double _potentialTrackingStartTimestamp;
  BOOL _requireUp;
  long long _state;
  long long _direction;
  double _directionalSlope;
  d]"fifoIndex"i"sum"d"average"d"current"d}"distanceTraveledWithInertiaApplied"d"dragStalled"B"type"q"startTouchPoint"{CGPoint="x"d"y"d}"mostRecentTouchPoint"{CGPoint="x"d"y"d}"lastDownPoint"{CGPoint="x"d"y"d}"pressure"d"altitude"d"azimuth"d} x[2{SCRCFingerState="identifier"Q"xDirection"q"yDirection"q"normalizedVelocityPerSample"{SCRCMathAverageValue="samples"I"fifo"[50d]"fifoIndex"i"sum"d"average"d"current"d}"deltaXPerSample"{SCRCMathAverageValue="samples"I"fifo"[50d]"fifoIndex"i"sum"d"average"d"current"d}"deltaYPerSample"{SCRCMathAverageValue="samples"I"fifo"[50d]"fifoIndex"i"sum"d"average"d"current"d}"distancePerSample"{SCRCMathAverageValue="samples"I"fifo"[50] _finger;
  unsigned long long _absoluteFingerCount;
  unsigned short _fingerCount;
  unsigned short _lastFingerCount;
  double _distance;
  unsigned long long _tapCount;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _tapFrame;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _tapMultiFrame;
  NSObject<SCRCGestureFactoryCallback> *_trackDelegate;
  NSObject<SCRCGestureFactoryCallback> *_tapDelegate;
  NSObject<SCRCGestureFactoryCallback> *_gutterUpDelegate;
  NSObject<SCRCGestureFactoryCallback> *_splitTapDelegate;
  NSObject<SCRCGestureFactoryCallback> *_canSplitTapDelegate;
  NSObject<SCRCGestureFactoryCallback> *_didBeginSplitGestureDelegate;
  SCRCTargetSelectorTimer *_trackingTimer;
  struct { BOOL isFingerCurrentlyDown; BOOL dead; BOOL gutterHasBeenTouched; unsigned long long numFingersInCurrentGestureEvent; unsigned long long totalNumFingersInGesture; unsigned long long count; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } frame; struct CGPoint { double x; double y; } x[8] location; struct CGPoint { double x; double y; } x[8] locationPerTap; double thisTime; double lastTime; } _tap;
  SCRCTargetSelectorTimer *_tapTimer;
  SCRCTargetSelectorTimer *_gutterUpTimer;
  SCRCGestureFactory *_splitFactory;
  struct { BOOL isSplitting; BOOL isTapping; BOOL fastTrack; BOOL tapDead; BOOL timedOut; BOOL active; BOOL didNotify; unsigned long long fingerIdentifier; double fingerDownTime; struct CGPoint { double x; double y; } startTapLocation; struct CGPoint { double x; double y; } lastTapLocation; struct CGPoint { double x; double y; } primaryFingerLocation; double tapDistance; long long state; } _split;
}

@property (nonatomic) BOOL thumbRejectionEnabled;

/* instance methods */
- (id)initWithSize:(struct CGSize { double x0; double x1; })size delegate:(id)delegate;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size delegate:(id)delegate threadKey:(id)key;
- (void)setFlickSpeed:(double)speed;
- (double)flickSpeed;
- (void)setTapSpeed:(double)speed;
- (void)setTapSpeedTimeThreshold:(double)threshold forRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })region fingerCount:(long long)count;
- (double)tapSpeed;
- (void)setOrientation:(long long)orientation;
- (long long)orientation;
- (void)dealloc;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })mainFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_currentTapRect;
- (void)_updateMultiTapFrame;
- (void)_updateTapState;
- (void)_handleTap;
- (void)_enterTrackingMode:(id)mode;
- (void)_handleGutterUp;
- (void)_processUpAndPost:(BOOL)post;
- (void)_updateStartWithPoint:(struct CGPoint { double x0; double x1; })point time:(double)time;
- (BOOL)_handleSplitTap;
- (BOOL)_handleSplitEvent:(id)event;
- (struct { long long x0; long long x1; double x2; double x3; double x4; double x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; BOOL x9; struct CGPoint { double x0; double x1; } x10; double x11; double x12; double x13; struct CGPoint { double x0; double x1; } x14; struct CGPoint { double x0; double x1; } x15; struct CGPoint { double x0; double x1; } x16; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x17; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x18; struct CGPoint { double x0; double x1; } x19; struct CGPoint { double x0; double x1; } x20; double x21; })handleGestureEvent:(id)event;
- (void)_down:(id)_down;
- (void)_drag:(id)_drag;
- (void)_up;
- (void)reset;
- (void)_resetSplit;
- (struct { long long x0; long long x1; double x2; double x3; double x4; double x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; BOOL x9; struct CGPoint { double x0; double x1; } x10; double x11; double x12; double x13; struct CGPoint { double x0; double x1; } x14; struct CGPoint { double x0; double x1; } x15; struct CGPoint { double x0; double x1; } x16; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x17; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x18; struct CGPoint { double x0; double x1; } x19; struct CGPoint { double x0; double x1; } x20; double x21; })captureCurrentState;
- (double)directionalSlope;
- (long long)gestureState;
- (long long)direction;
- (double)vector;
- (double)velocity;
- (double)distance;
- (unsigned long long)absoluteFingerCount;
- (unsigned long long)fingerCount;
- (unsigned long long)tapCount;
- (BOOL)tapIsDown;
- (struct CGPoint { double x0; double x1; })rawLocation;
- (double)firstFingerPressure;
- (double)firstFingerAltitude;
- (double)firstFingerAzimuth;
- (struct CGPoint { double x0; double x1; })rawAverageLocation;
- (struct CGPoint { double x0; double x1; })startLocation;
- (struct CGPoint { double x0; double x1; })endLocation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tapFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })multiTapFrame;
- (struct CGPoint { double x0; double x1; })tapPoint;
- (struct CGPoint { double x0; double x1; })tapPointWeightedToSides;
- (double)tapInterval;
- (id)gestureStateString;
- (struct CGPoint { double x0; double x1; })splitTapPrimaryFingerPoint;
@end

#endif /* SCRCGestureFactory_h */
