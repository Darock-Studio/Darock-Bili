//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 221.0.4.0.0
//
#ifndef SCRCThread_h
#define SCRCThread_h
@import Foundation;

#include "SCRCStackQueue.h"

@interface SCRCThread : NSObject {
  /* instance variables */
  SCRCStackQueue *_queue;
  SCRCStackQueue *_waitingQueue;
  id _queueLock;
  struct __CFRunLoopSource * _source;
  struct __CFRunLoop * _runLoop;
  BOOL _isInvalid;
  BOOL _isRegistered;
  BOOL _isTimerSet;
  BOOL _shouldStop;
  BOOL _isWaitingForStoppingThread;
}

@property (retain, nonatomic) id _key;
@property (nonatomic) double lastStartTime;

/* class methods */
+ (BOOL)_addThreadToRegisteredThreads:(id)threads withThreadKey:(id)key;
+ (BOOL)_removeThreadFromRegisteredThreads:(id)threads withThreadKey:(id)key;
+ (void)initialize;
+ (id)activity;
+ (long long)activeThreadCount;
+ (void)setDefaultThreadPriority:(long long)priority;
+ (long long)defaultThreadPriority;
+ (double)_performSelector:(SEL)selector withThreadKey:(id)key onTarget:(id)target waitTime:(double)time cancelMask:(unsigned int)mask count:(unsigned int)count firstObject:(id)object moreObjects:(char *)objects;
+ (double)lastStartTimeForKey:(id)key;
+ (void)invalidateForKey:(id)key;
+ (void)postStopNotification;
+ (id)currentThreadTaskCache;
+ (id)threadTaskCacheKey;

/* instance methods */
- (void)_assignThreadPriority;
- (id)init;
- (id)_initWithKey:(id)key task:(id)task;
- (void)setName:(id)name;
- (void)_setKey:(id)key;
- (void)_runThread:(id)thread;
- (BOOL)_debug_currentlyRunningOnThisThread;
- (void)_threadDidStop;
- (void)dealloc;
- (double)_performSelector:(SEL)selector onTarget:(id)target cancelMask:(unsigned int)mask count:(unsigned int)count firstObject:(id)object moreObjects:(char *)objects;
- (double)performSelector:(SEL)selector onTarget:(id)target count:(unsigned int)count objects:(id)objects;
- (double)performSelector:(SEL)selector onTarget:(id)target cancelMask:(unsigned int)mask count:(unsigned int)count objects:(id)objects;
- (void)setIsInvalid:(BOOL)invalid;
- (BOOL)_shouldStop;
- (BOOL)isInvalid;
- (void)_setIsWaitingForStoppingThread:(BOOL)thread;
- (BOOL)_isWaitingForStoppingThread;
- (void)_enqueueWaitingTask:(id)task cancelMask:(unsigned int)mask lastStartTime:(double *)time;
- (void)_enqueueImmediateTask:(id)task cancelMask:(unsigned int)mask lastStartTime:(double *)time;
- (void)_enqueueTask:(id)task cancelMask:(unsigned int)mask lastStartTime:(double *)time;
- (void)_processQueueFromTimer;
- (void)_processQueue;
- (void)_setLastStartTime:(double)time;
@end

#endif /* SCRCThread_h */
