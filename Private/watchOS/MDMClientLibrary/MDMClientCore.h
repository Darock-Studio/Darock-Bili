//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3.26.3.6.0
//
#ifndef MDMClientCore_h
#define MDMClientCore_h
@import Foundation;

#include "MDMClientDataProvider-Protocol.h"

@class NSXPCConnection;
@protocol OS_dispatch_queue;

@interface MDMClientCore : NSObject

@property (nonatomic) unsigned long long channelType;
@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *xpcConnectionSyncQueue;
@property (retain, nonatomic) NSObject<MDMClientDataProvider> *dataProvider;

/* class methods */
+ (id)clientWithChannelType:(unsigned long long)type;

/* instance methods */
- (id)initWithChannelType:(unsigned long long)type;
- (id)initWithChannelType:(unsigned long long)type dataProvider:(id)provider;
- (void)dealloc;
- (BOOL)isActivationLockAllowedWhileSupervised;
- (unsigned long long)accessRights;
- (void)getAssertionDescriptionsWithCompletion:(id /* block */)completion;
- (void)notifyNewConfiguration;
- (void)scheduleTokenUpdate;
- (void)scheduleTokenUpdateIfNecessary;
- (void)retryNotNowResponse;
- (void)simulatePush;
- (void)simulatePushWithCompletion:(id /* block */)completion;
- (void)simulatePushIfNetworkTetheredWithCompletion:(id /* block */)completion;
- (id)pushToken;
- (void)touchWithCompletion:(id /* block */)completion;
- (void)reauthenticationComplete;
- (void)migrateMDMWithContext:(int)context completion:(id /* block */)completion;
- (void)uprootMDM;
- (void)requestInstallOfAppsInRestoreWithCompletion:(id /* block */)completion;
- (void)blockAppInstallsWithCompletion:(id /* block */)completion;
- (void)unblockAppInstallsWithCompletion:(id /* block */)completion;
- (void)processDeviceRequest:(id)request encodeResponse:(BOOL)response completion:(id /* block */)completion;
- (void)processUserRequest:(id)request encodeResponse:(BOOL)response completion:(id /* block */)completion;
- (BOOL)isAwaitingUserConfigured;
- (BOOL)authenticateWithCheckInURL:(id)url identity:(struct __SecIdentity *)identity pinnedSecCertificateRefs:(id)refs pinningRevocationCheckRequired:(BOOL)required topic:(id)topic useDevelopmentAPNS:(BOOL)apns signMessage:(BOOL)message isUserEnrollment:(BOOL)enrollment enrollmentID:(id)id outError:(id *)error;
- (BOOL)checkOutCheckInURL:(id)url identity:(struct __SecIdentity *)identity pinnedSecCertificateRefs:(id)refs pinningRevocationCheckRequired:(BOOL)required topic:(id)topic signMessage:(BOOL)message isUserEnrollment:(BOOL)enrollment enrollmentID:(id)id outError:(id *)error;
- (BOOL)remoteManagementCheckInURL:(id)url identity:(struct __SecIdentity *)identity pinnedSecCertificateRefs:(id)refs pinningRevocationCheckRequired:(BOOL)required signMessage:(BOOL)message isUserEnrollment:(BOOL)enrollment enrollmentID:(id)id endpoint:(id)endpoint requestData:(id)data outResponse:(id *)response outError:(id *)error;
- (BOOL)checkInRequestAtURL:(id)url identity:(struct __SecIdentity *)identity pinnedSecCertificateRefs:(id)refs pinningRevocationCheckRequired:(BOOL)required signMessage:(BOOL)message isUserEnrollment:(BOOL)enrollment enrollmentID:(id)id messageType:(id)type requestDict:(id)dict outResponse:(id *)response outError:(id *)error;
- (id)_userFieldsForResponse;
- (void)_destroyXPCConnectionAndInvalidate:(BOOL)invalidate;
- (void)_queue_createAndStartMDMXPCConnection;
- (id)_userEnrollmentAuthenticationDictWithEnrollmentID:(id)id;
- (id)_deviceEnrollmentAuthenticationDict;
@end

#endif /* MDMClientCore_h */
