//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBSHistoryItem_h
#define WBSHistoryItem_h
@import Foundation;

#include "WBSHistoryItem.h"
#include "WBSHistoryVisit.h"

@class NSArray, NSData, NSDate, NSMutableArray, NSSet, NSString, NSURL;
@protocol {unique_ptr<WBSHistoryItemVisitCountScoresStorage, std::default_delete<WBSHistoryItemVisitCountScoresStorage>>="__ptr_"{__compressed_pair<WBSHistoryItemVisitCountScoresStorage *, std::default_delete<WBSHistoryItemVisitCountScoresStorage>>="__value_"^{WBSHistoryItemVisitCountScoresStorage}}};

@interface WBSHistoryItem : NSObject {
  /* instance variables */
  struct unique_ptr<WBSHistoryItemVisitCountScoresStorage, std::default_delete<WBSHistoryItemVisitCountScoresStorage>> { struct __compressed_pair<WBSHistoryItemVisitCountScoresStorage *, std::default_delete<WBSHistoryItemVisitCountScoresStorage>> { struct WBSHistoryItemVisitCountScoresStorage *__value_; } __ptr_; } _visitCountScores;
}

@property (readonly, nonatomic) unsigned long long dailyVisitCountScoresCountOnSynchronizationQueue;
@property (readonly, nonatomic) const int * dailyVisitCountScoresPtrOnSynchronizationQueue;
@property (readonly, nonatomic) unsigned long long weeklyVisitCountScoresCountOnSynchronizationQueue;
@property (readonly, nonatomic) const int * weeklyVisitCountScoresPtrOnSynchronizationQueue;
@property (nonatomic) long long databaseID;
@property (copy, nonatomic) NSString *title;
@property (readonly, nonatomic) NSString *urlString;
@property (readonly, nonatomic) NSString *userVisibleURLString;
@property (readonly, nonatomic) NSURL *url;
@property (readonly, nonatomic) NSString *stringForUserTypedDomainExpansion;
@property (readonly, nonatomic) WBSHistoryVisit *lastVisit;
@property (readonly, nonatomic) double lastVisitedTimeInterval;
@property (readonly, nonatomic) NSDate *lastVisitedDate;
@property (readonly, nonatomic) NSArray *visits;
@property (readonly, nonatomic) int visitCount;
@property (readonly, nonatomic) int visitCountScore;
@property (nonatomic) long long statusCode;
@property (readonly, nonatomic) BOOL shouldRecomputeDerivedVisitCountScores;
@property (readonly, nonatomic) BOOL lastVisitWasHTTPNonGet;
@property (nonatomic) BOOL lastVisitWasFailure;
@property (readonly, nonatomic) WBSHistoryItem *lastVisitRedirectDestinationItem;
@property (readonly, nonatomic) WBSHistoryItem *endOfLastVisitRedirectChain;
@property (readonly, nonatomic) WBSHistoryVisit *lastVisitOnSynchronizationQueue;
@property (readonly, nonatomic) double lastVisitedTimeIntervalOnSynchronizationQueue;
@property (readonly, nonatomic) NSSet *visitsPendingWriteToDataStoreOnSynchronizationQueue;
@property (readonly, nonatomic) NSData *dailyVisitCountScoresDataOnSynchronizationQueue;
@property (readonly, nonatomic) NSData *weeklyVisitCountScoresDataOnSynchronizationQueue;

/* class methods */
+ (void)initialize;
+ (id)synchronizationQueue;
+ (double)timeIntervalForDailyAndWeeklyVisitCountScores;

/* instance methods */
- (id)initWithHistoryStreamedItem:(const struct _HistoryStreamedItem { struct { unsigned int x0; unsigned int x1; } x0; long long x1; long long x2; long long x3; long long x4; long long x5; char * x6; int * x7; unsigned long long x8; int * x9; unsigned long long x10; } *)item;
- (void)updateWithStreamedItem:(const struct _HistoryStreamedItem { struct { unsigned int x0; unsigned int x1; } x0; long long x1; long long x2; long long x3; long long x4; long long x5; char * x6; int * x7; unsigned long long x8; int * x9; unsigned long long x10; } *)item;
- (void)updateLastVisitIfNil:(id)nil;
- (id)initWithURLString:(id)urlstring;
- (id)initWithSQLiteRow:(id)row;
- (void)dealloc;
- (void)_accessVisitCountScoresStorage:(id /* block */)storage;
- (void)mergeDataFromItem:(id)item;
- (void)wasVisited:(id)visited;
- (void)_wasVisitedOnSynchronizationQueue:(id)queue;
- (void)_addVisit:(id)visit;
- (void)addExistingVisit:(id)visit;
- (void)_addExistingVisit:(id)visit;
- (void)wasRedirectedFrom:(id)from to:(id)to;
- (void)removeVisits:(id)visits candidateLastVisit:(id)visit;
- (void)removeVisitsOnSynchronizationQueue:(id)queue candidateLastVisit:(id)visit;
- (void)scoreOfVisit:(id)visit wasUpdatedFrom:(unsigned long long)from to:(unsigned long long)to;
- (void)visitWasModified:(id)modified;
- (id)visitForTimeOnSynchronizationQueue:(double)queue;
- (id)_visitsPendingWriteSetCreatingIfNeeded:(BOOL)needed;
- (void)_addVisitToPendingWriteSet:(id)set;
- (BOOL)_visitsPendingWriteSetContains:(id)contains;
- (void)clearVisitsPendingWriteToDataStoreFromSynchronizationQueue;
- (void)recomputeDerivedVisitCountScoresWithVisits:(id)visits;
- (void)updateWithServiceItem:(id)item;
@end

#endif /* WBSHistoryItem_h */
