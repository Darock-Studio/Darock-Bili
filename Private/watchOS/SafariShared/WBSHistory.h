//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBSHistory_h
#define WBSHistory_h
@import Foundation;

#include "WBSHistoricalHighLevelDomainsProvider-Protocol.h"
#include "WBSHistoryActivityThrottler.h"
#include "WBSHistoryStore-Protocol.h"
#include "WBSHistoryStoreDelegate-Protocol.h"

@class NSArray, NSCountedSet, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface WBSHistory : NSObject<WBSHistoryStoreDelegate, WBSHistoricalHighLevelDomainsProvider> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_entriesByURLStringAccessQueue;
  NSMutableDictionary *_entriesByURLString;
  NSCountedSet *_stringsForUserTypedDomainExpansion;
  BOOL _hasStartedLoadingHistory;
  NSObject<OS_dispatch_queue> *_waitUntilHistoryHasLoadedQueue;
  NSObject<WBSHistoryStore> *_historyStore;
  WBSHistoryActivityThrottler *_entryCreationThrottler;
}

@property (readonly) NSArray *allItems;
@property (readonly, nonatomic) BOOL hasAnyHistoryItems;
@property (readonly, nonatomic) unsigned long long numberOfHistoryItems;
@property (readonly, nonatomic) unsigned long long numberOfHistoryItemsOnHistoryQueue;
@property (nonatomic) double historyAgeLimit;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)existingSharedHistory;
+ (id)historyPropertyListURL;
+ (id)defaultHistoryDatabaseDirectoryURL;
+ (id)historyDatabaseURL;
+ (id)historyDatabaseWriteAheadLogURL;
+ (void)clearExistingSharedHistory;

/* instance methods */
- (id)init;
- (id)itemForURLString:(id)urlstring;
- (id)itemForURLString:(id)urlstring createIfNeeded:(BOOL)needed;
- (id)lastVisitForHighLevelDomain:(id)domain;
- (BOOL)hasItemSince:(id)since;
- (void)removeItemsInResponseToUserAction:(id)action;
- (void)_removeHistoryItemsInResponseToUserAction:(id)action;
- (void)_removeItemsInResponseToUserAction:(id)action completionHandler:(id /* block */)handler;
- (id)itemForURL:(id)url;
- (void)addAutocompleteTrigger:(id)trigger forURLString:(id)urlstring;
- (void)getAutocompleteTriggersForURLString:(id)urlstring completionHandler:(id /* block */)handler;
- (void)_addItem:(id)item addToStringsForUserTypedDomainExpansions:(BOOL)expansions;
- (id)_removeItemForURLString:(id)urlstring;
- (BOOL)_isStringForUserTypedDomainExpansionInHistory:(id)history;
- (void)_addItemToStringsForUserTypedDomainExpansion:(id)expansion;
- (void)_removeItemFromStringsForUserTypedDomainExpansion:(id)expansion;
- (void)enumerateItemsUsingBlock:(id /* block */)block;
- (void)enumerateItemsAsynchronouslyUsingBlock:(id /* block */)block completionHandler:(id /* block */)handler;
- (id)itemVisitedAtURLString:(id)urlstring title:(id)title wasHTTPNonGet:(BOOL)get wasFailure:(BOOL)failure increaseVisitCount:(BOOL)count;
- (id)itemVisitedAtURLString:(id)urlstring title:(id)title wasHTTPNonGet:(BOOL)get wasFailure:(BOOL)failure increaseVisitCount:(BOOL)count statusCode:(long long)code;
- (id)itemVisitedAtURLString:(id)urlstring title:(id)title timeOfVisit:(double)visit wasHTTPNonGet:(BOOL)get wasFailure:(BOOL)failure increaseVisitCount:(BOOL)count origin:(long long)origin;
- (id)itemVisitedAtURLString:(id)urlstring title:(id)title timeOfVisit:(double)visit wasHTTPNonGet:(BOOL)get wasFailure:(BOOL)failure increaseVisitCount:(BOOL)count statusCode:(long long)code origin:(long long)origin;
- (id)itemVisitedAtURLString:(id)urlstring title:(id)title timeOfVisit:(double)visit wasHTTPNonGet:(BOOL)get wasFailure:(BOOL)failure increaseVisitCount:(BOOL)count origin:(long long)origin attributes:(unsigned long long)attributes;
- (id)itemVisitedAtURLString:(id)urlstring title:(id)title timeOfVisit:(double)visit wasHTTPNonGet:(BOOL)get wasFailure:(BOOL)failure increaseVisitCount:(BOOL)count statusCode:(long long)code origin:(long long)origin attributes:(unsigned long long)attributes;
- (id)itemRedirectedFrom:(id)from to:(id)to origin:(long long)origin date:(id)date;
- (id)itemRedirectedFrom:(id)from to:(id)to origin:(long long)origin date:(id)date statusCode:(long long)code;
- (void)getVisitsCreatedAfterDate:(id)date beforeDate:(id)date completionHandler:(id /* block */)handler;
- (void)getHighLevelHTTPFamilyDomainsVisitedAfterDate:(id)date beforeDate:(id)date onlyFromThisDevice:(BOOL)device completionHandler:(id /* block */)handler;
- (void)checkIfLocalVisitExistsInAnyOfItems:(id)items withCompletion:(id /* block */)completion;
- (BOOL)canRecordRedirectFromVisit:(id)visit to:(id)to;
- (void)updateTitle:(id)title forVisit:(id)visit;
- (void)_setAttributes:(unsigned long long)attributes forVisit:(id)visit;
- (void)addAttributes:(unsigned long long)attributes toVisit:(id)visit;
- (void)getItemCountBeforeDate:(id)date completionHandler:(id /* block */)handler;
- (void)clearHistoryVisitsAddedAfterDate:(id)date beforeDate:(id)date completionHandler:(id /* block */)handler;
- (void)clearHistory;
- (void)clearHistoryWithCompletionHandler:(id /* block */)handler;
- (void)vacuumHistoryWithCompletionHandler:(id /* block */)handler;
- (void)performMaintenance;
- (void)performMaintenance:(id /* block */)maintenance;
- (void)close;
- (void)closeWithCompletionHandler:(id /* block */)handler;
- (void)loadHistoryAsynchronouslyIfNeeded;
- (void)_loadHistory;
- (void)_loadHistoryWithCompletionHandler:(id /* block */)handler;
- (void)_waitUntilHistoryHasLoadedMainThread;
- (void)waitUntilHistoryHasLoaded;
- (void)performBlockAfterHistoryHasLoaded:(id /* block */)loaded;
- (void)savePendingChangesBeforeTerminationWithCompletionHandler:(id /* block */)handler;
- (void)historyLoader:(id)loader didLoadItems:(id)items stringsForUserTypeDomainExpansion:(id)expansion;
- (void)historyLoaderDidFinishLoading:(id)loading;
- (void)historyStore:(id)store didPrepareToDeleteWithDeletionPlan:(id)plan;
- (void)_sendNotification:(id)notification withItems:(id)items;
- (void)_dispatchHistoryLoaded;
- (void)_dispatchHistoryItemsLoaded:(id)loaded;
- (void)_dispatchHistoryItemsAdded:(id)added byUserInitiatedAction:(BOOL)action;
- (void)_dispatchHistoryItemWillChange:(id)change;
- (void)_dispatchHistoryItemDidChange:(id)change byUserInitiatedAction:(BOOL)action;
- (void)_dispatchHistoryItemsRemoved:(id)removed;
- (void)_dispatchHistoryCleared:(id)cleared;
- (void)_dispatchHistoryVisitAdded:(id)added;
- (BOOL)historyStoreShouldCheckDatabaseIntegrity:(id)integrity;
- (void)historyStoreDidFailDatabaseIntegrityCheck:(id)check;
- (void)historyStoreWasCleared:(id)cleared;
- (void)historyStore:(id)store didAddVisits:(id)visits;
- (void)historyStore:(id)store didRemoveVisits:(id)visits;
- (void)historyStore:(id)store didRemoveItems:(id)items;
- (void)historyStore:(id)store didRemoveHostnames:(id)hostnames;
- (void)historyStore:(id)store didRemoveHighLevelDomains:(id)domains;
- (id)historyStore:(id)store itemForURLString:(id)urlstring createIfNeeded:(BOOL)needed;
- (void)searchForUserTypedString:(id)string options:(unsigned long long)options currentTime:(double)time enumerationBlock:(id /* block */)block completionHandler:(id /* block */)handler;
- (void)computeFrequentlyVisitedSites:(unsigned long long)sites minimalVisitCountScore:(unsigned long long)score blockList:(id)list allowList:(id)list options:(unsigned long long)options currentTime:(double)time completionHandler:(id /* block */)handler;
- (void)initializeCloudHistoryWithConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)releaseCloudHistory:(id /* block */)history;
- (void)_unload;
- (id)_createHistoryStore;
- (void)_createHistoryStoreIfNeeded;
- (void)_removeAllVisitedLinks;
- (void)_addVisitedLinksForItemsIfNeeded:(id)needed;
- (Class)_historyItemClass;
- (void)fetchHistoricalHighLevelDomainsWithCompletionHandler:(id /* block */)handler;
@end

#endif /* WBSHistory_h */
