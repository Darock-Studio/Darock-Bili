//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBSHistoryServiceStore_h
#define WBSHistoryServiceStore_h
@import Foundation;

#include "WBSHistoryConnectionProxy-Protocol.h"
#include "WBSHistoryCrypto.h"
#include "WBSHistoryObjectCache.h"
#include "WBSHistoryServiceDatabaseDelegate-Protocol.h"
#include "WBSHistoryServiceDatabaseProtocol-Protocol.h"
#include "WBSHistoryStore-Protocol.h"
#include "WBSHistoryStoreDelegate-Protocol.h"
#include "WBSPeriodicActivityScheduler.h"

@class NSDate, NSMutableSet, NSString, NSURL;
@protocol OS_dispatch_queue, OS_dispatch_source, {atomic<WBSHistoryServiceStoreState>="__a_"{__cxx_atomic_impl<WBSHistoryServiceStoreState, std::__cxx_atomic_base_impl<WBSHistoryServiceStoreState>>="__a_value"Aq}}, {unique_ptr<SafariShared::SuddenTerminationDisabler, std::default_delete<SafariShared::SuddenTerminationDisabler>>="__ptr_"{__compressed_pair<SafariShared::SuddenTerminationDisabler *, std::default_delete<SafariShared::SuddenTerminationDisabler>>="__value_"^{SuddenTerminationDisabler}}};

@interface WBSHistoryServiceStore : NSObject<WBSHistoryStore, WBSHistoryServiceDatabaseDelegate> {
  /* instance variables */
  Class _historyItemClass;
  unsigned long long _itemCountLimit;
  struct atomic<WBSHistoryServiceStoreState> { struct __cxx_atomic_impl<WBSHistoryServiceStoreState, std::__cxx_atomic_base_impl<WBSHistoryServiceStoreState>> { atomic  __a_value; long long x0; } __a_; } _state;
  NSObject<WBSHistoryConnectionProxy> *_connection;
  NSObject<OS_dispatch_queue> *_databaseQueue;
  WBSHistoryObjectCache *_cache;
  long long _nextTemporaryDatabaseID;
  long long _lastTemporaryDatabaseID;
  id /* block */ _loadCompletionBlock;
  NSDate *_lastMaintenanceDate;
  WBSPeriodicActivityScheduler *_maintenanceScheduler;
  NSObject<OS_dispatch_source> *_sendDeltaToServiceTimer;
  struct unique_ptr<SafariShared::SuddenTerminationDisabler, std::default_delete<SafariShared::SuddenTerminationDisabler>> { struct __compressed_pair<SafariShared::SuddenTerminationDisabler *, std::default_delete<SafariShared::SuddenTerminationDisabler>> { struct SuddenTerminationDisabler *__value_; } __ptr_; } _suddenTerminationDisabler;
  NSMutableSet *_pendingAddsOrUpdates;
}

@property (retain) NSObject<WBSHistoryServiceDatabaseProtocol> *databaseProxy;
@property (readonly, nonatomic) NSString *databaseID;
@property (retain, nonatomic) NSURL *databaseURL;
@property (weak, nonatomic) NSObject<WBSHistoryStoreDelegate> *delegate;
@property (nonatomic) double historyAgeLimit;
@property (readonly, nonatomic) WBSHistoryCrypto *crypto;
@property (readonly, nonatomic) BOOL isUsingInMemoryDatabase;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDatabaseID:(id)id itemCountLimit:(unsigned long long)limit historyAgeLimit:(double)limit historyItemClass:(Class)class connectionProxy:(id)proxy;
- (id)initWithDatabaseID:(id)id itemCountLimit:(unsigned long long)limit historyAgeLimit:(double)limit historyItemClass:(Class)class;
- (id)_connectOptions;
- (void)_connectWithOptions:(id)options completionHandler:(id /* block */)handler;
- (void)loadWithCompletionHandler:(id /* block */)handler;
- (id)_loadOnDatabaseQueue:(unsigned long long)queue readHandle:(id)handle;
- (void)_load:(id /* block */)_load;
- (void)waitForLoadingToComplete;
- (void)_databaseFetchWithOptions:(unsigned long long)options predicate:(id)predicate completionHandler:(id /* block */)handler;
- (void)_evaluateWithOptionsOnDatabaseQueue:(unsigned long long)queue predicate:(id)predicate completionHandler:(id /* block */)handler;
- (void)_fetchWithOptionsOnDatabaseQueue:(unsigned long long)queue predicate:(id)predicate completionHandler:(id /* block */)handler;
- (void)_fetchWithOptions:(unsigned long long)options predicate:(id)predicate completionHandler:(id /* block */)handler;
- (id)_fetchVisitsOnDatabaseQueue:(unsigned long long)queue predicate:(id)predicate error:(id *)error;
- (void)addOrUpdateItemsOnDatabaseQueue:(id)queue;
- (void)_addOrUpdateItemsOnDatabaseQueue:(id)queue userInitiated:(BOOL)initiated;
- (void)getVisitsCreatedAfterDate:(id)date beforeDate:(id)date completionHandler:(id /* block */)handler;
- (void)checkIfLocalVisitExistsInAnyOfItems:(id)items withCompletion:(id /* block */)completion;
- (void)getHighLevelHTTPFamilyDomainsVisitedAfterDate:(id)date beforeDate:(id)date onlyFromThisDevice:(BOOL)device completionHandler:(id /* block */)handler;
- (void)removePastHistoryVisitsForItem:(id)item completionHandler:(id /* block */)handler;
- (void)itemsWereAdded:(id)added byUserInitiatedAction:(BOOL)action;
- (void)itemsWereModified:(id)modified byUserInitiatedAction:(BOOL)action;
- (void)itemWasReplaced:(id)replaced byItem:(id)item;
- (void)visitsWereAdded:(id)added;
- (void)visitsWereModified:(id)modified;
- (void)visitTitleWasUpdated:(id)updated;
- (void)clearHistoryWithCompletionHandler:(id /* block */)handler;
- (void)vacuumHistoryWithCompletionHandler:(id /* block */)handler;
- (void)clearHistoryVisitsAddedAfterDate:(id)date beforeDate:(id)date completionHandler:(id /* block */)handler;
- (void)_scheduleMaintenance;
- (void)_expireOldVisits;
- (double)_ageLimitSinceReferenceDate;
- (void)_updateLastMaintenanceDate;
- (void)_performMaintenance:(id /* block */)maintenance;
- (void)performMaintenance:(id /* block */)maintenance;
- (void)closeWithCompletionHandler:(id /* block */)handler;
- (void)addAutocompleteTrigger:(id)trigger forItem:(id)item;
- (void)getAutocompleteTriggersForItem:(id)item completionHandler:(id /* block */)handler;
- (void)getItemCountBeforeDate:(id)date completionHandler:(id /* block */)handler;
- (void)_setMetadataValue:(id)value forKey:(id)key group:(id)group;
- (void)_scheduleSendDeltaToService;
- (void)_scheduleImmediateDeltaToService;
- (long long)_generateTemporaryDatabaseID;
- (BOOL)_ensureItemHasID:(id)id;
- (BOOL)_ensureVisitHasID:(id)id;
- (void)_processPendingWrites;
- (void)_processPendingWrites:(unsigned long long)writes completionHandler:(id /* block */)handler;
- (void)reportPermanentIDsForItems:(id)items completionHandler:(id /* block */)handler;
- (void)reportPermanentIDsForVisits:(id)visits completionHandler:(id /* block */)handler;
- (void)reportSevereError:(id)error completionHandler:(id /* block */)handler;
- (void)handleEvent:(id)event completionHandler:(id /* block */)handler;
- (void)_waitForDatabase:(id /* block */)database;
- (void)searchForUserTypedString:(id)string options:(unsigned long long)options currentTime:(double)time enumerationBlock:(id /* block */)block completionHandler:(id /* block */)handler;
- (void)computeFrequentlyVisitedSites:(unsigned long long)sites minimalVisitCountScore:(unsigned long long)score blockList:(id)list allowList:(id)list options:(unsigned long long)options currentTime:(double)time completionHandler:(id /* block */)handler;
- (void)connectionProxyConnectionWasInterrupted:(id)interrupted;
- (void)initializeCloudHistoryWithConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)releaseCloudHistory:(id /* block */)history;
@end

#endif /* WBSHistoryServiceStore_h */
