//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBSSetInt64_h
#define WBSSetInt64_h
@import Foundation;

#include "NSCoding-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@protocol {unordered_set<long long, std::hash<long long>, std::equal_to<long long>, std::allocator<long long>>="__table_"{__hash_table<long long, std::hash<long long>, std::equal_to<long long>, std::allocator<long long>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<long long, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<long long, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<long long, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<long long, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<long long, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<long long, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<long long, void *> *>, std::allocator<std::__hash_node<long long, void *>>>="__value_"{__hash_node_base<std::__hash_node<long long, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<long long>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<long long>>="__value_"f}}};

@interface WBSSetInt64 : NSObject<NSCoding, NSSecureCoding, NSCopying>

@property (readonly, nonatomic) const void * set;
@property (readonly, nonatomic) unsigned long long count;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithInt64:(long long)int64;
- (id)initWithSet:(const void *)set;
- (id)initWithMovableSet:(void *)set;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)contains:(long long)contains;
- (id)commaSeparatedValues;
- (id)description;
@end

#endif /* WBSSetInt64_h */
