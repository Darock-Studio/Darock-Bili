//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBSURLCompletionDatabase_h
#define WBSURLCompletionDatabase_h
@import Foundation;

#include "WBSURLCompletionDataSource-Protocol.h"

@class BOOL *, NSString;
@protocol {Vector<id<WBSURLCompletionMatchData>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^@"m_capacity"I"m_size"I};

@interface WBSURLCompletionDatabase : NSObject {
  /* instance variables */
  struct Vector<id<WBSURLCompletionMatchData>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { m_capacity * *m_buffer; unsigned int x0; unsigned int m_size; } _fullTextBookmarkMatchesCache;
  struct Vector<id<WBSURLCompletionMatchData>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { m_capacity * *m_buffer; unsigned int x0; unsigned int m_size; } _fullTextHistoryMatchesCache;
  struct Vector<id<WBSURLCompletionMatchData>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { m_capacity * *m_buffer; unsigned int x0; unsigned int m_size; } _prefixBookmarkMatchesCache;
  struct Vector<id<WBSURLCompletionMatchData>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { m_capacity * *m_buffer; unsigned int x0; unsigned int m_size; } _prefixHistoryMatchesCache;
  NSString *_fullTextBookmarkMatchesCacheString;
  NSString *_fullTextHistoryMatchesCacheString;
  NSString *_prefixBookmarkMatchesCacheString;
  NSString *_prefixHistoryMatchesCacheString;
}

@property (weak, nonatomic) NSObject<WBSURLCompletionDataSource> *dataSource;

/* class methods */
+ (void)initializeURLCompletionOnMainThread;
+ (BOOL)_shouldPreloadTopHit:(void *)hit forTypedString:(id)string withSearchParameters:(id)parameters;
+ (BOOL)_matchIsNotURLMatchAndTitleLooksLikeURLForBookmarkAndHistoryCompletionMatch:(const void *)match;
+ (BOOL)_matchMistookErrorTitleForPageTitleForBookmarkAndHistoryCompletionMatch:(const void *)match;
+ (BOOL)_redirectionChainsOfCompletionMatchData:(id)data containURLString:(id)urlstring;
+ (struct RefPtr<SafariShared::BookmarkAndHistoryCompletionMatch, WTF::RawPtrTraits<SafariShared::BookmarkAndHistoryCompletionMatch>, WTF::DefaultRefDerefTraits<SafariShared::BookmarkAndHistoryCompletionMatch>> { struct BookmarkAndHistoryCompletionMatch * x0; })_topHitFromBaseURLMatchForTopHitFromMatches:(struct RefPtr<SafariShared::BookmarkAndHistoryCompletionMatch, WTF::RawPtrTraits<SafariShared::BookmarkAndHistoryCompletionMatch>, WTF::DefaultRefDerefTraits<SafariShared::BookmarkAndHistoryCompletionMatch>> { struct BookmarkAndHistoryCompletionMatch * x0; })matches shouldReplaceTopHitFromMatches:(BOOL *)matches historyMatches:(void *)matches bookmarkMatches:(void *)matches typedString:(id)string searchParameters:(id)parameters timeNow:(double)now completionDataSource:(id)source;
+ (BOOL)_isMatchURLString:(id)urlstring equivalentToBaseURLString:(id)urlstring;
+ (BOOL)_topHitFromMatches:(struct RefPtr<SafariShared::BookmarkAndHistoryCompletionMatch, WTF::RawPtrTraits<SafariShared::BookmarkAndHistoryCompletionMatch>, WTF::DefaultRefDerefTraits<SafariShared::BookmarkAndHistoryCompletionMatch>> { struct BookmarkAndHistoryCompletionMatch * x0; })matches isOneOfManyUnremarkableMatchesInLocalHistoryMatches:(void *)matches inDomain:(id)domain;
+ (struct RefPtr<SafariShared::BookmarkAndHistoryCompletionMatch, WTF::RawPtrTraits<SafariShared::BookmarkAndHistoryCompletionMatch>, WTF::DefaultRefDerefTraits<SafariShared::BookmarkAndHistoryCompletionMatch>> { struct BookmarkAndHistoryCompletionMatch * x0; })_synthesizeURLMatchWithURLString:(id)urlstring title:(id)title topHitFromMatches:(struct RefPtr<SafariShared::BookmarkAndHistoryCompletionMatch, WTF::RawPtrTraits<SafariShared::BookmarkAndHistoryCompletionMatch>, WTF::DefaultRefDerefTraits<SafariShared::BookmarkAndHistoryCompletionMatch>> { struct BookmarkAndHistoryCompletionMatch * x0; })matches historyMatches:(void *)matches bookmarkMatches:(void *)matches typedString:(id)string timeNow:(double)now completionDataSource:(id)source;

/* instance methods */
- (id)init;
- (void)getBestMatchesForTypedString:(id)string topHits:(id *)hits matches:(id *)matches limit:(unsigned long long)limit forQueryID:(long long)id withSearchParameters:(id)parameters;
- (void)clearBookmarkMatchesCachesKeepingEmptyValues:(BOOL)values;
- (void)clearBookmarkMatchesCaches;
- (void)clearHistoryMatchesCache;
- (void)clearMatchesCaches;
- (void)_getSortedFullTextMatchesForTypedString:(id)string topHits:(void *)hits historyMatches:(void *)matches historyLimit:(unsigned long long)limit bookmarkMatches:(void *)matches bookmarkLimit:(unsigned long long)limit searchParameters:(id)parameters;
- (void)_getSortedPrefixMatchesForTypedString:(id)string topHits:(void *)hits historyMatches:(void *)matches historyLimit:(unsigned long long)limit bookmarkMatches:(void *)matches bookmarkLimit:(unsigned long long)limit searchParameters:(id)parameters;
- (void)_removeMatchesWithTitlesThatLookLikeURLsRemovedFromMatches:(void *)matches;
- (void)_removeMatchesThatMistookErrorTitleForPageTitleFromMatches:(void *)matches;
- (void)_getSortedMatchesForTypedString:(id)string topHits:(void *)hits historyMatches:(void *)matches historyLimit:(unsigned long long)limit bookmarkMatches:(void *)matches bookmarkLimit:(unsigned long long)limit searchParameters:(id)parameters prefixMatchesOnly:(BOOL)only;
- (void)_getUnsortedFullTextMatchesForTypedString:(id)string historyMatches:(void *)matches bookmarkMatches:(void *)matches dataTypes:(unsigned int)types;
- (void)_getUnsortedPrefixMatchesForTypedString:(id)string historyMatches:(void *)matches bookmarkMatches:(void *)matches;
@end

#endif /* WBSURLCompletionDatabase_h */
