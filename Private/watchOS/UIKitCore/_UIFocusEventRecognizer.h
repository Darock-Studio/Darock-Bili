//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIFocusEventRecognizer_h
#define _UIFocusEventRecognizer_h
@import Foundation;

#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UIMoveEvent.h"
#include "UIScrollView.h"
#include "UIView.h"
#include "_UIFocusEffectsController.h"
#include "_UIFocusEnginePanGestureRecognizerDelegate-Protocol.h"
#include "_UIFocusEventRecognizerDelegate-Protocol.h"
#include "_UIFocusItemInfo.h"
#include "_UIFocusLinearMovementDebugView.h"
#include "_UIFocusMovementInfo.h"
#include "_UIFocusRotaryIndicatorView.h"
#include "_UIRotaryGestureRecognizerDelegate-Protocol.h"

@class CADisplayLink, NSArray, NSMapTable, NSSet, NSString, NSTimer, _UIFocusFastScrollingRecognizer;

@interface _UIFocusEventRecognizer : NSObject<UIGestureRecognizerDelegate, _UIFocusEnginePanGestureRecognizerDelegate, _UIRotaryGestureRecognizerDelegate> {
  /* instance variables */
  NSMapTable *_gestureRecognizers;
  _UIFocusRotaryIndicatorView *_rotaryIndicatorView;
  NSTimer *_showRotaryIndicatorAfterDelayTimer;
  double _panDeadBand;
  _UIFocusLinearMovementDebugView *_linearDebugView;
  struct CGPoint { double x; double y; } _touchBeganPoint;
  struct CGPoint { double x; double y; } _lastKnownTouchPoint;
  struct CGPoint { double x; double y; } _previousPoints[5];
  int _numFrames;
  struct CGVector { double dx; double dy; } _progressAccumulator;
  struct CGVector { double dx; double dy; } _unlockedAccumulator;
  double _lastButtonPressTime;
  unsigned long long _failedContinuousMovementHeading;
  double _failedContinuousMovementTime;
  struct CGPoint { double x; double y; } _firstMomentumTouchPoint;
  struct CGPoint { double x; double y; } _lastMomentumTouchPoint;
  struct CGPoint { double x; double y; } _momentumVelocity;
  double _momentumFriction;
  unsigned long long _focusUpdateCountSinceLastContinuousMovementBegan;
  CADisplayLink *_momentumDisplayLink;
  NSTimer *_joystickModeExitTimer;
  NSTimer *_joystickModeRepeatTimer;
  double _previousJoystickFocusMovementTime;
  double _previousJoystickRegionEntryTime;
  unsigned long long _joystickRepeatingHeading;
  CADisplayLink *_joystickFocusDirectionDisplayLink;
  _UIFocusMovementInfo *_previousJoystickFocusMovementInfo;
  long long _joystickRepeatCount;
  UIScrollView *_lastScrolledScroll;
  double _lastEdgeScrollEdgeValue;
  unsigned long long _inputType;
  _UIFocusItemInfo *_cachedFocusItemInfo;
  struct { unsigned int x :1 isEligibleToCrossSpeedBump; unsigned int x :1 isContinuingTouchWithMomentum; unsigned int x :1 isPerformingJoystickRollback; unsigned int x :1 isJoystickInRepeatMode; unsigned int x :1 isPendingJoystickRepeat; unsigned int x :1 isFastScrolling; unsigned int x :1 shouldApplyAcceleration; unsigned int x :1 shouldSupressActiveIndirectMotionUpdates; unsigned int x :1 startDeferingFocusOnTapHoldEnded; } _flags;
}

@property (retain, nonatomic) UIMoveEvent *moveEvent;
@property (readonly, nonatomic) _UIFocusEffectsController *motionEffectsController;
@property (readonly, nonatomic) _UIFocusFastScrollingRecognizer *fastScrollingRecognizer;
@property (readonly, weak, nonatomic) UIView *owningView;
@property (nonatomic) BOOL enabled;
@property (readonly, nonatomic) NSArray *keyCommands;
@property (weak, nonatomic) NSObject<_UIFocusEventRecognizerDelegate> *delegate;
@property (readonly, nonatomic) NSSet *gesturesForFailureRequirements;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_canSupportFastScrolling;

/* instance methods */
- (id)init;
- (id)initWithOwningView:(id)view;
- (void)dealloc;
- (void)reset;
- (void)setGesture:(id)gesture forName:(unsigned long long)name;
- (id)gestureForName:(unsigned long long)name;
- (void)_updateGestureRecognizersForcingRemoval:(BOOL)removal studyLogData:(id)data;
- (void)_updateRotaryIndicatorView;
- (void)_updateGestureRecognizersForcingRemoval:(BOOL)removal;
- (void)_cancelAllGestureRecognizers;
- (void)_focusDidUpdate:(id)update;
- (void)_focusBehaviorDidChange:(id)change;
- (void)_focusSystemEnabledStateDidChange:(id)change;
- (id)_focusMovementSystem;
- (BOOL)_didRecognizeFocusMovementRequest:(id)request;
- (BOOL)_moveWithEvent:(id)event;
- (BOOL)_moveInDirection:(unsigned long long)direction groupFilter:(long long)filter;
- (BOOL)_moveInDirection:(unsigned long long)direction groupFilter:(long long)filter withSearchInfo:(id)info;
- (BOOL)_moveInDirection:(unsigned long long)direction groupFilter:(long long)filter withEvaluator:(id /* block */)evaluator;
- (void)_handleSelectGesture:(id)gesture;
- (void)_handleSelectObserverGesture:(id)gesture;
- (void)_handleArrowButtonGesture:(id)gesture;
- (void)_handlePageButtonGesture:(id)gesture;
- (void)_handleTabulatorGesture:(id)gesture;
- (void)_handlePanGesture:(id)gesture;
- (void)_handleTapGesture:(id)gesture;
- (void)_handleJoystickGesture:(id)gesture;
- (void)_handleLinearDebugOverlayGesture:(id)gesture;
- (void)_showLinearDebugOverlay:(BOOL)overlay;
- (BOOL)_hideLinearDebugOverlayIfNecessary:(BOOL)necessary;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (BOOL)gestureRecognizer:(id)recognizer shouldRequireFailureOfGestureRecognizer:(id)recognizer;
- (void)_gestureRecognizerFailed:(id)failed;
- (void)rotaryGestureRecognizerBeganClassifyingMovement:(id)movement;
- (void)rotaryGestureRecognizerFailedClassifyingMovement:(id)movement;
- (id)currentFocusBehavior;
- (BOOL)_buttonMaskTimeHasExpired;
- (int)_touchRegionForDigitizerLocation:(struct CGPoint { double x0; double x1; })location;
- (struct CGSize { double x0; double x1; })_touchSensitivityForItem:(id)item remoteTouchSurfaceType:(unsigned long long)type;
- (BOOL)_shouldAcceptInputType:(unsigned long long)type;
- (BOOL)_canMoveFocusWithRotaryInputInFocusContext:(id)context;
- (id)_focusSystemSceneComponent;
- (id)_globalCoordinateSpace;
- (void)_resetProgressAccumulator;
- (id)_retrieveCachedFocusItemInfo;
- (void)_resetCachedFocusItemInfo;
- (void)_handleRotaryGesture:(id)gesture;
- (void)_handleRotaryBegin:(id)begin;
- (void)_handleRotaryEnd:(id)end;
- (void)_handleRotaryCancelled:(id)cancelled;
- (void)_showRotaryIndicatorAfterDelay;
- (void)_cancelShowRotaryIndicatorTimer;
- (void)_timerFiredForShowRotaryIndicator:(id)indicator;
- (void)_showRotaryIndicator;
- (void)_hideRotaryIndicator;
- (void)_updateRotaryDistance:(double)distance delta:(double)delta reportedVelocity:(double)velocity remoteTouchSurfaceType:(unsigned long long)type focusMovementAxis:(long long)axis;
- (id)_createStudyLogDataForRotaryDistance:(double)distance delta:(double)delta reportedVelocity:(double)velocity;
- (id)_createRotaryMovementRequestWithFocusSystem:(id)system;
- (struct CGPoint { double x0; double x1; })_pointForLinearValue:(double)value axis:(unsigned long long)axis;
- (unsigned long long)_calculateLinearHeadingForAccumulator:(struct CGVector { double x0; double x1; })accumulator studyLogData:(id)data;
- (BOOL)_attemptRotaryFocusMovementWithLinearHeading:(unsigned long long)heading directionalHeading:(unsigned long long)heading focusMovementAxis:(long long)axis focusSystem:(id)system acceleratedVelocity:(struct CGPoint { double x0; double x1; })velocity studyLogData:(id)data;
- (void)_resetPanDeadband;
- (BOOL)focusEnginePanGestureRecognizerShouldRecognizeImmediately:(id)immediately;
- (void)_panGestureStart:(id)start;
- (void)_updatePanLocation:(struct CGPoint { double x0; double x1; })location reportedVelocity:(struct CGPoint { double x0; double x1; })velocity remoteTouchSurfaceType:(unsigned long long)type;
- (id)_createPanMovementRequestWithFocusSystem:(id)system;
- (id)_createStudyLogDataForPanNormalizedPoint:(struct CGPoint { double x0; double x1; })point reportedVelocity:(struct CGPoint { double x0; double x1; })velocity;
- (struct CGPoint { double x0; double x1; })_calculateDeltaForNormalizedPoint:(struct CGPoint { double x0; double x1; })point studyLogData:(id)data;
- (struct CGPoint { double x0; double x1; })_applyPanDeadbandToValue:(struct CGPoint { double x0; double x1; })value startPoint:(struct CGPoint { double x0; double x1; })point currentPoint:(struct CGPoint { double x0; double x1; })point remoteTouchSurfaceType:(unsigned long long)type;
- (struct CGPoint { double x0; double x1; })_applyHorizontalFlipForFocusItemInfo:(id)info toDelta:(struct CGPoint { double x0; double x1; })delta;
- (struct CGPoint { double x0; double x1; })_applyAxisLockingForNormalizedPoint:(struct CGPoint { double x0; double x1; })point toDelta:(struct CGPoint { double x0; double x1; })delta;
- (struct CGPoint { double x0; double x1; })_applyButtonMaskTimeToValue:(struct CGPoint { double x0; double x1; })value remoteTouchSurfaceType:(unsigned long long)type;
- (struct CGVector { double x0; double x1; })_accelerationFactorForCurrentVelocity:(struct CGPoint { double x0; double x1; })velocity alpha:(double)alpha isRotaryGesture:(BOOL)gesture isFocusInKeyboard:(BOOL)keyboard remoteTouchSurfaceType:(unsigned long long)type;
- (void)_updateAccumulatorsWithScaledDelta:(struct CGPoint { double x0; double x1; })delta unlockedDelta:(struct CGPoint { double x0; double x1; })delta studyLogData:(id)data;
- (void)_updateMotionEffectsControllerWithProgressAccumulator:(struct CGVector { double x0; double x1; })accumulator unlockedAccumulator:(struct CGVector { double x0; double x1; })accumulator;
- (unsigned long long)_calculateDirectionalHeadingForAccumulator:(struct CGVector { double x0; double x1; })accumulator studyLogData:(id)data;
- (BOOL)_attemptPanFocusMovementWithHeading:(unsigned long long)heading acceleratedVelocity:(struct CGPoint { double x0; double x1; })velocity focusSystem:(id)system studyLogData:(id)data;
- (id)_createMovementInfoForHeading:(unsigned long long)heading groupFilter:(long long)filter acceleratedVelocity:(struct CGPoint { double x0; double x1; })velocity;
- (BOOL)_attemptToRecognizeContinuousMovementRequest:(id)request;
- (void)_continuousMovementSucceededWithDirectionalHeading:(unsigned long long)heading;
- (void)_continuousMovementFailedWithPrimaryHeading:(unsigned long long)heading;
- (void)_updateFailedContinuousMovementHeading:(unsigned long long)heading;
- (BOOL)_hasFailedMovementHeadingExpired;
- (void)_cleanupPanMomentumWithAccumulator:(struct CGVector { double x0; double x1; })accumulator movementSuccess:(BOOL)success;
- (void)_panGestureEnd:(id)end;
- (void)_panGestureCancelled:(id)cancelled;
- (void)_resetProgressAccumulatorWithHeading:(unsigned long long)heading;
- (void)_resetContinuousMovementState;
- (void)_resetFailedMovementHeading;
- (void)_joystickGestureBegan:(id)began;
- (void)_joystickGestureUpdated:(id)updated;
- (void)_joystickGestureEnded:(id)ended;
- (void)_exitJoystickModeForReal:(id)real;
- (void)_handleJoystickRepeatMode:(id)mode;
- (void)_handleJoystickTiltMode:(id)mode;
- (BOOL)_joystickAttemptFocusMovementWithRequest:(id)request;
- (void)_joystickPerformRepeat:(id)repeat;
- (double)_joystickRepeatDurationForTimeInMovementZone:(double)zone;
- (BOOL)_joystickFocusMovement:(id)movement shouldBeConsideredEqualToFocusMovement:(id)movement;
- (id)_focusMovementForJoystickPosition:(struct CGPoint { double x0; double x1; })position usingMinimumRadius:(double)radius focusMovementStyle:(long long)style;
- (struct CGVector { double x0; double x1; })_joystickVelocityForHeading:(unsigned long long)heading;
- (unsigned long long)_headingForJoystickPosition:(struct CGPoint { double x0; double x1; })position usingMinimumRadius:(double)radius;
- (void)_joystickDisplayLinkHeartbeat:(id)heartbeat;
- (void)_resetJoystick;
- (void)_resetMotionEffects;
- (struct CGSize { double x0; double x1; })_momentumReferenceSize;
- (void)_resetMomentum;
- (void)_recordMomentumForPoint:(struct CGPoint { double x0; double x1; })point reportedVelocity:(struct CGPoint { double x0; double x1; })velocity;
- (void)_continueTouchWithMomentum;
- (void)_beginMomentumImmediatelyWithVelocity:(struct CGPoint { double x0; double x1; })velocity friction:(double)friction;
- (unsigned long long)_momentumFocusHeadingForAccumulator:(struct CGVector { double x0; double x1; })accumulator;
- (void)_momentumHeartbeat:(id)heartbeat;
- (BOOL)_shouldPerformFocusUpdateWithCurrentMomentumStatus;
- (void)_stopMomentumAndPerformRollback;
- (void)_sendMomentumEndNotificationsAndAnimateRollback:(BOOL)rollback;
- (void)_sendGestureBeginNotification;
- (void)_uiktest_setPanGestureRecognizer:(id)recognizer;
- (id)_uiktest_panGestureRecognizer;
- (void)_uiktest_handlePanGesture:(id)gesture;
- (BOOL)isEnabled;
- (id)_moveEvent;
- (void)_setMoveEvent:(id)event;
- (id)_motionEffectsController;
- (id)_fastScrollingRecognizer;
@end

#endif /* _UIFocusEventRecognizer_h */
