//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIDatePickerMode_h
#define _UIDatePickerMode_h
@import Foundation;

#include "UIColor.h"
#include "_UIDatePickerView.h"

@class NSArray, NSDate, NSDateComponents, NSNumberFormatter, NSString, UIFont;

@interface _UIDatePickerMode : NSObject {
  /* instance variables */
  struct _NSRange { unsigned long long location; unsigned long long length; } _maxDayRange;
  struct _NSRange { unsigned long long location; unsigned long long length; } _maxMonthRange;
  NSArray *_dateFormatters;
  NSNumberFormatter *_formatter;
  BOOL _isUsingJapaneseCalendar;
}

@property (weak, nonatomic) _UIDatePickerView *datePickerView;
@property (readonly, nonatomic) UIFont *amPmFont;
@property (readonly, nonatomic) UIFont *font;
@property (readonly, nonatomic) UIFont *defaultTimeFont;
@property (readonly, nonatomic) UIFont *sizedFont;
@property (readonly, nonatomic) NSString *amString;
@property (readonly, nonatomic) NSString *pmString;
@property (nonatomic) unsigned long long numberOfComponents;
@property (nonatomic) unsigned long long * elements;
@property (retain, nonatomic) NSString *localizedFormatString;
@property (retain, nonatomic) NSDate *baseDate;
@property (retain, nonatomic) NSDateComponents *baseDateComponents;
@property (nonatomic) long long yearsSinceBaseDate;
@property (retain, nonatomic) NSDate *originatingDate;
@property (retain, nonatomic) NSDateComponents *selectedDateComponents;
@property (readonly, nonatomic) long long datePickerMode;
@property (readonly, nonatomic) double rowHeight;
@property (readonly, nonatomic) long long displayedCalendarUnits;
@property (readonly, nonatomic) UIColor *todayTextColor;
@property (nonatomic) long long minuteInterval;
@property (retain, nonatomic) NSDateComponents *todayDateComponents;
@property (nonatomic) double todaySinceReferenceDate;
@property (readonly, nonatomic) NSDate *minimumDate;
@property (readonly, nonatomic) NSDateComponents *minimumDateComponents;
@property (readonly, nonatomic) NSDate *maximumDate;
@property (readonly, nonatomic) NSDateComponents *maximumDateComponents;
@property (readonly, nonatomic) BOOL hasSelectedDateComponents;
@property (readonly, @dynamic, nonatomic) double totalComponentWidth;
@property (readonly, @dynamic, nonatomic) BOOL is24Hour;
@property (readonly, @dynamic, nonatomic) BOOL isTimeIntervalMode;

/* class methods */
+ (void)initialize;
+ (id)newDateFromGregorianYear:(long long)year month:(long long)month day:(long long)day timeZone:(id)zone;
+ (long long)datePickerMode;
+ (id)_datePickerModeWithMode:(long long)mode datePickerView:(id)view;
+ (id)_datePickerModeWithFormatString:(id)string datePickerView:(id)view;
+ (unsigned long long)extractableCalendarUnits;

/* instance methods */
- (id)init;
- (void)dealloc;
- (long long)_yearlessYearForMonth:(long long)month;
- (BOOL)followsSystemHourCycle;
- (id)calendar;
- (id)calendarForFormatters;
- (id)locale;
- (id)timeZone;
- (id)_style;
- (void)_shouldReset:(id)reset;
- (double)componentWidthForTwoDigitCalendarUnit:(unsigned long long)unit font:(id)font maxWidth:(double)width;
- (id)dateFormatterForCalendarUnit:(unsigned long long)unit;
- (void)clearBaseDate;
- (id)fontForCalendarUnit:(unsigned long long)unit;
- (void)invalidateTodayTextColor;
- (double)widthForComponent:(long long)component maxWidth:(double)width;
- (double)widthForCalendarUnit:(unsigned long long)unit font:(id)font maxWidth:(double)width;
- (void)fixUpElementsForRTL;
- (unsigned long long)calendarUnitForComponent:(long long)component;
- (long long)componentForCalendarUnit:(unsigned long long)unit;
- (long long)numberOfRowsInComponent:(long long)component;
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)unit;
- (void)noteCalendarChanged;
- (void)resetComponentWidths;
- (double)totalComponentWidthWithFont:(id)font;
- (long long)_incrementForStaggeredTimeIntervals;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)unit;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)unit;
- (id)_dateByEnsuringValue:(long long)value forCalendarUnit:(unsigned long long)unit;
- (id)_dateForYearRow:(long long)row;
- (long long)secondForRow:(long long)row;
- (long long)minuteForRow:(long long)row;
- (long long)hourForRow:(long long)row;
- (long long)dayForRow:(long long)row;
- (long long)monthForRow:(long long)row;
- (long long)yearForRow:(long long)row;
- (long long)eraForYearRow:(long long)row;
- (long long)valueForRow:(long long)row inCalendarUnit:(unsigned long long)unit;
- (id)dateForRow:(long long)row inCalendarUnit:(unsigned long long)unit;
- (id)dateFormatForCalendarUnit:(unsigned long long)unit;
- (id)titleForRow:(long long)row inComponent:(long long)component;
- (long long)titleAlignmentForCalendarUnit:(unsigned long long)unit;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeForCalendarUnit:(unsigned long long)unit;
- (long long)rowForDate:(id)date dateComponents:(id)components component:(long long)component currentRow:(long long)row;
- (long long)valueForDate:(id)date dateComponents:(id)components calendarUnit:(unsigned long long)unit;
- (long long)rowForValue:(long long)value forCalendarUnit:(unsigned long long)unit currentRow:(long long)row;
- (long long)validateValue:(long long)value forCalendarUnit:(unsigned long long)unit;
- (void)loadDate:(id)date animated:(BOOL)animated;
- (void)updateSelectedDateComponentsWithNewValueInComponent:(long long)component;
- (void)resetSelectedDateComponentsWithValuesUnderSelectionBars;
- (void)_updateSelectedDateComponentsWithNewValueInComponent:(long long)component usingSelectionBarValue:(BOOL)value;
- (long long)_numberOfDaysInDateComponents:(id)components;
- (BOOL)_monthExists:(long long)exists inYear:(long long)year;
- (id)dateComponentsByRestrictingSelectedComponents:(id)components withLastManipulatedColumn:(long long)column;
- (void)updateDateForNewDateRange;
- (id)viewForRow:(long long)row inComponent:(long long)component reusingView:(id)view;
- (BOOL)areValidDateComponents:(id)components comparingUnits:(long long)units;
- (BOOL)_isComponentScrolling:(long long)scrolling;
- (BOOL)_scrollingAnyColumnExcept:(int)except;
- (BOOL)_shouldEnableValueForRow:(long long)row column:(long long)column;
- (BOOL)_shouldEnableValueForRow:(long long)row inComponent:(long long)component calendarUnit:(unsigned long long)unit;
- (void)updateEnabledStateOfViewForRow:(long long)row inComponent:(long long)component;
@end

#endif /* _UIDatePickerMode_h */
