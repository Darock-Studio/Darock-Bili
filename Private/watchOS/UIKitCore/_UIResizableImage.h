//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIResizableImage_h
#define _UIResizableImage_h
@import Foundation;

#include "UIImage.h"

@interface _UIResizableImage : UIImage {
  /* instance variables */
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _capInsets;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _subimageInsets;
  struct { unsigned int x :1 alwaysStretches; unsigned int x :1 isSubimage; } _rImageFlags;
}

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (BOOL)_suppressesAccessibilityHairlineThickening;
- (void)_configureImage:(id)image assumePreconfigured:(BOOL)preconfigured;
- (id)initWithImage:(id)image capInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)_setCapInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })capInsets;
- (void)_setSubimageInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_subimageInsets;
- (long long)resizingMode;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectInPixelsApplyingInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets emptySizeFallback:(id /* block */)fallback;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentStretchInPixels;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectInPixels;
- (BOOL)_isSubimage;
- (BOOL)_isResizable;
- (void)_setAlwaysStretches:(BOOL)stretches;
- (BOOL)_isTiledWhenStretchedToSize:(struct CGSize { double x0; double x1; })size;
- (id)_resizableImageWithCapMask:(int)mask;
- (BOOL)isEqual:(id)equal;
@end

#endif /* _UIResizableImage_h */
