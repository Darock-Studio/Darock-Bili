//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UITextSizeCache_h
#define _UITextSizeCache_h
@import Foundation;

@protocol {ui_size_cache="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<ui_size_cache_value *, std::allocator<ui_size_cache_value>>="__value_"^{?}}};

@interface _UITextSizeCache : NSObject {
  /* instance variables */
  struct ui_size_cache { struct  *__begin_; struct  *__end_; struct __compressed_pair<ui_size_cache_value *, std::allocator<ui_size_cache_value>> { struct  *__value_; } __end_cap_; } _cache;
}

/* instance methods */
- (BOOL)getSize:(struct CGSize { double x0; double x1; } *)size baselineInfo:(struct { double x0; double x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; long long x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; } *)info forTargetSize:(struct CGSize { double x0; double x1; })size isMultiline:(BOOL)multiline;
- (void)addSize:(struct CGSize { double x0; double x1; })size baselineInfo:(struct { double x0; double x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; long long x3; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x4; } *)info forTargetSize:(struct CGSize { double x0; double x1; })size;
- (void)removeAllSizes;
- (id)description;
@end

#endif /* _UITextSizeCache_h */
