//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIRemoteKeyboards_h
#define _UIRemoteKeyboards_h
@import Foundation;

#include "UIRemoteKeyboardWindow.h"
#include "UIScreen.h"
#include "UIView.h"
#include "UIWindowScene.h"
#include "_UIAssertionController.h"
#include "_UIAssertionControllerSubject-Protocol.h"
#include "_UIKeyboardArbiterClient-Protocol.h"
#include "_UIKeyboardArbitration-Protocol.h"
#include "_UIKeyboardArbitrationClient-Protocol.h"
#include "_UIKeyboardChangedInformation.h"
#include "_UIRemoteKeyboardControllerDelegate-Protocol.h"
#include "_UIRemoteKeyboardDistributedViewSource-Protocol.h"
#include "_UIRemoteKeyboardsEventObserver.h"
#include "_UIRemoteKeyboardsEventObserverDelegate-Protocol.h"

@class BOOL *, FBSScene, NSArray, NSHashTable, NSMapTable, NSMutableArray, NSMutableSet, NSString, NSXPCConnection;

@interface _UIRemoteKeyboards : NSObject<_UIRemoteKeyboardDistributedViewSource, _UIKeyboardArbitrationClient, _UIRemoteKeyboardControllerDelegate, _UIRemoteKeyboardsEventObserverDelegate, _UIAssertionControllerSubject, _UIKeyboardArbiterClient> {
  /* instance variables */
  NSHashTable *_windowControllers;
  int _ignoreLayoutSubviews;
  double _requiredLevel;
  NSMutableArray *_activePIDs;
  NSMutableArray *_activeCIDs;
  UIView *_keyboardSnapshot;
  BOOL _expectingInitialState;
  int _hostedCount;
  BOOL _hadFocusBeforeOverlay;
  BOOL _deactivatedByControlCenter;
  BOOL _deactivatedBySystemAlert;
  BOOL _enqueuedWillEnterForegroundActions;
  UIWindowScene *_suppressedScene;
  BOOL _expectedSuppression;
  int _externalSuppression;
  int _recursionCheck;
  NSMutableSet *_pendingKeyboardGrabs;
  BOOL _takingSnapshot;
  BOOL _windowEnabled;
  UIScreen *_lastScreen;
  BOOL _disablingKeyboard;
  double _remoteIAVHeight;
  NSMapTable *_minimumKeyboardHeights;
  _UIRemoteKeyboardsEventObserver *_eventObserver;
  long long _keyboardSource;
  NSString *_keyboardSceneIdentifierEnteringForeground;
  _UIAssertionController *_assertionController;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSXPCConnection *connection;
@property (retain) _UIKeyboardChangedInformation *currentState;
@property (retain) _UIKeyboardChangedInformation *backupState;
@property BOOL currentKeyboard;
@property (readonly) NSArray *currentHostedPIDs;
@property (readonly) FBSScene *requiredScene;
@property (copy, nonatomic) NSString *focusedSceneIdentityStringOrIdentifier;
@property BOOL didSignalKeyboardChangedForCurrentKeyboard;
@property BOOL updatingKeyWindow;
@property (nonatomic) BOOL pendingAutofillRequest;
@property (readonly) BOOL oldPathForSnapshot;
@property (nonatomic) BOOL handlingRemoteEvent;
@property BOOL handlingViewServiceEvent;
@property (readonly) BOOL sceneIsFullScreen;
@property (nonatomic) long long lastEventSource;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } keyboardFrameIncludingRemoteIAV;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } keyboardPosition;
@property (readonly, nonatomic) BOOL isFloating;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } persistentOffset;
@property (readonly) NSObject<_UIKeyboardArbitration> *proxy;
@property BOOL disableBecomeFirstResponder;
@property (readonly) UIRemoteKeyboardWindow *keyboardWindow;
@property (nonatomic) BOOL enableMultiscreenHack;
@property (readonly) BOOL remoteKeyboardUndocked;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) BOOL keyboardVisible;
@property (readonly) BOOL keyboardActive;
@property (readonly) BOOL updatingHeight;
@property (readonly, nonatomic) double heightForRemoteIAVPlaceholderIfNecessary;
@property (nonatomic) BOOL shouldFence;
@property (nonatomic) BOOL snapshotting;

/* class methods */
+ (BOOL)enabled;
+ (id)sharedRemoteKeyboards;
+ (BOOL)useSystemService;
+ (id)serviceName;
+ (id)createArbiterConnection;
+ (BOOL)wantsUnassociatedWindowSceneForKeyboardWindow;
+ (id)keyboardWindowSceneForScreen:(id)screen create:(BOOL)create;

/* instance methods */
- (void)startTransition:(id)transition withInfo:(id)info;
- (void)updateTransition:(id)transition withInfo:(id)info;
- (void)completeTransition:(id)transition withInfo:(id)info;
- (void)setPlacement:(id)placement quietly:(BOOL)quietly animated:(BOOL)animated generateSplitNotification:(BOOL)notification;
- (id)init;
- (void)dealloc;
- (BOOL)currentStateHasEqualRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect andIAVPosition:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })iavposition;
- (void)updateCurrentState:(id)state;
- (void)signalToProxyKeyboardChanged:(id)changed onCompletion:(id /* block */)completion;
- (void)assertNeedsAutofillUI;
- (void)queue_activeProcessResignWithCompletion:(id /* block */)completion;
- (void)queue_failedConnection:(id)connection;
- (void)startConnection;
- (void)resetSnapshotWithWindowCheck:(BOOL)check;
- (unsigned long long)localSceneCount;
- (BOOL)didHandleKeyboardChange:(id)change shouldConsiderSnapshottingKeyboard:(BOOL)keyboard isLocalEvent:(BOOL)event;
- (void)keyboardChangedCompleted;
- (void)queue_keyboardUIDidChange:(id)change onComplete:(id /* block */)complete;
- (void)queue_endInputSessionWithCompletion:(id /* block */)completion;
- (void)queue_keyboardChanged:(id)changed onComplete:(id /* block */)complete;
- (void)queue_keyboardChangedWithCompletion:(id /* block */)completion;
- (void)queue_keyboardIAVChanged:(double)iavchanged onComplete:(id /* block */)complete;
- (void)queue_sceneBecameFocused:(id)focused withCompletion:(id /* block */)completion;
- (void)queue_getDebugInfoWithCompletion:(id /* block */)completion;
- (void)stopConnection;
- (void)cleanSuppression;
- (void)checkConnection;
- (Class)keyboardWindowClass;
- (void)reloadForSnapshotting;
- (void)sceneUpdated;
- (void)checkState;
- (void)setWindowEnabled:(BOOL)enabled;
- (void)setWindowEnabled:(BOOL)enabled force:(BOOL)force;
- (void)_lostWindow:(id)window;
- (void)sceneDidDisconnect:(id)disconnect;
- (void)applicationDidSuspend:(id)suspend;
- (void)applicationWillResume:(id)resume;
- (void)willLock:(id)lock;
- (void)applicationResumedEventsOnly:(id)only;
- (void)applicationKeyWindowWillChange:(id)change;
- (void)applicationKeyWindowDidChange:(id)change;
- (BOOL)needsToShowKeyboardForWindow:(id)window;
- (BOOL)needsToShowKeyboardForViewServiceHostWindow:(id)window;
- (void)sceneDidEnterBackground:(id)background;
- (void)sceneDidActivate:(id)activate;
- (void)setKeyboardSceneIdentifierEnteringForegroundForScene:(id)scene;
- (void)clearKeyboardSceneIdentifierEnteringForeground:(id)foreground;
- (void)sceneWillEnterForeground:(id)foreground;
- (void)screenDidDisconnect:(id)disconnect;
- (BOOL)allowedToEnableKeyboardWindow;
- (BOOL)allowedToShowKeyboard;
- (BOOL)isOnScreenRotating;
- (BOOL)wantsToShowKeyboardForWindow:(id)window;
- (BOOL)wantsToShowKeyboardForViewServiceHostWindow:(id)window;
- (void)updateLastScreen:(id)screen;
- (void)prepareToMoveKeyboard:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })keyboard withIAV:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })iav isIAVRelevant:(BOOL)iavrelevant showing:(BOOL)showing notifyRemote:(BOOL)remote forScene:(id)scene;
- (id)viewHostForWindow:(id)window;
- (void)completeMoveKeyboardForWindow:(id)window;
- (void)setWindowLevel:(double)level sceneLevel:(double)level forResponder:(id)responder;
- (void)controllerDidLayoutSubviews:(id)subviews;
- (void)ignoreLayoutNotifications:(id /* block */)notifications;
- (void)registerController:(id)controller;
- (void)unregisterController:(id)controller;
- (void)performOnControllers:(id /* block */)controllers;
- (void)_performOnDistributedControllersExceptSelf:(id /* block */)self;
- (void)performOnDistributedControllers:(id /* block */)controllers;
- (void)performOnLocalDistributedControllers:(id /* block */)controllers;
- (id)_activeScreen;
- (id)prepareForHostedWindowWithScene:(id)scene;
- (void)finishWithHostedWindow;
- (BOOL)refreshWithLocalMinimumKeyboardHeight:(double)height forScene:(id)scene;
- (BOOL)hasLocalMinimumKeyboardHeightForScene:(id)scene;
- (double)intersectionHeightForWindowScene:(id)scene;
- (double)intersectionHeightForWindowScene:(id)scene isLocalMinimumHeightOut:(BOOL *)out ignoreHorizontalOffset:(BOOL)offset;
- (BOOL)remoteKeyboardUndocked:(BOOL)undocked;
- (void)addHostedWindowView:(id)view fromPID:(int)pid forScene:(id)scene callerID:(id)id;
- (BOOL)hasAnyHostedViews;
- (BOOL)hasWindowHostingCallerID:(id)id;
- (void)setSuppressingKeyboard:(BOOL)keyboard forScene:(id)scene;
- (void)queue_keyboardSuppressed:(BOOL)suppressed withCompletion:(id /* block */)completion;
- (void)queue_keyboardTransition:(id)transition event:(unsigned long long)event withInfo:(id)info onComplete:(id /* block */)complete;
- (void)setDisableBecomeFirstResponder:(BOOL)responder forSuppressionAssertion:(BOOL)assertion;
- (void)setDisableBecomeFirstResponder:(BOOL)responder forSuppressionAssertion:(BOOL)assertion updatePlacement:(BOOL)placement;
- (void)verifyPlacement;
- (id)vendKeyboardSuppressionAssertionForReason:(id)reason;
- (id)vendKeyboardSuppressionAssertionForReason:(id)reason type:(unsigned long long)type;
- (BOOL)assertionActivationStateForType:(unsigned long long)type;
- (void)assertionActivationStateChangedToState:(BOOL)state forType:(unsigned long long)type;
- (void)queue_setKeyboardDisabled:(BOOL)disabled withCompletion:(id /* block */)completion;
- (void)forceKeyboardAway;
- (void)preserveKeyboardWithId:(id)id;
- (void)restoreKeyboardWithId:(id)id;
- (void)userSelectedApp:(id)app onCompletion:(id /* block */)completion;
- (void)userSelectedProcessIdentifier:(int)identifier withSceneIdentity:(id)identity onCompletion:(id /* block */)completion;
- (void)_postInputSourceDidChangeNotificationForResponder:(id)responder;
- (void)_updateEventSource:(long long)source options:(unsigned long long)options;
- (void)_updateEventSource:(long long)source options:(unsigned long long)options responder:(id)responder;
- (void)updateEventSource:(long long)source options:(unsigned long long)options;
- (void)updateEventSource:(long long)source options:(unsigned long long)options responder:(id)responder;
- (void)queue_setLastEventSource:(long long)source withCompletion:(id /* block */)completion;
- (BOOL)_sceneFocusPermittedForApplication;
- (BOOL)_sceneFocusUpdatePermittedForWindow:(id)window;
- (void)peekApplicationEvent:(id)event;
- (void)restorePreservedInputViewsIfNecessary;
- (BOOL)shouldAllowInputViewsRestoredForId:(id)id;
- (void)applicationWillAddDeactivationReason:(id)reason;
- (void)applicationDidRemoveDeactivationReason:(id)reason;
- (void)applicationWillResignActive:(id)active;
- (void)applicationDidBecomeActive:(id)active;
- (void)applicationDidBecomeActive:(id)active forceSignalToProxy:(BOOL)proxy;
- (id)inputWindowRootViewController;
- (BOOL)isUpdatingKeyWindow;
@end

#endif /* _UIRemoteKeyboards_h */
