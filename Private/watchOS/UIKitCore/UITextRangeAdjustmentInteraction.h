//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UITextRangeAdjustmentInteraction_h
#define UITextRangeAdjustmentInteraction_h
@import Foundation;

#include "UITextInteraction.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UITextGestureTuning.h"
#include "UITextLoupeSession.h"
#include "UITextRangeAdjustmentGestureRecognizer.h"
#include "UITextRangeAdjustmentInteractionDelegate-Protocol.h"
#include "UITouch.h"
#include "UIView.h"

@class NSString;

@interface UITextRangeAdjustmentInteraction : UITextInteraction<UIGestureRecognizerDelegate> {
  /* instance variables */
  UIView *_gestureHostView;
  UITextGestureTuning *_gestureTuning;
  UITextLoupeSession *_loupeSession;
}

@property (nonatomic) struct CGPoint { double x0; double x1; } initialPoint;
@property (nonatomic) struct CGPoint { double x0; double x1; } basePoint;
@property (nonatomic) struct CGPoint { double x0; double x1; } extentPoint;
@property (nonatomic) struct CGPoint { double x0; double x1; } initialBasePoint;
@property (nonatomic) double initialDistance;
@property (nonatomic) double firstMovedTime;
@property (retain, nonatomic) UITouch *activeTouch;
@property (nonatomic) BOOL baseIsStart;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } initialExtentPoint;
@property (weak, nonatomic) NSObject<UITextRangeAdjustmentInteractionDelegate> *adjustmentDelegate;
@property (readonly, nonatomic) UITextRangeAdjustmentGestureRecognizer *adjustmentGestureRecognizer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithAdjustmentDelegate:(id)delegate gestureHostView:(id)view;
- (id)gestureRecognizerHostView;
- (BOOL)doesControlDelegate;
- (void)_didRecognizeAdjustmentGesture:(id)gesture;
- (BOOL)gestureRecognizer:(id)recognizer shouldBeRequiredToFailByGestureRecognizer:(id)recognizer;
- (BOOL)gestureRecognizer:(id)recognizer shouldRequireFailureOfGestureRecognizer:(id)recognizer;
- (void)_createGestureTuningIfNecessary;
- (BOOL)_gestureTuningEnabledForTouches:(id)touches;
- (id)_gestureView;
- (struct CGPoint { double x0; double x1; })_convertPointToViewCoordinateSpace:(struct CGPoint { double x0; double x1; })space;
- (BOOL)_pointCloserToEnd:(struct CGPoint { double x0; double x1; })end startEdge:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })edge endEdge:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })edge;
- (void)updateBaseAndExtentPointsFromEdges;
- (BOOL)_shouldApplyOffsetForTouchType:(long long)type;
- (BOOL)_shouldDisplayLoupeForTouchType:(long long)type;
- (void)_updateAdjustmentInteractionWithState:(long long)state location:(struct CGPoint { double x0; double x1; })location locationOfFirstTouch:(struct CGPoint { double x0; double x1; })touch forTouchType:(long long)type;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_activeAdjustmentEdgeRect;
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)_adjustmentInteractionBeganWithLocation:(struct CGPoint { double x0; double x1; })location startPoint:(struct CGPoint { double x0; double x1; })point forTouchType:(long long)type;
- (void)_adjustmentInteractionChangedWithLocation:(struct CGPoint { double x0; double x1; })location forTouchType:(long long)type;
- (void)_adjustmentInteractionEndedAtLocation:(struct CGPoint { double x0; double x1; })location forTouchType:(long long)type;
- (void)_adjustmentInteractionCancelled;
- (void)_activeTouchEnded;
- (void)manuallyUpdateInteractionWithGestureState:(long long)state location:(struct CGPoint { double x0; double x1; })location locationOfFirstTouch:(struct CGPoint { double x0; double x1; })touch forTouchType:(long long)type;
@end

#endif /* UITextRangeAdjustmentInteraction_h */
