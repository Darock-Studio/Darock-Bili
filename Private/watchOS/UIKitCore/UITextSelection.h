//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UITextSelection_h
#define UITextSelection_h
@import Foundation;

#include "UITextRange.h"

@class DOMRange;
@protocol UIResponder<UITextInputPrivate;

@interface UITextSelection : NSObject

@property (readonly, weak, nonatomic) UIResponder<UITextInputPrivate> *document;
@property (retain, nonatomic) UITextRange *selectedRange;
@property (nonatomic) long long granularity;
@property (readonly, nonatomic) BOOL isValid;
@property (readonly, nonatomic) BOOL isCommitting;
@property (readonly, nonatomic) BOOL willSelectionChange;
@property (retain, nonatomic) UITextRange *base;
@property (retain, nonatomic) UITextRange *initialExtent;
@property (readonly, nonatomic) DOMRange *domRange;

/* instance methods */
- (id)initWithDocument:(id)document;
- (void)invalidate;
- (void)dealloc;
- (void)selectionChanged;
- (void)commit;
- (id)_domRange;
- (id)selectionRects;
- (id)underlineRectsForRange:(id)range;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectAtEndOfDocument;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectAtBeginOfDocument;
- (id)wordContainingCaretSelection;
- (id)selectedText;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })closestCaretRectForPoint:(struct CGPoint { double x0; double x1; })point inSelection:(BOOL)selection;
- (unsigned long long)offsetInMarkedText;
- (void)setSelectionWithPoint:(struct CGPoint { double x0; double x1; })point;
- (void)extendSelectionToPoint:(struct CGPoint { double x0; double x1; })point;
- (void)setHybridSelectionWithPoint:(struct CGPoint { double x0; double x1; })point;
- (void)selectAll;
- (void)clearSelection;
- (void)collapseSelection;
- (void)aggressivelyExpandSelectionToWordContainingCaretSelection;
- (void)aggressivelyExpandSelectionToSmartSelectionContainingCaretSelection;
- (void)alterSelection:(struct CGPoint { double x0; double x1; })selection granularity:(long long)granularity;
- (void)alterSelectionGranularity:(long long)granularity;
- (void)increaseSelectionGranularity;
- (void)moveCaretToBoundaryOfWhitespaceOrLine;
- (BOOL)pointAtStartOfLine:(struct CGPoint { double x0; double x1; })line;
- (BOOL)pointAtEndOfLine:(struct CGPoint { double x0; double x1; })line;
- (BOOL)hasEditableSelection;
- (BOOL)isRangedSelectionSpanningDocument;
- (void)setRangedSelectionBaseToCurrentSelection;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)clearRangedSelectionInitialExtent;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (struct CGPoint { double x0; double x1; })clipPoint:(struct CGPoint { double x0; double x1; })point inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)_allowsSelectionInversion;
- (id)_boundedOrInvertedSelectionRangeForExtent:(id)extent forPoint:(struct CGPoint { double x0; double x1; })point fromPosition:(id)position inDirection:(long long)direction;
- (BOOL)setRangedSelectionExtentPoint:(struct CGPoint { double x0; double x1; })point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;
- (BOOL)setRangedSelectionExtentPoint:(struct CGPoint { double x0; double x1; })point baseIsStart:(BOOL)start;
- (void)setSelectionWithFirstPoint:(struct CGPoint { double x0; double x1; })point secondPoint:(struct CGPoint { double x0; double x1; })point;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint { double x0; double x1; })point;
- (void)setGranularRangedSelectionWithExtentPoint:(struct CGPoint { double x0; double x1; })point;
- (void)smartExtendRangedSelection:(int)selection downstream:(BOOL)downstream;
@end

#endif /* UITextSelection_h */
