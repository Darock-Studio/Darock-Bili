//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIKeyboardInputModeController_h
#define UIKeyboardInputModeController_h
@import Foundation;

#include "UIKeyboardInputMode.h"
#include "UITextInputMode.h"

@class NSArray, NSDate, NSObject, NSString;
@protocol UIKeyboardInputModeControllerDelegate;

@interface UIKeyboardInputModeController : NSObject {
  /* instance variables */
  NSArray *_allExtensions;
  BOOL _skipExtensionInputModes;
  BOOL _excludeExtensionInputModes;
  BOOL _cacheNeedsRefresh;
  int _notifyPasscodeChangedToken;
  struct __CFUserNotification * _userNotification;
  struct __CFRunLoopSource * _userNotificationRunLoopSource;
  NSString *_newModeForUserNotification;
  NSObject *_keyboardTagForUserNotification;
  BOOL _suppressCurrentPublicInputMode;
}

@property (readonly) NSArray *supportedInputModeIdentifiers;
@property (readonly) NSArray *inputModesWithoutHardwareSupport;
@property (readonly) NSArray *enabledInputModeIdentifiers;
@property (readonly) NSArray *normalizedEnabledInputModeIdentifiers;
@property (readonly) NSArray *enabledInputModeLanguages;
@property (readonly) NSArray *activeInputModeIdentifiers;
@property (readonly) NSArray *activeUserSelectableInputModeIdentifiers;
@property (readonly, nonatomic) NSArray *allowedExtensions;
@property (retain) NSArray *keyboardInputModes;
@property (retain) NSArray *userSelectableKeyboardInputModes;
@property (retain) NSArray *keyboardInputModeIdentifiers;
@property (retain) NSArray *userSelectableKeyboardInputModeIdentifiers;
@property (retain) NSArray *enabledInputModes;
@property (retain) NSArray *normalizedInputModes;
@property (retain) NSArray *defaultKeyboardInputModes;
@property (copy, nonatomic) NSArray *defaultRawInputModes;
@property (retain) NSArray *defaultInputModes;
@property (retain) NSArray *defaultNormalizedInputModes;
@property (retain) NSArray *suggestedInputModesForSiriLanguage;
@property (retain, nonatomic) UIKeyboardInputMode *nextInputModeToUse;
@property (retain, nonatomic) UIKeyboardInputMode *currentUsedInputMode;
@property (retain, nonatomic) id extensionMatchingContext;
@property (nonatomic) BOOL delegateImplementsDictationHandlingMethods;
@property (nonatomic) BOOL delegateImplementsLegacyDictationHandlingMethods;
@property (retain) UIKeyboardInputMode *currentInputMode;
@property (weak, nonatomic) UIKeyboardInputMode *currentInputModeInPreference;
@property (retain, nonatomic) UITextInputMode *documentInputMode;
@property (retain, nonatomic) UIKeyboardInputMode *lastUsedInputMode;
@property (readonly, nonatomic) UIKeyboardInputMode *hardwareInputMode;
@property (readonly, nonatomic) UIKeyboardInputMode *currentSystemInputMode;
@property (readonly, nonatomic) UIKeyboardInputMode *currentPublicInputMode;
@property (readonly, nonatomic) UIKeyboardInputMode *currentLinguisticInputMode;
@property (readonly, nonatomic) UIKeyboardInputMode *lastUsedInputModeForCurrentContext;
@property (readonly, nonatomic) BOOL containsEmojiInputMode;
@property (readonly, nonatomic) BOOL containsDictationSupportedInputMode;
@property (readonly, nonatomic) NSArray *activeDictationSupportedInputModeIdentifiers;
@property (readonly, nonatomic) NSArray *activeDictationLanguages;
@property (readonly, nonatomic) NSArray *enabledDictationLanguages;
@property (copy, nonatomic) NSString *inputModeContextIdentifier;
@property (copy, nonatomic) NSArray *additionalTextInputLocales;
@property (nonatomic) BOOL shouldRunContinuousDiscovery;
@property (retain, nonatomic) NSDate *defaultsLastChangedDate;
@property (weak, nonatomic) NSObject<UIKeyboardInputModeControllerDelegate> *delegate;
@property (nonatomic) BOOL disableFloatingKeyboardFilter;
@property (nonatomic) BOOL disablesUpdateLastUsedInputModeTimer;
@property (nonatomic) BOOL lastInputModeSwitchTriggeredByASCIIToggle;

/* class methods */
+ (id)sharedInputModeController;
+ (id)disallowedDictationLanguagesForDeviceLanguage;
+ (BOOL)shouldShowDictationMic;
+ (BOOL)dictationInputModeIsFunctional;
+ (id)inputModeIdentifierForPreferredLanguages:(id)languages passingTest:(id /* block */)test;
+ (id)ASCIICapableInputModeIdentifierForPreferredLanguages;

/* instance methods */
- (void)saveDeviceUnlockPasscodeInputModes;
- (id)inputModesByAppendingApplicationLanguagesToInputModes:(id)modes;
- (id)enabledInputModeIdentifiers:(BOOL)identifiers;
- (id)userSelectableInputModesFromInputModes:(id)modes;
- (id)userSelectableInputModeIdentifiersFromInputModeIdentifiers:(id)identifiers;
- (void)updateUserSelectableInputModes;
- (id)identifiersFromInputModes:(id)modes;
- (id)inputModesFromIdentifiers:(id)identifiers;
- (BOOL)identifierIsValidSystemInputMode:(id)mode;
- (void)dealloc;
- (id)init;
- (id)inputModeWithIdentifier:(id)identifier;
- (id)activeInputModes;
- (id)activeUserSelectableInputModes;
- (id)_systemInputModePassingTest:(id /* block */)test;
- (id)_systemInputModePassingLanguageTest:(id /* block */)test;
- (id)currentSystemInputModeExcludingEmoji:(BOOL)emoji;
- (id)lastUsedInputModeForTextInputMode:(id)mode;
- (void)_trackInputModeIfNecessary:(id)necessary;
- (void)_inputModeChangedWhileContextTracked;
- (id)_prefixedKey;
- (id)_prefixedSetTimeKey;
- (id)textInputModeForResponder:(id)responder;
- (id)suggestedDictationLanguagesForDeviceLanguage;
- (id)defaultDictationLanguages:(id)languages;
- (id)keyboardLanguageForDictationLanguage:(id)language;
- (BOOL)isDictationLanguageEnabled:(id)enabled;
- (id)updateEnabledDictationLanguages:(BOOL)languages;
- (void)updateEnabledDictationAndSLSLanguagesWithCompletionBlock:(id /* block */)block;
- (void)changePreferredEmojiSearchInputModeForInputDelegate:(id)delegate;
- (void)setDictationSLSLanguagesEnabled:(id)enabled;
- (id)getDictationSLSLanguagesEnabled;
- (void)_setCurrentInputMode:(id)mode force:(BOOL)force;
- (void)updateCurrentInputMode:(id)mode;
- (BOOL)currentLocaleRequiresExtendedSetup;
- (id)filteredInputModesForSiriLanguageFromInputModes:(id)modes;
- (id)filteredTVInputModesFromInputModes:(id)modes;
- (id)inputModeByReplacingSoftwareLayoutWithSoftwareLayout:(id)layout inInputMode:(id)mode;
- (id)filteredPadInputModesFromInputModes:(id)modes withRules:(id)rules;
- (id)fallbackCurrentInputModeForFilteredInputMode:(id)mode fromInputModes:(id)modes;
- (id)fallbackCurrentInputModeForFilteredInputModeIdentifier:(id)identifier fromInputModeIdentifiers:(id)identifiers;
- (void)updateDefaultInputModesIfNecessaryForIdiom;
- (id)appendPasscodeInputModes:(id)modes;
- (id)defaultEnabledInputModesForCurrentLocale:(BOOL)locale;
- (id)suggestedInputModesForCurrentLocale:(BOOL)locale fallbackToDefaultInputModes:(BOOL)modes;
- (id)suggestedInputModesForHardwareKeyboardLanguage:(id)language countryCode:(id)code inputModes:(id)modes;
- (id)suggestedInputModesForCurrentHardwareKeyboardAndSuggestedInputModes:(id)modes;
- (id)suggestedInputModesForCurrentLocale;
- (id)suggestedInputModesForLocales:(id)locales;
- (id)suggestedInputModesForPreferredLanguages;
- (void)loadSuggestedInputModesForSiriLanguage;
- (void)willEnterForeground:(id)foreground;
- (void)keyboardsPreferencesChanged:(id)changed;
- (void)didEnterBackground:(id)background;
- (void)_clearAllExtensions;
- (void)_clearAllExtensionsIfNeeded;
- (id)_allExtensionsFromMatchingExtensions:(id)extensions;
- (void)_beginContinuousDiscoveryIfNeeded;
- (BOOL)_mayContainExtensionInputModes;
- (void)_removeInputModes:(id)modes;
- (id)_MCFilteredExtensionIdentifiers;
- (BOOL)deviceStateIsLocked;
- (BOOL)verifyKeyboardExtensionsWithApp;
- (BOOL)isLockscreenPasscodeKeyboard;
- (id)extensionInputModes;
- (id)nextInputModeFromList:(id)list withFilter:(unsigned long long)filter withTraits:(id)traits;
- (void)_setCurrentAndNextInputModePreference;
- (id)nextInputModeToUseForTraits:(id)traits updatePreference:(BOOL)preference;
- (void)clearNextInputModeToUse;
- (id)nextInputModeToUseForTraits:(id)traits;
- (id)nextInputModeInPreferenceListForTraits:(id)traits updatePreference:(BOOL)preference;
- (id)nextInputModeInPreferenceListForTraits:(id)traits updatePreference:(BOOL)preference skipEmoji:(BOOL)emoji;
- (id)nextInputModeInPreferenceListForTraits:(id)traits;
- (id)inputModeIdentifierLastUsedForLanguage:(id)language;
- (id)inputModeIdentifierLastUsedForLanguage:(id)language includingExtensions:(BOOL)extensions;
- (id)inputModeLastUsedForLanguage:(id)language;
- (id)inputModeLastUsedForLanguage:(id)language includingExtensions:(BOOL)extensions;
- (id)inputModeForASCIIToggleWithTraits:(id)traits;
- (void)updateLastUsedInputMode:(id)mode;
- (void)updateCurrentAndNextInputModes;
- (void)switchToCurrentSystemInputMode;
- (void)presentEnablementAndDataSharingPromptIfNeeded:(id /* block */)needed;
- (void)switchToDictationInputMode;
- (void)stopDictation;
- (void)switchToDictationInputModeWithOptions:(id)options;
- (BOOL)toggleDictationForResponder:(id)responder withOption:(id)option firstResponderSetupCompletion:(id /* block */)completion;
- (void)toggleDictationForResponder:(id)responder WithOptions:(id)options;
- (void)stopDictationAndResignFirstResponder;
- (void)forceDictationReturnToKeyboardInputMode;
- (void)performWithoutExtensionInputModes:(id /* block */)modes;
- (void)performWithForcedExtensionInputModes:(id /* block */)modes;
- (void)startDictationConnectionForFileAtURL:(id)url forInputModeIdentifier:(id)identifier;
- (void)startConnectionForFileAtURL:(id)url forInputModeIdentifier:(id)identifier;
- (id)supportedInputModesFromArray:(id)array;
- (void)handleLastUsedInputMode:(id)mode withNewInputMode:(id)mode;
- (id)hardwareLayoutToUseForInputMode:(id)mode;
- (id)hardwareLayoutToUseForInputMode:(id)mode hardwareKeyboardLanguage:(id)language countryCode:(id)code;
- (id)inputModeToAddForKeyboardLanguage:(id)language countryCode:(id)code activeModes:(id)modes;
- (id)fullInputModeFromIdentifier:(id)identifier hardwareKeyboardLanguage:(id)language;
- (void)showAddKeyboardAlertForInputModeIdentifier:(id)identifier;
- (void)didAcceptAddKeyboardInputMode;
- (void)releaseAddKeyboardNotification;
- (void)getHardwareKeyboardLanguage:(id *)language countryCode:(id *)code;
- (void)handleSpecificHardwareKeyboard:(id)keyboard;
- (id)supportedFullModesForHardwareKeyboard:(id)keyboard countryCode:(id)code activeModes:(id)modes matchedMode:(id *)mode;
@end

#endif /* UIKeyboardInputModeController_h */
