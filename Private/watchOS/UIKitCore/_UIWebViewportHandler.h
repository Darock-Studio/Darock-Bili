//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIWebViewportHandler_h
#define _UIWebViewportHandler_h
@import Foundation;

@protocol _UIWebViewportHandlerDelegate;

@interface _UIWebViewportHandler : NSObject {
  /* instance variables */
  BOOL _initialConfigurationHasBeenSentToDelegate;
  struct _UIWebViewportConfiguration { struct CGSize { double width; double height; } size; float initialScale; float minimumScale; float maximumScale; BOOL allowsUserScaling; BOOL allowsShrinkToFit; BOOL avoidsUnsafeArea; } _defaultConfiguration;
  struct _UIWebViewportConfiguration { struct CGSize { double width; double height; } size; float initialScale; float minimumScale; float maximumScale; BOOL allowsUserScaling; BOOL allowsShrinkToFit; BOOL avoidsUnsafeArea; } _configuration;
  struct CGSize { double width; double height; } _viewportArgumentsSize;
  BOOL _widthIsDeviceWidth;
  BOOL _heightIsDeviceHeight;
  BOOL _isInUpdateBlock;
}

@property (nonatomic) NSObject<_UIWebViewportHandlerDelegate> *delegate;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } documentBounds;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } availableViewSize;
@property (readonly, nonatomic) float initialScale;
@property (readonly, nonatomic) float minimumScale;
@property (readonly, nonatomic) float maximumScale;
@property (readonly, nonatomic) BOOL allowsUserScaling;
@property (readonly, nonatomic) unsigned int webkitDefinedConfigurationFlags;
@property (readonly, nonatomic) BOOL classicViewportMode;
@property (readonly, nonatomic) BOOL avoidsUnsafeArea;
@property (readonly, nonatomic) struct _UIWebViewportConfiguration { struct CGSize { double x0; double x1; } x0; float x1; float x2; float x3; BOOL x4; BOOL x5; BOOL x6; } rawViewConfiguration;

/* instance methods */
- (BOOL)shouldIgnoreHorizontalScalingConstraints;
- (BOOL)shouldIgnoreVerticalScalingConstraints;
- (BOOL)shouldIgnoreScalingConstraints;
- (void)update:(id /* block */)update;
- (void)setAvailableViewSize:(struct CGSize { double x0; double x1; })size updateConfigurationSize:(BOOL)size;
- (void)_resolveViewSizeRelativeLengths;
- (void)applyWebKitViewportArgumentsSize:(struct CGSize { double x0; double x1; })size initialScale:(float)scale minimumScale:(float)scale maximumScale:(float)scale allowsUserScaling:(float)scaling allowsShrinkToFit:(float)fit viewportFit:(id)fit;
- (void)clearWebKitViewportConfigurationFlags;
- (void)overrideViewportConfiguration:(const struct _UIWebViewportConfiguration { struct CGSize { double x0; double x1; } x0; float x1; float x2; float x3; BOOL x4; BOOL x5; BOOL x6; } *)configuration;
- (void)resetViewportConfiguration:(const struct _UIWebViewportConfiguration { struct CGSize { double x0; double x1; } x0; float x1; float x2; float x3; BOOL x4; BOOL x5; BOOL x6; } *)configuration;
- (float)viewportWidth;
- (float)viewportHeight;
- (double)integralInitialScale;
- (double)integralScaleForScale:(double)scale keepingPointFixed:(struct CGPoint { double x0; double x1; } *)fixed;
- (float)minimumScaleForViewSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)isClassicViewportMode;
@end

#endif /* _UIWebViewportHandler_h */
