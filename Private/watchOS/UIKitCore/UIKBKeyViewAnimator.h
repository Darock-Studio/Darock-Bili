//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIKBKeyViewAnimator_h
#define UIKBKeyViewAnimator_h
@import Foundation;

#include "CAAnimationDelegate-Protocol.h"

@class NSString;

@interface UIKBKeyViewAnimator : NSObject<CAAnimationDelegate>

@property (nonatomic) double keyScale;
@property (nonatomic) BOOL disabled;
@property (readonly, nonatomic) BOOL shouldPurgeKeyViews;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } primaryGlyphNormalizedExitRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } secondaryGlyphNormalizedExitRect;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)normalizedAnimationWithKeyPath:(id)path fromValue:(id)value toValue:(id)value;
+ (id)normalizedUnwindAnimationWithKeyPath:(id)path fromValue:(id)value toValue:(id)value offset:(double)offset;
+ (id)normalizedUnwindOpacityAnimationWithKeyPath:(id)path originallyFromValue:(id)value toValue:(id)value offset:(double)offset;
+ (id)normalizedUnwindAnimationWithKeyPath:(id)path originallyFromValue:(id)value toValue:(id)value offset:(double)offset;

/* instance methods */
- (Class)_keyViewClassForSpecialtyKey:(id)key screenTraits:(id)traits;
- (Class)keyViewClassForKey:(id)key renderTraits:(id)traits screenTraits:(id)traits;
- (double)delayedDeactivationTimeForKeyView:(id)view;
- (void)_fadeOutKeyView:(id)view duration:(double)duration completion:(id /* block */)completion;
- (void)_fadeInKeyView:(id)view duration:(double)duration completion:(id /* block */)completion;
- (id)keycapMeshTransformFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)keycapMeshTransformFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect scale:(double)scale;
- (id)keycapNullTransform;
- (id)keycapPrimaryTransform;
- (id)keycapPrimaryDualStringTransform:(id)transform;
- (id)keycapAlternateTransform:(id)transform;
- (id)keycapAlternateDualStringTransform:(id)transform;
- (id)primaryReverseTransform;
- (id)keycapLeftTransform;
- (id)keycapRightTransform;
- (id)keycapPrimaryExitTransform;
- (id)keycapLeftSelectPrimaryTransform;
- (id)keycapLeftSelectLeftTransform;
- (id)keycapLeftSelectRightTransform;
- (id)keycapRightSelectPrimaryTransform;
- (id)keycapRightSelectLeftTransform;
- (id)keycapRightSelectRightTransform;
- (BOOL)shouldAssertCurrentKeyState:(id)state;
- (BOOL)shouldTransitionKeyView:(id)view fromState:(int)state toState:(int)state;
- (void)transitionKeyView:(id)view fromState:(int)state toState:(int)state completion:(id /* block */)completion;
- (void)transitionOutKeyView:(id)view fromState:(int)state toState:(int)state completion:(id /* block */)completion;
- (void)transitionStartedForKeyView:(id)view alternateCount:(unsigned long long)count toLeft:(BOOL)left;
- (void)transitionEndedForKeyView:(id)view alternateCount:(unsigned long long)count;
- (void)updateTransitionForKeyView:(id)view normalizedDragSize:(struct CGSize { double x0; double x1; })size;
- (void)endTransitionForKeyView:(id)view;
- (void)reset;
@end

#endif /* UIKBKeyViewAnimator_h */
