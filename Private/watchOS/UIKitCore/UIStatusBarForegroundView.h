//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIStatusBarForegroundView_h
#define UIStatusBarForegroundView_h
@import Foundation;

#include "UIView.h"
#include "UIAccessibilityHUDGestureDelegate-Protocol.h"
#include "UIAccessibilityHUDGestureManager.h"
#include "UIStatusBar.h"
#include "UIStatusBarComposedData.h"
#include "UIStatusBarForegroundStyleAttributes.h"

@class NSMutableArray, NSString;

@interface UIStatusBarForegroundView : UIView<UIAccessibilityHUDGestureDelegate> {
  /* instance variables */
  BOOL _usesVerticalLayout;
  BOOL _itemIsEnabled[52];
  UIStatusBarLayoutManager * _layoutManagers[3];
  int _ignoreDataLevel;
  NSMutableArray *_actionAnimationStack;
  UIStatusBarComposedData *_currentData;
  UIStatusBarComposedData *_pendedData;
  int _pendedActions;
  UIAccessibilityHUDGestureManager *_accessibilityHUDGestureManager;
}

@property (nonatomic) long long idiom;
@property (readonly, nonatomic) UIStatusBarForegroundStyleAttributes *foregroundStyle;
@property (readonly, nonatomic) UIStatusBar *statusBar;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame foregroundStyle:(id)style usesVerticalLayout:(BOOL)layout;
- (void)dealloc;
- (id)_statusBarItemViewAtPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_statusBarWindowForAccessibilityHUD;
- (id)_accessibilityHUDGestureManager:(id)manager HUDItemForPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_accessibilityHUDGestureManager:(id)manager gestureLiftedAtPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)_accessibilityHUDGestureManager:(id)manager shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (void)_accessibilityHUDGestureManager:(id)manager showHUDItem:(id)huditem;
- (void)_dismissAccessibilityHUDForGestureManager:(id)manager;
- (BOOL)willChangeNavigationItemDisplayWithSystemNavigationAction:(id)action;
- (void)_setStatusBarData:(id)data actions:(int)actions animated:(BOOL)animated;
- (void)setStatusBarData:(id)data actions:(int)actions animated:(BOOL)animated;
- (void)reflowItemViewsCrossfadingCenter:(id)center duration:(double)duration;
- (void)_reflowItemViewsCrossfadingCenterWithDuration:(double)duration timeWasEnabled:(BOOL)enabled;
- (void)reflowItemViews:(BOOL)views;
- (void)reflowItemViewsForgettingEitherSideItemHistory;
- (void)startIgnoringData;
- (void)stopIgnoringData:(BOOL)data;
- (BOOL)ignoringData;
- (void)_cleanUpAfterSimpleReflow;
- (void)_cleanUpAfterDataChange;
- (void)_reflowItemViewsWithDuration:(double)duration preserveHistory:(BOOL)history;
- (void)didMoveToWindow;
- (id)_computeVisibleItemsPreservingHistory:(BOOL)history;
- (BOOL)_tryToPlaceItem:(id)item inItemArray:(id)array layoutManager:(id)manager roomRemaining:(double *)remaining allowSwap:(BOOL)swap swappedItem:(id *)item;
- (BOOL)isShowingBreadcrumb;
- (double)leftEdgePadding;
- (double)rightEdgePadding;
- (void)setPersistentAnimationsEnabled:(BOOL)enabled;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (void)_animateUnlockCompletionBlock:(id /* block */)block;
- (void)animateUnlock;
- (void)jiggleLockIcon;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForItemOfType:(int)type;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForAllItemsInRegion:(int)region;
- (BOOL)rectIntersectsTimeItem:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })item;
- (BOOL)rectIntersectsBatteryItem:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })item;
@end

#endif /* UIStatusBarForegroundView_h */
