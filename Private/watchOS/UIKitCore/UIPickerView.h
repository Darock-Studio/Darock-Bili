//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIPickerView_h
#define UIPickerView_h
@import Foundation;

#include "UIView.h"
#include "NSCoding-Protocol.h"
#include "UIColor.h"
#include "UIPickerTableViewContainerDelegate-Protocol.h"
#include "UIPickerViewDataSource-Protocol.h"
#include "UIPickerViewDelegate-Protocol.h"
#include "UIPickerViewScrollTesting-Protocol.h"
#include "UITableViewDataSource-Protocol.h"
#include "UITableViewDelegate-Protocol.h"
#include "UIView.h"
#include "_UIPickerViewStyle.h"
#include "_UIPickerViewTestParameters.h"

@class CALayer, NSMutableArray, NSString;

@interface UIPickerView : UIView<UIPickerViewScrollTesting, UITableViewDelegate, UIPickerTableViewContainerDelegate, UITableViewDataSource, NSCoding> {
  /* instance variables */
  NSMutableArray *_tables;
  UIView *_foregroundView;
  CALayer *_maskGradientLayer;
  UIView *_topLineOrFillView;
  UIView *_bottomLineView;
  struct { unsigned int x :1 needsLayout; unsigned int x :1 delegateRespondsToNumberOfComponentsInPickerView; unsigned int x :1 delegateRespondsToNumberOfRowsInComponent; unsigned int x :1 delegateRespondsToDidSelectRow; unsigned int x :1 delegateRespondsToViewForRow; unsigned int x :1 delegateRespondsToTitleForRow; unsigned int x :1 delegateRespondsToAttributedTitleForRow; unsigned int x :1 delegateRespondsToWidthForComponent; unsigned int x :1 delegateRespondsToRowHeightForComponent; unsigned int x :1 showsSelectionBar; unsigned int x :1 allowsMultipleSelection; unsigned int x :1 allowSelectingCells; unsigned int x :1 soundsDisabled; unsigned int x :1 usesCheckedSelection; unsigned int x :1 skipsBackground; unsigned int x :1 isInLayoutSubviews; unsigned int x :1 usesDynamicRowHeight; unsigned int x :1 selectionBarIgnoresInset; } _pickerViewFlags;
  _UIPickerViewTestParameters *_currentTestParameters;
  BOOL _magnifierEnabled;
}

@property (nonatomic) BOOL enabled;
@property (nonatomic) long long magnifierStyle;
@property (readonly, nonatomic) _UIPickerViewStyle *style;
@property (nonatomic) BOOL _magnifierEnabled;
@property (retain, nonatomic) UIColor *highlightColor;
@property (retain, nonatomic) UIColor *textColor;
@property (retain, nonatomic) UIColor *textShadowColor;
@property (retain, nonatomic) UIColor *magnifierLineColor;
@property BOOL usesDynamicRowHeight;
@property (nonatomic) BOOL _selectionBarIgnoresInset;
@property (weak, nonatomic) NSObject<UIPickerViewDataSource> *dataSource;
@property (weak, nonatomic) NSObject<UIPickerViewDelegate> *delegate;
@property (nonatomic) BOOL showsSelectionIndicator;
@property (readonly, nonatomic) long long numberOfComponents;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)_setAllowsUnsupportedMacIdiomBehavior:(BOOL)behavior;
+ (BOOL)_allowsUnsupportedMacIdiomBehavior;
+ (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits forTraits:(id)traits;
+ (struct CGSize { double x0; double x1; })sizeForMainScreenTraitsThatFits:(struct CGSize { double x0; double x1; })fits;
+ (struct CGSize { double x0; double x1; })defaultSizeForTraits:(id)traits;
+ (struct CGSize { double x0; double x1; })defaultSizeForMainScreenTraits;
+ (struct CGSize { double x0; double x1; })defaultSizeForCurrentOrientation;
+ (void)initialize;
+ (void)_prepareStyleStorageIfNecessary;
+ (void)_registerStyle:(id)style forIdiom:(long long)idiom;
+ (id)_styleForIdiom:(long long)idiom;

/* instance methods */
- (void)_performScrollTest:(id)test withIterations:(long long)iterations rowsToScroll:(long long)scroll inComponent:(long long)component;
- (void)_iterateOnCurrentTest;
- (void)_completeCurrentTest;
- (void)_noteScrollingFinishedForComponent:(long long)component;
- (BOOL)isAccessibilityElementByDefault;
- (void)setBackgroundColor:(id)color;
- (struct CGSize { double x0; double x1; })defaultSize;
- (void)_setUsesDynamicRowHeight:(BOOL)height;
- (BOOL)_usesDynamicRowHeight;
- (double)_rowHeightForDefaultFont;
- (double)_tableRowHeight;
- (void)setSoundsEnabled:(BOOL)enabled;
- (BOOL)_soundsEnabled;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithCoder:(id)coder;
- (void)_populateArchivedSubviews:(id)subviews;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (void)setNeedsLayout;
- (void)_updateSelectedRows;
- (void)didMoveToWindow;
- (void)_setColumnView:(id)view enabled:(BOOL)enabled;
- (void)_setEnabled:(BOOL)enabled;
- (void)reload;
- (void)reloadData;
- (void)reloadAllComponents;
- (void)reloadDataForColumn:(int)column;
- (void)reloadComponent:(long long)component;
- (id)_selectionBarSuffix;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectionBarRectForHeight:(double)height;
- (double)_selectionBarSideInset;
- (void)_setSelectionBarIgnoresInset:(BOOL)inset;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (struct CGSize { double x0; double x1; })_sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)traitCollectionDidChange:(id)change;
- (void)_sendCheckedRow:(long long)row inTableView:(id)view checked:(BOOL)checked;
- (double)scrollAnimationDuration;
- (long long)_delegateNumberOfComponents;
- (long long)_delegateNumberOfRowsInComponent:(long long)component;
- (id)_delegateTitleForRow:(long long)row forComponent:(long long)component;
- (id)_delegateAttributedTitleForRow:(long long)row forComponent:(long long)component;
- (double)_delegateWidthForComponent:(long long)component ofCount:(int)count withSizeLeft:(double)left;
- (double)_delegateRowHeightForComponent:(long long)component;
- (void)_addHighlightRectForRowHeight:(double)height;
- (void)_addMagnifierLinesForRowHeight:(double)height;
- (void)_setMagnifierLineColor:(id)color;
- (id)_createColumnWithTableFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame rowHeight:(double)height paddingAroundWheels:(double)wheels;
- (id)_createTableWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame forComponent:(long long)component;
- (struct CGSize { double x0; double x1; })rowSizeForComponent:(long long)component;
- (long long)numberOfRowsInComponent:(long long)component;
- (long long)numberOfRowsInColumn:(long long)column;
- (long long)numberOfColumns;
- (id)viewForRow:(long long)row forComponent:(long long)component;
- (void)reloadAllPickerPieces;
- (double)_wheelShift;
- (id)_contentView;
- (void)layoutSubviews;
- (void)_resetSelectionOfTables;
- (void)_updateWithOldSize:(struct CGSize { double x0; double x1; })size newSize:(struct CGSize { double x0; double x1; })size;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)_sendSelectionChangedForComponent:(long long)component notify:(BOOL)notify;
- (void)setAllowsMultipleSelection:(BOOL)selection;
- (BOOL)allowsMultipleSelection;
- (BOOL)_usesCheckSelection;
- (void)_sendSelectionChangedFromTable:(id)table notify:(BOOL)notify;
- (void)_setUsesCheckedSelection:(BOOL)selection;
- (BOOL)_usesCheckedSelection;
- (void)_setDrawsBackground:(BOOL)background;
- (BOOL)_drawsBackground;
- (BOOL)_needsLayout;
- (struct CGSize { double x0; double x1; })_contentSizeForRow:(long long)row inComponent:(long long)component;
- (BOOL)_forceTextAlignmentCentered;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })visibleRowsForColumn:(int)column;
- (long long)selectedRowInComponent:(long long)component;
- (int)selectedRowForColumn:(int)column;
- (long long)columnForTableView:(id)view;
- (id)tableViewForColumn:(long long)column;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_effectiveTableViewFrameForColumn:(long long)column;
- (void)_selectRow:(long long)row inComponent:(long long)component animated:(BOOL)animated notify:(BOOL)notify;
- (void)selectRow:(long long)row inComponent:(long long)component animated:(BOOL)animated;
- (void)selectRow:(int)row inColumn:(int)column animated:(BOOL)animated;
- (long long)tableView:(id)view numberOfRowsInSection:(long long)section;
- (id)tableView:(id)view cellForRowAtIndexPath:(id)path;
- (void)_setMagnifierEnabled:(BOOL)enabled;
- (id)_highlightColor;
- (void)_setHighlightColor:(id)color;
- (id)_textColor;
- (void)_setTextColor:(id)color;
- (id)_textShadowColor;
- (void)_setTextShadowColor:(id)color;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_perspectiveTransform;
- (void)_willPlayClickSound;
- (id)_scalarStatisticsForUserValueChangedEvent;
- (BOOL)_canHostViewControllerContentScrollView;
- (id)_systemDefaultFocusGroupIdentifier;
- (id)_style;
- (BOOL)_enabled;
- (long long)_magnifierStyle;
- (void)_setMagnifierStyle:(long long)style;
- (id)_magnifierLineColor;
@end

#endif /* UIPickerView_h */
