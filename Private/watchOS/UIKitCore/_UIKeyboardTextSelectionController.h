//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIKeyboardTextSelectionController_h
#define _UIKeyboardTextSelectionController_h
@import Foundation;

#include "UITextInteractionAssistant.h"
#include "UITextPosition.h"
#include "UITextRange.h"
#include "UITextSelection.h"
#include "UIView.h"

@protocol UIResponder<UITextInput, UISelectionInteractionAssistant;

@interface _UIKeyboardTextSelectionController : NSObject {
  /* instance variables */
  BOOL _hasInteractionAssistant;
  BOOL _hasSelectionInteractionAssistant;
  BOOL _hasTextInputView;
}

@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } caretRectForCursorPosition;
@property (retain, nonatomic) UITextRange *initialSelection;
@property (retain, nonatomic) UITextRange *selectionBase;
@property (readonly, weak, nonatomic) UIResponder<UITextInput> *inputDelegate;
@property (readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
@property (readonly, nonatomic) NSObject<UISelectionInteractionAssistant> *selectionInteractionAssistant;
@property (nonatomic) long long selectionGranularity;
@property (retain, nonatomic) UITextPosition *cursorPosition;
@property (readonly, nonatomic) UIView *textInputView;
@property (readonly, nonatomic) BOOL hasCaretSelection;
@property (readonly, nonatomic) BOOL hasRangedSelection;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } caretRectForFirstSelectedPosition;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } caretRectForLastSelectedPosition;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } caretRectForLeftmostSelectedPosition;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } caretRectForRightmostSelectedPosition;
@property (readonly, nonatomic) UITextSelection *selection;

/* instance methods */
- (id)initWithInputDelegate:(id)delegate;
- (void)beginSelectionChange;
- (void)endSelectionChange;
- (void)resetCursorPosition;
- (void)setSelectedTextRange:(id)range;
- (BOOL)cursorPositionIsContainedByRange:(id)range;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectedRectInLineWithPoint:(struct CGPoint { double x0; double x1; })point;
- (void)selectionDidChange;
- (void)textDidChange;
- (void)showSelectionCommands;
- (void)updateSelectionRects;
- (void)switchToRangedSelection;
- (void)setRangedSelectionShouldShowGrabbers:(BOOL)grabbers;
- (void)willHandoffLoupeMagnifier;
- (void)updateGestureRecognizers;
- (void)scrollSelectionToVisible;
- (void)willBeginHighlighterGesture;
- (void)willBeginFloatingCursor:(BOOL)cursor;
- (void)beginFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)updateFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)endFloatingCursor;
- (void)beginLoupeMagnifierAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)updateLoupeMagnifierAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)endLoupeMagnifierAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)beginRangedMagnifierAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)updateRangedMagnifierAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)endRangedMagnifierAtPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)beginLoupeGestureAtPoint:(struct CGPoint { double x0; double x1; })point translation:(struct CGPoint { double x0; double x1; })translation;
- (void)updateLoupeGestureAtPoint:(struct CGPoint { double x0; double x1; })point translation:(struct CGPoint { double x0; double x1; })translation velocity:(struct CGPoint { double x0; double x1; })velocity;
- (void)endLoupeGestureAtPoint:(struct CGPoint { double x0; double x1; })point translation:(struct CGPoint { double x0; double x1; })translation;
- (struct CGPoint { double x0; double x1; })boundedDeltaForTranslation:(struct CGPoint { double x0; double x1; })translation cursorLocationBase:(struct CGPoint { double x0; double x1; })base;
- (void)beginSelection;
- (void)restartSelection;
- (void)selectPositionAtPoint:(struct CGPoint { double x0; double x1; })point executionContext:(id)context;
- (void)selectPositionAtPoint:(struct CGPoint { double x0; double x1; })point granularity:(long long)granularity executionContext:(id)context;
- (void)selectPositionAtPoint:(struct CGPoint { double x0; double x1; })point granularity:(long long)granularity completionHandler:(id /* block */)handler;
- (void)selectPositionAtBoundary:(long long)boundary inDirection:(long long)direction executionContext:(id)context;
- (void)selectImmediatePositionAtBoundary:(long long)boundary inDirection:(long long)direction executionContext:(id)context;
- (void)selectPositionAtBoundary:(long long)boundary inDirection:(long long)direction relativeToSelection:(id)selection executionContext:(id)context;
- (void)selectTextWithGranularity:(long long)granularity atPoint:(struct CGPoint { double x0; double x1; })point executionContext:(id)context;
- (void)selectTextWithGranularity:(long long)granularity atPoint:(struct CGPoint { double x0; double x1; })point completionHandler:(id /* block */)handler;
- (void)beginSelectionWithBaseAtSelectionBoundaryInDirection:(long long)direction initialExtentPoint:(struct CGPoint { double x0; double x1; })point executionContext:(id)context;
- (void)beginSelectionWithBasePositionAtBoundary:(long long)boundary inDirection:(long long)direction withInitialExtentPoint:(struct CGPoint { double x0; double x1; })point executionContext:(id)context;
- (void)updateSelectionWithExtentPosition:(id)position executionContext:(id)context;
- (void)updateSelectionWithExtentPoint:(struct CGPoint { double x0; double x1; })point andExtentPosition:(id)position executionContext:(id)context;
- (void)updateSelectionWithExtentPoint:(struct CGPoint { double x0; double x1; })point executionContext:(id)context;
- (void)updateSelectionWithExtentAtBoundary:(long long)boundary inDirection:(long long)direction executionContext:(id)context;
- (void)updateImmediateSelectionWithExtentAtBoundary:(long long)boundary inDirection:(long long)direction executionContext:(id)context;
- (void)updateSelectionWithExtentAtBoundary:(long long)boundary inDirection:(long long)direction relativeToSelection:(id)selection executionContext:(id)context;
- (void)updateSelectionWithExtentPoint:(struct CGPoint { double x0; double x1; })point withBoundary:(long long)boundary executionContext:(id)context;
- (void)modifySelectionWithExtentPoint:(struct CGPoint { double x0; double x1; })point executionContext:(id)context;
- (void)endSelection;
@end

#endif /* _UIKeyboardTextSelectionController_h */
