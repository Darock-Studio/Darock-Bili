//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIFocusRegionMapSnapshot_h
#define _UIFocusRegionMapSnapshot_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "UIImage.h"
#include "UIView.h"
#include "_UIFocusRegionMapSnapshotRequest.h"

@class NSArray, NSMutableArray;

@interface _UIFocusRegionMapSnapshot : NSObject<NSCopying> {
  /* instance variables */
  BOOL _isFocusedRectEmpty;
  BOOL _didSetRegionClipFrame;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _regionClipFrame;
}

@property (retain, nonatomic) NSMutableArray *detectedFocusableViewMapEntries;
@property (retain, nonatomic) NSMutableArray *detectedFocusableGuideMapEntries;
@property (retain, nonatomic) NSMutableArray *detectedFocusContainerGuideMapEntries;
@property (retain, nonatomic) NSMutableArray *retainedPromiseRegions;
@property (nonatomic) BOOL committed;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } focusedRect;
@property (nonatomic) unsigned long long focusHeading;
@property (nonatomic) BOOL clipToSnapshotRect;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } visualRepresentationMinimumArea;
@property (weak, nonatomic) UIView *focusableRegionAncestorView;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } mapEntriesFrame;
@property (nonatomic) struct CGPoint { double x0; double x1; } visualRepresentationScreenCenter;
@property (copy, nonatomic) NSArray *finalFocusableRegionMapEntries;
@property (copy, nonatomic) NSArray *sortedFocusContainerGuideMapEntries;
@property (readonly, copy, nonatomic) _UIFocusRegionMapSnapshotRequest *request;
@property (readonly, weak, nonatomic) UIView *rootView;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } snapshottedRect;
@property (nonatomic) BOOL privateSnaphot;
@property (readonly, copy, nonatomic) NSArray *allFocusableRegionMapEntries;
@property (readonly, nonatomic) UIImage *visualRepresentation;

/* class methods */
+ (id)combinedVisualRepresentationForSnapshots:(id)snapshots scaleFactor:(double)factor;

/* instance methods */
- (id)_initWithRequest:(id)request;
- (id)copyWithZone:(struct _NSZone *)zone;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_clippedRegionFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame isFocusGuide:(BOOL)guide;
- (void)_addFocusableRegion:(id)region isFocusGuide:(BOOL)guide withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_addFocusContainerGuide:(id)guide withFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_occludeFocusInFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_punchHoleInMap:(id)map atFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)_finalFocusableRegionMapEntriesFromMapEntries:(id)entries;
- (id)_finalFocusableRegionMapEntriesFromViewMapEntries:(id)entries guideMapEntries:(id)entries;
- (id)_sortedEligibleFocusContainerGuidesInArray:(id)array;
- (void)_updateFinalFocusableRegionMapEntries;
- (void)_updateSortedFocusContainerGuideMapEntries;
- (void)_commit;
- (id)focusableRegionMapEntriesLimitedByFocusContainerGuide:(id)guide;
- (id)_snapshotByFulfillingPromiseFocusRegionEntry:(id)entry;
- (void)_didChooseFocusCandidateRegion:(id)region;
- (id)visualRepresentationWithMinimumArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })area;
- (id)debugQuickLookObject;
- (BOOL)isCommitted;
- (BOOL)isPrivateSnapshot;
@end

#endif /* _UIFocusRegionMapSnapshot_h */
