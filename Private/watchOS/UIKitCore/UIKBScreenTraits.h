//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIKBScreenTraits_h
#define UIKBScreenTraits_h
@import Foundation;

#include "UIScreen.h"

@interface UIKBScreenTraits : NSObject {
  /* instance variables */
  BOOL _isEmulatingIdiom;
  long long _idiomToEmulate;
  BOOL _isFirstPartyStickers;
  BOOL _isEmojiPosterOniPad;
}

@property (nonatomic) long long preferredEmojiScrollingDirection;
@property (readonly, nonatomic) UIScreen *screen;
@property (readonly, nonatomic) long long idiom;
@property (readonly, nonatomic) BOOL knobInput;
@property (readonly, nonatomic) BOOL touchInput;
@property (readonly, nonatomic) BOOL touchpadInput;
@property (nonatomic) long long orientation;
@property (nonatomic) double keyboardWidth;
@property (nonatomic) double assistantViewWidth;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } assistantViewWindowBounds;
@property (readonly, nonatomic) BOOL isKeyboardMinorEdgeWidth;
@property (nonatomic) double keyboardBarHeight;
@property (readonly, nonatomic) BOOL isInPopover;
@property (readonly, nonatomic) BOOL isFloating;
@property (nonatomic) BOOL isSplit;
@property (nonatomic) BOOL supportsSplit;
@property (nonatomic) BOOL centerFilled;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } keyboardScreenReferenceSize;
@property (nonatomic) struct CGSize { double x0; double x1; } stretchFactor;
@property (readonly, nonatomic) BOOL isLinear;
@property (readonly, nonatomic) BOOL isEmojiScrollingDirectionVertical;
@property (nonatomic) BOOL resizeKeyboardHeight;
@property (nonatomic) double keyboardHeightAdjustment;

/* class methods */
+ (id)traitsForInputModeWithScreen:(id)screen;
+ (id)traitsWithScreen:(id)screen orientation:(long long)orientation;
+ (id)traitsWithScreen:(id)screen orientation:(long long)orientation ignoreRemoteKeyboard:(BOOL)keyboard;
+ (id)fullScreenTraitsWithScreen:(id)screen orientation:(long long)orientation;
+ (id)traitsForPopoverEmulatingWidth:(double)width minorEdge:(BOOL)edge orientation:(long long)orientation idiom:(long long)idiom;
+ (void)setMockIdiom:(long long)idiom;
+ (id)_activeKeyboardWindowForScreen:(id)screen;
+ (id)_activeUCBWindowForScreen:(id)screen;

/* instance methods */
- (id)initForInputModeWithScreen:(id)screen;
- (id)initWithScreen:(id)screen orientation:(long long)orientation allowFloating:(BOOL)floating ignoreRemoteKeyboard:(BOOL)keyboard;
- (void)updateForTextInputTraits:(id)traits supportedInteractionModel:(unsigned long long)model;
- (void)updateForLinearLayout:(BOOL)layout;
- (id)description;
@end

#endif /* UIKBScreenTraits_h */
