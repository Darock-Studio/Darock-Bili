//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIInputViewSetPlacementFloating_h
#define UIInputViewSetPlacementFloating_h
@import Foundation;

#include "UIInputViewSetPlacementUndocked.h"
#include "NSSecureCoding-Protocol.h"
#include "UIInputViewSetPlacementOnScreen.h"
#include "UIResponder.h"
#include "UIView.h"
#include "_UIGeometryChangeObserver-Protocol.h"

@class NSArray, NSString;

@interface UIInputViewSetPlacementFloating : UIInputViewSetPlacementUndocked<_UIGeometryChangeObserver, NSSecureCoding> {
  /* instance variables */
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _responderRect;
  struct CGSize { double width; double height; } _lastSize;
  UIInputViewSetPlacementOnScreen *_cachedSecondaryPlacement;
  NSArray *_subPlacements;
}

@property (nonatomic) double floatingWidth;
@property (weak, nonatomic) UIResponder *responderToFollow;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)placementWithUndockedOffset:(struct CGPoint { double x0; double x1; })offset chromeBuffer:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })buffer floatingWidth:(double)width;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameAtOffset:(struct CGPoint { double x0; double x1; })offset keyboardSize:(struct CGSize { double x0; double x1; })size screenSize:(struct CGSize { double x0; double x1; })size;
+ (BOOL)supportsSecureCoding;
+ (id)infoWithPoint:(struct CGPoint { double x0; double x1; })point forOwner:(id)owner;

/* instance methods */
- (void)_geometryChanged:(const struct { int x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGSize { double x0; double x1; } x3; struct CGPoint { double x0; double x1; } x4; struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } x5; id x6; id x7; id x8; id x9; } *)changed forAncestor:(id)ancestor;
- (void)checkSizeForOwner:(id)owner;
- (Class)applicatorClassForKeyboard:(BOOL)keyboard;
- (void)setDelegate:(id)delegate;
- (id)currentResponderView;
- (id)applicatorInfoForOwner:(id)owner;
- (void)dealloc;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)updateChromeBuffer;
- (id)horizontalConstraintForInputViewSet:(id)set hostView:(id)view containerView:(id)view;
- (id)widthConstraintForInputViewSet:(id)set hostView:(id)view containerView:(id)view;
- (BOOL)isEqual:(id)equal;
- (void)setSubPlacements:(id)placements;
- (id)subPlacements;
- (unsigned long long)indexForPurpose:(unsigned long long)purpose;
- (id)expiringPlacement;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustBoundsForNotificationsWithOwner:(id)owner;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })remoteIntrinsicContentSizeForInputViewInSet:(id)set includingIAV:(BOOL)iav;
- (BOOL)showsEditItems;
- (BOOL)isFloating;
- (id)assistantView;
- (BOOL)isFloatingAssistantView;
- (BOOL)accessoryViewWillAppear;
@end

#endif /* UIInputViewSetPlacementFloating_h */
