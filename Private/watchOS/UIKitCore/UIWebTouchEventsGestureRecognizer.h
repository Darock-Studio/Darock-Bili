//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIWebTouchEventsGestureRecognizer_h
#define UIWebTouchEventsGestureRecognizer_h
@import Foundation;

#include "UIGestureRecognizer.h"
#include "UIWebTouchEventsGestureRecognizerDelegate-Protocol.h"

@class NSMapTable, NSMutableArray;

@interface UIWebTouchEventsGestureRecognizer : UIGestureRecognizer {
  /* instance variables */
  id _touchTarget;
  SEL _touchAction;
  NSObject<UIWebTouchEventsGestureRecognizerDelegate> *_webTouchDelegate;
  BOOL _passedHitTest;
  BOOL _isPotentialTap;
  BOOL _wasExplicitlyCancelled;
  double _originalGestureDistance;
  double _originalGestureAngle;
}

@property (nonatomic) BOOL defaultPrevented;
@property (readonly, nonatomic) const struct _UIWebTouchEvent { int x0; double x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; double x4; double x5; BOOL x6; struct _UIWebTouchPoint * x7; unsigned int x8; BOOL x9; } * lastTouchEvent;
@property (readonly, nonatomic) BOOL dispatchingTouchEvents;
@property (readonly, nonatomic) NSMapTable *activeTouchesByIdentifier;
@property (readonly, nonatomic) int type;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } locationInWindow;
@property (readonly, nonatomic) NSMutableArray *touchLocations;
@property (readonly, nonatomic) NSMutableArray *touchIdentifiers;
@property (readonly, nonatomic) NSMutableArray *touchPhases;
@property (readonly, nonatomic) BOOL inJavaScriptGesture;
@property (readonly, nonatomic) double scale;
@property (readonly, nonatomic) double rotation;

/* class methods */
+ (void)initialize;
+ (BOOL)_shouldDefaultToTouches;

/* instance methods */
- (id)initWithTarget:(id)target action:(SEL)action touchDelegate:(id)delegate;
- (void)dealloc;
- (void)reset;
- (void)cancel;
- (void)_updateTapStateWithTouches:(id)touches;
- (void)_updateTapStateWithTouches:(id)touches type:(int)type;
- (void)_recordTouches:(id)touches type:(int)type;
- (void)performAction;
- (void)_processTouches:(id)touches withEvent:(id)event type:(int)type;
- (void)_resetGestureRecognizer;
- (BOOL)canBePreventedByGestureRecognizer:(id)recognizer;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)touchesMoved:(id)moved withEvent:(id)event;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;
- (BOOL)isDefaultPrevented;
- (BOOL)isDispatchingTouchEvents;
@end

#endif /* UIWebTouchEventsGestureRecognizer_h */
