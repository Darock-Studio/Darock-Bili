//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UISlider_h
#define UISlider_h
@import Foundation;

#include "UIControl.h"
#include "NSCoding-Protocol.h"
#include "UIColor.h"
#include "UIImage.h"
#include "UISliderDataModel.h"
#include "_UISliderConfiguration-Protocol.h"

@class NSArray;
@protocol UIView<_UISliderVisualElement;

@interface UISlider : UIControl<NSCoding> {
  /* instance variables */
  UIView<_UISliderVisualElement> *_visualElement;
  UISliderDataModel *_data;
  NSArray *_dummyViews;
  unsigned long long _sliderStyle;
  struct { unsigned int x :1 visualElementIsFluid; unsigned int x :1 visualElementRespondsToDidUpdateConfiguration; unsigned int x :1 visualElementRespondsToDidSetUserInteractionEnabled; unsigned int x :1 visualElementRespondsToOverriddenTrackingState; } _visualElementFlags;
}

@property (nonatomic) BOOL _trackEnabled;
@property (nonatomic) float _minimumEnabledValue;
@property (nonatomic) float _maximumEnabledValue;
@property (nonatomic) unsigned long long _sliderStyle;
@property (copy, nonatomic) NSObject<_UISliderConfiguration> *sliderConfiguration;
@property (@dynamic, nonatomic) float value;
@property (@dynamic, nonatomic) float minimumValue;
@property (@dynamic, nonatomic) float maximumValue;
@property (retain, nonatomic) UIImage *minimumValueImage;
@property (retain, nonatomic) UIImage *maximumValueImage;
@property (nonatomic) BOOL continuous;
@property (retain, nonatomic) UIColor *minimumTrackTintColor;
@property (retain, nonatomic) UIColor *maximumTrackTintColor;
@property (retain, nonatomic) UIColor *thumbTintColor;
@property (readonly, nonatomic) UIImage *currentThumbImage;
@property (readonly, nonatomic) UIImage *currentMinimumTrackImage;
@property (readonly, nonatomic) UIImage *currentMaximumTrackImage;

/* class methods */
+ (void)_setAllowsUnsupportedMacIdiomBehavior:(BOOL)behavior;
+ (BOOL)_allowsUnsupportedMacIdiomBehavior;
+ (BOOL)_allowActionsToQueue;

/* instance methods */
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (BOOL)isAnimatingValueChange;
- (void)setShowValue:(BOOL)value;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })valueTextRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)createThumbView;
- (void)setThumbImage:(id)image forStates:(unsigned long long)states;
- (void)setMinimumTrackImage:(id)image forStates:(unsigned long long)states;
- (void)setMaximumTrackImage:(id)image forStates:(unsigned long long)states;
- (void)_setTrackEnabled:(BOOL)enabled;
- (void)_setThumbEnabled:(BOOL)enabled;
- (void)_setMinimumTrackVisible:(BOOL)visible withDuration:(double)duration;
- (BOOL)_isThumbEnabled;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_thumbHitEdgeInsets;
- (void)_setUseLookNeue:(BOOL)neue;
- (id)_minTrackView;
- (id)_maxTrackView;
- (id)_minValueView;
- (id)_maxValueView;
- (id)_thumbView;
- (id)_thumbViewNeue;
- (id)_sliderConfiguration;
- (void)_setSliderConfiguration:(id)configuration;
- (void)_setSliderStyle:(unsigned long long)style;
- (unsigned long long)_fluidUpdateSource;
- (void)_setFluidTrackHidden:(BOOL)hidden;
- (BOOL)_fluidTrackHidden;
- (void)_setMinimumEnabledValue:(float)value;
- (void)_setMaximumEnabledValue:(float)value;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithCoder:(id)coder;
- (void)_installVisualElement:(id)element;
- (void)_installVisualElement;
- (void)setSemanticContentAttribute:(long long)attribute;
- (void)_populateArchivedSubviews:(id)subviews;
- (void)encodeWithCoder:(id)coder;
- (id)description;
- (void)setThumbImage:(id)image forState:(unsigned long long)state;
- (void)setMinimumTrackImage:(id)image forState:(unsigned long long)state;
- (void)setMaximumTrackImage:(id)image forState:(unsigned long long)state;
- (id)thumbImageForState:(unsigned long long)state;
- (id)minimumTrackImageForState:(unsigned long long)state;
- (id)maximumTrackImageForState:(unsigned long long)state;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })minimumValueImageRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })maximumValueImageRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })trackRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })thumbRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds trackRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect value:(float)value;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)view;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (void)layoutSubviews;
- (void)_registerForTraitChanges;
- (void)setUserInteractionEnabled:(BOOL)enabled;
- (void)setEnabled:(BOOL)enabled;
- (void)setHighlighted:(BOOL)highlighted;
- (void)setSelected:(BOOL)selected;
- (BOOL)isContinuous;
- (void)setValue:(float)value animated:(BOOL)animated;
- (void)_setMaxValue:(float)value;
- (void)_setMinValue:(float)value;
- (unsigned long long)_controlEventsForActionTriggered;
- (BOOL)cancelMouseTracking;
- (BOOL)beginTrackingWithTouch:(id)touch withEvent:(id)event;
- (BOOL)continueTrackingWithTouch:(id)touch withEvent:(id)event;
- (void)endTrackingWithTouch:(id)touch withEvent:(id)event;
- (void)_controlTouchBegan:(id)began withEvent:(id)event;
- (void)_controlTouchMoved:(id)moved withEvent:(id)event;
- (void)_controlTouchEnded:(id)ended withEvent:(id)event;
- (BOOL)cancelTouchTracking;
- (BOOL)isTracking;
- (void)setTracking:(BOOL)tracking;
@end

#endif /* UISlider_h */
