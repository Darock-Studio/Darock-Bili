//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIKeyboardCandidateInlineFloatingView_h
#define UIKeyboardCandidateInlineFloatingView_h
@import Foundation;

#include "UIView.h"

@class NSString;

@interface UIKeyboardCandidateInlineFloatingView : UIView

@property (copy, nonatomic) NSString *inlineText;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } inlineRect;
@property (nonatomic) BOOL inlineRectIsVertical;
@property (nonatomic) double maxX;
@property (nonatomic) double extendedStateAdditionalHeight;
@property (nonatomic) struct CGSize { double x0; double x1; } preferredSize;
@property (readonly, nonatomic) BOOL reducedWidth;
@property (nonatomic) int position;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } previousCollapsedFrame;
@property (nonatomic) int adjustMode;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } extraInsets;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } cellPadding;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustedInlineRectFromInlineText:(id)text inlineRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)isAcceptableFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame afterScrollBy:(double)by;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustedFrameFromDesiredFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame textHeight:(double)height;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustedFrameFromDesiredFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame textWidth:(double)width;
- (void)adjustFrameForInlineText:(id)text inlineRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect maxX:(double)x;
- (BOOL)shouldExtendUpwards;
- (void)setInlineText:(id)text inlineRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect maxX:(double)x layout:(BOOL)layout;
- (void)layoutSubviews;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (id)traitCollection;
- (BOOL)isReducedWidth;
@end

#endif /* UIKeyboardCandidateInlineFloatingView_h */
