//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIMorphingLabel_h
#define UIMorphingLabel_h
@import Foundation;

#include "UIView.h"
#include "UIColor.h"
#include "UIMorphingLabelGlyphSet.h"
#include "UIView.h"
#include "_UIViewAnimationAttributes.h"

@class NSMutableArray, NSString, UIFont;

@interface UIMorphingLabel : UIView {
  /* instance variables */
  UIMorphingLabelGlyphSet *_srcGlyphSet;
  UIMorphingLabelGlyphSet *_dstGlyphSet;
  NSMutableArray *_hiddenGlyphViews;
  UIView *_colorView;
  unsigned long long _alignmentSrc[100];
  unsigned long long _alignmentDst[100];
  BOOL _alignmentIsEqual[100];
  unsigned long long _alignmentSize;
  double _alignmentDelays[100];
  _UIViewAnimationAttributes *_textAnimationAttributes;
  double _lastUpdateTime;
  double _slowdown;
  double _rippleFactor;
  double _scaleFactor;
  BOOL _isDoingFastAnimation;
  BOOL _textDidChange;
  BOOL _textColorDidChange;
}

@property (copy, nonatomic) NSString *text;
@property (copy, nonatomic) UIFont *font;
@property (copy, nonatomic) UIColor *textColor;
@property (nonatomic) long long textAlignment;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } visibleRect;
@property (nonatomic) BOOL suppressLayoutSubviews;
@property (nonatomic) BOOL enableAnimation;
@property (nonatomic) double initialScale;
@property (nonatomic) double glyphScaleAnimationSpeed;
@property (nonatomic) double rippleDuration;

/* class methods */
+ (id)preferredFontWithSize:(double)size;

/* instance methods */
- (void)baseInit;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithCoder:(id)coder;
- (double)alphaForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (double)_rippleDurationForEndInsertion:(BOOL)insertion;
- (BOOL)_isRTL;
- (unsigned long long)calculateHardAlignmentAtIndex:(unsigned long long)index fromGlyphsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range toGlyphsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)calculateGlyphAlignment;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })srcRangeOfAlignmentHunkAtIndex:(unsigned long long)index;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })dstRangeOfAlignmentHunkAtIndex:(unsigned long long)index;
- (id)glyphViewWithImage:(id)image isColorGlyph:(BOOL)glyph;
- (void)hideGlyph:(id)glyph;
- (id)uniqueString;
- (double)currentMediaTime;
- (void)animateGlyph:(id)glyph toPosition:(struct CGPoint { double x0; double x1; })position delay:(double)delay;
- (void)animateGlyph:(id)glyph toAlpha:(double)alpha duration:(double)duration delay:(double)delay;
- (void)animateGlyph:(id)glyph toScale:(double)scale delay:(double)delay;
- (void)animateShowGlyph:(id)glyph alphaDuration:(double)duration delay:(double)delay;
- (void)animateShowGlyph:(id)glyph alpha:(double)alpha alphaDuration:(double)duration delay:(double)delay;
- (void)animateHideGlyph:(id)glyph alphaDuration:(double)duration delay:(double)delay;
- (double)totalLeftOffsetForAlignmentHunkAtIndex:(unsigned long long)index;
- (double)totalRightOffsetForAlignmentHunkAtIndex:(unsigned long long)index;
- (double)changeInWidthDueToAlignmentHunkAtIndex:(unsigned long long)index;
- (void)animateGlyphsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range ofGlyphSet:(id)set byOffset:(double)offset delay:(double)delay;
- (void)animateChangeInWidthOutsideAlignmentHunkAtIndex:(unsigned long long)index;
- (void)initInsertionAlignmentHunkAtIndex:(unsigned long long)index;
- (void)animateInsertionAlignmentHunkAtIndex:(unsigned long long)index;
- (void)initDeletionAlignmentHunkAtIndex:(unsigned long long)index;
- (void)animateDeletionAlignmentHunkAtIndex:(unsigned long long)index;
- (void)initSubstitutionAlignmentHunkAtIndex:(unsigned long long)index;
- (void)animateSubstitutionAlignmentHunkAtIndex:(unsigned long long)index;
- (void)copyStateFromGlyph:(id)glyph toGlyph:(id)glyph;
- (void)initMovementAlignmentHunkAtIndex:(unsigned long long)index;
- (void)animateMovementAlignmentHunkAtIndex:(unsigned long long)index;
- (void)initAlignmentHunkAtIndex:(unsigned long long)index;
- (void)animateAlignmentHunkAtIndex:(unsigned long long)index;
- (void)animateGlyphs;
- (id)attributedStringForText:(id)text;
- (id)attributedString;
- (void)layoutSubviews;
- (BOOL)canFitText:(id)text;
- (double)flushAmount;
- (double)requiredWidthForText:(id)text;
- (void)contentSizeDidChange:(id)change;
@end

#endif /* UIMorphingLabel_h */
