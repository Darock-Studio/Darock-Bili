//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UITableViewCellLayoutManager_h
#define UITableViewCellLayoutManager_h
@import Foundation;

@interface UITableViewCellLayoutManager : NSObject
/* class methods */
+ (BOOL)requiresLegacyLayout;
+ (void)initialize;
+ (id)sharedLayoutManager;
+ (id)layoutManagerForTableViewCellStyle:(long long)style;
+ (id)_externalTextColor;
+ (id)_externalDetailTextColor;

/* instance methods */
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_backgroundRectForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_backgroundRectForCell:(id)cell rowWidth:(double)width;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedBackgroundRectForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedBackgroundRectForCell:(id)cell rowWidth:(double)width;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedBackgroundContentRectForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_adjustedBackgroundContentRectForCell:(id)cell rowWidth:(double)width;
- (BOOL)_editControlOnSameSideAsReorderControlForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_editControlRectForCell:(id)cell offscreen:(BOOL)offscreen;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_reorderControlRectForCell:(id)cell offscreen:(BOOL)offscreen;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_reorderSeparatorRectForCell:(id)cell offscreen:(BOOL)offscreen;
- (id)customAccessoryViewForCell:(id)cell editing:(BOOL)editing;
- (BOOL)shouldStackAccessoryViewVerticallyForCell:(id)cell editing:(BOOL)editing;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_accessoryRectForCell:(id)cell offscreen:(BOOL)offscreen rowWidth:(double)width;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_accessoryRectForCell:(id)cell offscreen:(BOOL)offscreen;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_editingAccessoryRectForCell:(id)cell offscreen:(BOOL)offscreen;
- (double)_contentRectLeadingOffsetForCell:(id)cell editingState:(BOOL)state rowWidth:(double)width;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectForCell:(id)cell forEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectForCell:(id)cell forEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation rowWidth:(double)width;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_legacy_contentRectForCell:(id)cell forEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation rowWidth:(double)width;
- (void)_reconfigureCell:(id)cell;
- (void)_resetTextLabelDefaultFontInCell:(id)cell;
- (double)defaultTextLabelFontSizeForCell:(id)cell;
- (double)defaultDetailTextLabelFontSizeForCell:(id)cell;
- (id)defaultImageViewForCell:(id)cell;
- (id)defaultTextLabelFontForCell:(id)cell;
- (id)defaultDetailTextLabelFontForCell:(id)cell;
- (id)defaultLabelForCell:(id)cell ofClass:(Class)class;
- (id)defaultLabelForCell:(id)cell;
- (id)defaultEditableTextFieldForCell:(id)cell;
- (id)defaultBadgeForCell:(id)cell;
- (id)imageViewForCell:(id)cell;
- (id)textLabelForCell:(id)cell;
- (id)detailTextLabelForCell:(id)cell;
- (id)editableTextFieldForCell:(id)cell;
- (id)badgeForCell:(id)cell;
- (double)contentIndentationForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })standardLayoutImageViewFrameForCell:(id)cell forSizing:(BOOL)sizing;
- (void)layoutSubviewsOfCell:(id)cell;
- (void)_modern_layoutSubviewsOfCell:(id)cell;
- (void)_legacy_layoutSubviewsOfCell:(id)cell;
- (void)cell:(id)cell willTransitionToState:(unsigned long long)state;
- (void)_legacy_cell:(id)_legacy_cell willTransitionToState:(unsigned long long)state;
- (void)cell:(id)cell didTransitionToState:(unsigned long long)state;
- (void)_modern_cell:(id)_modern_cell didTransitionToState:(unsigned long long)state;
- (void)_legacy_cell:(id)_legacy_cell didTransitionToState:(unsigned long long)state;
- (void)_layoutFocusGuidesForCell:(id)cell;
- (void)_updateFocusGuidesForCell:(id)cell editing:(BOOL)editing;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForCell:(id)cell forState:(unsigned long long)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForCell:(id)cell forState:(unsigned long long)state rowWidth:(double)width;
- (BOOL)editControlShouldAppearForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editControlStartingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editControlEndingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (BOOL)editControlShouldFadeForCell:(id)cell;
- (BOOL)reorderControlShouldAppearForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reorderControlStartingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reorderControlEndingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (BOOL)reorderControlShouldFadeForCell:(id)cell;
- (BOOL)reorderSeparatorShouldAppearForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reorderSeparatorStartingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })reorderSeparatorEndingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (BOOL)reorderSeparatorShouldFadeForCell:(id)cell;
- (BOOL)accessoryShouldAppearForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessoryStartingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessoryEndingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (BOOL)accessoryShouldFadeForCell:(id)cell;
- (BOOL)editingAccessoryShouldAppearForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editingAccessoryStartingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })editingAccessoryEndingRectForCell:(id)cell forNewEditingState:(BOOL)state showingDeleteConfirmation:(BOOL)confirmation;
- (BOOL)editingAccessoryShouldFadeForCell:(id)cell;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })backgroundStartingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })backgroundEndingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })selectedBackgroundEndingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentStartingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentEndingRectForCell:(id)cell forNewEditingState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentStartingRectForCell:(id)cell forDisplayOfDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentEndingRectForCell:(id)cell forDisplayOfDeleteConfirmation:(BOOL)confirmation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRectForCell:(id)cell;
- (double)requiredIndentationForFirstLineOfCell:(id)cell rowWidth:(double)width;
- (double)requiredIndentationForFirstLineOfCell:(id)cell rowWidth:(double)width forSizing:(BOOL)sizing;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRectForCell:(id)cell rowWidth:(double)width;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRectForCell:(id)cell rowWidth:(double)width forSizing:(BOOL)sizing;
- (void)getTextLabelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect detailTextLabelRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect forCell:(id)cell rowWidth:(double)width forSizing:(BOOL)sizing;
- (struct CGSize { double x0; double x1; })intrinsicContentSizeForCell:(id)cell rowWidth:(double)width;
- (BOOL)shouldApplyAccessibilityLargeTextLayoutForCell:(id)cell;
- (BOOL)shouldIncreaseMarginForImageViewInCell:(id)cell;
- (struct CGSize { double x0; double x1; })optimumSizeForLabel:(id)label inTotalTextRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect minimizeWidthOnVerticalOverflow:(BOOL)overflow preferSingleLineWidth:(BOOL)width;
- (void)prepareCellForReuse:(id)reuse;
@end

#endif /* UITableViewCellLayoutManager_h */
