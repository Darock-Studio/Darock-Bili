//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UITableViewShadowUpdatesController_h
#define _UITableViewShadowUpdatesController_h
@import Foundation;

#include "UIDataSourceModelAssociation-Protocol.h"
#include "UITableView.h"
#include "UITableViewDataSourcePrefetching-Protocol.h"
#include "UITableViewDataSourcePrivate-Protocol.h"
#include "UITableViewDelegatePrivate-Protocol.h"
#include "_UIDataSourceSnapshotter.h"
#include "_UIDataSourceUpdateMap.h"

@class NSMutableArray, NSString;

@interface _UITableViewShadowUpdatesController : NSObject<UITableViewDataSourcePrivate, UIDataSourceModelAssociation, UITableViewDelegatePrivate, UITableViewDataSourcePrefetching>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) UITableView *tableView;
@property (retain, nonatomic) NSMutableArray *shadowUpdates;
@property (retain, nonatomic) _UIDataSourceSnapshotter *initialSnapshot;
@property (retain, nonatomic) _UIDataSourceUpdateMap *updateMap;
@property (readonly, nonatomic) BOOL hasShadowUpdates;
@property (readonly, nonatomic) _UIDataSourceSnapshotter *dataSourceBeforeShadowUpdates;
@property (readonly, nonatomic) _UIDataSourceSnapshotter *dataSourceAfterShadowUpdates;

/* instance methods */
- (void)tableView:(id)view prefetchRowsAtIndexPaths:(id)paths;
- (void)tableView:(id)view cancelPrefetchingForRowsAtIndexPaths:(id)paths;
- (double)tableView:(id)view heightForRowAtIndexPath:(id)path;
- (double)tableView:(id)view estimatedHeightForRowAtIndexPath:(id)path;
- (void)tableView:(id)view willDisplayCell:(id)cell forRowAtIndexPath:(id)path;
- (void)tableView:(id)view willDisplayHeaderView:(id)view forSection:(long long)section;
- (void)tableView:(id)view willDisplayFooterView:(id)view forSection:(long long)section;
- (void)tableView:(id)view didEndDisplayingCell:(id)cell forRowAtIndexPath:(id)path;
- (void)tableView:(id)view didEndDisplayingHeaderView:(id)view forSection:(long long)section;
- (void)tableView:(id)view didEndDisplayingFooterView:(id)view forSection:(long long)section;
- (double)tableView:(id)view heightForHeaderInSection:(long long)section;
- (double)tableView:(id)view heightForFooterInSection:(long long)section;
- (double)tableView:(id)view estimatedHeightForHeaderInSection:(long long)section;
- (double)tableView:(id)view estimatedHeightForFooterInSection:(long long)section;
- (id)tableView:(id)view viewForHeaderInSection:(long long)section;
- (id)tableView:(id)view viewForFooterInSection:(long long)section;
- (long long)tableView:(id)view accessoryTypeForRowWithIndexPath:(id)path;
- (void)tableView:(id)view accessoryButtonTappedForRowWithIndexPath:(id)path;
- (BOOL)tableView:(id)view shouldHighlightRowAtIndexPath:(id)path;
- (void)tableView:(id)view didHighlightRowAtIndexPath:(id)path;
- (void)tableView:(id)view didUnhighlightRowAtIndexPath:(id)path;
- (id)tableView:(id)view willSelectRowAtIndexPath:(id)path;
- (id)tableView:(id)view willDeselectRowAtIndexPath:(id)path;
- (void)tableView:(id)view didSelectRowAtIndexPath:(id)path;
- (void)tableView:(id)view didDeselectRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view canPerformPrimaryActionForRowAtIndexPath:(id)path;
- (void)tableView:(id)view performPrimaryActionForRowAtIndexPath:(id)path;
- (long long)tableView:(id)view editingStyleForRowAtIndexPath:(id)path;
- (id)tableView:(id)view titleForDeleteConfirmationButtonForRowAtIndexPath:(id)path;
- (id)tableView:(id)view editActionsForRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view shouldIndentWhileEditingRowAtIndexPath:(id)path;
- (void)tableView:(id)view willBeginEditingRowAtIndexPath:(id)path;
- (void)tableView:(id)view didEndEditingRowAtIndexPath:(id)path;
- (id)tableView:(id)view targetIndexPathForMoveFromRowAtIndexPath:(id)path toProposedIndexPath:(id)path;
- (long long)tableView:(id)view indentationLevelForRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view shouldShowMenuForRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view canPerformAction:(SEL)action forRowAtIndexPath:(id)path withSender:(id)sender;
- (void)tableView:(id)view performAction:(SEL)action forRowAtIndexPath:(id)path withSender:(id)sender;
- (BOOL)tableView:(id)view canFocusRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view shouldUpdateFocusInContext:(id)context;
- (void)tableView:(id)view didUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (id)indexPathForPreferredFocusedViewInTableView:(id)view;
- (BOOL)tableView:(id)view wantsHeaderForSection:(long long)section;
- (double)tableViewSpacingForExtraSeparators:(id)separators;
- (struct CGPoint { double x0; double x1; })tableView:(id)view newContentOffsetAfterUpdate:(struct CGPoint { double x0; double x1; })update context:(id)context;
- (void)tableView:(id)view didUpdateTextFieldForRowAtIndexPath:(id)path withValue:(id)value;
- (double)marginForTableView:(id)view;
- (long long)tableView:(id)view titleAlignmentForHeaderInSection:(long long)section;
- (long long)tableView:(id)view titleAlignmentForFooterInSection:(long long)section;
- (double)tableView:(id)view maxTitleWidthForHeaderInSection:(long long)section;
- (double)tableView:(id)view maxTitleWidthForFooterInSection:(long long)section;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tableView:(id)view frameForSectionIndexGivenProposedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)tableViewDidFinishReload:(id)reload;
- (double)heightForHeaderInTableView:(id)view;
- (double)heightForFooterInTableView:(id)view;
- (id)viewForHeaderInTableView:(id)view;
- (id)viewForFooterInTableView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })tableView:(id)view calloutTargetRectForCell:(id)cell forRowAtIndexPath:(id)path;
- (id)tableView:(id)view leadingSwipeActionsConfigurationForRowAtIndexPath:(id)path;
- (id)tableView:(id)view trailingSwipeActionsConfigurationForRowAtIndexPath:(id)path;
- (id)tableView:(id)view leadingSwipeActionsForRowAtIndexPath:(id)path;
- (id)tableView:(id)view trailingSwipeActionsForRowAtIndexPath:(id)path;
- (void)tableView:(id)view willBeginReorderingRowAtIndexPath:(id)path;
- (void)tableView:(id)view didEndReorderingRowAtIndexPath:(id)path;
- (void)tableView:(id)view didCancelReorderingRowAtIndexPath:(id)path;
- (id)tableView:(id)view backgroundColorForDeleteConfirmationButtonForRowAtIndexPath:(id)path;
- (id)tableView:(id)view backgroundColorForSwipeAccessoryButtonForRowAtIndexPath:(id)path;
- (id)tableView:(id)view titleForSwipeAccessoryButtonForRowAtIndexPath:(id)path;
- (void)tableView:(id)view swipeAccessoryButtonPushedForRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view shouldDrawTopSeparatorForSection:(long long)section;
- (BOOL)tableView:(id)view shouldDrawBottomSeparatorForSection:(long long)section;
- (BOOL)tableView:(id)view shouldHaveFullLengthTopSeparatorForSection:(long long)section;
- (BOOL)tableView:(id)view shouldHaveFullLengthBottomSeparatorForSection:(long long)section;
- (void)tableView:(id)view willBeginSwipingRowAtIndexPath:(id)path;
- (void)tableView:(id)view didEndSwipingRowAtIndexPath:(id)path;
- (BOOL)_tableView:(id)view canFocusRowAtIndexPath:(id)path;
- (void)tableView:(id)view didFocusRowAtIndexPath:(id)path;
- (void)tableView:(id)view didUnfocusRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view shouldUpdateFocusFromRowAtIndexPath:(id)path toView:(id)view heading:(unsigned long long)heading;
- (id)indexPathForPreferredFocusedItemForTableView:(id)view;
- (id)modelIdentifierForElementAtIndexPath:(id)path inView:(id)view;
- (id)indexPathForElementWithModelIdentifier:(id)identifier inView:(id)view;
- (long long)numberOfSectionsInTableView:(id)view;
- (long long)tableView:(id)view numberOfRowsInSection:(long long)section;
- (id)tableView:(id)view cellForRowAtIndexPath:(id)path;
- (id)tableView:(id)view titleForHeaderInSection:(long long)section;
- (id)tableView:(id)view titleForFooterInSection:(long long)section;
- (BOOL)tableView:(id)view canEditRowAtIndexPath:(id)path;
- (BOOL)tableView:(id)view canMoveRowAtIndexPath:(id)path;
- (id)sectionIndexTitlesForTableView:(id)view;
- (id)_tableView:(id)view sectionIndexTitlesTrimmedToCount:(unsigned long long)count;
- (long long)tableView:(id)view sectionForSectionIndexTitle:(id)title atIndex:(long long)index;
- (void)tableView:(id)view commitEditingStyle:(long long)style forRowAtIndexPath:(id)path;
- (void)tableView:(id)view moveRowAtIndexPath:(id)path toIndexPath:(id)path;
- (id)tableView:(id)view indexPathForSectionIndexTitle:(id)title atIndex:(long long)index;
- (id)tableView:(id)view detailTextForHeaderInSection:(long long)section;
- (id)initWithTableView:(id)view;
- (id)shadowUpdateWithIdentifier:(id)identifier;
- (void)reset;
- (void)regenerateUpdateMap;
- (void)appendShadowUpdate:(id)update;
- (void)removeShadowUpdate:(id)update;
- (void)rebaseExistingShadowUpdatesForUpdates:(id)updates;
- (id)_rebasedShadowUpdatesForUpdate:(id)update initialSnapshot:(id)snapshot;
- (long long)sectionBeforeShadowUpdates:(long long)updates;
- (long long)sectionAfterShadowUpdates:(long long)updates;
- (id)sectionsBeforeShadowUpdates:(id)updates;
- (id)sectionsAfterShadowUpdates:(id)updates;
- (id)sectionsAfterShadowUpdates:(id)updates allowAppendingInsert:(BOOL)insert;
- (id)indexPathBeforeShadowUpdates:(id)updates;
- (id)indexPathAfterShadowUpdates:(id)updates;
- (id)indexPathAfterShadowUpdates:(id)updates allowAppendingInsert:(BOOL)insert;
- (id)indexPathsBeforeShadowUpdates:(id)updates;
- (id)indexPathsAfterShadowUpdates:(id)updates;
- (id)indexPathsAfterShadowUpdates:(id)updates allowAppendingInsert:(BOOL)insert;
- (id)indexPathBeforeShadowUpdates:(id)updates startingBeforeUpdate:(id)update;
- (id)indexPathAfterShadowUpdates:(id)updates startingAtUpdate:(id)update;
@end

#endif /* _UITableViewShadowUpdatesController_h */
