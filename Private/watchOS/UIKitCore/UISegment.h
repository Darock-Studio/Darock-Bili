//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UISegment_h
#define UISegment_h
@import Foundation;

#include "UIImageView.h"
#include "CAAnimationDelegate-Protocol.h"
#include "UIAction.h"
#include "UIImageView.h"
#include "UISegmentProtocol-Protocol.h"
#include "UIView.h"
#include "_UIBadgeView.h"
#include "_UISegmentedControlAppearanceStorage.h"

@class BOOL *, NSArray, NSString;
@protocol UIView<UISegmentBezelView, UIView<_UISegmentedControlContentView;

@interface UISegment : UIImageView<CAAnimationDelegate, UISegmentProtocol> {
  /* instance variables */
  UIView *_info;
  UIImageView *_backgroundView;
  UIView *_selectionIndicatorView;
  UIImageView *_selectionImageView;
  UIView<UISegmentBezelView> *_bezelView;
  _UISegmentedControlAppearanceStorage *_appearanceStorage;
  UIView<_UISegmentedControlContentView> *_infoContentView;
  double _width;
  struct CGSize { double width; double height; } _contentOffset;
  long long _barStyle;
  unsigned long long _rightSegmentState;
  id _objectValue;
  struct { unsigned int x :2 size; unsigned int x :1 selected; unsigned int x :1 highlighted; unsigned int x :1 showDivider; unsigned int x :1 hasImage; unsigned int x :3 position; unsigned int x :1 autosizeText; unsigned int x :1 isMomentary; unsigned int x :1 wasSelected; unsigned int x :1 needsBackgroundAndContentViewUpdate; unsigned int x :1 usesAXTextSize; unsigned int x :1 selectionIndicatorDragged; unsigned int x :1 adjustsForContentSizeCategory; unsigned int x :1 hasCustomInfoView; } _segmentFlags;
  NSArray *_infoConstraints;
}

@property (copy, nonatomic) NSArray *_infoConstraints;
@property (copy, nonatomic) UIAction *action;
@property (nonatomic) BOOL selected;
@property (nonatomic) BOOL momentary;
@property (copy, nonatomic) NSString *badgeValue;
@property (readonly) UIView *badgeView;
@property (nonatomic) double requestedScaleFactor;
@property (nonatomic) unsigned int segmentPosition;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL highlighted;
@property (readonly, nonatomic) BOOL rightSelected;
@property (readonly, nonatomic) BOOL rightHighlighted;
@property (readonly, nonatomic) int controlSize;

/* class methods */
+ (id)_backgroundImageWithStorage:(id)storage mini:(BOOL)mini state:(unsigned long long)state position:(unsigned int)position drawMode:(unsigned int *)mode isCustom:(BOOL *)custom defaultBlock:(id /* block */)block;

/* instance methods */
- (void)_finishInitialSegmentSetup;
- (id)initWithInfo:(id)info size:(int)size barStyle:(long long)style tintColor:(id)color appearanceStorage:(id)storage position:(unsigned int)position autosizeText:(BOOL)text adjustsForContentSizeCategory:(BOOL)category customInfoView:(id)view traitCollection:(id)collection;
- (id)initWithCoder:(id)coder;
- (id)_parentSegmentedControl;
- (Class)_segmentedControlClass;
- (id)_effectiveSelectedSegmentTintColor;
- (id)_effectiveBackgroundTintColor;
- (BOOL)_effectiveDisableShadow;
- (id)_effectiveVisualEffect;
- (id)_effectiveBackgroundView;
- (id)_tintColorArchivingKey;
- (id)_encodableSubviews;
- (void)_populateArchivedSubviews:(id)subviews;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (void)traitCollectionDidChange:(id)change;
- (void)setNeedsBackgroundAndContentViewUpdate;
- (unsigned long long)_segmentState;
- (id)_dividerImageIsCustom:(BOOL *)custom;
- (void)updateForAppearance:(id)appearance;
- (id)_dividerImage;
- (void)insertDividerView;
- (void)updateDividerViewForChangedSegment:(id)segment;
- (void)_updateBackgroundAndContentViewsIfNeeded;
- (void)animationDidStop:(id)stop finished:(BOOL)finished;
- (void)_insertSelectionView;
- (void)_updateSelectionToTransform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })transform infoTransform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })transform hideSelection:(BOOL)selection shouldAnimate:(BOOL)animate;
- (void)_updateHighlight;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_highlightSelectionInfoTransform;
- (void)_removeSelectionIndicator;
- (void)_updateSelectionIndicator;
- (void)_updateBackgroundAndContentViews;
- (BOOL)_hasSelectedColor;
- (void)updateMasking;
- (void)setWasSelected:(BOOL)selected;
- (void)setUsesAXTextSize:(BOOL)size;
- (void)_updateTextColors;
- (id)_stateTextAttibutes:(id)attibutes segmentState:(unsigned long long)state;
- (id)_attributedTextForState:(unsigned long long)state selected:(BOOL)selected forceSelectedAppearance:(BOOL)appearance;
- (id)disabledTextColor;
- (void)setBarStyle:(long long)style;
- (void)setTintColor:(id)color;
- (void)setAutosizeText:(BOOL)text;
- (void)setAdjustsForContentSizeCategory:(BOOL)category;
- (void)_setEnabledAppearance:(BOOL)appearance;
- (void)setEnabled:(BOOL)enabled;
- (BOOL)isSelected;
- (void)setSelected:(BOOL)selected highlighted:(BOOL)highlighted;
- (BOOL)isHighlighted;
- (void)_evaluateHighlight;
- (void)_setHighlighted:(BOOL)highlighted animated:(BOOL)animated;
- (BOOL)isSelectionIndicatorDragged;
- (void)setSelectionIndicatorDragged:(BOOL)dragged;
- (void)_setSelectionIndicatorDragged:(BOOL)dragged animated:(BOOL)animated;
- (void)tintColorDidChange;
- (BOOL)_isContainedInHostedFocusSystem;
- (BOOL)isRightSelected;
- (BOOL)isRightHighlighted;
- (BOOL)isMomentary;
- (BOOL)showDivider;
- (void)setShowDivider:(BOOL)divider;
- (void)animateAdd:(BOOL)add;
- (void)animateRemoveForWidth:(double)width;
- (void)removeFromSuperview;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRect;
- (double)_barHeight;
- (struct CGSize { double x0; double x1; })_maximumTextSize;
- (struct CGSize { double x0; double x1; })contentSize;
- (void)_invalidateInfoConstraints;
- (void)updateConstraints;
- (void)_positionInfo;
- (void)_positionInfoWithoutAnimation;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)label;
- (id)_segmentLabel;
- (void)setContentOffset:(struct CGSize { double x0; double x1; })offset;
- (void)setObjectValue:(id)value;
- (id)objectValue;
- (void)_forceInfoDisplay;
- (void)_updateFloatingContentControlState:(unsigned long long)state context:(id)context withAnimationCoordinator:(id)coordinator animated:(BOOL)animated;
- (BOOL)canBecomeFocused;
- (void)didUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (id)_preferredConfigurationForFocusAnimation:(long long)animation inContext:(id)context;
- (id)focusEffect;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test forEvent:(struct __GSEvent *)event;
- (BOOL)useBlockyMagnificationInClassic;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_paddingInsets;
- (double)_idealWidth;
- (id)viewForLastBaselineLayout;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })size;
- (void)layoutSubviews;
- (void)_setInfoConstraints:(id)constraints;
@end

#endif /* UISegment_h */
