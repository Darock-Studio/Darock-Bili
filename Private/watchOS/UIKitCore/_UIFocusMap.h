//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIFocusMap_h
#define _UIFocusMap_h
@import Foundation;

#include "UICoordinateSpace-Protocol.h"
#include "UIFocusSystem.h"
#include "_UIFocusGroupMap.h"
#include "_UIFocusMapSearchInfo.h"
#include "_UIFocusRegionContainer-Protocol.h"
#include "_UIFocusSearchInfo.h"

@interface _UIFocusMap : NSObject {
  /* instance variables */
  BOOL _minimumSearchAreaIsEmpty;
  BOOL _trackingSearchInfo;
  BOOL _needsSearchInfo;
  BOOL _ignoresRootContainerClippingRect;
}

@property (readonly, nonatomic) _UIFocusMapSearchInfo *defaultItemSearchInfo;
@property (readonly, nonatomic) _UIFocusMapSearchInfo *focusMovementSearchInfo;
@property (readonly, weak, nonatomic) UIFocusSystem *focusSystem;
@property (readonly, weak, nonatomic) NSObject<_UIFocusRegionContainer> *rootContainer;
@property (readonly, weak, nonatomic) NSObject<UICoordinateSpace> *coordinateSpace;
@property (readonly, nonatomic) _UIFocusGroupMap *focusGroupMap;
@property (readonly, nonatomic) _UIFocusSearchInfo *searchInfo;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } minimumSearchArea;

/* instance methods */
- (id)init;
- (id)initWithFocusSystem:(id)system rootContainer:(id)container;
- (id)initWithFocusSystem:(id)system rootContainer:(id)container coordinateSpace:(id)space searchInfo:(id)info ignoresRootContainerClippingRect:(BOOL)rect;
- (id)_defaultMapSnapshotter;
- (id)_allFocusableItemsInEnvironment:(id)environment;
- (id)_inferredDefaultFocusItemInEnvironment:(id)environment;
- (id)_nextFocusedItemForFocusMovementRequest:(id)request;
- (id)_nextFocusedItemForFocusMovementRequest:(id)request startingFromRegion:(id)region;
- (id)_nextFocusedItemForFocusMovementRequest:(id)request inRegions:(id)regions withSnapshot:(id)snapshot;
- (id)_nextFocusedItemForFocusMovementRequest:(id)request startingFromRegion:(id)region inRegions:(id)regions withSnapshot:(id)snapshot;
- (id)_nextFocusedItemForNonLinearFocusMovementRequest:(id)request startingFromRegion:(id)region inRegions:(id)regions withSnapshot:(id)snapshot;
- (id)_nextFocusedItemForLinearFocusMovementRequest:(id)request startingFromRegion:(id)region inRegions:(id)regions withSnapshot:(id)snapshot;
- (id)_allDefaultFocusableRegionsInContainer:(id)container intersectingRegion:(id)region;
- (id)_closestFocusableItemToPoint:(struct CGPoint { double x0; double x1; })point inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect excludingItems:(id)items distanceMeasuringUnitPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_findAllDefaultFocusableRegionsWithSnapshotter:(id)snapshotter;
- (id)_linearlySortedFocusItemsForItems:(id)items groupFilter:(long long)filter itemStandInMap:(id)map;
- (BOOL)verifyFocusabilityForItem:(id)item;
- (void)_beginTrackingSearches;
- (id)_stopTrackingSearches;
- (void)_beginTrackingDefaultItemSearchInfoIfNecessary;
- (void)_beginTrackingFocusMovementSearchInfoIfNecessary;
- (void)_trackExternalSnapshot:(id)snapshot;
- (void)diagnoseFocusabilityForItem:(id)item report:(id)report;
- (id)_defaultItemSearchContext;
- (id)_focusMovementSearchContext;
@end

#endif /* _UIFocusMap_h */
