//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UISegmentedControl_h
#define UISegmentedControl_h
@import Foundation;

#include "UIControl.h"
#include "NSCoding-Protocol.h"
#include "UIColor.h"
#include "UIImageView.h"
#include "UILongPressGestureRecognizer.h"
#include "UIPopoverPresentationControllerDelegate-Protocol.h"
#include "UISegment.h"
#include "UIView.h"
#include "UIVisualEffect.h"
#include "_UIBasicAnimationFactory-Protocol.h"
#include "_UIHostedFocusSystem.h"
#include "_UIHostedFocusSystemDelegate-Protocol.h"

@class NSMutableArray, NSString;

@interface UISegmentedControl : UIControl<_UIBasicAnimationFactory, UIPopoverPresentationControllerDelegate, _UIHostedFocusSystemDelegate, NSCoding> {
  /* instance variables */
  UIView *_selectionIndicatorView;
  UIImageView *_selectionImageView;
  UIView *_highlightIndicatorView;
  UIImageView *_highlightImageView;
  UIView *_backdropView;
  NSMutableArray *_segments;
  long long _selectedSegment;
  long long _highlightedSegment;
  long long _selectionIndicatorSegment;
  UISegment *_focusedSegment;
  long long _barStyle;
  id _appearanceStorage;
  double _enabledAlpha;
  UIColor *_backgroundTintColor;
  UIVisualEffect *_selectedSegmentVisualEffect;
  double _innerSegmentSpacing;
  struct { unsigned int x :2 size; unsigned int x :1 delegateAlwaysNotifiesDelegateOfSegmentClicks; unsigned int x :1 momentaryClick; unsigned int x :1 tracking; unsigned int x :1 autosizeToFitSegments; unsigned int x :1 isSizingToFit; unsigned int x :1 autosizeText; unsigned int x :1 transparentBackground; unsigned int x :1 useProportionalWidthSegments; unsigned int x :1 translucentBackground; unsigned int x :1 appearanceNeedsUpdate; unsigned int x :1 selectionIndicatorDragged; unsigned int x :1 useInnerSegmentSpacing; unsigned int x :1 adjustsForContentSizeCategory; unsigned int x :1 styleProviderSupportsExtraTraitCollectionChagnes; unsigned int x :1 styleProviderSupportsSegmentHighlightAnimation; unsigned int x :1 appCustomizedSelectedVisualEffect; unsigned int x :1 overridesCustomInfoViewForSegments; unsigned int x :1 styleProviderSupportsFeedbackGeneration; unsigned int x :1 styleProviderSupportsLegacyActiveSegmentControl; unsigned int x :1 hasBackdropView; } _segmentedControlFlags;
}

@property (retain, nonatomic) UIView *removedSegment;
@property (retain, nonatomic) UILongPressGestureRecognizer *axLongPressGestureRecognizer;
@property (readonly, nonatomic) _UIHostedFocusSystem *internalFocusSystem;
@property (readonly) BOOL hasBackdropView;
@property int controlSize;
@property (nonatomic) long long segmentedControlStyle;
@property (nonatomic) BOOL momentary;
@property (readonly, nonatomic) unsigned long long numberOfSegments;
@property (nonatomic) BOOL apportionsSegmentWidthsByContent;
@property (nonatomic) long long selectedSegmentIndex;
@property (retain, nonatomic) UIColor *selectedSegmentTintColor;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (double)defaultHeight;
+ (void)_registerStyleProvider:(id)provider forIdiom:(long long)idiom;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
+ (double)_defaultHeightForTraitCollection:(id)collection size:(int)size;
+ (double)_defaultHeight;
+ (double)defaultHeightForStyle:(long long)style size:(int)size;
+ (double)defaultHeightForStyle:(long long)style;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectionFrameForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds size:(int)size traitCollection:(id)collection accessibilityView:(BOOL)view;
+ (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_hiddenSelectionTransformForTraitCollection:(id)collection;
+ (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_highlightSelectionTransformForTraitCollection:(id)collection;
+ (id)_selectionPopAnimationForKey:(id)key fromValue:(id)value toValue:(id)value;
+ (id)_selectionOpacityAnimationFromValue:(float)value toValue:(float)value;
+ (id)_highlightPinchAnimationForKey:(id)key fromValue:(id)value toValue:(id)value;
+ (id)_selectionFadeAnimationForKey:(id)key fromValue:(id)value toValue:(id)value;
+ (double)_selectionOffsetAdjustmentForSegment:(id)segment;
+ (BOOL)_selectFocusedSegmentAfterFocusUpdateForTraitCollection:(id)collection;
+ (struct CGColor *)_backgroundPrimaryColorSelected:(BOOL)selected highlighted:(BOOL)highlighted traitCollection:(id)collection tintColor:(id)color;
+ (BOOL)_useShadowForSelectedTintColor:(id)color traitCollection:(id)collection;
+ (id)_modernBackgroundSelected:(BOOL)selected shadow:(long long)shadow maximumSize:(struct CGSize { double x0; double x1; })size highlighted:(BOOL)highlighted traitCollection:(id)collection tintColor:(id)color size:(int)size;
+ (struct CGColor *)_dividerPrimaryColorBackground:(BOOL)background traitCollection:(id)collection tintColor:(id)color;
+ (id)_modernDividerImageBackground:(BOOL)background traitCollection:(id)collection tintColor:(id)color size:(int)size;
+ (double)_sectionIndicatorOverflowForTraitCollection:(id)collection size:(int)size;
+ (double)_lineWidthForTraitCollection:(id)collection size:(int)size;
+ (double)_dividerWidthForTraitCollection:(id)collection size:(int)size;
+ (double)_sectionIndicatorInsetForTraitCollection:(id)collection size:(int)size;
+ (double)_cornerRadiusForTraitCollection:(id)collection size:(int)size;
+ (id)_fontForTraitCollection:(id)collection size:(int)size selected:(BOOL)selected;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame withStyle:(long long)style withItems:(id)items;
- (void)setDelegate:(id)delegate;
- (void)setAlwaysNotifiesDelegateOfSegmentClicks:(BOOL)clicks;
- (void)setImagePadding:(struct CGSize { double x0; double x1; })padding forSegment:(unsigned long long)segment;
- (void)selectSegment:(int)segment;
- (void)addSegmentWithTitle:(id)title;
- (void)insertSegment:(unsigned long long)segment withTitle:(id)title animated:(BOOL)animated;
- (void)insertSegment:(unsigned long long)segment withImage:(id)image animated:(BOOL)animated;
- (void)removeSegment:(unsigned long long)segment animated:(BOOL)animated;
- (void)setTitle:(id)title forSegment:(unsigned long long)segment;
- (id)titleForSegment:(unsigned long long)segment;
- (void)setImage:(id)image forSegment:(unsigned long long)segment;
- (id)imageForSegment:(unsigned long long)segment;
- (void)setWidth:(float)width forSegment:(unsigned long long)segment;
- (float)widthForSegment:(unsigned long long)segment;
- (void)setContentOffset:(struct CGSize { double x0; double x1; })offset forSegment:(unsigned long long)segment;
- (struct CGSize { double x0; double x1; })contentOffsetForSegment:(unsigned long long)segment;
- (void)setEnabled:(BOOL)enabled forSegment:(unsigned long long)segment;
- (BOOL)isEnabledForSegment:(unsigned long long)segment;
- (void)setSelectedSegment:(long long)segment;
- (long long)selectedSegment;
- (id)infoViewForSegment:(long long)segment;
- (id)_viewForLoweringBaselineLayoutAttribute:(int)attribute;
- (void)updateForMiniBarState:(BOOL)state;
- (void)_installVisualStyleDefaults;
- (void)_commonSegmentedControlInit;
- (void)__initWithFrameCommonOperations;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithItems:(id)items;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame actions:(id)actions;
- (id)_tintColorArchivingKey;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (void)traitCollectionDidChange:(id)change;
- (void)_didMoveFromWindow:(id)window toWindow:(id)window;
- (void)_resetForAppearanceChange;
- (void)_setNeedsBackgroundAndContentViewUpdate;
- (void)_setNeedsAppearanceUpdate;
- (void)_setSegmentedControlAppearance:(struct { id x0; double x1; double x2; struct { id x0; id x1; id x2; id x3; id x4; struct CGSize { double x0; double x1; } x5; } x3; struct { id x0; id x1; id x2; id x3; id x4; struct CGSize { double x0; double x1; } x5; } x4; struct { id x0; id x1; id x2; id x3; id x4; struct CGSize { double x0; double x1; } x5; } x5; struct { id x0; id x1; id x2; id x3; id x4; struct CGSize { double x0; double x1; } x5; } x6; BOOL x7; } *)appearance;
- (void)_setAppearanceIsTiled:(BOOL)tiled leftCapWidth:(unsigned long long)width rightCapWidth:(unsigned long long)width;
- (void)_setControlSize:(int)size andInvalidate:(BOOL)invalidate;
- (long long)segmentControlStyle;
- (void)setSegmentControlStyle:(long long)style;
- (BOOL)isMomentary;
- (void)_setAutosizeText:(BOOL)text;
- (void)setBarStyle:(long long)style;
- (long long)barStyle;
- (void)setTransparentBackground:(BOOL)background;
- (BOOL)transparentBackground;
- (void)setAdjustsForContentSizeCategory:(BOOL)category;
- (BOOL)adjustsForContentSizeCategory;
- (BOOL)_usesNewAnimations;
- (void)_setUsesNewAnimations:(BOOL)animations;
- (void)insertSegmentWithTitle:(id)title atIndex:(unsigned long long)index animated:(BOOL)animated;
- (void)insertSegmentWithImage:(id)image atIndex:(unsigned long long)index animated:(BOOL)animated;
- (void)insertSegmentWithAction:(id)action atIndex:(unsigned long long)index animated:(BOOL)animated;
- (void)_insertSegmentWithAttributedTitle:(id)title atIndex:(unsigned long long)index animated:(BOOL)animated;
- (id)_accessibilitySegmentItemAtIndex:(unsigned long long)index;
- (void)removeSegmentAtIndex:(unsigned long long)index animated:(BOOL)animated;
- (void)removeAllSegments;
- (void)setTitle:(id)title forSegmentAtIndex:(unsigned long long)index;
- (id)titleForSegmentAtIndex:(unsigned long long)index;
- (void)_setAction:(id)action forSegmentAtIndex:(unsigned long long)index;
- (void)setAction:(id)action forSegmentAtIndex:(unsigned long long)index;
- (id)actionForSegmentAtIndex:(unsigned long long)index;
- (long long)segmentIndexForActionIdentifier:(id)identifier;
- (void)_setAttributedTitle:(id)title forSegmentAtIndex:(unsigned long long)index;
- (id)_attributedTitleForSegmentAtIndex:(unsigned long long)index;
- (void)setImage:(id)image forSegmentAtIndex:(unsigned long long)index;
- (id)imageForSegmentAtIndex:(unsigned long long)index;
- (void)setWidth:(double)width forSegmentAtIndex:(unsigned long long)index;
- (double)widthForSegmentAtIndex:(unsigned long long)index;
- (void)setContentOffset:(struct CGSize { double x0; double x1; })offset forSegmentAtIndex:(unsigned long long)index;
- (struct CGSize { double x0; double x1; })contentOffsetForSegmentAtIndex:(unsigned long long)index;
- (void)setEnabled:(BOOL)enabled forSegmentAtIndex:(unsigned long long)index;
- (BOOL)isEnabledForSegmentAtIndex:(unsigned long long)index;
- (BOOL)_shouldSelectSegmentAtIndex:(long long)index;
- (void)_setSelectedSegmentIndex:(long long)index notify:(BOOL)notify;
- (void)_setSelectedSegmentIndex:(long long)index notify:(BOOL)notify animate:(BOOL)animate;
- (void)_emitValueChanged;
- (unsigned long long)_controlEventsForActionTriggered;
- (void)_sendValueChanged;
- (void)_animateContentChangeWithAnimations:(id /* block */)animations completion:(id /* block */)completion;
- (id)_basicAnimationForView:(id)view withKeyPath:(id)path;
- (void)_setSelected:(BOOL)selected highlighted:(BOOL)highlighted forSegmentAtIndex:(int)index forceInfoDisplay:(BOOL)display;
- (void)_setSelected:(BOOL)selected forSegmentAtIndex:(int)index forceInfoDisplay:(BOOL)display;
- (void)_updateAxLongPressGestureRecognizer;
- (void)sizeToFit;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (id)viewForLastBaselineLayout;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (BOOL)_disableSlidingControl;
- (BOOL)_animateHighlightingSelectionByDefault;
- (long long)_segmentIndexToHighlight:(BOOL *)highlight;
- (void)_insertSelectionViewForSegment:(id)segment;
- (void)_updateSelectionToSegment:(id)segment highlight:(BOOL)highlight shouldAnimate:(BOOL)animate sameSegment:(BOOL)segment;
- (void)_updateHighlightToPosition:(struct CGPoint { double x0; double x1; })position bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds highlight:(BOOL)highlight;
- (void)_insertHighlightView;
- (void)_updateSelectionIndicator;
- (void)layoutSubviews;
- (BOOL)shouldTrack;
- (void)_setHighlightedSegmentHighlighted:(BOOL)highlighted;
- (void)_highlightSegment:(long long)segment;
- (BOOL)pointMostlyInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (id)_segmentAtIndex:(int)index;
- (int)_closestSegmentIndexAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_tapSegmentAtPoint:(struct CGPoint { double x0; double x1; })point touchDown:(BOOL)down;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)touchesMoved:(id)moved withEvent:(id)event;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;
- (void)pressesBegan:(id)began withEvent:(id)event;
- (void)pressesChanged:(id)changed withEvent:(id)event;
- (void)pressesCancelled:(id)cancelled withEvent:(id)event;
- (void)pressesEnded:(id)ended withEvent:(id)event;
- (BOOL)_shouldConsumeEventWithPresses:(id)presses;
- (BOOL)useBlockyMagnificationInClassic;
- (void)_setEnabled:(BOOL)enabled forcePropagateToSegments:(BOOL)segments;
- (void)setEnabled:(BOOL)enabled;
- (void)setAlpha:(double)alpha;
- (void)_setAlwaysEmitValueChanged:(BOOL)changed;
- (BOOL)_alwaysEmitValueChanged;
- (void)_setSelectedSegmentVibrancyEffect:(id)effect;
- (id)_selectedSegmentVibrancyEffect;
- (id)__selectedSegmentVisualEffect;
- (void)_setBackgroundTintColor:(id)color;
- (id)_backgroundTintColor;
- (void)_setInterSegmentSpacing:(double)spacing;
- (double)_interSegmentSpacing;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)_axLongPressHandler:(id)handler;
- (long long)adaptivePresentationStyleForPresentationController:(id)controller;
- (long long)adaptivePresentationStyleForPresentationController:(id)controller traitCollection:(id)collection;
- (BOOL)canBecomeFocused;
- (id)_viewToAddFocusLayer;
- (void)_diagnoseFocusabilityForReport:(id)report;
- (BOOL)_hasEnabledSegment;
- (void)_selectFocusedSegment;
- (void)_sendDelayedFocusActionIfNecessary;
- (void)_cancelDelayedFocusAction;
- (void)didUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (id)_internalFocusSystem;
- (BOOL)_focusSystem:(id)system containsChildOfHostEnvironment:(id)environment;
- (id)_preferredFocusEnvironmentsForFocusSystem:(id)system;
- (void)_focusSystem:(id)system didFinishUpdatingFocusInContext:(id)context;
- (id)_focusMapContainerForFocusSystem:(id)system;
- (void)_setBackgroundImage:(id)image forState:(unsigned long long)state barMetrics:(long long)metrics;
- (void)setBackgroundImage:(id)image forState:(unsigned long long)state barMetrics:(long long)metrics;
- (id)backgroundImageForState:(unsigned long long)state barMetrics:(long long)metrics;
- (void)_setDividerImage:(id)image forLeftSegmentState:(unsigned long long)state rightSegmentState:(unsigned long long)state barMetrics:(long long)metrics;
- (void)setDividerImage:(id)image forLeftSegmentState:(unsigned long long)state rightSegmentState:(unsigned long long)state barMetrics:(long long)metrics;
- (id)dividerImageForLeftSegmentState:(unsigned long long)state rightSegmentState:(unsigned long long)state barMetrics:(long long)metrics;
- (void)_setTitleTextAttributes:(id)attributes forState:(unsigned long long)state;
- (void)setTitleTextAttributes:(id)attributes forState:(unsigned long long)state;
- (id)titleTextAttributesForState:(unsigned long long)state;
- (void)_setBackgroundVerticalPositionAdjustment:(double)adjustment forBarMetrics:(long long)metrics;
- (double)_backgroundVerticalPositionAdjustmentForBarMetrics:(long long)metrics;
- (void)setContentPositionAdjustment:(struct UIOffset { double x0; double x1; })adjustment forSegmentType:(long long)type barMetrics:(long long)metrics;
- (struct UIOffset { double x0; double x1; })contentPositionAdjustmentForSegmentType:(long long)type barMetrics:(long long)metrics;
- (id)_badgeValueForSegmentAtIndex:(unsigned long long)index;
- (void)_setBadgeValue:(id)value forSegmentAtIndex:(unsigned long long)index;
- (id)_createInfoViewForSegmentAtIndex:(unsigned long long)index item:(id)item;
- (double)_barHeight;
- (id)_createSegmentAtIndex:(int)index position:(unsigned int)position withInfo:(id)info;
- (id)_createAndAddSegmentAtIndex:(int)index position:(unsigned int)position withInfo:(id)info;
- (void)_insertSegment:(int)segment withInfo:(id)info animated:(BOOL)animated;
- (void)_clearSelectedSegment;
- (void)_updateDividerImageForSegmentAtIndex:(unsigned long long)index;
- (id)_uiktest_labelsWithState:(unsigned long long)state;
- (id)_uiktest_segmentAtIndex:(unsigned long long)index;
@end

#endif /* UISegmentedControl_h */
