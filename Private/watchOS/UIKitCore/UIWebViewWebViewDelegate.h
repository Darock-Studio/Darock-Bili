//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIWebViewWebViewDelegate_h
#define UIWebViewWebViewDelegate_h
@import Foundation;

#include "UIWebView.h"
#include "WebFrameLoadDelegate-Protocol.h"
#include "WebPolicyDelegate-Protocol.h"
#include "WebResourceLoadDelegate-Protocol.h"
#include "WebUIDelegate-Protocol.h"

@class NSString;

@interface UIWebViewWebViewDelegate : NSObject<WebFrameLoadDelegate, WebPolicyDelegate, WebResourceLoadDelegate, WebUIDelegate> {
  /* instance variables */
  UIWebView *uiWebView;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUIWebView:(id)view;
- (id)webView:(id)view createWebViewWithRequest:(id)request;
- (void)webView:(id)view decidePolicyForNewWindowAction:(id)action request:(id)request newFrameName:(id)name decisionListener:(id)listener;
- (void)webView:(id)view decidePolicyForNavigationAction:(id)action request:(id)request frame:(id)frame decisionListener:(id)listener;
- (void)webView:(id)view unableToImplementPolicyWithError:(id)error frame:(id)frame;
- (void)webView:(id)view frame:(id)frame exceededDatabaseQuotaForSecurityOrigin:(id)origin database:(id)database;
- (void)webView:(id)view exceededApplicationCacheOriginQuotaForSecurityOrigin:(id)origin totalSpaceNeeded:(unsigned long long)needed;
- (void)webView:(id)view printFrameView:(id)view;
- (void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;
- (void)webView:(id)view didReceiveTitle:(id)title forFrame:(id)frame;
- (void)webViewSupportedOrientationsUpdated:(id)updated;
- (id)webView:(id)view connectionPropertiesForResource:(id)resource dataSource:(id)source;
- (id)webThreadWebView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)source;
- (void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
- (void)webView:(id)view didReceiveServerRedirectForProvisionalLoadForFrame:(id)frame;
- (void)webView:(id)view didFailProvisionalLoadWithError:(id)error forFrame:(id)frame;
- (void)webView:(id)view decidePolicyForMIMEType:(id)mimetype request:(id)request frame:(id)frame decisionListener:(id)listener;
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
- (void)webView:(id)view didFirstLayoutInFrame:(id)frame;
- (void)webViewClose:(id)close;
- (void)webView:(id)view runJavaScriptAlertPanelWithMessage:(id)message initiatedByFrame:(id)frame;
- (BOOL)webView:(id)view runJavaScriptConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame;
- (id)webView:(id)view runJavaScriptTextInputPanelWithPrompt:(id)prompt defaultText:(id)text initiatedByFrame:(id)frame;
- (void)webView:(id)view decidePolicyForGeolocationRequestFromOrigin:(id)origin frame:(id)frame listener:(id)listener;
- (id)webView:(id)view identifierForInitialRequest:(id)request fromDataSource:(id)source;
- (void)webView:(id)view resource:(id)resource didFinishLoadingFromDataSource:(id)source;
- (void)webView:(id)view resource:(id)resource didFailLoadingWithError:(id)error fromDataSource:(id)source;
- (void)webView:(id)view resource:(id)resource didReceiveAuthenticationChallenge:(id)challenge fromDataSource:(id)source;
- (void)webView:(id)view resource:(id)resource didCancelAuthenticationChallenge:(id)challenge fromDataSource:(id)source;
- (BOOL)webView:(id)view resource:(id)resource canAuthenticateAgainstProtectionSpace:(id)space forDataSource:(id)source;
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;
- (void)_clearUIWebView;
@end

#endif /* UIWebViewWebViewDelegate_h */
