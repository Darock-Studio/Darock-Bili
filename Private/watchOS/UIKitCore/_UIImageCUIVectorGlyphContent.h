//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIImageCUIVectorGlyphContent_h
#define _UIImageCUIVectorGlyphContent_h
@import Foundation;

#include "_UIImageContent.h"
#include "_UIImageContent.h"

@class CUINamedVectorGlyph;

@interface _UIImageCUIVectorGlyphContent : _UIImageContent {
  /* instance variables */
  CUINamedVectorGlyph *_vectorGlyph;
  _UIImageContent *_vectorContent;
  double _vectorScale;
  struct CGSize { double width; double height; } _sizeInPixels;
  struct CGImage * _overrideImageRef;
  atomic int _isMultiColor;
  atomic long long _numberOfHierarchyLayers;
}

@property (nonatomic) double glyphScaleFactor;

/* instance methods */
- (id)initWithCUIVectorGlyph:(id)glyph scale:(double)scale;
- (id)initWithScale:(double)scale;
- (id)typeName;
- (double)vectorScale;
- (id)outlinePath;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)description;
- (BOOL)isCGImage;
- (BOOL)canScaleImageToTargetResolution;
- (BOOL)canEmitVectorDrawingCommands;
- (BOOL)_canProvideCGImageDirectly;
- (struct CGImage *)CGImage;
- (BOOL)isVectorGlyph;
- (id)vectorGlyph;
- (id)contentWithCGImage:(struct CGImage *)cgimage;
- (id)contentWithVariableValue:(double)value;
- (BOOL)containsNamedColorStyles;
- (BOOL)containsNamedColorStyle:(id)style;
- (unsigned long long)numberOfHierarchyLayers;
- (double)variableValue;
- (id)_automaticSymbolConfiguration;
- (struct CGSize { double x0; double x1; })sizeInPixels;
- (void)_prepareForDrawingWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context;
- (void)_drawWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context effect:(id)effect;
- (struct CGImage *)_provideCGImageWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale;
- (struct CGImage *)_provideVectorGlyphCGImageWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale namedColorResolver:(id /* block */)resolver;
- (void)_drawVectorGlyphWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context namedColorResolver:(id /* block */)resolver;
- (struct CGImage *)_provideVectorGlyphCGImageWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale hierarchicalColorResolver:(id /* block */)resolver;
- (void)_drawVectorGlyphWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context hierarchicalColorResolver:(id /* block */)resolver;
- (struct CGImage *)_provideVectorGlyphCGImageWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale paletteColors:(id)colors;
- (void)_drawVectorGlyphWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context paletteColors:(id)colors;
- (void)dealloc;
@end

#endif /* _UIImageCUIVectorGlyphContent_h */
