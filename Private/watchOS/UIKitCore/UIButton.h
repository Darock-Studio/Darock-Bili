//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIButton_h
#define UIButton_h
@import Foundation;

#include "UIControl.h"
#include "NSCoding-Protocol.h"
#include "UIAccessibilityContentSizeCategoryImageAdjusting-Protocol.h"
#include "UIAccessibilityContentSizeCategoryImageAdjustingInternal-Protocol.h"
#include "UIButtonConfiguration.h"
#include "UIButtonControl-Protocol.h"
#include "UIButtonVisualProvider-Protocol.h"
#include "UIColor.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UIImage.h"
#include "UIImageSymbolConfiguration.h"
#include "UIImageView.h"
#include "UILabel.h"
#include "UIMenu.h"
#include "UIMenuForcedAutomaticSelectionDelegate-Protocol.h"
#include "UITapGestureRecognizer.h"
#include "_UIButtonConfigurationShim-Protocol.h"
#include "_UISelectionInteraction.h"
#include "_UISelectionInteractionDelegate-Protocol.h"

@class NSAttributedString, NSISEngine, NSMutableDictionary, NSString, UIFont;

@interface UIButton : UIControl<UIAccessibilityContentSizeCategoryImageAdjusting, UIAccessibilityContentSizeCategoryImageAdjustingInternal, UIGestureRecognizerDelegate, UIMenuForcedAutomaticSelectionDelegate, _UISelectionInteractionDelegate, UIButtonControl, NSCoding> {
  /* instance variables */
  unsigned long long _externalFlatEdge;
  struct { unsigned int x :1 isPopulated; unsigned int x :1 implementsButton; unsigned int x :1 implementsModernProvider; unsigned int x :1 implementsArchiving; unsigned int x :1 implementsEffectSupport; unsigned int x :1 implementsDeprecatedAPISupport; unsigned int x :1 implementsDeprecatedSPISupport; unsigned int x :4 preferredBehavioralStyle; } _buttonVisualProviderFlags;
  NSMutableDictionary *_contentLookup;
  BOOL _initialized;
  unsigned long long _lastDrawingControlState;
  UITapGestureRecognizer *_selectGestureRecognizer;
  NSObject<UIButtonVisualProvider> *_visualProvider;
  struct { unsigned int x :1 reversesTitleShadowWhenHighlighted; unsigned int x :1 adjustsImageWhenHighlighted; unsigned int x :1 adjustsImageWhenDisabled; unsigned int x :1 autosizeToFit; unsigned int x :1 disabledDimsImage; unsigned int x :1 showsTouchWhenHighlighted; unsigned int x :8 buttonType; unsigned int x :8 role; unsigned int x :1 shouldHandleScrollerMouseEvent; unsigned int x :1 titleFrozen; unsigned int x :2 resendTraitToImageViews; unsigned int x :1 animateNextHighlightChange; unsigned int x :1 blurEnabled; unsigned int x :1 visualEffectViewEnabled; unsigned int x :1 suppressAccessibilityUnderline; unsigned int x :1 requiresLayoutForPropertyChange; unsigned int x :1 needsTitleViewDefaultColorUpdate; unsigned int x :1 adjustsImageSizeForAccessibilityContentSizeCategory; unsigned int x :1 disableAutomaticTitleAnimations; unsigned int x :1 overridesRectAccessors; unsigned int x :1 automaticallyUpdatesConfiguration; unsigned int x :1 changesSelectionAsPrimaryAction; } _buttonFlags;
  UIFont *_lazyTitleViewFont;
  BOOL _lazyTitleViewFontIsDefaultForIdiom;
  NSISEngine *_activeSizeToFitLayoutEngine;
  id /* block */ _menuProvider;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _internalTitlePaddingInsets;
}

@property (nonatomic) BOOL adjustsImageSizeForAccessibilityContentSizeCategory;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL adjustsImageSizeForAccessibilityContentSizeCategory;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL _calloutBar_shouldHideTitleLabel;
@property (retain, nonatomic) _UISelectionInteraction *selectionInteraction;
@property (weak, nonatomic) NSISEngine *_activeSizeToFitLayoutEngine;
@property (nonatomic) long long _imageContentMode;
@property (nonatomic) BOOL contentBackgroundHidden;
@property (retain, nonatomic) UIColor *_plainButtonBackgroundColor;
@property (readonly, retain, nonatomic) NSObject<UIButtonVisualProvider> *_visualProvider;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _internalTitlePaddingInsets;
@property (retain, nonatomic) NSObject<_UIButtonConfigurationShim> *_currentConfiguration;
@property (readonly, nonatomic) BOOL _menuEnabled;
@property (nonatomic) BOOL prefersHorizontalMenuAttachment;
@property (nonatomic) BOOL _isMicButton;
@property (readonly, copy, nonatomic) _UIButtonConfigurationState *_configurationState;
@property (copy, nonatomic) id /* block */ _configurationUpdateHandler;
@property (copy, nonatomic) _UIButtonConfiguration *_configuration;
@property (nonatomic) BOOL _automaticallyUpdatesButtonConfiguration;
@property (readonly, nonatomic) UILabel *_subtitleLabel;
@property (nonatomic) BOOL _changesSelectionAsPrimaryAction;
@property (nonatomic) BOOL _disableAutomaticTitleAnimations;
@property (readonly, retain, nonatomic) UIColor *_currentImageColor;
@property (nonatomic) BOOL _wantsAccessibilityUnderline;
@property unsigned long long _externalFlatEdge;
@property (copy, nonatomic) id /* block */ _menuProvider;
@property (retain, nonatomic) UIFont *font;
@property (nonatomic) long long lineBreakMode;
@property (nonatomic) struct CGSize { double x0; double x1; } titleShadowOffset;
@property (@dynamic, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } contentEdgeInsets;
@property (@dynamic, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } titleEdgeInsets;
@property (@dynamic, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } imageEdgeInsets;
@property (@dynamic, nonatomic) BOOL reversesTitleShadowWhenHighlighted;
@property (@dynamic, nonatomic) BOOL adjustsImageWhenHighlighted;
@property (@dynamic, nonatomic) BOOL adjustsImageWhenDisabled;
@property (nonatomic) BOOL showsTouchWhenHighlighted;
@property (copy, nonatomic) UIButtonConfiguration *configuration;
@property (copy, nonatomic) id /* block */ configurationUpdateHandler;
@property (nonatomic) BOOL automaticallyUpdatesConfiguration;
@property (retain, @dynamic, nonatomic) UIColor *tintColor;
@property (readonly, nonatomic) long long buttonType;
@property (readonly, nonatomic) BOOL hovered;
@property (readonly, nonatomic) BOOL held;
@property (nonatomic) long long role;
@property (nonatomic) BOOL pointerInteractionEnabled;
@property (copy, nonatomic) id /* block */ pointerStyleProvider;
@property (copy, nonatomic) UIMenu *menu;
@property (nonatomic) long long preferredMenuElementOrder;
@property (nonatomic) BOOL changesSelectionAsPrimaryAction;
@property (readonly, nonatomic) NSString *currentTitle;
@property (readonly, nonatomic) UIColor *currentTitleColor;
@property (readonly, nonatomic) UIColor *currentTitleShadowColor;
@property (readonly, nonatomic) UIImage *currentImage;
@property (readonly, nonatomic) UIImage *currentBackgroundImage;
@property (readonly, nonatomic) UIImageSymbolConfiguration *currentPreferredSymbolConfiguration;
@property (readonly, nonatomic) NSAttributedString *currentAttributedTitle;
@property (readonly, nonatomic) UILabel *titleLabel;
@property (readonly, nonatomic) UIImageView *imageView;
@property (readonly, nonatomic) UILabel *subtitleLabel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (double)_defaultNeighborSpacingForAxis:(long long)axis;
+ (void)_setAllowsUnsupportedMacIdiomBehavior:(BOOL)behavior;
+ (BOOL)_allowsUnsupportedMacIdiomBehavior;
+ (BOOL)_buttonTypeIsModernUI:(long long)ui;
+ (BOOL)_buttonTypeIsSystemProvided:(long long)provided;
+ (BOOL)_buttonTypeIsiOSSystemProvided:(long long)provided;
+ (id)_systemButtonWithImage:(id)image target:(id)target action:(SEL)action;
+ (id)systemButtonWithImage:(id)image target:(id)target action:(SEL)action;
+ (id)buttonWithType:(long long)type;
+ (id)buttonWithType:(long long)type primaryAction:(id)action;
+ (id)buttonWithConfiguration:(id)configuration primaryAction:(id)action;
+ (id)systemButtonWithPrimaryAction:(id)action;
+ (id)_defaultNormalTitleColor;
+ (id)_defaultNormalTitleShadowColor;
+ (Class)_visualProviderClass;
+ (Class)_visualProviderClassForIdiom:(long long)idiom;
+ (void)_registerVisualProviderClass:(Class)class forIdiom:(long long)idiom;
+ (void)_setVisuallyHighlighted:(BOOL)highlighted forViews:(id)views initialPress:(BOOL)press highlightBlock:(id /* block */)block;
+ (void)_setVisuallyHighlighted:(BOOL)highlighted forViews:(id)views initialPress:(BOOL)press baseAlpha:(double)alpha;
+ (void)_setVisuallyHighlighted:(BOOL)highlighted forViews:(id)views initialPress:(BOOL)press;
+ (id)_defaultImageNameForType:(long long)type andState:(unsigned long long)state;
+ (id)_defaultImageForType:(long long)type andState:(unsigned long long)state withConfiguration:(id)configuration;
+ (id)_defaultSymbolConfigurationForType:(long long)type andState:(unsigned long long)state compact:(BOOL)compact idiom:(long long)idiom;
+ (id)_defaultBackgroundImageNameForType:(long long)type andState:(unsigned long long)state compact:(BOOL)compact;
+ (id)_defaultBackgroundImageColorForType:(long long)type andState:(unsigned long long)state;
+ (id)_defaultBackgroundImageForType:(long long)type andState:(unsigned long long)state;
+ (id)_defaultTitleColorForState:(unsigned long long)state button:(id)button isTintColor:(BOOL *)color;
+ (id)_defaultImageColorForType:(long long)type andState:(unsigned long long)state idiom:(long long)idiom;
+ (id)_defaultImageColorForState:(unsigned long long)state button:(id)button;

/* instance methods */
- (id)_viewForLoweringBaselineLayoutAttribute:(int)attribute;
- (BOOL)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long *)attribute;
- (double)_autolayoutSpacingAtEdge:(int)edge forAttribute:(long long)attribute inContainer:(id)container isGuide:(BOOL)guide;
- (double)_autolayoutSpacingAtEdge:(int)edge forAttribute:(id)attribute nextToNeighbor:(id)neighbor edge:(int)edge attribute:(long long)attribute multiplier:(double)multiplier;
- (void)_uikit_applyValueFromTraitStorage:(id)storage forKeyPath:(id)path;
- (double)_additionalBaselineSpacingForEdge:(int)edge;
- (struct CGSize { double x0; double x1; })_effectiveSizeForImage:(id)image;
- (double)_scaleFactorForImage;
- (BOOL)_accessibilityShouldActivateOnHUDLift;
- (BOOL)isAccessibilityElementByDefault;
- (unsigned long long)defaultAccessibilityTraits;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (id)_layoutDebuggingTitle;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_combinedContentPaddingInsets;
- (void)_commonInitForPrimaryAction:(id)action;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithCoder:(id)coder;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame primaryAction:(id)action;
- (id)_encodableSubviews;
- (void)_populateArchivedSubviews:(id)subviews;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (void)_setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame deferLayout:(BOOL)layout;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (BOOL)_unconditionallyWantsSetBoundsFromISEngineLayout;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)setSelected:(BOOL)selected;
- (void)setEnabled:(BOOL)enabled;
- (void)setHighlighted:(BOOL)highlighted;
- (void)_setHighlightedWithoutUpdatingState:(BOOL)state;
- (void)_setHighlighted:(BOOL)highlighted animated:(BOOL)animated;
- (BOOL)isHeld;
- (void)_setHovered:(BOOL)hovered;
- (void)_setHasActiveMenuPresentation:(BOOL)presentation;
- (BOOL)isHovered;
- (void)_didChangeFromIdiom:(long long)idiom onScreen:(id)screen traverseHierarchy:(BOOL)hierarchy;
- (BOOL)_canHaveTitle;
- (BOOL)_likelyToHaveTitle;
- (void)setContentHorizontalAlignment:(long long)alignment;
- (void)setContentVerticalAlignment:(long long)alignment;
- (void)_setVisualProvider:(id)provider;
- (id)visualProviderClassForTraitCollection:(id)collection;
- (void)_refreshVisualProvider;
- (void)_refreshVisualProviderForTraitCollection:(id)collection;
- (void)_refreshVisualProviderForTraitCollection:(id)collection populatingAPIProperties:(BOOL)apiproperties;
- (BOOL)_supportsMacIdiom;
- (void)_setImageContentMode:(long long)mode;
- (void)_setDisableAutomaticTitleAnimations:(BOOL)animations;
- (BOOL)_isModernButton;
- (BOOL)_hasVisibleDefaultSelectionIndicator;
- (BOOL)_isSystemProvidedButton;
- (BOOL)_isiOSSystemProvidedButton;
- (BOOL)_isEffectivelyDisabledExternalButton;
- (void)_didUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (BOOL)canBecomeFocused;
- (id)_preferredConfigurationForFocusAnimation:(long long)animation inContext:(id)context;
- (unsigned long long)_controlEventsForActionTriggered;
- (BOOL)beginTrackingWithTouch:(id)touch withEvent:(id)event;
- (void)endTrackingWithTouch:(id)touch withEvent:(id)event;
- (void)_selectionInteractionDidBeginHinting:(id)hinting;
- (void)_selectionInteractionDidCancelHinting:(id)hinting;
- (void)_selectionInteractionDidSelect:(id)select;
- (void)tintColorDidChange;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_pathTitleEdgeInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_pathImageEdgeInsets;
- (double)_highlightCornerRadius;
- (BOOL)_hasHighlightColor;
- (double)_selectedIndicatorAlpha;
- (id)_selectedIndicatorViewWithImage:(id)image;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectedIndicatorBounds;
- (id)_selectionIndicatorView;
- (void)_willMoveToWindow:(id)window;
- (void)_didMoveFromWindow:(id)window toWindow:(id)window;
- (long long)_externalDrawingStyleForState:(unsigned long long)state;
- (id)_externalFocusedTitleColor;
- (id)_externalTitleColorForState:(unsigned long long)state isTintColor:(BOOL *)color;
- (id)_externalUnfocusedBorderColor;
- (id)_externalBorderColorForState:(unsigned long long)state;
- (id)_externalImageColorForState:(unsigned long long)state;
- (void)_setExternalFlatEdge:(unsigned long long)edge;
- (id)_borderColorForState:(unsigned long long)state;
- (BOOL)_hasDrawingStyle;
- (void)_sendSetNeedsLayoutToSuperviewOnTitleAnimationCompletionIfNecessary;
- (BOOL)_isTitleFrozen;
- (void)_setTitleFrozen:(BOOL)frozen;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_clippedHighlightBounds;
- (void)setSemanticContentAttribute:(long long)attribute;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)_invalidateForPropertyChange;
- (void)setNeedsLayout;
- (void)setTitle:(id)title forState:(unsigned long long)state;
- (void)setTitleColor:(id)color forState:(unsigned long long)state;
- (void)_setImageColor:(id)color forState:(unsigned long long)state;
- (void)setTitleShadowColor:(id)color forState:(unsigned long long)state;
- (void)setImage:(id)image forState:(unsigned long long)state;
- (void)setBackgroundImage:(id)image forState:(unsigned long long)state;
- (void)setPreferredSymbolConfiguration:(id)configuration forImageInState:(unsigned long long)state;
- (void)setAttributedTitle:(id)title forState:(unsigned long long)state;
- (void)_setSubtitle:(id)subtitle forState:(unsigned long long)state;
- (void)_setAttributedSubtitle:(id)subtitle forState:(unsigned long long)state;
- (id)titleForState:(unsigned long long)state;
- (id)titleColorForState:(unsigned long long)state;
- (id)titleShadowColorForState:(unsigned long long)state;
- (id)imageForState:(unsigned long long)state;
- (id)backgroundImageForState:(unsigned long long)state;
- (id)preferredSymbolConfigurationForImageInState:(unsigned long long)state;
- (id)attributedTitleForState:(unsigned long long)state;
- (id)_subtitleForState:(unsigned long long)state;
- (id)_attributedSubtitleForState:(unsigned long long)state;
- (id)_currentImageWithResolvedConfiguration;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })backgroundRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })titleRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })imageRectForContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)_setContentHuggingPriorities:(struct CGSize { double x0; double x1; })priorities;
- (void)updateConstraints;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;
- (BOOL)_hasBaseline;
- (BOOL)_shouldInvalidateBaselineConstraintsForSize:(struct CGSize { double x0; double x1; })size oldSize:(struct CGSize { double x0; double x1; })size;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })size;
- (void)_updateBaselineInformationDependentOnBounds;
- (BOOL)_wantsBaselineUpdatingFollowingConstraintsPass;
- (double)_baselineOffsetFromNearestEdgeForLayoutAttribute:(long long)attribute;
- (double)_firstBaselineOffsetFromTop;
- (double)_baselineOffsetFromBottom;
- (struct CGSize { double x0; double x1; })_roundSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)_needsDoubleUpdateConstraintsPass;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (double)_preferredMaxLayoutWidth;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (struct CGSize { double x0; double x1; })systemLayoutSizeFittingSize:(struct CGSize { double x0; double x1; })size withHorizontalFittingPriority:(float)priority verticalFittingPriority:(float)priority;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (id)_contentBackdropView;
- (BOOL)_visualEffectViewEnabled;
- (void)_setVisualEffectViewEnabled:(BOOL)enabled backgroundColor:(id)color;
- (BOOL)_blurEnabled;
- (void)_setBlurEnabled:(BOOL)enabled;
- (BOOL)_requiresLayoutForPropertyChange;
- (void)layoutSubviews;
- (BOOL)_shouldHaveFloatingAppearance;
- (id)_effectiveContentView;
- (void)_setWantsAccessibilityUnderline:(BOOL)underline;
- (void)_setButtonType:(long long)type;
- (long long)_buttonType;
- (void)_titleViewLabelMetricsChanged;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (void)_setShouldHandleScrollerMouseEvent:(BOOL)event;
- (void)setAutosizesToFit:(BOOL)fit;
- (BOOL)autosizesToFit;
- (void)setDisabledDimsImage:(BOOL)image;
- (void)setShowPressFeedback:(BOOL)feedback;
- (struct CGPoint { double x0; double x1; })pressFeedbackPosition;
- (void)setTitle:(id)title forStates:(unsigned long long)states;
- (void)setTitleColor:(id)color forStates:(unsigned long long)states;
- (void)setTitleShadowColor:(id)color forStates:(unsigned long long)states;
- (void)setImage:(id)image forStates:(unsigned long long)states;
- (void)setBackgroundImage:(id)image forStates:(unsigned long long)states;
- (void)crossfadeToImage:(id)image forState:(unsigned long long)state;
- (id)_font;
- (id)_defaultFontForIdiom:(long long)idiom;
- (BOOL)_fontIsDefaultForIdiom;
- (void)_setDefaultFontForIdiom;
- (void)_setFont:(id)font isDefaultForIdiom:(BOOL)idiom;
- (void)_setFont:(id)font;
- (id)_lazyTitleViewFontIsDefaultForIdiom:(BOOL *)idiom;
- (void)_setLazyTitleViewFont:(id)font isDefaultForIdiom:(BOOL)idiom;
- (void)_resetLazyTitleViewFont;
- (long long)_lineBreakMode;
- (void)_setLineBreakMode:(long long)mode;
- (struct CGSize { double x0; double x1; })_titleShadowOffset;
- (void)_setTitleShadowOffset:(struct CGSize { double x0; double x1; })offset;
- (id)_backgroundView;
- (id)_imageView;
- (id)_imageViewIfNeeded;
- (id)_titleView;
- (id)title;
- (void)setTitle:(id)title;
- (id)image;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_highlightBounds;
- (double)_drawingStrokeForStyle:(long long)style;
- (long long)_drawingStyleForStroke:(double)stroke;
- (void)_setDrawingStyle:(long long)style forState:(unsigned long long)state;
- (long long)_drawingStyleForState:(unsigned long long)state;
- (void)_setDrawingStroke:(double)stroke forState:(unsigned long long)state;
- (double)_drawingStrokeForState:(unsigned long long)state;
- (BOOL)_isContentBackgroundHidden;
- (void)_setContentBackgroundHidden:(BOOL)hidden;
- (BOOL)_isOn;
- (void)_setOn:(BOOL)on;
- (void)_setContent:(id)content forState:(unsigned long long)state;
- (void)_setImage:(id)image forStates:(unsigned long long)states;
- (void)_setBackground:(id)background forStates:(unsigned long long)states;
- (void)_setTitle:(id)title forStates:(unsigned long long)states;
- (void)_setTitleColor:(id)color forStates:(unsigned long long)states;
- (void)_setImageColor:(id)color forStates:(unsigned long long)states;
- (void)_setShadowColor:(id)color forStates:(unsigned long long)states;
- (void)_setAttributedTitle:(id)title forStates:(unsigned long long)states;
- (id)_contentForState:(unsigned long long)state;
- (id)_allButtonContent;
- (id)_archivableContent:(id *)content;
- (void)_takeContentFromArchivableContent:(id)content;
- (id)_defaultImageForState:(unsigned long long)state withConfiguration:(id)configuration;
- (id)_imageForState:(unsigned long long)state applyingConfiguration:(BOOL)configuration usesImageForNormalState:(BOOL *)state;
- (id)_preferredConfigurationForState:(unsigned long long)state;
- (id)_preferredConfigurationForState:(unsigned long long)state includeDefault:(BOOL)default;
- (id)_backgroundForState:(unsigned long long)state usesBackgroundForNormalState:(BOOL *)state;
- (id)_titleForState:(unsigned long long)state;
- (id)_titleColorForState:(unsigned long long)state;
- (id)_titleColorForState:(unsigned long long)state suppressTintColorFollowing:(BOOL *)following;
- (id)_imageColorForState:(unsigned long long)state;
- (id)_shadowColorForState:(unsigned long long)state;
- (id)_attributedTitleForState:(unsigned long long)state;
- (id)_attributedTitleForState:(unsigned long long)state adjustedToTraitCollection:(id)collection;
- (BOOL)_shouldAdjustToTraitCollection;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)view;
- (void)_alignmentRectInsetsHaveChangedForChildImageView:(id)view;
- (BOOL)_hasImageForProperty:(id)property;
- (void)traitCollectionDidChange:(id)change;
- (void)_applyCarPlaySystemButtonCustomizations;
- (BOOL)_isCarPlaySystemTypeButton;
- (BOOL)_isInCarPlay;
- (void)_updateContextMenuEnabled;
- (void)_setMenuProvider:(id /* block */)provider;
- (BOOL)_isPopUpMenuButtonWithMenu:(id)menu;
- (BOOL)_isToggleButton;
- (void)_updateForAutomaticSelection;
- (void)forcedSelectionOfMenu:(id)menu willChangeTo:(id)to;
- (void)setShowsMenuAsPrimaryAction:(BOOL)action;
- (void)_setChangesSelectionAsPrimaryAction:(BOOL)action;
- (void)_sendActionsForEvents:(unsigned long long)events withEvent:(id)event;
- (void)_setIsMicButton:(BOOL)button;
- (void)_setConfigurationUpdateHandler:(id /* block */)handler;
- (void)setNeedsUpdateConfiguration;
- (void)_setNeedsUpdateConfiguration;
- (void)updateConfiguration;
- (void)_updateConfigurationUsingState:(id)state;
- (void)_setAutomaticallyUpdatesButtonConfiguration:(BOOL)configuration;
- (void)_setConfiguration:(id)configuration;
- (void)_shim_setConfiguration:(id)configuration;
- (void)_setCurrentConfiguration:(id)configuration;
- (id)_titleOrImageViewForBaselineLayout;
- (void)_setInternalTitlePaddingInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (void)_setActiveSizeToFitLayoutEngine:(id)engine;
- (BOOL)isPointerInteractionEnabled;
- (void)_setPlainButtonBackgroundColor:(id)color;
@end

#endif /* UIButton_h */
