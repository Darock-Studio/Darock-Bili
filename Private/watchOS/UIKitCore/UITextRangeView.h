//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UITextRangeView_h
#define UITextRangeView_h
@import Foundation;

#include "UIView.h"
#include "UISelectionGrabber.h"
#include "UISelectionGrabberCustomPath.h"
#include "UITextRangeAdjustmentInteractionDelegate-Protocol.h"
#include "UITextSelectionView.h"
#include "UITouch.h"
#include "UIView.h"

@class NSArray, NSMutableArray, NSString;
@protocol UIResponder<UITextInput;

@interface UITextRangeView : UIView<UITextRangeAdjustmentInteractionDelegate> {
  /* instance variables */
  UITextSelectionView *m_selectionView;
  UIResponder<UITextInput> *m_container;
  int m_mode;
  NSArray *m_rects;
  NSMutableArray *m_rectViews;
  UITouch *m_activeTouch;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } m_startEdge;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } m_endEdge;
  UIView *m_rectContainerView;
  UISelectionGrabber *m_startGrabber;
  UISelectionGrabber *m_endGrabber;
  BOOL m_animateUpdate;
  BOOL m_commandsWereShowing;
  BOOL m_willBeginMagnifying;
  BOOL m_inGesture;
  BOOL m_magnifying;
  BOOL m_scrolling;
  BOOL m_scaling;
  BOOL m_rotating;
  BOOL m_inputViewIsChanging;
  BOOL m_isClearingRange;
  BOOL m_shouldStayVisible;
  struct CGPoint { double x; double y; } m_basePoint;
  struct CGPoint { double x; double y; } m_extentPoint;
  struct CGPoint { double x; double y; } m_initialExtentPoint;
}

@property (retain, nonatomic) UISelectionGrabberCustomPath *startCustomPath;
@property (retain, nonatomic) UISelectionGrabberCustomPath *endCustomPath;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } startEdge;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } endEdge;
@property (nonatomic) BOOL magnifying;
@property (nonatomic) BOOL isClearingRange;
@property (nonatomic) BOOL shouldStayVisible;
@property (readonly, nonatomic) UITextSelectionView *selectionView;
@property (readonly, nonatomic) UIResponder<UITextInput> *container;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } basePoint;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } extentPoint;
@property (nonatomic) int mode;
@property (retain, nonatomic) NSArray *rects;
@property (readonly, nonatomic) BOOL autoscrolled;
@property (nonatomic) BOOL inGesture;
@property (nonatomic) BOOL isScrolling;
@property (nonatomic) BOOL rotating;
@property (nonatomic) BOOL scaling;
@property (nonatomic) BOOL inputViewIsChanging;
@property (nonatomic) BOOL baseIsStart;
@property (nonatomic) BOOL commandsWereShowing;
@property (retain, nonatomic) UISelectionGrabber *startGrabber;
@property (retain, nonatomic) UISelectionGrabber *endGrabber;
@property (nonatomic) struct CGPoint { double x0; double x1; } initialExtentPoint;
@property (nonatomic) BOOL animateUpdate;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } activeTouchPoint;
@property (nonatomic) BOOL willBeginMagnifying;
@property (readonly, nonatomic) BOOL areSelectionRectsVisible;
@property (readonly, nonatomic) BOOL displayingVerticalSelection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame selectionView:(id)view;
- (void)removeFromSuperview;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_edgeHitRectForEdgeRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect grabber:(id)grabber precision:(unsigned long long)precision;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_startEdgeHitRectWithPrecision:(unsigned long long)precision;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_endEdgeHitRectWithPrecision:(unsigned long long)precision;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRangeAdjustmentRectForEdge:(unsigned long long)edge;
- (id)textRangeAdjustmentViewForEdge:(unsigned long long)edge;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })paddedTextRangeAdjustmentHitRegionForEdge:(unsigned long long)edge precision:(unsigned long long)precision;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (void)setMagnifierOrientation;
- (BOOL)_gestureRecognizerShouldReceiveTouch:(id)touch;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (BOOL)textRangeAdjustmentInteraction:(id)interaction shouldBeginAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)textRangeAdjustmentInteraction:(id)interaction didBeginAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)textRangeAdjustmentInteraction:(id)interaction selectionMoved:(struct CGPoint { double x0; double x1; })moved withTouchPoint:(struct CGPoint { double x0; double x1; })point;
- (void)textRangeAdjustmentInteraction:(id)interaction didEndAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)textRangeAdjustmentInteractionWasCancelled:(id)cancelled;
- (BOOL)textRangeAdjustmentInteractionShouldApplyTouchOffset:(id)offset;
- (BOOL)textRangeAdjustmentInteraction:(id)interaction shouldDisplayLoupeForTouchType:(long long)type;
- (unsigned long long)loupeOrientationForTextRangeAdjustmentInteraction:(id)interaction;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForTextRangeAdjustmentInteraction:(id)interaction;
- (id)containerCoordinateSpaceForTextRangeAdjustmentInteraction:(id)interaction;
- (void)updateAfterEffectiveModeChange;
- (void)updateEdges;
- (void)updateSelectionWithDocumentPoint:(struct CGPoint { double x0; double x1; })point;
- (void)updateBaseIsStartWithDocumentPoint:(struct CGPoint { double x0; double x1; })point;
- (void)updateBaseAndExtentPointsFromEdges;
- (void)prepareForMagnification;
- (void)doneMagnifying;
- (void)willScroll;
- (void)didScroll;
- (void)scaleWillChange;
- (void)scaleDidChange;
- (void)willRotate;
- (void)didRotate;
- (void)inputViewWillChange;
- (void)inputViewDidChange;
- (void)clearRangeAnimated:(BOOL)animated;
- (void)updateDots;
- (void)startAnimating;
- (void)stopAnimating;
- (void)_updateGrabbersVisibility:(BOOL)visibility animated:(BOOL)animated;
- (void)cancelDelayedActions;
- (BOOL)pointCloserToEnd:(struct CGPoint { double x0; double x1; })end startEdge:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })edge endEdge:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })edge;
- (void)animateHighlighterExpanderAnimation;
- (void)animateHighlighterExpanderOnLayer:(id)layer withOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)animateHighlighterDelayedFadeInOnLayer:(id)layer;
- (void)beginMagnifying;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectionClipRect;
- (void)updateRectViews;
- (BOOL)isDisplayingVerticalSelection;
- (BOOL)_startIsHorizontal;
- (BOOL)_endIsHorizontal;
- (BOOL)shouldHitTestGrabbers;
- (BOOL)shouldShowGrabbers;
- (void)updateGrabbers;
- (void)_setGrabber:(id)grabber bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds center:(struct CGPoint { double x0; double x1; })center;
- (void)_cancelGrabberTransitionOutAnimations:(id)animations;
- (struct CGPoint { double x0; double x1; })magnifierPoint;
- (struct CGPoint { double x0; double x1; })convertFromMagnifierPoint:(struct CGPoint { double x0; double x1; })point;
@end

#endif /* UITextRangeView_h */
