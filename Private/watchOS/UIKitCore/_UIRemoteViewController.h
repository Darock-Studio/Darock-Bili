//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIRemoteViewController_h
#define _UIRemoteViewController_h
@import Foundation;

#include "UIViewController.h"
#include "UIAlertController.h"
#include "UIDimmingView.h"
#include "UIDimmingViewDelegate-Protocol.h"
#include "UIView.h"
#include "_UIAsyncInvocation.h"
#include "_UIEventDeferringOwnershipToken.h"
#include "_UIEventDeferringRuleOwning-Protocol.h"
#include "_UIExternalGestureCollection.h"
#include "_UIRemoteSheet-Protocol.h"
#include "_UIRemoteSheet_Internal-Protocol.h"
#include "_UIRemoteView.h"
#include "_UIRemoteViewControllerSceneContext.h"
#include "_UIRemoteViewController_ViewControllerOperatorInterface-Protocol.h"
#include "_UIRemoteViewService.h"
#include "_UISceneKeyboardProxyLayerForwardingPresentationViewService.h"
#include "_UISheetPresentationControllerConfiguration.h"
#include "_UISizeTrackingView.h"
#include "_UITextEffectsRemoteView.h"
#include "_UITextServiceSession.h"
#include "_UIViewServiceInterface.h"

@class BKSTouchDeliveryPolicyAssertion, FBSDisplayIdentity, NSArray, NSError, NSMutableSet, NSSet, NSString, NSValue;

@interface _UIRemoteViewController : UIViewController<UIDimmingViewDelegate, _UIRemoteViewController_ViewControllerOperatorInterface, _UIRemoteSheet_Internal, _UIEventDeferringRuleOwning, _UIRemoteSheet> {
  /* instance variables */
  _UIViewServiceInterface *_serviceInterface;
  _UIRemoteViewService *_remoteViewService;
  id _serviceViewControllerProxy;
  id _serviceViewControllerControlMessageProxy;
  NSArray *_serviceViewControllerSupportedInterfaceOrientations;
  unsigned int _serviceAccessibilityServerPort;
  BOOL _serviceHasScrollToTopView;
  int _applicationDeactivationReason;
  BOOL _systemAppIsLocked;
  BOOL _observesLockNotifications;
  id _viewControllerOperatorProxy;
  _UIAsyncInvocation *_viewControllerOperatorHalfDisconnectionInvocation;
  id _textEffectsOperatorProxy;
  _UIAsyncInvocation *_textEffectsOperatorHalfDisconnectionInvocation;
  _UISizeTrackingView *_sizeTrackingView;
  _UIRemoteView *_serviceViewControllerRemoteView;
  _UITextEffectsRemoteView *_fullScreenTextEffectsRemoteView;
  _UITextEffectsRemoteView *_textEffectsAboveStatusBarRemoteView;
  _UITextEffectsRemoteView *_remoteKeyboardRemoteView;
  UIView *_fullScreenTextEffectsSnapshotView;
  BOOL _snapshotTextEffectsAfterRotation;
  FBSDisplayIdentity *_lastNotifiedServiceScreenDisplayIdentity;
  _UIRemoteViewControllerSceneContext *_serviceSceneContext;
  _UIAsyncInvocation *_terminationInvocation;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _terminationErrorLock;
  NSError *_terminationError;
  _UITextServiceSession *_textServiceSession;
  UIDimmingView *_hostedDimmingView;
  UIView *_touchGrabbingView;
  long long _preferredStatusBarStyle;
  int _preferredStatusBarVisibility;
  long long _preferredStatusBarUpdateAnimation;
  long long _preferredStatusBarPlacement;
  BOOL _wantsKeyboardEnvironmentEventDeferring;
  BOOL _wasKeyboardEnvironmentEventDeferringBeforeResignKey;
  BOOL _wasKeyboardEnvironmentEventDeferringBeforeSceneMove;
  _UIEventDeferringOwnershipToken *_keyboardEnvironmentDeferringToken;
  NSArray *_allowedNotifications;
  NSArray *_sizeTrackingConstraints;
  BOOL _sizeTrackingViewShouldTranslateAutoResizeMaskIntoConstraints;
  int _sizeTrackingViewAutoResizeMask;
  struct CGSize { double width; double height; } _serviceMainScreenSize;
  UIView *_viewServiceTouchInterdictionView;
  UIAlertController *_proxiedEditAlertController;
  long long _proxiedEditAlertToken;
  long long _preferredAdaptivityStyle;
  NSArray *_multitaskingDragExclusionRects;
  BOOL _isUnderlappingStatusBar;
  long long _preferredUserInterfaceStyle;
  NSValue *_callerID;
  _UISceneKeyboardProxyLayerForwardingPresentationViewService *_keyboardProxyPresentationEnvironment;
  NSMutableSet *_mutableKeyboardSceneLayers;
  struct { unsigned int x :1 registeredForSettingsSceneNotification; unsigned int x :1 registeredForWillBecomeApplicationKeyNotification; unsigned int x :1 registeredForWindowMovingScenesNotifications; } _remoteViewControllerFlags;
  BOOL _isUpdatingSize;
  BOOL _isUpdatingSizeInHost;
  BKSTouchDeliveryPolicyAssertion *_touchDeliveryPolicyAssertion;
  _UIExternalGestureCollection *_coalescedGestureCollection;
}

@property (retain, nonatomic) BKSTouchDeliveryPolicyAssertion *_touchDeliveryPolicyAssertion;
@property (nonatomic) BOOL _isUpdatingSize;
@property (nonatomic) BOOL _isUpdatingSizeInHost;
@property (readonly, nonatomic) _UIRemoteViewService *_remoteViewService;
@property (readonly, nonatomic) _UIExternalGestureCollection *_coalescedGestureCollection;
@property (readonly, nonatomic) NSSet *_keyboardSceneLayers;
@property (readonly, nonatomic) NSString *serviceBundleIdentifier;
@property (readonly, nonatomic) int serviceProcessIdentifier;
@property (readonly, nonatomic) struct { unsigned int x0[8] } serviceAuditToken;
@property (nonatomic) BOOL _shouldUpdateRemoteTextEffectsWindow;
@property (nonatomic) BOOL serviceViewShouldShareTouchesWithHost;
@property (nonatomic) BOOL _viewClipsToBounds;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) _UISheetPresentationControllerConfiguration *_sheetConfiguration;

/* class methods */
+ (BOOL)shouldPropagateAppearanceCustomizations;
+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
+ (id)requestViewController:(id)controller fromServiceWithBundleIdentifier:(id)identifier connectionHandler:(id /* block */)handler;
+ (id)requestViewController:(id)controller traitCollection:(id)collection fromServiceWithBundleIdentifier:(id)identifier connectionHandler:(id /* block */)handler;
+ (id)requestViewControllerWithService:(id)service connectionHandler:(id /* block */)handler;
+ (id)requestViewControllerWithService:(id)service traitCollection:(id)collection connectionHandler:(id /* block */)handler;
+ (id)_requestViewController:(id)controller traitCollection:(id)collection fromServiceWithBundleIdentifier:(id)identifier service:(id)service connectionHandler:(id /* block */)handler;
+ (BOOL)__shouldHostRemoteTextEffectsWindow;
+ (void)initialize;
+ (BOOL)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+ (BOOL)_shouldForwardViewWillTransitionToSize;

/* instance methods */
- (void)viewServiceDidTerminateWithError:(id)error;
- (id)serviceViewControllerProxy;
- (id)serviceViewControllerProxyWithErrorHandler:(id /* block */)handler;
- (BOOL)__isKindOfUIRemoteViewController;
- (id)_initWithViewServiceBundleIdentifier:(id)identifier;
- (void)_awakeWithConnectionInfo:(id)info;
- (void)loadView;
- (id)_fenceForSynchronizedDrawing;
- (void)_synchronizeAnimationsInActionsIfNecessary:(id /* block */)necessary;
- (void)synchronizeAnimationsInActions:(id /* block */)actions;
- (void)setInheritsSecurity:(BOOL)security;
- (BOOL)inheritsSecurity;
- (void)setAllowedNotifications:(id)notifications;
- (id)allowedNotifications;
- (id)forbiddenNotifications;
- (id)_addAutoAllowedNotifications:(id)notifications;
- (void)__setMediaOverridePID:(int)pid;
- (BOOL)__shouldRemoteViewControllerFenceOperations;
- (BOOL)_shouldRemoteViewControllerFenceOriginChanges;
- (BOOL)__shouldRemoteViewControllerFenceGeometryChange:(const struct { int x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGSize { double x0; double x1; } x3; struct CGPoint { double x0; double x1; } x4; struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } x5; id x6; id x7; id x8; id x9; } *)change forAncestor:(id)ancestor;
- (void)_setShouldUpdateRemoteTextEffectsWindow:(BOOL)window;
- (long long)_preferredInterfaceOrientation;
- (long long)_preferredInterfaceOrientationForWindow:(id)window;
- (void)_statusBarOrientationDidChange:(id)change;
- (void)_statusBarHeightDidChange:(id)change;
- (void)_applicationWillEnterForeground:(id)foreground;
- (void)_sceneWillEnterForeground:(id)foreground;
- (void)_hostWillEnterForeground:(id)foreground;
- (void)_hostSceneWillEnterForeground:(id)foreground;
- (void)_applicationDidEnterBackground:(id)background;
- (void)_sceneDidEnterBackground:(id)background;
- (void)_hostDidEnterBackground:(id)background;
- (void)_hostSceneDidEnterBackground:(id)background;
- (void)_applicationDidFinishSuspendSnapshot:(id)snapshot;
- (id)textEffectsWindowForServiceScreen;
- (void)_restoreTextEffectsRemoteView;
- (void)_snapshotAndRemoveTextEffectsRemoteView;
- (void)_removeTextEffectsRemoteViews;
- (void)_applicationDidBecomeActive:(id)active;
- (void)_applicationWillDeactivate:(id)deactivate;
- (void)_viewServiceHostWillDeactivate:(id)deactivate;
- (void)_viewServiceHostDidBecomeActive:(id)active;
- (void)_applicationWillAddDeactivationReason:(id)reason;
- (void)_systemApplicationWillLock:(id)lock;
- (void)_systemApplicationDidUnlock:(id)unlock;
- (BOOL)observesLockNotifications;
- (void)setObservesLockNotifications:(BOOL)notifications;
- (void)_updateLockStatusHostingVisibility;
- (void)_uirvc_windowResignedKey:(id)key;
- (void)_uirvc_windowBecameKey:(id)key;
- (void)_uirvc_keyboardWindowSceneSettingsSceneWillChange:(id)change;
- (void)_uirvc_applicationKeyWindowWillChange:(id)change;
- (void)_uirvc_windowWillMoveToScene:(id)scene;
- (void)_uirvc_windowDidMoveToScene:(id)scene;
- (void)_updateTouchGrabbingView;
- (void)_setContentOverlayInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets andLeftMargin:(double)margin rightMargin:(double)margin;
- (id)_terminateWithError:(id)error;
- (id)disconnect;
- (void)_terminateUnconditionallyThen:(id /* block */)then;
- (void)_objc_initiateDealloc;
- (void)dealloc;
- (void)__viewServiceDidChangeHasScrollToTopView:(BOOL)view;
- (void)_scrollToTopFromTouchAtViewLocation:(struct CGPoint { double x0; double x1; })location resultHandler:(id /* block */)handler;
- (BOOL)_serviceHasScrollToTopView;
- (BOOL)canBecomeFirstResponder;
- (void)_firstResponderDidChange:(id)change;
- (void)viewWillAppear:(BOOL)appear;
- (void)_updateServiceSceneContext;
- (void)_screenDidConnect:(id)connect;
- (void)_screenDidUpdate:(id)update;
- (void)_screenDidDisconnect:(id)disconnect;
- (void)_screenIDChanged:(id)idchanged;
- (void)_referenceDisplayModeStatusDidChange:(id)change;
- (void)_systemReferenceAngleDidChange:(id)change;
- (void)_notifyServiceOfScreenUpdateConsideringDeferringOverridesIfNeeded:(id)needed;
- (void)__willChangeToIdiom:(long long)idiom onScreen:(id)screen;
- (long long)interfaceElementCategory;
- (id)_hostedWindowServiceDeferringTarget;
- (void)_beginObservingNotificationsForEventDeferringIfNeeded;
- (void)_setWantsKeyboardEnvironmentEventDeferring:(BOOL)deferring;
- (BOOL)_wantsKeyboardEnvironmentEventDeferringForFocusOnScreen:(id)screen;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)_configureSizeViewConstraintsForWindow:(id)window interfaceOrientation:(long long)orientation;
- (void)__setServiceMaxFrameSize:(struct CGSize { double x0; double x1; })size;
- (void)viewDidMoveToWindow:(id)window shouldAppearOrDisappear:(BOOL)disappear;
- (void)didMoveToParentViewController:(id)controller;
- (BOOL)shouldAutorotateToInterfaceOrientation:(long long)orientation;
- (unsigned long long)supportedInterfaceOrientations;
- (BOOL)_ignoreAppSupportedOrientations;
- (BOOL)_needsUnderflowPropertyUpdate;
- (void)_updateUnderflowProperties;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (void)_willAnimateRotationToInterfaceOrientation:(long long)orientation duration:(double)duration forwardToChildControllers:(BOOL)controllers skipSelf:(BOOL)self;
- (void)_willRotateToInterfaceOrientation:(long long)orientation duration:(double)duration forwardToChildControllers:(BOOL)controllers skipSelf:(BOOL)self;
- (void)_didRotateFromInterfaceOrientation:(long long)orientation forwardToChildControllers:(BOOL)controllers skipSelf:(BOOL)self;
- (void)_willBecomeContentViewControllerOfPopover:(id)popover;
- (void)_didResignContentViewControllerOfPopover:(id)popover;
- (BOOL)_requiresKeyboardWindowWhenFirstResponder;
- (long long)preferredStatusBarStyle;
- (int)_preferredStatusBarVisibility;
- (long long)_preferredStatusBarPlacement;
- (long long)preferredWhitePointAdaptivityStyle;
- (long long)preferredStatusBarUpdateAnimation;
- (void)__viewServiceDidUpdatePreferredStatusBarStyle:(long long)style preferredStatusBarVisibility:(int)visibility updateAnimation:(long long)animation currentAnimationSettings:(id)settings;
- (void)__viewServiceDidUpdatePreferredStatusBarPlacement:(long long)placement;
- (void)__viewServiceDidUpdatePreferredWhitePointAdaptationStyle:(long long)style animationSettings:(id)settings;
- (void)__viewServiceDidUpdateClientToHostGesture:(id)gesture;
- (long long)preferredUserInterfaceStyle;
- (void)__viewServiceDidUpdatePreferredUserInterfaceStyle:(long long)style;
- (BOOL)prefersPointerLocked;
- (void)__viewServiceDidUpdatePrefersPointerLocked:(BOOL)locked;
- (id)_multitaskingDragExclusionRects;
- (void)__viewServiceDidUpdateMultitaskingDragExclusionRects:(id)rects;
- (id)_traitCollectionForServiceFromTraitCollection:(id)collection;
- (void)_traitCollectionDidChange:(id)change;
- (void)willTransitionToTraitCollection:(id)collection withTransitionCoordinator:(id)coordinator;
- (void)__viewServiceAddSceneForwardingLayersForOwners:(id)owners;
- (void)__viewServiceRemoveSceneForwardingLayersForOwners:(id)owners;
- (void)__setSupportedInterfaceOrientations:(id)orientations;
- (void)__setViewServiceIsDisplayingPopover:(BOOL)popover;
- (void)dimmingViewWasTapped:(id)tapped;
- (void)__viewServiceWantsKeyboardEventsWithoutFirstResponderAndCompletionHandler:(id /* block */)handler;
- (void)__viewServiceDidPromoteFirstResponderWithCompletionHandler:(id /* block */)handler;
- (void)_serviceWantsKeyboardEventsWithPromotedFirstResponder:(BOOL)responder completionHandler:(id /* block */)handler;
- (void)__viewServiceDidChangeKeyWindow:(BOOL)window;
- (void)__viewServicePopoverDidChangeContentSize:(struct CGSize { double x0; double x1; })size animated:(BOOL)animated fence:(id)fence withReplyHandler:(id /* block */)handler;
- (void)__viewServicePopoverDidSetUseToolbarShine:(BOOL)shine;
- (void)__viewServicePreferredContentSizeDidChange:(struct CGSize { double x0; double x1; })change fence:(id)fence;
- (void)__viewServiceInstrinsicContentSizeDidChange:(struct CGSize { double x0; double x1; })change fence:(id)fence;
- (struct CGSize { double x0; double x1; })intrinsicContentSizeForServiceSize:(struct CGSize { double x0; double x1; })size;
- (void)viewDidInvalidateIntrinsicContentSize;
- (id)_sheetPresentationController;
- (void)_setSheetConfiguration:(id)configuration;
- (void)_sheetInteractionDraggingDidBeginWithRubberBandCoefficient:(double)coefficient;
- (void)_sheetInteractionDraggingDidChangeWithTranslation:(struct CGPoint { double x0; double x1; })translation velocity:(struct CGPoint { double x0; double x1; })velocity animateChange:(BOOL)change;
- (void)_sheetInteractionDraggingDidEnd;
- (void)__viewServiceSheetPresentationClientConfigurationDidChange:(id)change attributes:(id)attributes;
- (void)__viewServiceSheetGrabberDidTriggerPrimaryAction;
- (void)__viewServiceSheetInteractionDraggingDidBeginWithRubberBandCoefficient:(double)coefficient dismissible:(BOOL)dismissible interruptedOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)__viewServiceSheetInteractionDraggingDidChangeWithTranslation:(struct CGPoint { double x0; double x1; })translation velocity:(struct CGPoint { double x0; double x1; })velocity animateChange:(BOOL)change dismissible:(BOOL)dismissible;
- (void)__viewServiceSheetInteractionDraggingDidEnd;
- (void)__viewServiceDidUpdateActiveGestureCollection:(id)collection;
- (id)_appearanceSource;
- (BOOL)shouldPropagateAppearanceCustomizations;
- (void)_appearanceInvocationsDidChange:(id)change;
- (void)_updateTintColor;
- (void)_initializeAccessibilityPortInformation;
- (void)__showServiceForType:(long long)type withContext:(id)context replyHandler:(id /* block */)handler;
- (void)__showServiceForText:(id)text selectedTextRangeValue:(id)value type:(long long)type fromRectValue:(id)value replyHandler:(id /* block */)handler;
- (void)__showServiceForText:(id)text type:(long long)type fromRectValue:(id)value replyHandler:(id /* block */)handler;
- (void)__dismissTextServiceSessionAnimated:(BOOL)animated;
- (void)_cancelProxiedEditAlertViewAnimated:(BOOL)animated;
- (void)_endNoPresentingViewControllerAlertController:(id)controller;
- (void)__showEditAlertViewWithToken:(long long)token canUndo:(BOOL)undo canRedo:(BOOL)redo;
- (void)saveStateForSession:(id)session anchor:(id)anchor;
- (void)restoreStateForSession:(id)session anchor:(id)anchor;
- (BOOL)__interdictServiceViewTouches;
- (void)__setInterdictServiceViewTouches:(BOOL)touches;
- (void)updateTouchInterdictionViewLayout;
- (void)_noteWindowState:(BOOL)state;
- (void)_prepareTouchDeliveryPolicy;
- (id)_cancelTouchesForCurrentEventInHostedContent;
- (void)_setViewClipsToBounds:(BOOL)bounds;
- (void)__trampolineButtonPressData:(id)data canceled:(BOOL)canceled;
- (void)__handleFocusMovementAction:(id)action;
- (id)_timelineID;
- (void)_timelinesForDateInterval:(id)interval completion:(id /* block */)completion;
- (void)_updateWithFrameSpecifier:(id)specifier completion:(id /* block */)completion;
- (void)_setTouchDeliveryPolicyAssertion:(id)assertion;
- (void)_setIsUpdatingSize:(BOOL)size;
- (void)_setIsUpdatingSizeInHost:(BOOL)host;
@end

#endif /* _UIRemoteViewController_h */
