//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIWebPDFViewHandler_h
#define UIWebPDFViewHandler_h
@import Foundation;

#include "UIColor.h"
#include "UIDocumentPasswordView.h"
#include "UIDocumentPasswordViewDelegate-Protocol.h"
#include "UIView.h"
#include "UIWebPDFLabelView.h"
#include "UIWebPDFView.h"
#include "UIWebPDFViewDelegate-Protocol.h"
#include "UIWebPDFViewPrivateDelegate-Protocol.h"
#include "WebPDFNSNumberFormatter.h"
#include "_UIHighlightView.h"
#include "_UIRotatingAlertController.h"
#include "_UIRotatingAlertControllerDelegate-Protocol.h"
#include "_UIWebDoubleTapDelegate-Protocol.h"
#include "_UIWebRotationDelegate-Protocol.h"

@class NSArray, NSDictionary, NSMapTable, NSString;
@protocol UIWebPDFViewHandlerDelegate;

@interface UIWebPDFViewHandler : NSObject<UIWebPDFViewPrivateDelegate, UIDocumentPasswordViewDelegate, _UIRotatingAlertControllerDelegate, UIWebPDFViewDelegate, _UIWebDoubleTapDelegate, _UIWebRotationDelegate> {
  /* instance variables */
  double _initialZoomScale;
  _UIHighlightView *_linkHighlightView;
  UIWebPDFLabelView *_pageLabelView;
  BOOL _showsShadowsForHTMLContent;
  BOOL _cachedScrollViewShadowsState;
  UIDocumentPasswordView *_passwordEntryView;
  NSMapTable *_searchControllers;
  WebPDFNSNumberFormatter *_labelViewFormatter;
  struct _PDFHistoryItem { BOOL restorePending; BOOL isInitialScale; double zoomScale; struct CGPoint { double x; double y; } contentOffset; } _pendingHistoryItemRestore;
  _UIRotatingAlertController *_linkActionSheet;
  NSDictionary *_linkActionInfo;
  NSArray *_linkActions;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _rectOfInterest;
  BOOL _rectOfInterestConsidersHeight;
}

@property (readonly, nonatomic) UIWebPDFView *pdfView;
@property (readonly, nonatomic) UIView *frontView;
@property (nonatomic) BOOL scalesPageToFit;
@property (nonatomic) BOOL showPageLabels;
@property (nonatomic) NSObject<UIWebPDFViewHandlerDelegate> *pdfHandlerDelegate;
@property (retain, nonatomic) UIColor *backgroundColorForUnRenderedContent;
@property (nonatomic) BOOL hideActivityIndicatorForUnRenderedContent;
@property (nonatomic) BOOL hidePageViewsUntilReadyToRender;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)_setSearchControllerDocumentToSearch:(id)search;
- (id)searchControllerForHighlighter:(id)highlighter;
- (void)clearSearchControllerForHighlighter:(id)highlighter;
- (id)findOnPageHighlighter;
- (id)init;
- (void)dealloc;
- (void)didReceiveMemoryWarning:(id)warning;
- (void)clearAllViews;
- (id)_scroller:(id)_scroller;
- (id)_getPDFDocumentViewForWebView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectForPdfView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForDocumentBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectForPasswordView:(id)view;
- (void)_replacePDFViewIfPresentWithWebDocView:(id)view;
- (void)_removePDFViewIfWebDocViewIsNotPDF:(id)pdf;
- (void)_removePDFViewIfWebDocViewIsNotSamePDF:(id)pdf;
- (void)_createPDFViewIfNeeded:(id)needed;
- (void)_ensurePDFViewInHierarchyForWebDocView:(id)view;
- (void)_updateViewHierarchyForDocumentView:(id)view ignoreIfSame:(BOOL)same;
- (void)updateViewSettings;
- (void)_adjustZoomScalesForScrollViewInternal:(id)internal;
- (void)adjustZoomScalesForScrollView;
- (void)clearLinkHighlight;
- (id)createLinkHighlight;
- (void)highlightRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)scrollToPageNumber:(long long)number animate:(BOOL)animate;
- (id)_absoluteUrlRelativeToDocumentURL:(id)url;
- (void)_completeLinkClickWithURL:(id)url;
- (void)_completeLinkClickWithURLString:(id)urlstring;
- (void)_notifyDelegateWillClickLink:(id)link;
- (void)_notifyDelegateDidClickLink:(id)link;
- (void)handleLinkClick:(id)click inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)clearActionSheet;
- (id)_actionForType:(int)type;
- (id)_actionForType:(int)type withActionInfo:(id)info;
- (id)_actionsForInteractionInfo:(id)info;
- (void)_showLinkSheet:(id)sheet;
- (void)handleLongPressOnLink:(id)link atPoint:(struct CGPoint { double x0; double x1; })point inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)performAction:(id)action fromAlertController:(id)controller;
- (id)hostViewForSheet:(id)sheet;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })initialPresentationRectInHostViewForSheet:(id)sheet;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })presentationRectInHostViewForSheet:(id)sheet;
- (void)clearPageLabel;
- (id)createPageLabel;
- (void)_showPasswordErrorAlert;
- (void)userDidEnterPassword:(id)password forPasswordView:(id)view;
- (void)_adjustContentOffsetForKeyboardIfNeeded;
- (void)_keyboardDidShow:(id)show;
- (void)didBeginEditingPassword:(id)password inView:(id)view;
- (void)didEndEditingPassword:(id)password inView:(id)view;
- (void)_showPasswordEntryViewForFile:(id)file;
- (void)_postdidDetermineDocumentBounds;
- (void)didDetermineDocumentBounds:(id)bounds;
- (void)pdfView:(id)view zoomToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect forPoint:(struct CGPoint { double x0; double x1; })point considerHeight:(BOOL)height;
- (void)resetZoom:(id)zoom;
- (id)passwordForPDFView:(id)pdfview;
- (void)didScroll:(id)scroll;
- (void)ensureCorrectPagesAreInstalled:(BOOL)installed;
- (void)removeViewFromSuperview;
- (void)updateViewHierarchyForDocumentViewNewLoad:(id)load;
- (void)updateViewHierarchyForDocumentViewTabSwitch:(id)switch restoringZoomScale:(double)scale andScrollPt:(struct CGPoint { double x0; double x1; })pt;
- (void)updateViewHierarchyForDocumentViewTabSwitch:(id)switch;
- (void)updateViewHierarchyForDocumentViewLoadComplete:(id)complete;
- (void)updateViewHierarchyForFirstNonEmptyLayoutInFrame:(id)frame;
- (id)_getLabelViewFormatter;
- (void)updatePageNumberLabelWithUserScrolling:(BOOL)scrolling animated:(BOOL)animated;
- (void)handleScrollToAnchor:(id)anchor;
- (void)_resultRects:(id)rects andResultViews:(id)views forSearchResult:(id)result inViewCoordinates:(id)coordinates;
- (void)revealSearchResult:(id)result andZoomIn:(BOOL)in;
- (struct { double x0; double x1; double x2; })scalesForContainerSize:(struct CGSize { double x0; double x1; })size;
- (void)saveStateToHistoryItem:(id)item forWebView:(id)view;
- (void)restoreStateFromPendingHistoryItem;
- (void)restoreStateFromHistoryItem:(id)item forWebView:(id)view;
- (id)enclosingScrollView;
- (id)contentView;
- (double)zoomedDocumentScale;
- (double)currentDocumentScale;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleContentRect;
- (double)minimumScaleForSize:(struct CGSize { double x0; double x1; })size;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectOfInterestForPoint:(struct CGPoint { double x0; double x1; })point;
- (struct { double x0; double x1; double x2; })doubleTapScalesForSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)considerHeightForDoubleTap;
- (void)updateBoundariesOfScrollView:(id)view withScales:(struct { double x0; double x1; double x2; })scales;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectOfInterestForRotation;
- (double)minimumVerticalContentOffset;
- (double)heightToKeepVisible;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })activeRectForRectOfInterest:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })interest;
- (BOOL)considerHeightOfRectOfInterestForRotation;
- (double)_pinValueForVerticalEdge:(unsigned long long)edge inScrollView:(id)view;
- (unsigned long long)_verticalEdgeForContentOffsetInScrollView:(id)view;
- (void)rotateEnclosingScrollViewToFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
@end

#endif /* UIWebPDFViewHandler_h */
