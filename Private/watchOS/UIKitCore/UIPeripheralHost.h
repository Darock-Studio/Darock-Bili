//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIPeripheralHost_h
#define UIPeripheralHost_h
@import Foundation;

#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UIInputViewSet.h"
#include "UIKeyboardRotationState.h"
#include "UIPeripheralHostState.h"
#include "UIResponder.h"
#include "UIScrollViewIntersectionDelegate-Protocol.h"
#include "UITextInputMode.h"
#include "UIView.h"

@class CADisplayLink, NSMutableArray, NSMutableDictionary, NSString, UIPeripheralHostView;

@interface UIPeripheralHost : NSObject<UIScrollViewIntersectionDelegate, UIGestureRecognizerDelegate> {
  /* instance variables */
  UIPeripheralHostView *_hostView;
  BOOL _automaticAppearanceEnabledInternal;
  int _ignoredReloads;
  int _nextAutomaticOrderInDirection;
  BOOL _isTranslating;
  BOOL _isUndocked;
  BOOL _splitLockState;
  CADisplayLink *_displayLink;
  struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _targetTransform;
  struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _initialTransform;
  struct CGPoint { double x; double y; } _velocity;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastKnownIVFrame;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastKnownIAVFrame;
  long long _disableAnimationsCount;
  NSMutableArray *_targetStateStack;
  UIInputViewSet *_inputViewSet;
  BOOL _interfaceAutorotationDisabled;
  NSMutableDictionary *_deferredTransitionTasks;
  UIInputViewSet *_transientInputViewSet;
}

@property (readonly, nonatomic) UIView *view;
@property (nonatomic) BOOL automaticAppearanceInternalEnabled;
@property (nonatomic) double ambiguousControlCenterActivationMargin;
@property (readonly, @dynamic, nonatomic) UIResponder *responder;
@property (@dynamic, nonatomic) BOOL animationFencingEnabled;
@property (readonly, nonatomic) UIInputViewSet *inputViews;
@property (readonly, nonatomic) UIInputViewSet *loadAwareInputViews;
@property (readonly, nonatomic) BOOL keyClicksEnabled;
@property (retain, nonatomic) UIKeyboardRotationState *rotationState;
@property (retain, nonatomic) UIPeripheralHostState *targetState;
@property (retain, nonatomic) UIResponder *responder;
@property (nonatomic) BOOL animationFencingEnabled;
@property (readonly, nonatomic) BOOL animationsEnabled;
@property (retain, nonatomic) UIInputViewSet *_inputViews;
@property (retain, nonatomic) UIInputViewSet *_transientInputViews;
@property (nonatomic) int currentState;
@property (readonly, nonatomic) BOOL automaticAppearanceReallyEnabled;
@property (nonatomic) BOOL automaticAppearanceEnabled;
@property (retain, nonatomic) UITextInputMode *documentInputMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (Class)hostViewClass;
+ (BOOL)inputViewSetContainsView:(id)view;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleInputViewFrame;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visiblePeripheralFrame;
+ (id)allVisiblePeripheralFrames;
+ (BOOL)pointIsWithinKeyboardContent:(struct CGPoint { double x0; double x1; })content;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })floatingChromeBuffer;
+ (void)adjustFloatingPersistentOffsetForKeyboardSize:(struct CGSize { double x0; double x1; })size;
+ (struct CGPoint { double x0; double x1; })adjustedFloatingOffsetForKeyboardSize:(struct CGSize { double x0; double x1; })size;
+ (struct CGPoint { double x0; double x1; })defaultUndockedOffset;
+ (void)setFloating:(BOOL)floating onCompletion:(id /* block */)completion;
+ (double)gridViewRubberBandValueForValue:(double)value target:(double)target timeInterval:(double)interval velocity:(double *)velocity;
+ (id)passthroughViews;
+ (Class)floatingAssistantBarPlacementClassSupportingCompactStyle:(BOOL)style;
+ (id)endPlacementForInputViewSet:(id)set windowScene:(id)scene;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })screenBoundsInAppOrientation;
+ (id)sharedInstance;
+ (id)activeInstance;
+ (void)_releaseSharedInstance;
+ (void)setKeyboardOnScreenNotifyKey:(BOOL)key;

/* instance methods */
- (id)_screenForFirstResponder:(id)responder;
- (id)containerWindow;
- (id)containerRootController;
- (id)existingContainerRootController;
- (id)transformedContainerView;
- (void)queueDelayedTask:(id /* block */)task;
- (void)queueDelayedTask:(id /* block */)task forKey:(id)key;
- (void)queueDelayedTask:(id /* block */)task forKey:(id)key delay:(double)delay;
- (void)flushDelayedTasks;
- (void)flushDelayedTasksForKey:(id)key;
- (BOOL)hasDelayedTasksForKey:(id)key;
- (id)containerTextEffectsWindow;
- (id)containerTextEffectsWindowAboveStatusBar;
- (void)_updateContainerWindowLevel;
- (void)setTextEffectsWindowLevelForInputView:(id)view responder:(id)responder;
- (void)forceReloadInputViews;
- (void)setDeactivatedKeyboard:(BOOL)keyboard forScene:(id)scene;
- (void)setDeactivatedKeyboard:(BOOL)keyboard forScene:(id)scene forSuppressionAssertion:(BOOL)assertion;
- (void)setDeactivatedKeyboard:(BOOL)keyboard forScene:(id)scene forSuppressionAssertion:(BOOL)assertion updatePlacement:(BOOL)placement;
- (int)_isKeyboardDeactivated;
- (void)performWithoutDeactivation:(id /* block */)deactivation;
- (id)lastUsedInputModeForCurrentContext;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visiblePeripheralFrame:(BOOL)frame;
- (double)minimumOffsetForBuffer:(double)buffer;
- (struct CGPoint { double x0; double x1; })adjustedPersistentOffset;
- (void)setUndockedWithOffset:(struct CGPoint { double x0; double x1; })offset animated:(BOOL)animated;
- (void)moveToPersistentOffset;
- (unsigned long long)_clipCornersOfView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_inputViewRectToAvoid;
- (BOOL)_isCoordinatingWithSystemGestures;
- (struct CGPoint { double x0; double x1; })offHostPointForPoint:(struct CGPoint { double x0; double x1; })point;
- (double)getVerticalOverlapForView:(id)view usingKeyboardInfo:(id)info;
- (void)pushAnimationStyle:(id)style;
- (void)popAnimationStyle;
- (BOOL)shouldUseHideNotificationForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x3; double x4; })geometry;
- (void)postWillShowNotificationForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x3; double x4; })geometry duration:(double)duration;
- (void)postDidShowNotificationForGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x3; double x4; })geometry;
- (void)performMultipleOperations:(id /* block */)operations withAnimationStyle:(id)style;
- (BOOL)minimize;
- (BOOL)maximize;
- (BOOL)maximizeWithAnimation:(BOOL)animation;
- (void)enableKeyboardTyping;
- (id)_currentInputView;
- (BOOL)_isSuppressedByManualKeyboard;
- (void)_preserveInputViewsWithId:(id)id animated:(BOOL)animated reset:(BOOL)reset;
- (void)_preserveInputViewsWithId:(id)id;
- (void)_preserveInputViewsWithId:(id)id animated:(BOOL)animated;
- (void)_restoreInputAccessoryViewOverrideWithId:(id)id;
- (BOOL)_restoreInputViewsWithId:(id)id animated:(BOOL)animated;
- (void)_clearPreservedInputViewsWithId:(id)id clearKeyboard:(BOOL)keyboard;
- (void)_clearPreservedInputViewsWithRestorableResponder:(id)responder;
- (void)removePreservedInputViewSetForInputView:(id)view;
- (void)_beginDisablingAnimations;
- (void)_endDisablingAnimations;
- (BOOL)isRotating;
- (BOOL)isTranslating;
- (void)extendKeyboardBackdropHeight:(double)height withDuration:(double)duration;
- (void)updateInputAccessoryViewVisibility:(BOOL)visibility withDuration:(double)duration;
- (id)_inheritedRenderConfig;
- (BOOL)_isTransitioning;
- (BOOL)_shouldDelayRotationForWindow:(id)window;
- (void)scrollView:(id)view didPanWithGesture:(id)gesture;
- (void)scrollView:(id)view didFinishPanGesture:(id)gesture;
- (BOOL)hasCustomInputView;
- (struct CGSize { double x0; double x1; })totalPeripheralSizeForOrientation:(long long)orientation;
- (void)logGeometryDescriptionFromUserInfo:(id)info;
- (BOOL)userInfoContainsActualGeometryChange:(id)change;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })screenRectFromBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds atCenter:(struct CGPoint { double x0; double x1; })center applyingSourceHeightDelta:(double)delta;
- (id)userInfoFromGeometry:(struct UIPeripheralAnimationGeometry { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x2; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x3; double x4; })geometry duration:(double)duration forWill:(BOOL)will forShow:(BOOL)show;
- (id)viewForTransitionScreenSnapshot;
- (id)transitioningView;
- (id)contentView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })transitioningFrame;
- (void)updateToPlacement:(id)placement withNormalAnimationsAndNotifications:(BOOL)notifications;
- (void)setInputViewsHidden:(BOOL)hidden;
- (id)init;
- (void)dealloc;
- (BOOL)hasDictationKeyboard;
- (void)peripheralHostWillResume:(id)resume;
- (void)textEffectsWindowDidRotate:(id)rotate;
- (struct CGSize { double x0; double x1; })sizeOfInputViewForInputViewSet:(id)set withInterfaceOrientation:(long long)orientation;
- (id)_renderConfigForCurrentResponder;
- (id)_renderConfigForResponder:(id)responder;
- (void)setKeyboardOnScreenNotifyKey:(BOOL)key;
- (void)setKeyboardFencingEnabled:(BOOL)enabled;
- (BOOL)isOnScreen;
- (BOOL)isOffScreen;
- (void)manualKeyboardWillBeOrderedIn:(id)in;
- (void)manualKeyboardWasOrderedIn:(id)in;
- (void)manualKeyboardWillBeOrderedOut:(id)out;
- (void)manualKeyboardWasOrderedOut:(id)out;
- (void)postKeyboardFrameChangeNotification:(id)notification withInfo:(id)info;
- (BOOL)isUndocked;
- (void)disableInterfaceAutorotation:(BOOL)autorotation;
- (void)prepareForRotationToOrientation:(long long)orientation;
- (void)rotateToOrientation:(long long)orientation;
- (void)finishRotation;
- (void)prepareForRotationOfKeyboard:(id)keyboard toOrientation:(long long)orientation;
- (void)rotateKeyboard:(id)keyboard toOrientation:(long long)orientation;
- (void)finishRotationOfKeyboard:(id)keyboard;
- (id)_sceneForFirstResponder:(id)responder;
- (void)forceOrderInAutomatic;
- (void)forceOrderOutAutomatic;
- (void)forceOrderInAutomaticAnimated:(BOOL)animated;
- (void)forceOrderOutAutomaticAnimated:(BOOL)animated;
- (void)forceOrderInAutomaticFromDirection:(int)direction withDuration:(double)duration;
- (void)forceOrderOutAutomaticToDirection:(int)direction withDuration:(double)duration;
- (void)orderInAutomatic;
- (void)orderInAutomaticSkippingAnimation;
- (void)orderInAutomaticFromDirection:(int)direction withDuration:(double)duration;
- (void)orderOutAutomatic;
- (void)orderOutAutomaticSkippingAnimation;
- (void)orderOutAutomaticToDirection:(int)direction withDuration:(double)duration;
@end

#endif /* UIPeripheralHost_h */
