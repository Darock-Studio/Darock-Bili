//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UITableCellAccessoryLayout_h
#define UITableCellAccessoryLayout_h
@import Foundation;

#include "UICellAccessoryLayout-Protocol.h"
#include "UICellAccessoryManager.h"

@class NSDictionary, NSMutableDictionary, NSString;

@interface UITableCellAccessoryLayout : NSObject<UICellAccessoryLayout>

@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } totalFrame;
@property (retain, nonatomic) NSDictionary *initialFrames;
@property (retain, nonatomic) NSDictionary *finalFrames;
@property (retain, nonatomic) NSMutableDictionary *initialAlphas;
@property (retain, nonatomic) NSMutableDictionary *finalAlphas;
@property (readonly, nonatomic) double _standardLayoutWidth;
@property (readonly, nonatomic) double _disclosureLayoutWidth;
@property (copy, nonatomic) id /* block */ spacingBlock;
@property (weak, nonatomic) UICellAccessoryManager *manager;
@property (nonatomic) double safeAreaInset;
@property (nonatomic) unsigned long long edge;
@property (copy, nonatomic) id /* block */ standardLayoutWidthProvider;
@property (copy, nonatomic) id /* block */ disclosureLayoutWidthProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (double)_layoutWidthForAccessory:(id)accessory withItemWidth:(double)width;
- (double)_totalWidthForAccessories:(id)accessories withContainerSize:(struct CGSize { double x0; double x1; })size;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForAccessoryAtIndex:(unsigned long long)index inAccessories:(id)accessories containerSize:(struct CGSize { double x0; double x1; })size withXOrigin:(double *)xorigin;
- (id)_framesForAccessories:(id)accessories withContainerSize:(struct CGSize { double x0; double x1; })size outTotalFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)frame;
- (void)prepareLayoutForAccessories:(id)accessories previousAccessories:(id)accessories configurationIdentifier:(id)identifier animated:(BOOL)animated;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })initialFrameForAccessory:(id)accessory;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })finalFrameForAccessory:(id)accessory;
- (double)initialAlphaForAccessory:(id)accessory;
- (double)finalAlphaForAccessory:(id)accessory;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })endLayout;
@end

#endif /* UITableCellAccessoryLayout_h */
