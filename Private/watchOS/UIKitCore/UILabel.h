//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UILabel_h
#define UILabel_h
@import Foundation;

#include "UIView.h"
#include "NSCoding-Protocol.h"
#include "UIColor.h"
#include "UIContentSizeCategoryAdjusting-Protocol.h"
#include "UILetterformAwareAdjusting-Protocol.h"
#include "_UILabelConfiguration.h"
#include "_UILabelContent.h"
#include "_UILabelLegacyScaledMetrics.h"
#include "_UILabelVisualStyle.h"
#include "_UILabelVisualStyleSubject-Protocol.h"
#include "_UIMultilineTextContentSizing-Protocol.h"
#include "_UITextSizeCache.h"
#include "_UIViewBaselineSpacing-Protocol.h"
#include "_UIViewLanguageAwareAdjusting-Protocol.h"

@class CUICatalog, CUIStyleEffectConfiguration, NSAttributedString, NSDictionary, NSMutableDictionary, NSString, NSTextEncapsulation, UIFont;

@interface UILabel : UIView<_UIViewBaselineSpacing, _UIMultilineTextContentSizing, _UILabelVisualStyleSubject, _UIViewLanguageAwareAdjusting, NSCoding, UIContentSizeCategoryAdjusting, UILetterformAwareAdjusting> {
  /* instance variables */
  struct CGSize { double width; double height; } _size;
  UIColor *_backgroundColor;
  UIColor *_highlightedColor;
  struct { double firstBaseline; double lastBaseline; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } referenceBounds; long long measuredNumberOfLines; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } bounds; } _intrinsicSizeBaselineInfo;
  double _previousBaselineOffsetFromBottom;
  double _previousFirstLineBaseline;
  _UILabelContent *_content;
  NSAttributedString *_synthesizedAttributedText;
  NSDictionary *_cachedSynthesizedTextAttributes;
  NSMutableDictionary *_fallbackColorsForUserInterfaceStyle;
  id _layout;
  _UILabelLegacyScaledMetrics *_scaledMetrics;
  struct CGSize { double width; double height; } _scaledMetricsTargetSize;
  _UITextSizeCache *_intrinsicContentSizeCache;
  CUICatalog *_cuiCatalog;
  NSTextEncapsulation *_textEncapsulation;
  CUIStyleEffectConfiguration *_cuiStyleEffectConfiguration;
  NSMutableDictionary *_marqueeAnimations;
  NSMutableDictionary *_marqueeMaskAnimations;
  _UILabelConfiguration *_configuration;
  unsigned long long _accessibilityButtonShapesChangedToken;
  UIColor *_lastSetColor;
  struct { unsigned int x :1 highlighted; unsigned int x :1 autosizeTextToFit; unsigned int x :1 supportMultiLineShrinkToFit; unsigned int x :1 autotrackTextToFit; unsigned int x :2 baselineAdjustment; unsigned int x :1 enabled; unsigned int x :1 explicitAlignment; unsigned int x :1 enablesMarqueeWhenAncestorFocused; unsigned int x :1 marqueeEnabled; unsigned int x :1 marqueeRunable; unsigned int x :1 marqueeRequired; unsigned int x :1 marqueeUpdatable; unsigned int x :1 usesExplicitPreferredMaxLayoutWidth; unsigned int x :1 drawsDebugBaselines; unsigned int x :1 drawsDebugGlyphPathBoundsClipping; unsigned int x :1 explicitBaselineOffset; unsigned int x :1 usesSimpleTextEffects; unsigned int x :1 wantsUnderlineForAccessibilityButtonShapesEnabled; unsigned int x :1 disableUpdateTextColorOnTraitCollectionChange; unsigned int x :1 textAlignmentFollowsWritingDirection; unsigned int x :1 textAlignmentMirrored; unsigned int x :1 shortcutIntrinsicContentSize; unsigned int x :1 multilineLabelRequiresCarefulMeasurement; unsigned int x :1 noNeedsDisplayCheckForBaselineCalculationNeeded; unsigned int x :1 overallWritingDirectionFollowsLayoutDirection; unsigned int x :1 hyphenationFactorIgnoredIfURLsDetected; unsigned int x :1 extendedAccessibilityAdjustments; unsigned int x :1 canUseUILabelLayer; unsigned int x :1 implementsDefaultAttributes; unsigned int x :1 textColorFollowsTintColor; unsigned int x :1 materialTextColorFollowsTintColor; unsigned int x :1 showsExpansionTextWhenTruncated; unsigned int x :1 adjustsFontForContentSizeCategory; unsigned int x :1 disableConfigurationUpdate; unsigned int x :1 temporarilyDisableHighlight; unsigned int x :1 wantsContentAwareTypesettingLanguage; unsigned int x :1 isExtremeSizingEnabled; unsigned int x :1 sizingRule; } _textLabelFlags;
  double _multilineContextWidth;
  UIFont *_fontForShortcutBaselineCalculation;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) double _capOffsetFromBoundsTop;
@property (readonly, nonatomic) double _firstLineBaselineOffsetFromBoundsTop;
@property (nonatomic) double _firstLineCapFrameOriginY;
@property (nonatomic) double _firstLineBaselineFrameOriginY;
@property (nonatomic) double _lastLineBaselineFrameOriginY;
@property (nonatomic) BOOL _drawsDebugGlyphPathBoundsClipping;
@property (readonly, nonatomic) BOOL _glyphPathBoundsClippingDetected;
@property (readonly, nonatomic) _UIGlyphPathBoundsIntersectionViewData *_glyphPathBoundsIntersectionData;
@property (nonatomic) BOOL _drawsDebugBaselines;
@property (nonatomic) BOOL _wantsUnderlineForAccessibilityButtonShapesEnabled;
@property (@dynamic, nonatomic) BOOL _wantsUnderlineForAccessibilityButtonShapesEnabled;
@property (readonly, nonatomic) double _lastLineBaseline;
@property (nonatomic) long long lineSpacing;
@property (retain, nonatomic) _UILabelContent *_content;
@property (readonly, retain, nonatomic) NSAttributedString *_synthesizedAttributedText;
@property (retain, nonatomic) _UILabelVisualStyle *_visualStyle;
@property (retain, nonatomic) UIFont *_fontForShortcutBaselineCalculation;
@property (readonly, nonatomic) long long _measuredNumberOfLines;
@property (nonatomic) long long _preferredVibrancy;
@property (retain, nonatomic) _UILabelConfiguration *_configuration;
@property (copy, nonatomic) NSString *text;
@property (retain, nonatomic) UIFont *font;
@property (retain, nonatomic) UIColor *textColor;
@property (nonatomic) long long preferredVibrancy;
@property (retain, nonatomic) UIColor *shadowColor;
@property (nonatomic) struct CGSize { double x0; double x1; } shadowOffset;
@property (nonatomic) long long textAlignment;
@property (nonatomic) long long lineBreakMode;
@property (copy, nonatomic) NSAttributedString *attributedText;
@property (retain, nonatomic) UIColor *highlightedTextColor;
@property (nonatomic) BOOL highlighted;
@property (@dynamic, nonatomic) BOOL userInteractionEnabled;
@property (nonatomic) BOOL enabled;
@property (nonatomic) long long numberOfLines;
@property (nonatomic) BOOL adjustsFontSizeToFitWidth;
@property (nonatomic) long long baselineAdjustment;
@property (nonatomic) double minimumScaleFactor;
@property (nonatomic) BOOL allowsDefaultTighteningForTruncation;
@property (nonatomic) unsigned long long lineBreakStrategy;
@property (nonatomic) double preferredMaxLayoutWidth;
@property (nonatomic) BOOL enablesMarqueeWhenAncestorFocused;
@property (nonatomic) BOOL showsExpansionTextWhenTruncated;
@property (nonatomic) double minimumFontSize;
@property (nonatomic) BOOL adjustsLetterSpacingToFitWidth;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL _extremeSizingEnabled;
@property (nonatomic) BOOL adjustsFontForContentSizeCategory;
@property (nonatomic) long long sizingRule;

/* class methods */
+ (Class)layerClass;
+ (id)defaultFont;
+ (id)_defaultColor;
+ (id)_defaultAttributes;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_insetRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect forAttributedString:(id)string withDefaultFont:(id)font inView:(id)view;

/* instance methods */
- (void)setAutotrackTextToFit:(BOOL)fit;
- (BOOL)autotrackTextToFit;
- (void)_setColor:(id)color;
- (void)setColor:(id)color;
- (id)color;
- (void)setCentersHorizontally:(BOOL)horizontally;
- (BOOL)centersHorizontally;
- (struct CGSize { double x0; double x1; })textSizeForWidth:(double)width;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)drawContentsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)setRawSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })rawSize;
- (void)_resetUsesExplicitPreferredMaxLayoutWidth;
- (void)_accessibilityButtonShapesParametersDidChange;
- (void)_accessibilityButtonShapesChangedNotification:(id)notification;
- (void)_didChangeFromIdiom:(long long)idiom onScreen:(id)screen traverseHierarchy:(BOOL)hierarchy;
- (void)_setWantsContentAwareTypesettingLanguage:(BOOL)language;
- (BOOL)_wantsContentAwareTypesettingLanguage;
- (void)_setWantsUnderlineForAccessibilityButtonShapesEnabled:(BOOL)enabled;
- (void)_setFirstLineCapFrameOriginY:(double)y;
- (void)_setFirstLineBaselineFrameOriginY:(double)y;
- (void)_setLastLineBaselineFrameOriginY:(double)y;
- (BOOL)_hasFontInfoForVerticalBaselineSpacing;
- (id)_fontInfoForBaselineSpacing;
- (BOOL)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long *)attribute;
- (double)_autolayoutSpacingAtEdge:(int)edge forAttribute:(long long)attribute inContainer:(id)container isGuide:(BOOL)guide;
- (double)_autolayoutSpacingAtEdge:(int)edge forAttribute:(long long)attribute nextToNeighbor:(id)neighbor edge:(int)edge attribute:(long long)attribute multiplier:(double)multiplier;
- (void)_ola_willApplyMultilineTextWidthDisambiguationConstraint;
- (id)_image;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (unsigned long long)defaultAccessibilityTraits;
- (void)_setCuiCatalog:(id)catalog;
- (id)_cuiCatalog;
- (void)_setCuiStyleEffectConfiguration:(id)configuration;
- (id)_cuiStyleEffectConfiguration;
- (double)_preferredMaxLayoutWidth;
- (id)_defaultAttributes;
- (void)_setDefaultAttributes:(id)attributes;
- (void)_setContent:(id)content;
- (void)_contentDidChange:(long long)change fromContent:(id)content;
- (void)setNeedsDisplay;
- (void)_invalidateTextSize;
- (void)_invalidateLabelSize;
- (void)invalidateIntrinsicContentSize;
- (void)_commonInit;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_didMoveFromWindow:(id)window toWindow:(id)window;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (struct CGSize { double x0; double x1; })textSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds limitedToNumberOfLines:(long long)lines;
- (id)_stringDrawingContext;
- (long long)_stringDrawingOptions;
- (BOOL)_shouldCeilSizeToViewScale;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_textRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds limitedToNumberOfLines:(long long)lines includingShadow:(BOOL)shadow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_drawingRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)_updateSystemConstraints;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_tightBoundingRectOfFirstLine;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_tightBoundingRect;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_contentInsetsFromFonts;
- (void)_setText:(id)text;
- (BOOL)isEnabled;
- (BOOL)_contentIsMutableAttributedString;
- (void)_setFallbackTextColor:(id)color forUserInterfaceStyle:(long long)style;
- (void)_setTextColor:(id)color;
- (void)_setTextEncapsulation:(id)encapsulation;
- (id)_textEncapsulation;
- (double)_actualScaleFactor;
- (id)_associatedScalingLabel;
- (void)_setMinimumFontSize:(double)size;
- (double)_minimumFontSize;
- (void)_setLineBreakStrategy:(unsigned long long)strategy;
- (void)_setTextColorFollowsTintColor:(BOOL)color;
- (BOOL)_textColorFollowsTintColor;
- (void)tintColorDidChange;
- (void)_setTextAlignment:(long long)alignment;
- (void)setSemanticContentAttribute:(long long)attribute;
- (id)_disabledFontColor;
- (id)currentTextColor;
- (BOOL)_shouldInvalidateBaselineConstraintsForSize:(struct CGSize { double x0; double x1; })size oldSize:(struct CGSize { double x0; double x1; })size;
- (void)_invalidateBaselineConstraints;
- (void)_setFont:(id)font;
- (void)_setExtremeSizingEnabled:(BOOL)enabled;
- (BOOL)_isExtremeSizingEnabled;
- (void)setShadowBlur:(double)blur;
- (double)shadowBlur;
- (BOOL)isHighlighted;
- (void)_setLineBreakMode:(long long)mode;
- (void)_setHyphenationFactor:(float)factor;
- (float)_hyphenationFactor;
- (void)_setDrawsDebugGlyphPathBoundsClipping:(BOOL)clipping;
- (void)_geometryChanged:(const struct { int x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGSize { double x0; double x1; } x3; struct CGPoint { double x0; double x1; } x4; struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } x5; id x6; id x7; id x8; id x9; } *)changed forAncestor:(id)ancestor;
- (void)_setDrawsDebugBaselines:(BOOL)baselines;
- (double)_firstLineBaseline;
- (double)_baselineOffsetFromBottom;
- (double)_firstBaselineOffsetFromTop;
- (BOOL)_hasBaseline;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)_needsDoubleUpdateConstraintsPass;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)traitCollectionDidChange:(id)change;
- (void)_updateTextColorWithFallbackColorIfNeeded;
- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })size;
- (void)_setUseShortcutIntrinsicContentSize:(BOOL)size;
- (BOOL)_useShortcutIntrinsicContentSize;
- (void)_setMultilineLabelRequiresCarefulMeasurement:(BOOL)measurement;
- (BOOL)_multilineLabelRequiresCarefulMeasurement;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)drawTextInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_drawTextInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect baselineCalculationOnly:(BOOL)only;
- (BOOL)_clipsGlyphPathFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame shouldContinueSuperviewTraversal:(BOOL *)traversal;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_drawTextInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_drawTextInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect forceMultiline:(BOOL)multiline;
- (void)layerWillDraw:(id)draw;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)setMarqueeEnabled:(BOOL)enabled;
- (void)_setMarqueeUpdatable:(BOOL)updatable;
- (void)_drawFullMarqueeTextInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_startMarqueeIfNecessary;
- (void)_stopMarqueeWithRedisplay:(BOOL)redisplay;
- (BOOL)marqueeRunning;
- (BOOL)marqueeEnabled;
- (BOOL)_isMarqueeUpdatable;
- (void)setMarqueeRunning:(BOOL)running;
- (void)_ancestorWillUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (void)setDrawsUnderline:(BOOL)underline;
- (BOOL)drawsUnderline;
- (void)_setUsesSimpleTextEffects:(BOOL)effects;
- (BOOL)_usesSimpleTextEffects;
- (void)_setTextAlignmentFollowsWritingDirection:(BOOL)direction;
- (BOOL)_textAlignmentFollowsWritingDirection;
- (void)_setTextAlignmentMirrored:(BOOL)mirrored;
- (BOOL)_textAlignmentMirrored;
- (void)_setOverallWritingDirectionFollowsLayoutDirection:(BOOL)direction;
- (BOOL)_overallWritingDirectionFollowsLayoutDirection;
- (id)_tightBoundingBoxLayoutGuide;
- (void)_applicationWillResignActiveNotification:(id)notification;
- (void)_applicationDidBecomeActiveNotification:(id)notification;
- (double)_multilineContextWidth;
- (void)_setMultilineContextWidth:(double)width;
- (void)_setVisualStyle:(id)style;
- (void)_setConfiguration:(id)configuration;
@end

#endif /* UILabel_h */
