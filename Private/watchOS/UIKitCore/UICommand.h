//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UICommand_h
#define UICommand_h
@import Foundation;

#include "UIMenuElement.h"
#include "UIImage.h"
#include "UIMenuLeaf-Protocol.h"
#include "UIPopoverPresentationControllerSourceItem-Protocol.h"
#include "_UIMenuLeaf-Protocol.h"
#include "_UIMenuStateObserverableLeaf-Protocol.h"

@class NSArray, NSAttributedString, NSPointerArray, NSString;

@interface UICommand : UIMenuElement<_UIMenuLeaf, _UIMenuStateObserverableLeaf, UIMenuLeaf>

@property (nonatomic) BOOL _useSenderForResolvingTarget;
@property (readonly, nonatomic) id _target;
@property (copy, @dynamic, nonatomic) NSString *title;
@property (copy, @dynamic, nonatomic) UIImage *image;
@property (copy, nonatomic) NSString *discoverabilityTitle;
@property (readonly, nonatomic) SEL action;
@property (readonly, nonatomic) id propertyList;
@property (nonatomic) unsigned long long attributes;
@property (nonatomic) long long state;
@property (readonly, nonatomic) NSArray *alternates;
@property (copy, nonatomic) NSAttributedString *attributedTitle;
@property (readonly, nonatomic) BOOL requiresAuthenticatedInput;
@property (readonly, nonatomic) BOOL keepsMenuPresented;
@property (copy, nonatomic) UIImage *selectedImage;
@property (readonly, nonatomic) NSObject<UIPopoverPresentationControllerSourceItem> *presentationSourceItem;
@property (readonly, nonatomic) id sender;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSPointerArray *stateObservers;

/* class methods */
+ (id)_defaultCommands;
+ (id)_defaultCommandForAction:(SEL)action;
+ (id)commandWithTitle:(id)title imageName:(id)name action:(SEL)action;
+ (id)commandWithTitle:(id)title imageName:(id)name preferredDisplayMode:(unsigned long long)mode action:(SEL)action;
+ (id)commandWithTitle:(id)title imageName:(id)name attributes:(unsigned long long)attributes action:(SEL)action;
+ (id)commandWithTitle:(id)title image:(id)image action:(SEL)action propertyList:(id)list;
+ (id)commandWithTitle:(id)title image:(id)image action:(SEL)action propertyList:(id)list alternates:(id)alternates;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (BOOL)_isLeaf;
- (id)initWithCoder:(id)coder;
- (id)initWithTitle:(id)title image:(id)image imageName:(id)name action:(SEL)action propertyList:(id)list alternates:(id)alternates discoverabilityTitle:(id)title attributes:(unsigned long long)attributes state:(long long)state;
- (id)initWithCommand:(id)command;
- (void)setSubtitle:(id)subtitle;
- (void)_acceptMenuVisit:(id /* block */)visit commandVisit:(id /* block */)visit actionVisit:(id /* block */)visit deferredElementVisit:(id /* block */)visit;
- (BOOL)_acceptBoolMenuVisit:(id /* block */)visit commandVisit:(id /* block */)visit actionVisit:(id /* block */)visit;
- (void)_acceptMenuVisit:(id /* block */)visit leafVisit:(id /* block */)visit;
- (BOOL)_acceptBoolMenuVisit:(id /* block */)visit leafVisit:(id /* block */)visit;
- (id)_alternateForModifierFlags:(long long)flags;
- (id)_alternateForModifierFlags:(long long)flags usingAlternates:(id)alternates;
- (id)_immutableCopy;
- (id)_identifier;
- (id)_leafAlternates;
- (id)_leafKeyInput;
- (long long)_leafKeyModifierFlags;
- (BOOL)_isDefaultCommand;
- (void)performWithSender:(id)sender target:(id)target;
- (id)_resolvedTargetFromFirstTarget:(id)target sender:(id)sender;
- (void)_performWithSender:(id)sender handler:(id /* block */)handler;
- (id)_validatedLeafWithAlternate:(id)alternate target:(id)target validation:(id)validation;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEqual:(id)equal;
- (void)_addStateObserver:(id)observer;
- (void)_removeStateObserver:(id)observer;
- (void)_setState:(long long)state notifyingObservers:(BOOL)observers;
- (id)_getStateObservers;
- (void)_setStateObservers:(id)observers;
@end

#endif /* UICommand_h */
