//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIPopoverPresentationController_h
#define UIPopoverPresentationController_h
@import Foundation;

#include "UIPresentationController.h"
#include "UIBarButtonItem.h"
#include "UIColor.h"
#include "UIDimmingView.h"
#include "UIGestureRecognizerDelegatePrivate-Protocol.h"
#include "UIPanGestureRecognizer.h"
#include "UIPopoverPresentationController.h"
#include "UIPopoverPresentationControllerDelegate-Protocol.h"
#include "UIPopoverPresentationControllerSourceItem-Protocol.h"
#include "UISheetPresentationController.h"
#include "UIView.h"
#include "UIViewController.h"
#include "_UICutoutShadowView.h"
#include "_UIPopoverDimmingView.h"
#include "_UIPopoverDimmingViewDelegate-Protocol.h"
#include "_UIPopoverHostManager-Protocol.h"
#include "_UIPopoverLayoutInfo.h"
#include "_UIPopoverView.h"

@class NSArray, NSString;

@interface UIPopoverPresentationController : UIPresentationController<_UIPopoverDimmingViewDelegate, UIGestureRecognizerDelegatePrivate> {
  /* instance variables */
  UIViewController *_contentViewController;
  _UIPopoverView *_popoverView;
  _UICutoutShadowView *_shadowView;
  UIView *_layoutConstraintView;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _targetRectInEmbeddingView;
  UIBarButtonItem *_targetBarButtonItem;
  unsigned long long _currentArrowDirection;
  long long _popoverBackgroundStyle;
  UIColor *_arrowBackgroundColor;
  struct CGSize { double width; double height; } _popoverContentSize;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastSourceRectInContainerView;
  long long _popoverControllerStyle;
  BOOL _ignoresKeyboardNotifications;
  BOOL _backgroundBlurDisabled;
  BOOL _overrideAllowsHitTestingOnBackgroundViews;
  long long _backgroundBlurEffectStyle;
  unsigned int draggingChildScrollViewCount;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _previousContainerViewRect;
  BOOL _useSourceViewBoundsAsSourceRect;
  long long _presentationDirection;
  int _presentationState;
  BOOL _didPresentInActiveSequence;
  unsigned long long _slideTransitionCount;
  UIPanGestureRecognizer *_vendedGestureRecognizer;
  UIPanGestureRecognizer *_dimmingViewGestureRecognizer;
  struct { unsigned int x :1 isPresentingModalViewController; unsigned int x :1 isPresentingActionSheet; unsigned int x :1 wasIgnoringDimmingViewTouchesBeforeScrolling; unsigned int x :1 isInTextEffectsWindow; unsigned int x :1 isEmbeddingInView; unsigned int x :1 embeddedPresentationBounces; unsigned int x :1 isRepositioningRectDisabled; unsigned int x :1 sendingDelegateWillRepositionToRect; unsigned int x :1 isObservingFocusUpdateNotification; } _popoverControllerFlags;
  NSString *_popoverIdentifier;
  NSObject<_UIPopoverHostManager> *_hostManager;
  UIPanGestureRecognizer *_detachGestureRecognizer;
  BOOL _wasDetached;
  BOOL _shouldSendDidDismiss;
}

@property (nonatomic) unsigned long long popoverArrowDirection;
@property (nonatomic) BOOL _centersPopoverIfSourceViewNotSet;
@property (retain, nonatomic) UIDimmingView *dimmingView;
@property (nonatomic) BOOL dismissesOnRotation;
@property (retain, nonatomic) _UIPopoverLayoutInfo *preferredLayoutInfo;
@property (weak, nonatomic) UIView *presentingView;
@property (nonatomic) unsigned long long presentationEdge;
@property (retain, nonatomic) UIView *sourceOverlayView;
@property (retain, nonatomic) NSArray *sourceOverlayViewConstraints;
@property (nonatomic) BOOL showsTargetRect;
@property (nonatomic) BOOL showsOrientationMarker;
@property (nonatomic) BOOL showsPresentationArea;
@property (retain, nonatomic) UIView *targetRectView;
@property (nonatomic) BOOL retainsSelfWhilePresented;
@property (retain, nonatomic) UIPopoverPresentationController *retainedSelf;
@property (nonatomic) BOOL _shouldHideArrow;
@property (nonatomic) double _arrowOffset;
@property (nonatomic) double _dimmingViewTopEdgeInset;
@property (nonatomic) BOOL shouldDisableInteractionDuringTransitions;
@property (nonatomic) BOOL _ignoreBarButtonItemSiblings;
@property (nonatomic) long long _popoverBackgroundStyle;
@property (nonatomic) BOOL _softAssertWhenNoSourceViewOrBarButtonItemSpecified;
@property (nonatomic) BOOL _allowsSourceViewInDifferentWindowThanInitialPresentationViewController;
@property (nonatomic) BOOL shouldPreserveFirstResponder;
@property (nonatomic) BOOL adaptivityEnabled;
@property (@dynamic, nonatomic) BOOL _ignoresKeyboardNotifications;
@property (nonatomic) struct CGSize { double x0; double x1; } _defaultPopoverSizeOverride;
@property (nonatomic) long long _preferredHorizontalAlignment;
@property (nonatomic) BOOL _allowsFocusInPresentingViewController;
@property (weak, @dynamic, nonatomic) NSObject<UIPopoverPresentationControllerDelegate> *delegate;
@property (nonatomic) unsigned long long permittedArrowDirections;
@property (retain, @dynamic, nonatomic) UIView *sourceView;
@property (@dynamic, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } sourceRect;
@property (nonatomic) BOOL canOverlapSourceViewRect;
@property (retain, @dynamic, nonatomic) NSObject<UIPopoverPresentationControllerSourceItem> *sourceItem;
@property (retain, @dynamic, nonatomic) UIBarButtonItem *barButtonItem;
@property (readonly, nonatomic) unsigned long long arrowDirection;
@property (copy, nonatomic) NSArray *passthroughViews;
@property (copy, nonatomic) UIColor *backgroundColor;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } popoverLayoutMargins;
@property (retain, nonatomic) Class popoverBackgroundViewClass;
@property (readonly, nonatomic) UISheetPresentationController *adaptiveSheetPresentationController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_showTargetRectPref;
+ (Class)_popoverViewClass;
+ (id)_platformHostManagerForController:(id)controller;
+ (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_defaultPopoverLayoutMarginsForPopoverControllerStyle:(long long)style andContentViewController:(id)controller;
+ (BOOL)_forceAttemptsToAvoidKeyboard;
+ (BOOL)_alwaysAllowPopoverPresentations;
+ (void)_setAlwaysAllowPopoverPresentations:(BOOL)presentations;

/* instance methods */
- (void)_createHostManagerIfNeeded;
- (BOOL)_shouldUseNewPopoverAnimations;
- (id)init;
- (id)initWithPresentedViewController:(id)controller presentingViewController:(id)controller;
- (void)dealloc;
- (void)setPopoverFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame animated:(BOOL)animated;
- (void)_setPopoverFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame animated:(BOOL)animated coordinator:(id)coordinator;
- (struct CGSize { double x0; double x1; })popoverContentSize;
- (void)_clearCachedPopoverContentSize;
- (void)setPopoverContentSize:(struct CGSize { double x0; double x1; })size;
- (void)setPopoverContentSize:(struct CGSize { double x0; double x1; })size animated:(BOOL)animated;
- (BOOL)isPopoverVisible;
- (void)_setBackgroundBlurDisabled:(BOOL)disabled;
- (BOOL)_backgroundBlurDisabled;
- (void)_setBackgroundBlurEffectStyle:(long long)style;
- (long long)_backgroundBlurEffectStyle;
- (id)_passthroughViews;
- (Class)_popoverLayoutInfoForChromeClass:(Class)class;
- (Class)_defaultChromeViewClass;
- (int)_presentationState;
- (void)_setPresentationState:(int)state;
- (unsigned long long)_slideTransitionCount;
- (void)_incrementSlideTransitionCount:(BOOL)count;
- (void)_resetSlideTransitionCount;
- (void)_invalidateLayoutInfo;
- (struct CGPoint { double x0; double x1; })_centerPointForScale:(double)scale frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame anchor:(struct CGPoint { double x0; double x1; })anchor;
- (id)popoverView;
- (id)shadowView;
- (id)_backgroundView;
- (BOOL)_isShimmingPopoverControllerPresentation;
- (void)_setPopoverView:(id)view;
- (void)_setArrowOffset:(double)offset;
- (struct CGSize { double x0; double x1; })_currentPopoverContentSize;
- (double)_presentationAnimationDuration;
- (double)_dismissalAnimationDuration;
- (void)_transitionFromViewController:(id)controller toViewController:(id)controller animated:(BOOL)animated;
- (void)_performHierarchyCheckOnViewController:(id)controller;
- (long long)_popoverControllerStyle;
- (BOOL)_manuallyHandlesContentViewControllerAppearanceCalls;
- (id)arrowBackgroundColor;
- (void)setArrowBackgroundColor:(id)color;
- (id)_lowerWindowDismissalGestureViews;
- (void)_setLowerWindowDismissalGestureViews:(id)views;
- (void)_setPopoverBackgroundStyle:(long long)style;
- (void)_setContentViewController:(id)controller backgroundStyle:(long long)style animated:(BOOL)animated;
- (void)_presentedViewControllerUserInterfaceStyleChanged;
- (id /* block */)_completionBlockForDismissalWhenNotifyingDelegate:(BOOL)delegate;
- (void)_postludeForDismissal;
- (void)_dismissPopoverAnimated:(BOOL)animated stateOnly:(BOOL)only notifyDelegate:(BOOL)delegate;
- (BOOL)_popoverIsDismissingBecauseDismissInteractionOccurred;
- (BOOL)dimmingViewWasTapped:(id)tapped withDismissCompletion:(id /* block */)completion;
- (BOOL)_allowsFocusBehindDimmingView;
- (void)_setAllowsFocusInPresentingViewController:(BOOL)controller;
- (void)_updateShouldObserveFocusUpdateNotification:(BOOL)notification;
- (void)_observeFocusDidUpdateNotification:(id)notification;
- (void)_cancelDelayedFocusAutoDismiss;
- (void)_autoDismissIfFocusedItemSufficientlyIntersectsPresentedView;
- (BOOL)_shouldAutoDismissOnFocusedItemIntersection;
- (BOOL)_focusedItemFrameIntersectsSufficientlyWithPresentedView:(id)view;
- (BOOL)popoverDimmingViewShouldAllowInteraction:(id)interaction;
- (BOOL)popoverDimmingViewDidReceiveDismissalInteraction:(id)interaction;
- (void)_setGesturesEnabled:(BOOL)enabled;
- (BOOL)_attemptsToAvoidKeyboard;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_containingFrameInsets;
- (id)_layoutInfoFromLayoutInfo:(id)info forCurrentKeyboardStateAndHostingWindow:(id)window;
- (id)_layoutInfoForCurrentKeyboardStateAndHostingWindow:(id)window;
- (id)_layoutInfoForCurrentKeyboardState;
- (void)_moveAwayFromTheKeyboard:(id)keyboard showing:(BOOL)showing;
- (void)_keyboardWillShow:(id)show;
- (void)_keyboardDidHide:(id)hide;
- (void)_startWatchingForKeyboardNotificationsIfNecessary;
- (void)_stopWatchingForKeyboardNotifications;
- (void)_scrollViewWillBeginDragging:(id)dragging;
- (void)_scrollViewDidEndDragging:(id)dragging;
- (void)_startWatchingForScrollViewNotifications;
- (void)_stopWatchingForScrollViewNotifications;
- (id)_adaptiveFormSheetPresentationController;
- (void)_setIgnoresKeyboardNotifications:(BOOL)notifications;
- (BOOL)_overrideAllowsHitTestingOnBackgroundViews;
- (void)_setOverrideAllowsHitTestingOnBackgroundViews:(BOOL)views;
- (BOOL)_handlesKeyboardAvoidance;
- (void)_stopWatchingForNotifications;
- (BOOL)_fallbackShouldDismiss;
- (void)_sendFallbackWillDismiss;
- (void)_sendFallbackDidDismiss;
- (BOOL)_isPresenting;
- (BOOL)_isDismissing;
- (BOOL)isPresentingOrDismissing;
- (BOOL)_embedsInView;
- (BOOL)_presentationPotentiallyUnderlapsStatusBar;
- (id)_dimmingView;
- (id)presentedView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameOfPresentedViewInContainerView;
- (BOOL)shouldPresentInFullscreen;
- (BOOL)_shouldPresentedViewControllerControlStatusBarAppearance;
- (id)_initialPresentationViewControllerForViewController:(id)controller;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_baseContentInsetsWithLeftMargin:(double *)margin rightMargin:(double *)margin;
- (id)_presentationView;
- (BOOL)_shouldOccludeDuringPresentation;
- (id)_popoverHostingWindow;
- (id)_exceptionStringForNilSourceViewOrBarButtonItem;
- (long long)presentationStyle;
- (BOOL)_shouldPopoverContentExtendOverArrowForViewController:(id)controller backgroundViewClass:(Class)class;
- (void)presentationTransitionWillBegin;
- (void)presentationTransitionDidEnd:(BOOL)end;
- (void)dismissalTransitionWillBegin;
- (void)dismissalTransitionDidEnd:(BOOL)end;
- (void)_transitionFromWillBegin;
- (void)_transitionFromDidEnd;
- (void)_transitionToWillBegin;
- (void)_transitionToDidEnd;
- (void)_dismissWithCompletion:(id /* block */)completion;
- (BOOL)_attemptDismissalWithCompletion:(id /* block */)completion;
- (void)_presentingViewControllerWindowSceneDidUpdateEffectiveGeometry:(id)geometry;
- (void)_realSourceViewDidChangeFromView:(id)view toView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sourceRectInContainerView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sourceRectInCoordinateSpace:(id)space;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_containingFrame;
- (struct CGSize { double x0; double x1; })_proposedSize;
- (void)_sendDelegateWillRepositionToRect;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (void)_updateSourceOverlayViewConstraints;
- (void)containerViewWillLayoutSubviews;
- (BOOL)_shouldKeepCurrentFirstResponder;
- (long long)_defaultPresentationStyleForTraitCollection:(id)collection;
- (BOOL)_forcesPreferredAnimationControllers;
- (id)_preferredAnimationControllerForPresentation;
- (id)_preferredAnimationControllerForDismissal;
- (void)_setContentViewController:(id)controller animated:(BOOL)animated;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)container;
- (struct CGSize { double x0; double x1; })_defaultPopoverSize;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_additionalSafeAreaInsets;
- (id)_hostManagerPopoverCreationConfiguration;
- (id)_hostManagerPopoverUpdateConfiguration;
- (id)_hostManagerPopoverCloseConfiguration;
- (void)_realSourceViewGeometryDidChange;
- (BOOL)_shouldConvertToScene;
- (void)_convertToSceneFromPresentingViewController:(id)controller;
- (id)_createHostManagerPopoverWithConfiguration:(id)configuration;
- (void)_closeScene;
- (BOOL)_shouldPreserveFirstResponder;
- (id)_createVisualStyleForProvider:(id)provider;
- (id)_metrics;
- (void)_handlePan:(id)pan;
- (BOOL)_retainsSelfWhilePresented;
- (void)_setRetainsSelfWhilePresented:(BOOL)presented;
- (id)_presentingView;
- (void)_setPresentingView:(id)view;
- (unsigned long long)_presentationEdge;
- (void)_setPresentationEdge:(unsigned long long)edge;
- (void)_setCentersPopoverIfSourceViewNotSet:(BOOL)set;
- (id)_sourceOverlayView;
- (void)_setSourceOverlayView:(id)view;
- (id)_sourceOverlayViewConstraints;
- (void)_setSourceOverlayViewConstraints:(id)constraints;
- (id)_targetRectView;
- (void)_setTargetRectView:(id)view;
- (void)_setShouldHideArrow:(BOOL)arrow;
- (void)_setDimmingViewTopEdgeInset:(double)inset;
- (BOOL)_shouldDisableInteractionDuringTransitions;
- (void)_setShouldDisableInteractionDuringTransitions:(BOOL)transitions;
- (void)_setIgnoreBarButtonItemSiblings:(BOOL)siblings;
- (void)_setSoftAssertWhenNoSourceViewOrBarButtonItemSpecified:(BOOL)specified;
- (void)_setAllowsSourceViewInDifferentWindowThanInitialPresentationViewController:(BOOL)controller;
- (void)_setShouldPreserveFirstResponder:(BOOL)responder;
- (BOOL)_isAdaptivityEnabled;
- (void)_setAdaptivityEnabled:(BOOL)enabled;
- (void)_setPreferredHorizontalAlignment:(long long)alignment;
@end

#endif /* UIPopoverPresentationController_h */
