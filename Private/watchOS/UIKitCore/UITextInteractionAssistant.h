//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UITextInteractionAssistant_h
#define UITextInteractionAssistant_h
@import Foundation;

#include "UIFieldEditor.h"
#include "UIGestureRecognizer.h"
#include "UILongPressGestureRecognizer.h"
#include "UIResponderStandardEditActions-Protocol.h"
#include "UIScrollView.h"
#include "UITapGestureRecognizer.h"
#include "UITextChecker.h"
#include "UITextCursorAssertion-Protocol.h"
#include "UITextCursorAssertionController.h"
#include "UITextCursorAssertionControllerSubject-Protocol.h"
#include "UITextInteraction.h"
#include "UITextInteraction_AssistantDelegate-Protocol.h"
#include "UITextLinkInteraction.h"
#include "UITextRange.h"
#include "UITextRangeAdjustmentInteraction.h"
#include "UITextRangeAdjustmentInteractionDelegate-Protocol.h"
#include "UITextSelection.h"
#include "UITextSelectionDisplayInteraction.h"
#include "UITextSelectionDisplayInteractionDelegate-Protocol.h"
#include "UITextSelectionDisplayInteractionDelegate_Internal-Protocol.h"
#include "UITextSelectionView.h"
#include "UIView.h"
#include "_UIKeyboardTextSelectionController.h"
#include "_UITextChoiceAccelerationAssistant.h"
#include "_UITextFloatingCursorSession.h"
#include "_UITextInteractionAssistantGestureState.h"
#include "_UITextInteractionEditMenuAssistant.h"

@class NSNumber, NSString;
@protocol UIResponder<UITextInput, UIView<_UITextSelectionWidgetAnimating;

@interface UITextInteractionAssistant : NSObject<UITextInteraction_AssistantDelegate, UITextCursorAssertionControllerSubject, UITextSelectionDisplayInteractionDelegate, UITextSelectionDisplayInteractionDelegate_Internal, UITextRangeAdjustmentInteractionDelegate, UIResponderStandardEditActions> {
  /* instance variables */
  UITextSelectionView *_selectionView;
  int _autoscrollRamp;
  double _autoscrollFactor;
  struct CGPoint { double x; double y; } _autoscrollBasePoint;
  UITextChecker *_textChecker;
  long long _previousRepeatedGranularity;
  UITextRange *_stashedTextRange;
  BOOL _didUseStashedRange;
  BOOL _suppressSystemUI;
  unsigned long long _activeSelectionInteractions;
  long long _textInteractionMode;
  _UITextInteractionAssistantGestureState *_gestureState;
  UITextSelectionDisplayInteraction *_selectionViewManager;
  _UITextInteractionEditMenuAssistant *_editMenuAssistant;
  _UITextChoiceAccelerationAssistant *_textChoicesAssistant;
  _UIKeyboardTextSelectionController *_textSelectionController;
  UITextCursorAssertionController *_assertionController;
  NSObject<UITextCursorAssertion> *_showInputModesCursorAssertion;
  NSObject<UITextCursorAssertion> *_showDeleteButtonCursorAssertion;
  _UITextFloatingCursorSession *_floatingCursorSession;
  BOOL _detaching;
  NSNumber *_viewConformsToTextItemInteracting;
  NSNumber *_viewRespondsToInteractiveTextSelectionDisabled;
  NSNumber *_viewConformsToAsynchronousInteractionViewProtocol;
}

@property (readonly, nonatomic) UIResponder<UITextInput> *view;
@property (readonly, nonatomic) UIResponder<UITextInput> *textDocument;
@property (readonly, retain, nonatomic) UILongPressGestureRecognizer *loupeGesture;
@property (readonly, retain, nonatomic) UITapGestureRecognizer *singleTapGesture;
@property (readonly, retain, nonatomic) UIGestureRecognizer *doubleTapGesture;
@property (readonly, retain, nonatomic) UIGestureRecognizer *forcePressGesture;
@property (nonatomic) BOOL inGesture;
@property (readonly, nonatomic) UIScrollView *scrollView;
@property (nonatomic) BOOL autoscrolled;
@property (nonatomic) struct CGPoint { double x0; double x1; } autoscrollUntransformedExtentPoint;
@property (readonly, nonatomic) BOOL externalTextInput;
@property (nonatomic) struct CGPoint { double x0; double x1; } loupeGestureEndPoint;
@property (readonly, nonatomic) BOOL willHandoffLoupeMagnifier;
@property (readonly, retain, nonatomic) UITextInteraction *interactions;
@property (retain, nonatomic) UITextInteraction *externalInteractions;
@property (readonly, retain, nonatomic) UITextLinkInteraction *linkInteraction;
@property (readonly, nonatomic) UITextSelectionDisplayInteraction *_selectionViewManager;
@property (readonly, nonatomic) UITextCursorAssertionController *_assertionController;
@property (nonatomic) BOOL expectingCommit;
@property (nonatomic) unsigned long long activeIndicators;
@property (nonatomic) BOOL needsGestureUpdate;
@property (readonly, nonatomic) _UIKeyboardTextSelectionController *activeSelectionController;
@property (readonly, nonatomic) _UITextInteractionEditMenuAssistant *_editMenuAssistant;
@property (readonly, nonatomic) _UITextChoiceAccelerationAssistant *_textChoicesAssistant;
@property (retain, nonatomic) id grabberSuppressionAssertion;
@property (retain, nonatomic) id keyboardSuppressionAssertion;
@property (readonly, nonatomic) UIView<_UITextSelectionWidgetAnimating> *_caretView;
@property (nonatomic) int selectionHighlightMode;
@property (readonly, nonatomic) UITextSelection *activeSelection;
@property (readonly, nonatomic) UITextRangeAdjustmentInteraction *rangeAdjustmentInteraction;
@property (nonatomic) BOOL selectionDisplayVisible;
@property (nonatomic) BOOL cursorBlinkAnimationEnabled;
@property (readonly, nonatomic) BOOL displayingVerticalSelection;
@property (nonatomic) int glowViewMode;
@property (readonly, nonatomic) UIView *dynamicCaretView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL cursorBlinks;
@property (nonatomic) BOOL cursorVisible;
@property (nonatomic) BOOL ghostAppearance;
@property (readonly, nonatomic) BOOL canShowSelectionCommands;
@property (readonly, @dynamic, nonatomic) UIFieldEditor *fieldEditor;
@property (readonly, nonatomic) BOOL interactiveSelectionDisabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (long long)_nextGranularityInCycle:(long long)cycle forTouchType:(long long)type;

/* instance methods */
- (id)initWithView:(id)view;
- (id)initWithView:(id)view textInteractionMode:(long long)mode;
- (void)dealloc;
- (id)obtainSelectionGrabberSuppressionAssertion;
- (id)_asText;
- (id)_scrollable;
- (void)setSuppressSystemUI:(BOOL)ui;
- (void)selectionChanged;
- (BOOL)_selectionIsActivated;
- (void)activateSelection;
- (void)deactivateSelection;
- (void)updateDisplayedSelection;
- (void)setNeedsSelectionDisplayUpdate;
- (BOOL)isSelectionDisplayVisible;
- (BOOL)isCursorBlinkAnimationEnabled;
- (id)selectionView;
- (id)_legacySelectionView;
- (BOOL)requiresImmediateUpdate;
- (id)_selectionView;
- (BOOL)shouldDisplayLoupeSessionForTouchType:(long long)type;
- (unsigned long long)loupeOrientation;
- (void)_setTextSelectionControllerFromDelegate;
- (void)invalidate;
- (void)activate;
- (BOOL)isValid;
- (void)detach:(BOOL)detach;
- (void)detach;
- (void)attach;
- (BOOL)containerIsTextField;
- (BOOL)containerAllowsSelection;
- (BOOL)containerAllowsSelectionTintOnly;
- (BOOL)containerIsBrowserView;
- (BOOL)wantsLinkInteraction;
- (void)clearGestureRecognizers:(BOOL)recognizers;
- (BOOL)useGesturesForEditableContent;
- (void)canBeginDragCursor:(id)cursor;
- (id)_computeGestureStateForView:(id)view;
- (void)setGestureRecognizers;
- (Class)selectionInteractionClass;
- (BOOL)supportsIndirectInteractions;
- (void)addGestureRecognizersToView:(id)view;
- (void)setFirstResponderIfNecessary;
- (void)setFirstResponderIfNecessaryActivatingSelection:(BOOL)selection;
- (void)scrollSelectionToVisible;
- (void)scrollSelectionToVisible:(BOOL)visible;
- (void)setWillHandoffLoupeMagnifier;
- (void)resetWillHandoffLoupeMagnifier;
- (void)loupeGestureWithState:(long long)state location:(id /* block */)location translation:(id /* block */)translation velocity:(id /* block */)velocity modifierFlags:(long long)flags shouldCancel:(BOOL *)cancel;
- (void)loupeMagnifierWithState:(long long)state atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)rangedMagnifierWithState:(long long)state atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)lollipopGestureWithState:(long long)state location:(struct CGPoint { double x0; double x1; })location locationOfFirstTouch:(struct CGPoint { double x0; double x1; })touch forTouchType:(long long)type;
- (void)setSelectionWithPoint:(struct CGPoint { double x0; double x1; })point;
- (void)commitSelectionWithPoint:(struct CGPoint { double x0; double x1; })point;
- (void)extendSelectionToPoint:(struct CGPoint { double x0; double x1; })point;
- (void)extendSelectionToLoupeOrSetToPoint:(struct CGPoint { double x0; double x1; })point;
- (void)checkEditabilityAndSetFirstResponderIfNecessary;
- (void)selectWord;
- (void)selectWordWithoutShowingCommands;
- (BOOL)shouldSuppressSelectionCommands;
- (void)showSelectionCommands;
- (void)hideSelectionCommands;
- (void)selectAll:(id)all;
- (void)clearSelection;
- (void)notifyKeyboardSelectionChanged;
- (void)updateSelectionWithPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_updateSelectionWithPoint:(struct CGPoint { double x0; double x1; })point granularity:(long long)granularity forceGranularity:(BOOL)granularity;
- (void)updateWithMagnifierTerminalPoint:(BOOL)point;
- (void)selectionAnimationDidStop;
- (void)rangeSelectionStarted:(struct CGPoint { double x0; double x1; })started;
- (void)rangeSelectionEnded:(struct CGPoint { double x0; double x1; })ended;
- (void)rangeSelectionCanceled;
- (void)rangeSelectionMoved:(struct CGPoint { double x0; double x1; })moved withTouchPoint:(struct CGPoint { double x0; double x1; })point;
- (void)configureForSelectionMode;
- (void)configureForHighlightMode;
- (void)configureForReplacementMode;
- (void)configureForPencilHighlightMode;
- (void)configureForPencilDeletionPreviewMode;
- (struct CGPoint { double x0; double x1; })constrainedPoint:(struct CGPoint { double x0; double x1; })point;
- (void)resignedFirstResponder;
- (void)stashCurrentSelection;
- (void)clearStashedSelection;
- (BOOL)didUseStashedSelection;
- (BOOL)usesAsynchronousSelectionController;
- (BOOL)viewConformsToAsynchronousInteractionProtocol;
- (void)willBeginSelectionInteraction;
- (void)didEndSelectionInteraction;
- (BOOL)hasActiveSelectionInteraction;
- (unsigned long long)currentDraggedHandle;
- (void)willBeginFloatingCursor:(BOOL)cursor;
- (void)beginFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)updateFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)updateFloatingCursorAtPoint:(struct CGPoint { double x0; double x1; })point animated:(BOOL)animated;
- (struct CGPoint { double x0; double x1; })boundedDeltaForTranslation:(struct CGPoint { double x0; double x1; })translation cursorLocationBase:(struct CGPoint { double x0; double x1; })base;
- (void)endFloatingCursor;
- (void)startAutoscroll:(struct CGPoint { double x0; double x1; })autoscroll;
- (void)cancelAutoscroll;
- (void)autoscrollWillNotStart;
- (void)updateAutoscroll:(id)autoscroll;
- (BOOL)didPerformLoupeSelectionHandoff;
- (BOOL)viewCouldBecomeEditable:(id)editable;
- (void)scheduleReplacements;
- (void)scheduleReplacementsWithOptions:(unsigned long long)options;
- (id)_textReplacementsMenuForElement:(id)element;
- (id)updatedTextReplacementsMenuWithMenuElements:(id)elements;
- (void)_updateSelectionInViewIfNeeded:(id)needed toRange:(id)range;
- (void)scheduleChineseTransliteration;
- (id)rangeForTextReplacement:(id)replacement;
- (id)attributedTextInRange:(id)range;
- (BOOL)showMultilingualDictationReplacementWithRange:(id)range;
- (BOOL)handleMultilingualAlternativeWithString:(id)string range:(id)range;
- (void)scheduleDictationReplacementsForAlternatives:(id)alternatives range:(id)range;
- (id)generatorForRange:(id)range withOptions:(unsigned long long)options;
- (BOOL)scheduleReplacementsForRange:(id)range withOptions:(unsigned long long)options;
- (BOOL)hasReplacements;
- (BOOL)swallowsDoubleTapWithScale:(double)scale atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)layoutChangedByScrolling:(BOOL)scrolling;
- (void)willStartScrollingOrZooming;
- (void)didEndScrollingOrZooming;
- (void)underlineCorrectedTextInRange:(id)range typedString:(id)string;
- (void)removeTextChoiceUnderlines;
- (BOOL)isDisplayingVerticalSelection;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })textRangeAdjustmentRectForEdge:(unsigned long long)edge;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })paddedTextRangeAdjustmentHitRegionForEdge:(unsigned long long)edge precision:(unsigned long long)precision;
- (id)textRangeAdjustmentViewForEdge:(unsigned long long)edge;
- (id)_rangeAdjustmentViewContainer;
- (struct CGPoint { double x0; double x1; })_rangeAdjustmentPointInTextInputCoordinateSpace:(struct CGPoint { double x0; double x1; })space;
- (BOOL)textRangeAdjustmentInteraction:(id)interaction shouldBeginAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)textRangeAdjustmentInteraction:(id)interaction didBeginAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)textRangeAdjustmentInteraction:(id)interaction selectionMoved:(struct CGPoint { double x0; double x1; })moved withTouchPoint:(struct CGPoint { double x0; double x1; })point;
- (void)textRangeAdjustmentInteraction:(id)interaction didEndAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)textRangeAdjustmentInteractionWasCancelled:(id)cancelled;
- (BOOL)textRangeAdjustmentInteractionShouldApplyTouchOffset:(id)offset;
- (BOOL)textRangeAdjustmentInteraction:(id)interaction shouldDisplayLoupeForTouchType:(long long)type;
- (unsigned long long)loupeOrientationForTextRangeAdjustmentInteraction:(id)interaction;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForTextRangeAdjustmentInteraction:(id)interaction;
- (id)containerCoordinateSpaceForTextRangeAdjustmentInteraction:(id)interaction;
- (id)selectionContainerView;
- (id)selectionContainerViewBelowTextForSelectionDisplayInteraction:(id)interaction;
- (id)selectionContainerViewAboveText;
- (id)_selectionViewManager:(id)manager obtainBlinkSuppressionAssertionForReason:(id)reason;
- (id)_selectionViewManager:(id)manager obtainGhostCursorAssertionForReason:(id)reason;
- (id)initWithResponder:(id)responder;
- (void)clearGestureRecognizers;
- (id)textSelectionView;
- (BOOL)isInteractiveSelectionDisabled;
@end

#endif /* UITextInteractionAssistant_h */
