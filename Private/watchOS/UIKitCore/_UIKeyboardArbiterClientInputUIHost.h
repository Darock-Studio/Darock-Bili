//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIKeyboardArbiterClientInputUIHost_h
#define _UIKeyboardArbiterClientInputUIHost_h
@import Foundation;

#include "_UIKeyboardArbiterClient.h"
#include "UIKeyboardScenePresentationModeManager.h"
#include "UIKeyboardScenePresentationModeManagerDelegate-Protocol.h"

@interface _UIKeyboardArbiterClientInputUIHost : _UIKeyboardArbiterClient<UIKeyboardScenePresentationModeManagerDelegate>

@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } keyboardFrameIncludingRemoteIAV;
@property (nonatomic) BOOL showing;
@property (readonly, nonatomic) UIKeyboardScenePresentationModeManager *presentationModeManager;
@property (nonatomic) BOOL inputDestinationInWindowedMode;

/* instance methods */
- (id)init;
- (void)configureArbiterCommunication:(id)communication;
- (id)arbiterProxy;
- (BOOL)allowedToShowKeyboard;
- (BOOL)isCurrentInputDestination;
- (BOOL)isSpotlight:(id)spotlight;
- (id)currentHostedPIDs;
- (BOOL)remoteKeyboardUndocked:(BOOL)undocked;
- (void)setCurrentUIState:(id)uistate;
- (void)signalKeyboardUIDidChange:(id)change onCompletion:(id /* block */)completion;
- (void)snapsShotKeyboard;
- (void)resetSnapshotWithWindowCheck:(BOOL)check;
- (BOOL)shouldSnapshot;
- (void)_updateKeyboardUIScenePresentationMode;
- (void)inputSessionDidEndUnexpectedly;
- (void)applicationKeyWindowWillChange:(id)change;
- (void)keyboardSendNotification:(unsigned long long)notification withInfo:(id)info isStart:(BOOL)start;
- (void)keyboardVisibilityDidChangeWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame visible:(BOOL)visible tracking:(BOOL)tracking;
- (void)completeKeyboardChange;
- (void)_layoutKeyboardViews:(id)views;
- (void)queue_sceneBecameFocused:(id)focused withCompletion:(id /* block */)completion;
- (void)scenePresentationModeManager:(id)manager didChangeToMode:(unsigned long long)mode;
@end

#endif /* _UIKeyboardArbiterClientInputUIHost_h */
