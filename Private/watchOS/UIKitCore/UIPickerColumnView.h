//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIPickerColumnView_h
#define UIPickerColumnView_h
@import Foundation;

#include "UIView.h"
#include "UIColor.h"
#include "UIPickerTableView.h"
#include "UIPickerTableViewContainerDelegate-Protocol.h"
#include "UIPickerView.h"
#include "UITableViewDataSource-Protocol.h"
#include "UIView.h"
#include "_UIPickerColumn-Protocol.h"

@class NSString;

@interface UIPickerColumnView : UIView<_UIPickerColumn, UIPickerTableViewContainerDelegate, UITableViewDataSource> {
  /* instance variables */
  UIPickerTableView *_topTable;
  UIPickerTableView *_middleTable;
  UIPickerTableView *_bottomTable;
  UIView *_topContainerView;
  UIView *_middleContainerView;
  UIView *_bottomContainerView;
  double _middleBarHeight;
  double _paddingAroundWheels;
  UIPickerView *_pickerView;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _tableFrame;
}

@property (nonatomic) BOOL isNoLongerInUse;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } selectionBarRect;
@property (readonly, nonatomic) long long selectionBarRow;
@property (retain, nonatomic) UIColor *_textColor;
@property (nonatomic) double rowHeight;
@property (nonatomic) struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } perspectiveTransform;
@property (nonatomic) double leftHitTestExtension;
@property (nonatomic) double rightHitTestExtension;
@property (readonly, nonatomic) UIView *view;
@property (readonly, nonatomic) UIView *highlightedRegion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)_createTableViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame containingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_centerTableInContainer:(id)container;
- (id)_createContainerViewWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_transformForTableWithPerspectiveTranslationX:(double)x;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_transformForTableWithTranslationX:(double)x;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame tableFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame middleBarHeight:(double)height rowHeight:(double)height paddingAroundWheels:(double)wheels pickerView:(id)view transform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })transform;
- (BOOL)_containsTable:(id)table;
- (id)_preferredTable;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_tableFrame;
- (BOOL)_pointLiesWithinEffectiveTableBounds:(struct CGPoint { double x0; double x1; })bounds;
- (double)_horizontalBiasForEndTables;
- (BOOL)selectRow:(long long)row animated:(BOOL)animated notify:(BOOL)notify;
- (BOOL)selectRow:(long long)row animated:(BOOL)animated notify:(BOOL)notify updateChecked:(BOOL)checked;
- (BOOL)isRowChecked:(long long)checked;
- (BOOL)_scrollRowAtIndexPathToSelectionBar:(id)bar animated:(BOOL)animated;
- (void)markAsNoLongerInUse;
- (void)_sendCheckedRow:(long long)row inTableView:(id)view checked:(BOOL)checked;
- (BOOL)_soundsEnabled;
- (BOOL)_usesCheckSelection;
- (long long)numberOfRowsInSection:(long long)section;
- (id)cellForRowAtIndexPath:(id)path;
- (void)reloadData;
- (void)beginUpdates;
- (void)endUpdates;
- (void)setAllowsMultipleSelection:(BOOL)selection;
- (void)_moveTableViewIfNecessary:(id)necessary toContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)_pickerTableViewDidChangeContentOffset:(id)offset;
- (void)pickerTableView:(id)view didChangeSelectionBarRowFrom:(long long)from to:(long long)to;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_visibleGlobalRows;
- (id)_allVisibleCells;
- (id)_visibleCellClosestToPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (long long)tableView:(id)view numberOfRowsInSection:(long long)section;
- (id)tableView:(id)view cellForRowAtIndexPath:(id)path;
- (BOOL)canBecomeFocused;
- (id)_systemDefaultFocusGroupIdentifier;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_defaultFocusRegionFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityFrame;
- (id)_viewToAddFocusLayer;
- (void)_setTextColor:(id)color;
@end

#endif /* UIPickerColumnView_h */
