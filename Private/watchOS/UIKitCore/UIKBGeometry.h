//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIKBGeometry_h
#define UIKBGeometry_h
@import Foundation;

#include "NSCoding-Protocol.h"
#include "NSCopying-Protocol.h"

@class NSString;

@interface UIKBGeometry : NSObject<NSCoding, NSCopying> {
  /* instance variables */
  NSString *m_name;
  struct { double amount; int unit; } m_x;
  struct { double amount; int unit; } m_y;
  struct { double amount; int unit; } m_w;
  struct { double amount; int unit; } m_h;
  struct { double amount; int unit; } m_paddingTop;
  struct { double amount; int unit; } m_paddingLeft;
  struct { double amount; int unit; } m_paddingBottom;
  struct { double amount; int unit; } m_paddingRight;
  BOOL m_explicitlySpecified;
  BOOL m_isTemplate;
}

@property (retain, nonatomic) NSString *name;
@property (nonatomic) struct { double x0; int x1; } x;
@property (nonatomic) struct { double x0; int x1; } y;
@property (nonatomic) struct { double x0; int x1; } w;
@property (nonatomic) struct { double x0; int x1; } h;
@property (nonatomic) struct { double x0; int x1; } paddingTop;
@property (nonatomic) struct { double x0; int x1; } paddingLeft;
@property (nonatomic) struct { double x0; int x1; } paddingBottom;
@property (nonatomic) struct { double x0; int x1; } paddingRight;
@property (nonatomic) BOOL explicitlySpecified;
@property (nonatomic) BOOL isTemplate;

/* class methods */
+ (id)geometry;
+ (id)geometryWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
+ (id)geometryWithOriginValue:(struct { double x0; int x1; })value sizeValue:(struct { double x0; int x1; })value;
+ (id)codeStringForValue:(struct { double x0; int x1; })value;
+ (void)performOperations:(id /* block */)operations withScale:(double)scale;

/* instance methods */
- (id)initWithName:(id)name rect:(struct { struct { double x00; int x1; } x[4] })rect padding:(struct { struct { double x00; int x1; } x[4] })padding;
- (id)initTemplateWithName:(id)name rect:(struct { struct { double x00; int x1; } x[4] })rect padding:(struct { struct { double x00; int x1; } x[4] })padding;
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (id)description;
- (id)shortDescription;
- (unsigned long long)hash;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameWithContainingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })paddedFrameWithContainingFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })paddedFrameWithResolvedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)overrideGeometry:(id)geometry;
- (BOOL)usesPercentages;
- (BOOL)usesAutomaticMetrics;
@end

#endif /* UIKBGeometry_h */
