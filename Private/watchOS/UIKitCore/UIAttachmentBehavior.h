//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIAttachmentBehavior_h
#define UIAttachmentBehavior_h
@import Foundation;

#include "UIDynamicBehavior.h"
#include "PKExtendedPhysicsBody.h"

@class NSArray, PKPhysicsJoint;

@interface UIAttachmentBehavior : UIDynamicBehavior {
  /* instance variables */
  struct CGPoint { double x; double y; } _anchorPointA;
  struct CGPoint { double x; double y; } _anchorPointB;
  PKExtendedPhysicsBody *_anchorBody;
  PKPhysicsJoint *_joint;
  struct CGVector { double dx; double dy; } _axis;
  unsigned long long _attachmentType;
  long long _type;
  struct { unsigned int x :1 dampingSet; unsigned int x :1 frequencySet; unsigned int x :1 lengthSet; unsigned int x :1 rangeSet; unsigned int x :1 frictionTorqueSet; unsigned int x :1 isRevolute; } _stateFlags;
}

@property (readonly, copy, nonatomic) NSArray *items;
@property (readonly, nonatomic) long long attachedBehaviorType;
@property (nonatomic) struct CGPoint { double x0; double x1; } anchorPoint;
@property (nonatomic) double length;
@property (nonatomic) double damping;
@property (nonatomic) double frequency;
@property (nonatomic) double frictionTorque;
@property (nonatomic) struct { double x0; double x1; } attachmentRange;

/* class methods */
+ (BOOL)_isPrimitiveBehavior;
+ (id)slidingAttachmentWithItem:(id)item attachedToItem:(id)item attachmentAnchor:(struct CGPoint { double x0; double x1; })anchor axisOfTranslation:(struct CGVector { double x0; double x1; })translation;
+ (id)slidingAttachmentWithItem:(id)item attachmentAnchor:(struct CGPoint { double x0; double x1; })anchor axisOfTranslation:(struct CGVector { double x0; double x1; })translation;
+ (id)limitAttachmentWithItem:(id)item offsetFromCenter:(struct UIOffset { double x0; double x1; })center attachedToItem:(id)item offsetFromCenter:(struct UIOffset { double x0; double x1; })center;
+ (id)fixedAttachmentWithItem:(id)item attachedToItem:(id)item attachmentAnchor:(struct CGPoint { double x0; double x1; })anchor;
+ (id)pinAttachmentWithItem:(id)item attachedToItem:(id)item attachmentAnchor:(struct CGPoint { double x0; double x1; })anchor;

/* instance methods */
- (void)_updateJointWithRange:(struct { double x0; double x1; })range;
- (id)init;
- (id)initWithItem:(id)item attachedToAnchor:(struct CGPoint { double x0; double x1; })anchor;
- (id)initWithItem:(id)item attachedToItem:(id)item;
- (id)initWithItem:(id)item point:(struct CGPoint { double x0; double x1; })point attachedToAnchor:(struct CGPoint { double x0; double x1; })anchor;
- (id)initWithItem:(id)item offsetFromCenter:(struct UIOffset { double x0; double x1; })center attachedToAnchor:(struct CGPoint { double x0; double x1; })anchor;
- (id)initWithItem:(id)item offsetFromCenter:(struct UIOffset { double x0; double x1; })center attachedToItem:(id)item offsetFromCenter:(struct UIOffset { double x0; double x1; })center;
- (id)initWithItem:(id)item point:(struct CGPoint { double x0; double x1; })point attachedToItem:(id)item point:(struct CGPoint { double x0; double x1; })point;
- (long long)type;
- (void)_changedParameter;
- (void)_reevaluateJoint;
- (void)_associate;
- (void)_dissociate;
- (id)description;
@end

#endif /* UIAttachmentBehavior_h */
