//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIWebPDFView_h
#define UIWebPDFView_h
@import Foundation;

#include "UIView.h"
#include "UIColor.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UIPDFAnnotationControllerDelegate-Protocol.h"
#include "UIPDFDocument.h"
#include "UIPDFPageViewDelegate-Protocol.h"
#include "UIPopoverControllerDelegate-Protocol.h"
#include "UITapGestureRecognizer.h"
#include "UIWebPDFViewDelegate-Protocol.h"
#include "WebPDFViewPlaceholderDelegate-Protocol.h"

@class NSArray, NSData, NSMutableArray, NSString, NSURL, WebPDFViewPlaceholder;

@interface UIWebPDFView : UIView<UIPDFPageViewDelegate, UIPDFAnnotationControllerDelegate, WebPDFViewPlaceholderDelegate, UIPopoverControllerDelegate, UIGestureRecognizerDelegate> {
  /* instance variables */
  NSMutableArray *_backingLayerImageViews;
  BOOL _hasScheduledCacheUpdate;
  BOOL _delegateRespondsToDidScroll;
  UITapGestureRecognizer *_tapGestureRecognizer;
  BOOL _rotating;
  BOOL _zooming;
  struct CGPoint { double x; double y; } _contentOffsetAtScrollStart;
  NSMutableArray *_pageViews;
}

@property WebPDFViewPlaceholder *pdfPlaceHolderView;
@property (retain, nonatomic) NSURL *documentURL;
@property (nonatomic) double initialZoomScale;
@property (retain, nonatomic) UIColor *backgroundColorForUnRenderedContent;
@property (nonatomic) BOOL hideActivityIndicatorForUnRenderedContent;
@property (nonatomic) BOOL hidePageViewsUntilReadyToRender;
@property (nonatomic) long long ignoreContentOffsetChanges;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } documentTransform;
@property (retain, nonatomic) NSString *documentPassword;
@property (readonly, nonatomic) double documentScale;
@property (retain, nonatomic) NSArray *pageRects;
@property (nonatomic) BOOL readyForSnapshot;
@property (retain, nonatomic) NSArray *pageMinYs;
@property (nonatomic) NSObject<UIWebPDFViewDelegate> *pdfDelegate;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } documentBounds;
@property (readonly, nonatomic) unsigned long long totalPages;
@property (readonly, nonatomic) struct CGPDFDocument * cgPDFDocument;
@property (readonly, nonatomic) UIPDFDocument *document;
@property (readonly, nonatomic) NSData *documentData;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (void)setAsPDFDocRepAndView;

/* instance methods */
- (BOOL)_hasPageRects;
- (id)uiPDFDocument;
- (id)initWithWebPDFViewPlaceholder:(id)placeholder;
- (void)_removeBackgroundImageObserverIfNeeded:(id)needed;
- (void)dealloc;
- (id)viewAtIndex:(long long)index;
- (id)viewportView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_viewportBoundsInUIVIewCoordsWithView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_viewportBoundsInUIViewCoords;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_viewCachingBoundsInUIViewCoords;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (id)_installViewAtIndex:(long long)index inFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_addSubViewsInViewCoordsBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds force:(BOOL)force;
- (id)_addPageAtIndex:(unsigned long long)index;
- (void)_removePageViewsNotInViewCoordsRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_removePageViewsNotInCurrentViewCoordsRect;
- (void)_scheduleRemovePageViewsNotInViewCoordsRect;
- (void)ensureCorrectPagesAreInstalled:(BOOL)installed;
- (void)willScroll:(id)scroll;
- (void)_didScroll;
- (void)didReceiveMemoryWarning:(id)warning;
- (void)willRotate:(id)rotate;
- (void)didRotate:(id)rotate;
- (void)willZoom:(id)zoom;
- (void)didZoom:(id)zoom;
- (unsigned long long)firstVisiblePageNumber;
- (void)prepareForSnapshot:(BOOL)snapshot;
- (void)snapshotComplete;
- (void)viewWillClose;
- (BOOL)_tryToUnlockDocumentWithPassword:(id)password;
- (BOOL)_checkIfDocumentNeedsUnlock;
- (void)_recreateUIPDFDocument;
- (void)didCompleteLayout;
- (void)zoom:(id)zoom to:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })to atPoint:(struct CGPoint { double x0; double x1; })point kind:(int)kind;
- (void)resetZoom:(id)zoom;
- (void)_didTouch:(id)touch inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect atPoint:(struct CGPoint { double x0; double x1; })point linkingToURL:(id)url;
- (void)_didTouch:(id)touch inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect atPoint:(struct CGPoint { double x0; double x1; })point linkingToPageIndex:(unsigned long long)index;
- (void)_didLongPress:(id)press inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect atPoint:(struct CGPoint { double x0; double x1; })point linkingToURL:(id)url;
- (void)_didLongPress:(id)press inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect atPoint:(struct CGPoint { double x0; double x1; })point linkingToPageIndex:(unsigned long long)index;
- (void)annotation:(id)annotation wasTouchedAtPoint:(struct CGPoint { double x0; double x1; })point controller:(id)controller;
- (void)annotation:(id)annotation isBeingPressedAtPoint:(struct CGPoint { double x0; double x1; })point controller:(id)controller;
- (void)clearSelection;
- (id)_pageWithSelection;
- (id)_selection;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (void)_define:(id)_define;
- (void)_translate:(id)_translate;
- (void)_share:(id)_share;
- (void)_tapGestureRecognized:(id)recognized;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (unsigned long long)_pageNumberForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)imageForContactRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect onPageInViewRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect destinationRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
@end

#endif /* UIWebPDFView_h */
