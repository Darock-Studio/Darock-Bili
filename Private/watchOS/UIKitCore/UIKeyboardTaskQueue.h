//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIKeyboardTaskQueue_h
#define UIKeyboardTaskQueue_h
@import Foundation;

#include "UIKeyboardTaskEntry.h"
#include "UIKeyboardTaskExecutionContext.h"

@class NSArray, NSConditionLock, NSMutableArray;

@interface UIKeyboardTaskQueue : NSObject {
  /* instance variables */
  BOOL _executingOnMainThread;
  NSConditionLock *_lock;
  NSMutableArray *_tasks;
  NSMutableArray *_deferredTasks;
  UIKeyboardTaskEntry *_mainThreadContinuation;
}

@property (retain, nonatomic) UIKeyboardTaskExecutionContext *executionContext;
@property (retain, nonatomic) NSArray *activeOriginator;

/* instance methods */
- (id)scheduleTask:(id /* block */)task timeInterval:(double)interval repeats:(BOOL)repeats;
- (id)init;
- (void)lock;
- (void)lockWhenReadyForMainThread;
- (BOOL)tryLockWhenReadyForMainThread;
- (void)unlock;
- (void)continueExecutionOnMainThread;
- (void)finishExecution;
- (void)performTaskOnMainThread:(id /* block */)thread waitUntilDone:(BOOL)done;
- (void)performDeferredTaskIfIdle;
- (void)promoteDeferredTaskIfIdle;
- (void)addTask:(id /* block */)task;
- (id)addAndReturnTask:(id /* block */)task;
- (void)addDeferredTask:(id /* block */)task;
- (void)waitUntilAllTasksAreFinished;
- (BOOL)isEmpty;
- (void)performTask:(id /* block */)task;
- (void)waitUntilTaskIsFinished:(id)finished;
- (void)performSingleTask:(id /* block */)task;
- (BOOL)isMainThreadExecutingTask;
@end

#endif /* UIKeyboardTaskQueue_h */
