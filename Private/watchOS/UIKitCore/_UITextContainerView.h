//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UITextContainerView_h
#define _UITextContainerView_h
@import Foundation;

#include "UIView.h"
#include "NSUITextViewCommonMethods-Protocol.h"
#include "UIColor.h"
#include "UIScrollView.h"
#include "UITextView.h"
#include "_UITextContainerViewDelegate-Protocol.h"
#include "_UITextViewCanvasViewContext-Protocol.h"

@class NSDictionary, NSLayoutManager, NSString, NSTextContainer;
@protocol UIView<_UITextCanvas, _UITextLayoutControllerBase<_UITextLayoutController;

@interface _UITextContainerView : UIView<NSUITextViewCommonMethods, _UITextViewCanvasViewContext> {
  /* instance variables */
  NSDictionary *_linkTextAttributes;
  unsigned long long _invalidationSeqNo;
  long long _invalidationSeqClipsToBounds;
  struct { unsigned int x :1 textContainerOriginInvalid; unsigned int x :2 verticalLayout; unsigned int x :1 horizontallyResizable; unsigned int x :1 verticallyResizable; unsigned int x :1 freezeTextContainerSize; unsigned int x :1 usesStandardTextScaling; } _tcvFlags;
  UITextView *_textView;
}

@property (weak, nonatomic) NSTextContainer *textContainer;
@property (readonly, nonatomic) _UITextLayoutControllerBase<_UITextLayoutController> *textLayoutController;
@property (weak, nonatomic) NSObject<_UITextContainerViewDelegate> *delegate;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } textContainerOrigin;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } textContainerInset;
@property (nonatomic) BOOL horizontallyResizable;
@property (nonatomic) BOOL verticallyResizable;
@property (nonatomic) struct CGSize { double x0; double x1; } minSize;
@property (nonatomic) struct CGSize { double x0; double x1; } maxSize;
@property (readonly, nonatomic) UIView<_UITextCanvas> *canvasView;
@property (nonatomic) BOOL usesStandardTextScaling;
@property (nonatomic) BOOL freezeTextContainerSize;
@property (readonly, nonatomic) NSLayoutManager *layoutManager;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } markedRange;
@property (readonly, nonatomic) NSDictionary *markedTextStyle;
@property (readonly, nonatomic) long long layoutOrientation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIColor *textColor;
@property (readonly, nonatomic) UIScrollView *enclosingScrollView;
@property (readonly, nonatomic) BOOL editable;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } drawingScale;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _clipRectForFadedEdges;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame textLayoutController:(id)controller textContainer:(id)container delegate:(id)delegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)linkTextAttributes;
- (id)linkAttributesForLink:(id)link forCharacterAtIndex:(unsigned long long)index;
- (void)tintColorDidChange;
- (void)setBackgroundColor:(id)color;
- (BOOL)_freezeTextContainerSize;
- (void)_setFreezeTextContainerSize:(BOOL)size;
- (BOOL)reconfigureWithLayoutManager:(id)manager triggeredBySelector:(SEL)selector;
- (void)invalidateTextContainerOrigin;
- (void)_ensureMinAndMaxSizesConsistentWithBounds;
- (void)_setFrameOrBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds oldRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect isFrameRect:(BOOL)rect settingAction:(id /* block */)action;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_setNeedsContentsFormatUpdate;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setConstrainedFrameSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)isHorizontallyResizable;
- (BOOL)isVerticallyResizable;
- (void)_sizeToConstrainedContainerUsedRect;
- (void)sizeToFit;
- (BOOL)_shouldCapSizeToFitLayoutRange:(out struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (BOOL)_ensureLayoutForCappedSize;
- (void)updateInsertionPointStateAndRestartTimer:(BOOL)timer;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect avoidAdditionalLayout:(BOOL)layout;
- (void)willMoveToSuperview:(id)superview;
- (BOOL)isEditable;
- (void)textContainerUsageDidChangeToSize:(struct CGSize { double x0; double x1; })size;
- (void)didAddTextAttachmentViews:(id)views;
- (void)didLayoutTextAttachmentView:(id)view inFragmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)didRemoveTextAttachmentViews:(id)views;
- (BOOL)drawTextInRectIfNeeded:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })needed;
- (void)layoutSubviews;
- (void)_ensureLayoutCompleteToEndOfCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)_ensureLayoutCompleteForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)layoutManager:(id)manager effectiveCUICatalogForTextEffect:(id)effect;
- (id)attributedSubstringForMarkedRange;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleRect;
@end

#endif /* _UITextContainerView_h */
