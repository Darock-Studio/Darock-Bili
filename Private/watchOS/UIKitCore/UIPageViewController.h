//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIPageViewController_h
#define UIPageViewController_h
@import Foundation;

#include "UIViewController.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UIPanGestureRecognizer.h"
#include "UITapGestureRecognizer.h"
#include "_UIPageCurl.h"
#include "_UIQueuingScrollViewDataSource-Protocol.h"
#include "_UIQueuingScrollViewDelegate-Protocol.h"

@class NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSString;
@protocol UIPageViewControllerDataSource, UIPageViewControllerDelegate;

@interface UIPageViewController : UIViewController<UIGestureRecognizerDelegate, _UIQueuingScrollViewDelegate, _UIQueuingScrollViewDataSource> {
  /* instance variables */
  BOOL _pageControlRequiresValidation;
  _UIPageCurl *_pageCurl;
  UIPanGestureRecognizer *_panGestureRecognizer;
  UITapGestureRecognizer *_tapGestureRecognizer;
  BOOL _stashingViewControllersForRotation;
  NSArray *_viewControllersStashedForRotation;
  BOOL _interfaceRotating;
  NSMutableArray *_rotationSnapshotViews;
  long long _spineLocationPriorToInterfaceRotation;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _tapRegionInsets;
  struct CGSize { double width; double height; } _tapRegionBreadths;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _effectiveTapRegionInsets;
  struct CGSize { double width; double height; } _effectiveTapRegionBreadths;
  struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } * _tapRegions;
  double _pageSpacing;
  NSMutableDictionary *_cachedViewControllersForCurl;
  NSHashTable *_cachedViewControllersForScroll;
  NSDictionary *_incomingAndOutgoingViewControllersForManualTransition;
  long long _lastKnownNavigationDirection;
  long long _disableAutorotationCount;
  struct { unsigned int x :1 delegateWantsTransitionWillBegin; unsigned int x :1 delegateWantsTransitionCompleted; unsigned int x :1 delegateWantsTransitionsFinished; unsigned int x :1 delegateCustomizesSpineLocationForInterfaceOrientation; unsigned int x :1 delegateSupportedInterfaceOrientations; unsigned int x :1 delegatePreferredInterfaceOrientationForPresentation; unsigned int x :1 dataSourceSuppliesBeforeViewController; unsigned int x :1 dataSourceSuppliesAfterViewController; unsigned int x :1 dataSourceSuppliesPageCount; unsigned int x :1 dataSourceSuppliesPageNumber; } _delegateFlags;
  NSObject<UIPageViewControllerDataSource> *_unsafeUnretainedDataSource;
  NSObject<UIPageViewControllerDelegate> *_unsafeUnretainedDelegate;
}

@property (readonly, nonatomic) long long _transitionStyle;
@property (readonly, nonatomic) long long _navigationOrientation;
@property (retain, nonatomic) NSArray *_viewControllers;
@property (retain, nonatomic) NSArray *_viewControllersStashedForRotation;
@property (readonly, nonatomic) BOOL _pageControlVisible;
@property (readonly, nonatomic) _UIPageViewControllerContentView *_contentView;
@property (readonly, nonatomic) _UIQueuingScrollView *_scrollView;
@property (nonatomic) double _pageSpacing;
@property (readonly, nonatomic) BOOL _interfaceRotating;
@property (weak, nonatomic) NSObject<UIPageViewControllerDelegate> *delegate;
@property (weak, nonatomic) NSObject<UIPageViewControllerDataSource> *dataSource;
@property (readonly, nonatomic) long long transitionStyle;
@property (readonly, nonatomic) long long navigationOrientation;
@property (readonly, nonatomic) long long spineLocation;
@property (nonatomic) BOOL doubleSided;
@property (readonly, nonatomic) NSArray *gestureRecognizers;
@property (readonly, nonatomic) NSArray *viewControllers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_isSupportedTransitionStyle:(long long)style;
+ (BOOL)_isNavigationOrientation:(long long)orientation supportedForTransitionStyle:(long long)style;
+ (BOOL)_isSpineLocation:(long long)location supportedForTransitionStyle:(long long)style;
+ (BOOL)doesOverridePreferredInterfaceOrientationForPresentation;
+ (id)stringForSpineLocation:(long long)location;
+ (id)_outgoingViewControllerKeys;
+ (id)_incomingViewControllerKeys;

/* instance methods */
- (id)initWithTransitionStyle:(long long)style navigationOrientation:(long long)orientation options:(id)options;
- (id)initWithNibName:(id)name bundle:(id)bundle;
- (BOOL)_shouldPersistViewWhenCoding;
- (id)preferredFocusedView;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)dealloc;
- (void)_setSpineLocation:(long long)location;
- (BOOL)isDoubleSided;
- (void)_invalidateEffectiveTapRegions;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_effectiveTapRegionInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_tapRegionInsets;
- (void)_setTapRegionInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (struct CGSize { double x0; double x1; })_effectiveTapRegionBreadths;
- (struct CGSize { double x0; double x1; })_tapRegionBreadths;
- (void)_setTapRegionBreadths:(struct CGSize { double x0; double x1; })breadths;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_disabledScrollingRegion;
- (void)_setDisabledScrollingRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })region;
- (BOOL)_isPageControlVisible;
- (id)_pageControl;
- (struct CGSize { double x0; double x1; })_contentSizeForSize:(struct CGSize { double x0; double x1; })size;
- (void)_setPageSpacing:(double)spacing;
- (void)loadView;
- (void)viewWillUnload;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (BOOL)shouldAutomaticallyForwardRotationMethods;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_edgeInsetsForChildViewController:(id)controller insetsAreAbsolute:(BOOL *)absolute;
- (void)_marginInfoForChild:(id)child leftMargin:(double *)margin rightMargin:(double *)margin;
- (void)_child:(id)_child beginAppearanceTransition:(BOOL)transition animated:(BOOL)animated;
- (BOOL)_child:(id)_child canBeginAppearanceTransition:(BOOL)transition;
- (void)_child:(id)_child beginAppearanceTransitionIfPossible:(BOOL)possible animated:(BOOL)animated;
- (void)_childEndAppearanceTransition:(id)transition;
- (BOOL)_childCanEndAppearanceTransition:(id)transition;
- (void)_child:(id)_child endAppearanceTransitionIfPossible:(BOOL)possible;
- (void)_child:(id)_child willRotateToInterfaceOrientation:(long long)orientation duration:(double)duration;
- (void)_child:(id)_child willAnimateRotationToInterfaceOrientation:(long long)orientation duration:(double)duration;
- (void)_child:(id)_child didRotateFromInterfaceOrientation:(long long)orientation;
- (void)_sendChildViewWill:(BOOL)will appear:(BOOL)appear animated:(BOOL)animated;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (BOOL)shouldAutorotateToInterfaceOrientation:(long long)orientation;
- (unsigned long long)supportedInterfaceOrientations;
- (BOOL)_hasPreferredInterfaceOrientationForPresentation;
- (long long)preferredInterfaceOrientationForPresentation;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_validRangeForPresentationOfViewControllersWithSpineLocation:(long long)location;
- (id)_validatedViewControllersForPresentationOfViewControllers:(id)controllers validRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)_viewControllersForPendingSpineLocation:(long long)location;
- (void)_invalidatePageCurl;
- (long long)_requestSpineLocationForInterfaceOrientationAndUpdateStashedViewControllers:(long long)controllers;
- (void)willRotateToInterfaceOrientation:(long long)orientation duration:(double)duration;
- (void)willAnimateRotationToInterfaceOrientation:(long long)orientation duration:(double)duration;
- (void)didRotateFromInterfaceOrientation:(long long)orientation;
- (void)_contentViewFrameOrBoundsDidChange;
- (BOOL)_isCurrentViewControllerStateValid;
- (id)_validatedViewControllersForTransitionWithViewControllers:(id)controllers animated:(BOOL)animated;
- (BOOL)_canHandleGestures;
- (id)_viewControllerBefore:(BOOL)before viewController:(id)controller;
- (id)_viewControllerBeforeViewController:(id)controller;
- (id)_viewControllerAfterViewController:(id)controller;
- (id)_viewControllersForCurlWithViewControllers:(id)controllers direction:(long long)direction;
- (void)_populateOutgoingViewControllersInMap:(id)map;
- (void)_populateIncomingViewControllersInMap:(id)map withViewControllers:(id)controllers forCurlInDirection:(long long)direction;
- (void)_invalidateViewControllersStashedForCurlFromDataSource;
- (void)_beginDisablingInterfaceAutorotation;
- (void)_endDisablingInterfaceAutorotation;
- (void)_setViewControllers:(id)controllers withCurlOfType:(long long)type fromLocation:(struct CGPoint { double x0; double x1; })location direction:(long long)direction animated:(BOOL)animated notifyDelegate:(BOOL)delegate completion:(id /* block */)completion;
- (void)_cacheViewControllerForScroll:(id)scroll;
- (void)_setViewControllers:(id)controllers withScrollInDirection:(long long)direction animated:(BOOL)animated completion:(id /* block */)completion;
- (void)setViewControllers:(id)controllers direction:(long long)direction animated:(BOOL)animated completion:(id /* block */)completion;
- (id)_deepestActionResponder;
- (id)_incomingViewControllersForGestureDrivenCurlInDirection:(long long)direction;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)_tapRegions;
- (BOOL)_shouldNavigateInDirection:(long long *)direction inResponseToTapGestureRecognizer:(id)recognizer;
- (BOOL)_shouldFlipInRightToLeft;
- (BOOL)_shouldNavigateInDirection:(long long *)direction inResponseToVelocity:(double *)velocity ofGestureRecognizedByPanGestureRecognizer:(id)recognizer;
- (BOOL)_shouldBeginNavigationInDirection:(long long *)direction inResponseToPanGestureRecognizer:(id)recognizer;
- (BOOL)_gestureRecognizerShouldBegin:(id)begin;
- (long long)_navigationEndDirectionInResponseToPanGestureRecognizer:(id)recognizer suggestedVelocity:(double *)velocity;
- (BOOL)_shouldCompleteManualCurlWithSuggestedVelocity:(double *)velocity;
- (void)_handlePanGesture:(id)gesture;
- (void)_handleTapGesture:(id)gesture;
- (void)_handlePagingInDirection:(long long)direction animated:(BOOL)animated completion:(id /* block */)completion;
- (void)_updatePageControlViaDataSourceIfNecessary;
- (void)queuingScrollView:(id)view willManuallyScroll:(BOOL)scroll toRevealView:(id)view concealView:(id)view animated:(BOOL)animated;
- (void)queuingScrollView:(id)view didCommitManualScroll:(BOOL)scroll toRevealView:(id)view concealView:(id)view direction:(long long)direction animated:(BOOL)animated canComplete:(BOOL)complete;
- (void)queuingScrollView:(id)view didEndManualScroll:(BOOL)scroll toRevealView:(id)view direction:(long long)direction animated:(BOOL)animated didFinish:(BOOL)finish didComplete:(BOOL)complete;
- (void)queuingScrollView:(id)view didBailoutOfScrollAndRevealedView:(id)view;
- (void)queuingScrollViewDidFinishScrolling:(id)scrolling;
- (id)_queuingScrollView:(id)view viewBefore:(BOOL)before view:(id)view;
- (id)queuingScrollView:(id)view viewBeforeView:(id)view;
- (id)queuingScrollView:(id)view viewAfterView:(id)view;
- (void)_flushViewController:(id)controller animated:(BOOL)animated;
- (void)queuingScrollView:(id)view didFlushView:(id)view animated:(BOOL)animated;
- (void)queuingScrollView:(id)view attemptToPageInDirection:(long long)direction;
- (BOOL)queuingScrollViewShouldLayoutSubviews:(id)subviews;
- (void)_pageControlValueChanged:(id)changed;
- (void)_setViewControllers:(id)controllers;
- (void)_setViewControllersStashedForRotation:(id)rotation;
- (BOOL)_isInterfaceRotating;
@end

#endif /* UIPageViewController_h */
