//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIToolbarButton_h
#define UIToolbarButton_h
@import Foundation;

#include "UIControl.h"
#include "UIColor.h"
#include "UILabel.h"
#include "_UIToolbarNavigationButton.h"

@interface UIToolbarButton : UIControl {
  /* instance variables */
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _hitRect;
  _UIToolbarNavigationButton *_info;
  UILabel *_label;
  long long _barStyle;
  long long _style;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _glowAdjust;
  BOOL _onState;
  BOOL _barHeight;
  BOOL _bezel;
  double _minimumWidth;
  double _maximumWidth;
  double _labelHeight;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _infoInsets;
  UIColor *_toolbarTintColor;
  id _appearanceStorage;
  BOOL _isInTopBar;
  Class _appearanceGuideClass;
}

@property (retain, nonatomic) UIColor *_tintColor;
@property (nonatomic) Class _appearanceGuideClass;
@property (nonatomic) BOOL _createdByBarButtonItem;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _additionalSelectionInsets;

/* class methods */
+ (id)defaultButtonFont;
+ (id)_defaultLabelFont;
+ (id)_defaultLabelColor;

/* instance methods */
- (void)_setInTopBar:(BOOL)bar;
- (id)initWithImage:(id)image pressedImage:(id)image label:(id)label labelHeight:(double)height withBarStyle:(long long)style withStyle:(long long)style withInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets possibleTitles:(id)titles possibleSystemItems:(id)items withToolbarTintColor:(id)color bezel:(BOOL)bezel imageInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets glowInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets landscape:(BOOL)landscape;
- (void)dealloc;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)_setWantsBlendModeForAccessibilityBackgrounds:(BOOL)backgrounds;
- (BOOL)_showsAccessibilityBackgroundWhenEnabled;
- (BOOL)_wantsAccessibilityButtonShapes;
- (void)_setCreatedByBarButtonItem:(BOOL)item;
- (void)_sizeView:(id)view toPossibleTitles:(id)titles pressedTitle:(id)title;
- (void)setImage:(id)image;
- (void)_setButtonBarHitRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_buttonBarHitRect;
- (void)_setPressed:(BOOL)pressed;
- (void)setUseSelectedImage:(BOOL)image;
- (void)_setAdditionalSelectionInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (void)_setInfoWidth:(float)width;
- (void)_setInfoExtremityWidth:(float)width isMin:(BOOL)min;
- (void)_setInfoFlexibleWidth:(BOOL)width;
- (void)setEnabled:(BOOL)enabled;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside forEvent:(struct __GSEvent *)event;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (BOOL)pointMostlyInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test forEvent:(struct __GSEvent *)event;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (unsigned long long)_controlEventsForActionTriggered;
- (BOOL)_canHandleStatusBarTouchAtLocation:(struct CGPoint { double x0; double x1; })location;
- (void)_setLastHighlightSuccessful:(BOOL)successful;
- (void)_setTouchHasHighlighted:(BOOL)highlighted;
- (void)setHighlighted:(BOOL)highlighted;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (id)_customOrAccessibilityBackgroundImageForState:(unsigned long long)state style:(long long)style isMini:(BOOL)mini;
- (void)_adjustPushButtonForMiniBar:(BOOL)bar isChangingBarHeight:(BOOL)height;
- (void)layoutSubviews;
- (BOOL)_isBorderedOtherThanAccessibility;
- (BOOL)_isBordered;
- (BOOL)_infoIsButton;
- (BOOL)_canGetPadding;
- (BOOL)_shouldApplyPadding;
- (double)_paddingForLeft:(BOOL)left;
- (void)_setBarHeight:(float)height;
- (BOOL)_useBarHeight;
- (void)setToolbarTintColor:(id)color;
- (void)setBarStyle:(long long)style;
- (struct CGSize { double x0; double x1; })_defaultTitleShadowOffsetForState:(unsigned long long)state;
- (void)_updateShadowOffsetWithAttributes:(id)attributes forState:(unsigned long long)state;
- (void)_updateInfoTextColorsForState:(unsigned long long)state;
- (void)_adjustToolbarButtonInfo;
- (void)_adjustToolbarButtonInfoTintColorHasChanged:(BOOL)changed;
- (id)_info;
- (void)_UIAppearance_setBackgroundImage:(id)image forState:(unsigned long long)state style:(long long)style barMetrics:(long long)metrics;
- (void)_UIAppearance_setBackgroundImage:(id)image forState:(unsigned long long)state barMetrics:(long long)metrics;
- (void)_setBackgroundImage:(id)image forState:(unsigned long long)state style:(long long)style barMetrics:(long long)metrics;
- (void)_setBackgroundImage:(id)image forState:(unsigned long long)state barMetrics:(long long)metrics;
- (id)_backgroundImageForState:(unsigned long long)state barMetrics:(long long)metrics;
- (void)_UIAppearance_setTintColor:(id)color;
- (void)_setTintColor:(id)color;
- (void)_UIAppearance_setTitleTextAttributes:(id)attributes forState:(unsigned long long)state;
- (void)_setTitleTextAttributes:(id)attributes forState:(unsigned long long)state;
- (id)_titleTextAttributesForState:(unsigned long long)state;
- (void)_UIAppearance_setBackButtonBackgroundImage:(id)image forState:(unsigned long long)state barMetrics:(long long)metrics;
- (void)_setBackButtonBackgroundImage:(id)image forState:(unsigned long long)state barMetrics:(long long)metrics;
- (void)_UIAppearance_setBackgroundVerticalPositionAdjustment:(double)adjustment forBarMetrics:(long long)metrics;
- (void)_setBackgroundVerticalPositionAdjustment:(double)adjustment forBarMetrics:(long long)metrics;
- (double)_backgroundVerticalPositionAdjustmentForBarMetrics:(long long)metrics;
- (void)_UIAppearance_setTitlePositionAdjustment:(struct UIOffset { double x0; double x1; })adjustment forBarMetrics:(long long)metrics;
- (void)_setTitlePositionAdjustment:(struct UIOffset { double x0; double x1; })adjustment forBarMetrics:(long long)metrics;
- (struct UIOffset { double x0; double x1; })_titlePositionAdjustmentForBarMetrics:(long long)metrics;
- (void)_UIAppearance_setBackButtonBackgroundVerticalPositionAdjustment:(double)adjustment forBarMetrics:(long long)metrics;
- (void)_setBackButtonBackgroundVerticalPositionAdjustment:(double)adjustment forBarMetrics:(long long)metrics;
- (void)_UIAppearance_setBackButtonTitlePositionAdjustment:(struct UIOffset { double x0; double x1; })adjustment forBarMetrics:(long long)metrics;
- (void)_setBackButtonTitlePositionAdjustment:(struct UIOffset { double x0; double x1; })adjustment forBarMetrics:(long long)metrics;
- (void)_applyBarButtonAppearanceStorage:(id)storage withTaggedSelectors:(id)selectors;
- (BOOL)_accessibilityShouldActivateOnHUDLift;
- (void)_setAppearanceGuideClass:(Class)class;
@end

#endif /* UIToolbarButton_h */
