//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIFocusRegionMap_h
#define _UIFocusRegionMap_h
@import Foundation;

#include "UIFocusSystem.h"
#include "UIView.h"
#include "_UIFocusRegionMapSnapshot.h"

@interface _UIFocusRegionMap : NSObject

@property (retain, nonatomic) _UIFocusRegionMapSnapshot *lastSnapshot;
@property (weak, nonatomic) UIView *rootView;
@property (retain, nonatomic) UIFocusSystem *focusSystem;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } minimumSearchArea;

/* instance methods */
- (id)initWithRootView:(id)view focusSystem:(id)system;
- (id)nearestCandidateFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)_nearestCandidateForFocusMovement:(id)movement fromFocusedView:(id)view withFocusedRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect includingFocusedView:(BOOL)view;
- (id)linearlyOrderedCandidatesForFocusMovement:(id)movement fromView:(id)view indexForFocusedView:(unsigned long long *)view;
- (id)linearlyOrderedFocusRegionMapEntriesForFocusMovement:(id)movement fromView:(id)view;
- (id)_closestFocusableRegionInArray:(id)array toPoint:(struct CGPoint { double x0; double x1; })point usingHeading:(unsigned long long)heading withFocusedView:(id)view consideringFavoredRegion:(BOOL)region includingFocusedView:(BOOL)view;
- (struct CGPoint { double x0; double x1; })_focusCandidateSearchOriginForFocusedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame heading:(unsigned long long)heading minimumSearchArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })area;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_focusCandidateSearchRectForFocusedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame heading:(unsigned long long)heading minimumSearchArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })area;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectThatJustBarelyIntersectsRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect startingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_viewSearchRectForSnapshotRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_viewSearchRectForFocusedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame focusCandidateSearchRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect includesFocusedFrame:(BOOL)frame;
- (id)_contextWithSourceView:(id)view focusedRegion:(id)region movement:(id)movement;
- (id)_contextWithSourceView:(id)view focusedContainerGuide:(id)guide movement:(id)movement;
- (id)debugQuickLookObject;
- (BOOL)_containsFocusableRegionForView:(id)view;
@end

#endif /* _UIFocusRegionMap_h */
