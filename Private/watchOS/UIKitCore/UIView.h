//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIView_h
#define UIView_h
@import Foundation;

#include "UIResponder.h"
#include "CALayerDelegate-Protocol.h"
#include "NSCoding-Protocol.h"
#include "NSISEngineDelegate-Protocol.h"
#include "NSISVariableDelegate-Protocol.h"
#include "UIAppearance-Protocol.h"
#include "UIAppearanceContainer-Protocol.h"
#include "UIBezierPath.h"
#include "UIColor.h"
#include "UICoordinateSpace-Protocol.h"
#include "UIDynamicItem-Protocol.h"
#include "UIFocusEffect.h"
#include "UIFocusEnvironment-Protocol.h"
#include "UIFocusItem-Protocol.h"
#include "UIFocusItemContainer-Protocol.h"
#include "UIFocusSystem.h"
#include "UIKBRenderConfig.h"
#include "UIKeyboardLayoutGuide.h"
#include "UIKeyboardSceneDelegate.h"
#include "UILayoutGuide.h"
#include "UILayoutItem_Internal-Protocol.h"
#include "UIPresentationController.h"
#include "UIResolvedShape.h"
#include "UIShape.h"
#include "UIStoryboardPreviewingSegueTemplateStorage.h"
#include "UITextEffectsOrdering-Protocol.h"
#include "UITraitChangeObservable-Protocol.h"
#include "UITraitChangeObservableInternal-Protocol.h"
#include "UITraitCollection.h"
#include "UITraitEnvironment-Protocol.h"
#include "UITraitOverrides-Protocol.h"
#include "UIView.h"
#include "UIViewAnimationInfo.h"
#include "UIViewController.h"
#include "UIVisualEffect.h"
#include "UIWindow.h"
#include "_UIFallbackEnvironment-Protocol.h"
#include "_UIFocusBehavior-Protocol.h"
#include "_UIFocusEnvironmentPrivate-Protocol.h"
#include "_UIFocusItemContainerInternal-Protocol.h"
#include "_UIFocusItemContainerPrivate-Protocol.h"
#include "_UIFocusItemDebuggable-Protocol.h"
#include "_UIFocusItemInternal-Protocol.h"
#include "_UIFocusItemPrivate-Protocol.h"
#include "_UIFocusRegionContainer-Protocol.h"
#include "_UIFocusRegionContainerInternal-Protocol.h"
#include "_UIGeometryChangeObserver-Protocol.h"
#include "_UIGestureOwning-Protocol.h"
#include "_UILayoutItem-Protocol.h"
#include "_UILegacyFocusRegion-Protocol.h"
#include "_UIMultilineTextContentSizing-Protocol.h"
#include "_UIPopoverPresentationControllerSourceItem_Internal-Protocol.h"
#include "_UIScrollViewScrollObserver_Internal-Protocol.h"
#include "_UITraitChangeRegistry.h"
#include "_UITraitEnvironmentInternal-Protocol.h"
#include "_UITraitOverrideDelegate-Protocol.h"
#include "_UIViewBackingAux.h"
#include "_UIViewLayoutEngineRelativeAlignmentRectOriginCache.h"
#include "_UIViewSubtreeMonitor-Protocol.h"

@class CALayer, NSArray, NSISEngine, NSISVariable, NSLayoutDimension, NSLayoutXAxisAnchor, NSLayoutYAxisAnchor, NSMapTable, NSMutableArray, NSMutableSet, NSString;

@interface UIView : UIResponder<_UIFallbackEnvironment, UILayoutItem_Internal, UITextEffectsOrdering, NSISVariableDelegate, _UILayoutItem, _UIMultilineTextContentSizing, NSISEngineDelegate, _UIScrollViewScrollObserver_Internal, _UIViewSubtreeMonitor, _UIGestureOwning, _UIPopoverPresentationControllerSourceItem_Internal, _UITraitEnvironmentInternal, _UITraitOverrideDelegate, _UIFocusItemInternal, _UIFocusItemContainerInternal, _UIFocusItemDebuggable, _UIFocusRegionContainerInternal, _UILegacyFocusRegion, _UIGeometryChangeObserver, UITraitChangeObservableInternal, _UIFocusEnvironmentPrivate, _UIFocusItemPrivate, _UIFocusItemContainerPrivate, _UIFocusRegionContainer, UITraitChangeObservable, NSCoding, UIAppearance, UIAppearanceContainer, UIDynamicItem, UITraitEnvironment, UICoordinateSpace, UIFocusItem, UIFocusItemContainer, CALayerDelegate> {
  /* instance variables */
  NSMutableArray *_constraintsExceptingSubviewAutoresizingConstraints;
  UITraitCollection *_cachedTraitCollection;
  UIViewAnimationInfo *_animationInfo;
  _UITraitChangeRegistry *_traitChangeRegistry;
  CALayer *_layerRetained;
  NSArray *_subviewCache;
  UIWindow *_window;
  struct { unsigned int x :1 userInteractionDisabled; unsigned int x :1 implementsDrawRect; unsigned int x :1 implementsDidScroll; unsigned int x :1 implementsMouseTracking; unsigned int x :1 implementsIntrinsicContentSize; unsigned int x :1 hasBackgroundColor; unsigned int x :1 hasBackgroundColorSystemColorName; unsigned int x :1 hasInteractionTintColor; unsigned int x :1 hasOverrideTintColor; unsigned int x :1 isOpaque; unsigned int x :1 becomeFirstResponderWhenCapable; unsigned int x :1 interceptMouseEvent; unsigned int x :1 isDeallocInitiated; unsigned int x :1 isInUIViewDealloc; unsigned int x :1 hasPreparedForWindowDealloc; unsigned int x :1 isFirstResponder; unsigned int x :1 isAncestorOfFirstResponder; unsigned int x :1 dontAutoresizeSubviews; unsigned int x :6 autoresizeMask; unsigned int x :1 patternBackground; unsigned int x :1 fixedBackgroundPattern; unsigned int x :1 dontAnimate; unsigned int x :1 superLayerIsView; unsigned int x :1 layerKitPatternDrawing; unsigned int x :1 multipleTouchEnabled; unsigned int x :1 exclusiveTouch; unsigned int x :1 hasViewController; unsigned int x :1 needsDidAppearOrDisappear; unsigned int x :1 deliversTouchesForGesturesToSuperview; unsigned int x :1 deliversPressesForGesturesToSuperview; unsigned int x :1 chargeEnabled; unsigned int x :1 skipsSubviewEnumeration; unsigned int x :1 needsDisplayOnBoundsChange; unsigned int x :1 hasTiledLayer; unsigned int x :1 hasContentSizeCategoryLimits; unsigned int x :1 traversalMark; unsigned int x :1 appearanceIsInvalid; unsigned int x :1 monitorsSubtree; unsigned int x :1 hostsAutolayoutEngine; unsigned int x :1 constraintsAreClean; unsigned int x :1 subviewLayoutConstraintsAreClean; unsigned int x :1 intrinsicContentSizeConstraintsAreClean; unsigned int x :1 strictDescendantNeedsDoubleUpdateConstraints; unsigned int x :1 strictDescendantNeedsDoubleUpdateConstraintsIsInvalid; unsigned int x :1 hasStoredLayoutEngineWidth; unsigned int x :1 determiningWidthForDoubleUpdateConstraints; unsigned int x :1 inSecondConstraintsPass; unsigned int x :1 potentiallyHasDanglyConstraints; unsigned int x :1 doesNotTranslateAutoresizingMaskIntoConstraints; unsigned int x :1 autolayoutIsClean; unsigned int x :1 autolayoutBoundsAreClean; unsigned int x :1 layoutFlushingDisabled; unsigned int x :1 layingOutFromConstraints; unsigned int x :1 wantsAutolayout; unsigned int x :1 subviewWantsAutolayout; unsigned int x :1 isApplyingValuesFromEngine; unsigned int x :1 autolayoutIsSendingSetBoundsWithNoChanges; unsigned int x :1 isResizingDueToParentResize; unsigned int x :1 isInLayoutSubviewsOrVCCallback; unsigned int x :1 isInAnimatedLayout; unsigned int x :1 isSubviewUpdatingAutoresizingConstraints; unsigned int x :1 isUpdatingConstraints; unsigned int x :1 isReapplyingStillActiveBrokenConstraints; unsigned int x :1 isSuppressingUnsatisfiableConstraintsLoggingForNestedLayoutEngines; unsigned int x :1 isHostingUpdateConstraintsPassDuringLayout; unsigned int x :1 isRunningEngineLevelConstraintsPass; unsigned int x :1 isUpdatingLayoutEngineHostConstraints; unsigned int x :1 isExpectingToFlushPendingLayoutChangeNotifications; unsigned int x :1 invalidatesIntrinsicContentSizeForSubviewAutoLayoutChanges; unsigned int x :1 systemLayoutFittingSizeNeedsUpdate; unsigned int x :1 systemLayoutFittingSizeNeedsUpdateInWholeSubtree; unsigned int x :1 isCalculatingSystemLayoutFittingSize; unsigned int x :1 suppressEncapsulationConstraints; unsigned int x :1 isFetchingSizeForTAMIC_NOEngineHost; unsigned int x :1 stayHiddenAwaitingReuse; unsigned int x :1 stayHiddenAfterReuse; unsigned int x :1 skippedLayoutWhileHiddenForReuse; unsigned int x :1 isPendingHiddenForAnimation; unsigned int x :1 hasMaskView; unsigned int x :1 isSettingMaskView; unsigned int x :1 hasVisualAltitude; unsigned int x :1 hasBackdropMaskViews; unsigned int x :5 backdropMaskViewFlags; unsigned int x :1 delaysTouchesForSystemGestures; unsigned int x :1 subclassShouldDelayTouchForSystemGestures; unsigned int x :1 hasMotionEffects; unsigned int x :2 backdropOverlayMode; unsigned int x :2 tintAdjustmentMode; unsigned int x :1 isReferenceView; unsigned int x :2 focusState; unsigned int x :1 hasUserInterfaceIdiom; unsigned int x :3 userInterfaceIdiom; unsigned int x :1 ancestorDefinesTintColor; unsigned int x :1 ancestorDefinesTintAdjustmentMode; unsigned int x :1 ancestorIgnoresInvertColors; unsigned int x :1 needsTraitCollectionDidChangePropagation; unsigned int x :1 isRootOfTraitCollectionDidChangePropagation; unsigned int x :1 implementsTraitCollectionForChildEnvironment; unsigned int x :1 implementsBaselineOffsetsAtSize; unsigned int x :1 coloredViewBounds; unsigned int x :1 coloredAlignmentRects; unsigned int x :4 preservesSuperviewMargins; unsigned int x :4 insettingLayoutMarginsFromSafeArea; unsigned int x :1 safeAreaInsetsFrozen; unsigned int x :1 viewDelegateContentOverlayInsetsAreClean; unsigned int x :1 hasGeometryObservers; unsigned int x :1 notifyObserversForBaselineChanges; unsigned int x :1 notifySuperviewForBaselineChanges; unsigned int x :4 observingGeometryChangesForSelfCount; unsigned int x :1 hasTraitStorageList; unsigned int x :1 cachedTraitCollectionIsValid; unsigned int x :1 hasTraitOverrides; unsigned int x :1 dontUpdateInferredLayoutMargins; unsigned int x :1 areLayoutMarginsDirectional; unsigned int x :1 implementsViewForBaselineLayout; unsigned int x :1 tracksFocusedAncestors; unsigned int x :1 hasLayoutArrangements; unsigned int x :1 isHiddenManagedByLayoutArrangement; unsigned int x :1 hasAddedFocusGuides; unsigned int x :1 hasFocusSpeedBumpEdges; unsigned int x :1 hasFocusableContentMargins; unsigned int x :1 focusInteractionDisabled; unsigned int x :1 shouldReverseLayoutDirection; unsigned int x :1 cannotBeParentTraitEnvironment; unsigned int x :1 needsContentsFormatUpdate; unsigned int x :1 accessibilityIgnoresInvertColors; unsigned int x :1 ignoresLayerTransformForSafeAreaInsets; unsigned int x :2 accessibilityInterfaceStyleIntent; unsigned int x :2 accessibilityResolvedInterfaceStyle; unsigned int x :1 shouldArchiveUIAppearanceTags; unsigned int x :1 wantsDeepColorDrawing; unsigned int x :3 preferredContentsFormat; unsigned int x :1 tagEnabled; unsigned int x :1 chargeSet; unsigned int x :1 ignoreBackdropViewsWhenHiding; unsigned int x :1 areChildrenFocused; unsigned int x :1 hasInteractionsArray; unsigned int x :1 hasHitTestDirectionalInsets; unsigned int x :1 hasLayoutDebuggingIdentifier; unsigned int x :1 hasContentSizeNotificationToken; unsigned int x :1 hasPresentationControllerToNotifyOnLayoutSubviews; unsigned int x :3 semanticContentAttribute; unsigned int x :1 hasDynamicBackgroundColor; unsigned int x :1 forceEffectiveThemeDidChange; unsigned int x :1 allowsHighContrastForBackgroundColor; unsigned int x :1 hasPendingTraitStorageConstraints; unsigned int x :1 hasPendingLayoutAfterTraitStorageConstraintsUpdate; unsigned int x :1 hasEverBeenInAWindow; unsigned int x :2 hasFocusGroupIdentifier; unsigned int x :1 hasFocusGroupPriority; unsigned int x :2 hasFocusEffect; unsigned int x :2 conformsToUIFocusItemScrollableContainer; unsigned int x :1 allowsSkippingLayout; unsigned int x :1 isResolvingTraitCollection; unsigned int x :1 needsLayoutAndDisplayOnTintColorChanges; unsigned int x :1 subviewNeedsAnimationRestorationMessage; unsigned int x :1 isHostingTrackingForAnimationRestoration; unsigned int x :1 implementsFocusItemsInRect; unsigned int x :1 isPrivateSubview; unsigned int x :1 shouldAdaptToMaterials; unsigned int x :1 useMinimumSafeArea; unsigned int x :1 useMinimumSafeAreaFrozen; unsigned int x :1 minimumSafeAreaAccessed; unsigned int x :1 minimumSafeAreaIsClassicSafeArea; unsigned int x :1 minimumSafeAreaNeedsUpdate; unsigned int x :1 mt_hasCustomizedCaptureGroup; unsigned int x :2 mt_backgroundMergeBehavior; unsigned int x :1 shouldContinueRemovingFromSuperview; unsigned int x :1 isMaskingIntermediateLayer; } _viewFlags;
  unsigned short _unsatisfiableConstraintsLoggingSuspensionCount;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _minimumSafeAreaInsets;
  _UIViewBackingAux *_viewBackingAux;
  unsigned short _tintAdjustmentDimmingCount;
  unsigned short _layoutSubviewsCount;
  unsigned short _imminentLayoutSubviewsCount;
  unsigned short _countOfFocusedAncestorTrackingViewsInSubtree;
  long long _sceneDraggingBehaviorOnPan;
  NSISVariable *_minXVariable;
  NSISVariable *_minYVariable;
  NSISVariable *_boundsWidthVariable;
  NSISVariable *_boundsHeightVariable;
  NSISEngine *_layoutEngine;
  NSMapTable *_stashedLayoutVariableObservations;
  NSMutableArray *_internalConstraints;
  unsigned long long __autoresizingMaskForPreviousAutoresizingLayoutConstraints;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _rawLayoutMargins;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _inferredLayoutMargins;
}

@property (nonatomic, readonly) UIShape *_outlineShape;
@property (nonatomic, readonly) UIResolvedShape *_resolvedOutlineShape;
@property (@dynamic, nonatomic) BOOL accessibilityIgnoresInvertColors;
@property (nonatomic) BOOL allowsGroupOpacity;
@property (nonatomic) BOOL allowsGroupBlending;
@property (copy, nonatomic) NSString *minimumContentSizeCategory;
@property (copy, nonatomic) NSString *maximumContentSizeCategory;
@property (readonly, copy, nonatomic) NSString *appliedContentSizeCategoryLimitsDescription;
@property (readonly) double _widthForButtonBarItemLayout;
@property (nonatomic) BOOL _flipsHorizontalAxis;
@property (readonly, nonatomic) UIKeyboardSceneDelegate *keyboardSceneDelegate;
@property (copy, nonatomic) UIVisualEffect *mt_visualEffect;
@property (copy, nonatomic) NSArray *mt_contentEffects;
@property (copy, nonatomic) NSArray *mt_backgroundEffects;
@property (copy, nonatomic) NSString *mt_captureGroupName;
@property (nonatomic) long long _overrideUserInterfaceRenderingMode;
@property (nonatomic) BOOL _shouldAdaptToMaterials;
@property (nonatomic) long long _backgroundMergeBehavior;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIKBRenderConfig *_inheritedRenderConfig;
@property (readonly, nonatomic) BOOL _lightStyleRenderConfig;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _accessoryViewFrame;
@property (readonly, nonatomic) struct CGVector { double x0; double x1; } _scaleFromLayerTransforms;
@property (readonly, nonatomic) BOOL _layoutHeightDependsOnWidth;
@property (readonly, nonatomic) unsigned long long _axesForDerivingIntrinsicContentSizeFromLayoutSize;
@property (readonly, nonatomic) BOOL _wantsConstraintBasedLayout;
@property (readonly, nonatomic) _UITouchForceObservable *_touchForceObservable;
@property (readonly, nonatomic) BOOL _StatusBar_isInVisibleHierarchy;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _ui_bounds;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _ui_frame;
@property (readonly, nonatomic) UIView *_ui_superview;
@property (readonly, nonatomic) UIView *_ui_view;
@property (nonatomic) BOOL _ui_usesManualLayout;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *leadingAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *trailingAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *leftAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *rightAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *topAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *bottomAnchor;
@property (readonly, nonatomic) NSLayoutDimension *widthAnchor;
@property (readonly, nonatomic) NSLayoutDimension *heightAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *centerXAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *centerYAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *firstBaselineAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *lastBaselineAnchor;
@property (readonly, nonatomic) UITraitCollection *traitCollection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long _keyboardOrientation;
@property (nonatomic) long long _disableLayoutFlushingCount;
@property (readonly, nonatomic) BOOL _isUnsatisfiableConstraintsLoggingSuspended;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *leadingAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *trailingAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *leftAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *rightAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *topAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *bottomAnchor;
@property (readonly, nonatomic) NSLayoutDimension *widthAnchor;
@property (readonly, nonatomic) NSLayoutDimension *heightAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *centerXAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *centerYAnchor;
@property unsigned long long nsli_piercingToken;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL enabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL skipsSubviewEnumeration;
@property (nonatomic) BOOL viewTraversalMark;
@property (readonly, nonatomic) UIViewController *viewDelegate;
@property (nonatomic) BOOL monitorsSubtree;
@property (readonly, nonatomic) double currentScreenScale;
@property (retain, nonatomic) UIView *maskView;
@property (nonatomic) long long _userInterfaceIdiom;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *gestureRecognizers;
@property (readonly, nonatomic) NSObject<_UIGestureOwning> *gestureParent;
@property (readonly, nonatomic) NSObject<_UIGestureOwning> *_actingGestureParent;
@property (readonly, nonatomic) NSArray *_nativeInteractions;
@property (readonly, nonatomic) UIWindow *_eventReceivingWindow;
@property (nonatomic) BOOL deliversTouchesForGesturesToSuperview;
@property (nonatomic) BOOL deliversPressesForGesturesToSuperview;
@property (readonly, nonatomic) BOOL _shouldReverseLayoutDirection;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *leadingAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *trailingAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *leftAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *rightAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *topAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *bottomAnchor;
@property (readonly, nonatomic) NSLayoutDimension *widthAnchor;
@property (readonly, nonatomic) NSLayoutDimension *heightAnchor;
@property (readonly, nonatomic) NSLayoutXAxisAnchor *centerXAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *centerYAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *firstBaselineAnchor;
@property (readonly, nonatomic) NSLayoutYAxisAnchor *lastBaselineAnchor;
@property (readonly, nonatomic) BOOL isBoundingPathNonRectangular;
@property (retain, nonatomic) _UIBoundingPath *boundingPath;
@property (readonly, nonatomic) _UIBoundingPath *boundingPathForSubtree;
@property (nonatomic) long long overrideUserInterfaceStyle;
@property (nonatomic) long long _overrideUserInterfaceStyle;
@property (nonatomic) long long _overrideVibrancyTrait;
@property (retain, nonatomic) UITraitCollection *_localOverrideTraitCollection;
@property (nonatomic) BOOL _disableDictationTouchCancellation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long _lfld_count;
@property (readonly, nonatomic) NSMutableArray *_lfld_geometryChangeRecords;
@property (readonly, nonatomic) NSMutableArray *_lfld_variableChangeRecords;
@property (readonly, nonatomic) NSMapTable *_lfld_constraintsAffectingVariableValueChanges;
@property (readonly, nonatomic) NSString *_lfld_currentLayoutMethodName;
@property (readonly, nonatomic) NSMutableSet *_lfld_setNeedsLayoutCallStacks;
@property (retain, nonatomic) NSISEngine *_layoutEngine;
@property (readonly, retain, nonatomic) NSISVariable *_boundsWidthVariable;
@property (readonly, retain, nonatomic) NSISVariable *_boundsHeightVariable;
@property (readonly, retain, nonatomic) NSISVariable *_minXVariable;
@property (readonly, retain, nonatomic) NSISVariable *_minYVariable;
@property (retain, nonatomic) NSMutableArray *_internalConstraints;
@property (readonly, retain, nonatomic) NSArray *_constraintsExceptingSubviewAutoresizingConstraints;
@property (@dynamic, nonatomic) BOOL _shouldArchiveUIAppearanceTags;
@property (readonly, @dynamic, nonatomic) UIView *_backdropMaskViewForGrayscaleTint;
@property (readonly, @dynamic, nonatomic) UIView *_backdropMaskViewForColorTint;
@property (readonly, @dynamic, nonatomic) UIView *_backdropMaskViewForFilters;
@property (readonly, @dynamic, nonatomic) NSArray *_backdropMaskViews;
@property (retain, nonatomic) id contentSizeNotificationToken;
@property (retain, nonatomic) UILayoutGuide *layoutMarginsGuide;
@property (retain, nonatomic) UILayoutGuide *readableContentGuide;
@property (nonatomic) BOOL _needsContentsFormatUpdate;
@property (@dynamic, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } hitTestInsets;
@property (@dynamic, nonatomic) struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; } hitTestDirectionalInsets;
@property (weak, nonatomic) NSISEngine *_activeSizeToFitLayoutEngine;
@property (nonatomic) BOOL _canBeParentTraitEnviroment;
@property (retain, nonatomic) UITraitCollection *_lastNotifiedTraitCollection;
@property (retain, nonatomic) UIStoryboardPreviewingSegueTemplateStorage *previewingSegueTemplateStorage;
@property (@dynamic, nonatomic) unsigned long long _countOfMotionEffectsInSubtree;
@property (retain, nonatomic) UIView *_maskView;
@property (weak, @dynamic, nonatomic) UIPresentationController *_presentationControllerToNotifyOnLayoutSubviews;
@property (nonatomic) BOOL _shouldNotifyGeometryObserversForBaselineChanges;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _rawLayoutMargins;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _inferredLayoutMargins;
@property (readonly, nonatomic) UILayoutGuide *safeAreaLayoutGuide;
@property (readonly, nonatomic) UIKeyboardLayoutGuide *keyboardLayoutGuide;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _frameIgnoringLayerTransform;
@property (nonatomic) BOOL _dontUpdateInferredLayoutMargins;
@property (readonly, nonatomic) BOOL _ignoreRemoveAllAnimations;
@property (retain, nonatomic) _UIViewLayoutEngineRelativeAlignmentRectOriginCache *_alignmentRectOriginCache;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } safeAreaInsets;
@property (readonly, nonatomic) BOOL safeAreaWidthExceedsReadableWidth;
@property (nonatomic) BOOL _viewDelegateContentOverlayInsetsAreClean;
@property (@dynamic, nonatomic) double _multilineContextWidth;
@property (nonatomic) BOOL focusInteractionEnabled;
@property (readonly, nonatomic) BOOL containedInHostedFocusSystem;
@property (readonly, nonatomic) UIFocusSystem *focusSystem;
@property (readonly, nonatomic) NSObject<_UIFocusBehavior> *focusBehavior;
@property (readonly, nonatomic) _UIFocusSystemSceneComponent *focusSystemSceneComponent;
@property (readonly, nonatomic) BOOL mayRemainFocused;
@property (nonatomic) BOOL _tracksFocusedAncestors;
@property (nonatomic) unsigned long long _countOfFocusedAncestorTrackingViewsInSubtree;
@property (readonly, nonatomic) NSMapTable *_stashedLayoutVariableObservations;
@property (readonly, retain, nonatomic) NSMutableArray *_mutableLayoutGuides;
@property (readonly, retain, nonatomic) NSMutableArray *_mutableLayoutArrangements;
@property (readonly, nonatomic) long long _hiddenManagedByLayoutArrangementCount;
@property (readonly, nonatomic) long long _pendingHiddenCount;
@property (readonly, @dynamic, nonatomic) BOOL _isInLayoutSubviews;
@property (nonatomic) long long compositingMode;
@property (retain, nonatomic) UIColor *interactionTintColor;
@property (copy, nonatomic) NSString *_layoutDebuggingIdentifier;
@property (nonatomic) double _continuousCornerRadius;
@property (nonatomic) double _cornerRadius;
@property (@dynamic, nonatomic) BOOL wantsDeepColorDrawing;
@property (nonatomic) BOOL _layoutMarginsGuideIgnoresSystemMinimumMargins;
@property (nonatomic) long long _sceneDraggingBehaviorOnPan;
@property (readonly, nonatomic) NSObject<UITraitOverrides> *traitOverrides;
@property (nonatomic) BOOL userInteractionEnabled;
@property (@dynamic, nonatomic) long long tag;
@property (readonly, @dynamic, nonatomic) CALayer *layer;
@property (readonly, nonatomic) BOOL canBecomeFocused;
@property (readonly, nonatomic) BOOL focused;
@property (copy, nonatomic) NSString *focusGroupIdentifier;
@property (nonatomic) long long focusGroupPriority;
@property (copy, nonatomic) UIFocusEffect *focusEffect;
@property (nonatomic) long long semanticContentAttribute;
@property (readonly, nonatomic) long long effectiveUserInterfaceLayoutDirection;
@property (readonly, nonatomic) UITraitCollection *traitCollection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long focusTouchSensitivityStyle;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frame;
@property (readonly, nonatomic) BOOL isTransparentFocusItem;
@property (readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
@property (readonly, weak, nonatomic) NSObject<UIFocusEnvironment> *parentFocusEnvironment;
@property (readonly, nonatomic) NSObject<UIFocusItemContainer> *focusItemContainer;
@property (readonly, weak, nonatomic) UIView *preferredFocusedView;
@property (readonly, weak, nonatomic) NSObject<_UIFocusRegionContainer> *focusMapContainer;
@property (nonatomic) BOOL areChildrenFocused;
@property (readonly, nonatomic) BOOL eligibleForFocusInteraction;
@property (readonly, nonatomic) BOOL eligibleForFocusOcclusion;
@property (readonly, nonatomic) long long preferredFocusMovementStyle;
@property (readonly, copy, nonatomic) NSArray *linearFocusMovementSequences;
@property (readonly, nonatomic) NSObject<UICoordinateSpace> *coordinateSpace;
@property (readonly, nonatomic) long long _focusItemDeferralMode;
@property (nonatomic) struct CGPoint { double x0; double x1; } center;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } transform;
@property (readonly, nonatomic) unsigned long long collisionBoundsType;
@property (readonly, nonatomic) UIBezierPath *collisionBoundingPath;

/* class methods */
+ (BOOL)_enableRTL;
+ (BOOL)_enableLegacyRTL;
+ (BOOL)_legacyRTLPreferenceEnabled;
+ (BOOL)_toolsDebugShouldDetectClippedViews;
+ (double)_durationForRotationFromInterfaceOrientation:(long long)orientation toInterfaceOrientation:(long long)orientation withBaseDuration:(double)duration;
+ (void)_registerClassForIdiomInitializationIfNeccessary;
+ (void)_initializeForIdiom:(long long)idiom;
+ (void)_beginDisablingPromoteDescendantToFirstResponder;
+ (void)_endDisablingPromoteDescendantToFirstResponder;
+ (void)_animateWithFrictionBounceAnimations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateUsingSpringInteractive:(BOOL)interactive animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateUsingSpringWithTension:(double)tension friction:(double)friction interactive:(BOOL)interactive animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateUsingSpringBehavior:(id)behavior tracking:(BOOL)tracking animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateUsingSpringWithDampingRatio:(double)ratio response:(double)response tracking:(BOOL)tracking dampingRatioSmoothing:(double)smoothing responseSmoothing:(double)smoothing targetSmoothing:(double)smoothing projectionDeceleration:(double)deceleration animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateUsingSpringWithDampingRatio:(double)ratio response:(double)response tracking:(BOOL)tracking dampingRatioSmoothing:(double)smoothing responseSmoothing:(double)smoothing targetSmoothing:(double)smoothing projectionDeceleration:(double)deceleration retargetImpulse:(double)impulse animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateUsingSpringWithDampingRatio:(double)ratio response:(double)response tracking:(BOOL)tracking initialDampingRatio:(double)ratio initialResponse:(double)response dampingRatioSmoothing:(double)smoothing responseSmoothing:(double)smoothing targetSmoothing:(double)smoothing projectionDeceleration:(double)deceleration animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateByRetargetingAnimations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_performWithoutRetargetingAnimations:(id /* block */)animations;
+ (void)_animateWithAnimationAndComposerGetter:(id /* block */)getter animations:(id /* block */)animations completion:(id /* block */)completion animationStateSetup:(id /* block */)setup;
+ (void)_animateWithAnimationAndComposerGetter:(id /* block */)getter animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)animateBridgedWithContext:(id)context animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_createTransformerWithInputAnimatableProperties:(id)properties modelValueSetter:(id /* block */)setter presentationValueSetter:(id /* block */)setter;
+ (void)_createUnsafeTransformerWithInputAnimatableProperties:(id)properties modelValueSetter:(id /* block */)setter presentationValueSetter:(id /* block */)setter;
+ (void)_createTransformerWithInputAnimatableProperties:(id)properties presentationValueChangedCallback:(id /* block */)callback;
+ (void)_animateUsingSpringWithDuration:(double)duration delay:(double)delay options:(unsigned long long)options mass:(double)mass stiffness:(double)stiffness damping:(double)damping initialVelocity:(double)velocity animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateUsingDefaultTimingWithOptions:(unsigned long long)options animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)delay initialSpringVelocity:(double)velocity options:(unsigned long long)options animations:(id /* block */)animations completion:(id /* block */)completion;
+ (id)_disabledColorForTintColor:(id)color;
+ (void)setAnimationTransition:(long long)transition forView:(id)view;
+ (void)animateKeyframesWithDuration:(double)duration delay:(double)delay options:(unsigned long long)options animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)addKeyframeWithRelativeStartTime:(double)time relativeDuration:(double)duration animations:(id /* block */)animations;
+ (void)_modifyAnimationsWithPreferredFrameRateRange:(struct CAFrameRateRange { float x0; float x1; float x2; })range reason:(id)reason animations:(id /* block */)animations;
+ (void)_modifyAnimationsWithPreferredFrameRateRange:(struct CAFrameRateRange { float x0; float x1; float x2; })range updateReason:(unsigned int)reason animations:(id /* block */)animations;
+ (void)_conditionallyModifyAnimations:(BOOL)animations withPreferredFrameRateRange:(struct CAFrameRateRange { float x0; float x1; float x2; })range updateReason:(unsigned int)reason animations:(id /* block */)animations;
+ (void)_modifyAnimationsByDecomposingGeometricTypes:(BOOL)types animations:(id /* block */)animations;
+ (void)modifyAnimationsWithRepeatCount:(double)count autoreverses:(BOOL)autoreverses animations:(id /* block */)animations;
+ (BOOL)_shouldTrackActionWithAnimator:(id)animator;
+ (BOOL)_shouldTrackAnimationsWithAnimator;
+ (void)_animateWithDuration:(double)duration delay:(double)delay options:(unsigned long long)options factory:(id)factory animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateWithAnimationSettings:(id)settings animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)animateWithSpringDuration:(double)duration bounce:(double)bounce initialSpringVelocity:(double)velocity delay:(double)delay options:(unsigned long long)options animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)animateWithDuration:(double)duration delay:(double)delay usingSpringWithDamping:(double)damping initialSpringVelocity:(double)velocity options:(unsigned long long)options animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_animateWithDuration:(double)duration delay:(double)delay options:(unsigned long long)options animations:(id /* block */)animations start:(id /* block */)start completion:(id /* block */)completion;
+ (void)animateWithDuration:(double)duration delay:(double)delay options:(unsigned long long)options animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)animateWithDuration:(double)duration animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)animateWithDuration:(double)duration animations:(id /* block */)animations;
+ (void)transitionWithView:(id)view duration:(double)duration options:(unsigned long long)options animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)transitionFromView:(id)view toView:(id)view duration:(double)duration options:(unsigned long long)options completion:(id /* block */)completion;
+ (void)_transitionWithView:(id)view duration:(double)duration options:(unsigned long long)options transitionOptions:(id)options completion:(id /* block */)completion;
+ (void)conditionallyAnimate:(BOOL)animate withAnimation:(id /* block */)animation layout:(id /* block */)layout completion:(id /* block */)completion;
+ (void)_animateWithFilter:(int)filter filterView:(id)view filterValue:(double)value duration:(double)duration delay:(double)delay options:(unsigned long long)options completion:(id /* block */)completion;
+ (void)performSystemAnimation:(unsigned long long)animation onViews:(id)views options:(unsigned long long)options animations:(id /* block */)animations completion:(id /* block */)completion;
+ (BOOL)_hasActiveAnimationContext;
+ (id)_defaultUIViewAnimationForLayer:(id)layer forKey:(id)key;
+ (id)_defaultUIViewActionForLayer:(id)layer forKey:(id)key;
+ (id)_currentAnimationAttributes;
+ (id)_currentAnimationSettings;
+ (void)_animateWithAttributes:(id)attributes animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)beginAnimations:(id)animations;
+ (void)beginAnimations:(id)animations context:(void *)context;
+ (void)commitAnimations;
+ (void)endAnimations;
+ (id)_currentViewAnimationState;
+ (BOOL)_isInAnimationBlock;
+ (BOOL)_isInRetargetableAnimationBlock;
+ (BOOL)_isInAnimationBlockWithAnimationsEnabled;
+ (BOOL)_isInKeyframeAnimationBlockWithAnimationsEnabled;
+ (void)_setAnimationAttributes:(id)attributes;
+ (void)_setAnimationAttributes:(id)attributes skipDelegateAssignment:(BOOL)assignment;
+ (double)inheritedAnimationDuration;
+ (double)_currentAnimationDuration;
+ (long long)_currentAnimationCurve;
+ (void)setAnimationDelegate:(id)delegate;
+ (void)setAnimationPosition:(struct CGPoint { double x0; double x1; })position;
+ (void)disableAnimation;
+ (void)enableAnimation;
+ (BOOL)_isAnimationTracking;
+ (id)_enableAnimationTracking:(BOOL)tracking;
+ (id)_enableAnimationTracking;
+ (id)_startAnimationTracking;
+ (void)_finishAnimationTracking;
+ (id)_performWithAnimationTracking:(id /* block */)tracking;
+ (void)_performWithState:(id)state trackingIdentifier:(id)identifier duration:(double)duration delay:(double)delay animations:(id /* block */)animations;
+ (void)_disableAnimationTracking:(id)tracking clearTrackedAnimations:(BOOL)animations;
+ (void)_disableAnimationTracking:(id)tracking;
+ (BOOL)_addCompletion:(id /* block */)completion;
+ (BOOL)_addCompletionWithPosition:(id /* block */)position;
+ (void)_addOrPerformCompletion:(id /* block */)completion;
+ (void)_addOrPerformCompletionWithPosition:(id /* block */)position;
+ (void)_completeAnimationWithUUID:(id)uuid duration:(double)duration curve:(long long)curve reverse:(BOOL)reverse;
+ (void)_stopAnimationWithUUID:(id)uuid;
+ (void)_updateModelValuesForAnimationWithUUID:(id)uuid useInitialValues:(BOOL)values animatable:(BOOL)animatable stateBlock:(id /* block */)block animationBlock:(id /* block */)block;
+ (void)_finalizeStoppedAnimationWithUUID:(id)uuid reverseAnimation:(BOOL)animation state:(id)state performCompletionsImmediately:(BOOL)immediately;
+ (void)_finalizeStoppedAnimationWithUUID:(id)uuid reverseAnimation:(BOOL)animation;
+ (void)_setAlongsideAnimations:(id /* block */)animations;
+ (id /* block */)_alongsideAnimations;
+ (void)_setAlongsideAnimations:(id /* block */)animations toRunByEndOfBlock:(id /* block */)block;
+ (void)_inheritAnimationParameters;
+ (void)setAnimationsEnabled:(BOOL)enabled;
+ (BOOL)areAnimationsEnabled;
+ (void)performWithoutAnimation:(id /* block */)animation;
+ (void)_performWithoutAnimation:(id /* block */)animation;
+ (void)_performWithAnimation:(id /* block */)animation;
+ (void)setAnimationDuration:(double)duration;
+ (void)setAnimationDelay:(double)delay;
+ (void)setAnimationFrameInterval:(double)interval;
+ (void)setAnimationStartDate:(id)date;
+ (void)setAnimationStartTime:(double)time;
+ (void)setAnimationPreventsAdditive:(BOOL)additive;
+ (void)setAnimationCurve:(long long)curve;
+ (void)setAnimationRepeatCount:(float)count;
+ (void)setAnimationRepeatAutoreverses:(BOOL)autoreverses;
+ (void)setAnimationBeginsFromCurrentState:(BOOL)state;
+ (void)setAnimationAutoreverses:(BOOL)autoreverses;
+ (void)setAnimationFromCurrentState:(BOOL)state;
+ (void)setAnimationTransition:(long long)transition forView:(id)view cache:(BOOL)cache;
+ (void)setAnimationWillStartSelector:(SEL)selector;
+ (void)setAnimationDidStopSelector:(SEL)selector;
+ (int)_degreesToRotateFromInterfaceOrientation:(long long)orientation toInterfaceOrientation:(long long)orientation;
+ (double)_durationForRotationFromInterfaceOrientation:(long long)orientation toInterfaceOrientation:(long long)orientation;
+ (void)_performWithDurationOverride:(double)override animations:(id /* block */)animations;
+ (void)flush;
+ (void)throttledFlush;
+ (void)_testIfFirstView:(id)view secondView:(id)view areDescendantsOfView:(id)view results:(BOOL x[2])results;
+ (BOOL)requiresConstraintBasedLayout;
+ (void)_setHostLayoutEngineOnlyTAMIC_YES;
+ (void)_resetHostLayoutEngineOnlyTAMIC_YES;
+ (BOOL)_hostLayoutEngineOnlyTAMIC_YES;
+ (BOOL)_toolsDebugColorViewBounds;
+ (BOOL)_toolsDebugAlignmentRects;
+ (void)_enableToolsDebugColorViewBounds:(BOOL)bounds;
+ (void)_enableToolsDebugAlignmentRects:(BOOL)rects;
+ (void)_setAllowsUnsupportedMacIdiomBehavior:(BOOL)behavior;
+ (BOOL)_allowsUnsupportedMacIdiomBehavior;
+ (void)sticker_modifyAnimationsWithPreferredFrameRateRange:(struct CAFrameRateRange { float x0; float x1; float x2; })range updateReason:(unsigned int)reason animations:(id /* block */)animations;
+ (id)_viewWithLayoutConstraints;
+ (void)_addHierarchyTrackingVisitor:(id)visitor;
+ (void)_removeHierarchyTrackingVisitor:(id)visitor;
+ (id)appearance;
+ (id)_appearanceWhenContainedIn:(id)in;
+ (id)appearanceWhenContainedInInstancesOfClasses:(id)classes;
+ (id)appearanceWhenContainedIn:(Class)in;
+ (id)appearanceMatchingProperties:(id)properties whenContainedInInstancesOfClasses:(id)classes;
+ (id)appearanceForTraitCollection:(id)collection;
+ (id)appearanceForTraitCollection:(id)collection whenContainedInInstancesOfClasses:(id)classes;
+ (id)appearanceForTraitCollection:(id)collection whenContainedIn:(Class)in;
+ (void)_performSystemAppearanceModifications:(id /* block */)modifications;
+ (void)_performForcedAppearanceModifications:(id /* block */)modifications;
+ (BOOL)_preventsAppearanceProxyCustomization;
+ (Class)layerClass;
+ (BOOL)_wantsDeepColorByDefault;
+ (void)initialize;
+ (void)_setAnimatedPropertiesEnabled:(BOOL)enabled;
+ (id)_defaultInteractionTintColorForIdiom:(long long)idiom;
+ (void)_updateOrientationForMotionEngine:(long long)engine;
+ (void)_beginSuspendingMotionEffectsForReason:(id)reason;
+ (void)_endSuspendingMotionEffectsForReason:(id)reason;
+ (BOOL)_motionEffectsSupported;
+ (BOOL)_motionEffectsEnabled;
+ (void)_recenterMotionEffects;
+ (void)_setShouldEnableUIKitParallaxEffects:(BOOL)effects;
+ (BOOL)_supportsInvalidatingFocusCache;
+ (long long)userInterfaceLayoutDirectionForSemanticContentAttribute:(long long)attribute;
+ (long long)userInterfaceLayoutDirectionForSemanticContentAttribute:(long long)attribute relativeToLayoutDirection:(long long)direction;
+ (BOOL)_shouldRedactTextInDescription;
+ (id)_descriptionWithoutTextRedactionForObject:(id)object;

/* instance methods */
- (void)_lfld_incrementCount;
- (void)_lfld_prepareToResetCountIfNecessary;
- (void)_lfld_resetCount;
- (void)_lfld_pushCurrentLayoutMethodName:(id)name;
- (void)_lfld_discardLastCurrentLayoutMethodName;
- (void)_lfld_addGeometryChangeRecordWithPropertyName:(id)name value:(id)value;
- (void)_lfld_addSetNeedsLayoutCallStack:(id)stack;
- (void)_lfld_addVariableChangeRecordForVariable:(id)variable inLayoutEngine:(id)engine;
- (void)_lfld_addConstraintsAffectingVariableValueChange:(id)change;
- (id)_lfld_minimalDescription;
- (id)_lfld_description;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameInView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameInCoordinateSpace:(id)space window:(id)window;
- (id)_nearestViewController;
- (id)_sourceViewForPresentationInWindow:(id)window;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sourceRectForPresentationInWindow:(id)window;
- (BOOL)__isKindOfUIView;
- (id)superview;
- (id)_layer;
- (id)actionForLayer:(id)layer forKey:(id)key;
- (BOOL)__isLandmarkView;
- (void)_setDisableDictationTouchCancellation:(BOOL)cancellation;
- (void)_dynamicUserInterfaceTraitDidChange;
- (void)_setOverrideUserInterfaceStyle:(long long)style;
- (void)_setOverrideVibrancyTrait:(long long)trait;
- (id)_boundingPath;
- (void)_setBoundingPath:(id)path;
- (id)_boundingPathForSubtree;
- (id)_effectiveBoundingPathAndBoundingPathView:(id *)view;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_minimumSafeAreaInsets;
- (BOOL)_usesMinimumSafeAreas;
- (BOOL)_isBoundingPathNonRectangular;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_inscribedRectInBoundingPathByInsettingRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect onEdges:(unsigned long long)edges withOptions:(unsigned long long)options;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_largestInscribedRectInBoundingPathWithCenter:(struct CGPoint { double x0; double x1; })center aspectRatio:(double)ratio;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectTuckedInBoundingPathCorner:(unsigned long long)corner withSize:(struct CGSize { double x0; double x1; })size cornerRadii:(struct UIRectCornerRadii { double x0; double x1; double x2; double x3; })radii minimumPadding:(double)padding;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectTuckedAgainstBoundingPathEdge:(unsigned long long)edge withSize:(double)size cornerRadii:(struct UIRectCornerRadii { double x0; double x1; double x2; double x3; })radii minimumPadding:(double)padding;
- (void)_addBoundingPathChangeObserver:(id)observer;
- (void)_removeBoundingPathChangeObserver:(id)observer;
- (id)_layoutRect;
- (void)updateUserActivityState:(id)state;
- (void)restoreUserActivityState:(id)state;
- (BOOL)_shouldEnclosedScrollViewFlashIndicators:(id)indicators;
- (id)_enclosingScrollerIncludingSelf;
- (BOOL)_isScrollingEnabled;
- (id)_enclosingScrollableScrollerIncludingSelf;
- (BOOL)useBlockyMagnificationInClassic;
- (int)_style;
- (id)_scriptingInfo;
- (id)scriptingInfoWithChildren;
- (void)_detectAndHandleClippedView;
- (BOOL)_UIViewDebuggingIsViewClipping;
- (void)_strokeClippedViewIfNecessary;
- (id)_clippedViewHierarchyDescription;
- (void)_dumpClippedViewWithScreenshotIfNecessary;
- (id)recursiveDescription;
- (id)_parentDescription;
- (id)_backdropGroups;
- (void)layerWillDraw:(id)draw;
- (void)drawLayer:(id)layer inContext:(struct CGContext *)context;
- (void)setValue:(id)value forKey:(id)key;
- (void)layoutSublayersOfLayer:(id)layer;
- (unsigned long long)indexOfGestureRecognizer:(id)recognizer;
- (void)addGestureRecognizer:(id)recognizer;
- (void)removeGestureRecognizer:(id)recognizer;
- (void)removeAllGestureRecognizers;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)addInteraction:(id)interaction;
- (void)removeInteraction:(id)interaction;
- (id)interactions;
- (void)setInteractions:(id)interactions;
- (id)_firstAncestorInteractionConformingToProtocol:(id)protocol;
- (id)_containingScrollView;
- (id)_initWithLayer:(id)layer;
- (BOOL)_isGestureOwningType:(long long)type;
- (long long)_depthComparison:(id)comparison;
- (id)_viewControllerForAncestor;
- (BOOL)_subclassImplementsDrawRect;
- (id)_scroller;
- (id)_providedFocusFallbackScroller;
- (void)_invalidateSubviewCache;
- (void)_setInterceptMouseEvent:(BOOL)event;
- (id)_interceptMouseEvent:(struct __GSEvent *)event;
- (id)_interceptEvent:(id)event;
- (BOOL)_canDrawContent;
- (BOOL)_controlsOwnScaleFactor;
- (void)_didMoveFromWindow:(id)window toWindow:(id)window;
- (void)_applyAppearanceInvocations;
- (BOOL)_shouldInheritScreenScaleAsContentScaleFactor;
- (void)_viewDidMoveFromScreen:(id)screen toScreen:(id)screen;
- (void)_setUserInterfaceIdiom:(long long)idiom;
- (void)_didChangeFromIdiom:(long long)idiom onScreen:(id)screen traverseHierarchy:(BOOL)hierarchy;
- (void)_replaceLayer:(id)layer;
- (void)_webCustomViewWillBeRemovedFromSuperview;
- (BOOL)_alwaysHandleScrollerMouseEvent;
- (BOOL)_isInAWindow;
- (BOOL)_isView;
- (BOOL)_delaysTouchesForSystemGestures;
- (void)_setDelaysTouchesForSystemGestures:(BOOL)gestures;
- (BOOL)_shouldDelayTouchForSystemGestures:(id)gestures;
- (id)_firstResponder;
- (BOOL)_containedInAbsoluteResponderChain;
- (BOOL)_isRootForKeyResponderCycle;
- (id)_rootForKeyResponderCycle;
- (void)_collectKeyViews:(id)views;
- (void)_collectKeyViews:(id)views visibilityTest:(id /* block */)test passingTest:(id /* block */)test;
- (void)_collectKeyViews:(id)views visibilityTest:(id /* block */)test passingTest:(id /* block */)test subviewsTest:(id /* block */)test;
- (BOOL)_canHandleStatusBarTouchAtLocation:(struct CGPoint { double x0; double x1; })location;
- (id)_viewDelegate;
- (void)_setPresentationControllerToNotifyOnLayoutSubviews:(id)subviews;
- (void)_addSubview:(id)subview positioned:(long long)positioned relativeTo:(id)to;
- (void)_ensureViewsAreInstalledInRelativeOrder:(id *)order viewCount:(long long)count insertionStartIndex:(long long)index;
- (void)_encodeFrameWithCoder:(id)coder;
- (void)_encodeBackgroundColorWithCoder:(id)coder;
- (BOOL)_shouldDecodeSubviews;
- (BOOL)_allowsArchivingAsSubview;
- (void)_populateArchivedSubviews:(id)subviews;
- (void)_setIsAncestorOfFirstResponder:(BOOL)responder;
- (BOOL)_isAncestorOfFirstResponder;
- (id)_actingParentViewForGestureRecognizers;
- (BOOL)_canHostViewControllerContentScrollView;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)necessary;
- (void)_unsubscribeToScrollNotificationsIfNecessary:(id)necessary;
- (id)_gestureRecognizers;
- (void)_addGestureRecognizer:(id)recognizer atEnd:(BOOL)end;
- (BOOL)_gestureRecognizerShouldReceiveTouch:(id)touch;
- (BOOL)_shouldResignFirstResponderWithInteractionDisabled;
- (BOOL)_appliesExclusiveTouchToSubviewTree;
- (BOOL)_isInExclusiveTouchSubviewTree;
- (BOOL)_shouldApplyExclusiveTouch;
- (BOOL)_monitorsSubtree;
- (void)_setMonitorsSubtree:(BOOL)subtree;
- (BOOL)_monitorsView:(id)view;
- (void)_monitoredView:(id)view willMoveFromSuperview:(id)superview toSuperview:(id)superview;
- (void)_monitoredView:(id)view didMoveFromSuperview:(id)superview toSuperview:(id)superview;
- (void)_recursivelyNameLayerTree;
- (double)_currentScreenScale;
- (id)_encodableSubviews;
- (void)_animatePropertyWithKey:(id)key currentValue:(id)value targetValue:(id)value newValueCallback:(id /* block */)callback;
- (void)_removeAllRetargetableAnimations:(BOOL)animations;
- (id)_targetVelocityForKey:(id)key;
- (void)_setTargetVelocity:(id)velocity forKey:(id)key;
- (id)_velocityForKey:(id)key;
- (void)_setVelocity:(id)velocity forKey:(id)key;
- (id)_projectedTargetForKey:(id)key decelerationFactor:(double)factor;
- (void)_notifyReferenceViewSizeChange;
- (BOOL)_touchesInsideShouldHideCalloutBar;
- (BOOL)_isMemberOfViewControllerHierarchy:(id)hierarchy;
- (id)_viewControllerToNotifyOnLayoutSubviews;
- (BOOL)_canSkipTraitsAndOverlayUpdatesForViewControllerToNotifyOnLayoutResetState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visualAltitudeSensitiveBoundsWithInfiniteEdges:(unsigned long long)edges;
- (id)_disabledColor;
- (BOOL)_shouldIgnoreAutofillSave;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsForSceneDraggingConstrainedToSafeArea:(BOOL)area;
- (BOOL)_shouldUseViewForSceneDraggingBehavior;
- (BOOL)_subviewPreventsSkipLayout:(id)layout;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (void)_observeScrollViewDidScroll:(id)scroll;
- (void)_didScroll;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })size;
- (void)setSize:(struct CGSize { double x0; double x1; })size;
- (struct CGPoint { double x0; double x1; })frameOrigin;
- (void)setFrameOrigin:(struct CGPoint { double x0; double x1; })origin;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test forEvent:(struct __GSEvent *)event;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside forEvent:(struct __GSEvent *)event;
- (BOOL)isEnabled;
- (void)setClipsSubviews:(BOOL)subviews;
- (id)_initialValueForLayer:(id)layer keyPath:(id)path usePresentationValue:(BOOL)value;
- (id)_deferredAnimationForKey:(id)key;
- (id)_initialValueForKey:(id)key;
- (void)_generateDeferredAnimations:(id)animations;
- (id)_basicAnimationWithKeyPath:(id)path;
- (BOOL)_isInTransitionBlock;
- (void)_clearAnimationFilters;
- (void)addAnimation:(id)animation forKey:(id)key;
- (void)_removeAllAnimations:(BOOL)animations;
- (void)_removePropertyAnimationsForLayerKeyPath:(id)path;
- (void)_enumerateDescendentViews:(id /* block */)views;
- (void)setContentMode:(long long)mode;
- (long long)contentMode;
- (void)_resetContentStretch;
- (void)_setContentStretchInPixels:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pixels forContentSize:(struct CGSize { double x0; double x1; })size shouldTile:(BOOL)tile;
- (void)setContentStretch:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })stretch;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })contentStretch;
- (void)_setContentRectInPixels:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pixels forContentSize:(struct CGSize { double x0; double x1; })size;
- (void)_resetContentRect;
- (double)contentScaleFactor;
- (void)setContentScaleFactor:(double)factor;
- (BOOL)_prefersDrawingWithForcedScaleFactorInClassicMode;
- (void)_setShouldRasterize:(BOOL)rasterize;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleBounds;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)needsDisplay;
- (BOOL)needsDisplayOnBoundsChange;
- (void)setNeedsDisplayOnBoundsChange:(BOOL)change;
- (void)setClipsToBounds:(BOOL)bounds;
- (BOOL)clipsToBounds;
- (void)setBackgroundColor:(id)color;
- (id)backgroundColor;
- (void)setFixedBackgroundPattern:(BOOL)pattern;
- (void)setAlpha:(double)alpha;
- (double)alpha;
- (void)setOpaque:(BOOL)opaque;
- (BOOL)isOpaque;
- (void)setClearsContextBeforeDrawing:(BOOL)drawing;
- (BOOL)clearsContextBeforeDrawing;
- (void)_setIgnoreBackdropViewsWhenHiding:(BOOL)hiding;
- (BOOL)_ignoreBackdropViewsWhenHiding;
- (void)setHidden:(BOOL)hidden;
- (BOOL)isHidden;
- (void)_setHiddenForReuse:(BOOL)reuse;
- (BOOL)_isHiddenForReuse;
- (BOOL)isHiddenOrHasHiddenAncestor;
- (void)setClearsContext:(BOOL)context;
- (void)setContentsPosition:(int)position;
- (struct CGImage *)newSnapshotWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)forceDisplayIfNeeded;
- (void)recursivelyForceDisplayIfNeeded;
- (void)_enableLayerKitPatternDrawing:(BOOL)drawing;
- (void *)_createIOSurfaceWithPadding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })padding;
- (id)_imageFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)_imageFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect gamut:(long long)gamut;
- (BOOL)containsView:(id)view;
- (id)subviews;
- (id)window;
- (void)_setTraitStorageList:(id)list;
- (void)removeFromSuperview;
- (void)insertSubview:(id)subview atIndex:(long long)index;
- (void)exchangeSubviewAtIndex:(long long)index withSubviewAtIndex:(long long)index;
- (void)addSubview:(id)subview;
- (void)insertSubview:(id)subview belowSubview:(id)subview;
- (void)insertSubview:(id)subview aboveSubview:(id)subview;
- (void)bringSubviewToFront:(id)front;
- (void)sendSubviewToBack:(id)back;
- (void)didAddSubview:(id)subview;
- (void)willRemoveSubview:(id)subview;
- (void)willMoveToSuperview:(id)superview;
- (void)didMoveToSuperview;
- (void)_willRemoveSubview:(id)subview;
- (void)_didRemoveSubview:(id)subview;
- (BOOL)_associatedViewControllerForwardsAppearanceCallbacks:(id)callbacks performHierarchyCheck:(BOOL)check isRoot:(BOOL)root;
- (void)_setAllowsHighContrastForBackgroundColor:(BOOL)color;
- (BOOL)_allowsHighContrastForBackgroundColor;
- (void)_setBackgroundColor:(id)color;
- (id)_backgroundColor;
- (void)_willChangeToIdiom:(long long)idiom onScreen:(id)screen;
- (void)_willMoveToWindow:(id)window withAncestorView:(id)view;
- (void)_willMoveToWindow:(id)window;
- (void)willMoveToWindow:(id)window;
- (void)didMoveToWindow;
- (void)insertSubview:(id)subview below:(id)below;
- (void)insertSubview:(id)subview above:(id)above;
- (void)_makeSubtreePerformSelector:(SEL)selector withObject:(id)object;
- (void)_makeSubtreePerformSelector:(SEL)selector withObject:(id)object withObject:(id)object copySublayers:(BOOL)sublayers;
- (BOOL)becomeFirstResponder;
- (void)deferredBecomeFirstResponder;
- (void)_promoteSelfOrDescendantToFirstResponderIfNecessary;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectToScrollToVisibleInCellInWindow:(id)window;
- (void)movedFromSuperview:(id)superview;
- (void)movedToSuperview:(id)superview;
- (void)viewWillMoveToSuperview:(id)superview;
- (void)viewDidMoveToSuperview;
- (void)movedFromWindow:(id)window;
- (void)movedToWindow:(id)window;
- (BOOL)isDescendantOfView:(id)view;
- (id)viewWithTag:(long long)tag;
- (void)_setViewsJostledDuringUpdateConstraintsPass:(id)pass;
- (id)_viewsJostledDuringUpdateConstraintsPass;
- (id)_viewsJostledDuringUpdateConstraintsPassSuppressingDebugAssertion:(BOOL)assertion;
- (void)setNeedsLayout;
- (void)layoutIfNeeded;
- (void)layoutBelowIfNeeded;
- (void)layoutSubviews;
- (void)_setPresentationValue:(id)value forKey:(id)key;
- (void)stopSettingPresentationValueForKey:(id)key;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
- (BOOL)_needsLayoutOnAnimatedFrameChangeForNewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_setFrameWithAlignmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)setMultipleTouchEnabled:(BOOL)enabled;
- (BOOL)isMultipleTouchEnabled;
- (void)setExclusiveTouch:(BOOL)touch;
- (BOOL)isExclusiveTouch;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (id)_hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event windowServerHitTestWindow:(id)window;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point toView:(id)view;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point fromView:(id)view;
- (struct CGSize { double x0; double x1; })convertSize:(struct CGSize { double x0; double x1; })size toView:(id)view;
- (struct CGSize { double x0; double x1; })convertSize:(struct CGSize { double x0; double x1; })size fromView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect toView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect fromView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })hitRect;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame forFields:(int)fields;
- (void)setRotationBy:(float)by;
- (void)setAutoresizesSubviews:(BOOL)subviews;
- (BOOL)autoresizesSubviews;
- (void)setAutoresizingMask:(unsigned long long)mask;
- (unsigned long long)autoresizingMask;
- (BOOL)_clipsGlyphPathFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame shouldContinueSuperviewTraversal:(BOOL *)traversal;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)sizeToFit;
- (void)resizeSubviewsWithOldSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)_unconditionallyWantsSetBoundsFromISEngineLayout;
- (void)_applyISEngineLayoutValuesToBoundsOnly:(BOOL)only;
- (void)_resizeWithOldSuperviewSize:(struct CGSize { double x0; double x1; })size;
- (void)resizeWithOldSuperviewSize:(struct CGSize { double x0; double x1; })size;
- (struct CGPoint { double x0; double x1; })position;
- (void)setPosition:(struct CGPoint { double x0; double x1; })position;
- (struct CGPoint { double x0; double x1; })origin;
- (void)setOrigin:(struct CGPoint { double x0; double x1; })origin;
- (struct CGPoint { double x0; double x1; })anchorPoint;
- (void)setAnchorPoint:(struct CGPoint { double x0; double x1; })point;
- (double)_autolayoutSpacingAtEdge:(int)edge forAttribute:(long long)attribute inContainer:(id)container isGuide:(BOOL)guide;
- (double)_autolayoutSpacingAtEdge:(int)edge forAttribute:(long long)attribute nextToNeighbor:(id)neighbor edge:(int)edge attribute:(long long)attribute multiplier:(double)multiplier;
- (BOOL)_hasFontInfoForVerticalBaselineSpacing;
- (BOOL)_hasCustomAutolayoutNeighborSpacingForAttribute:(long long *)attribute;
- (double)_defaultAutolayoutSpacing;
- (double)_paddingForBaselineSpacingFromEdge:(int)edge toNeighborEdge:(int)edge;
- (id)_dummyFittingSizeInfo;
- (void)_invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel;
- (void)constraintsDidChangeInEngine:(id)engine;
- (void)solutionDidChangeInEngine:(id)engine;
- (id)engine:(id)engine markerForConstraintToBreakAmongConstraints:(id)constraints;
- (void)engine:(id)engine willBreakConstraint:(id)constraint dueToMutuallyExclusiveConstraints:(id)constraints;
- (BOOL)_layoutEngineRelativeAlignmentRectOriginIsValid;
- (void)_setPreviousFittingSizeInfo:(id)info;
- (id)_previousFittingSizeInfo;
- (struct CGSize { double x0; double x1; })_systemLayoutSizeFittingSize:(struct CGSize { double x0; double x1; })size withHorizontalFittingPriority:(float)priority verticalFittingPriority:(float)priority hasIntentionallyCollapsedHeight:(BOOL *)height;
- (void)_resetNeedsSystemLayoutFittingSizeUpdateInSubtreeForLayoutEngine:(id)engine;
- (id)_recursiveConstraintsTraceAtLevel:(long long)level;
- (id)_rootView;
- (id)_constraintsValidityDescription;
- (id)_autolayoutTraceAtLevel:(long long)level recursively:(BOOL)recursively;
- (id)_autolayoutTraceRecursively:(BOOL)recursively;
- (id)_autolayoutTrace;
- (id)_recursiveLayoutEngineDescription;
- (id)_allLayoutEngines;
- (void)_is_layout;
- (BOOL)_wantsBaselineUpdatingFollowingConstraintsPass;
- (BOOL)needsUpdateConstraints;
- (void)_informContainerThatSubviewsNeedUpdateConstraintsNeedingLayout:(BOOL)layout;
- (void)_setNeedsUpdateConstraintsNeedingLayout:(BOOL)layout;
- (void)_setNeedsUpdateConstraints;
- (void)_scheduleUpdateConstraintsPassAsEngineHostNeedingLayout:(BOOL)layout;
- (void)setNeedsUpdateConstraints;
- (void)_setSubviewWantsAutolayoutTripWantsAutolayout:(BOOL)autolayout;
- (void)_configureAutolayoutFlagsNeedingLayout:(BOOL)layout;
- (void)_setWantsAutolayout;
- (BOOL)_wantsAutolayout;
- (void)_didInvalidateIntrinsicContentSize;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })alignmentRectForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForAlignmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_alignmentRectForBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsForAlignmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_alignmentFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_alignmentBounds;
- (BOOL)translatesAutoresizingMaskIntoConstraints;
- (BOOL)_useContentDimensionVariablesForConstraintLowering;
- (BOOL)_supportsContentDimensionVariables;
- (BOOL)_requiresExplicitLayoutMarginsGuideForAttribute:(long long)attribute getAttributeForGuide:(int *)guide;
- (void)_faultInContentOffsetGuide;
- (BOOL)_isFloatingLayoutItem;
- (id)_referenceView;
- (struct CGSize { double x0; double x1; })_nsis_contentSize;
- (BOOL)_forceLayoutEngineSolutionInRationalEdges;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_nsis_bounds;
- (struct CGPoint { double x0; double x1; })_nsis_origin;
- (BOOL)_hasLayoutEngine;
- (BOOL)_is_needsLayout;
- (void)_invalidateIntrinsicContentSizeNeedingLayout:(BOOL)layout;
- (void)_is_setNeedsLayout;
- (void)_accumulateViewConstraintsIntoArray:(id)array;
- (void)_createJostledViewsIfNecessary;
- (void)_initializeHostedLayoutEngine;
- (BOOL)_canBecomeLayoutEngineDelegate;
- (BOOL)_hostsLayoutEngineAllowsTAMIC_NO;
- (BOOL)_hostsLayoutEngine;
- (void)_setHostsLayoutEngine:(BOOL)engine;
- (BOOL)_uiib_hostsLayoutEngine;
- (void)_uiib_setHostsLayoutEngine:(BOOL)engine;
- (BOOL)_preWhitetailUsesAutoresizingConstraints;
- (void)_parentalLayoutEngineDidChangeTo:(id)to;
- (void)_stopObservingVariablesOnlyToSupportTAMICChange:(BOOL)tamicchange;
- (void)_startObservingVariablesOnlyToSupportTAMICChange:(BOOL)tamicchange;
- (void)_switchToLayoutEngine:(id)engine;
- (void)_clearLayoutVariableObservationsOnlyToSupportTAMICChange:(BOOL)tamicchange;
- (void)_discardLayoutEngine:(id)engine;
- (id)_layoutEngineCreateIfNecessary;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (id)_layoutEngineIfAvailable;
- (void)_withUnsatisfiableConstraintsLoggingSuspendedIfEngineDelegateExists:(id /* block */)exists;
- (void)_clearConstraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspended;
- (void)_mergeConstraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspendedToAncestor:(id)ancestor;
- (id)_constraintsBrokenWhileUnsatisfiableConstraintsLoggingSuspendedCreateIfNecessary:(BOOL)necessary;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(BOOL)constraints;
- (void)_sendUpdateConstraintsIfNecessaryForSecondPass:(BOOL)pass;
- (void)_updateConstraintsIfNeededCollectingViews:(id)views forSecondPass:(BOOL)pass;
- (void)_recursiveUpdateConstraintsIfNeededCollectingViews:(id)views forSecondPass:(BOOL)pass;
- (void)_updateConstraintsIfNeededWithViewForVariableChangeNotifications:(id)notifications;
- (void)updateConstraintsIfNeeded;
- (void)_handleDoubleUpdateConstraintsIfNecessary;
- (void)_handleLayoutEngineHostingConstraintsIfNecessary;
- (void)_handleLayoutArrangementConstraintsIfNecessary;
- (void)_handleSizeConstraintsAsAppropriate;
- (void)_updateSystemConstraints;
- (void)updateConstraints;
- (BOOL)_recordBaselineLoweringInfo;
- (void)_addBoundsMatchingConstraintsForView:(id)view;
- (id)_viewForLoweringBaselineLayoutAttribute:(int)attribute;
- (double)_baselineOffsetFromNearestEdgeForLayoutAttribute:(long long)attribute;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;
- (void)_setMultilineContextWidth:(double)width;
- (void)_recalculateStrictDescendantNeedsDoubleUpdateConstraints;
- (BOOL)_needsDoubleUpdateConstraintsPass;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (BOOL)_inSecondConstraintsPass;
- (void)_setInSecondConstraintsPass:(BOOL)pass;
- (void)_resetToBeginningOfDoublePass;
- (double)_preferredMaxLayoutWidth;
- (id)_layoutDebuggingTitle;
- (id)_defaultLayoutDescription;
- (id)_layoutDescriptionIfDifferentFromDefault;
- (void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;
- (id)nsis_descriptionOfVariable:(id)variable;
- (int)nsis_orientationHintForVariable:(id)variable;
- (BOOL)nsis_shouldIntegralizeVariable:(id)variable;
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)observable;
- (id)_uili_existingBaseFrameVariables;
- (id)_uili_existingObservationEligibleLayoutVariables;
- (void)_uili_stashLayoutVariableObservation:(id)observation forVariable:(id)variable;
- (void)_uili_removeLayoutVariableObservationsOnlyToSupportTAMICChange:(BOOL)tamicchange;
- (BOOL)_uili_requiresObservationForVariable:(id)variable;
- (BOOL)_uili_isFocusGuide;
- (id)_uili_observableLayoutEngineForBaseFrameVariables:(BOOL)variables;
- (struct CGSize { double x0; double x1; })nsli_engineToUserScalingCoefficients;
- (void)_snipDangliesWithForce:(BOOL)force repairIfPossibleForViewThatMoved:(id)moved newSuperview:(id)superview oldSuperview:(id)superview;
- (BOOL)nsli_lowerAttribute:(int)attribute intoExpression:(id)expression withCoefficient:(double)coefficient container:(id)container;
- (BOOL)nsli_lowerAttribute:(int)attribute intoExpression:(id)expression withCoefficient:(double)coefficient forConstraint:(id)constraint;
- (BOOL)nsli_lowerAttribute:(int)attribute intoExpression:(id)expression withCoefficient:(double)coefficient forConstraint:(id)constraint onBehalfOfLayoutGuide:(id)guide;
- (id)nsli_layoutEngine;
- (struct CGSize { double x0; double x1; })nsli_convertSizeToEngineSpace:(struct CGSize { double x0; double x1; })space;
- (struct CGSize { double x0; double x1; })nsli_convertSizeFromEngineSpace:(struct CGSize { double x0; double x1; })space;
- (id)nsli_superitem;
- (BOOL)nsli_resolvedValue:(double *)value forSymbolicConstant:(id)constant inConstraint:(id)constraint error:(id *)error;
- (BOOL)nsli_defaultResolvedValue:(double *)value forSymbolicConstant:(id)constant inConstraint:(id)constraint error:(id *)error;
- (id)nsli_description;
- (BOOL)nsli_descriptionIncludesPointer;
- (unsigned long long)nsli_autoresizingMask;
- (BOOL)nsli_isFlipped;
- (BOOL)nsli_isCollectingConstraintChangesForLaterCoordinatedFlush:(id)flush;
- (BOOL)nsli_canHostIndependentVariableAnchor;
- (BOOL)nsli_isLegalConstraintItem;
- (BOOL)nsli_isRTL;
- (id)nsli_layoutAnchorForAttribute:(long long)attribute;
- (id)nsli_constraintWithAnchor:(id)anchor relatedBy:(long long)by toAnchor:(id)anchor withSystemSpacingMultipliedBy:(double)by;
- (id)_descriptionForLayoutTrace;
- (void)_initializeLayoutEngine;
- (void)_viewHierarchyUnpreparedForConstraint:(id)constraint;
- (BOOL)_layoutEngine_isEngineMergingAllowedBetweenEngine:(id)engine itemEngine:(id)engine forConstraint:(id)constraint initialView:(id)view;
- (id)constraints;
- (BOOL)_uiib_tryToAddConstraint:(id)constraint roundingAdjustment:(double)adjustment mutuallyExclusiveConstraints:(id *)constraints;
- (void)addConstraint:(id)constraint;
- (void)_faultInGuidesForConstraint:(id)constraint;
- (void)_scheduleFaultingInGuidesForConstraint:(id)constraint;
- (void)nsli_addConstraint:(id)constraint;
- (void)addConstraints:(id)constraints;
- (void)removeConstraint:(id)constraint;
- (BOOL)nsli_removeConstraint:(id)constraint;
- (void)removeConstraints:(id)constraints;
- (id)nsli_installedConstraints;
- (id)nsli_layoutMarginsItem;
- (double)nsli_marginOffsetForAttribute:(long long)attribute;
- (id)_layoutEngineHostConstraints;
- (void)_invalidateLayoutEngineHostConstraints;
- (void)_constraints_subviewWillChangeSuperview:(id)superview;
- (void)_uiib_invalidateAutoresizingConstraints;
- (void)_relaxLayoutEngineHostConstraintsForAxis:(long long)axis;
- (void)_recursiveInvalidateDescendantsNeedingDoubleUpdateConstraintsCollectingViews:(id)views;
- (void)_resetLayoutEngineHostConstraintsForAxis:(long long)axis collectingViews:(id)views;
- (id)_engineHostingWidthConstraint;
- (void)_updateLayoutEngineHostConstraints;
- (float)_priorityForEngineHostConstraints;
- (BOOL)_isManuallyResizedBySuperview;
- (void)_calculateSubviewAlignmentFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)frame superviewAlignmentBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)bounds forAutoresizingMask:(unsigned long long)mask preservingNonzeroSuperviewAlignmentBoundsOriginForCompatibility:(BOOL)compatibility;
- (void)_constantsForHorizontalAutoresizingConstraints:(double *)constraints;
- (void)_constantsForVerticalAutoresizingConstraints:(double *)constraints;
- (void)_autoresizingConstraints_frameDidChange;
- (void)_engineHostConstraints_frameDidChange;
- (void)_disableLayoutFlushing;
- (void)_enableLayoutFlushing;
- (struct CGSize { double x0; double x1; })_contentHuggingPriorities;
- (void)_setContentHuggingPriorities:(struct CGSize { double x0; double x1; })priorities;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (float)contentHuggingPriorityForAxis:(long long)axis;
- (void)setContentHuggingPriority:(float)priority forAxis:(long long)axis;
- (struct CGSize { double x0; double x1; })_contentCompressionResistancePriorities;
- (void)_setContentCompressionResistancePriorities:(struct CGSize { double x0; double x1; })priorities;
- (float)contentCompressionResistancePriorityForAxis:(long long)axis;
- (void)setContentCompressionResistancePriority:(float)priority forAxis:(long long)axis;
- (struct CGSize { double x0; double x1; })_intrinsicSizeWithinSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (id)_containerForContentSizeConstraints;
- (void)invalidateIntrinsicContentSize;
- (id)_alignmentDebuggingOverlayCreateIfNecessary:(BOOL)necessary;
- (id)_debuggableDescriptionForConstraintsAffectingAxis:(long long)axis;
- (id)_debuggableDescriptionForConstraintsAffectingHorizontalAxis;
- (id)_debuggableDescriptionForConstraintsAffectingVerticalAxis;
- (id)constraintsAffectingLayoutForAxis:(long long)axis ofItem:(id)item;
- (id)constraintsAffectingLayoutForAxis:(long long)axis;
- (BOOL)hasAmbiguousLayout;
- (BOOL)_hasAmbiguousLayout;
- (id)_layoutVariablesWithAmbiguousValue;
- (void)exerciseAmbiguityInLayout;
- (id)_descendantWithAmbiguousLayout;
- (void)_makeTemporaryInternalConstraintsWithEngine:(id)engine ignoreAutoresizingMaskConstraints:(BOOL)constraints returningConstraintsForViewsNeedingSecondPass:(id *)pass currentTargetWidth:(double)width;
- (struct CGSize { double x0; double x1; })_calculatedSystemLayoutSizeFittingSize:(struct CGSize { double x0; double x1; })size withHorizontalFittingPriority:(float)priority verticalFittingPriority:(float)priority hasIntentionallyCollapsedHeight:(BOOL *)height;
- (BOOL)_forwardsSystemLayoutFittingSizeToContentView:(id)view;
- (struct CGSize { double x0; double x1; })systemLayoutSizeFittingSize:(struct CGSize { double x0; double x1; })size withHorizontalFittingPriority:(float)priority verticalFittingPriority:(float)priority;
- (struct CGSize { double x0; double x1; })systemLayoutSizeFittingSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })_systemLayoutSizeFittingSize:(struct CGSize { double x0; double x1; })size withHorizontalFittingPriority:(float)priority verticalFittingPriority:(float)priority;
- (void)_setDisableLayoutFlushingCount:(long long)count;
- (void)_nsis_origin:(struct CGPoint { double x0; double x1; } *)_nsis_origin bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)bounds inEngine:(id)engine;
- (id)_scrollViewWantingUpdateInConstraint:(id)constraint;
- (BOOL)_old_nsli_lowerAttribute:(int)attribute intoExpression:(id)expression withCoefficient:(double)coefficient forConstraint:(id)constraint;
- (void)_addCenterExpressionToExpression:(id)expression isVertical:(BOOL)vertical;
- (id)_lowerExpressionOneLevelWithCurrentXExpression:(id)xexpression YExpression:(id)yexpression vertical:(BOOL)vertical container:(id)container engine:(id)engine;
- (id)_centerExpressionInContainer:(id)container vertical:(BOOL)vertical contentInsetScale:(double)scale engine:(id)engine;
- (id)_edgeExpressionInContainer:(id)container vertical:(BOOL)vertical max:(BOOL)max contentInsetScale:(double)scale engine:(id)engine;
- (id)_dimensionExpressionInContainer:(id)container vertical:(BOOL)vertical useContentVariables:(BOOL)variables engine:(id)engine;
- (void)_oldUpdateLayoutEngineHostConstraints;
- (void)_oldEngineHostConstraints_frameDidChange;
- (void)_didAddDependentConstraint:(id)constraint;
- (void)_didRemoveDependentConstraint:(id)constraint;
- (id)_viewForBaselineLayout;
- (id)viewForBaselineLayout;
- (void)_vendedBaselineViewParametersDidChange;
- (void)_vendedBaselineViewDidMoveForFirst:(BOOL)first;
- (double)_calculatedIntrinsicHeight;
- (double)_proportionalFillLengthForOrderedArrangement:(id)arrangement relevantParentAxis:(long long)axis;
- (BOOL)_ola_isCandidateForMultilineTextWidthDisambiguationWhenArranged;
- (BOOL)_ola_shouldUseImprovedMultilineTextDisambiguation;
- (void)_ola_willApplyMultilineTextWidthDisambiguationConstraint;
- (BOOL)_la_isVisible;
- (BOOL)_allowsLinkPreviewInteractionInViewServices;
- (id)_representationOfHierarchyForXcode;
- (id)_hierarchyRepresentation;
- (void)_removeColorViewBoundsOverlays;
- (id)_colorViewBoundsOverlayCreateIfNecessary:(BOOL)necessary;
- (void)_throwForUnsupportedNonMacIdiomBehaviorWithReason:(id)reason;
- (BOOL)endEditing:(BOOL)editing;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertViewPointToSceneSpaceForKeyboard:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })keyboard;
- (int)textEffectsVisibilityLevel;
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (long long)compareTextEffectsOrdering:(id)ordering;
- (void)_ui_addToView:(id)view atIndex:(long long)index;
- (void)_ui_addSubLayoutItem:(id)item;
- (void)_ui_insertSubLayoutItem:(id)item atIndex:(long long)index;
- (void)_ui_removeFromParentLayoutItem;
- (BOOL)_canBeReusedInPickerView;
- (id)textInputView;
- (void)_measureViewWithSize:(struct CGSize { double x0; double x1; })size temporaryConstraints:(id)constraints suspendingSystemConstraints:(BOOL)constraints withOptimizedEngineBlock:(id /* block */)block;
- (struct CGSize { double x0; double x1; })_layoutSizeThatFits:(struct CGSize { double x0; double x1; })fits fixedAxes:(unsigned long long)axes;
- (struct { double x0; double x1; })_baselineOffsetsAtSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)_isKnownUISearchBarComponentContainer;
- (void)reduceWidth:(double)width;
- (id)_kb_description;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_compatibleBounds;
- (void)_didChangeKeyplaneWithContext:(id)context;
- (unsigned long long)_clipCorners;
- (unsigned long long)_clipCornersOfView:(id)view;
- (void)_setRenderConfig:(id)config;
- (void)_setAccessoryViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)_rootInputWindowController;
- (void)_convertToAutolayoutSizingIfNecessary;
- (void)_removeAutolayoutSizingConstraints;
- (BOOL)_hasAutolayoutHeightConstraint;
- (double)_findAutolayoutHeightConstraint;
- (void *)_fallbackTraitCollection;
- (id)_allSublayers;
- (id)_allSubviews;
- (id)_outermostLayer;
- (void)_setOverrideUserInterfaceRenderingMode:(long long)mode;
- (void)_setShouldAdaptToMaterials:(BOOL)materials;
- (void)_setBackgroundMergeBehavior:(long long)behavior;
- (void)mt_setCaptureGroupName:(id)name;
- (BOOL)_hasBackgroundMaterial;
- (void)mt_setVisualEffect:(id)effect;
- (void)mt_setContentEffects:(id)effects;
- (void)mt_setBackgroundEffects:(id)effects;
- (void)mt_addPrivateSubview:(id)subview;
- (void)_privateSubview_updateGeometryWithCenter:(struct CGPoint { double x0; double x1; })center bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)_privateSubview_setValue:(id)value forObservedLayerKeyPath:(id)path;
- (void)_insertPrivateSubview:(id)subview belowLayer:(id)layer;
- (void)_insertPrivateSubview:(id)subview aboveLayer:(id)layer;
- (id)inputResponderController;
- (id)_activityItemsConfigurationAtLocation:(struct CGPoint { double x0; double x1; })location;
- (BOOL)_hasDefaultImplementationForStandardEditAction:(SEL)action;
- (BOOL)_canPerformDefaultImplementationForStandardEditAction:(SEL)action;
- (void)_constrainViewToSuperview;
- (void)_setFlipsHorizontalAxis:(BOOL)axis;
- (id)_visualRecursiveDescription;
- (void)_uinavigationbar_prepareToAppearInNavigationItem:(id)item onLeft:(BOOL)left;
- (id)_minimumContentSizeCategory;
- (void)_setMinimumContentSizeCategory:(id)category;
- (id)_maximumContentSizeCategory;
- (void)_setMaximumContentSizeCategory:(id)category;
- (void)_contentSizeCategoryLimitsDidChange;
- (id)_appliedContentSizeCategoryLimitsDescription;
- (id)_uis_outline;
- (id)_enclosingInterfaceActionRepresentationView;
- (id)_enclosingInterfaceActionGroupView;
- (BOOL)accessibilityInvertFilterApplied;
- (BOOL)_ancestorHasInvertFilterApplied;
- (void)accessibilityUnapplyInvertFilter;
- (void)accessibilityApplyInvertFilter;
- (BOOL)isAccessibilityElementByDefault;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (void)_applyShape:(id)shape;
- (void)_applyResolvedShape:(id)shape;
- (id)_shapeInCoordinateSpace:(id)space;
- (void)_setLayoutEngine:(id)engine;
- (void)_setActiveSizeToFitLayoutEngine:(id)engine;
- (void)_setLayoutDebuggingIdentifier:(id)identifier;
- (id)layoutGuides;
- (void)addLayoutGuide:(id)guide;
- (void)removeLayoutGuide:(id)guide;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_layoutGuide:(id)guide adjustedLayoutFrameForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (BOOL)_hasLayoutArrangements;
- (void)_incrementHiddenManagedByLayoutArrangementCount;
- (void)_decrementHiddenManagedByLayoutArrangementCount;
- (void)_flushConstraintsPendingAnimatedChanges;
- (void)_addConstraintPendingAnimatedChanges:(id)changes;
- (void)_setInAnimatedLayout:(BOOL)layout;
- (BOOL)_isInAnimatedLayout;
- (void)_setCountOfMotionEffectsInSubtree:(unsigned long long)subtree;
- (id)_contentWidthVariable;
- (id)_contentHeightVariable;
- (id)_contentXOffsetVariable;
- (id)_contentYOffsetVariable;
- (id)nsli_minXVariable;
- (id)nsli_minYVariable;
- (id)nsli_boundsWidthVariable;
- (id)nsli_widthVariable;
- (id)nsli_boundsHeightVariable;
- (id)nsli_heightVariable;
- (id)nsli_contentWidthVariable;
- (id)nsli_contentHeightVariable;
- (id)nsli_contentXOffsetVariable;
- (id)nsli_contentYOffsetVariable;
- (id)_constraintsArray;
- (BOOL)_hasBaseline;
- (BOOL)_isHasBaselinePropertyChangeable;
- (BOOL)_shouldInvalidateBaselineConstraintsForSize:(struct CGSize { double x0; double x1; })size oldSize:(struct CGSize { double x0; double x1; })size;
- (void)_invalidateBaselineConstraints;
- (double)_firstBaselineOffsetFromTop;
- (double)_baselineOffsetFromBottom;
- (double)_internalFirstBaselineOffsetFromTop;
- (double)_internalLastBaselineOffsetFromBottom;
- (double)_systemSpacingBelowView:(id)view systemSpacingInvalidationRecorder:(id *)recorder;
- (double)_systemSpacingBelowView:(id)view multiplier:(double)multiplier;
- (void)_receiveVisitor:(id)visitor;
- (void)_setShouldArchiveUIAppearanceTags:(BOOL)tags;
- (id)_appearanceContainer;
- (Class)_appearanceGuideClass;
- (id)_appearanceTraitCollection;
- (id)_traitStorageConstraints;
- (void)_setTraitStorageConstraints:(id)constraints;
- (void)_applyPendingTraitStorageConstraints;
- (id)_traitStorageSubviews;
- (void)_setTraitStorageSubviews:(id)subviews;
- (id)init;
- (void)_setNeedsContentsFormatUpdate;
- (void)_setNeedsContentsFormatUpdate:(BOOL)update;
- (BOOL)_wantsDeepDrawing;
- (void)_populateInitialTraitCollection:(id)collection;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)_objc_initiateDealloc;
- (void)dealloc;
- (id)_window;
- (id)_screen;
- (BOOL)isUserInteractionEnabled;
- (void)setCharge:(float)charge;
- (float)charge;
- (void)_setChargeEnabled:(BOOL)enabled;
- (BOOL)_isChargeEnabled;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_touchInsets;
- (void)_setTouchInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (id)nextResponder;
- (id)_textServicesResponderProxy;
- (long long)_topToBottomLeftToRightViewCompare:(id)compare;
- (BOOL)_wantsKeyCommandsWhenDeferred;
- (id)_nextKeyResponder;
- (id)_previousKeyResponder;
- (void)_gatherKeyResponders:(id)responders indexOfSelf:(unsigned long long *)self visibilityTest:(id /* block */)test passingTest:(id /* block */)test subviewsTest:(id /* block */)test;
- (BOOL)isFirstResponder;
- (void)_clearBecomeFirstResponderWhenCapable;
- (BOOL)_becomeFirstResponderWhenPossible;
- (BOOL)_canBecomeFirstResponderWhenPossible;
- (BOOL)_supportsBecomeFirstResponderWhenPossible;
- (BOOL)cancelMouseTracking;
- (BOOL)cancelTouchTracking;
- (void)_prepareForWindowHostingSceneRemoval;
- (void)_prepareForWindowDealloc;
- (struct CGColor *)_backgroundCGColor;
- (id)_frameLayoutItem;
- (void)_setLayoutMarginsGuideIgnoresSystemMinimumMargins:(BOOL)margins;
- (void)_updateLayoutMarginsGuideConstraintsIfNecessary;
- (void)_layoutMarginsDidChangeFromOldMargins:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })margins;
- (void)setLayoutMargins:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })margins;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })layoutMargins;
- (void)setDirectionalLayoutMargins:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })margins;
- (struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })directionalLayoutMargins;
- (void)_setRawLayoutMargins:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })margins;
- (void)_updateInferredLayoutMargins;
- (void)_updateInferredLayoutMarginsFromSuperview:(id)superview;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_concreteDefaultLayoutMargins;
- (void)layoutMarginsDidChange;
- (void)_layoutMarginsWillChange;
- (void)setEdgesPreservingSuperviewLayoutMargins:(unsigned long long)margins;
- (unsigned long long)edgesPreservingSuperviewLayoutMargins;
- (void)setPreservesSuperviewLayoutMargins:(BOOL)margins;
- (BOOL)preservesSuperviewLayoutMargins;
- (void)setEdgesInsettingLayoutMarginsFromSafeArea:(unsigned long long)area;
- (unsigned long long)edgesInsettingLayoutMarginsFromSafeArea;
- (void)setInsetsLayoutMarginsFromSafeArea:(BOOL)area;
- (BOOL)insetsLayoutMarginsFromSafeArea;
- (unsigned long long)_edgesPropagatingSafeAreaInsetsToSubviews;
- (void)_setIgnoresLayerTransformForSafeAreaInsets:(BOOL)insets;
- (BOOL)_ignoresLayerTransformForSafeAreaInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_safeAreaInsetsInSuperview:(id)superview;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_safeAreaInsetsForFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame inSuperview:(id)superview;
- (void)_updateSafeAreaInsets;
- (id)_safeAreaLayoutGuideIfExists;
- (void)_safeAreaInsetsWillChange;
- (void)_safeAreaInsetsDidChangeFromOldInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (void)_clearSafeAreaInsets;
- (void)safeAreaInsetsDidChange;
- (void)_setSafeAreaInsetsFrozen:(BOOL)frozen;
- (void)_setSafeAreaInsetsFrozen:(BOOL)frozen updateForUnfreeze:(BOOL)unfreeze;
- (BOOL)_safeAreaInsetsFrozen;
- (void)_setViewDelegateContentOverlayInsetsAreClean:(BOOL)clean;
- (void)_setDontUpdateInferredLayoutMargins:(BOOL)margins;
- (void)_removeAllAnimationsIncludingSubviewsTrackingForAnimationRestoration;
- (void)_finishTrackingForAnimationRestoration;
- (void)_restoreRemovedAnimationsIncludingSubviews;
- (BOOL)_wantsAnimationRestoration;
- (void)_setContentSizeNotificationToken:(id)token;
- (id)_contentSizeNotificationToken;
- (BOOL)layoutMarginsFollowReadableWidth;
- (void)setLayoutMarginsFollowReadableWidth:(BOOL)width;
- (id)_layoutMarginsGuideIfExists;
- (BOOL)_safeAreaWidthExceedsReadableWidth;
- (unsigned int)_secureName;
- (BOOL)_shouldAnimatePropertyWithKey:(id)key;
- (BOOL)_shouldAnimatePropertyAdditivelyWithKey:(id)key;
- (BOOL)_fakeShouldAnimatePropertyWithKey:(id)key;
- (void)_invalidateAppearance;
- (void)_invalidateAppearanceForSubviewsOfClass:(Class)class;
- (void)_invalidateAppearanceForTraitCollection:(id)collection;
- (BOOL)_appearanceIsInvalid;
- (void)_setAppearanceIsInvalid:(BOOL)invalid;
- (BOOL)_cachedTraitCollectionIsValid;
- (id)_extraInfoForTraitTrace;
- (id)_traitTrace:(id)trace;
- (id)_traitTrace;
- (id)_parentTraitEnvironment;
- (id)_traitCollectionForChildEnvironment:(id)environment;
- (BOOL)_canBeParentTraitEnvironment;
- (void)_setCanBeParentTraitEnvironment:(BOOL)environment;
- (void)_setLocalOverrideTraitCollection:(id)collection;
- (void)_traitOverridesDidChange:(id)change;
- (id)registerForTraitChanges:(id)changes withHandler:(id /* block */)handler;
- (id)registerForTraitChanges:(id)changes withTarget:(id)target action:(SEL)action;
- (id)registerForTraitChanges:(id)changes withAction:(SEL)action;
- (id)_registerForTraitTokenChanges:(id)changes withHandler:(id /* block */)handler;
- (id)_registerForTraitTokenChanges:(id)changes withTarget:(id)target action:(SEL)action;
- (void)unregisterForTraitChanges:(id)changes;
- (void)_registerAuxiliaryChildEnvironmentForTraitInvalidations:(id)invalidations;
- (void)_unregisterAuxiliaryChildEnvironmentForTraitInvalidations:(id)invalidations;
- (void)_noteTraitsDidChangeRecursively;
- (void)_processDidChangeRecursivelyFromOldTraits:(id)traits toCurrentTraits:(id)traits forceNotification:(BOOL)notification;
- (void)_traitCollectionDidChangeInternal:(const struct _UITraitCollectionChangeDescription { id x0; id x1; id x2; BOOL x3; struct _UITraitCollectionTraitChanges { BOOL x0; BOOL x1; } x4; } *)internal;
- (void)_traitCollectionDidChangeOnSubtreeInternal:(const struct _UITraitCollectionChangeDescription { id x0; id x1; id x2; BOOL x3; struct _UITraitCollectionTraitChanges { BOOL x0; BOOL x1; } x4; } *)internal;
- (BOOL)_definesDynamicTintColor;
- (void)updateTraitsIfNeeded;
- (void)traitCollectionDidChange:(id)change;
- (id)_tintColorArchivingKey;
- (void)_setInteractionTintColor:(id)color;
- (id)_interactionTintColor;
- (id)_inheritedInteractionTintColor;
- (void)setTintColor:(id)color;
- (long long)_defaultTintAdjustmentMode;
- (long long)tintAdjustmentMode;
- (void)setTintAdjustmentMode:(long long)mode;
- (void)_tintColorDidChange;
- (void)tintColorDidChange;
- (id)_normalInheritedTintColor;
- (BOOL)_definesTintColor;
- (id)tintColor;
- (id)_accessibilityHigherContrastTintColorForColor:(id)color;
- (void)interactionTintColorDidChange;
- (void)_beginOcclusion:(id)occlusion;
- (void)_endOcclusion:(id)occlusion;
- (unsigned long long)_accessibilityInterfaceStyleIntent;
- (void)_accessibilitySetInterfaceStyleIntent:(unsigned long long)intent;
- (unsigned long long)_accessibilityResolvedInterfaceStyle;
- (void)_accessibilitySetResolvedInterfaceStyle:(unsigned long long)style;
- (double)_contentMargin;
- (double)_textButtonMargin;
- (double)_imageButtonMargin;
- (BOOL)_drawsAsBackdropOverlay;
- (void)_setDrawsAsBackdropOverlay:(BOOL)overlay;
- (void)_setDrawsAsBackdropOverlayWithBlendMode:(long long)mode;
- (void)_setMaskView:(id)view;
- (void)_setContinuousCornerRadius:(double)radius;
- (id)_cornerCurve;
- (void)_setCornerRadius:(double)radius;
- (long long)_backdropMaskViewFlags;
- (void)_setBackdropMaskViewFlags:(long long)flags;
- (id)_generateBackdropMaskImage;
- (id)_generateBackdropMaskViewForFlag:(long long)flag;
- (void)_setBackdropMaskView:(id)view forFlag:(long long)flag;
- (id)_backdropMaskViewForFlag:(long long)flag;
- (void)_removeBackdropMaskViews;
- (void)addMotionEffect:(id)effect;
- (void)_addMotionEffect:(id)effect;
- (void)removeMotionEffect:(id)effect;
- (void)_removeMotionEffect:(id)effect;
- (id)motionEffects;
- (void)setMotionEffects:(id)effects;
- (id)_motionEffects;
- (BOOL)_motionEffectsAreSuspended;
- (BOOL)_applyKeyPathsAndRelativeValues:(id)values forMotionEffect:(id)effect;
- (BOOL)_unapplyMotionEffect:(id)effect;
- (double)_visualAltitude;
- (void)_setVisualAltitude:(double)altitude;
- (struct CGSize { double x0; double x1; })_visualAltitudeBias;
- (void)_setVisualAltitudeBias:(struct CGSize { double x0; double x1; })bias;
- (double)_convertVisualAltitude:(double)altitude fromView:(id)view;
- (double)_convertVisualAltitude:(double)altitude toView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_responderSelectionRectForWindow:(id)window;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_responderExternalTouchRectForWindow:(id)window;
- (long long)_currentUserInterfaceIdiom;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point toCoordinateSpace:(id)space;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point fromCoordinateSpace:(id)space;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect toCoordinateSpace:(id)space;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect fromCoordinateSpace:(id)space;
- (void)_updateCombinedInsetsIfNecessary;
- (void)_setFrameIgnoringLayerTransform:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })transform;
- (void)setTransform3D:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })d;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })transform3D;
- (void)_setTransform3D:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })d;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })_transform3D;
- (double)_touchSloppinessFactor;
- (BOOL)_disableGeometryObserverNotification;
- (void)_setShouldNotifyGeometryObserversForBaselineChanges:(BOOL)changes;
- (void)_registerForGeometryChanges;
- (void)_unregisterForGeometryChanges;
- (void)_setFirstResponder:(id)responder;
- (void)_geometryChanged:(const struct { int x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGSize { double x0; double x1; } x3; struct CGPoint { double x0; double x1; } x4; struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; } x5; id x6; id x7; id x8; id x9; } *)changed forAncestor:(id)ancestor;
- (void)_alignmentRectInsetsHaveChangedForChildImageView:(id)view;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)view;
- (id)snapshotViewAfterScreenUpdates:(BOOL)updates;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect afterScreenUpdates:(BOOL)updates withCapInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (BOOL)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect afterScreenUpdates:(BOOL)updates;
- (id)snapshot;
- (id)resizableSnapshotFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect withCapInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (BOOL)drawViewHierarchyInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)snapshotView;
- (id)resizableSnapshotViewFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect withCapInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (BOOL)_isFocusInteractionEnabled;
- (void)_setFocusInteractionEnabled:(BOOL)enabled;
- (BOOL)_isContainedInHostedFocusSystem;
- (id)_focusSystem;
- (id)_focusBehavior;
- (id)_focusSystemSceneComponent;
- (BOOL)isFocused;
- (BOOL)_isFocusedOrAncestorOfFocusedView;
- (void)_setCountOfFocusedAncestorTrackingViewsInSubtree:(unsigned long long)subtree;
- (void)_setTracksFocusedAncestors:(BOOL)ancestors;
- (void)_ancestorWillUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (id)_firstCommonAncestorToView:(id)view givenCommonAncestor:(id)ancestor;
- (BOOL)_allowsFocusToLeaveViaHeading:(unsigned long long)heading;
- (void)_setSpeedBumpEdges:(unsigned long long)edges;
- (unsigned long long)_speedBumpEdges;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_focusableContentMargins;
- (void)_setFocusableContentMargins:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })margins;
- (BOOL)_isFocusDirectionFlippedHorizontally;
- (long long)_focusedSound;
- (id)focusGuides;
- (id)_currentFocusAnimationCoordinator;
- (id)_preferredConfigurationForFocusAnimation:(long long)animation inContext:(id)context;
- (double)_preferredDurationForFocusAnimation:(long long)animation inContext:(id)context;
- (double)_preferredDurationScaleFactorForFocusAnimation:(long long)animation inContext:(id)context;
- (long long)_rotaryFocusMovementAxis;
- (BOOL)_mayRemainFocused;
- (long long)_focusTouchSensitivityStyle;
- (void)setNeedsFocusUpdate;
- (void)updateFocusIfNeeded;
- (BOOL)_shouldUpdateFocusInContext:(id)context;
- (BOOL)shouldUpdateFocusInContext:(id)context;
- (void)_willUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (void)_didUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (void)didUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (void)_setNeedsNonDeferredFocusUpdate;
- (BOOL)_isEligibleForFocusInteraction;
- (BOOL)_isEligibleForFocusOcclusion;
- (BOOL)_isEligibleForFocusGivenAlpha;
- (id)_focusMapContainer;
- (id)_systemDefaultFocusGroupIdentifier;
- (id)_focusRegionFocusSystem;
- (BOOL)_legacy_isEligibleForFocusInteraction;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_focusRegionFrame;
- (id)_childFocusRegionsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect inCoordinateSpace:(id)space;
- (id)_childFocusViews;
- (id)_focusRegionView;
- (id)_focusRegionGuides;
- (BOOL)_isPromiseFocusRegion;
- (id)_fulfillPromisedFocusRegion;
- (BOOL)_isTransparentFocusRegion;
- (id)_focusDebugOverlayParentView;
- (BOOL)_prefersFocusContainment;
- (id)_focusGesturesForFailureRequirements;
- (id)focusItemsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)_isLazyFocusItemContainer;
- (unsigned long long)_focusGuideBehaviorForFocusMovement:(id)movement;
- (id)_extantFocusItemsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)_preferredFocusRegionCoordinateSpace;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_defaultFocusRegionFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_focusRegionFrameInCoordinateSpace:(id)space;
- (void)_searchForFocusRegionsInContext:(id)context;
- (id)_accessibilityFocusContainers:(BOOL)containers;
- (id)_attributesForFocusRegionContent;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_clippingRectInCoordinateSpace:(id)space;
- (void)_diagnoseFocusabilityForReport:(id)report;
- (BOOL)_shouldAlwaysDiagnoseFocusInteractionEligibility;
- (void)_diagnoseFocusInteractionEligibilityForReport:(id)report;
- (void)_setIdleModeLayoutAttributes:(id)attributes;
- (id)_idleModeLayoutAttributes;
- (id)_previewingSegueTemplateStorage;
- (void)_setPreviewingSegueTemplateStorage:(id)storage;
- (id)_previewingSegueTemplateStorageForLocation:(struct CGPoint { double x0; double x1; })location inView:(id)view;
- (BOOL)_shouldAppendTextInViewDescription;
- (void)_setInferredLayoutMargins:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })margins;
- (void)_setLayoutMarginsGuide:(id)guide;
- (void)_setSceneDraggingBehaviorOnPan:(long long)pan;
- (void)_setInternalConstraints:(id)constraints;
- (void)_setReadableContentGuide:(id)guide;
- (void)_setLastNotifiedTraitCollection:(id)collection;
- (void)_setAlignmentRectOriginCache:(id)cache;
@end

#endif /* UIView_h */
