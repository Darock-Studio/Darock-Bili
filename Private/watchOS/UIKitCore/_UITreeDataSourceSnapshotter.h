//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UITreeDataSourceSnapshotter_h
#define _UITreeDataSourceSnapshotter_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "_UITreeDataSourceSnapshotter-Protocol.h"

@class NSMutableIndexSet;
@protocol {vector<_UIOutlineNode, std::allocator<_UIOutlineNode>>="__begin_"^{_UIOutlineNode}"__end_"^{_UIOutlineNode}"__end_cap_"{__compressed_pair<_UIOutlineNode *, std::allocator<_UIOutlineNode>>="__value_"^{_UIOutlineNode}}};

@interface _UITreeDataSourceSnapshotter : NSObject<_UITreeDataSourceSnapshotter, NSCopying> {
  /* instance variables */
  struct vector<_UIOutlineNode, std::allocator<_UIOutlineNode>> { struct _UIOutlineNode *__begin_; struct _UIOutlineNode *__end_; struct __compressed_pair<_UIOutlineNode *, std::allocator<_UIOutlineNode>> { struct _UIOutlineNode *__value_; } __end_cap_; } _nodes;
  NSMutableIndexSet *_expandedIndexes;
}

@property (nonatomic) long long count;

/* instance methods */
- (id)init;
- (id)initWithNodes:(struct vector<_UIOutlineNode, std::allocator<_UIOutlineNode>> { struct _UIOutlineNode * x0; struct _UIOutlineNode * x1; struct __compressed_pair<_UIOutlineNode *, std::allocator<_UIOutlineNode>> { struct _UIOutlineNode * x0; } x2; })nodes count:(long long)count expandedIndexes:(id)indexes;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })appendChildItemsWithCount:(long long)count;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })appendChildItemsWithCount:(long long)count toParentIndex:(long long)index;
- (void)insertCount:(long long)count beforeIndex:(long long)index;
- (long long)insertCount:(long long)count afterIndex:(long long)index;
- (long long)insertCount:(long long)count afterIndex:(long long)index insertionMode:(long long)mode;
- (void)deleteIndexes:(id)indexes;
- (void)deleteIndexes:(id)indexes orphanDisposition:(long long)disposition;
- (long long)levelForIndex:(long long)index;
- (id)rootIndexes;
- (id)childrenForParentAtIndex:(long long)index;
- (id)childrenForParentAtIndex:(long long)index recursive:(BOOL)recursive;
- (long long)parentForChildAtIndex:(long long)index;
- (BOOL)indexIsExpanded:(long long)expanded;
- (BOOL)indexIsVisible:(long long)visible;
- (void)expandIndexes:(id)indexes;
- (void)collapseIndexes:(id)indexes;
- (id)snapshotterRepresentingSubtreeForIndex:(long long)index;
- (id)snapshotterRepresentingSubtreeForIndex:(long long)index includingParent:(BOOL)parent;
- (void)replaceChildItemsFromSnapshotter:(id)snapshotter forParentIndex:(long long)index;
- (void)insertSubtreeFromSnapshotter:(id)snapshotter beforeIndex:(long long)index;
- (long long)insertSubtreeFromSnapshotter:(id)snapshotter afterIndex:(long long)index;
- (id)expandedIndexes;
- (id)visibleIndexes;
- (id)indexesForLevel:(long long)level;
- (BOOL)isFlat;
- (BOOL)hasChildrenForParentAtIndex:(long long)index;
- (id)description;
- (id)visualDescription;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (id)_childrenForParent:(long long)parent;
- (long long)_nodeIndexForGlobalIndex:(long long)index;
- (long long)_binarySearchForGlobalIndex:(long long)index startIndex:(long long)index endIndex:(long long)index;
- (struct _UIOutlineNode { struct _NSRange { unsigned long long x0; unsigned long long x1; } x0; long long x1; } *)_nodeForGlobalIndex:(long long)index;
- (BOOL)_isNodeIndexVisible:(long long)visible;
- (long long)_parentNodeIndexForNodeIndex:(long long)index;
- (void)_recomputeRangeOffsetForGlobalIndex:(long long)index;
- (BOOL)_shouldSplitNodeAtInsertionIndex:(long long)index;
- (long long)_childNodeIndexForGloalIndex:(long long)index;
- (void)_splitNodeAtInsertionIndex:(long long)index;
- (id)_deleteChildNodesForParentNodeIndex:(long long)index;
- (void)_insertCount:(long long)count beforeIndex:(long long)index;
- (long long)_insertCount:(long long)count afterIndex:(long long)index;
- (void)_recomputeExpandedIndexesForInsertedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)_recomputeExpandedIndexesForDeletedIndexes:(id)indexes;
- (id)_snapshotterByShiftingIndexesByCount:(long long)count;
- (id)_snapshotterByNormalizingRangeOffsets;
- (long long)_indexForInsertingAfterIndex:(long long)index;
- (id)_allIndexes;
- (void)_insertSubtreeFromSnapshotter:(id)snapshotter atIndex:(long long)index adjustedIndex:(long long)index;
- (struct _UIOutlineNode { struct _NSRange { unsigned long long x0; unsigned long long x1; } x0; long long x1; })_nextNodeForNodeIndex:(long long *)index;
@end

#endif /* _UITreeDataSourceSnapshotter_h */
