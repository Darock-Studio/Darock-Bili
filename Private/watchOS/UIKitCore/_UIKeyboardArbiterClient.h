//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIKeyboardArbiterClient_h
#define _UIKeyboardArbiterClient_h
@import Foundation;

#include "UIInputWindowController.h"
#include "UIView.h"
#include "_UIAssertionController.h"
#include "_UIAssertionControllerSubject-Protocol.h"
#include "_UIKBArbiterDelegateProtocol-Protocol.h"
#include "_UIKeyboardArbiterClient-Protocol.h"
#include "_UIKeyboardChangedInformation.h"
#include "_UIKeyboardUIInformation.h"
#include "_UIRemoteKeyboardControllerDelegate-Protocol.h"
#include "_UIRemoteKeyboardDistributedViewSource-Protocol.h"
#include "_UIRemoteKeyboardsEventObserver.h"
#include "_UIRemoteKeyboardsEventObserverDelegate-Protocol.h"

@class FBSScene, NSHashTable, NSString, NSXPCConnection;
@protocol _UIKBArbiterClientKeyboardChangeDelegate, _UIKeyboardUIStateDelegate;

@interface _UIKeyboardArbiterClient : NSObject<_UIRemoteKeyboardDistributedViewSource, _UIAssertionControllerSubject, _UIKBArbiterDelegateProtocol, _UIRemoteKeyboardControllerDelegate, _UIRemoteKeyboardsEventObserverDelegate, _UIKeyboardArbiterClient> {
  /* instance variables */
  int _ignoreLayoutSubviews;
  int _externalSuppression;
  NSHashTable *_windowControllers;
  int _recursionCheck;
  _UIAssertionController *_assertionController;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property BOOL expectingInitialState;
@property BOOL avoidDisableKeyboard;
@property (nonatomic) BOOL currentInputDestination;
@property (nonatomic) BOOL keyboardUIHost;
@property (nonatomic) BOOL expectedSuppression;
@property (retain, nonatomic) NSXPCConnection *connection;
@property (nonatomic) BOOL enqueuedWillEnterForegroundActions;
@property (retain, nonatomic) UIView *keyboardSnapshot;
@property (nonatomic) BOOL windowEnabled;
@property BOOL updatingHeight;
@property (nonatomic) BOOL didSignalKeyboardChangedForCurrentKeyboard;
@property (retain, nonatomic) _UIKeyboardChangedInformation *backupState;
@property (nonatomic) long long keyboardSource;
@property (nonatomic) unsigned long long hostedCount;
@property (retain, nonatomic) _UIRemoteKeyboardsEventObserver *eventObserver;
@property (nonatomic) BOOL deactivatedByControlCenter;
@property (nonatomic) BOOL deactivatedBySystemGesture;
@property (retain, nonatomic) FBSScene *requiredScene;
@property (nonatomic) long long lastEventSource;
@property (nonatomic) BOOL handlingKeyboardTransition;
@property (nonatomic) double heightForRemoteIAVPlaceholderIfNecessary;
@property (retain, nonatomic) _UIKeyboardChangedInformation *currentClientState;
@property (retain, nonatomic) _UIKeyboardUIInformation *currentUIState;
@property (nonatomic) BOOL shouldFence;
@property (weak, nonatomic) NSObject<_UIKeyboardUIStateDelegate> *kbUIStateDelegate;
@property (retain, nonatomic) UIInputWindowController *inputWindowRootViewController;
@property (nonatomic) BOOL snapshotting;
@property (nonatomic) BOOL handlingRemoteEvent;
@property (weak, nonatomic) NSObject<_UIKBArbiterClientKeyboardChangeDelegate> *changeInfoDelegate;
@property (nonatomic) BOOL disableBecomeFirstResponder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) BOOL keyboardVisible;
@property (readonly) BOOL keyboardActive;
@property (readonly) BOOL remoteKeyboardUndocked;

/* class methods */
+ (BOOL)enabled;
+ (id)automaticSharedArbiterClient;
+ (id)serviceName;
+ (id)keyboardClientFBSSceneIdentityStringOrIdentifierFromScene:(id)scene;
+ (id)mainBundleIdentifier;

/* instance methods */
- (void)startTransition:(id)transition withInfo:(id)info;
- (void)updateTransition:(id)transition withInfo:(id)info;
- (void)completeTransition:(id)transition withInfo:(id)info;
- (void)setPlacement:(id)placement quietly:(BOOL)quietly animated:(BOOL)animated generateSplitNotification:(BOOL)notification;
- (id)init;
- (id)initWithShouldConnect:(BOOL)connect;
- (void)dealloc;
- (id)currentHostedPIDs;
- (void)configureArbiterCommunication:(id)communication;
- (id)arbiterConnection;
- (id)arbiterProxy;
- (void)startConnection;
- (void)startConnectionWithCompletion:(id /* block */)completion;
- (void)syncKeyboardUIChangeInfo:(id)info;
- (void)stopConnection;
- (void)checkConnection;
- (void)checkState;
- (BOOL)isOnScreenRotating;
- (BOOL)isHostedInAnotherProcess;
- (BOOL)hasAnyHostedViews;
- (BOOL)hasWindowHostingCallerID:(id)id;
- (BOOL)hasWindowHostingPID:(int)pid;
- (BOOL)remoteKeyboardUndocked:(BOOL)undocked;
- (BOOL)isSpotlight:(id)spotlight;
- (id)vendKeyboardSuppressionAssertionForReason:(id)reason;
- (id)vendKeyboardSuppressionAssertionForReason:(id)reason type:(unsigned long long)type;
- (BOOL)assertionActivationStateForType:(unsigned long long)type;
- (void)assertionActivationStateChangedToState:(BOOL)state forType:(unsigned long long)type;
- (void)resignFirstResponderIfNeeded;
- (id)existingInputWindowRootViewController;
- (void)queue_failedConnection:(id)connection;
- (void)didFailArbiterConnection;
- (void)queue_setLastEventSource:(long long)source withCompletion:(id /* block */)completion;
- (void)queue_keyboardSuppressed:(BOOL)suppressed withCompletion:(id /* block */)completion;
- (void)queue_keyboardChanged:(id)changed onComplete:(id /* block */)complete;
- (void)_handleKeyboardChanged:(id)changed isLocal:(BOOL)local onComplete:(id /* block */)complete;
- (void)queue_keyboardChangedWithCompletion:(id /* block */)completion;
- (void)queue_keyboardIAVChanged:(double)iavchanged onComplete:(id /* block */)complete;
- (void)queue_keyboardTransition:(id)transition event:(unsigned long long)event withInfo:(id)info onComplete:(id /* block */)complete;
- (void)setDisableBecomeFirstResponder:(BOOL)responder forSuppressionAssertion:(BOOL)assertion;
- (void)setDisableBecomeFirstResponder:(BOOL)responder forSuppressionAssertion:(BOOL)assertion updatePlacement:(BOOL)placement;
- (void)verifyPlacement;
- (void)queue_getDebugInfoWithCompletion:(id /* block */)completion;
- (void)queue_sceneBecameFocused:(id)focused withCompletion:(id /* block */)completion;
- (void)_postInputSourceDidChangeNotificationForResponder:(id)responder;
- (void)_updateEventSource:(long long)source options:(unsigned long long)options;
- (void)_updateEventSource:(long long)source options:(unsigned long long)options responder:(id)responder;
- (void)updateEventSource:(long long)source options:(unsigned long long)options;
- (void)updateEventSource:(long long)source options:(unsigned long long)options responder:(id)responder;
- (void)cleanSuppression;
- (void)registerController:(id)controller;
- (void)unregisterController:(id)controller;
- (void)performOnControllers:(id /* block */)controllers;
- (void)performOnExistingControllers:(id /* block */)controllers;
- (void)_performOnDistributedControllersExceptSelf:(id /* block */)self;
- (void)performOnDistributedControllers:(id /* block */)controllers;
- (void)performOnLocalDistributedControllers:(id /* block */)controllers;
- (void)restorePreservedInputViewsIfNecessary;
- (BOOL)shouldAllowInputViewsRestoredForId:(id)id;
- (void)_layoutKeyboardViews:(id)views;
- (void)controllerDidLayoutSubviews:(id)subviews;
- (void)ignoreLayoutNotifications:(id /* block */)notifications;
- (void)signalToProxyKeyboardChanged:(id)changed onCompletion:(id /* block */)completion;
- (unsigned long long)localSceneCount;
- (void)keyboardChangedCompleted;
- (void)sceneUpdated;
- (void)reloadForSnapshotting;
- (BOOL)shouldSnapshot;
- (void)snapsShotKeyboard;
- (void)resetSnapshotWithWindowCheck:(BOOL)check;
- (void)queue_keyboardUIDidChange:(id)change onComplete:(id /* block */)complete;
- (void)_preserveInputViewsForClientChange:(BOOL)change clientInfo:(id)info snapshotIfNecessary:(BOOL)necessary;
- (BOOL)keyboardClientDidChange:(id)change;
- (BOOL)_didHandleKeyboardClientChange:(id)change shouldConsiderSnapshottingKeyboard:(BOOL)keyboard isLocalEvent:(BOOL)event;
- (BOOL)allowedToShowKeyboard;
- (void)didSuspend:(id)suspend;
- (void)applicationResume:(id)resume;
- (void)willResume:(id)resume;
- (void)peekApplicationEvent:(id)event;
- (void)setSuppressingKeyboard:(BOOL)keyboard forScene:(id)scene;
- (void)addWindowHostingPID:(int)pid callerID:(id)id;
- (void)removeWindowHostingPID:(int)pid callerID:(id)id;
- (void)finishWithHostedWindow;
- (id)prepareForHostedWindowWithScene:(id)scene;
@end

#endif /* _UIKeyboardArbiterClient_h */
