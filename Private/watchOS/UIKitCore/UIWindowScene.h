//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIWindowScene_h
#define UIWindowScene_h
@import Foundation;

#include "UIScene.h"
#include "UIActivityItemsConfigurationProviding-Protocol.h"
#include "UIActivityItemsConfigurationReading-Protocol.h"
#include "UIAlertControllerStackManager.h"
#include "UICoordinateSpace-Protocol.h"
#include "UIFocusSystem.h"
#include "UIInputResponderController.h"
#include "UIKeyboardSceneDelegate.h"
#include "UISceneSizeRestrictions.h"
#include "UISceneWindowingBehaviors.h"
#include "UIScreen.h"
#include "UIScreenshotService.h"
#include "UIStatusBarManager.h"
#include "UITraitChangeObservable-Protocol.h"
#include "UITraitChangeObservableInternal-Protocol.h"
#include "UITraitCollection.h"
#include "UITraitEnvironment-Protocol.h"
#include "UITraitOverrides-Protocol.h"
#include "UIWindow.h"
#include "UIWindowSceneGeometry.h"
#include "_UIAssertionController.h"
#include "_UIAssertionControllerSubject-Protocol.h"
#include "_UIContextBinder.h"
#include "_UIContextBinderContextCreationPolicyHolding-Protocol.h"
#include "_UIDisplayInfoProviding-Protocol.h"
#include "_UIEventDeferringOwnershipToken.h"
#include "_UIEventDeferringRuleOwning-Protocol.h"
#include "_UIFallbackEnvironment-Protocol.h"
#include "_UIOrientationDebugDescriptionProviding-Protocol.h"
#include "_UISceneMetricsCalculating-Protocol.h"
#include "_UISceneUIWindowEventRouting-Protocol.h"
#include "_UISceneUIWindowHosting-Protocol.h"
#include "_UITraitChangeRegistry.h"
#include "_UITraitEnvironmentInternal-Protocol.h"
#include "_UITraitOverrideDelegate-Protocol.h"
#include "_UITraitOverrides.h"

@class BOOL *, FBSDisplayConfigurationRequest, FBSScene, NSArray, NSHashTable, NSPointerArray, NSSet, NSString;
@protocol UIScene<_UISceneUIWindowEventRouting;

@interface UIWindowScene : UIScene<_UIFallbackEnvironment, _UIOrientationDebugDescriptionProviding, _UIAssertionControllerSubject, _UITraitOverrideDelegate, _UITraitEnvironmentInternal, UITraitChangeObservableInternal, _UIContextBinderContextCreationPolicyHolding, _UIEventDeferringRuleOwning, _UISceneUIWindowHosting, _UISceneUIWindowEventRouting, UITraitEnvironment, UITraitChangeObservable> {
  /* instance variables */
  NSObject<_UIDisplayInfoProviding> *_displayEdgeInfoProvider;
  _UITraitChangeRegistry *_traitChangeRegistry;
  NSSet *_componentsWithTraitOverrides;
  _UIContextBinder *_contextBinder;
  NSPointerArray *_keyWindowHistory;
  _UIEventDeferringOwnershipToken *_keyboardEventDeferringToken;
  UIWindow *_delegateWindowNeedingDeferredInitialUpdate;
  NSHashTable *_windowsNeedingDeferredInitialUpdateExecution;
  int _reachabilitySupportedCounter;
  unsigned int _userInteractionDisabledCount;
  _UIAssertionController *_assertionController;
  struct { unsigned int x :1 delegateSupportsWindow; unsigned int x :1 delegateSupportsSetWindow; unsigned int x :1 delegateSupportsDidUpdateCoordinateSpace; unsigned int x :1 isPerformingSystemSnapshot; unsigned int x :1 holdingLiveResizeSnapshot; unsigned int x :1 shouldDisableTouchCancellationOnRotation; unsigned int x :1 enqueuedEvaluationOfDisablesMirroring; } _windowSceneFlags;
  struct { unsigned int x :1 delegateSupportsWindowWillAttach; unsigned int x :1 delegateSupportsWindowWillDetach; unsigned int x :1 delegateSupportsWindowWillBecomeVisible; unsigned int x :1 delegateSupportsWindowDidBecomeVisible; unsigned int x :1 delegateSupportsWindowWillBecomeHidden; unsigned int x :1 delegateSupportsWindowLevelOverride; unsigned int x :1 delegateSupportsWindowSupportedAndPreferredOrientationsChanged; unsigned int x :1 delegateSupportsDeprecatedWindowSupportedOrientationsChanged; } _springBoardDelegateFlags;
  NSObject<_UISceneMetricsCalculating> *_metricsCalculator;
  UITraitCollection *_overrideParentTraitCollection;
  long long _screenRequestedOverscanCompensation;
  long long _avkitRequestedOverscanCompensation;
  NSObject<_UITraitEnvironmentInternal> *_overrideParentTraitEnvironment;
}

@property (readonly, nonatomic) UIAlertControllerStackManager *_alertControllerStackManager;
@property (readonly, nonatomic) long long state;
@property (readonly, nonatomic) BOOL keyCanvas;
@property (readonly, nonatomic) _UICanvasDefinition *_definition;
@property (readonly, nonatomic) FBSScene *scene;
@property (readonly, nonatomic) UIStatusBarManager *statusBarManager;
@property (readonly, nonatomic) _UISystemAppearanceManager *_systemAppearanceManager;
@property (readonly, nonatomic) UIKeyboardSceneDelegate *keyboardSceneDelegate;
@property (readonly, nonatomic) UIFocusSystem *focusSystem;
@property (readonly, nonatomic) UIScreenshotService *screenshotService;
@property (readonly, nonatomic) UIInputResponderController *inputResponderController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) _UISearchActivityManager *_searchActivityManager;
@property (readonly, nonatomic) _UIBannerManager *_bannerManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) _UIContextBinder *_contextBinder;
@property (readonly, nonatomic) BOOL _canReceiveDeviceOrientationEvents;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _peripheryInsets;
@property (readonly, nonatomic) NSObject<_UIDisplayInfoProviding> *_displayInfoProvider;
@property (readonly, nonatomic) id /* block */ _windowOrientationPreferencesObserver;
@property (weak, nonatomic) NSObject<_UITraitEnvironmentInternal> *_overrideParentTraitEnvironment;
@property (retain, @dynamic, nonatomic) FBSDisplayConfigurationRequest *_displayConfigurationRequest;
@property (@dynamic, nonatomic) struct CGSize { double x0; double x1; } _screenRequestedDisplayNativePixelSize;
@property (nonatomic) long long _screenRequestedOverscanCompensation;
@property (nonatomic) long long _avkitRequestedOverscanCompensation;
@property (readonly, nonatomic) BOOL _userInteractionEnabled;
@property (nonatomic) BOOL _isKeyWindowScene;
@property (nonatomic) BOOL excludedFromWindowsMenu;
@property (nonatomic) long long _backgroundStyle;
@property (nonatomic) BOOL keepContextAssociationInBackground;
@property (readonly, nonatomic) BOOL _isPerformingSystemSnapshot;
@property (weak, nonatomic) NSObject<UIActivityItemsConfigurationProviding> *_activityItemsConfigurationSource;
@property (readonly, nonatomic) NSObject<UIActivityItemsConfigurationReading> *_activityItemsConfiguration;
@property (readonly, nonatomic) BOOL _canDynamicallySpecifySupportedInterfaceOrientations;
@property (readonly, nonatomic) NSObject<UITraitOverrides> *traitOverrides;
@property (readonly, nonatomic) NSObject<UITraitOverrides> *traitOverrides;
@property (readonly, nonatomic) UIScreen *screen;
@property (readonly, nonatomic) long long interfaceOrientation;
@property (readonly, nonatomic) NSObject<UICoordinateSpace> *coordinateSpace;
@property (readonly, nonatomic) UITraitCollection *traitCollection;
@property (readonly, nonatomic) UIWindowSceneGeometry *effectiveGeometry;
@property (readonly, nonatomic) UISceneSizeRestrictions *sizeRestrictions;
@property (readonly, nonatomic) NSArray *windows;
@property (readonly, nonatomic) UIWindow *keyWindow;
@property (weak, nonatomic) NSObject<UIActivityItemsConfigurationProviding> *activityItemsConfigurationSource;
@property (readonly, nonatomic) UISceneWindowingBehaviors *windowingBehaviors;
@property (readonly, nonatomic) BOOL fullScreen;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIScreen *_screen;
@property (readonly, nonatomic) long long _interfaceOrientation;
@property (readonly, nonatomic) NSObject<UICoordinateSpace> *_coordinateSpace;
@property (readonly, nonatomic) UITraitCollection *_traitCollection;
@property (readonly, nonatomic) UIStatusBarManager *_statusBarManager;
@property (readonly, nonatomic) BOOL _allowsEventUIWindowRouting;
@property (readonly, nonatomic) UIScene<_UISceneUIWindowEventRouting> *_sceneForKeyboardDisplay;

/* class methods */
+ (id)_canvasForScene:(id)scene;
+ (void)initialize;
+ (BOOL)_hostsWindows;
+ (void)_updateVisibleSceneAndWindowOrderWithTest:(id /* block */)test;
+ (BOOL)_supportsEventUIWindowRouting;
+ (id)_unassociatedWindowSceneForScreen:(id)screen create:(BOOL)create;
+ (id)_keyboardWindowSceneForScreen:(id)screen create:(BOOL)create;
+ (id)_placeholderWindowSceneForScreen:(id)screen create:(BOOL)create;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;

/* instance methods */
- (void)_willRestoreInteractionStateForUserActivityManager:(id)manager;
- (id)_orientationDebugDescriptionBuilderWithMultilinePrefix:(id)prefix;
- (id)_orientationDebugDescriptionWithMultilinePrefix:(id)prefix;
- (id)_systemInputActivityManager;
- (id)_editMenuSceneComponent;
- (void *)_fallbackTraitCollection;
- (id)_alwaysOnEnvironment;
- (id)_playbackControlsStateManager;
- (id)_screenshotServiceIfPresent;
- (BOOL)isKeyCanvas;
- (id)_scene;
- (id)canvasToolbar;
- (id)initWithSession:(id)session connectionOptions:(id)options;
- (void)_invalidate;
- (void)setDelegate:(id)delegate;
- (void)_updateAllDelegateFlags;
- (void)_updateWindowSceneDelegateFlags;
- (void)traitCollectionDidChange:(id)change;
- (void)_traitOverridesDidChange:(id)change;
- (id)registerForTraitChanges:(id)changes withHandler:(id /* block */)handler;
- (id)registerForTraitChanges:(id)changes withTarget:(id)target action:(SEL)action;
- (id)registerForTraitChanges:(id)changes withAction:(SEL)action;
- (id)_registerForTraitTokenChanges:(id)changes withHandler:(id /* block */)handler;
- (id)_registerForTraitTokenChanges:(id)changes withTarget:(id)target action:(SEL)action;
- (void)unregisterForTraitChanges:(id)changes;
- (void)_registerAuxiliaryChildEnvironmentForTraitInvalidations:(id)invalidations;
- (void)_unregisterAuxiliaryChildEnvironmentForTraitInvalidations:(id)invalidations;
- (id)_windowingBehaviorsNotInstantiating;
- (void)requestGeometryUpdateWithPreferences:(id)preferences errorHandler:(id /* block */)handler;
- (void)_setBackgroundStyle:(long long)style;
- (void)_setKeepContextAssociationInBackground:(BOOL)background;
- (BOOL)_keepContextAssociationInBackground;
- (void)_setSystemVolumeHUDEnabled:(BOOL)hudenabled forAudioCategory:(id)category;
- (void)_setSystemVolumeHUDEnabled:(BOOL)hudenabled;
- (void)_setReachabilitySupported:(BOOL)supported forReason:(id)reason;
- (void)_updateSpringBoardDelegateFlags;
- (void)_delegate_windowWillAttach:(id)attach;
- (void)_delegate_windowWillDetach:(id)detach;
- (void)_delegate_windowWillBecomeVisible:(id)visible;
- (void)_delegate_windowDidBecomeVisible:(id)visible;
- (void)_delegate_windowWillBecomeHidden:(id)hidden;
- (double)_adjustedLevelForWindow:(id)window preferredLevel:(double)level;
- (void)_screenDidChangeFromScreen:(id)screen toScreen:(id)screen;
- (void)_attachWindow:(id)window;
- (void)_detachWindow:(id)window;
- (void)_updateVisibleWindowOrderWithTest:(id /* block */)test;
- (void)_windowUpdatedVisibility:(id)visibility;
- (void)_windowUpdatedProperties:(id)properties;
- (id)_allWindowsIncludingInternalWindows:(BOOL)windows onlyVisibleWindows:(BOOL)windows;
- (void)_setActivityItemsConfigurationSource:(id)source;
- (id)_holdLiveResizeSnapshotForReason:(id)reason;
- (void)_performAfterSystemSnapshotsComplete:(id /* block */)complete;
- (void)_readySceneForConnection;
- (void)_finishSceneConnection;
- (BOOL)_shouldLoadStoryboard;
- (void)_loadWindowWithStoryboardIfNeeded:(id)needed;
- (BOOL)_shouldDeferInitialWindowUpdateBeforeConnection:(id)connection;
- (BOOL)_shouldDeferInitialWindowUpdateBeforeConnectionAndTrackIfNeeded:(id)needed;
- (BOOL)_tracksWindowsNeedingDeferredInitialUpdates;
- (BOOL)_subclassTracksWindowsNeedingDeferredInitialUpdates;
- (void)_performDeferredInitialWindowUpdateForConnection;
- (BOOL)_windowIsFront:(id)front;
- (void)_beginIgnoringInteractionEventsForReason:(id)reason;
- (void)_endIgnoringInteractionEventsForReason:(id)reason;
- (BOOL)_isUserInteractionEnabled;
- (id)_topVisibleWindowPassingTest:(id /* block */)test;
- (id)_topVisibleWindowEnumeratingAsCopy:(BOOL)copy passingTest:(id /* block */)test;
- (id)_visibleWindows;
- (id)_allWindows;
- (void)_enumerateWindowsIncludingInternalWindows:(BOOL)windows onlyVisibleWindows:(BOOL)windows asCopy:(BOOL)copy stopped:(BOOL *)stopped withBlock:(id /* block */)block;
- (id)_fbsSceneLayerForWindow:(id)window;
- (void)_recycleAttachmentForWindow:(id)window;
- (long long)interfaceElementCategory;
- (void)_prepareForResume;
- (void)_prepareForSuspend;
- (void)_completeGeometryUpdatesWithTransitionContext:(id)context;
- (void)_updateEffectiveGeometryIfNeeded;
- (id)_trueEffectiveGeometry;
- (void)_computeMetrics:(BOOL)metrics;
- (void)_computeMetrics:(BOOL)metrics withTransitionContext:(id)context;
- (void)_computeTraitCollectionAndCoordinateSpaceForcingDelegateCallback:(BOOL)callback withAction:(id /* block */)action;
- (void)_computeMetricsForWindows:(id)windows animated:(BOOL)animated;
- (void)_updateSceneTraitsAndPushTraitsToScreen:(BOOL)screen callParentWillTransitionToTraitCollection:(BOOL)collection;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_referenceBounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_referenceBoundsForOrientation:(long long)orientation;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_safeAreaInsetsForInterfaceOrientation:(long long)orientation;
- (BOOL)_shouldRotateSafeAreaInsetsToInterfaceOrientation;
- (double)_systemMinimumMargin;
- (unsigned long long)_currentlySupportedInterfaceOrientations;
- (void)_setShouldDisableTouchCancellationOnRotation:(BOOL)rotation;
- (id)_disableTouchCancellationOnRotation;
- (void)_updateClientSettingsToInterfaceOrientation:(long long)orientation withAnimationDuration:(double)duration;
- (long long)_interfaceOrientationForSupportedOrientations:(unsigned long long)orientations preferredOrientation:(long long)orientation;
- (BOOL)_windowsIgnoreSceneClientOrientation;
- (void)_componentDidUpdateTraitOverrides:(id)overrides;
- (void)_registerSceneComponent:(id)component forKey:(id)key;
- (id)_orientationDebugDescription;
- (void)_setScreenRequestedDisplayNativePixelSize:(struct CGSize { double x0; double x1; })size;
- (long long)_resolvedOverscanCompensation;
- (void)_setScreenRequestedOverscanCompensation:(long long)compensation;
- (void)_setAVKitRequestedRefreshRate:(double)rate HDRMode:(long long)hdrmode overscanCompensation:(long long)compensation;
- (void)_setDisplayConfigurationRequest:(id)request;
- (void)_noteDisplayIdentityDidChangeWithConfiguration:(id)configuration;
- (void)_applySnapshotSettings:(id)settings forActions:(id /* block */)actions;
- (BOOL)_permitContextCreationForBindingDescription:(struct { id x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; })description;
- (void)_windowDidCreateRootPresentationController:(id)controller;
- (BOOL)_usesMinimumSafeAreaInsets;
- (id)_windowSceneDelegate;
- (id)_inheritingWindowsIncludingInvisible:(BOOL)invisible;
- (id)_traitTrace:(id)trace;
- (id)_traitTrace;
- (void)_setOverrideParentTraitEnvironment:(id)environment;
- (void)_invalidateAuxiliaryChildTraits;
- (void)_updateAuxiliaryChildTraitsIfNeeded;
- (id)_parentTraitEnvironment;
- (id)_traitCollectionForChildEnvironment:(id)environment;
- (BOOL)assertionActivationStateForType:(unsigned long long)type;
- (void)assertionActivationStateChangedToState:(BOOL)state forType:(unsigned long long)type;
- (void)_showProgressWhenFetchingUserActivityForTypes:(id)types;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (void)_setAVKitRequestedOverscanCompensation:(long long)compensation;
- (BOOL)isFullScreen;
- (BOOL)isExcludedFromWindowsMenu;
@end

#endif /* UIWindowScene_h */
