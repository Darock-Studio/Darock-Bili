//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIDatePickerCalendarTimeLabel_h
#define _UIDatePickerCalendarTimeLabel_h
@import Foundation;

#include "UIView.h"
#include "UIColor.h"
#include "UIImage.h"
#include "UIInputContextHistory.h"
#include "UIKeyInput-Protocol.h"
#include "UITextInputPasswordRules.h"
#include "UITextInputTraits_Private-Protocol.h"
#include "UITextRange.h"
#include "UIView.h"
#include "_UIDatePickerCalendarTimeFormat.h"
#include "_UIDatePickerCalendarTimeLabelDelegate-Protocol.h"
#include "_UIDatePickerCalendarTimeLabelStateMachineContext.h"
#include "_UIDatePickerCalendarTimeValueStore.h"

@class NSAttributedString, NSIndexSet, NSNumberFormatter, NSString, UIFont;

@interface _UIDatePickerCalendarTimeLabel : UIView<UITextInputTraits_Private, UIKeyInput> {
  /* instance variables */
  UIView *_inputView;
  struct CGSize { double width; double height; } _lastSize;
}

@property (nonatomic) BOOL allowsTextInput;
@property (nonatomic) unsigned long long insertedDigitCount;
@property (readonly, nonatomic) _UIDatePickerCalendarTimeLabelStateMachineContext *stateContext;
@property (readonly, nonatomic) long long inputScope;
@property (retain, nonatomic) NSNumberFormatter *inputFormatter;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } hourRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } minuteRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } timeOfDayRect;
@property (readonly, nonatomic) BOOL scribbleInteractionIsActive;
@property (retain, nonatomic) _UIDatePickerCalendarTimeFormat *timeFormat;
@property (nonatomic) long long minuteInterval;
@property (nonatomic) BOOL roundsToMinuteInterval;
@property (readonly, nonatomic) long long decrementBehaviour;
@property (weak, nonatomic) NSObject<_UIDatePickerCalendarTimeLabelDelegate> *delegate;
@property (copy, nonatomic) UIFont *font;
@property (readonly, nonatomic) NSString *text;
@property (readonly, nonatomic) NSAttributedString *attributedText;
@property (copy, nonatomic) NSString *hourText;
@property (copy, nonatomic) NSString *minuteText;
@property (readonly, nonatomic) NSString *timeOfDayText;
@property (readonly, nonatomic) _UIDatePickerCalendarTimeValueStore *inputValue;
@property (copy, nonatomic) NSString *recentInputIdentifier;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } validTextRange;
@property (copy, nonatomic) NSIndexSet *PINEntrySeparatorIndexes;
@property (nonatomic) struct __CFCharacterSet * textTrimmingSet;
@property (retain, nonatomic) UIColor *insertionPointColor;
@property (retain, nonatomic) UIColor *selectionBarColor;
@property (retain, nonatomic) UIColor *selectionHighlightColor;
@property (retain, nonatomic) UIImage *selectionDragDotImage;
@property (retain, nonatomic) UIColor *selectionBorderColor;
@property (nonatomic) double selectionBorderWidth;
@property (nonatomic) double selectionCornerRadius;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } selectionEdgeInsets;
@property (retain, nonatomic) UIColor *underlineColorForTextAlternatives;
@property (retain, nonatomic) UIColor *underlineColorForSpelling;
@property (nonatomic) unsigned long long insertionPointWidth;
@property (nonatomic) int textLoupeVisibility;
@property (nonatomic) int textSelectionBehavior;
@property (nonatomic) id textSuggestionDelegate;
@property (nonatomic) BOOL isSingleLineDocument;
@property (nonatomic) BOOL contentsIsSingleValue;
@property (nonatomic) BOOL hasDefaultContents;
@property (nonatomic) BOOL acceptsPayloads;
@property (nonatomic) BOOL acceptsEmoji;
@property (nonatomic) BOOL acceptsInitialEmojiKeyboard;
@property (nonatomic) BOOL acceptsDictationSearchResults;
@property (nonatomic) BOOL useAutomaticEndpointing;
@property (nonatomic) BOOL showDictationButton;
@property (nonatomic) BOOL forceEnableDictation;
@property (nonatomic) BOOL forceDisableDictation;
@property (nonatomic) BOOL forceSpellingDictation;
@property (nonatomic) BOOL forceDefaultDictationInfo;
@property (nonatomic) long long forceDictationKeyboardType;
@property (nonatomic) BOOL preferOnlineDictation;
@property (nonatomic) int emptyContentReturnKeyType;
@property (nonatomic) BOOL returnKeyGoesToNextResponder;
@property (nonatomic) BOOL acceptsFloatingKeyboard;
@property (nonatomic) BOOL forceFloatingKeyboard;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } floatingKeyboardEdgeInsets;
@property (nonatomic) BOOL acceptsSplitKeyboard;
@property (nonatomic) BOOL displaySecureTextUsingPlainText;
@property (nonatomic) BOOL displaySecureEditsUsingPlainText;
@property (nonatomic) BOOL learnsCorrections;
@property (nonatomic) int shortcutConversionType;
@property (nonatomic) BOOL suppressReturnKeyStyling;
@property (nonatomic) BOOL useInterfaceLanguageForLocalization;
@property (nonatomic) BOOL deferBecomingResponder;
@property (nonatomic) BOOL enablesReturnKeyOnNonWhiteSpaceContent;
@property (copy, nonatomic) NSString *autocorrectionContext;
@property (copy, nonatomic) NSString *responseContext;
@property (retain, nonatomic) UIInputContextHistory *inputContextHistory;
@property (nonatomic) BOOL disableInputBars;
@property (nonatomic) BOOL isCarPlayIdiom;
@property (nonatomic) long long textScriptType;
@property (nonatomic) BOOL loadKeyboardsForSiriLanguage;
@property (retain, nonatomic) _UISupplementalLexicon *supplementalLexicon;
@property (retain, nonatomic) UIImage *supplementalLexiconAmbiguousItemIcon;
@property (nonatomic) BOOL disablePrediction;
@property (nonatomic) long long inlineCompletionType;
@property (nonatomic) BOOL hidePrediction;
@property (nonatomic) BOOL disableHandwritingKeyboard;
@property (nonatomic) BOOL devicePasscodeEntry;
@property (nonatomic) long long preferredKeyboardStyle;
@property (readonly, nonatomic) UITextRange *textRangeForServicesInteraction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long inlinePredictionType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property (readonly, nonatomic) BOOL hasText;

/* class methods */
+ (BOOL)supportsScribbleInteraction;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithTimeFormat:(id)format minuteInterval:(long long)interval;
- (void)layoutSubviews;
- (void)_uiTest_becomeFirstResponder;
- (void)_uiTest_resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)tintColorDidChange;
- (BOOL)_pointIsInsideHourSide:(struct CGPoint { double x0; double x1; })side;
- (void)didTapInputLabelAtLocation:(struct CGPoint { double x0; double x1; })location;
- (void)applyTextAttributesForState:(unsigned long long)state inputScope:(long long)scope updater:(id /* block */)updater;
- (id)attributedTextWithRanges:(struct { struct _NSRange { unsigned long long x0; unsigned long long x1; } x0; struct _NSRange { unsigned long long x0; unsigned long long x1; } x1; struct _NSRange { unsigned long long x0; unsigned long long x1; } x2; struct _NSRange { unsigned long long x0; unsigned long long x1; } x3; } *)ranges;
- (BOOL)processTapOutside;
- (void)_stateMachineSendEvent:(unsigned long long)event;
- (void)stateMachineUpdateFromState:(unsigned long long)state toState:(unsigned long long)state;
- (void)_roundInputToClosestIntervalIfNeeded;
- (void)beginEditingWheels;
- (void)wheelChanged;
- (void)endEditingWheels;
- (BOOL)_digits:(unsigned long long *)_digits fromText:(id)text count:(long long *)count;
- (BOOL)_treatMinutesAsHoursForState:(unsigned long long)state;
- (void)pushCurrentStateIntoUI;
- (void)pushCurrentStateIntoUIAndNotify;
- (void)_resetTextInput;
- (BOOL)displaysTimeOfDayLabel;
- (id)keyCommands;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (void)didReceiveUpArrowKey:(id)key;
- (void)didReceiveDownArrowKey:(id)key;
- (void)didReceiveRightArrowKey:(id)key;
- (void)didReceiveLeftArrowKey:(id)key;
- (BOOL)_suppressSoftwareKeyboard;
- (id)inputView;
- (void)insertText:(id)text;
- (void)deleteBackward;
- (void)takeTraitsFrom:(id)from;
@end

#endif /* _UIDatePickerCalendarTimeLabel_h */
