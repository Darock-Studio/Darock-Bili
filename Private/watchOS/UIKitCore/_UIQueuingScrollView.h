//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIQueuingScrollView_h
#define _UIQueuingScrollView_h
@import Foundation;

#include "UIScrollView.h"
#include "UIView.h"
#include "_UIQueuingScrollViewDataSource-Protocol.h"
#include "_UIQueuingScrollViewDelegate-Protocol.h"

@class NSArray, NSMutableArray;

@interface _UIQueuingScrollView : UIScrollView {
  /* instance variables */
  long long _navigationOrientation;
  NSArray *_views;
  NSArray *_wrapperViews;
  UIView *_pendingVisibleView;
  NSMutableArray *_viewStateQueue;
  NSMutableArray *_completionStateQueue;
  BOOL _manualScrollInProgress;
  struct { unsigned int x :1 delegateInterestedInPendingScrolls; unsigned int x :1 delegateInterestedInCommittedScrolls; unsigned int x :1 delegateInterestedInCompletedScrolls; unsigned int x :1 delegateInterestedInBailedOutScrolls; unsigned int x :1 delegateInterestedFinishedScrolling; unsigned int x :1 delegateCanVetoSubviewLayout; unsigned int x :1 dataSourceSuppliesBeforeView; unsigned int x :1 dataSourceSuppliesAfterView; unsigned int x :1 dataSourceInterestedInFlushedViews; } _delegateFlags;
}

@property (readonly, nonatomic) UIView *visibleView;
@property (weak, nonatomic) NSObject<_UIQueuingScrollViewDelegate> *qDelegate;
@property (weak, nonatomic) NSObject<_UIQueuingScrollViewDataSource> *qDataSource;
@property (nonatomic) double pageSpacing;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } disabledScrollingRegion;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame navigationOrientation:(long long)orientation;
- (void)_setFrameAndApplyPageSpacing:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })spacing;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)layoutSubviews;
- (void)_scrollViewDidEndDraggingWithDeceleration:(BOOL)deceleration;
- (void)_scrollViewDidEndDecelerating;
- (void)_scrollViewAnimationEnded:(id)ended finished:(BOOL)finished;
- (BOOL)_gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
- (unsigned long long)_abuttedPagingEdges;
- (void)scrollRectToVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visible animated:(BOOL)animated;
- (void)_handleDirectionalPageWithHorizontalVelocity:(double)velocity verticalVelocity:(double)velocity;
- (void)_setWrappedViewAtIndex:(long long)index withView:(id)view;
- (BOOL)_dataSourceProvidesViews;
- (id)_viewBefore:(BOOL)before view:(id)view;
- (id)_viewBeforeView:(id)view;
- (id)_viewAfterView:(id)view;
- (id)_visibleView;
- (void)_flushView:(id)view animated:(BOOL)animated;
- (void)_replaceViews:(id)views updatingContents:(BOOL)contents adjustContentInsets:(BOOL)insets animated:(BOOL)animated;
- (id)_requestViewForIndex:(long long)index;
- (id)_dequeueViewForIndex:(long long)index;
- (id)_viewAtIndex:(long long)index loadingIfNecessary:(BOOL)necessary updatingContents:(BOOL)contents animated:(BOOL)animated;
- (void)_invalidateOffscreenViews;
- (BOOL)isPreviousScrollCompatibleWithScrollInDirection:(long long)direction;
- (BOOL)isManualScrollInProgress;
- (long long)_navigationDirectionForActiveScroll:(BOOL)scroll;
- (long long)_navigationDirectionFromCurrentOffset;
- (void)_enqueueCompletionState:(id)state;
- (void)_cleanUpCompletionState:(id)state didFinish:(BOOL)finish didComplete:(BOOL)complete;
- (void)_enqueueAnimatedScrollInDirection:(long long)direction withView:(id)view completion:(id /* block */)completion;
- (void)_notifyDelegateWillManuallyScroll:(BOOL)scroll toRevealView:(id)view concealingView:(id)view animated:(BOOL)animated;
- (void)_notifyDelegateDidCommitManualScroll:(BOOL)scroll toRevealView:(id)view concealView:(id)view direction:(long long)direction animated:(BOOL)animated canComplete:(BOOL)complete;
- (void)_notifyDelegateDidEndManualScroll:(BOOL)scroll toRevealView:(id)view direction:(long long)direction animated:(BOOL)animated didFinish:(BOOL)finish didComplete:(BOOL)complete;
- (void)_notifyDelegateDidBailoutOfScrollAndRevealedView:(id)view;
- (void)_notifyDelegateDidFinishScrolling;
- (void)setView:(id)view direction:(long long)direction animated:(BOOL)animated completion:(id /* block */)completion;
- (void)_adjustContentInsets;
- (void)_boundsDidChangeToSize:(struct CGSize { double x0; double x1; })size;
- (void)_commitGestureDrivenScrollRevealingView:(id)view concealingView:(id)view inDirection:(long long)direction canComplete:(BOOL)complete;
- (BOOL)_isDeceleratingInOppositionToNavigationDirection:(long long)direction;
- (BOOL)_isScrollInProgress:(BOOL)progress;
- (void)_didScrollWithAnimation:(BOOL)animation force:(BOOL)force;
- (void)_didEndDraggingManualScroll;
- (void)_didEndScroll:(BOOL)scroll;
- (void)_didEndManualScroll;
- (void)_didEndProgrammaticScroll;
- (BOOL)canBecomeFocused;
@end

#endif /* _UIQueuingScrollView_h */
