//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIKeyboardArbiterClientInputDestination_h
#define _UIKeyboardArbiterClientInputDestination_h
@import Foundation;

#include "_UIKeyboardArbiterClient.h"
#include "UIScreen.h"
#include "UIWindowScene.h"

@class NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_os_transaction;

@interface _UIKeyboardArbiterClientInputDestination : _UIKeyboardArbiterClient {
  /* instance variables */
  BOOL _deactivatedBySystemAnimation;
  BOOL _resignActiveByControlCenter;
  BOOL _hadFocusBeforeOverlay;
  UIWindowScene *_suppressedScene;
  int _hostedCount;
  UIScreen *_lastScreen;
  NSObject<OS_os_transaction> *_clientChangeResponseTransaction;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _clientChangeResponseLock;
  NSString *_keyboardSceneIdentifierEnteringForeground;
}

@property (retain, nonatomic) NSMutableSet *pendingKeyboardGrabs;
@property (retain, nonatomic) NSMutableSet *activePIDs;
@property (retain, nonatomic) NSMutableDictionary *callerIDs;
@property (nonatomic) BOOL updatingKeyWindow;
@property (copy, nonatomic) NSString *focusedSceneIdentityStringOrIdentifier;

/* class methods */
+ (id)currentBundleIdentifier;

/* instance methods */
- (id)init;
- (id)currentHostedPIDs;
- (void)startConnection;
- (void)startConnectionWithCompletion:(id /* block */)completion;
- (void)stopConnection;
- (void)configureArbiterCommunication:(id)communication;
- (void)didFailArbiterConnection;
- (void)setCurrentClientState:(id)state;
- (void)setSnapshotting:(BOOL)snapshotting;
- (BOOL)shouldSnapshot;
- (void)restorePreservedInputViewsIfNecessary;
- (void)willResume:(id)resume;
- (void)sceneDidDisconnect:(id)disconnect;
- (void)didSuspend:(id)suspend;
- (void)willAddDeactivationReason:(id)reason;
- (void)didRemoveDeactivationReason:(id)reason;
- (void)willResignActive:(id)active;
- (void)didBecomeActive:(id)active;
- (void)setSuppressingKeyboard:(BOOL)keyboard forScene:(id)scene;
- (BOOL)shouldIgnoreInputDestinationChange:(BOOL)change withIAVHeight:(double)iavheight;
- (BOOL)inputDestinationDidChange:(BOOL)change withIAVHeight:(double)iavheight isIAVRelevant:(BOOL)iavrelevant notifyRemote:(BOOL)remote forScene:(id)scene;
- (void)_preserveInputViewsForClientChange:(BOOL)change snapshotIfNecessary:(BOOL)necessary;
- (void)_layoutKeyboardViews:(id)views;
- (BOOL)_didHandleKeyboardClientChange:(id)change shouldConsiderSnapshottingKeyboard:(BOOL)keyboard isLocalEvent:(BOOL)event;
- (void)signalToProxyKeyboardChanged:(id)changed onCompletion:(id /* block */)completion;
- (unsigned long long)localSceneCount;
- (id)_activeScreen;
- (void)applicationKeyWindowDidChange:(id)change;
- (BOOL)isHostedInAnotherProcess;
- (BOOL)hasWindowHostingPID:(int)pid;
- (BOOL)hasWindowHostingCallerID:(id)id;
- (void)addWindowHostingPID:(int)pid callerID:(id)id;
- (void)removeWindowHostingPID:(int)pid callerID:(id)id;
- (void)setWindowHostingPID:(int)pid active:(BOOL)active;
- (BOOL)wantsToShowKeyboard;
- (BOOL)wantsToShowKeyboardForViewServiceHost;
- (id)prepareForHostedWindowWithScene:(id)scene;
- (void)finishWithHostedWindow;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })keyboardFrameIncludingRemoteIAV;
- (BOOL)needsToShowKeyboard;
- (BOOL)needsToShowKeyboardForViewServiceHost;
- (BOOL)allowedToShowKeyboard;
- (void)sceneDidEnterBackground:(id)background;
- (void)sceneDidActivate:(id)activate;
- (void)setKeyboardSceneIdentifierEnteringForegroundForScene:(id)scene;
- (void)clearKeyboardSceneIdentifierEnteringForeground:(id)foreground;
- (void)sceneWillEnterForeground:(id)foreground;
- (BOOL)allowedToEnableKeyboardWindow;
- (void)resignFirstResponderIfNeeded;
- (void)setWindowEnabled:(BOOL)enabled;
- (void)setWindowEnabled:(BOOL)enabled force:(BOOL)force;
- (void)updateWindowState;
- (void)completeMoveKeyboard;
- (void)userSelectedApp:(id)app onCompletion:(id /* block */)completion;
- (BOOL)_sceneFocusPermittedForApplication;
- (BOOL)_sceneFocusUpdatePermittedForWindow:(id)window;
- (void)peekApplicationEvent:(id)event;
- (void)queue_endInputSessionWithCompletion:(id /* block */)completion;
- (void)queue_keyboardChanged:(id)changed onComplete:(id /* block */)complete;
- (void)handleKeyboardUIDidChange:(id)change;
- (void)queue_keyboardUIDidChange:(id)change onComplete:(id /* block */)complete;
- (void)syncKeyboardUIChangeInfo:(id)info;
- (void)keyboardUIDidChange:(id)change onComplete:(id /* block */)complete;
- (void)queue_activeProcessResignWithCompletion:(id /* block */)completion;
- (void)queue_setKeyboardDisabled:(BOOL)disabled withCompletion:(id /* block */)completion;
- (void)queue_sceneBecameFocused:(id)focused withCompletion:(id /* block */)completion;
@end

#endif /* _UIKeyboardArbiterClientInputDestination_h */
