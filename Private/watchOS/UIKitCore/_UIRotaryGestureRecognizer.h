//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIRotaryGestureRecognizer_h
#define _UIRotaryGestureRecognizer_h
@import Foundation;

#include "UIGestureRecognizer.h"
#include "_UIRotaryGestureRecognizerDelegate-Protocol.h"

@class NSMutableArray, NSNumber, NSTimer;

@interface _UIRotaryGestureRecognizer : UIGestureRecognizer {
  /* instance variables */
  struct { unsigned int x :1 delegateRotaryGestureRecognizerCanBeginFromRest; unsigned int x :1 delegateRotaryGestureRecognizerMustBeginFromRest; unsigned int x :1 delegateRotaryGestureRecognizerStartedRestTimer; unsigned int x :1 delegateRotaryGestureRecognizerCancelledRestTimer; unsigned int x :1 delegateRotaryGestureRecognizerBeganClassifyingMovement; unsigned int x :1 delegateRotaryGestureRecognizerUpdatedClassifyingMovement; unsigned int x :1 delegateRotaryGestureRecognizerFailedClassifyingMovement; unsigned int x :1 delegateWasNonNil; } _rotaryGestureRecognizerFlags;
  BOOL _hasNotifiedDelegateBeganClassifyingMovement;
  double _startWheelPosition;
  double _currentWheelPosition;
  double _rotaryDeadBand;
  long long _movementClassification;
  struct CGPoint { double x; double y; } _touchBeganPoint;
  struct CGPoint { double x; double y; } _digitizerLocation;
  NSMutableArray *_recentRotaryEvents;
  NSNumber *_delegateMustBeginFromRestValue;
  NSTimer *_restingTouchBeginTimer;
  NSTimer *_restingTouchRecoveryTimer;
}

@property (nonatomic) double accumulatedDistance;
@property (nonatomic) double delta;
@property (nonatomic) double velocity;
@property (nonatomic) BOOL isActivelyTouching;
@property (nonatomic) long long startRegion;
@property (nonatomic) long long beganMode;
@property (weak, @dynamic, nonatomic) NSObject<_UIRotaryGestureRecognizerDelegate> *delegate;
@property (readonly, nonatomic) double position;

/* instance methods */
- (id)initWithTarget:(id)target action:(SEL)action;
- (id)initWithCoder:(id)coder;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)touchesMoved:(id)moved withEvent:(id)event;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;
- (void)reset;
- (void)_enterRecoveryWindowOrEndGestureWithState:(long long)state;
- (BOOL)_isTouchFarEnoughFromCenterToActivateRestingTouch:(struct CGPoint { double x0; double x1; })touch;
- (BOOL)_isTouchInRangeOfInitialTouchForRestingTouchActivation:(struct CGPoint { double x0; double x1; })activation;
- (void)_activateRestingTouchRecoveryTimer;
- (void)_endGestureFromRestingTouchRecovery:(id)recovery;
- (BOOL)_invalidateRestingTouchBeginTimerIfNecessary;
- (void)_invalidateRestingTouchRecoveryTimerIfNecessary;
- (void)_attemptToStartFromRestingTouch:(id)touch;
- (BOOL)_effectiveCanBeginFromRest;
- (long long)_regionForTouchLocation:(struct CGPoint { double x0; double x1; })location;
- (long long)_regionForWheelPosition:(double)position;
- (double)_calculateCurrentWheelPosition;
- (double)_calculateWheelPositionForTouchLocation:(struct CGPoint { double x0; double x1; })location;
- (void)_processEvent:(id)event;
- (void)_notifyDelegateRestTimerCancelledIfNecessary:(BOOL)necessary;
- (void)_notifyDelegateBeganClassifyingMovementIfNecessary;
- (void)_notifyDelegateUpdatedClassifyingMovement;
- (void)_notifyDelegateFailedClassifyingMovement;
- (BOOL)_effectiveMustBeginFromRest;
- (void)_attemptToClassifyWithPreviousLocation:(struct CGPoint { double x0; double x1; })location newLocation:(struct CGPoint { double x0; double x1; })location;
- (double)_velocityForEventInfos:(id)infos;
- (double)_applyDeadbandToValue:(double)value;
- (double)_deltaForEventInfos:(id)infos;
- (double)_applyDistanceWeightToValue:(double)value;
- (double)_applyScaleFactor:(double)factor toValue:(double)value fromAngle:(double)angle toAngle:(double)angle;
- (double)_deadzoneRangeForCurrentTouchLocation;
- (double)_restingTouchRangeForCurrentTouchLocation;
- (BOOL)_isPoint:(struct CGPoint { double x0; double x1; })point inRangeOfCenter:(double)center;
- (double)_calculateRadialDistance:(struct CGPoint { double x0; double x1; })distance;
- (double)_calculateAngleForTouchLocation:(struct CGPoint { double x0; double x1; })location;
- (void)_resetDeadband;
- (double)_directionalMovementClassificationDistanceThreshold;
- (double)_movementClassificationAngleThresholdNumerator;
@end

#endif /* _UIRotaryGestureRecognizer_h */
