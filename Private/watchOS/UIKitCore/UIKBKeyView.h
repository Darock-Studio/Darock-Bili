//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIKBKeyView_h
#define UIKBKeyView_h
@import Foundation;

#include "UIView.h"
#include "UIKBCacheableView-Protocol.h"
#include "UIKBKeyView.h"
#include "UIKBRenderConfig.h"
#include "UIKBRenderFactory.h"
#include "UIKBScreenTraits.h"
#include "UIKBTree.h"
#include "UIKeyboardMenuView.h"

@class NSMutableDictionary, NSString;

@interface UIKBKeyView : UIView<UIKBCacheableView> {
  /* instance variables */
  UIKBTree *m_keyplane;
  UIKBTree *m_key;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } m_drawFrame;
  struct __CFBoolean * m_allowsCaching;
  UIKBRenderConfig *m_renderConfig;
  UIKBRenderFactory *m_factory;
  NSMutableDictionary *_keyLayers;
  int _renderedKeyState;
  struct CGColor * _activeBackgroundColor;
  id _activeCompositingFilter;
  BOOL _singleRerender;
  double _cachedBackgroundOpacity;
}

@property (nonatomic) BOOL renderAsMask;
@property (readonly) long long cachedRenderFlags;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } displayInsets;
@property (retain, nonatomic) NSString *cachedTraitsHashString;
@property (nonatomic) unsigned long long cachedAnchorCorner;
@property (nonatomic) unsigned long long cachedShiftState;
@property (nonatomic) long long cachedSelector;
@property (nonatomic) BOOL cachedControlKeyRenderingPreference;
@property (nonatomic) BOOL containedInDynamicKey;
@property (readonly, nonatomic) UIKBTree *keyplane;
@property (readonly, nonatomic) UIKBTree *key;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } drawFrame;
@property (retain, nonatomic) UIKBRenderConfig *renderConfig;
@property (retain, nonatomic) UIKBRenderFactory *factory;
@property (weak, nonatomic) UIKeyboardMenuView *popupMenu;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } variantFrame;
@property (readonly, nonatomic) UIKBKeyView *contentsKeyView;
@property (nonatomic) double endingTransitionDuration;
@property (retain, nonatomic) UIKBScreenTraits *screenTraits;
@property (readonly, nonatomic) BOOL isDynamicKey;
@property (readonly, nonatomic) NSString *cacheKey;
@property (readonly, nonatomic) BOOL cacheDeferable;
@property (readonly, nonatomic) double cachedWidth;
@property (readonly, nonatomic) BOOL keepNonPersistent;
@property (readonly, nonatomic) long long assetIdiom;
@property (readonly, nonatomic) long long cacheDeferPriority;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)wantsScreenTraits;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame keyplane:(id)keyplane key:(id)key;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame keyplane:(id)keyplane key:(id)key screenTraits:(id)traits;
- (void)updateForKeyplane:(id)keyplane key:(id)key;
- (void)updateKeySelectedVariantIndex:(long long)index;
- (void)updateKeySubtrees:(id)subtrees;
- (void)dealloc;
- (int)textEffectsVisibilityLevel;
- (BOOL)_viewShouldBeOpaque;
- (void)_applyAppearanceInvocations;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (unsigned long long)focusableVariantCount;
- (id)subTreeHitTest:(struct CGPoint { double x0; double x1; })test;
- (long long)didInputSubTree:(id)tree;
- (void)willDisplayModalActionView:(id)view withSubTreeKeyView:(id)view completion:(id /* block */)completion;
- (void)dimKeys:(id)keys;
- (void)hideKeyCap:(BOOL)cap;
- (void)orientKeyCap:(long long)cap;
- (void)updateKeycapLayerOrientation;
- (id)cacheKeysForRenderFlags:(id)flags;
- (BOOL)allowBackgroundCachingForRenderFlags:(long long)flags;
- (BOOL)hasRendered;
- (BOOL)_shouldUpdateLayers;
- (BOOL)requiresSublayers;
- (void)prepareForDisplay;
- (void)removeFromSuperview;
- (id)layerForRenderFlags:(long long)flags;
- (BOOL)_isActivePopupKey;
- (long long)imageOrientationForLayer:(id)layer;
- (void)_populateLayer:(id)layer withContents:(id)contents;
- (id)renderFlagsForTraits:(id)traits;
- (void)displayLayer:(id)layer;
- (void)drawContentsOfRenderers:(id)renderers;
- (BOOL)_canDrawContent;
- (id)_generateBackdropMaskImage;
- (void)configureBackdropView:(id)view forRenderConfig:(id)config;
- (void)changeBackgroundToEnabled;
- (void)changeBackgroundToActiveIfNecessary;
- (void)resetRenderedKeyState;
@end

#endif /* UIKBKeyView_h */
