//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIInteractivePageControlVisualProvider_h
#define _UIInteractivePageControlVisualProvider_h
@import Foundation;

#include "_UIPageControlVisualProvider.h"
#include "UIDelayedAction.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UILongPressGestureRecognizer.h"
#include "UITapGestureRecognizer.h"
#include "UIView.h"
#include "UIViewFloatAnimatableProperty.h"
#include "_UIControlEventsGestureRecognizerDelegate-Protocol.h"
#include "_UIPageControlContentView.h"
#include "_UIPageControlIndicatorContentView.h"
#include "_UIPageControlInteractor.h"
#include "_UIPageIndicatorFeed.h"
#include "_UIPageIndicatorFeedDelegate-Protocol.h"
#include "_UIPageIndicatorStore.h"
#include "_UIPageIndicatorStoreDelegate-Protocol.h"

@class CADisplayLink, CAMediaTimingFunction, NSString;

@interface _UIInteractivePageControlVisualProvider : _UIPageControlVisualProvider<_UIPageIndicatorFeedDelegate, _UIPageIndicatorStoreDelegate, UIGestureRecognizerDelegate, _UIControlEventsGestureRecognizerDelegate> {
  /* instance variables */
  struct { unsigned int x :1 scrubbing; unsigned int x :1 platterExpanded; unsigned int x :1 didScrubPastInitialThreshold; } _state;
  long long _indicatorStartIndex;
  long long _numberOfVisibleIndicators;
  long long _targetPage;
  long long _currentTick;
  long long _tickThreshold;
  double _panDistance;
  double _indicatorPaddingOffset;
  double _continuousStartIndex;
  UIView *_backgroundView;
}

@property (retain, nonatomic) _UIPageControlContentView *contentView;
@property (retain, nonatomic) _UIPageControlIndicatorContentView *indicatorContentView;
@property (nonatomic) BOOL platterExpanded;
@property (nonatomic) BOOL scrubbing;
@property (retain, nonatomic) CADisplayLink *displayLink;
@property (retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer;
@property (retain, nonatomic) UILongPressGestureRecognizer *scrubbingGestureRecognizer;
@property (retain, nonatomic) UIDelayedAction *successiveTapAction;
@property (nonatomic) long long previousMoveDirection;
@property (nonatomic) struct CGPoint { double x0; double x1; } previousTouchLocation;
@property (retain, nonatomic) _UIPageIndicatorFeed *indicatorFeed;
@property (retain, nonatomic) _UIPageIndicatorStore *indicatorStore;
@property (retain, nonatomic) _UIPageControlInteractor *interactor;
@property (retain, nonatomic) UIViewFloatAnimatableProperty *continuousDisplayedPage;
@property (retain, nonatomic) UIViewFloatAnimatableProperty *scrubProgress;
@property (retain, nonatomic) CAMediaTimingFunction *indicatorTransformCurve;
@property (readonly, nonatomic) long long resolvedDirection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)prepare;
- (void)pruneArchivedSubviews:(id)subviews;
- (BOOL)shouldDisableTouchTracking;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)setPage:(long long)page interactionState:(long long)state;
- (void)didUpdateLayoutDirection;
- (void)traitCollectionDidChangeOnSubtree:(id)subtree;
- (void)didUpdateNumberOfPages;
- (void)didUpdateBackgroundStyle;
- (void)didUpdateBackgroundEffect;
- (void)didUpdateCustomLayoutValues;
- (void)didUpdatePageProgress;
- (void)didUpdateCurrentPageProgress;
- (void)didUpdateInteractionTypeAvailability;
- (void)didUpdatePageIndicatorTintColor;
- (void)didUpdateCurrentPageIndicatorTintColor;
- (void)updateDisplayedPageToCurrentPage;
- (double)indicatorOpacity;
- (void)setIndicatorOpacity:(double)opacity;
- (void)setBackgroundView:(id)view;
- (id)backgroundView;
- (void)layoutSubviews;
- (void)invalidateIndicators;
- (struct CGSize { double x0; double x1; })sizeForNumberOfPages:(long long)pages;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })indicatorFrameForPage:(long long)page;
- (struct CGSize { double x0; double x1; })indicatorSizeForImage:(id)image;
- (unsigned long long)maxVisibleIndicators;
- (void)configureIndicatorImagesForIndicator:(id)indicator atPage:(long long)page;
- (void)configureIndicator:(id)indicator atPage:(long long)page;
- (id)customIndicatorImageForPage:(long long)page;
- (void)setCustomIndicatorImage:(id)image forPage:(long long)page;
- (void)setPreferredIndicatorImage:(id)image;
- (id)preferredIndicatorImage;
- (id)customActiveIndicatorImageForPage:(long long)page;
- (void)setCustomActiveIndicatorImage:(id)image forPage:(long long)page;
- (void)setPreferredActiveIndicatorImage:(id)image;
- (id)preferredActiveIndicatorImage;
- (void)controlEventsGestureRecognizer:(id)recognizer recognizedControlEvent:(unsigned long long)event withEvent:(id)event;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (void)resetSuccessiveTapInfo;
- (void)didTapPageControl:(id)control;
- (BOOL)supportsContinuousInteraction;
- (void)didScrubPageControl:(id)control;
- (void)displayLinkTicked:(id)ticked;
- (BOOL)isScrubbing;
- (BOOL)isPlatterExpanded;
@end

#endif /* _UIInteractivePageControlVisualProvider_h */
