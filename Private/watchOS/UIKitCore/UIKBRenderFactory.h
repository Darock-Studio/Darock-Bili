//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIKBRenderFactory_h
#define UIKBRenderFactory_h
@import Foundation;

#include "UIKBRenderConfig.h"
#include "UIKBRenderingContext.h"

@class NSArray, NSMutableArray;

@interface UIKBRenderFactory : NSObject {
  /* instance variables */
  BOOL _suppressSegmentTraits;
}

@property (readonly, nonatomic) NSArray *segmentTraits;
@property (nonatomic) double rivenSizeFactor;
@property (nonatomic) BOOL lightweightFactory;
@property (nonatomic) BOOL increasedContrastEnabled;
@property (nonatomic) double scale;
@property (nonatomic) struct CGSize { double x0; double x1; } stretchFactor;
@property (retain, nonatomic) UIKBRenderingContext *renderingContext;
@property (readonly) UIKBRenderConfig *renderConfig;
@property (nonatomic) BOOL allowsPaddles;
@property (nonatomic) BOOL preferStringKeycapOverImage;
@property (readonly, nonatomic) BOOL boldTextEnabled;
@property (nonatomic) BOOL drawsOneHandedAffordance;
@property (readonly, nonatomic) long long assetIdiom;
@property (nonatomic) BOOL dynamicFactory;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } dynamicInsets;
@property (readonly, nonatomic) double dynamicBottomRowMultiplier;

/* class methods */
+ (BOOL)_enabled;
+ (long long)_graphicsQuality;
+ (Class)factoryClassForVisualStyle:(struct { unsigned int x0 :6; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :8; unsigned int x4 :8; unsigned int x5 :8; })style renderingContext:(id)context;
+ (id)factoryForVisualStyle:(struct { unsigned int x0 :6; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :8; unsigned int x4 :8; unsigned int x5 :8; })style renderingContext:(id)context skipLayoutSegments:(BOOL)segments;
+ (id)factoryForVisualStyle:(struct { unsigned int x0 :6; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :8; unsigned int x4 :8; unsigned int x5 :8; })style renderingContext:(id)context;
+ (id)lightweightFactoryForVisualStyle:(struct { unsigned int x0 :6; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :8; unsigned int x4 :8; unsigned int x5 :8; })style renderingContext:(id)context;
+ (id)cacheKeyForString:(id)string withRenderFlags:(long long)flags renderingContext:(id)context;
+ (id)segmentedControlColor:(BOOL)color;
+ (id)_characterSetForGlyphSelectors;
+ (BOOL)couldUseGlyphSelectorForDisplayString:(id)string;

/* instance methods */
- (void)modifyKeyTraitsForPasscode:(id)passcode forKey:(id)key onKeyplane:(id)keyplane;
- (id)passcodeBackgroundTraitsForKeyplane:(id)keyplane;
- (double)passcodeEdgeWeight;
- (id)passcodeKeyEdgeColorName;
- (id)passcodeControlKeyTraits;
- (id)passcodeActiveControlKeyTraits;
- (id)passcodeShiftedControlKeyTraits;
- (id)extraPasscodePaddleTraits;
- (double)keyCornerRadius;
- (double)emojiPopupDividerKeyOffset;
- (struct CGPoint { double x0; double x1; })dualStringKeyTopTextOffset:(id)offset keyplane:(id)keyplane;
- (struct CGPoint { double x0; double x1; })dualStringKeyBottomTextOffset:(id)offset keyplane:(id)keyplane;
- (void)modifyTraitsForDetachedInputSwitcher:(id)switcher withKey:(id)key;
- (void)modifyTraitsForDividerVariant:(id)variant withKey:(id)key;
- (id)initWithRenderingContext:(id)context skipLayoutSegments:(BOOL)segments;
- (double)RivenFactor:(double)factor;
- (struct CGPoint { double x0; double x1; })RivenPointFactor:(struct CGPoint { double x0; double x1; })factor;
- (void)scaleTraits:(id)traits;
- (double)translucentGapWidth;
- (void)lowQualityTraits:(id)traits;
- (void)setupLayoutSegments;
- (BOOL)supportsInputTraits:(id)traits forKeyplane:(id)keyplane;
- (id)backgroundTraitsForKeyplane:(id)keyplane;
- (id)_traitsForKey:(id)key onKeyplane:(id)keyplane;
- (void)customizeLanguageIndicatorTraitsForTraits:(id)traits;
- (void)customizeMicOnTraitsForTraits:(id)traits lightKeyboard:(BOOL)keyboard keyState:(int)state;
- (id)traitsForKey:(id)key onKeyplane:(id)keyplane;
- (id)hashStringElement;
- (BOOL)keyIsRightToLeftSensitive:(id)sensitive;
- (id)traitsHashStringForKey:(id)key withGeometry:(id)geometry withSymbolStyle:(id)style controlOpacities:(BOOL)opacities blurBlending:(BOOL)blending;
- (id)globalKeyImageName;
- (id)globalEmojiKeyImageName;
- (id)dictationKeyImageName;
- (id)dismissKeyImageName;
- (id)multitapCompleteKeyImageName;
- (id)muttitapReverseKeyImageName;
- (id)handwritingMoreKeyImageName;
- (id)deleteKeyImageName;
- (id)deleteOnKeyImageName;
- (id)shiftKeyImageName;
- (id)shiftOnKeyImageName;
- (id)shiftLockImageName;
- (id)returnKeyImageName;
- (id)leftArrowKeyImageName;
- (id)rightArrowKeyImageName;
- (id)cutKeyImageName;
- (id)copyKeyImageName;
- (id)pasteKeyImageName;
- (id)undoKeyImageName;
- (id)redoKeyImageName;
- (id)boldKeyImageName;
- (id)biuKeyImageName;
- (id)messagesWriteboardKeyImageName;
- (id)spaceKeyGrabberHandlesImageName;
- (id)ZWNJKeyImageName;
- (double)skinnyKeyThreshold;
- (id)keyImageNameWithSkinnyVariation:(id)variation;
- (id)displayContentsForKey:(id)key;
- (void)applyBoldTextForContent:(id)content withKey:(id)key;
- (BOOL)shouldClearBaseDisplayStringForVariants:(id)variants;
- (BOOL)useBlueThemingForKey:(id)key;
- (void)addLayoutSegment:(id)segment;
- (void)suppressLayoutSegments;
- (long long)enabledBlendForm;
- (long long)lightHighQualityEnabledBlendForm;
- (id)defaultKeyBackgroundColorName;
- (id)controlKeyBackgroundColorName;
- (id)_controlKeyBackgroundColorName;
- (id)_defaultControlKeyBackgroundColorName;
- (id)lowQualityLayeredBackgroundColorName;
- (id)controlKeyForegroundColorName;
- (id)defaultKeyShadowColorName;
- (id)controlKeyShadowColorName;
- (id)lightKeycapsFontName;
- (id)thinKeycapsFontName;
- (id)lightPadKeycapsFontName;
- (id)lightTextFontName;
- (id)thinTextFontName;
- (void)_customizeTraits:(id)traits forPopupForKey:(id)key withRenderingContext:(id)context keycapsFontName:(id)name;
- (long long)glyphSelectorForDisplayString:(id)string;
- (BOOL)popupKeyUsesCustomKeyContentView:(id)view;
- (Class)contentViewClassForPopupKey:(id)key;
- (BOOL)allowsPaddleForKey:(id)key;
@end

#endif /* UIKBRenderFactory_h */
