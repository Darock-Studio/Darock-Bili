//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIAlertView_h
#define UIAlertView_h
@import Foundation;

#include "UIView.h"
#include "UIAlertController.h"
#include "UIViewController.h"
#include "_UIAlertControllerShimPresenter.h"

@class NSMutableArray, NSString;

@interface UIAlertView : UIView {
  /* instance variables */
  UIAlertController *_alertController;
  _UIAlertControllerShimPresenter *_presenter;
  id _retainedSelf;
  NSMutableArray *_actions;
  long long _cancelIndex;
  BOOL _hasPreparedAlertActions;
  BOOL _isPresented;
  BOOL _alertControllerShouldDismiss;
  BOOL _handlingAlertActionShouldDismiss;
  BOOL _dismissingAlertController;
}

@property (retain, nonatomic) id context;
@property (nonatomic) long long defaultButtonIndex;
@property (nonatomic) long long numberOfRows;
@property (retain, nonatomic) NSString *subtitle;
@property (retain, nonatomic) UIViewController *externalViewControllerForPresentation;
@property (retain, nonatomic) NSString *bodyText;
@property (nonatomic) BOOL groupsTextFields;
@property (weak, nonatomic) id delegate;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *message;
@property (readonly, nonatomic) long long numberOfButtons;
@property (nonatomic) long long cancelButtonIndex;
@property (readonly, nonatomic) long long firstOtherButtonIndex;
@property (readonly, nonatomic) BOOL visible;
@property (nonatomic) long long alertViewStyle;

/* class methods */
+ (id)_remoteAlertViewWithBlock:(id /* block */)block;
+ (id)_alertViewForSessionWithRemoteViewController:(id)controller;
+ (id)_alertViewForWindow:(id)window;

/* instance methods */
- (id)initWithTitle:(id)title message:(id)message delegate:(id)delegate cancelButtonTitle:(id)title;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithTitle:(id)title buttons:(id)buttons defaultButtonIndex:(int)index delegate:(id)delegate context:(id)context;
- (id)initWithTitle:(id)title message:(id)message delegate:(id)delegate defaultButton:(id)button cancelButton:(id)button otherButtons:(id)buttons;
- (id)initWithTitle:(id)title message:(id)message delegate:(id)delegate cancelButtonTitle:(id)title otherButtonTitles:(id)titles;
- (id)initWithCoder:(id)coder;
- (void)dealloc;
- (void)_updateButtonTitle:(id)title buttonIndex:(unsigned long long)index;
- (id)_preparedAlertActionAtIndex:(unsigned long long)index;
- (void)_prepareAlertActions;
- (BOOL)isVisible;
- (void)_updateMessageAndSubtitle;
- (id)window;
- (BOOL)_prepareToDismissForTappedIndex:(long long)index;
- (void)_dismissForTappedIndex:(long long)index;
- (void)_setIsPresented:(BOOL)presented;
- (id)addButtonWithTitle:(id)title label:(id)label;
- (id)addButtonWithTitle:(id)title buttonClass:(Class)class;
- (long long)addButtonWithTitle:(id)title;
- (void)_setFirstOtherButtonIndex:(long long)index;
- (void)_updateFirstOtherButtonEnabledState;
- (id)buttonTitleAtIndex:(long long)index;
- (int)buttonCount;
- (long long)_maximumNumberOfTextFieldsForCurrentStyle;
- (id)_addTextFieldWithValue:(id)value label:(id)label;
- (id)addTextFieldWithValue:(id)value label:(id)label;
- (void)_textDidChangeInTextField:(id)field;
- (int)textFieldCount;
- (id)textField;
- (id)textFieldAtIndex:(long long)index;
- (void)_showAnimated:(BOOL)animated;
- (void)show;
- (void)dismissAnimated:(BOOL)animated;
- (void)dismissWithClickedButtonIndex:(long long)index animated:(BOOL)animated;
- (void)_performPresentationDismissalWithClickedButtonIndex:(long long)index animated:(BOOL)animated;
- (BOOL)_isAnimating;
- (struct CGSize { double x0; double x1; })backgroundSize;
- (void)_setAccessoryView:(id)view;
- (void)dismiss;
- (void)layout;
- (id)_titleLabel;
- (id)titleLabel;
- (id)keyboard;
- (id)tableView;
- (id)_addButtonWithTitle:(id)title;
- (void)setTableShouldShowMinimumContent:(BOOL)content;
- (id)_alertController;
- (id)_externalViewControllerForPresentation;
- (void)_setExternalViewControllerForPresentation:(id)presentation;
@end

#endif /* UIAlertView_h */
