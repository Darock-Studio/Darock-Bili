//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIControl_h
#define UIControl_h
@import Foundation;

#include "UIView.h"
#include "UIToolTipInteraction.h"

@class NSMutableArray, NSSet, NSString, UIContextMenuInteraction;

@interface UIControl : UIView {
  /* instance variables */
  NSMutableArray *_targetActions;
  struct CGPoint { double x; double y; } _previousPoint;
  double _downTime;
  struct { unsigned int x :1 disabled; unsigned int x :1 tracking; unsigned int x :1 touchInside; unsigned int x :1 touchDragged; unsigned int x :1 requiresDisplayOnTracking; unsigned int x :1 highlighted; unsigned int x :1 dontHighlightOnTouchDown; unsigned int x :1 allowActionsToQueue; unsigned int x :1 pendingUnhighlight; unsigned int x :1 selected; unsigned int x :3 verticalAlignment; unsigned int x :3 horizontalAlignment; unsigned int x :1 wasLastHighlightSuccessful; unsigned int x :1 touchHasHighlighted; unsigned int x :1 enableSymbolAnimations; } _controlFlags;
  long long _requiredButtonMask;
}

@property (readonly, nonatomic) long long effectiveContentVerticalAlignment;
@property (nonatomic) BOOL _hasActiveMenuPresentation;
@property (nonatomic) BOOL contextMenuEnabled;
@property (nonatomic) BOOL contextMenuIsPrimary;
@property (nonatomic) long long _requiredButtonMask;
@property (nonatomic) BOOL _enableSymbolAnimations;
@property (readonly, nonatomic) BOOL _allowsSymbolAnimations;
@property (@dynamic, nonatomic) BOOL enabled;
@property (@dynamic, nonatomic) BOOL selected;
@property (@dynamic, nonatomic) BOOL highlighted;
@property (@dynamic, nonatomic) long long contentVerticalAlignment;
@property (@dynamic, nonatomic) long long contentHorizontalAlignment;
@property (readonly, nonatomic) long long effectiveContentHorizontalAlignment;
@property (readonly, @dynamic, nonatomic) unsigned long long state;
@property (readonly, @dynamic, nonatomic) BOOL tracking;
@property (readonly, @dynamic, nonatomic) BOOL touchInside;
@property (readonly, nonatomic) NSSet *allTargets;
@property (readonly, nonatomic) unsigned long long allControlEvents;
@property (readonly, nonatomic) UIContextMenuInteraction *contextMenuInteraction;
@property (nonatomic) BOOL contextMenuInteractionEnabled;
@property (nonatomic) BOOL showsMenuAsPrimaryAction;
@property (copy, nonatomic) NSString *toolTip;
@property (readonly, nonatomic) UIToolTipInteraction *toolTipInteraction;
@property (nonatomic) BOOL symbolAnimationEnabled;

/* class methods */
+ (BOOL)_allowActionsToQueue;
+ (unsigned long long)_primaryStateForState:(unsigned long long)state;

/* instance methods */
- (id)__scalarStatisticsForUserTouchUpInsideEvent;
- (id)__scalarStatisticsForUserValueChangedEvent;
- (id)__distributionStatisticsForUserInteractionDuration;
- (id)_scalarStatisticsForUserTouchUpInsideEvent;
- (id)_scalarStatisticsForUserValueChangedEvent;
- (id)_distributionStatisticsForUserInteractionDuration;
- (void)_incrementStatisticsForUserActionForEvents:(unsigned long long)events;
- (void)_beginInteractionDurationStatisticMeasurements;
- (void)_commitInteractionDurationStatisticMeasurements;
- (void)_connectInterfaceBuilderEventConnection:(id)connection;
- (void)_activateForAccessibilityHUDLiftAtPoint:(struct CGPoint { double x0; double x1; })point;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_commonInitForPrimaryAction:(id)action;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame primaryAction:(id)action;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEnabled;
- (BOOL)isTracking;
- (BOOL)isTouchInside;
- (BOOL)cancelMouseTracking;
- (BOOL)cancelTouchTracking;
- (BOOL)beginTrackingWithTouch:(id)touch withEvent:(id)event;
- (BOOL)continueTrackingWithTouch:(id)touch withEvent:(id)event;
- (void)endTrackingWithTouch:(id)touch withEvent:(id)event;
- (void)cancelTrackingWithEvent:(id)event;
- (BOOL)isHighlighted;
- (void)_setHasActiveMenuPresentation:(BOOL)presentation;
- (BOOL)isSelected;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test forEvent:(struct __GSEvent *)event;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)touchesMoved:(id)moved withEvent:(id)event;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;
- (void)touchesEstimatedPropertiesUpdated:(id)updated;
- (void)_willMoveToWindow:(id)window;
- (void)_didMoveFromWindow:(id)window toWindow:(id)window;
- (void)_addControlTargetAction:(id)action;
- (void)addTarget:(id)target action:(SEL)action forControlEvents:(unsigned long long)events;
- (void)addAction:(id)action forControlEvents:(unsigned long long)events;
- (void)removeTarget:(id)target action:(SEL)action forControlEvents:(unsigned long long)events;
- (void)removeAction:(id)action forControlEvents:(unsigned long long)events;
- (void)removeActionForIdentifier:(id)identifier forControlEvents:(unsigned long long)events;
- (id)_allTargetActions;
- (id)actionsForTarget:(id)target forControlEvent:(unsigned long long)event;
- (void)enumerateEventHandlers:(id /* block */)handlers;
- (void)sendAction:(SEL)action to:(id)to forEvent:(id)event;
- (void)sendAction:(id)action;
- (void)sendActionsForControlEvents:(unsigned long long)events;
- (BOOL)canBecomeFirstResponder;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_clippedHighlightBounds;
- (double)_highlightCornerRadius;
- (BOOL)_hasActionForEventMask:(unsigned long long)mask;
- (unsigned long long)_controlEventsForActionTriggered;
- (void)_sendActionsForEvents:(unsigned long long)events withEvent:(id)event;
- (void)_setHighlightOnMouseDown:(BOOL)down;
- (void)_delayActions;
- (void)_sendDelayedActions;
- (void)_cancelDelayedActions;
- (BOOL)pointMostlyInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (void)_setLastHighlightSuccessful:(BOOL)successful;
- (BOOL)_wasLastHighlightSuccessful;
- (void)_setTouchHasHighlighted:(BOOL)highlighted;
- (BOOL)_touchHasHighlighted;
- (BOOL)shouldTrack;
- (BOOL)touchDragged;
- (void)setRequiresDisplayOnTracking:(BOOL)tracking;
- (BOOL)requiresDisplayOnTracking;
- (BOOL)hasOneOrMoreTargets;
- (void)addTarget:(id)target action:(SEL)action forEvents:(int)events;
- (void)removeTarget:(id)target forEvents:(int)events;
- (void)_unhighlight;
- (void)_sendDelayedActions:(BOOL)actions;
- (BOOL)canBecomeFocused;
- (id)_systemDefaultFocusGroupIdentifier;
- (void)_diagnoseFocusabilityForReport:(id)report;
- (long long)_focusedSound;
- (unsigned long long)_stateForFocusUpdateContext:(id)context;
- (BOOL)_accessibilityShouldActivateOnHUDLift;
- (BOOL)isSymbolAnimationEnabled;
- (void)_setEnableSymbolAnimations:(BOOL)animations;
- (long long)_sceneDraggingBehaviorOnPan;
- (void)_setRequiredButtonMask:(long long)mask;
- (BOOL)isContextMenuInteractionEnabled;
- (BOOL)isContextMenuEnabled;
@end

#endif /* UIControl_h */
