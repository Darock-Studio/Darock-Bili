//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIWindow_h
#define UIWindow_h
@import Foundation;

#include "UIView.h"
#include "NSISEngineDelegate-Protocol.h"
#include "UIAccessibilityHUDView.h"
#include "UIActivityItemsConfigurationReading-Protocol.h"
#include "UIFocusItem-Protocol.h"
#include "UIKeyboardLayoutGuide.h"
#include "UIResponder.h"
#include "UIScreen.h"
#include "UITraitCollection.h"
#include "UIView.h"
#include "UIViewController.h"
#include "UIWindowScene.h"
#include "_UIContextBindable-Protocol.h"
#include "_UIContextBinder.h"
#include "_UIFocusEventRecognizer.h"
#include "_UIFocusEventRecognizerDelegate-Protocol.h"
#include "_UIFocusMovementActionForwarding-Protocol.h"
#include "_UIForcedOrientationTransactionHandler-Protocol.h"
#include "_UIForcedOrientationTransactionToken.h"
#include "_UIGESGateGestureRecognizer.h"
#include "_UIOrientationDebugDescriptionProviding-Protocol.h"
#include "_UIRootPresentationController.h"
#include "_UISystemGestureGateGestureRecognizer.h"
#include "_UITraitEnvironmentInternal-Protocol.h"
#include "_UIViewControllerNullAnimationTransitionCoordinator.h"
#include "_UIWindowAnimationController.h"
#include "_UIWindowOrientationUpdate.h"

@class CAContext, CALayer, FBSScene, FBSSceneLayer, NSArray, NSHashTable, NSMutableArray, NSMutableSet, NSString, NSUndoManager;
@protocol BSInterfaceOrientationMapResolving, UIScene<_UISceneUIWindowHosting;

@interface UIWindow : UIView<_UIOrientationDebugDescriptionProviding, NSISEngineDelegate, _UIFocusEventRecognizerDelegate, _UIForcedOrientationTransactionHandler, _UIFocusMovementActionForwarding, _UIContextBindable> {
  /* instance variables */
  NSString *_debugName;
  long long _sceneOrientation;
  long long _sceneClientOrientation;
  BOOL _notedOverlayInsetChange;
  UIViewController *_delegateViewController;
  double _windowSublevel;
  CAContext *_layerContext;
  UIScene<_UISceneUIWindowHosting> *_windowHostingScene;
  _UIContextBinder *_contextBinder;
  UIResponder *_firstResponder;
  id _touchData;
  long long _viewOrientation;
  long long _previousSceneOrientationForCounterRotation;
  UIView *_exclusiveTouchView;
  NSUndoManager *_undoManager;
  CALayer *_sceneTransformLayer;
  CALayer *_transformLayer;
  CALayer *_rootLayer;
  NSMutableArray *_rotationViewControllers;
  NSMutableSet *_subtreeMonitors;
  struct { unsigned int x :1 delegateWillRotate; unsigned int x :1 delegateDidRotate; unsigned int x :1 delegateWillAnimateFirstHalf; unsigned int x :1 delegateDidAnimationFirstHalf; unsigned int x :1 delegateWillAnimateSecondHalf; unsigned int x :1 initializationComplete; unsigned int x :1 dontBecomeKeyOnOrderFront; unsigned int x :1 inGesture; unsigned int x :1 autorotates; unsigned int x :1 autorotationRegistered; unsigned int x :1 isRotating; unsigned int x :1 isUsingOnePartRotationAnimation; unsigned int x :4 disableAutorotationCount; unsigned int x :1 needsAutorotationWhenReenabled; unsigned int x :1 forceTwoPartRotationAnimation; unsigned int x :1 orderKeyboardInAfterRotating; unsigned int x :4 roundedCorners; unsigned int x :1 resizesToFullScreen; unsigned int x :1 keepContextInBackground; unsigned int x :1 forceVisibleOnInit; unsigned int x :1 settingFirstResponder; unsigned int x :1 windowResizedToFullScreen; unsigned int x :1 statusBarFollowsOrientation; unsigned int x :1 secure; unsigned int x :1 isSceneSized; unsigned int x :1 didSetRestorationIdentifier; unsigned int x :1 resigningFirstResponderFromHost; unsigned int x :1 needsBoundingPathUpdate; unsigned int x :1 avoidUpdatingSafeAreaInsets; unsigned int x :1 needsFramePositionAdjustmentWhenWindowSceneIsAttached; unsigned int x :1 enqueuedDeferredOrientationUpdate; unsigned int x :1 isNotifyingColorTraitChangeForSubtree; unsigned int x :1 needsCleanupOfOrientationTransaction; } _windowFlags;
  id _windowController;
  _UISystemGestureGateGestureRecognizer *_systemGestureGateForGestures;
  _UISystemGestureGateGestureRecognizer *_systemGestureGateForTouches;
  _UIGESGateGestureRecognizer *_systemGateForGESTouches;
  UITraitCollection *_traitCollection;
  UITraitCollection *_destinationTraitCollection;
  long long _containedGestureRecognizerMaximumState;
  double _lastTouchTimestamp;
  unsigned int x :1 _systemGesturesArePossible;
  long long _verticalSizeClassStateRestorationOverride;
  long long _horizontalSizeClassStateRestorationOverride;
  UIAccessibilityHUDView *_accessibilityHUD;
  NSHashTable *_windowLevelObservers;
  NSString *_roleHint;
  NSObject<BSInterfaceOrientationMapResolving> *_interfaceOrientationMapResolver;
  double _lastPropagatedStatusBarHeight;
  BOOL _shouldDisableTransformLayerScalingForSnapshotting;
  BOOL _wantsResponderWithoutKeyboard;
  _UIViewControllerNullAnimationTransitionCoordinator *_traitCollectionChangeTransitionCoordinator;
  _UIWindowOrientationUpdate *_deferredOrientationUpdate;
  NSArray *_windowInternalConstraints;
  NSArray *_rootViewConstraints;
  NSObject<_UITraitEnvironmentInternal> *_overrideParentTraitEnvironment;
  UIResponder *_lastFirstResponder;
  id _lastFirstResponderInteractionState;
  UIResponder *_lastNextResponder;
}

@property (readonly, nonatomic) NSObject<UIActivityItemsConfigurationReading> *_activityItemsConfigurationForScene;
@property (readonly, nonatomic) BOOL systemGestureWindow;
@property (retain, nonatomic) UITraitCollection *_localOverrideTraitCollection;
@property (readonly, weak, nonatomic) UIResponder *focusResponder;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, retain, nonatomic) FBSScene *_StatusBar_fbsScene;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSArray *_rootViewConstraints;
@property (retain, nonatomic) NSMutableArray *_currentKeyboardTrackingLayoutGuides;
@property (retain, nonatomic) _UIWindowOrientationUpdate *_deferredOrientationUpdate;
@property (weak, nonatomic) NSObject<UIFocusItem> *rememberedFocusedItem;
@property (weak, nonatomic) _UIForcedOrientationTransactionToken *_orientationTransactionToken;
@property (weak, nonatomic) UIViewController *_delegateViewController;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _sceneBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _sceneReferenceBounds;
@property (readonly, nonatomic) long long _sceneOrientation;
@property (readonly, nonatomic) long long _sceneClientOrientation;
@property (readonly, retain, nonatomic) FBSSceneLayer *_associatingSceneLayer;
@property (readonly, nonatomic) long long _orientationInSceneSpace;
@property (readonly, nonatomic) long long _overriddenInterfaceOrientation;
@property (readonly, nonatomic) BOOL _updatesSafeAreaInsetsOnRead;
@property (weak, nonatomic) UIResponder *_lastFirstResponder;
@property (retain, nonatomic) id _lastFirstResponderInteractionState;
@property (weak, nonatomic) UIResponder *_lastNextResponder;
@property (nonatomic) BOOL _wantsResponderWithoutKeyboard;
@property (nonatomic) BOOL _shouldDisableTransformLayerScalingForSnapshotting;
@property (copy, nonatomic) NSArray *_windowInternalConstraints;
@property (readonly, nonatomic) BOOL _usesLegacySupportedOrientationChecks;
@property (nonatomic) long long toWindowOrientation;
@property (nonatomic) long long fromWindowOrientation;
@property (retain, nonatomic) _UIWindowAnimationController *_animationController;
@property (retain, nonatomic) _UIViewControllerNullAnimationTransitionCoordinator *_traitCollectionChangeTransitionCoordinator;
@property (weak, nonatomic) NSObject<_UITraitEnvironmentInternal> *_overrideParentTraitEnvironment;
@property (readonly, nonatomic) struct { long long x0; long long x1; } __sizeClassPair;
@property (copy, nonatomic) id /* block */ _shouldPreventRotationHook;
@property (nonatomic) BOOL __hostViewUnderlapsStatusBar;
@property (readonly, nonatomic) unsigned long long _systemReferenceAngleMode;
@property (readonly, nonatomic) double _systemReferenceAngle;
@property (readonly, nonatomic) BOOL supportsFocus;
@property (readonly, nonatomic) _UIFocusEventRecognizer *focusEventRecognizer;
@property (retain, nonatomic) _UIRootPresentationController *rootPresentationController;
@property (readonly, nonatomic) BOOL _preventsRootPresentationController;
@property (readonly, nonatomic) BOOL shouldInstallRootPresentationController;
@property (readonly, nonatomic) UIKeyboardLayoutGuide *_primaryKeyboardTrackingGuide;
@property (readonly, nonatomic) BOOL _applicationKeyWindow;
@property (nonatomic) BOOL _wantsWindowSceneZoomInteraction;
@property (nonatomic) BOOL _containedGestureRecognizersShouldRespectGestureServerInstructions;
@property (weak, nonatomic) UIWindowScene *windowScene;
@property (nonatomic) BOOL canResizeToFitContent;
@property (retain, nonatomic) UIScreen *screen;
@property (nonatomic) double windowLevel;
@property (readonly, nonatomic) BOOL keyWindow;
@property (readonly, nonatomic) BOOL canBecomeKeyWindow;
@property (retain, nonatomic) UIViewController *rootViewController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) CAContext *_boundContext;
@property (weak, nonatomic) _UIContextBinder *_contextBinder;
@property (readonly, nonatomic) struct { id x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; } _bindingDescription;

/* class methods */
+ (BOOL)shouldRestrictViewsForSplashboard;
+ (void)setShouldRestrictViewsForSplashboard:(BOOL)splashboard;
+ (id)restrictedSplashboardClasses;
+ (void)setRestrictedSplashboardClasses:(id)classes;
+ (BOOL)_prefersStatusBarHiddenInWindow:(id)window animationProvider:(id *)provider;
+ (BOOL)_prefersStatusBarHiddenInWindow:(id)window targetOrientation:(long long)orientation animationProvider:(id *)provider;
+ (long long)_preferredStatusBarStyleInWindow:(id)window resolvedStyle:(long long *)style withPartStyles:(id *)styles animationProvider:(id *)provider;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })constrainFrameToScreen:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })screen;
+ (id)keyWindow;
+ (id)_applicationKeyWindow;
+ (id)_externalKeyWindow;
+ (void)initialize;
+ (void)adjustForAccessibilityIfNeeded:(id)needed;
+ (void)adjustFocusForAccessibilityIfNeeded:(id)needed;
+ (Class)layerClass;
+ (BOOL)_temporary_shouldSizeWindowsAutomaticallyPlistOverrideSet;
+ (void)_setAllWindowsKeepContextInBackground:(BOOL)background;
+ (BOOL)_allWindowsKeepContextInBackground;
+ (BOOL)_transformLayerRotationsAreEnabled;
+ (void)_setTransformLayerRotationsAreEnabled:(BOOL)enabled;
+ (void)_synchronizeDrawing;
+ (void)_synchronizeDrawingWithPreCommitHandler:(id /* block */)handler;
+ (unsigned int)_synchronizeDrawingAcrossProcesses;
+ (void)_synchronizeDrawingAcrossProcessesOverPort:(unsigned int)port;
+ (void)_synchronizeDrawingAcrossProcessesOverPort:(unsigned int)port withPreCommitHandler:(id /* block */)handler;
+ (void)_synchronizeDrawingWithCAFence:(id)cafence preCommitHandler:(id /* block */)handler;
+ (id)_synchronizedDrawingFence;
+ (void)_synchronizeDrawingWithFence:(id)fence;
+ (void)_synchronizeDrawingWithFence:(id)fence preCommitHandler:(id /* block */)handler;
+ (BOOL)_shouldSoftAssertOnSetScreen;
+ (void)_pushKeyWindow:(id)window;
+ (void)_popKeyWindow:(id)window;
+ (void)_removeWindowFromStack:(id)stack;
+ (void)_unregisterChargedView:(id)view;
+ (void)_noteStatusBarHeightChanged:(double)changed oldHeight:(double)height;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)ids count:(unsigned long long)count frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)ids count:(unsigned long long)count frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame outTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)transform;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)ids count:(unsigned long long)count frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame usePurpleGfx:(BOOL)gfx outTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)transform;
+ (void *)createIOSurfaceOnScreen:(id)screen withContextIds:(const unsigned int *)ids count:(unsigned long long)count frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame usePurpleGfx:(BOOL)gfx outTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)transform;
+ (void *)createIOSurfaceOnScreen:(id)screen withContextIds:(const unsigned int *)ids count:(unsigned long long)count frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame baseTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
+ (void *)createScreenIOSurface;
+ (void *)createIOSurfaceFromDisplayConfiguration:(id)configuration;
+ (void *)createIOSurfaceFromScreen:(id)screen;
+ (id)_topVisibleWindowPassingTest:(id /* block */)test;
+ (id)_hitTestToPoint:(struct CGPoint { double x0; double x1; })point scenePointZ:(double)z forEvent:(id)event windowServerHitTestWindow:(id)window;
+ (id)_globalHitTestForLocation:(struct CGPoint { double x0; double x1; })location sceneLocationZ:(double)z inWindowServerHitTestWindow:(id)window withEvent:(id)event;
+ (id)_findWindowForControllingOverallAppearance;
+ (id)_findWindowForControllingOverallAppearanceInWindowScene:(id)scene;
+ (id)allWindowsIncludingInternalWindows:(BOOL)windows onlyVisibleWindows:(BOOL)windows;
+ (id)allWindowsIncludingInternalWindows:(BOOL)windows onlyVisibleWindows:(BOOL)windows forScreen:(id)screen;
+ (void)_enumerateWindowsIncludingInternalWindows:(BOOL)windows onlyVisibleWindows:(BOOL)windows allowMutation:(BOOL)mutation withBlock:(id /* block */)block;
+ (id)_findWithDisplayPoint:(struct CGPoint { double x0; double x1; })point;
+ (BOOL)_isSecure;
+ (BOOL)_isSystemWindow;
+ (id)_windowWithContextId:(unsigned int)id;

/* instance methods */
- (BOOL)_canBecomeLayoutEngineDelegate;
- (void)_updateSystemConstraints;
- (void)_updateWindowEngineHostConstraintsWithSizing:(BOOL)sizing;
- (void)_invalidateWindowInternalConstraints;
- (void)_uiib_invalidateWindowInternalConstraints;
- (unsigned long long)_expectedWindowInternalConstraintsCount;
- (void)_windowInternalConstraints_sizeDidChange;
- (void)_windowInternalConstraints_centerDidChange;
- (void)_autolayout_windowDidChangeBoundsFrom:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })from;
- (void)_autolayout_windowDidChangeCenterFrom:(struct CGPoint { double x0; double x1; })from;
- (void)_constraints_subviewWillChangeSuperview:(id)superview;
- (void)_switchToLayoutEngine:(id)engine;
- (void)_initializeLayoutEngine;
- (void)_initializeLayoutEngineDiscardingOldIfNeeded:(BOOL)needed;
- (id)_layoutEngineCreateIfNecessary;
- (id)_layoutEngineIfAvailable;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (id)_uiib_candidateRedundantConstraints;
- (id)_redundantConstraints;
- (void)_updateConstraintsIfNeededWithViewForVariableChangeNotifications:(id)notifications;
- (id)_descendantWithAmbiguousLayout;
- (BOOL)hasAmbiguousLayout;
- (BOOL)_hasAmbiguousLayout;
- (void)exerciseAmbiguityInLayout;
- (id)_centerExpressionInContainer:(id)container vertical:(BOOL)vertical contentInsetScale:(double)scale engine:(id)engine;
- (void)_setIsLoweringAnchoringConstraints:(BOOL)constraints;
- (BOOL)_isLoweringAnchoringConstraints;
- (BOOL)_allowsLinkPreviewInteractionInViewServices;
- (id)_hostingHandle;
- (BOOL)_isTextEffectsWindow;
- (BOOL)_isRemoteKeyboardWindow;
- (BOOL)_shouldTextEffectsWindowBeHostedForView:(id)view;
- (BOOL)_isTextEffectsWindowHosting;
- (BOOL)_isTextEffectsWindowNotificationOwner;
- (void)_matchDeviceOrientation;
- (id)_hostingWindow;
- (BOOL)inhibitSetupOrientation;
- (BOOL)inhibitManualTransform;
- (BOOL)inhibitTextEffectsRotation;
- (void)setupForOrientation:(long long)orientation;
- (void)keyboardDidHide;
- (void)matchDeviceOrientation:(id)orientation;
- (double)_classicOffset;
- (id)_keyboardSceneSettings;
- (void)_traitCollectionDidChangeOnSubtreeInternal:(const struct _UITraitCollectionChangeDescription { id x0; id x1; id x2; BOOL x3; struct _UITraitCollectionTraitChanges { BOOL x0; BOOL x1; } x4; } *)internal;
- (BOOL)_isAlwaysKeyboardWindow;
- (id)_orientationDebugDescriptionBuilderWithMultilinePrefix:(id)prefix;
- (id)_orientationDebugDescriptionWithMultilinePrefix:(id)prefix;
- (id)_orientationDebugDescription;
- (id)_overrideTargetWindowForPathIndex:(unsigned long long)index forEvent:(id)event windowServerHitTestWindow:(id)window;
- (void)_updateInterfaceOrientationFromActiveInterfaceOrientation;
- (void)_updateInterfaceOrientationFromActiveInterfaceOrientationIfRotationEnabled:(BOOL)enabled;
- (void)_updateInterfaceOrientationFromActiveInterfaceOrientation:(BOOL)orientation;
- (id)_aboveWindowScrollView;
- (void)_performTouchContinuationWithOverrideHitTestedView:(id)view;
- (BOOL)_constrainsHoverEventHitTesting;
- (long long)_interfaceOrientationForSceneSafeAreaInsetsIncludingStatusBar:(BOOL)bar;
- (unsigned long long)_edgesForSystemGesturesTouchDelay;
- (id)gestureParent;
- (BOOL)_isSystemGestureWindow;
- (BOOL)_isRemoteInputHostWindow;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (id)safeAreaAspectFitLayoutGuide;
- (id)_debugName;
- (BOOL)_wantsSceneAssociation;
- (id)_scene;
- (void)_setScene:(id)scene;
- (void)_commonInitAttachedWindow:(BOOL)window debugName:(id)name scene:(id)scene;
- (void)_populateInitialTraitCollection:(id)collection;
- (void)_commonInitDebugName:(id)name uiScene:(id)scene;
- (id)_uiWindowSceneFromFBSScene:(id)fbsscene;
- (void)_commonInit;
- (id)initWithWindowScene:(id)scene;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame attached:(BOOL)attached;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame debugName:(id)name;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame debugName:(id)name attached:(BOOL)attached;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame debugName:(id)name scene:(id)scene attached:(BOOL)attached;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame debugName:(id)name displayConfiguration:(id)configuration;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame debugName:(id)name canvas:(id)canvas;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame debugName:(id)name windowScene:(id)scene;
- (void)_adjustFramePositionIfNecessary;
- (id)initWithContentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)initWithCoder:(id)coder;
- (id)_initWithOrientation:(long long)orientation;
- (id)init;
- (void)encodeWithCoder:(id)coder;
- (void)awakeFromNib;
- (void)dealloc;
- (void)setContentView:(id)view;
- (id)representation;
- (void)_updateTransformLayerForClassicPresentation;
- (void)_updateTransformLayerSizeForClassicPresentation;
- (void)_setShouldDisableTransformLayerScalingForSnapshotting:(BOOL)snapshotting;
- (void)_transformLayerShouldMaskToBounds:(BOOL)bounds;
- (BOOL)_isConstrainedByScreenJail;
- (long long)_orientationForViewTransform;
- (long long)_orientationForSceneTransform;
- (long long)_orientationForRootTransform;
- (long long)_orientationForClassicPresentation;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_viewTransformForInterfaceOrientation:(long long)orientation;
- (BOOL)_windowOwnsInterfaceOrientation;
- (BOOL)_windowOwnsInterfaceOrientationTransform;
- (BOOL)_windowCanDynamicallySpecifySupportedInterfaceOrientations;
- (BOOL)_transformLayerIncludesScreenRotation;
- (void)_configureRootLayer:(id)layer sceneTransformLayer:(id)layer transformLayer:(id)layer;
- (void)_updateTransformLayer;
- (id)_windowHostingSceneTraitCollection;
- (void)_prepareHierarchyForWindowHostingSceneRemoval;
- (void)_setWindowHostingScene:(id)scene;
- (id)_windowHostingScene;
- (id)_eventRoutingScene;
- (void)_setCanvas:(id)canvas;
- (id)_canvas;
- (void)_didMoveFromScene:(id)scene toScene:(id)scene;
- (void)_setBoundContext:(id)context;
- (id)_contextOptionsWithInitialOptions:(id)options;
- (id)_layerForTimeOffsetModification;
- (id)_bindingLayer;
- (double)_bindableLevel;
- (BOOL)_isVisible;
- (BOOL)_shouldUseRemoteContext;
- (void)_configureContextOptions:(id)options;
- (BOOL)_hasContext;
- (void)_updateLayerOrderingAndSetLayerHidden:(BOOL)hidden;
- (void)_updateLayerOrderingAndSetLayerHidden:(BOOL)hidden actionBlock:(id /* block */)block;
- (BOOL)_ignoresHitTest;
- (unsigned int)_contextId;
- (void)_updateRootViewConstraintsForInterfaceOrientationAndStatusBarHeight;
- (id)_rootViewConstraintsUpdateIfNecessaryForView:(id)view;
- (BOOL)_shouldInstallRootPresentationController;
- (void)_didCreateRootPresentationController;
- (id)_rootSheetPresentationController;
- (void)addRootViewControllerViewIfPossible;
- (void)_setHidden:(BOOL)hidden forced:(BOOL)forced;
- (void)setHidden:(BOOL)hidden;
- (void)makeKeyAndOrderFront:(id)front;
- (void)orderFront:(id)front;
- (void)_orderFrontWithoutMakingKey;
- (void)orderOut:(id)out;
- (void)makeKey:(id)key;
- (void)_removeAllViewControllersFromWindowHierarchyFromDealloc:(BOOL)dealloc;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_overlayInsets;
- (void)_noteOverlayInsetsDidChange;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_managedSafeAreaInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_normalizedSafeAreaInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })safeAreaInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_sceneSafeAreaInsetsIncludingStatusBar:(BOOL)bar;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_usableSceneBounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_usableBounds;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_safeAreaInsetsInSuperview:(id)superview;
- (void)_sceneSettingsSafeAreaInsetsDidChange;
- (double)_chargeMultiplicationFactor;
- (struct CGPoint { double x0; double x1; })warpPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_targetForStolenStatusBarTouchesAtPoint:(struct CGPoint { double x0; double x1; })point withEvent:(id)event excludingWindow:(id)window;
- (BOOL)_isScrollingEnabledForView:(id)view;
- (void)_scrollToTopViewsUnderScreenPointIfNecessary:(struct CGPoint { double x0; double x1; })necessary resultHandler:(id /* block */)handler;
- (BOOL)_touchesInsideShouldHideCalloutBarForViewHierarchy:(id)hierarchy;
- (void)_fadeCalloutBarIfNeededForTouchInView:(id)view;
- (BOOL)_canIgnoreInteractionEvents;
- (void)_sendTouchesForEvent:(id)event;
- (void)_sendButtonsForEvent:(id)event;
- (void)sendEvent:(id)event;
- (BOOL)_disableAutomaticKeyboardBehavior;
- (BOOL)_disableAutomaticKeyboardUI;
- (id)_layerForCoordinateSpaceConversion;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect toCoordinateSpace:(id)space;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect fromCoordinateSpace:(id)space;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point toWindow:(id)window;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point fromWindow:(id)window;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect toWindow:(id)window;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect fromWindow:(id)window;
- (struct CGPoint { double x0; double x1; })_convertOffset:(struct CGPoint { double x0; double x1; })offset toWindow:(id)window;
- (struct CGPoint { double x0; double x1; })_convertOffset:(struct CGPoint { double x0; double x1; })offset fromWindow:(id)window;
- (struct CGPoint { double x0; double x1; })_convertOffsetToSceneReferenceSpace:(struct CGPoint { double x0; double x1; })space;
- (struct CGPoint { double x0; double x1; })_convertOffsetFromSceneReferenceSpace:(struct CGPoint { double x0; double x1; })space;
- (double)_convertVisualAltitude:(double)altitude fromWindow:(id)window;
- (double)_convertVisualAltitude:(double)altitude toWindow:(id)window;
- (void)_setExclusiveTouchView:(id)view;
- (id)_exclusiveTouchView;
- (id)nextResponder;
- (BOOL)_containedInAbsoluteResponderChain;
- (id)_rootForKeyResponderCycle;
- (struct CGPoint { double x0; double x1; })convertWindowToDevice:(struct CGPoint { double x0; double x1; })device;
- (struct CGPoint { double x0; double x1; })convertDeviceToWindow:(struct CGPoint { double x0; double x1; })window;
- (void)setLevel:(double)level;
- (double)level;
- (void)setBecomeKeyOnOrderFront:(BOOL)front;
- (BOOL)_canBecomeKeyWindow;
- (BOOL)_canPromoteFromKeyWindowStack;
- (BOOL)_isHostingPortalViews;
- (BOOL)_allowsOcclusionDetectionOverride;
- (void)_slideHeaderView:(id)view andFooterView:(id)view offScreen:(BOOL)screen forInterfaceOrientation:(long long)orientation;
- (void)_positionHeaderView:(id)view andFooterView:(id)view outsideContentViewForInterfaceOrientation:(long long)orientation;
- (double)_rotationDuration;
- (id)_rotationViewControllers;
- (id)_clientsForRotation;
- (id)__clientsForRotationCallbacks;
- (void)_addRotationViewController:(id)controller;
- (void)_removeRotationViewController:(id)controller;
- (void)_clearPendingKeyboardChanges;
- (unsigned long long)_supportedInterfaceOrientationsForRootViewController;
- (long long)_preferredInterfaceOrientationForRootViewController;
- (unsigned long long)_supportedInterfaceOrientationsConsultingApp:(BOOL)app;
- (void)_updateOrientationPreferencesAnimated:(BOOL)animated;
- (id)_adjustWindowOrientationForTransitionWithSupportedOrientations:(unsigned long long)orientations preferredOrientation:(long long)orientation reason:(id)reason;
- (id)_createForcedOrientationTransactionTokenWithSupportedOrientations:(unsigned long long)orientations preferredOrientation:(long long)orientation forImmediateCommit:(BOOL)commit reason:(id)reason;
- (void)commitOrientationTransaction:(id)transaction animated:(BOOL)animated;
- (void)cancelOrientationTransaction:(id)transaction;
- (void)_cleanupOrientationTransactionIfNecessary;
- (id)_interfaceOrientationMapResolver;
- (void)_setInterfaceOrientationMapResolver:(id)resolver;
- (long long)_interfaceOrientationForSupportedOrientations:(unsigned long long)orientations preferredOrientation:(long long)orientation;
- (BOOL)_shouldAutorotateToInterfaceOrientation:(long long)orientation checkForDismissal:(BOOL)dismissal isRotationDisabled:(BOOL *)disabled;
- (BOOL)_shouldAutorotateToInterfaceOrientation:(long long)orientation;
- (BOOL)_windowControlsStatusBarOrientation;
- (void)_setWindowControlsStatusBarOrientation:(BOOL)orientation;
- (void)_handleStatusBarOrientationChange:(id)change;
- (void)_executeDeferredOrientationUpdate;
- (BOOL)_guardSizeTransitionFromAnimations;
- (void)_rotateToBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds withAnimator:(id)animator transitionContext:(id)context;
- (BOOL)_shouldAdjustSizeClassesAndResizeWindow;
- (void)_adjustSizeClassesAndResizeWindowToFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_handleDeviceOrientationChange:(id)change;
- (void)_handleSBActiveInterfaceOrientationChange:(id)change;
- (void)_updateToInterfaceOrientation:(long long)orientation animated:(BOOL)animated;
- (void)_updateToInterfaceOrientation:(long long)orientation duration:(double)duration force:(BOOL)force;
- (void)_updateInterfaceOrientationFromDeviceOrientation;
- (void)_updateInterfaceOrientationFromDeviceOrientationIfRotationEnabled:(BOOL)enabled;
- (void)_updateInterfaceOrientationFromDeviceOrientation:(BOOL)orientation;
- (void)_updateToNotificationProvidedInterfaceOrientation:(long long)orientation animated:(BOOL)animated;
- (void)beginDisablingInterfaceAutorotation;
- (BOOL)isInterfaceAutorotationDisabled;
- (void)endDisablingInterfaceAutorotationAnimated:(BOOL)animated;
- (void)endDisablingInterfaceAutorotation;
- (void)setAutorotates:(BOOL)autorotates;
- (void)_updateAutorotationResponse:(BOOL)response;
- (void)setAutorotates:(BOOL)autorotates forceUpdateInterfaceOrientation:(BOOL)orientation;
- (void)_forceTwoPartRotationAnimation:(BOOL)animation;
- (void)_notifyRotatableViewOrientation:(long long)orientation duration:(double)duration;
- (void)_setRotatableViewOrientation:(long long)orientation duration:(double)duration;
- (void)_setRotatableViewOrientation:(long long)orientation duration:(double)duration force:(BOOL)force;
- (void)_setRotatableViewOrientation:(long long)orientation updateStatusBar:(BOOL)bar duration:(double)duration force:(BOOL)force;
- (void)_legacySetRotatableViewOrientation:(long long)orientation duration:(double)duration;
- (void)_legacySetRotatableViewOrientation:(long long)orientation duration:(double)duration force:(BOOL)force;
- (void)_legacySetRotatableViewOrientation:(long long)orientation updateStatusBar:(BOOL)bar duration:(double)duration force:(BOOL)force;
- (BOOL)_shouldResizeWithScene;
- (void)_rotateWindowToOrientation:(long long)orientation updateStatusBar:(BOOL)bar duration:(double)duration skipCallbacks:(BOOL)callbacks;
- (void)_setRotatableClient:(id)client toOrientation:(long long)orientation updateStatusBar:(BOOL)bar duration:(double)duration force:(BOOL)force isRotating:(BOOL)rotating;
- (void)_finishedFirstHalfRotation:(id)rotation finished:(BOOL)finished context:(id)context;
- (void)_finishedFullRotation:(BOOL)rotation context:(id)context skipNotification:(BOOL)notification;
- (void)_finishedFullRotation:(id)rotation finished:(id)finished context:(id)context;
- (BOOL)autorotates;
- (BOOL)isRotating;
- (BOOL)isUsingOnePartRotationAnimation;
- (long long)interfaceOrientation;
- (void)traitCollectionDidChange:(id)change;
- (long long)_windowInterfaceOrientation;
- (void)_setWindowInterfaceOrientation:(long long)orientation;
- (id)_appearanceContainer;
- (void)_createSystemGestureGateGestureRecognizerIfNeeded;
- (BOOL)_hasSystemGestureGate;
- (BOOL)_systemGestureRecognitionIsPossible;
- (void)_setSystemGestureRecognitionIsPossible:(BOOL)possible andTouchesAreCancelled:(BOOL)cancelled;
- (BOOL)_shouldDelayTouchForSystemGestures:(id)gestures;
- (unsigned long long)_edgeForTouch:(id)touch;
- (void)handleStatusBarChangeFromHeight:(double)height toHeight:(double)height;
- (void)_retryHandleStatusBarChangeIfNecessary;
- (int)bitsPerComponent;
- (id)delegate;
- (void)setDelegate:(id)delegate;
- (void)_setDelegateViewController:(id)controller;
- (id)_screen;
- (BOOL)_shouldPrepareScreenForWindow;
- (void)_didMoveFromScreen:(id)screen toScreen:(id)screen;
- (BOOL)_cachedTraitCollectionIsValid;
- (id)traitCollection;
- (void)_setOverrideParentTraitEnvironment:(id)environment;
- (void)_invalidateAuxiliaryChildTraits;
- (void)_updateAuxiliaryChildTraitsIfNeeded;
- (id)_parentTraitEnvironment;
- (void)_updateWindowTraits;
- (id)_traitCollectionWhenRotated;
- (id)_traitCollectionForSize:(struct CGSize { double x0; double x1; })size parentCollection:(id)collection;
- (id)_traitCollectionForSize:(struct CGSize { double x0; double x1; })size parentCollection:(id)collection traitOverrideApplicator:(id /* block */)applicator;
- (void)_traitOverridesWillChange:(id)change withApplicator:(id /* block */)applicator;
- (void)_traitOverridesDidChange:(id)change;
- (void)_updateWindowTraitsAndNotify:(BOOL)notify;
- (void)_willChangeToSize:(struct CGSize { double x0; double x1; })size orientation:(long long)orientation screen:(id)screen withTransitionCoordinator:(id)coordinator;
- (void)_setNeedsBoundingPathUpdate;
- (id)_boundingPath;
- (BOOL)_shouldPropagateTraitCollectionChanges;
- (void)_parentWillTransitionToTraitCollection:(id)collection;
- (void)_willTransitionToTraitCollection:(id)collection withTransitionCoordinator:(id)coordinator;
- (void)_propagateTraitCollectionChangedForStateRestorationWithTransitionCoordinator:(id)coordinator;
- (void)_setStateRestorationVerticalSizeClass:(long long)class horizontalSizeClass:(long long)class;
- (void)_clearSizeClassesForStateRestoration;
- (void)_setTraitCollectionChangeTransitionCoordinator:(id)coordinator;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setCenter:(struct CGPoint { double x0; double x1; })center;
- (double)_adjustedWindowLevelFromLevel:(double)level;
- (BOOL)_shouldForceTraitPropagationThroughHierarchy;
- (void)_addWindowLevelChangedObserver:(id)observer;
- (void)_removeWindowLevelChangedObserver:(id)observer;
- (BOOL)isKeyWindow;
- (BOOL)_isApplicationKeyWindow;
- (void)makeKeyWindow;
- (void)_makeExternalKeyWindow;
- (long long)_initialGuessInterfaceOrientation;
- (void)becomeKeyWindow;
- (void)resignKeyWindow;
- (void)_mainQueue_makeKeyAndVisible;
- (void)makeKeyAndVisible;
- (id)contentView;
- (void)_registerChargedView:(id)view;
- (void)_unregisterChargedView:(id)view;
- (id)_registeredScrollToTopViews;
- (void)_registerScrollToTopView:(id)view;
- (void)_unregisterScrollToTopView:(id)view;
- (void)_setFirstResponder:(id)responder;
- (void)_setIsResigningFirstResponderFromHost:(BOOL)host;
- (BOOL)_isResigningFirstResponderFromHost;
- (void)_setIsSettingFirstResponder:(BOOL)responder;
- (BOOL)_isSettingFirstResponder;
- (id)firstResponder;
- (id)_firstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)_becomeFirstResponderWhenPossible;
- (BOOL)_supportsBecomeFirstResponderWhenPossible;
- (id)_responderForKeyEvents;
- (id)_deepestActionResponder;
- (BOOL)_needsShakesWhenInactive;
- (id)undoManager;
- (id)_undoManagerForValidatingUndoRedoCommands;
- (void)undo:(id)undo;
- (void)redo:(id)redo;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (BOOL)_isStatusBarWindow;
- (void *)createIOSurfaceWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void *)createIOSurface;
- (BOOL)_isWindowServerHostingManaged;
- (BOOL)_alwaysGetsContexts;
- (BOOL)_usesWindowServerHitTesting;
- (BOOL)_isHostedInAnotherProcess;
- (struct CGPoint { double x0; double x1; })_convertPointFromSceneReferenceSpace:(struct CGPoint { double x0; double x1; })space;
- (struct CGPoint { double x0; double x1; })_convertPointToSceneReferenceSpace:(struct CGPoint { double x0; double x1; })space;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectFromSceneReferenceSpace:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })space;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectToSceneReferenceSpace:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })space;
- (struct CGPoint { double x0; double x1; })_convertDoublePointToSceneReferenceSpace:(struct CGPoint { double x0; double x1; })space;
- (struct CGPoint { double x0; double x1; })_convertDoublePointFromSceneReferenceSpace:(struct CGPoint { double x0; double x1; })space;
- (struct CGPoint { double x0; double x1; })_constrainTouchLocationToScene:(struct CGPoint { double x0; double x1; })scene;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_referenceFrameFromSceneUsingScreenBounds:(BOOL)bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_sceneBoundsInWindowOrientation;
- (BOOL)_resizeWindowFrameToSceneBoundsIfNecessary;
- (void)_sceneBoundsDidChange;
- (void)_updateIsSceneSizedFlag;
- (id)_hitTestLocation:(struct CGPoint { double x0; double x1; })location sceneLocationZ:(double)z inScene:(id)scene withWindowServerHitTestWindow:(id)window event:(id)event;
- (id)_targetWindowForPathIndex:(long long)index atPoint:(struct CGPoint { double x0; double x1; })point scenePointZ:(double)z forEvent:(id)event windowServerHitTestWindow:(id)window;
- (BOOL)_isInAWindow;
- (id)_window;
- (id)_responderWindow;
- (BOOL)isInternalWindow;
- (BOOL)_automaticContainerBackgroundIsGlass;
- (BOOL)_extendsScreenSceneLifetime;
- (BOOL)_canDisableMirroring;
- (BOOL)_includeInDefaultImageSnapshot;
- (void)_willSnapshot;
- (void)_didSnapshot;
- (BOOL)_canAffectStatusBarAppearance;
- (BOOL)_canUpdateSceneFocus;
- (BOOL)_shouldControlAutorotation;
- (BOOL)_isExternallyPlaced;
- (BOOL)_isSceneSized;
- (struct CGPoint { double x0; double x1; })_transformDisplayToWindowCoordinates:(struct CGPoint { double x0; double x1; })coordinates;
- (id)_touchData;
- (BOOL)resizesToFullScreen;
- (void)setResizesToFullScreen:(BOOL)screen;
- (BOOL)keepContextInBackground;
- (void)setKeepContextInBackground:(BOOL)background;
- (void)removeFromSuperview;
- (void)_registerSubtreeMonitor:(id)monitor;
- (void)_unregisterSubtreeMonitor:(id)monitor;
- (id)_subtreeMonitorsForView:(id)view;
- (void)_writeLayerTreeToPath:(id)path;
- (void)_resizeWindowToFullScreenIfNecessary;
- (id)_responderSelectionContainerViewForResponder:(id)responder;
- (void)_moveWithEvent:(id)event;
- (BOOL)_shouldZoom;
- (BOOL)_canActAsKeyWindowForScreen:(id)screen;
- (double)_touchSloppinessFactor;
- (id)_normalInheritedTintColor;
- (BOOL)_definesDynamicTintColor;
- (void)_tintColorDidChange;
- (void)_setSecure:(BOOL)secure;
- (BOOL)_isSecure;
- (BOOL)_shouldCreateContextAsSecure;
- (BOOL)_appearsInLoupe;
- (BOOL)_requiresKeyboardPresentationFence;
- (id)_accessibilityHUDContainerViewForView:(id)view;
- (void)_showAccessibilityHUDItem:(id)huditem forView:(id)view;
- (void)_dismissAccessibilityHUD;
- (id)_focusedView;
- (BOOL)_reversesLinearFocusWrapping;
- (BOOL)_supportsFocus;
- (BOOL)_wantsFocusEngine;
- (void)_installFocusEventRecognizer;
- (void)_removeFocusEventRecognizer;
- (void)_resetFocusEventRecognizer;
- (void)_removeFocusIfNeededForFocusSystemSceneComponent:(id)component;
- (void)_installFocusIfNeededForFocusSystemSceneComponent:(id)component;
- (id)_focusResponder;
- (BOOL)_shouldRecognizeEventsInFocusEventRecognizer:(id)recognizer;
- (id)_focusMovementSystemForFocusEventRecognizer:(id)recognizer;
- (BOOL)_focusEventRecognizer:(id)recognizer didRecognizeFocusMovementRequest:(id)request;
- (void)_forwardFocusMovementAction:(id)action;
- (BOOL)_isTransparentFocusRegion;
- (id)parentFocusEnvironment;
- (void)_willUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (void)_didUpdateFocusInContext:(id)context withAnimationCoordinator:(id)coordinator;
- (id)preferredFocusedView;
- (long long)_subclassPreferredFocusedViewPrioritizationType;
- (id)preferredFocusEnvironments;
- (id)_overridingPreferredFocusEnvironment;
- (id)restorationIdentifier;
- (void)setRestorationIdentifier:(id)identifier;
- (void)_restoreFirstResponder;
- (id)_roleHint;
- (void)_setRoleHint:(id)hint;
- (id)_rootPresentationController;
- (void)_setRootPresentationController:(id)controller;
- (void)_setDeferredOrientationUpdate:(id)update;
- (void)_setWindowInternalConstraints:(id)constraints;
- (void)_setRootViewConstraints:(id)constraints;
- (void)_setContextBinder:(id)binder;
- (void)_setLastFirstResponder:(id)responder;
- (void)_setLastFirstResponderInteractionState:(id)state;
- (void)_setLastNextResponder:(id)responder;
- (void)_setWantsResponderWithoutKeyboard:(BOOL)keyboard;
- (id)_rememberedFocusedItem;
- (void)_setRememberedFocusedItem:(id)item;
- (void)_setOrientationTransactionToken:(id)token;
- (long long)_toWindowOrientation;
- (void)_setToWindowOrientation:(long long)orientation;
- (long long)_fromWindowOrientation;
- (void)_setFromWindowOrientation:(long long)orientation;
- (void)_setAnimationController:(id)controller;
- (void)_setShouldPreventRotationHook:(id /* block */)hook;
- (void)__setHostViewUnderlapsStatusBar:(BOOL)bar;
- (id)_focusEventRecognizer;
- (void)_setWantsWindowSceneZoomInteraction:(BOOL)interaction;
- (void)_setContainedGestureRecognizersShouldRespectGestureServerInstructions:(BOOL)instructions;
@end

#endif /* UIWindow_h */
