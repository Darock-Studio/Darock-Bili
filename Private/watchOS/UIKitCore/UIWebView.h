//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIWebView_h
#define UIWebView_h
@import Foundation;

#include "UIView.h"
#include "NSCoding-Protocol.h"
#include "UIScrollView.h"
#include "UIScrollViewDelegate-Protocol.h"
#include "UIWebViewInternal.h"
#include "WebPolicyDelegate-Protocol.h"

@class NSString, NSURLRequest;
@protocol UIWebViewDelegate;

@interface UIWebView : UIView<WebPolicyDelegate, NSCoding, UIScrollViewDelegate> {
  /* instance variables */
  UIWebViewInternal *_internal;
}

@property (nonatomic) NSObject<UIWebViewDelegate> *delegate;
@property (readonly, nonatomic) UIScrollView *scrollView;
@property (readonly, nonatomic) NSURLRequest *request;
@property (readonly, nonatomic) BOOL canGoBack;
@property (readonly, nonatomic) BOOL canGoForward;
@property (readonly, nonatomic) BOOL loading;
@property (nonatomic) BOOL scalesPageToFit;
@property (nonatomic) BOOL detectsPhoneNumbers;
@property (nonatomic) unsigned long long dataDetectorTypes;
@property (nonatomic) BOOL allowsInlineMediaPlayback;
@property (nonatomic) BOOL mediaPlaybackRequiresUserAction;
@property (nonatomic) BOOL mediaPlaybackAllowsAirPlay;
@property (nonatomic) BOOL suppressesIncrementalRendering;
@property (nonatomic) BOOL keyboardDisplayRequiresUserAction;
@property (nonatomic) long long paginationMode;
@property (nonatomic) long long paginationBreakingMode;
@property (nonatomic) double pageLength;
@property (nonatomic) double gapBetweenPages;
@property (readonly, nonatomic) unsigned long long pageCount;
@property (nonatomic) BOOL allowsPictureInPictureMediaPlayback;
@property (nonatomic) BOOL allowsLinkPreview;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)_relativePathFromAbsolutePath:(id)path removingPathComponents:(unsigned long long)components;
+ (void)_fixPathsForSandboxDirectoryChange;
+ (void)_updatePersistentStoragePaths;

/* instance methods */
- (void)encodeRestorableStateWithCoder:(id)coder;
- (void)decodeRestorableStateWithCoder:(id)coder;
- (BOOL)isElementAccessibilityExposedToInterfaceBuilder;
- (void)_didRotate:(id)rotate;
- (void)_setScalesPageToFitViewportSettings;
- (void)_setRichTextReaderViewportSettings;
- (void)_updateViewSettings;
- (void)_updateScrollViewInsetAdjustmentBehavior;
- (void)_updateBrowserViewExposedScrollViewRect;
- (void)_webViewCommonInitWithWebView:(id)view scalesPageToFit:(BOOL)fit;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame enableReachability:(BOOL)reachability;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithCoder:(id)coder;
- (void)_populateArchivedSubviews:(id)subviews;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (BOOL)_shouldUseViewForSceneDraggingBehavior;
- (id)stringByEvaluatingJavaScriptFromString:(id)string;
- (BOOL)isLoading;
- (void)loadRequest:(id)request;
- (void)loadHTMLString:(id)htmlstring baseURL:(id)url;
- (void)loadData:(id)data MIMEType:(id)mimetype textEncodingName:(id)name baseURL:(id)url;
- (void)reload;
- (void)stopLoading;
- (void)goBack;
- (void)goForward;
- (void)_updateCheckeredPattern;
- (BOOL)_effectiveAppearanceIsDark;
- (BOOL)_effectiveTraitsUseElevatedUserInterfaceLevel;
- (void)_dynamicUserInterfaceTraitDidChange;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)_beginRotation;
- (void)_finishRotation;
- (void)_rescaleDocument;
- (void)_frameOrBoundsChanged;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)_updateOpaqueAndBackgroundColor;
- (void)setOpaque:(BOOL)opaque;
- (void)setBackgroundColor:(id)color;
- (BOOL)_appliesExclusiveTouchToSubviewTree;
- (BOOL)_webView:(id)view previewIsAllowedForPosition:(struct CGPoint { double x0; double x1; })position;
- (id)_webView:(id)view previewViewControllerForURL:(id)url;
- (void)_webView:(id)view willPresentPreview:(id)preview;
- (void)_webView:(id)view didDismissPreview:(id)preview committing:(BOOL)committing;
- (void)_webView:(id)view commitPreview:(id)preview;
- (id)_webView:(id)view presentationSnapshotForPreview:(id)preview;
- (id)_webView:(id)view presentationRectsForPreview:(id)preview;
- (void)view:(id)view didSetFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame oldFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_updateScrollerViewForInputView:(id)view;
- (void)webViewMainFrameDidFirstVisuallyNonEmptyLayoutInFrame:(id)frame;
- (void)webViewMainFrameDidCommitLoad:(id)load;
- (void)webViewMainFrameDidFinishLoad:(id)load;
- (void)webViewMainFrameDidFailLoad:(id)load withError:(id)error;
- (void)saveStateToHistoryItem:(id)item forWebView:(id)view;
- (void)restoreStateFromHistoryItem:(id)item forWebView:(id)view;
- (void)_webView:(id)view didChangeAvoidsUnsafeArea:(BOOL)area;
- (id)viewForZoomingInScrollView:(id)view;
- (void)scrollViewWillBeginZooming:(id)zooming withView:(id)view;
- (void)scrollViewDidZoom:(id)zoom;
- (void)scrollViewDidEndZooming:(id)zooming withView:(id)view atScale:(double)scale;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)_didCompleteScrolling;
- (void)scrollViewDidEndDragging:(id)dragging willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)scrollViewDidScrollToTop:(id)top;
- (void)scrollViewWasRemoved:(id)removed;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewDidChangeAdjustedContentInset:(id)inset;
- (void)_reportError:(id)error;
- (void)webView:(id)view decidePolicyForNewWindowAction:(id)action request:(id)request newFrameName:(id)name decisionListener:(id)listener;
- (void)webView:(id)view decidePolicyForNavigationAction:(id)action request:(id)request frame:(id)frame decisionListener:(id)listener;
- (void)webView:(id)view decidePolicyForMIMEType:(id)mimetype request:(id)request frame:(id)frame decisionListener:(id)listener;
- (void)webView:(id)view unableToImplementPolicyWithError:(id)error frame:(id)frame;
- (void)webView:(id)view frame:(id)frame exceededDatabaseQuotaForSecurityOrigin:(id)origin database:(id)database;
- (void)webView:(id)view exceededApplicationCacheOriginQuotaForSecurityOrigin:(id)origin totalSpaceNeeded:(unsigned long long)needed;
- (void)webView:(id)view printFrameView:(id)view;
- (void)webViewSupportedOrientationsUpdated:(id)updated;
- (void)_updateRequest;
- (void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;
- (void)webView:(id)view didReceiveTitle:(id)title forFrame:(id)frame;
- (id)webView:(id)view connectionPropertiesForResource:(id)resource dataSource:(id)source;
- (id)webThreadWebView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)source;
- (void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
- (void)webView:(id)view didReceiveServerRedirectForProvisionalLoadForFrame:(id)frame;
- (void)webView:(id)view didFailProvisionalLoadWithError:(id)error forFrame:(id)frame;
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
- (void)webView:(id)view didFirstLayoutInFrame:(id)frame;
- (void)webViewClose:(id)close;
- (void)webView:(id)view runJavaScriptAlertPanelWithMessage:(id)message initiatedByFrame:(id)frame;
- (BOOL)webView:(id)view runJavaScriptConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame;
- (id)webView:(id)view runJavaScriptTextInputPanelWithPrompt:(id)prompt defaultText:(id)text initiatedByFrame:(id)frame;
- (void)webView:(id)view decidePolicyForGeolocationRequestFromOrigin:(id)origin frame:(id)frame listener:(id)listener;
- (id)webView:(id)view identifierForInitialRequest:(id)request fromDataSource:(id)source;
- (void)webView:(id)view resource:(id)resource didFinishLoadingFromDataSource:(id)source;
- (void)webView:(id)view resource:(id)resource didFailLoadingWithError:(id)error fromDataSource:(id)source;
- (void)webView:(id)view resource:(id)resource didReceiveAuthenticationChallenge:(id)challenge fromDataSource:(id)source;
- (void)webView:(id)view resource:(id)resource didCancelAuthenticationChallenge:(id)challenge fromDataSource:(id)source;
- (BOOL)webView:(id)view resource:(id)resource canAuthenticateAgainstProtectionSpace:(id)space forDataSource:(id)source;
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;
- (struct CGImage *)newSnapshotWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)_initWithWebView:(id)view;
- (id)_browserView;
- (id)_documentView;
- (id)_scrollView;
- (id)_pdfViewHandler;
- (void)_setOverridesOrientationChangeEventHandling:(BOOL)handling;
- (void)_setDrawsCheckeredPattern:(BOOL)pattern;
- (void)_setWebSelectionEnabled:(BOOL)enabled;
- (void)_setSelectionEnabled:(BOOL)enabled;
- (void)_setDrawInWebThread:(BOOL)thread;
- (long long)_paginationMode;
- (void)_setPaginationMode:(long long)mode;
- (BOOL)_paginationBehavesLikeColumns;
- (void)_setPaginationBehavesLikeColumns:(BOOL)columns;
- (double)_pageLength;
- (void)_setPageLength:(double)length;
- (double)_gapBetweenPages;
- (void)_setGapBetweenPages:(double)pages;
- (unsigned long long)_pageCount;
- (void)_setAlwaysConstrainsScale:(BOOL)scale;
- (BOOL)_alwaysConstrainsScale;
- (void)_setAlwaysDispatchesScrollEvents:(BOOL)events;
- (BOOL)_alwaysDispatchesScrollEvents;
- (void)_setAudioSessionCategoryOverride:(unsigned long long)override;
- (unsigned long long)_audioSessionCategoryOverride;
- (void)_setAllowsPictureInPictureVideo:(BOOL)video;
- (BOOL)_allowsPictureInPictureVideo;
- (void)_setNetworkInterfaceName:(id)name;
- (id)_networkInterfaceName;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (void)copy:(id)copy;
- (void)select:(id)select;
- (void)selectAll:(id)all;
- (void)_define:(id)_define;
- (void)_translate:(id)_translate;
- (void)_share:(id)_share;
- (void)_addShortcut:(id)shortcut;
@end

#endif /* UIWebView_h */
