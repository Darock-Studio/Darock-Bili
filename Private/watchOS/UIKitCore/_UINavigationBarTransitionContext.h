//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UINavigationBarTransitionContext_h
#define _UINavigationBarTransitionContext_h
@import Foundation;

#include "UINavigationBar.h"
#include "UIView.h"
#include "_UIBarBackground.h"
#include "_UINavigationBarContentView.h"
#include "_UINavigationBarContentViewLayout.h"
#include "_UINavigationBarItemStack.h"
#include "_UINavigationBarLargeTitleView.h"
#include "_UINavigationBarLargeTitleViewLayout.h"
#include "_UINavigationBarLayout.h"
#include "_UINavigationBarModernPromptView.h"

@class NSMutableSet;

@interface _UINavigationBarTransitionContext : NSObject {
  /* instance variables */
  _UINavigationBarContentViewLayout *_fromContentLayout;
  _UINavigationBarContentViewLayout *_toContentLayout;
  _UINavigationBarLargeTitleViewLayout *_fromLargeTitleLayout;
  _UINavigationBarLargeTitleViewLayout *_toLargeTitleLayout;
  double _twoPartAnimationBaseDuration;
  double _twoPartAnimationOverlapDuration;
  int _largeTitleTransitionType;
  struct { unsigned int x :1 isRTL; unsigned int x :1 compact; unsigned int x :1 allowLargeTitles; unsigned int x :1 twoPart; unsigned int x :1 beginWithLargeTitle; unsigned int x :1 endWithLargeTitle; unsigned int x :1 observedScrollViewOffsetIsApplicable; unsigned int x :1 sharesContentViewLayouts; unsigned int x :1 beginWithTransparencyAllowed; unsigned int x :1 endWithTransparencyAllowed; unsigned int x :1 usesBarBackground; } _navigationBarTransitionContextFlags;
  NSMutableSet *_clippingViews;
}

@property (readonly, @dynamic, nonatomic) int transition;
@property (nonatomic) UINavigationBar *navigationBar;
@property (retain, nonatomic) _UINavigationBarItemStack *stack;
@property (nonatomic) BOOL isRTL;
@property (nonatomic) BOOL compact;
@property (nonatomic) BOOL allowLargeTitles;
@property (nonatomic) BOOL twoPart;
@property (nonatomic) long long apiVersion;
@property (nonatomic) double backgroundAlpha;
@property (retain, nonatomic) _UINavigationBarModernPromptView *promptView;
@property (retain, nonatomic) _UINavigationBarContentView *contentView;
@property (readonly, nonatomic) _UIBarBackground *backgroundView;
@property (retain, nonatomic) _UINavigationBarLargeTitleView *largeTitleView;
@property (readonly, nonatomic) UIView *viewFadingInFromCustomAlpha;
@property (readonly, nonatomic) UIView *viewUsingEaseOutCurve;
@property (readonly, nonatomic) UIView *viewUsingEaseInCurve;
@property (readonly, nonatomic) double contentViewFittingHeight;
@property (readonly, nonatomic) double contentViewMaxY;
@property (nonatomic) BOOL beginWithLargeTitle;
@property (nonatomic) BOOL endWithLargeTitle;
@property (nonatomic) BOOL beginWithTransparencyAllowed;
@property (nonatomic) BOOL endWithTransparencyAllowed;
@property (nonatomic) struct CGPoint { double x0; double x1; } startingContentOffsetForObservedScrollView;
@property (nonatomic) BOOL observedScrollViewOffsetIsApplicable;
@property (nonatomic) BOOL sharesContentViewLayouts;
@property (retain, nonatomic) _UINavigationBarLayout *fromLayout;
@property (retain, nonatomic) _UINavigationBarLayout *toLayout;

/* class methods */
+ (id)contextForTransition:(int)transition withIdiom:(long long)idiom;

/* instance methods */
- (void)setRTL:(BOOL)rtl;
- (void)setBackgroundView:(id)view isBarBackground:(BOOL)background;
- (id)description;
- (void)recordUpdates:(id /* block */)updates;
- (void)prepare;
- (void)_prepareTransitionFromPalette:(id)palette toPalette:(id)palette toPaletteFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_animateFromPalette:(id)palette fromPaletteFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame toPalette:(id)palette toPaletteFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (BOOL)shouldPerformTwoPartCrossfadeTransition;
- (void)_animateBackgroundView;
- (void)animate;
- (void)setAllLargeTitleLayoutsVisible;
- (void)_resetContentAndLargeTitleViewCompleted:(BOOL)completed;
- (void)complete;
- (void)cancel;
- (void)_animateAsTwoPartsWithOverlap:(double)overlap partOne:(id /* block */)one partTwo:(id /* block */)two;
- (void)_animateAsTwoPartsWithOverlapIfNecessaryPartOne:(id /* block */)one partTwo:(id /* block */)two;
- (void)_animateAsTwoPartsWithoutOverlap:(id /* block */)overlap partTwo:(id /* block */)two;
- (void)_updateIncomingLayoutWidthToMatchOutgoingLayout;
@end

#endif /* _UINavigationBarTransitionContext_h */
