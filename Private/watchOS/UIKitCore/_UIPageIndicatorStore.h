//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIPageIndicatorStore_h
#define _UIPageIndicatorStore_h
@import Foundation;

#include "UIImage.h"
#include "_UIPageIndicatorStoreDelegate-Protocol.h"
#include "_UIPageIndicatorStoreObject.h"

@class NSMutableArray;

@interface _UIPageIndicatorStore : NSObject {
  /* instance variables */
  struct { struct SizeForMaximumContentSizeCache { unsigned int x :1 dirty; double fittingLength; struct CGSize { double width; double height; } maximumSize; } fittingSize; struct NumberOfVisibleIndicatorsForStartIndexCache { unsigned int x :1 dirty; double fittingLength; long long startIndex; long long numberOfIndicators; } indicatorCount; struct ContentSizeForNumberOfPagesCache { unsigned int x :1 dirty; double numberOfPages; struct CGSize { double width; double height; } contentSize; } contentSize; struct MinimumContentSizeForIndicatorsInRangeCache { unsigned int x :1 dirty; struct _NSRange { unsigned long long location; unsigned long long length; } range; struct CGSize { double width; double height; } contentSize; } contentSizeInRange; } _cache;
  struct { struct SizeForMaximumContentSizeCache { unsigned int x :1 dirty; double fittingLength; struct CGSize { double width; double height; } maximumSize; } fittingSize; struct NumberOfVisibleIndicatorsForStartIndexCache { unsigned int x :1 dirty; double fittingLength; long long startIndex; long long numberOfIndicators; } indicatorCount; struct ContentSizeForNumberOfPagesCache { unsigned int x :1 dirty; double numberOfPages; struct CGSize { double width; double height; } contentSize; } contentSize; struct MinimumContentSizeForIndicatorsInRangeCache { unsigned int x :1 dirty; struct _NSRange { unsigned long long location; unsigned long long length; } range; struct CGSize { double width; double height; } contentSize; } contentSizeInRange; } _expandedCache;
  UIImage *_defaultImage;
  _UIPageIndicatorStoreObject *_defaultObject;
}

@property (retain, nonatomic) NSMutableArray *store;
@property (weak, nonatomic) NSObject<_UIPageIndicatorStoreDelegate> *delegate;
@property (retain, nonatomic) UIImage *preferredImage;
@property (retain, nonatomic) UIImage *preferredActiveImage;
@property (nonatomic) double indicatorSpacing;
@property (nonatomic) long long direction;
@property (readonly, nonatomic) UIImage *indicatorImage;
@property (readonly, nonatomic) long long numberOfPages;

/* instance methods */
- (id)init;
- (id)_defaultIndicatorImage;
- (id)customIndicatorImageForPage:(long long)page;
- (id)indicatorImageForPage:(long long)page;
- (id)customActiveIndicatorImageForPage:(long long)page;
- (id)activeIndicatorImageForPage:(long long)page;
- (struct CGSize { double x0; double x1; })resolvedIndicatorLayoutSizeForPage:(long long)page;
- (void)invalidateLayoutCache;
- (struct CGSize { double x0; double x1; })indicatorSizeForPage:(long long)page;
- (struct CGSize { double x0; double x1; })_indicatorSizeForObject:(id)object;
- (long long)numberOfVisibleIndicatorsForStartIndex:(long long)index fittingLength:(double)length hasExpandedActiveIndicator:(BOOL)indicator;
- (struct CGSize { double x0; double x1; })sizeForMaximumContentSizeFittingLength:(double)length hasExpandedActiveIndicator:(BOOL)indicator;
- (struct CGSize { double x0; double x1; })_sizeForMaximumContentSizeFittingLength:(double)length hasExpandedActiveIndicator:(BOOL)indicator;
- (void)updateStoreForNumberOfPages:(long long)pages;
- (void)updateImage:(id)image forPage:(long long)page;
- (void)updateActiveImage:(id)image forPage:(long long)page;
- (void)_updateImage:(id)image forPage:(long long)page active:(BOOL)active;
- (struct CGSize { double x0; double x1; })defaultIndicatorSize;
- (struct CGSize { double x0; double x1; })contentSizeForNumberOfPages:(long long)pages hasExpandedActiveIndicator:(BOOL)indicator;
- (struct CGSize { double x0; double x1; })minimumContentSizeForIndicatorsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range hasExpandedActiveIndicator:(BOOL)indicator;
- (struct CGSize { double x0; double x1; })_contentSizeForIndicatorsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range hasExpandedActiveIndicator:(BOOL)indicator;
- (double)indicatorPositionForContinuousPage:(double)page expandedIndicatorPage:(long long)page;
- (void)_insertImage:(id)image forPage:(long long)page active:(BOOL)active;
- (void)_removeImageForPage:(long long)page active:(BOOL)active;
- (void)_resetStore;
- (long long)objectIndexForPage:(long long)page;
- (long long)_objectIndexForPage:(long long)page lower:(long long)lower upper:(long long)upper;
- (void)validateDataStore;
@end

#endif /* _UIPageIndicatorStore_h */
