//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef UIPanGestureRecognizer_h
#define UIPanGestureRecognizer_h
@import Foundation;

#include "UIGestureRecognizer.h"
#include "UIPanGestureVelocitySample.h"

@class NSMutableArray;

@interface UIPanGestureRecognizer : UIGestureRecognizer {
  /* instance variables */
  struct CGPoint { double x; double y; } _firstSceneReferenceLocation;
  struct CGPoint { double x; double y; } _lastSceneReferenceLocation;
  double _lastTouchTime;
  NSMutableArray *_touches;
  double _hysteresis;
  double _allowableSeparation;
  struct CGPoint { double x; double y; } _lastUnadjustedSceneReferenceLocation;
  double _allowableTouchTimeSeparation;
  unsigned int x :1 _delegateImplementsShouldTryToBeginHorizontally;
  unsigned int x :1 _delegateImplementsShouldTryToBeginVertically;
  unsigned int x :1 _failsPastHysteresisWithoutMinTouches;
  unsigned int x :1 _canPanHorizontally;
  unsigned int x :1 _canPanVertically;
  unsigned int x :1 _delegateAllowsPanHorizontally;
  unsigned int x :1 _delegateAllowsPanVertically;
  unsigned int x :1 _queriedDelegateAllowsPanHorizontally;
  unsigned int x :1 _queriedDelegateAllowsPanVertically;
  unsigned int x :1 _multitouchTimerOn;
  unsigned int x :1 _requiresImmediateMultipleTouches;
  NSMutableArray *_movingTouches;
  struct CGPoint { double x; double y; } _digitizerLocation;
  UIPanGestureVelocitySample *_velocitySample;
  UIPanGestureVelocitySample *_previousVelocitySample;
}

@property (readonly, nonatomic) long long lastTouchCount;
@property (nonatomic) BOOL ignoresStationaryTouches;
@property (nonatomic) BOOL failsPastMaxTouches;
@property (nonatomic) unsigned long long minimumNumberOfTouches;
@property (nonatomic) unsigned long long maximumNumberOfTouches;
@property (nonatomic) long long allowedScrollTypesMask;

/* class methods */
+ (double)_defaultHysteresis;
+ (BOOL)_shouldDefaultToTouches;
+ (BOOL)supportsSecureCoding;
+ (void)_setPanGestureRecognizersEnabled:(BOOL)enabled;

/* instance methods */
- (id)initWithTarget:(id)target action:(SEL)action;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)_resetVelocitySamples;
- (void)_resetGestureRecognizer;
- (void)clearMultitouchTimer;
- (void)startMultitouchTimer:(double)timer;
- (void)multitouchExpired:(id)expired;
- (void)_setFailsPastHysteresisWithoutMinTouches:(BOOL)touches;
- (BOOL)_failsPastHysteresisWithoutMinTouches;
- (long long)_lastTouchCount;
- (void)_setHysteresis:(double)hysteresis;
- (double)_hysteresis;
- (void)_setAllowableSeparation:(double)separation;
- (double)_allowableSeparation;
- (void)_setAllowableTouchTimeSeparation:(double)separation;
- (double)_allowableTouchTimeSeparation;
- (void)_setRequiresImmediateMultipleTouches:(BOOL)touches;
- (BOOL)_requiresImmediateMultipleTouches;
- (void)_setIgnoresStationaryTouches:(BOOL)touches;
- (BOOL)_ignoresStationaryTouches;
- (BOOL)_canPanHorizontally;
- (BOOL)_canPanVertically;
- (void)_setCanPanHorizontally:(BOOL)horizontally;
- (void)_setCanPanVertically:(BOOL)vertically;
- (id)_movingTouches;
- (struct CGPoint { double x0; double x1; })_convertPoint:(struct CGPoint { double x0; double x1; })point toSceneReferenceCoordinatesFromView:(id)view;
- (struct CGPoint { double x0; double x1; })_convertPoint:(struct CGPoint { double x0; double x1; })point fromSceneReferenceCoordinatesToView:(id)view;
- (struct CGPoint { double x0; double x1; })translationInView:(id)view;
- (void)setTranslation:(struct CGPoint { double x0; double x1; })translation inView:(id)view;
- (struct CGPoint { double x0; double x1; })_convertVelocitySample:(id)sample fromSceneReferenceCoordinatesToView:(id)view;
- (struct CGPoint { double x0; double x1; })velocityInView:(id)view;
- (void)_touchesListChangedFrom:(id)from to:(id)to;
- (struct UIOffset { double x0; double x1; })_offsetInViewFromSceneReferenceLocation:(struct CGPoint { double x0; double x1; })location toSceneReferenceLocation:(struct CGPoint { double x0; double x1; })location;
- (struct CGPoint { double x0; double x1; })_shiftPanLocationToNewSceneReferenceLocation:(struct CGPoint { double x0; double x1; })location lockingToAxis:(unsigned long long)axis;
- (struct CGPoint { double x0; double x1; })_adjustSceneReferenceLocation:(struct CGPoint { double x0; double x1; })location;
- (void)_centroidMovedTo:(struct CGPoint { double x0; double x1; })to atTime:(double)time affectingTranslation:(BOOL)translation;
- (double)_translationDistanceInSceneInSelfAxis:(struct CGPoint { double x0; double x1; })axis;
- (BOOL)_willScrollX;
- (BOOL)_willScrollY;
- (void)setDelegate:(id)delegate;
- (BOOL)_shouldBeginHorizontally:(BOOL)horizontally vertically:(BOOL)vertically withEvent:(id)event;
- (BOOL)_shouldTryToBeginWithEvent:(id)event;
- (void)_removeHysteresisFromTranslation;
- (void)_willBeginAfterSatisfyingFailureRequirements;
- (BOOL)_touchesExceedAllowableSeparation;
- (BOOL)_updateMovingTouchesArraySavingOldArray:(id *)array;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)_processTouchesMoved:(id)moved withEvent:(id)event;
- (void)_didUpdateCentroidWithTouches:(id)touches event:(id)event;
- (void)touchesMoved:(id)moved withEvent:(id)event;
- (void)_handleEndedTouches:(id)touches withFinalStateAdjustments:(id /* block */)adjustments;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;
- (void)pressesBegan:(id)began withEvent:(id)event;
- (void)_ignoreTouchForTouchIdentifier:(unsigned int)identifier;
- (struct CGPoint { double x0; double x1; })locationInView:(id)view;
- (unsigned long long)numberOfTouches;
- (struct CGPoint { double x0; double x1; })locationOfTouch:(unsigned long long)touch inView:(id)view;
- (id)_activeTouches;
- (void)_ignoreTouches:(id)touches forEvent:(id)event;
- (struct CGPoint { double x0; double x1; })_digitizerLocation;
- (void)_updateDigitizerLocationWithEvent:(id)event;
- (BOOL)_isGestureType:(long long)type;
@end

#endif /* UIPanGestureRecognizer_h */
