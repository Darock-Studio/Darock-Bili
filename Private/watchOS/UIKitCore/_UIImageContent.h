//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 7209.1.301.0.0
//
#ifndef _UIImageContent_h
#define _UIImageContent_h
@import Foundation;

#include "UIBezierPath.h"
#include "UIImageSymbolConfiguration.h"

@class CIImage, CUINamedVectorGlyph, NSString;

@interface _UIImageContent : NSObject

@property (readonly, nonatomic) double scale;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } sizeInPixels;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } size;
@property (readonly, nonatomic) NSString *typeName;
@property (readonly, nonatomic) struct CGImage * CGImage;
@property (readonly, nonatomic) struct CGImageSource * CGImageSource;
@property (readonly, nonatomic) CIImage *CIImage;
@property (readonly, nonatomic) struct __IOSurface * IOSurface;
@property (readonly, nonatomic) struct CGPDFPage * CGPDFPage;
@property (readonly, nonatomic) struct CGSVGDocument * CGSVGDocument;
@property (readonly, nonatomic) CUINamedVectorGlyph *vectorGlyph;
@property (readonly, nonatomic) double variableValue;
@property (readonly, nonatomic) UIImageSymbolConfiguration *_automaticSymbolConfiguration;
@property (readonly, nonatomic) double vectorScale;
@property (readonly, nonatomic) UIBezierPath *outlinePath;
@property (nonatomic) BOOL isDecompressing;

/* class methods */
+ (id)empty;

/* instance methods */
- (id)init;
- (id)initWithScale:(double)scale;
- (BOOL)isCGImageOnly;
- (BOOL)isCGImage;
- (BOOL)isPreparedCGImage;
- (BOOL)isHDR;
- (id)makeSDRVersion;
- (id)imageRendererFormat;
- (BOOL)hasCGImage;
- (BOOL)prefersProvidingContentsDirectly;
- (BOOL)canScaleImageToTargetResolution;
- (BOOL)canEmitVectorDrawingCommands;
- (BOOL)_canProvideCGImageDirectly;
- (void)_setCGImageSource:(struct CGImageSource *)source;
- (id)contentPreparedForDisplay;
- (BOOL)prepareContentForDisplayWithCompletionHandler:(id /* block */)handler;
- (id)contentOptimizedForImageSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)optimizeContentForImageSize:(struct CGSize { double x0; double x1; })size completionHandler:(id /* block */)handler;
- (BOOL)isCIImage;
- (BOOL)canRenderCIImage;
- (BOOL)isIOSurface;
- (BOOL)isCGPDFPage;
- (struct CGSize { double x0; double x1; })CGPDFPageSize;
- (BOOL)isCGSVGDocument;
- (struct CGSize { double x0; double x1; })CGSVGDocumentSize;
- (BOOL)isVectorGlyph;
- (BOOL)containsNamedColorStyles;
- (BOOL)containsNamedColorStyle:(id)style;
- (unsigned long long)numberOfHierarchyLayers;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)contentWithCGImage:(struct CGImage *)cgimage;
- (id)contentWithVariableValue:(double)value;
- (BOOL)_isSameSymbolImageContentExceptVariableValue:(id)value;
- (id)renditionApplyingEffect:(id)effect;
- (id)renditionWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale applyingEffect:(id)effect;
- (void)_prepareForDrawingWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context;
- (void)_drawWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context effect:(id)effect;
- (void)_drawVectorCommandsWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context effect:(id)effect;
- (struct CGImage *)_provideCGImageWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale;
- (struct CGImage *)_provideVectorGlyphCGImageWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale namedColorResolver:(id /* block */)resolver;
- (void)_drawVectorGlyphWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context namedColorResolver:(id /* block */)resolver;
- (struct CGImage *)_provideVectorGlyphCGImageWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale hierarchicalColorResolver:(id /* block */)resolver;
- (void)_drawVectorGlyphWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context hierarchicalColorResolver:(id /* block */)resolver;
- (struct CGImage *)_provideVectorGlyphCGImageWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale paletteColors:(id)colors;
- (void)_drawVectorGlyphWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale inContext:(struct CGContext *)context paletteColors:(id)colors;
- (id)debugDescription;
- (id)debugQuickLookObject;
@end

#endif /* _UIImageContent_h */
