//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDHRElectrocardiogramRecordingFeatureAvailabilityManager_h
#define HDHRElectrocardiogramRecordingFeatureAvailabilityManager_h
@import Foundation;

#include "HDFeatureAvailabilityExtension-Protocol.h"
#include "HDFeatureAvailabilityExtensionObserver-Protocol.h"

@class NSString, NSUserDefaults;
@protocol HKObserverSet<HKFeatureAvailabilityProvidingObserver, OS_dispatch_queue;

@interface HDHRElectrocardiogramRecordingFeatureAvailabilityManager : NSObject<HDFeatureAvailabilityExtensionObserver, HDFeatureAvailabilityExtension> {
  /* instance variables */
  HKObserverSet<HKFeatureAvailabilityProvidingObserver> *_observers;
  int _didUpdateOnboardingCacheNotificationToken;
  NSUserDefaults *_cacheDefaults;
  NSObject<OS_dispatch_queue> *_observerQueue;
  BOOL _needsOnboardingVersionCacheUpdate;
}

@property (readonly, nonatomic) NSObject<HDFeatureAvailabilityExtension> *v1FeatureAvailabilityManager;
@property (readonly, nonatomic) NSObject<HDFeatureAvailabilityExtension> *v2FeatureAvailabilityManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *featureIdentifier;

/* instance methods */
- (id)initWithProfile:(id)profile cacheDefaults:(id)defaults;
- (id)initWithV1FeatureAvailabilityManager:(id)manager v2FeatureAvailabilityManager:(id)manager cacheDefaults:(id)defaults;
- (void)dealloc;
- (void)_registerForCacheUpdatedNotifications;
- (id)featureOnboardingRecordWithError:(id *)error;
- (void)getFeatureOnboardingRecordWithCompletion:(id /* block */)completion;
- (id)isCurrentOnboardingVersionCompletedWithError:(id *)error;
- (void)isCurrentOnboardingVersionCompletedWithCompletion:(id /* block */)completion;
- (id)canCompleteOnboardingForCountryCode:(id)code error:(id *)error;
- (id)onboardingEligibilityForCountryCode:(id)code error:(id *)error;
- (id)onboardedCountryCodeSupportedStateWithError:(id *)error;
- (id)isFeatureCapabilitySupportedOnActivePairedDeviceWithError:(id *)error;
- (id)earliestDateLowestOnboardingVersionCompletedWithError:(id *)error;
- (id)pairedFeatureAttributesWithError:(id *)error;
- (id)featureAvailabilityRequirementsWithError:(id *)error;
- (id)regionAvailabilityWithError:(id *)error;
- (void)setCurrentOnboardingVersionCompletedForCountryCode:(id)code countryCodeProvenance:(long long)provenance date:(id)date settings:(id)settings completion:(id /* block */)completion;
- (void)saveOnboardingCompletion:(id)completion settings:(id)settings completion:(id /* block */)completion;
- (void)setFeatureSettingData:(id)data forKey:(id)key completion:(id /* block */)completion;
- (void)setFeatureSettingString:(id)string forKey:(id)key completion:(id /* block */)completion;
- (void)setFeatureSettingNumber:(id)number forKey:(id)key completion:(id /* block */)completion;
- (void)removeFeatureSettingValueForKey:(id)key completion:(id /* block */)completion;
- (void)resetOnboardingWithCompletion:(id /* block */)completion;
- (void)registerObserver:(id)observer queue:(id)queue;
- (void)unregisterObserver:(id)observer;
- (void)featureAvailabilityProvidingDidUpdateOnboardingCompletion:(id)completion;
- (void)featureAvailabilityProvidingDidUpdateSettings:(id)settings;
- (void)featureAvailabilityProvidingDidUpdatePairedDeviceCapability:(id)capability;
- (void)featureAvailabilityExtensionDidUpdateRegionAvailability:(id)availability;
- (void)featureAvailabilityExtensionOnboardingCompletionDataDidBecomeAvailable:(id)available;
- (void)_setV1CurrentOnboardingVersionCompletedForCountryCode:(id)code countryCodeProvenance:(long long)provenance date:(id)date settings:(id)settings completion:(id /* block */)completion;
- (void)_observerQueue_updateCachedOnboardingVersionIfNeeded;
@end

#endif /* HDHRElectrocardiogramRecordingFeatureAvailabilityManager_h */
