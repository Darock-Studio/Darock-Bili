//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2811.42.9.28.8
//
#ifndef MapsSuggestionsTimer_Protocol_h
#define MapsSuggestionsTimer_Protocol_h
@import Foundation;

@protocol MapsSuggestionsTimer <MapsSuggestionsTrigger>
/* instance methods */
- (id)initWithName:(id)name queue:(id)queue block:(id /* block */)block;
- (void)scheduleWithTimeInterval:(double)interval repeatAfter:(double)after leeway:(double)leeway;
- (void)scheduleWithTimeInterval:(double)interval leeway:(double)leeway;
- (void)scheduleWithInterval:(struct Duration { struct duration<long long, std::ratio<1, 1000000000>> { long long x0; } x0; })interval repeatAfter:(struct Duration { struct duration<long long, std::ratio<1, 1000000000>> { long long x0; } x0; })after leeway:(struct Duration { struct duration<long long, std::ratio<1, 1000000000>> { long long x0; } x0; })leeway;
- (void)scheduleWithInterval:(struct Duration { struct duration<long long, std::ratio<1, 1000000000>> { long long x0; } x0; })interval leeway:(struct Duration { struct duration<long long, std::ratio<1, 1000000000>> { long long x0; } x0; })leeway;
- (void)unschedule;
@end

#endif /* MapsSuggestionsTimer_Protocol_h */
