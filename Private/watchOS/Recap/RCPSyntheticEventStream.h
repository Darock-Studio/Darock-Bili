//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 135.6.0.0.0
//
#ifndef RCPSyntheticEventStream_h
#define RCPSyntheticEventStream_h
@import Foundation;

#include "RCPEventStream.h"
#include "RCPCrownEventStreamComposer-Protocol.h"
#include "RCPEventSenderProperties.h"
#include "RCPEventStreamComposer-Protocol.h"
#include "RCPFluidSwipeGesturesEventStreamComposer-Protocol.h"
#include "RCPHandGestureEventStreamComposer-Protocol.h"
#include "RCPNaturalInputCollectionEventStreamComposer-Protocol.h"
#include "RCPPointerEventStreamComposer-Protocol.h"
#include "RCPPointerTrackingChildEventStream.h"

@class CAMediaTimingFunction, NSMutableArray, NSString;

@interface RCPSyntheticEventStream : RCPEventStream<RCPEventStreamComposer, RCPFluidSwipeGesturesEventStreamComposer, RCPCrownEventStreamComposer, RCPPointerEventStreamComposer, RCPNaturalInputCollectionEventStreamComposer, RCPHandGestureEventStreamComposer> {
  /* instance variables */
  NSMutableArray *_processingEventBuffer;
  double _currentTimeOffset;
  long long _generationCount;
}

@property (readonly, nonatomic) struct { double x0; struct CGPoint { double x0; double x1; } x1; double x2; double x3; unsigned char x4; unsigned int x5; BOOL x6; } * activePoints;
@property (nonatomic) unsigned long long activePointCount;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } screenSize;
@property (nonatomic) struct CGSize { double x0; double x1; } gsScreenPointSize;
@property (nonatomic) double gsScreenScaleFactor;
@property (nonatomic) unsigned int transducerType;
@property (retain, nonatomic) RCPPointerTrackingChildEventStream *pointerChildEventStream;
@property (nonatomic) long long touchFrequency;
@property (retain, nonatomic) CAMediaTimingFunction *touchCurveFunction;
@property (readonly, nonatomic) double defaultPressure;
@property (readonly, nonatomic) double defaultRadius;
@property (retain, nonatomic) RCPEventSenderProperties *senderProperties;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double pointerFrequency;
@property (retain, nonatomic) CAMediaTimingFunction *pointerCurveFunction;
@property (nonatomic) BOOL scalePointerPhaseScrollToPixels;

/* class methods */
+ (id)eventStreamWithCLIArguments:(id)cliarguments;
+ (id)eventStreamWithEventActions:(id /* block */)actions;

/* instance methods */
- (void)composeDockGestureInMotion:(unsigned short)motion frequency:(unsigned long long)frequency actionBlock:(id /* block */)block;
- (void)composeDockGestureOfFlavor:(unsigned short)flavor motion:(unsigned short)motion frequency:(unsigned long long)frequency actionBlock:(id /* block */)block;
- (void)composeNavigationGestureInMotion:(unsigned short)motion frequency:(unsigned long long)frequency actionBlock:(id /* block */)block;
- (void)withExclusiveChildStream:(id)stream perform:(id /* block */)perform;
- (id)init;
- (void)dealloc;
- (void)_initScreenPropertiesForScreen:(id)screen;
- (void)_initScreenProperties;
- (struct __IOHIDEvent *)_createIOSButtonHIDEventWithPage:(unsigned int)page usage:(unsigned int)usage down:(BOOL)down;
- (struct __IOHIDEvent *)_createIOSButtonHIDEventWithButtonType:(long long)type down:(BOOL)down;
- (struct __IOHIDEvent *)_createIOHIDWithEventType:(long long)type;
- (struct __IOHIDEvent *)_createIOHIDGameControllerEventForDpadButton:(long long)button;
- (void)_addIOHIDEventToProcessingBuffer:(struct __IOHIDEvent *)buffer;
- (struct CGPoint { double x0; double x1; })_normalizePoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)_isEdgePoint:(struct CGPoint { double x0; double x1; })point getMask:(unsigned int *)mask;
- (unsigned long long)_currentMachTime;
- (void)_finalizeProcessingEventBuffer;
- (void)_finalizeHomeButtonEvents;
- (void)_updateTouchPoints:(struct CGPoint { double x0; double x1; } *)points count:(unsigned long long)count;
- (void)_delayBetweenMove:(int)move elapsedTime:(double)time;
- (void)composeWithSender:(id)sender actionBlock:(id /* block */)block;
- (void)advanceTime:(double)time;
- (double)touchMoveInterval;
- (void)_touchDownAtPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count pressure:(double)pressure radius:(double)radius edgeMaskOptions:(const struct { unsigned int x0; BOOL x1; } *)options;
- (void)touchDownAtPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count pressure:(double)pressure radius:(double)radius;
- (void)touchDownAtPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count radius:(double)radius;
- (void)touchDownAtPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count pressure:(double)pressure;
- (void)touchDownAtPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count;
- (void)touchDown:(struct CGPoint { double x0; double x1; })down touchCount:(unsigned long long)count pressure:(double)pressure radius:(double)radius;
- (void)touchDown:(struct CGPoint { double x0; double x1; })down touchCount:(unsigned long long)count radius:(double)radius;
- (void)touchDown:(struct CGPoint { double x0; double x1; })down touchCount:(unsigned long long)count pressure:(double)pressure;
- (void)touchDown:(struct CGPoint { double x0; double x1; })down touchCount:(unsigned long long)count;
- (void)touchDown:(struct CGPoint { double x0; double x1; })down;
- (void)touchTapDown:(struct CGPoint { double x0; double x1; })down;
- (void)edgeOrb:(struct CGPoint { double x0; double x1; })orb;
- (void)edgeOrbSwipe:(struct CGPoint { double x0; double x1; })swipe withEndLocation:(struct CGPoint { double x0; double x1; })location withDuration:(double)duration;
- (void)liftUpActivePointsByIndex:(id)index;
- (void)liftUpAtAllActivePointsWithEventType:(long long)type;
- (void)liftUpAtAllActivePoints;
- (void)liftUpAtPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count;
- (void)liftUp:(struct CGPoint { double x0; double x1; })up touchCount:(unsigned long long)count;
- (void)liftUp:(struct CGPoint { double x0; double x1; })up;
- (void)_moveLastTouchPoint:(struct CGPoint { double x0; double x1; })point eventMask:(unsigned long long)mask;
- (void)moveToPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count pressure:(double)pressure duration:(double)duration radius:(double)radius;
- (void)moveToPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count pressure:(double)pressure duration:(double)duration;
- (void)moveToPoints:(struct CGPoint { double x0; double x1; } *)points touchCount:(unsigned long long)count duration:(double)duration;
- (void)moveToPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration;
- (void)_setPressureForAllPoints:(double)points;
- (void)_setMajorRadiusForAllPoints:(double)points;
- (void)tap:(struct CGPoint { double x0; double x1; })tap;
- (void)tap:(struct CGPoint { double x0; double x1; })tap radius:(double)radius;
- (void)tap:(struct CGPoint { double x0; double x1; })tap pressure:(double)pressure;
- (void)tap:(struct CGPoint { double x0; double x1; })tap withPressure:(double)pressure radius:(double)radius;
- (void)tapToWakeAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_tap:(struct CGPoint { double x0; double x1; })_tap withPressure:(double)pressure;
- (void)doubleTap:(struct CGPoint { double x0; double x1; })tap;
- (void)doubleFingerTap:(struct CGPoint { double x0; double x1; })tap;
- (void)taps:(unsigned long long)taps location:(struct CGPoint { double x0; double x1; })location withNumberOfTouches:(unsigned long long)touches;
- (void)taps:(unsigned long long)taps location:(struct CGPoint { double x0; double x1; })location withNumberOfTouches:(unsigned long long)touches pressure:(double)pressure radius:(double)radius;
- (void)tapsNoLift:(unsigned long long)lift location:(struct CGPoint { double x0; double x1; })location withNumberOfTouches:(unsigned long long)touches;
- (void)pressButtonsWithPages:(id)pages usages:(id)usages duration:(double)duration;
- (void)pressButtons:(id)buttons duration:(double)duration;
- (void)beginButtonPressForButtonType:(long long)type;
- (void)endButtonPressForButtonType:(long long)type;
- (void)beginButtonPressWithPage:(unsigned long long)page usage:(unsigned long long)usage;
- (void)endButtonPressWithPage:(unsigned long long)page usage:(unsigned long long)usage;
- (void)flipRingerSwitchToValue:(BOOL)value;
- (void)rotateCrown:(double)crown direction:(long long)direction duration:(double)duration;
- (void)handGestureTapWithCount:(long long)count;
- (void)_handGestureTapHoldWithPhase:(unsigned short)phase;
- (void)handGestureMayBeginTapHold;
- (void)handGestureBeganTapHold;
- (void)handGestureEndTapHold;
- (void)handGestureCancelTapHold;
- (void)_knobEventForOffset:(struct CGVector { double x0; double x1; })offset buttonMask:(unsigned int)mask oldButtonMask:(unsigned int)mask;
- (void)knobNudge:(struct CGVector { double x0; double x1; })nudge buttonMask:(unsigned int)mask duration:(double)duration;
- (void)sendUnicodeString:(id)string;
- (void)sendUnicodeStringByCharacters:(id)characters durationBetweenEvents:(double)events;
- (void)sendUnicodeString:(id)string synthesizePerCharacterEvents:(BOOL)events durationBetweenEvents:(double)events;
- (id)_splitStringIntoArrayOfCharacters:(id)characters;
- (void)pressDiscreteGameControllerButton:(long long)button duration:(double)duration;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration radius:(double)radius;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure radius:(double)radius;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration tapAndWait:(double)wait lift:(BOOL)lift;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration tapAndWait:(double)wait lift:(BOOL)lift radius:(double)radius;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration tapAndWait:(double)wait lift:(BOOL)lift pressure:(double)pressure;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration tapAndWait:(double)wait lift:(BOOL)lift pressure:(double)pressure radius:(double)radius;
- (void)dragWithStartPoint:(struct CGPoint { double x0; double x1; })point mask:(unsigned long long)mask endPoint:(struct CGPoint { double x0; double x1; })point mask:(unsigned long long)mask duration:(double)duration;
- (void)sendFlickWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration;
- (void)sendFlickWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure;
- (void)sendFlickWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration radius:(double)radius;
- (void)sendFlickWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure radius:(double)radius;
- (void)multifingerDragWithPointArray:(struct CGPoint { double x0; double x1; } *)array numPoints:(unsigned long long)points duration:(double)duration numFingers:(unsigned long long)fingers;
- (void)rotate:(struct CGPoint { double x0; double x1; })rotate withRadius:(double)radius rotation:(double)rotation duration:(double)duration touchCount:(unsigned long long)count;
- (void)_dragWithStartPoint:(struct CGPoint { double x0; double x1; })point mask:(unsigned long long)mask endPoint:(struct CGPoint { double x0; double x1; })point mask:(unsigned long long)mask duration:(double)duration tapAndWait:(double)wait lift:(BOOL)lift pressure:(double)pressure radius:(double)radius;
- (void)_flickWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure radius:(double)radius;
- (void)pinchOpenWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration;
- (void)pinchOpenWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration radius:(double)radius;
- (void)pinchOpenWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure;
- (void)pinchOpenWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure radius:(double)radius;
- (void)pinchCloseWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration;
- (void)pinchCloseWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure;
- (void)pinchCloseWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration radius:(double)radius;
- (void)pinchCloseWithStartPoint:(struct CGPoint { double x0; double x1; })point endPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration pressure:(double)pressure radius:(double)radius;
- (void)peekAndPop:(struct CGPoint { double x0; double x1; })pop commit:(BOOL)commit duration:(double)duration;
- (void)peekAndPop:(struct CGPoint { double x0; double x1; })pop commit:(BOOL)commit duration:(double)duration presure:(double)presure;
- (void)peekAndPop:(struct CGPoint { double x0; double x1; })pop commit:(BOOL)commit duration:(double)duration radius:(double)radius;
- (void)peekAndPop:(struct CGPoint { double x0; double x1; })pop commit:(BOOL)commit duration:(double)duration pressure:(double)pressure radius:(double)radius;
- (void)stylusBarrelDoubleTap;
- (void)vendorEventWithPage:(id)page withUsage:(id)usage withVersion:(unsigned char)version;
- (void)vendorEventWithPage:(id)page withUsage:(id)usage withVersion:(unsigned char)version withData:(id)data;
@end

#endif /* RCPSyntheticEventStream_h */
