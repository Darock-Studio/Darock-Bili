//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.3.1.0.0
//
#ifndef KVSpanMatchResultInterpreter_h
#define KVSpanMatchResultInterpreter_h
@import Foundation;

#include "KVPriorRetriever-Protocol.h"
#include "KVSpanMatchPolicy.h"

@class NSMutableDictionary;

@interface KVSpanMatchResultInterpreter : NSObject {
  /* instance variables */
  NSObject<KVPriorRetriever> *_priorRetriever;
  NSMutableDictionary *_policyOverrides;
}

@property (readonly, nonatomic) KVSpanMatchPolicy *fuzzyPolicy;
@property (readonly, nonatomic) KVSpanMatchPolicy *exactPolicy;
@property (readonly, nonatomic) KVSpanMatchPolicy *fuzzyWithAliasPolicy;
@property (readonly, nonatomic) KVSpanMatchPolicy *exactWithAliasPolicy;

/* instance methods */
- (id)initWithPriorRetriever:(id)retriever;
- (id)init;
- (void)addPolicyOverride:(id)override forItemType:(long long)type;
- (id)interpretSpanMatchResults:(id)results ofQuery:(id)query;
- (id)_sortCandidates:(id)candidates;
- (id)_groupKeyForFieldMatches:(id)matches itemType:(long long)type;
- (id)_filterRankAndThresholdCandidates:(id)candidates ofQuery:(id)query withPolicy:(id)policy;
- (float)_scoreSpanMatch:(id)match policy:(id)policy;
- (void)_addScoredMatch:(id)match toSortedArray:(id)array;
- (id)_applyRegionalSpanRankingToSortedGroupMatches:(id)matches regionalThresholdScalar:(float)scalar globalThresholdScalar:(float)scalar maximalScore:(float)score;
- (BOOL)_checkEligibilityOfSpanMatch:(id)match allowPartialMatch:(BOOL)match allowApproxMatch:(BOOL)match allowAliasMatch:(BOOL)match query:(id)query;
- (id)_rankerPolicyForGroupKey:(id)key;
@end

#endif /* KVSpanMatchResultInterpreter_h */
