//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.3.1.0.0
//
#ifndef KVItemBuilder_h
#define KVItemBuilder_h
@import Foundation;

@class NSString;
@protocol {vector<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field> *, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>>>="__value_"^v}};

@interface KVItemBuilder : NSObject {
  /* instance variables */
  struct FlatBufferBuilder { struct vector_downward { struct Allocator *allocator_; BOOL own_allocator_; unsigned long long initial_size_; unsigned long long buffer_minalign_; unsigned long long reserved_; char *buf_; char *cur_; char *scratch_; } buf_; unsigned int num_field_loc; unsigned short max_voffset_; BOOL nested; BOOL finished; unsigned long long minalign_; BOOL force_defaults_; BOOL dedup_vtables_; void *string_pool; } _fbb;
  struct vector<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>>> { void *__begin_; void *__end_; struct __compressed_pair<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field> *, std::allocator<apple::aiml::flatbuffers2::Offset<koa::vocabulary::Field>>> { void *__value_; } __end_cap_; } _fields;
  long long _itemType;
  NSString *_itemId;
}

/* class methods */
+ (void)initialize;
+ (id)buildFieldWithType:(long long)type label:(id)label value:(id)value error:(id *)error;

/* instance methods */
- (id)init;
- (void)_reset;
- (id)setItemType:(long long)type itemId:(id)id error:(id *)error;
- (id)addFieldWithType:(long long)type value:(id)value error:(id *)error;
- (id)addFieldWithType:(long long)type localeType:(long long)type value:(id)value error:(id *)error;
- (id)addFieldWithType:(long long)type label:(id)label value:(id)value error:(id *)error;
- (id)addFieldWithType:(long long)type localeType:(long long)type label:(id)label value:(id)value error:(id *)error;
- (id)_addFieldWithType:(long long)type localeType:(long long)type label:(id)label value:(id)value error:(id *)error;
- (id)buildBufferWithError:(id *)error;
- (id)buildItemWithError:(id *)error;
@end

#endif /* KVItemBuilder_h */
