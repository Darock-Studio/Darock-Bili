//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.3.1.0.0
//
#ifndef KVSkitInjector_h
#define KVSkitInjector_h
@import Foundation;

#include "KVSkitAccessProvider-Protocol.h"
#include "KVSkitReadAccess-Protocol.h"
#include "KVTokenizer.h"

@class NSString;
@protocol {Indexer="context"{ContextV2="pimpl"{shared_ptr<skit::internal::ContextImpl>="__ptr_"^{ContextImpl}"__cntrl_"^{__shared_weak_count}}}"index_writer"{IndexWriter="pimpl"{unique_ptr<skit::internal::IndexWriterImpl, std::default_delete<skit::internal::IndexWriterImpl>>="__ptr_"{__compressed_pair<skit::internal::IndexWriterImpl *, std::default_delete<skit::internal::IndexWriterImpl>>="__value_"^{IndexWriterImpl}}}}"index_locale"C"index_locale_id"{basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t>>="__r_"{__compressed_pair<std::basic_string<char16_t>::__rep, std::allocator<char16_t>>="__value_"{__rep=""(?="__l"{__long="__data_"^S"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[11S]"__padding_"[1C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"tokenizer"{shared_ptr<skitbridge::Tokenizer>="__ptr_"^{Tokenizer}"__cntrl_"^{__shared_weak_count}}"analyzer"{shared_ptr<skitbridge::Analyzer>="__ptr_"^{Analyzer}"__cntrl_"^{__shared_weak_count}}"alias"{Alias="pimpl"{shared_ptr<skit::internal::AliasImpl>="__ptr_"^{AliasImpl}"__cntrl_"^{__shared_weak_count}}}"trial_factors"C}, {Searcher="context"{ContextV2="pimpl"{shared_ptr<skit::internal::ContextImpl>="__ptr_"^{ContextImpl}"__cntrl_"^{__shared_weak_count}}}"index_reader"{IndexReader="pimpl"{shared_ptr<skit::internal::IndexReaderImpl>="__ptr_"^{IndexReaderImpl}"__cntrl_"^{__shared_weak_count}}}"alias"{Alias="pimpl"{shared_ptr<skit::internal::AliasImpl>="__ptr_"^{AliasImpl}"__cntrl_"^{__shared_weak_count}}}"trial_factors"C}, {vector<std::pair<skitbridge::SearchGroup, std::vector<std::byte>>, std::allocator<std::pair<skitbridge::SearchGroup, std::vector<std::byte>>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<skitbridge::SearchGroup, std::vector<std::byte>> *, std::allocator<std::pair<skitbridge::SearchGroup, std::vector<std::byte>>>>="__value_"^v}};

@interface KVSkitInjector : NSObject<KVSkitReadAccess, KVSkitAccessProvider> {
  /* instance variables */
  KVTokenizer *_tokenizer;
  struct Indexer { struct ContextV2 { struct shared_ptr<skit::internal::ContextImpl> { struct ContextImpl *__ptr_; struct __shared_weak_count *__cntrl_; } pimpl; } context; struct IndexWriter { struct unique_ptr<skit::internal::IndexWriterImpl, std::default_delete<skit::internal::IndexWriterImpl>> { struct __compressed_pair<skit::internal::IndexWriterImpl *, std::default_delete<skit::internal::IndexWriterImpl>> { struct IndexWriterImpl *__value_; } __ptr_; } pimpl; } index_writer; unsigned char index_locale; struct basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t>> { struct __compressed_pair<std::basic_string<char16_t>::__rep, std::allocator<char16_t>> { struct __rep { union { struct __long { unsigned short *__data_; unsigned long long __size_; unsigned int x :63 __cap_; unsigned int x :1 __is_long_; } __l; struct __short { unsigned short x[11] __data_; unsigned char x[1] __padding_; unsigned int x :7 __size_; unsigned int x :1 __is_long_; } __s; struct __raw { unsigned long long x[3] __words; } __r; } x0; } __value_; } __r_; } index_locale_id; struct shared_ptr<skitbridge::Tokenizer> { struct Tokenizer *__ptr_; struct __shared_weak_count *__cntrl_; } tokenizer; struct shared_ptr<skitbridge::Analyzer> { struct Analyzer *__ptr_; struct __shared_weak_count *__cntrl_; } analyzer; struct Alias { struct shared_ptr<skit::internal::AliasImpl> { struct AliasImpl *__ptr_; struct __shared_weak_count *__cntrl_; } pimpl; } alias; unsigned char trial_factors; } _indexer;
  struct Searcher { struct ContextV2 { struct shared_ptr<skit::internal::ContextImpl> { struct ContextImpl *__ptr_; struct __shared_weak_count *__cntrl_; } pimpl; } context; struct IndexReader { struct shared_ptr<skit::internal::IndexReaderImpl> { struct IndexReaderImpl *__ptr_; struct __shared_weak_count *__cntrl_; } pimpl; } index_reader; struct Alias { struct shared_ptr<skit::internal::AliasImpl> { struct AliasImpl *__ptr_; struct __shared_weak_count *__cntrl_; } pimpl; } alias; unsigned char trial_factors; } _searcher;
  struct vector<std::pair<skitbridge::SearchGroup, std::vector<std::byte>>, std::allocator<std::pair<skitbridge::SearchGroup, std::vector<std::byte>>>> { void *__begin_; void *__end_; struct __compressed_pair<std::pair<skitbridge::SearchGroup, std::vector<std::byte>> *, std::allocator<std::pair<skitbridge::SearchGroup, std::vector<std::byte>>>> { void *__value_; } __end_cap_; } _documents;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithItems:(id)items tokenizer:(id)tokenizer error:(id *)error;
- (id)init;
- (BOOL)_buildDocumentsFromItems:(id)items error:(id *)error;
- (id)indexLocale;
- (id)matchSpans:(id)spans error:(id *)error;
- (void)prewarm;
- (id)accessReadOnlySkitForUser:(id)user;
- (BOOL)supportsMultiUser;
- (BOOL)setItems:(id)items error:(id *)error;
@end

#endif /* KVSkitInjector_h */
