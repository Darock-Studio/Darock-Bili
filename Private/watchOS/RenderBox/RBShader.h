//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 5.1.16.0.0
//
#ifndef RBShader_h
#define RBShader_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "RBDecodable-Protocol.h"
#include "RBEncodable-Protocol.h"
#include "RBShaderLibrary.h"

@class NSString;
@protocol {Closure="function"{refcounted_ptr<const RB::CustomShader::Function>="_p"^{Function}}"args"{vector<RB::CustomShader::Value, 4UL, unsigned long>="_p"[96C]"_p"^{Value}"_size"Q"_capacity"Q}}, {objc_ptr<RBShaderLibrary *>="_p"@"RBShaderLibrary"};

@interface RBShader : NSObject<NSCopying, RBEncodable, RBDecodable> {
  /* instance variables */
  struct Closure { struct refcounted_ptr<const RB::CustomShader::Function> { struct Function *_p; } function; struct vector<RB::CustomShader::Value, 4UL, unsigned long> { unsigned char x[96] _p; struct Value *_p; unsigned long long _size; unsigned long long _capacity; } args; } _fn_args;
}

@property (readonly, nonatomic) RBShaderLibrary *library;
@property (readonly, copy, nonatomic) NSString *function;
@property (readonly, nonatomic) unsigned long long numberOfArguments;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)decodedObjectWithData:(id)data delegate:(id)delegate error:(id *)error;

/* instance methods */
- (id)initWithLibrary:(id)library function:(id)function;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (void)removeAllArguments;
- (void)setArgumentBytes:(const void *)bytes atIndex:(unsigned long long)index type:(unsigned int)type count:(unsigned long long)count flags:(unsigned int)flags;
- (void)setArgumentData:(id)data atIndex:(unsigned long long)index type:(unsigned int)type flags:(unsigned int)flags;
- (void)setArgumentColorSpace:(int)space atIndex:(unsigned long long)index;
- (struct { unsigned int x0; unsigned int x1; unsigned long long x2; void * x3; int x4; })argumentAtIndex:(unsigned long long)index;
- (id)encodedDataForDelegate:(id)delegate error:(id *)error;
@end

#endif /* RBShader_h */
