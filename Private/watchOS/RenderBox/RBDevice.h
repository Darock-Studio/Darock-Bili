//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 5.1.16.0.0
//
#ifndef RBDevice_h
#define RBDevice_h
@import Foundation;

#include "RBImageRenderer-Protocol.h"

@class NSString;
@protocol MTLCaptureScope, MTLDevice, OS_dispatch_queue, {atomic<unsigned int>="__a_"{__cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>>="__a_value"AI}}, {refcounted_ptr<RB::Device>="_p"^{Device}};

@interface RBDevice : NSObject<RBImageRenderer> {
  /* instance variables */
  struct atomic<unsigned int> { struct __cxx_atomic_impl<unsigned int, std::__cxx_atomic_base_impl<unsigned int>> { atomic  __a_value; unsigned int x0; } __a_; } _pending_collect;
}

@property (readonly, nonatomic) NSObject<MTLDevice> *device;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) NSObject<MTLCaptureScope> *captureScope;
@property unsigned long long GPUPriority;
@property unsigned long long backgroundGPUPriority;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)isSupported;
+ (id)sharedDevice:(id)device;
+ (id)allDevices;
+ (id)sharedDefaultDevice;
+ (unsigned long long)defaultGPUPriority;
+ (void)setDefaultGPUPriority:(unsigned long long)gpupriority;
+ (unsigned long long)defaultBackgroundGPUPriority;
+ (void)setDefaultBackgroundGPUPriority:(unsigned long long)gpupriority;
+ (BOOL)isRunningInBackground;
+ (void)setAllowsRenderingInBackground:(BOOL)background;
+ (BOOL)allowsRenderingInBackground;
+ (void)didEnterBackground:(id)background;
+ (void)willEnterForeground:(id)foreground;

/* instance methods */
- (void)dealloc;
- (id)initWithDevice:(id)device;
- (void)collectResources;
- (struct CGImage *)renderImageInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect options:(id)options renderer:(id /* block */)renderer;
- (void)renderImageInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect options:(id)options renderer:(id /* block */)renderer completionQueue:(id)queue handler:(id /* block */)handler;
- (id)pipelineDescriptions:(id)descriptions extraColorFormats:(id)formats;
@end

#endif /* RBDevice_h */
