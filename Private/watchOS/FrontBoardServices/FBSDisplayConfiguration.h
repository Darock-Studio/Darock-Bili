//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 867.10.0.0.0
//
#ifndef FBSDisplayConfiguration_h
#define FBSDisplayConfiguration_h
@import Foundation;

#include "BSDescriptionProviding-Protocol.h"
#include "BSXPCCoding-Protocol.h"
#include "FBSDisplayConfiguration.h"
#include "FBSDisplayIdentity.h"
#include "FBSDisplayMode.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class CADisplay, NSSet, NSString;

@interface FBSDisplayConfiguration : NSObject<BSDescriptionProviding, BSXPCCoding, NSCopying, NSSecureCoding> {
  /* instance variables */
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _nativeBounds;
  NSSet *_otherModes;
  CADisplay *_immutableCADisplay;
  CADisplay *_caDisplay;
  unsigned int _noEqual_seed;
  int _pid;
  BOOL _noEqual_comparable;
  FBSDisplayConfiguration *_noEqual_originatingConfiguration;
}

@property (readonly, nonatomic) unsigned int seed;
@property (readonly, nonatomic) long long tags;
@property (readonly, nonatomic) BOOL UIKitMainLike;
@property (readonly, copy, nonatomic) FBSDisplayConfiguration *originatingConfiguration;
@property (readonly, copy, nonatomic) FBSDisplayIdentity *identity;
@property (readonly, nonatomic) BOOL mainDisplay;
@property (readonly, nonatomic) BOOL external;
@property (readonly, nonatomic) BOOL carDisplay;
@property (readonly, nonatomic) BOOL carInstrumentsDisplay;
@property (readonly, copy, nonatomic) NSString *hardwareIdentifier;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, copy, nonatomic) NSString *deviceName;
@property (readonly, copy, nonatomic) FBSDisplayMode *currentMode;
@property (readonly, copy, nonatomic) FBSDisplayMode *preferredMode;
@property (readonly, copy, nonatomic) NSSet *availableModes;
@property (readonly, nonatomic) BOOL cloningSupported;
@property (readonly, nonatomic) BOOL overscanned;
@property (readonly, nonatomic) long long overscanCompensation;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } safeOverscanRatio;
@property (readonly, nonatomic) double nativeOrientation;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } pixelSize;
@property (readonly, nonatomic) double pointScale;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } renderingCenter;
@property (readonly, nonatomic) double refreshRate;
@property (readonly, nonatomic) long long colorGamut;
@property (readonly, nonatomic) double latency;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithCADisplay:(id)cadisplay;
- (id)initWithCADisplay:(id)cadisplay isMainDisplay:(BOOL)display;
- (id)_initWithImmutableDisplay:(id)display originalDisplay:(id)display assertIfInvalid:(BOOL)invalid;
- (id)_initWithIdentity:(id)identity hardwareIdentifier:(id)identifier name:(id)name deviceName:(id)name seed:(unsigned int)seed comparable:(BOOL)comparable tags:(long long)tags currentMode:(id)mode preferredMode:(id)mode otherModes:(id)modes cloningSupported:(BOOL)supported overscanned:(BOOL)overscanned overscanCompensation:(long long)compensation safeOverscanRatio:(struct CGSize { double x0; double x1; })ratio pixelSize:(struct CGSize { double x0; double x1; })size nativeBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds latency:(double)latency originatingConfiguration:(id)configuration validityCheck:(long long)check;
- (BOOL)isMainDisplay;
- (BOOL)isExternal;
- (BOOL)isCarDisplay;
- (BOOL)isCarInstrumentsDisplay;
- (long long)type;
- (id)uniqueIdentifier;
- (BOOL)expectsSecureRendering;
- (id)copyWithUniqueIdentifier:(id)identifier;
- (id)copyWithOverrideMode:(id)mode;
- (id)copyWithOverrideBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)copyWithOverrideMode:(id)mode pixelSize:(struct CGSize { double x0; double x1; })size nativeBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)_nameForDisplayType;
- (long long)_nativeRotation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_nativeBounds;
- (id)immutableCADisplay;
- (id)CADisplay;
- (id)laterConfiguration:(id)configuration;
- (BOOL)isMainRootDisplay;
- (id)copyForSecureRendering;
- (BOOL)isUIKitMainLike;
- (BOOL)isHiddenDisplay;
- (BOOL)wantsConnectionDebouncing;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)initWithXPCDictionary:(id)xpcdictionary;
- (void)encodeWithXPCDictionary:(id)xpcdictionary;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)descriptionWithMultilinePrefix:(id)prefix;
- (id)descriptionBuilderWithMultilinePrefix:(id)prefix;
- (double)scale;
- (id)uniqueID;
- (id)caDisplay;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })referenceBounds;
- (struct CGPoint { double x0; double x1; })nativeCenter;
- (BOOL)isConnected;
- (BOOL)supportsExtendedColor;
- (unsigned int)displayID;
- (double)orientation;
- (BOOL)isCloningSupported;
- (BOOL)isOverscanned;
@end

#endif /* FBSDisplayConfiguration_h */
