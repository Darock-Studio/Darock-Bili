//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 949.0.0.0.0
//
#ifndef NWKLocationForecast_h
#define NWKLocationForecast_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSDate, WFAirQualityConditions, WFLocation, WFNextHourPrecipitation, WFWeatherConditions;

@interface NWKLocationForecast : NSObject<NSCopying, NSSecureCoding>

@property (retain, nonatomic) WFLocation *location;
@property (retain, nonatomic) NSDate *now;
@property (readonly, nonatomic) WFWeatherConditions *currentConditions;
@property (readonly, nonatomic) WFAirQualityConditions *airQualityConditions;
@property (readonly, nonatomic) NSArray *hourlyConditions;
@property (readonly, nonatomic) NSArray *dailyConditions;
@property (readonly, nonatomic) WFNextHourPrecipitation *nextHourPrecipitation;
@property (readonly, nonatomic) NSArray *severeWeatherEvents;
@property (readonly, nonatomic) unsigned long long types;
@property (readonly, nonatomic) unsigned long long token;
@property (readonly, nonatomic) NSDate *lastUpdateDate;
@property (readonly, nonatomic) WFWeatherConditions *nowConditions;
@property (readonly, nonatomic) WFWeatherConditions *todayConditions;
@property (readonly, nonatomic) NSDate *startConditionsDate;
@property (readonly, nonatomic) NSDate *endConditionsDate;
@property (readonly, nonatomic) NSDate *expirationDate;

/* class methods */
+ (double)durationForConditions:(id)conditions ofType:(unsigned long long)type;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithLocation:(id)location token:(unsigned long long)token updatedAt:(id)at currentConditions:(id)conditions airQualityConditions:(id)conditions nextHourPrecipitation:(id)precipitation severeWeatherEvents:(id)events hourlyConditions:(id)conditions dailyConditions:(id)conditions;
- (id)forecastWithUpdatedLocation:(id)location;
- (BOOL)isEqual:(id)equal;
- (id)conditionsForDate:(id)date;
- (unsigned long long)conditionsTypeForConditions:(id)conditions;
- (void)enumerateConditionsUsingBlock:(id /* block */)block;
- (void)enumerateConditionsFrom:(id)from usingBlock:(id /* block */)block;
- (void)enumerateConditionsFrom:(id)from to:(id)to usingBlock:(id /* block */)block;
- (void)enumerateHourlyConditionsFrom:(id)from usingBlock:(id /* block */)block;
- (void)enumerateHourlyConditionsFrom:(id)from to:(id)to usingBlock:(id /* block */)block;
- (id)dailyConditionsForDate:(id)date;
- (id)hourlyConditionsForDate:(id)date;
- (unsigned long long)timeOfDayForDate:(id)date;
- (void)_appendDayDescriptionToFormatString:(id)string formatArguments:(id)arguments observationRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range currentConditionsCode:(unsigned long long)code currentConditionsDescription:(id)description currentTemperature:(id)temperature forecastedHigh:(id)high forecastedLow:(id)low;
- (void)_appendEarlyMorningDescriptionToFormatString:(id)string formatArguments:(id)arguments observationRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range currentConditionsDescription:(id)description currentTemperature:(id)temperature forecastedHigh:(id)high forecastedLow:(id)low;
- (void)_appendEveningDescriptionToFormatString:(id)string formatArguments:(id)arguments observationRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range currentConditionsCode:(unsigned long long)code currentConditionsDescription:(id)description currentTemperature:(id)temperature forecastedHigh:(id)high forecastedLow:(id)low;
- (void)_appendMorningDescriptionToFormatString:(id)string formatArguments:(id)arguments currentConditionsDescription:(id)description currentTemperature:(id)temperature forecastedHigh:(id)high;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_hourlyForecastRangeBetweenStartTimeHash:(unsigned long long)hash endTimeHash:(unsigned long long)hash;
- (unsigned long long)_mostFrequentConditionCodeInHourlyForecastRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (unsigned long long)_timeHashForDate:(id)date;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* NWKLocationForecast_h */
