//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 949.0.0.0.0
//
#ifndef NWKSelectedLocationWeatherMonitor_h
#define NWKSelectedLocationWeatherMonitor_h
@import Foundation;

#include "NWKForecastManager.h"
#include "NWKForecastManagerObservable-Protocol.h"
#include "NWKLocationForecast.h"
#include "NWKMonitor-Protocol.h"

@class NSHashTable, NSString, NSTimer, WFLocation;

@interface NWKSelectedLocationWeatherMonitor : NSObject<NWKForecastManagerObservable, NWKMonitor> {
  /* instance variables */
  int _notifyNanoWeatherForecastUpdatedToken;
  int _notifyNanoWeatherLocalLocationUpdatedToken;
}

@property BOOL waitingOnData;
@property (retain, nonatomic) NSHashTable *observers;
@property (nonatomic) unsigned long long forecastTypes;
@property (retain, nonatomic) WFLocation *selectedLocation;
@property (retain, nonatomic) NWKLocationForecast *selectedLocationForecast;
@property (retain, nonatomic) NSTimer *reconnectTimer;
@property (readonly, nonatomic) NWKForecastManager *forecastManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedMonitor;

/* instance methods */
- (id)init;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)_addNotifyObservers;
- (void)_invalidateReconnectTimer;
- (void)_notifyObserversOfUpdatedForecast:(id)forecast forLocation:(id)location;
- (void)_notifyObserver:(id)observer ofUpdatedForecast:(id)forecast forLocation:(id)location;
- (void)_recalculateForecastTypes;
- (void)_reconnectTimerFired;
- (void)_removeNotifyObservers;
- (void)_scheduleReconnectTimerIfNecessary;
- (void)manager:(id)manager receivedForecastConnectionInterruptForLocation:(id)location;
- (void)managerReceivedLocationConnectionInterrupt:(id)interrupt;
- (void)manager:(id)manager updatedDisplayName:(id)name forLocation:(id)location;
- (void)manager:(id)manager updatedLocationForecast:(id)forecast;
- (void)manager:(id)manager updatedSelectedLocationFrom:(id)from to:(id)to;
- (void)manager:(id)manager updatedStaticLocationsFrom:(id)from to:(id)to;
- (void)manager:(id)manager updatedTimeZone:(id)zone forLocation:(id)location;
- (void)pause;
- (void)resume;
- (BOOL)isWaitingOnData;
@end

#endif /* NWKSelectedLocationWeatherMonitor_h */
