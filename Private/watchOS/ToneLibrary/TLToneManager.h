//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 600.0.0.0.0
//
#ifndef TLToneManager_h
#define TLToneManager_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "TLAccessQueue.h"

@class NPSDomainAccessor, NSDictionary, NSString;

@interface TLToneManager : NSObject {
  /* instance variables */
  TLAccessQueue *_accessQueue;
  NSDictionary *_tonesByIdentifier;
  NSDictionary *_toneIdentifiersBySyncIdentifier;
  NSDictionary *_alertTonesByIdentifier;
  NSDictionary *_toneIdentifierAliasMap;
  NSObject<NSCopying> *_contentProtectionStateObserverToken;
  BOOL _cachedWatchPrefersSalientNotifications;
  BOOL _hasValidCachedWatchPrefersSalientNotifications;
  BOOL _shouldSkipNextWatchPrefersSalientNotificationsDidChangeNotification;
  NPSDomainAccessor *_transientNanoPreferencesDomainAccessor;
  BOOL _shouldUseServiceToAccessTonePreferences;
  NSDictionary *_cachedTonePreferences;
  BOOL _shouldIgnoreNextToneDidChangeNotification;
}

@property (readonly, nonatomic) NSString *_rootDirectory;
@property (readonly, nonatomic) NSString *_deviceITunesRingtoneDirectory;
@property (readonly, nonatomic) NSString *_deviceITunesRingtoneInformationPlist;
@property (readonly, nonatomic) NSString *_iTunesRingtoneDirectory;
@property (readonly, nonatomic) NSString *_iTunesRingtoneInformationPlist;
@property (readonly, nonatomic) NSString *_systemRingtoneDirectory;

/* class methods */
+ (id)sharedToneManager;
+ (id)_systemWideTonePreferenceKeyForAlertType:(long long)type;
+ (id)_defaultToneIdentifierForAlertType:(long long)type topic:(id)topic;
+ (id)_salientToneIdentifierForToneIdentifier:(id)identifier;
+ (id)_currentOverridePolicyPreferenceKeyForAlertType:(long long)type;
+ (BOOL)_ensureTCCAccessPreflightAndCheckForFileExistenceAtPath:(id)path;

/* instance methods */
- (long long)_currentToneWatchAlertPolicyForAlertType:(long long)type accountIdentifier:(id)identifier;
- (void)_setCurrentToneWatchAlertPolicy:(long long)policy forAlertType:(long long)type accountIdentifier:(id)identifier;
- (id)currentToneIdentifierForAlertType:(long long)type accountIdentifier:(id)identifier;
- (void)setCurrentToneIdentifier:(id)identifier forAlertType:(long long)type accountIdentifier:(id)identifier;
- (id)init;
- (id)initWithITunesRingtonePlistAtPath:(id)path;
- (void)dealloc;
- (BOOL)_loadITunesRingtoneInfoPlistAtPath:(id)path;
- (id)_tonesFromManifestPath:(id)path mediaDirectoryPath:(id)path;
- (void)_reloadTonesAfterExternalChange;
- (void)_reloadTones;
- (id)_toneWithIdentifier:(id)identifier;
- (id)_installedTones;
- (unsigned long long)_installedTonesSize;
- (id)_addToneToManifestAtPath:(id)path metadata:(id)metadata fileName:(id)name mediaDirectory:(id)directory;
- (id)_addToneEntries:(id)entries toManifestAtPath:(id)path mediaDirectory:(id)directory shouldSkipReload:(BOOL)reload;
- (BOOL)_removeToneWithIdentifier:(id)identifier;
- (BOOL)_removeToneWithIdentifier:(id)identifier orSyncIdentifier:(id)identifier;
- (BOOL)_removeToneFromManifestAtPath:(id)path fileName:(id)name;
- (BOOL)_removeTonesFromManifestAtPath:(id)path fileNames:(id)names shouldSkipReload:(BOOL)reload alreadyLockedManifest:(BOOL)manifest removedEntries:(id *)entries;
- (int)_lockManifestAtPath:(id)path;
- (BOOL)_removeAllTones;
- (id)_alarmWakeUpRingtoneDirectory;
- (id)_baseDirectoryForAlertToneSoundFiles;
- (id)_systemEmbeddedSoundDirectory;
- (id)_systemEmbeddedClassicSoundDirectory;
- (id)_systemEmbeddedModernSoundDirectory;
- (id)_systemSoundDirectory;
- (id)_systemWatchSoundDirectory;
- (void)_loadAlertToneInfo;
- (void)_loadToneIdentifierAliasMap;
- (id)_aliasForToneIdentifier:(id)identifier;
- (BOOL)_toneWithIdentifierIsDefaultRingtone:(id)ringtone;
- (BOOL)_toneWithIdentifierIsNonDefaultSystemRingtone:(id)ringtone;
- (BOOL)_toneWithIdentifierIsITunesRingtone:(id)ringtone;
- (BOOL)_toneWithIdentifierIsSystemAlertTone:(id)tone;
- (BOOL)_toneWithIdentifierIsAlarmWakeUp:(id)up;
- (BOOL)_toneWithIdentifierIsMediaPlaybackArchive:(id)archive;
- (id)_newServiceConnection;
- (id)_tonePreferencesFromService;
- (BOOL)_setToneIdentifierUsingService:(id)service keyedByTopic:(id)topic forPreferenceKey:(id)key;
- (id)currentToneIdentifierForAlertType:(long long)type;
- (void)setCurrentToneIdentifier:(id)identifier forAlertType:(long long)type;
- (id)_currentToneIdentifierForAlertType:(long long)type topic:(id)topic;
- (id)currentToneIdentifierForAlertType:(long long)type topic:(id)topic;
- (void)setCurrentToneIdentifier:(id)identifier forAlertType:(long long)type topic:(id)topic;
- (id)currentToneNameForAlertType:(long long)type;
- (unsigned int)currentToneSoundIDForAlertType:(long long)type;
- (unsigned int)currentToneSoundIDForAlertType:(long long)type topic:(id)topic;
- (id)defaultToneIdentifierForAlertType:(long long)type;
- (id)defaultToneIdentifierForAlertType:(long long)type topic:(id)topic;
- (id)defaultRingtoneIdentifier;
- (id)_defaultRingtoneName;
- (id)_defaultRingtonePath;
- (id)_defaultPreferablyNonSilentToneIdentifierForAlertType:(long long)type topic:(id)topic;
- (BOOL)hasSpecificDefaultToneIdentifierForAlertType:(long long)type topic:(id)topic;
- (id)_soundForToneIdentifier:(id)identifier;
- (id)filePathForToneIdentifier:(id)identifier;
- (id)_filePathForToneIdentifier:(id)identifier isValid:(BOOL *)valid;
- (id)_previewSoundForToneIdentifier:(id)identifier;
- (id)nameForToneIdentifier:(id)identifier;
- (id)_nameForToneIdentifier:(id)identifier isValid:(BOOL *)valid;
- (id)subtitleForToneIdentifier:(id)identifier;
- (id)_toneIdentifierForFileAtPath:(id)path isValid:(BOOL *)valid;
- (BOOL)_toneWithIdentifierIsValid:(id)valid;
- (BOOL)toneWithIdentifierIsValid:(id)valid;
- (void)importTone:(id)tone metadata:(id)metadata completionBlock:(id /* block */)block;
- (void)removeImportedToneWithIdentifier:(id)identifier;
- (id)_importPurchasedToneWithMetadata:(id)metadata fileName:(id)name;
- (BOOL)_transferPurchasedToITunes:(id)itunes;
- (BOOL)_wasAffectedByAccidentalToneDeletion;
- (id)_removeOrphanedPlistEntriesInManifestAtPath:(id)path mediaDirectory:(id)directory;
- (long long)_evaluateOrphanEntriesCleanupStatusForcingReevaluationIfPreviouslyDone:(BOOL)done returningFilePathsForFoundOrphans:(id *)orphans wasAffectedByAccidentalToneDeletion:(BOOL *)deletion;
- (long long)_removeOrphanedManifestEntriesReturningFilePathsForFoundOrphans:(id *)orphans;
- (void)_registerDidRequestResetSyncPostAccidentalToneDeletion;
- (id)_currentToneWatchAlertPolicyPreferenceKeyForAlertType:(long long)type topic:(id)topic;
- (long long)_currentToneWatchAlertPolicyForAlertType:(long long)type;
- (long long)_currentToneWatchAlertPolicyForAlertType:(long long)type topic:(id)topic;
- (long long)_currentToneWatchAlertPolicyForAlertType:(long long)type topic:(id)topic didFindPersistedWatchAlertPolicy:(BOOL *)policy;
- (void)_setCurrentToneWatchAlertPolicy:(long long)policy forAlertType:(long long)type;
- (void)_setCurrentToneWatchAlertPolicy:(long long)policy forAlertType:(long long)type topic:(id)topic;
- (BOOL)_watchPrefersSalientNotifications;
- (void)_setWatchPrefersSalientNotifications:(BOOL)notifications;
- (void)_handleWatchPrefersSalientNotificationDidChange;
- (long long)_currentOverridePolicyForAlertType:(long long)type;
- (long long)_currentOverridePolicyForAlertType:(long long)type didFindAlertOverridePolicy:(BOOL *)policy;
- (void)_setCurrentOverridePolicy:(long long)policy forAlertType:(long long)type;
- (id)_toneIdentifierWithUnderlyingPlaybackArchive:(id)archive;
- (id)_underlyingPlaybackArchiveForToneIdentifier:(id)identifier;
- (BOOL)_hasUnderlyingPlaybackArchiveForToneIdentifier:(id)identifier;
- (void)_performBlockInAccessQueue:(id /* block */)queue;
- (id)_fileNameFromToneIdentifier:(id)identifier withPrefix:(id)prefix;
- (id)_localizedNameOfToneWithIdentifier:(id)identifier;
- (BOOL)_ensureDirectoryExistsAtPath:(id)path;
- (void)_didSetTonePreferenceSuccessfullyWithKey:(id)key inDomain:(id)domain usingPreferencesOfKind:(unsigned long long)kind;
- (void)_handleTonePreferencesChangedNotificationForPreferencesKinds:(unsigned long long)kinds;
- (void)_handleDeviceRingtonesChangedNotification;
- (void)_handleProtectionContentUnlockedEvent;
@end

#endif /* TLToneManager_h */
