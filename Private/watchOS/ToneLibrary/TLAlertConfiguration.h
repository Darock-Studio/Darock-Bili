//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 600.0.0.0.0
//
#ifndef TLAlertConfiguration_h
#define TLAlertConfiguration_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDictionary, NSString, NSURL;

@interface TLAlertConfiguration : NSObject<NSCopying, NSSecureCoding> {
  /* instance variables */
  BOOL _isFrozen;
  BOOL _hasCustomRepeatingFlag;
  BOOL _hasCustomAudioVolume;
  double _audioPlaybackInitiationDelay;
  double _audioVolumeRampingDuration;
}

@property (readonly, nonatomic) BOOL _hasCustomAudioVolume;
@property (nonatomic) double _audioPlaybackInitiationDelay;
@property (nonatomic) double _audioVolumeRampingDuration;
@property (readonly, nonatomic) long long type;
@property (copy, nonatomic) NSString *topic;
@property (copy, nonatomic) NSString *toneIdentifier;
@property (copy, nonatomic) NSString *vibrationIdentifier;
@property (copy, nonatomic) NSURL *externalToneFileURL;
@property (nonatomic) unsigned long long externalToneMediaLibraryItemIdentifier;
@property (copy, nonatomic) NSDictionary *externalVibrationPattern;
@property (copy, nonatomic) NSURL *externalVibrationPatternFileURL;
@property (copy, nonatomic) NSString *audioCategory;
@property (nonatomic) float audioVolume;
@property (nonatomic) BOOL forPreview;
@property (nonatomic) double maximumDuration;
@property (nonatomic) BOOL shouldRepeat;
@property (nonatomic) BOOL shouldIgnoreRingerSwitch;
@property (nonatomic) BOOL shouldForcePlayingAtUserSelectedAudioVolume;
@property (nonatomic) BOOL shouldIgnoreAccessibilityDisabledVibrationSetting;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithType:(long long)type;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)_freeze;
- (void)_throwForFrozenInstance;
- (void)_setAudioPlaybackInitiationDelay:(double)delay;
- (void)_setAudioVolumeRampingDuration:(double)duration;
- (BOOL)isForPreview;
@end

#endif /* TLAlertConfiguration_h */
