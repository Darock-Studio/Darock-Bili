//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 600.0.0.0.0
//
#ifndef TLAlertQueuePlayerController_h
#define TLAlertQueuePlayerController_h
@import Foundation;

#include "TLAlertPlaybackBackEndController-Protocol.h"
#include "TLAlertQueuePlayerStateDescriptor.h"
#include "TLAudioQueue.h"

@class AVAsset, AVAudioSession, AVQueuePlayer, NSString;

@interface TLAlertQueuePlayerController : NSObject<TLAlertPlaybackBackEndController> {
  /* instance variables */
  TLAudioQueue *_audioQueue;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  TLAlertQueuePlayerStateDescriptor *_stateDescriptor;
  NSString *_playingToneIdentifier;
  AVAsset *_toneAssetForPendingPlayingAlert;
  BOOL _hasToneAssetForPendingPlayingAlert;
  BOOL _isStoppingPlayingAlert;
  BOOL _isWaitingToCompleteReloadPlaybackRequest;
  BOOL _isObservingQueuePlayer;
  AVQueuePlayer *_queuePlayer;
  BOOL _isAudioEnvironmentSetup;
  BOOL _isUsingAuxiliaryAudioSession;
  AVAudioSession *_audioSession;
  NSString *_previousAudioCategory;
  unsigned long long _previousAudioCategoryOptions;
  NSString *_previousAudioMode;
  BOOL _isIgnoringAccessibilityDisabledVibrationSetting;
  BOOL _isAudioSessionActive;
  unsigned long long _audioSessionDeactivationPreventionRequestsCount;
  BOOL _isObservingAudioSessionInterruptionNotification;
  struct { BOOL isIncomingCallActive; BOOL usesReceiverRoute; } _externalEnvironmentValues;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_propertyKeysOfInterestForToneAssets;
+ (id)_clientNameForAlert:(id)alert;
+ (long long)_clientPriorityForAlert:(id)alert;
+ (BOOL)_shouldEnsureActiveAudioSessionWhenStartingPlaybackForAlert:(id)alert;
+ (id)_audioCategoryForAlert:(id)alert externalEnvironmentValues:(struct { BOOL x0; BOOL x1; })values;
+ (unsigned long long)_audioCategoryOptionsForAlert:(id)alert externalEnvironmentValues:(struct { BOOL x0; BOOL x1; })values;
+ (id)_audioModeForAlert:(id)alert audioCategory:(id)category;
+ (id)_mediaExperienceAudioCategoryForAudioSessionCategory:(id)category;
+ (BOOL)_shouldBypassRingerSwitchPolicyForAlert:(id)alert;
+ (BOOL)_shouldUseAuxiliaryAudioSessionForAlert:(id)alert;
+ (BOOL)_shouldHandleAudioSessionActivationForAlert:(id)alert;
+ (BOOL)_shouldVibrateForAlert:(id)alert;
+ (BOOL)_shouldRepeatVibrationForAlert:(id)alert externalEnvironmentValues:(struct { BOOL x0; BOOL x1; })values;
+ (long long)_audioVolumeApplicationPolicyForAlert:(id)alert externalEnvironmentValues:(struct { BOOL x0; BOOL x1; })values;
+ (double)_audioPlaybackInitiationDelayForAlert:(id)alert externalEnvironmentValues:(struct { BOOL x0; BOOL x1; })values;
+ (double)_audioVolumeRampingDurationForAlert:(id)alert externalEnvironmentValues:(struct { BOOL x0; BOOL x1; })values toneAssetDuration:(double)duration;
+ (BOOL)_shouldApplyStandardDelayAndAudioVolumeRampForAlert:(id)alert externalEnvironmentValues:(struct { BOOL x0; BOOL x1; })values;
+ (struct { BOOL x0; BOOL x1; })_externalEnvironmentValuesForAlert:(id)alert;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)playAlert:(id)alert withCompletionHandler:(id /* block */)handler;
- (BOOL)stopPlayingAlerts:(id)alerts withOptions:(id)options playbackCompletionType:(long long)type;
- (void)updateAudioVolumeDynamicallyForAlert:(id)alert toValue:(float)value;
- (void)handleActivationAssertionStatusChangeForAlert:(id)alert updatedStatus:(BOOL)status;
- (void)_playAlertForStateDescriptor:(id)descriptor previousStateDescriptor:(id)descriptor;
- (void)_stopPlayingAlertForStateDescriptor:(id)descriptor withOptions:(id)options playbackCompletionType:(long long)type;
- (void)_handleActivationAssertionStatusChangeForAlert:(id)alert updatedStatus:(BOOL)status previousStateDescriptor:(id)descriptor updatedStateDescriptor:(id)descriptor;
- (BOOL)_canPlayToneAsset:(id)asset;
- (void)_reloadPlaybackForStateDescriptor:(id)descriptor withToneIdentifier:(id)identifier;
- (void)_startPlaybackForStateDescriptor:(id)descriptor usingAssetWithLoadedProperties:(id)properties shouldConfirmAlertStillPlaying:(BOOL)playing;
- (void)_startPlaybackForStateDescriptor:(id)descriptor usingConfirmedPlayableAsset:(id)asset;
- (void)_startPlaybackForStateDescriptor:(id)descriptor usingConfirmedPlayableAsset:(id)asset hasAlreadyDetectedUserAttention:(BOOL)attention;
- (void)_initiateAudioPlaybackForStateDescriptor:(id)descriptor audioVolumeRampingDuration:(double)duration;
- (void)_performDelayedAudioPlaybackInitiationForStateDescriptor:(id)descriptor audioVolumeRampingDuration:(double)duration;
- (void)_stopPlaybackForStateDescriptor:(id)descriptor;
- (void)_stopPlaybackForStateDescriptor:(id)descriptor withOptions:(id)options playerWasAlreadyPausedExternally:(BOOL)externally;
- (void)_willBeginPlayingAlertForStateDescriptor:(id)descriptor;
- (void)_didEndPlayingAlertForStateDescriptor:(id)descriptor;
- (void)_prepareAudioEnvironmentForStateDescriptor:(id)descriptor;
- (void)_restoreAudioEnvironmentForStateDescriptor:(id)descriptor;
- (void)_resetClientPriorityForStateDescriptor:(id)descriptor;
- (void)_resetFlagsForSwitchingAuxiliaryAudioSession;
- (void)_applyAudioVolume:(float)volume forAlert:(id)alert;
- (void)_createQueuePlayerIfNecessaryForStateDescriptor:(id)descriptor;
- (void)_destroyQueuePlayerForStateDescriptor:(id)descriptor;
- (void)_startObservingQueuePlayer;
- (void)_stopObservingQueuePlayer;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)_queuePlayer:(id)player currentItemWasUpdatedFromValue:(id)value;
- (void)_queuePlayer:(id)player currentItemStatusWasUpdatedToValue:(long long)value;
- (float)_audioVolumeForAlert:(id)alert audioCategory:(id)category;
- (void)_activateAudioSessionIfNeededForStateDescriptor:(id)descriptor;
- (void)_deactivateAudioSessionIfNeededForStateDescriptor:(id)descriptor;
- (void)_startObservingAudioSessionInterruptionNotificationsForStateDescriptor:(id)descriptor;
- (void)_stopObservingAudioSessionInterruptionNotificationsForStateDescriptor:(id)descriptor;
- (void)_handleAudioSessionInterruptionNotification:(id)notification;
- (void)_handleAudioSessionInterruptionOfType:(unsigned long long)type withOptions:(unsigned long long)options;
- (BOOL)_isPreventingAudioSessionDeactivation;
- (void)_beginPreventingAudioSessionDeactivation;
- (void)_endPreventingAudioSessionDeactivationForStateDescriptor:(id)descriptor;
- (id)_fallbackToneIdentifierForStateDescriptor:(id)descriptor;
@end

#endif /* TLAlertQueuePlayerController_h */
