//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDMMCSEngineContext_h
#define CKDMMCSEngineContext_h
@import Foundation;

#include "CKDMMCS.h"

@class BOOL *, NSMutableIndexSet, NSString;
@protocol OS_dispatch_queue;

@interface CKDMMCSEngineContext : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_mmcsQueue;
  atomic unsigned long long _serializedThread;
}

@property (nonatomic) long long refCount;
@property (nonatomic) long long state;
@property (weak, nonatomic) CKDMMCS *MMCS;
@property (nonatomic) struct _mmcs_engine * MMCSEngine;
@property (retain, nonatomic) NSString *applicationBundleID;
@property (retain, nonatomic) NSString *path;
@property (nonatomic) unsigned int maxChunkCountForSection;
@property (retain, nonatomic) NSMutableIndexSet *inMemoryItemsIDs;

/* class methods */
+ (id)_appID;
+ (id)sharedContextsQueue;
+ (id)sharedContextsByPath;
+ (BOOL)hasCachedCKDMMCSEngineContextForPath:(id)path;
+ (id)setupMMCSEngineWithApplicationBundleID:(id)id path:(id)path wasCached:(BOOL *)cached error:(id *)error;
+ (BOOL)tearDownMMCSEngineWithContext:(id)context;

/* instance methods */
- (id)initWithApplicationBundleID:(id)id path:(id)path;
- (void)dealloc;
- (id)CKPropertiesDescription;
- (id)description;
- (long long)incRefCount;
- (long long)decRefCount;
- (BOOL)_setupMMCSEngineWithError:(id *)error;
- (BOOL)_setupMMCSEngineWithRetryCount:(unsigned long long)count error:(id *)error;
- (void)_tearDownMMCSEngine;
- (void)cancelRequestWithContext:(void *)context;
- (void)MMCSSerializeSyncRecursive:(id /* block */)recursive;
- (void)MMCSSerializeAsyncRecursive:(id /* block */)recursive;
- (void)MMCSRunSerialized:(id /* block */)serialized;
- (void)assertMMCSSerialized;
- (unsigned long long)nextAvailableItemID;
- (void)stopTrackingItemID:(unsigned long long)id;
@end

#endif /* CKDMMCSEngineContext_h */
