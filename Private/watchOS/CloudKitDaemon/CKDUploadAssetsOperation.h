//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDUploadAssetsOperation_h
#define CKDUploadAssetsOperation_h
@import Foundation;

#include "CKDDatabaseOperation.h"
#include "CKDAssetRequestPlanner.h"
#include "CKDCancelTokenGroup.h"

@class NSArray, NSDictionary, NSMapTable, NSMutableArray;
@protocol OS_dispatch_queue;

@interface CKDUploadAssetsOperation : CKDDatabaseOperation

@property (@dynamic, nonatomic) unsigned long long state;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSArray *assetsToUpload;
@property (retain, nonatomic) NSMapTable *uploadTasksByPackages;
@property (retain, nonatomic) NSMutableArray *packageManifests;
@property (retain, nonatomic) NSMutableArray *openedPackages;
@property (retain, nonatomic) CKDCancelTokenGroup *cancelTokens;
@property (nonatomic) unsigned long long maxPackageUploadsPerBatch;
@property (readonly, nonatomic) CKDAssetRequestPlanner *assetRequestPlanner;
@property (retain, nonatomic) NSDictionary *assetUUIDToExpectedProperties;
@property (retain, nonatomic) NSDictionary *packageUUIDToExpectedProperties;
@property (nonatomic) BOOL temporary;
@property (copy, nonatomic) id /* block */ uploadPreparationBlock;
@property (copy, nonatomic) id /* block */ uploadProgressBlock;
@property (copy, nonatomic) id /* block */ uploadCompletionBlock;
@property (nonatomic) BOOL atomic;
@property (nonatomic) BOOL shouldCloneFileInAssetCache;

/* class methods */
+ (id)nameForState:(unsigned long long)state;
+ (long long)isPredominatelyDownload;

/* instance methods */
- (id)initWithOperationInfo:(id)info container:(id)container;
- (int)operationType;
- (id)CKStatusReportLogGroups;
- (BOOL)makeStateTransition;
- (BOOL)_openPackage:(id)package;
- (void)_closePackage:(id)package;
- (void)_closeAllPackages;
- (void)_didPrepareAsset:(id)asset;
- (void)_didMakeProgressForAsset:(id)asset progress:(double)progress;
- (void)_didUploadAsset:(id)asset error:(id)error;
- (BOOL)_planSectionsForPackage:(id)package error:(id *)error;
- (void)_didGetChunkKeysForAssetBatch:(id)batch error:(id)error;
- (void)_didPutChunkKeysForAssetBatch:(id)batch error:(id)error;
- (void)_didPrepareAssetBatch:(id)batch error:(id)error;
- (BOOL)_fetchConfiguration;
- (BOOL)_prepareForUpload;
- (void)_failAllItemsInAssetBatch:(id)batch error:(id)error;
- (BOOL)_didFetchUploadTokensForAssetTokenRequest:(id)request error:(id)error newError:(id *)error;
- (BOOL)_fetchUploadTokens;
- (void)_didUploadMMCSSectionItem:(id)item task:(id)task error:(id)error;
- (void)_didUploadMMCSSectionItems:(id)items task:(id)task error:(id)error;
- (void)_didMakeProgressForMMCSSectionItem:(id)item task:(id)task;
- (void)_uploadPackageSection:(id)section task:(id)task completionBlock:(id /* block */)block;
- (void)_uploadPackageSectionsWithEnumerator:(id)enumerator task:(id)task completionBlock:(id /* block */)block;
- (void)_uploadPackageSectionsWithTask:(id)task completionBlock:(id /* block */)block;
- (void)_uploadPackageSectionsWithPendingTasks:(id)tasks uploadingTasks:(id)tasks completedTasks:(id)tasks;
- (void)_didUploadMMCSItem:(id)mmcsitem error:(id)error;
- (void)_collectMetricsFromMMCSOperationMetrics:(id)metrics;
- (void)_collectMetricsFromCompletedItemGroup:(id)group;
- (void)_collectMetricsFromCompletedItemGroupSet:(id)set;
- (void)_didUploadMMCSItems:(id)mmcsitems error:(id)error;
- (void)_didMakeProgressForMMCSItem:(id)mmcsitem;
- (void)_didUploadPackageWithTask:(id)task;
- (void)_didUploadClonedPackageWithTask:(id)task;
- (BOOL)_upload;
- (void)_removePackageManifests;
- (void)cancel;
- (void)finishWithError:(id)error;
- (void)_finishOnCallbackQueueWithError:(id)error;
- (void)main;
- (BOOL)supportsClearAssetEncryption;
@end

#endif /* CKDUploadAssetsOperation_h */
