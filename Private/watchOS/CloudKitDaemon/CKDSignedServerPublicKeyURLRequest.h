//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDSignedServerPublicKeyURLRequest_h
#define CKDSignedServerPublicKeyURLRequest_h
@import Foundation;

#include "CKDURLRequest.h"

@class CKPublicKey, NSDate, NSURL;

@interface CKDSignedServerPublicKeyURLRequest : CKDURLRequest

@property (readonly, nonatomic) NSURL *plistURL;
@property (readonly, nonatomic) struct __SecPolicy * certificateTrustPolicy;
@property (retain) CKPublicKey *verifiedPublicKey;
@property (nonatomic) BOOL requiresProtectionSource;
@property (nonatomic) BOOL verifyFullIntegers;
@property (retain, nonatomic) NSDate *expirationDateOverride;

/* class methods */
+ (BOOL)serverResponseIsComplete:(id)complete requireProtectionSource:(BOOL)source;
+ (id)certificateListServerPlist:(id)plist;
+ (id)nearestExpirationInCertificateList:(id)list;
+ (struct __SecTrust *)createTrustEvalFromCertificateList:(id)list verifiedWithPolicy:(struct __SecPolicy *)policy;
+ (BOOL)verifyInteger:(long long)integer withSignature:(id)signature usingKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __SecKeyDescriptor * x1; void * x2; } *)key verifyFullInteger:(BOOL)integer;
+ (BOOL)verifyData:(id)data withSignature:(id)signature usingKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __SecKeyDescriptor * x1; void * x2; } *)key;

/* instance methods */
- (id)initWithOperation:(id)operation plistURL:(id)url verifyWithPolicy:(struct __SecPolicy *)policy;
- (void)fillOutEquivalencyPropertiesBuilder:(id)builder;
- (void)dealloc;
- (BOOL)requiresConfiguration;
- (BOOL)requiresDeviceID;
- (BOOL)requiresTokenRegistration;
- (BOOL)allowsAnonymousAccount;
- (long long)serverType;
- (long long)partitionType;
- (id)httpMethod;
- (BOOL)hasRequestBody;
- (id)url;
- (void)requestDidParsePlistObject:(id)object;
- (BOOL)canVerifySignedPlistValues:(id)values withKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __SecKeyDescriptor * x1; void * x2; } *)key;
@end

#endif /* CKDSignedServerPublicKeyURLRequest_h */
