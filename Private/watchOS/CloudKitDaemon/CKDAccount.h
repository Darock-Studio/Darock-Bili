//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDAccount_h
#define CKDAccount_h
@import Foundation;

#include "CKDBackingAccount.h"

@class NSPersonNameComponents, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface CKDAccount : NSObject

@property (readonly, nonatomic) CKDBackingAccount *backingAccount;
@property (nonatomic) BOOL haveWarnedAboutServerPreferredPushEnvironment;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *authTokenQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *authTokenCallbackQueue;
@property (copy, nonatomic) NSString *lastFailediCloudAuthToken;
@property (readonly) NSPersonNameComponents *fullName;
@property (readonly) NSString *primaryEmail;
@property (readonly) NSString *username;
@property (readonly) NSString *formattedUsername;
@property (readonly) NSString *personaIdentifier;
@property (readonly) NSString *dsid;
@property (readonly) NSString *altDSID;
@property (readonly) BOOL isPrimaryAccount;
@property (readonly) NSString *sharingURLHostname;
@property (readonly) NSString *displayedHostname;
@property (readonly) long long accountType;
@property (readonly) NSString *accountID;
@property (readonly) BOOL isCarryAccount;
@property (readonly) BOOL isPrimaryEmailVerified;
@property (readonly) NSURL *privateCloudDBURL;
@property (readonly) NSURL *privateShareServiceURL;
@property (readonly) NSURL *privateDeviceServiceURL;
@property (readonly) NSURL *privateCodeServiceURL;
@property (readonly) NSURL *privateMetricsServiceURL;
@property (readonly, nonatomic) NSString *serverPreferredPushEnvironment;
@property (readonly, nonatomic) BOOL isValidTestAccount;

/* class methods */
+ (id)globalAuthTokenQueue;

/* instance methods */
- (id)initInternal;
- (id)initPrimaryAccount;
- (id)initAnonymousAccount;
- (id)initWithAccountID:(id)id;
- (id)initWithAltDSID:(id)dsid;
- (id)initExplicitCredentialsAccountWithAccountOverrideInfo:(id)info;
- (id)initMockAccountWithTestAccount:(id)account testDevice:(id)device;
- (BOOL)_userCloudDBURLisInCarryPartition;
- (id)description;
- (BOOL)isDataclassEnabled:(id)enabled;
- (BOOL)isDataclassEnabledForCellular:(id)cellular;
- (void)updateAccountPropertiesAndSaveAccountWithCompletionHandler:(id /* block */)handler;
- (void)_lockedRenewTokenWithReason:(id)reason shouldForce:(BOOL)force container:(id)container tokenFetchBlock:(id /* block */)block completionHandler:(id /* block */)handler;
- (void)renewCloudKitAuthTokenWithReason:(id)reason shouldForce:(BOOL)force container:(id)container failedToken:(id)token completionHandler:(id /* block */)handler;
- (id)cloudKitAuthTokenWithContainer:(id)container error:(id *)error;
- (void)cloudKitAuthTokenWithContainer:(id)container completionHandler:(id /* block */)handler;
- (id)_lockedCloudKitAuthTokenWithContainer:(id)container error:(id *)error;
- (void)renewiCloudAuthTokenWithReason:(id)reason shouldForce:(BOOL)force container:(id)container failedToken:(id)token completionHandler:(id /* block */)handler;
- (id)iCloudAuthTokenWithContainer:(id)container error:(id *)error;
- (void)iCloudAuthTokenWithContainer:(id)container completionHandler:(id /* block */)handler;
- (id)_lockediCloudAuthTokenWithContainer:(id)container error:(id *)error;
- (void)validateVettingToken:(id)token vettingEmail:(id)email vettingPhone:(id)phone container:(id)container completionHandler:(id /* block */)handler;
- (long long)lastKnownDeviceCount;
@end

#endif /* CKDAccount_h */
