//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDSPIContainer_h
#define CKDSPIContainer_h
@import Foundation;

#include "CKDContainer.h"
#include "CKXPCContainerScopedDaemonSPI-Protocol.h"

@interface CKDSPIContainer : CKDContainer<CKXPCContainerScopedDaemonSPI>
/* instance methods */
- (void)frameworkCachesDirectoryWithCompletionHandler:(id /* block */)handler;
- (void)performFetchRecordVersionsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performFetchArchivedRecordsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performArchiveRecordsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performPublishAssetsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performRepairAssetsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performMarkAssetBrokenOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performModifyWebSharingOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)getNewWebSharingIdentityWithCompletionHandler:(id /* block */)handler;
- (void)getNewWebSharingIdentityDataWithCompletionHandler:(id /* block */)handler;
- (void)performSerializeRecordModificationsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performDeserializeRecordModificationsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performModifyRecordAccessOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performCompleteParticipantVettingOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performFetchShareParticipantKeyOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)decryptPersonalInfoOnShare:(id)share completionHandler:(id /* block */)handler;
- (void)performInitiateParticipantVettingOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performFetchUserQuotaOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performFetchMergeableDeltasOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performFetchMergeableDeltaMetadataOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performReplaceMergeableDeltasOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performUploadMergeableDeltasOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performFetchWhitelistedBundleIDsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)performFetchRegisteredBundleIDsOperation:(id)operation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(id /* block */)handler;
- (void)serverEnvironmentWithCompletionHandler:(id /* block */)handler;
- (void)currentDeviceIDWithCompletionHandler:(id /* block */)handler;
- (void)currentUserBoundaryKeyWithCompletionHandler:(id /* block */)handler;
- (void)performAggregateZonePCSOperation:(id)pcsoperation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)countAssetCacheItemsWithDatabaseScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)clearAssetCacheWithDatabaseScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)showAssetCacheWithDatabaseScope:(long long)scope;
- (void)clearRecordCacheWithDatabaseScope:(long long)scope;
- (void)clearAuthTokensWithRecordID:(id)id databaseScope:(long long)scope;
- (void)clearCachesWithOptions:(unsigned long long)options databaseScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)clearCachesForRecordWithRecordID:(id)id databaseScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)clearCachesForZoneWithZoneID:(id)id databaseScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)fetchPCSFromCacheForZoneWithZoneID:(id)id databaseScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)fetchPCSFromCacheForShareWithRecordID:(id)id databaseScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)fetchPCSFromCacheForRecordWithRecordID:(id)id databaseScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)clearInvalidatedPCSCacheEntriesIfNeeded;
- (void)getOutstandingOperationCountWithCompletionHandler:(id /* block */)handler;
- (void)dropDetachedContainersWithCompletionHandler:(id /* block */)handler;
- (void)setApplicationPermission:(unsigned long long)permission enabled:(BOOL)enabled completionHandler:(id /* block */)handler;
- (void)resetAllApplicationPermissionsWithCompletionHandler:(id /* block */)handler;
- (void)statusGroupsForApplicationPermission:(unsigned long long)permission completionHandler:(id /* block */)handler;
- (void)clearContainerFromMetadataCache;
- (void)clearPILSCacheForLookupInfos:(id)infos;
- (void)representativeDataclassEnabledWithCompletionHandler:(id /* block */)handler;
- (void)getPCSDiagnosticsForZonesWithCompletionHandler:(id /* block */)handler;
- (void)getRecordPCSDiagnosticsForZonesWithCompletionHandler:(id /* block */)handler;
- (void)performRepairZonePCSOperation:(id)pcsoperation clientOperationCallbackProxy:(id)proxy withBlock:(id /* block */)block;
- (void)tossConfigWithCompletionHandler:(id /* block */)handler;
- (void)lastKnownDeviceCountWithCompletionHandler:(id /* block */)handler;
- (void)setFakeError:(id)error forNextRequestOfClassName:(id)name;
- (void)setFakeResponseOperationResult:(id)result forNextRequestOfClassName:(id)name forItemID:(id)id withLifetime:(int)lifetime;
@end

#endif /* CKDSPIContainer_h */
