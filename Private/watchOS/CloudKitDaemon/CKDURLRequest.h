//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDURLRequest_h
#define CKDURLRequest_h
@import Foundation;

#include "C2RequestDelegate-Protocol.h"
#include "CKDContainer.h"
#include "CKDOperation.h"
#include "CKDOperationMetrics.h"
#include "CKDProtobufStreamWriter.h"
#include "CKDProtocolTranslator.h"
#include "CKDResponseBodyParser.h"
#include "CKDZoneGatekeeperWaiter-Protocol.h"
#include "CKRoughlyEquivalent-Protocol.h"

@class C2RequestOptions, CKRoughlyEquivalentProperties, CKSignpost, CKTapToRadarRequest, CKTestRequestProperties, NSArray, NSData, NSDate, NSDictionary, NSError, NSHTTPURLResponse, NSInputStream, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSURL, NSURLRequest, NSURLSession, NSURLSessionDataTask;
@protocol C2NetworkingDelegate, OS_dispatch_queue, OS_os_activity, OS_voucher;

@interface CKDURLRequest : NSObject<C2RequestDelegate, CKDZoneGatekeeperWaiter, CKRoughlyEquivalent> {
  /* instance variables */
  BOOL _didSendRequest;
  BOOL _didFinishLoading;
  BOOL _finished;
  BOOL _didRetrySignature;
  NSData *_fakeResponseData;
  BOOL _haveParsedFakeResponseData;
  NSObject<OS_os_activity> *_osActivity;
  NSObject<OS_os_activity> *_transmissionActivity;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *lifecycleQueue;
@property (retain) NSURLSessionDataTask *urlSessionTask;
@property (retain) C2RequestOptions *requestOptions;
@property (retain, nonatomic) NSObject<C2NetworkingDelegate> *c2NetworkingDelegate;
@property (retain) NSURLRequest *request;
@property (retain) NSHTTPURLResponse *response;
@property (retain) NSError *error;
@property (retain) NSURLSession *urlSession;
@property (retain, nonatomic) NSMutableSet *responseObjectUUIDs;
@property (copy, nonatomic) NSString *deviceID;
@property (nonatomic) unsigned long long numDownloadedElements;
@property (nonatomic) BOOL didRetryAuth;
@property (retain, nonatomic) NSError *lastRetryAuthError;
@property BOOL cancelled;
@property (nonatomic) BOOL haveCachedServerType;
@property (nonatomic) BOOL haveCachedPartitionType;
@property (nonatomic) long long cachedServerType;
@property (nonatomic) long long cachedPartitionType;
@property (retain, nonatomic) CKDProtocolTranslator *translator;
@property (retain) NSDate *dateRequestWentOut;
@property (retain, nonatomic) CKDOperationMetrics *metrics;
@property (retain, nonatomic) NSDictionary *timingData;
@property (retain, nonatomic) NSObject<OS_voucher> *voucher;
@property (retain, nonatomic) NSString *cloudKitAuthToken;
@property (retain, nonatomic) NSString *iCloudAuthToken;
@property (nonatomic) BOOL didReceiveResponseBodyData;
@property (copy, nonatomic) NSString *serverProvidedAutoBugCaptureReason;
@property (retain, nonatomic) CKTapToRadarRequest *serverProvidedTapToRadarRequest;
@property (retain, nonatomic) NSMutableDictionary *countsByRequestOperationType;
@property (readonly, nonatomic) BOOL allowsCellularAccess;
@property (readonly, nonatomic) BOOL allowsExpensiveNetworkAccess;
@property (readonly, nonatomic) NSString *authPromptReason;
@property (readonly, nonatomic) BOOL resolvedAutomaticallyRetryNetworkFailures;
@property (readonly, nonatomic) unsigned long long resolvedDiscretionaryNetworkBehavior;
@property (readonly, nonatomic) unsigned long long duetPreClearedMode;
@property (readonly, nonatomic) BOOL preferAnonymousRequests;
@property (readonly, nonatomic) NSString *operationIDForProtobuf;
@property (readonly, nonatomic) NSString *operationGroupID;
@property (readonly, nonatomic) NSString *operationGroupName;
@property (readonly, nonatomic) NSNumber *operationGroupQuantity;
@property (readonly, nonatomic) unsigned long long networkServiceType;
@property (readonly, nonatomic) BOOL allowsPowerNapScheduling;
@property (readonly, nonatomic) NSString *operationID;
@property (readonly, nonatomic) CKSignpost *signpost;
@property (readonly, nonatomic) CKTestRequestProperties *testRequestProperties;
@property (nonatomic) BOOL didFetchNilAuthToken;
@property (readonly, nonatomic) CKDContainer *container;
@property (readonly, weak, nonatomic) CKDOperation *operation;
@property (nonatomic) BOOL allowAutomaticRedirects;
@property (readonly, nonatomic) BOOL usesBackgroundSession;
@property (readonly, nonatomic) BOOL sendRequestAnonymously;
@property (readonly, nonatomic) long long databaseScope;
@property (readonly, nonatomic) NSString *applicationBundleIdentifierForContainerAccess;
@property (readonly, nonatomic) NSString *applicationBundleIdentifierForNetworkAttribution;
@property (readonly, nonatomic) NSString *sourceApplicationSecondaryIdentifier;
@property (readonly, nonatomic) BOOL handlesAnonymousCKUserIDPropagation;
@property (readonly, nonatomic) BOOL requiresCKAnonymousUserIDs;
@property (readonly, nonatomic) BOOL requiresCKAnonymousSignature;
@property (retain, nonatomic) NSDictionary *unitTestOverrides;
@property (readonly, nonatomic) CKDProtobufStreamWriter *streamWriter;
@property (copy, nonatomic) id /* block */ requestProgressBlock;
@property (copy, nonatomic) id /* block */ responseProgressBlock;
@property (copy, nonatomic) id /* block */ completionBlock;
@property (retain, nonatomic) CKDResponseBodyParser *responseBodyParser;
@property (readonly, nonatomic) NSString *httpMethod;
@property (readonly, nonatomic) NSDictionary *additionalHeaderValues;
@property (retain, nonatomic) NSDictionary *clientProvidedAdditionalHeaderValues;
@property (readonly, nonatomic) BOOL hasRequestBody;
@property (readonly, nonatomic) BOOL expectsResponseBody;
@property (readonly, nonatomic) NSInputStream *requestBodyStream;
@property (readonly, nonatomic) NSArray *requestOperations;
@property (readonly, nonatomic) NSArray *requestOperationClasses;
@property (readonly, nonatomic) int isolationLevel;
@property (readonly, nonatomic) int requestOriginator;
@property (readonly, nonatomic) int operationType;
@property (readonly, nonatomic) NSString *path;
@property (readonly, nonatomic) long long serverType;
@property (readonly, nonatomic) long long partitionType;
@property (readonly, nonatomic) NSURL *url;
@property (readonly, nonatomic) BOOL shouldCompressBody;
@property (readonly, nonatomic) NSString *acceptContentType;
@property (readonly, nonatomic) NSString *requestContentType;
@property (readonly, nonatomic) NSString *protobufOperationName;
@property (readonly, nonatomic) BOOL requestGETPreAuth;
@property (retain, nonatomic) NSDictionary *fakeResponseOperationResultByItemID;
@property (readonly) BOOL isFinished;
@property (readonly, nonatomic) NSDictionary *responseHeaders;
@property (readonly, nonatomic) long long responseStatusCode;
@property (readonly, nonatomic) NSString *requestUUID;
@property BOOL needsAuthRetry;
@property BOOL isWaitingOnAuthRenew;
@property BOOL isHandlingAuthRetry;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) long long qualityOfService;
@property (readonly, nonatomic) CKRoughlyEquivalentProperties *equivalencyProperties;

/* instance methods */
- (id)initWithOperation:(id)operation;
- (void)dealloc;
- (BOOL)_onLifecycleQueue;
- (id)ckShortDescription;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
- (BOOL)isErrorInducerRequest;
- (id)generateRequestOperations;
- (id)returnVerificationKeyAndSignatureForRequestOperation:(id)operation dataToBeSigned:(id)signed error:(id *)error;
- (void)prepareRequestOperationsForRequest:(id)request;
- (void)_finalizeRequestOperations:(id)operations request:(id)request;
- (id)requestOperationCountsByOperationType;
- (void)_registerRequestOperationTypesForOperations:(id)operations;
- (void)_authTokenWithCompletionHandler:(id /* block */)handler;
- (void)_renewAuthTokenWithCompletionHandler:(id /* block */)handler;
- (void)_handleAuthFailure;
- (long long)_handleServerProtobufResult:(id)result rawData:(id)data;
- (id /* block */)_protobufObjectParsedBlock;
- (long long)_handleServerJSONResult:(id)jsonresult;
- (id)_parseErrorDictionaryForJson:(id)json;
- (id /* block */)_jsonObjectParsedBlock;
- (long long)_handlePlistResult:(id)result;
- (id /* block */)_xmlObjectParsedBlock;
- (id)defaultParserForContentType:(id)type;
- (BOOL)expectsSingleObject;
- (id)requestDidParseProtobufObject:(id)object;
- (void)requestDidParseJSONObject:(id)jsonobject;
- (void)requestDidParsePlistObject:(id)object;
- (void)requestDidParsePlaintextObject:(id)object;
- (void)requestDidParse509CertObject:(id)object;
- (void)requestDidParseNodeFailure:(id)failure;
- (void)requestDidComplete;
- (BOOL)validate:(id *)validate;
- (Class)expectedResponseClass;
- (Class)requestMessageClass;
- (BOOL)parsingStandaloneMessage;
- (id)operationRequestWithType:(int)type;
- (void)fillOutEquivalencyPropertiesBuilder:(id)builder;
- (void)fillOutRequestProperties:(id)properties;
- (BOOL)expectDelayBeforeRequestBegins;
- (void)validateAnonymousUserIDPropagation;
- (double)timeoutIntervalForRequest;
- (double)timeoutIntervalForResource;
- (BOOL)requiresAppPartitionURL;
- (BOOL)requiresUserPartitionURL;
- (BOOL)requiresConfiguration;
- (BOOL)requiresDeviceID;
- (BOOL)requiresTokenRegistration;
- (BOOL)includeContainerServerInfo;
- (BOOL)allowsAuthedAccount;
- (BOOL)usesCloudKitAuthToken;
- (BOOL)usesiCloudAuthToken;
- (BOOL)allowsAnonymousAccount;
- (id)zoneIDsToLock;
- (void)performRequest;
- (void)_validateAccountAccess;
- (void)_setupPublicDatabaseURL;
- (void)_setupPrivateDatabaseURL;
- (void)_setupConfiguration;
- (void)_fetchContainerScopedUserID;
- (void)_fetchDeviceID;
- (void)_registerPushTokens;
- (void)_performWillSendTestCallback;
- (void)_acquireZoneGates;
- (void)_prepareAuthTokens;
- (void)_prepareCloudKitAuthToken;
- (void)prepareRequestWithCompletion:(id /* block */)completion;
- (void)_performRequest;
- (void)_loadRequest:(id)request;
- (void)cancel;
- (void)finishWithError:(id)error;
- (id)_wrapErrorIfNecessary:(id)necessary;
- (void)_finishOnLifecycleQueueWithError:(id)error;
- (void)_triggerAutoBugCaptureWithErrorPayload:(id)payload;
- (BOOL)markAsFinished;
- (void)_tearDownStreamWriter;
- (void)tearDownResources;
- (void)tearDownResourcesAndReleaseTheZoneLocks:(BOOL)locks;
- (BOOL)performOnLifecycleQueueIfNotFinished:(id /* block */)finished;
- (void)performASyncOnLifecycleQueueIfNotFinished:(id /* block */)finished fallbackBlock:(id /* block */)block;
- (void)performASyncOnLifecycleQueueIfNotFinished:(id /* block */)finished;
- (void)URLSession:(id)urlsession task:(id)task willPerformHTTPRedirection:(id)httpredirection newRequest:(id)request completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)URLSession:(id)urlsession task:(id)task needNewBodyStream:(id /* block */)stream;
- (void)URLSession:(id)urlsession task:(id)task didSendBodyData:(long long)data totalBytesSent:(long long)sent totalBytesExpectedToSend:(long long)send;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithError:(id)error;
- (void)URLSession:(id)urlsession task:(id)task _willSendRequestForEstablishedConnection:(id)connection completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession _taskIsWaitingForConnection:(id)connection;
- (void)URLSession:(id)urlsession task:(id)task _conditionalRequirementsChanged:(BOOL)changed;
- (void)URLSession:(id)urlsession _willRetryBackgroundDataTask:(id)task withError:(id)error;
- (id)_CFNetworkTaskIdentifierString;
- (id)statusReportWithIndent:(unsigned long long)indent;
- (id)createAssetAuthorizeGetRequestOptionsHeaderInfoWithKey:(id)key value:(id)value;
- (BOOL)isCancelled;
@end

#endif /* CKDURLRequest_h */
