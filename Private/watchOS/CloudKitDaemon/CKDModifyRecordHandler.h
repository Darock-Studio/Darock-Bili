//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDModifyRecordHandler_h
#define CKDModifyRecordHandler_h
@import Foundation;

#include "CKDModifyRecordsOperation.h"
#include "CKDPCSCache.h"
#include "CKDPCSManager.h"
#include "CKDProgressTracker.h"
#include "CKDRecordPCSData.h"
#include "CKDSharePCSData.h"
#include "CKDZonePCSData.h"

@class CKRecord, CKRecordID, NSDictionary, NSError, NSMutableDictionary, NSString;
@protocol OS_dispatch_group;

@interface CKDModifyRecordHandler : NSObject

@property (retain, nonatomic) CKRecord *record;
@property (retain, nonatomic) CKRecordID *recordID;
@property (nonatomic) BOOL isDelete;
@property (retain, nonatomic) NSObject<OS_dispatch_group> *pcsGroup;
@property (readonly, nonatomic) CKDPCSManager *pcsManager;
@property (readonly, nonatomic) CKDPCSCache *pcsCache;
@property (nonatomic) BOOL didRollRecordPCSMasterKey;
@property (weak, nonatomic) CKDModifyRecordsOperation *operation;
@property (retain, nonatomic) CKDRecordPCSData *recordPCSData;
@property (retain, nonatomic) CKDSharePCSData *sharePCSData;
@property (retain, nonatomic) CKRecord *serverRecord;
@property (retain, nonatomic) NSString *etag;
@property (nonatomic) unsigned long long state;
@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) NSMutableDictionary *rereferencedAssetArrayByFieldname;
@property (retain, nonatomic) CKDProgressTracker *progressTracker;
@property (nonatomic) long long batchRank;
@property (nonatomic) int saveAttempts;
@property (nonatomic) BOOL saveCompletionBlockCalled;
@property (readonly, nonatomic) BOOL isShare;
@property (nonatomic) BOOL needsRefetch;
@property (retain, nonatomic) CKDZonePCSData *sharedZonePCSData;
@property (nonatomic) BOOL didAttemptZoneWideShareKeyRoll;
@property (copy, nonatomic) NSDictionary *assetUUIDToExpectedProperties;

/* class methods */
+ (id)modifyHandlerWithRecord:(id)record operation:(id)operation;
+ (id)modifyHandlerForDeleteWithRecordID:(id)id operation:(id)operation;
+ (id)_stringForState:(unsigned long long)state;

/* instance methods */
- (id)_initCommonWithOperation:(id)operation;
- (id)_initWithRecord:(id)record operation:(id)operation;
- (id)_initForDeleteWithRecordID:(id)id operation:(id)operation;
- (id)description;
- (id)sideEffectRecordIDs;
- (void)noteSideEffectRecordPendingModify:(id)modify;
- (void)noteSideEffectRecordAbsent:(id)absent;
- (void)noteSideEffectRecordPendingDelete:(id)delete;
- (BOOL)_needsSigningPCS;
- (void)fetchRecordPCSData;
- (void)_fetchSigningPCSForRecordToDelete;
- (void)_setSigningPCSIdentity:(id)pcsidentity;
- (BOOL)_canSetPreviousProtectionEtag;
- (BOOL)_createPublicSharingKeyWithError:(id *)error;
- (void)_loadPCSData;
- (void)_reallyFetchPCSDataWithOptions:(unsigned long long)options;
- (void)_fetchPCSData;
- (void)_fetchParentPCSForID:(id)id withCompletionHandler:(id /* block */)handler;
- (void)_fetchSharePCSForID:(id)id withCompletionHandler:(id /* block */)handler;
- (void)_addShareToPCSData:(id)pcsdata withError:(id)error;
- (void)_keyRollIfNeededForRecordPCSData:(id)pcsdata withError:(id)error;
- (void)_reallyAddShareToPCSData:(id)pcsdata withError:(id)error;
- (void)_fetchParentPCSForData:(id)data withError:(id)error;
- (id)_addParentPCS:(id)pcs toRecordPCS:(id)pcs;
- (void)_createAndSavePCS;
- (BOOL)_useZoneishPCS;
- (void)_continueCreateAndSavePCSWithZonePCS:(id)pcs sharePCS:(id)pcs;
- (void)_unwrapRecordPCSForZone;
- (void)_unwrapRecordPCSWithShareID:(id)id;
- (void)_unwrapRecordPCSForParent;
- (void)_fetchExistingPCSForProvidedPCSData:(id)pcsdata;
- (void)_handlePCSData:(id)pcsdata withError:(id)error;
- (void)fetchSharePCSData;
- (id)assetsWhichNeedRecordFetch;
- (id)prepareAssetsForUploadWithError:(id *)error;
- (BOOL)_prepareAsset:(id)asset recordKey:(id)key mergeableDeltaID:(id)id record:(id)record error:(id *)error;
- (void)prepareStreamingAsset:(id)asset forUploadWithRecord:(id)record;
- (void)prepareForSave;
- (BOOL)_wrapEncryptedData:(id)data withPCS:(struct _OpaquePCSShareProtection *)pcs forField:(id)field recordID:(id)id;
- (void)_pretendToWrapEncryptedDataForRecordValueStore:(id)store;
- (BOOL)_wrapEncryptedDataForRecordValueStore:(id)store withPCS:(struct _OpaquePCSShareProtection *)pcs;
- (BOOL)_encryptMergeableDeltasInRecordValueStore:(id)store shareProtection:(struct _OpaquePCSShareProtection *)protection;
- (BOOL)_wrapEncryptedDataOnRecord:(id)record;
- (void)savePCSDataToCache;
- (void)clearProtectionDataForRecord;
- (void)_clearRecordProtectionDataForRecord;
@end

#endif /* CKDModifyRecordHandler_h */
