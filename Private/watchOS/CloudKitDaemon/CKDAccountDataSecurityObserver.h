//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDAccountDataSecurityObserver_h
#define CKDAccountDataSecurityObserver_h
@import Foundation;

#include "CKDLogicalDeviceContext.h"
#include "NSObject-Protocol.h"

@class NSError;
@protocol OS_dispatch_queue;

@interface CKDAccountDataSecurityObserver : NSObject

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *statusQueue;
@property (nonatomic) long long manateeAvailableForLoggedInAccount;
@property (copy, nonatomic) NSError *lastCDPErrorForManateeStatus;
@property (nonatomic) long long cachedWalrusStatusForLoggedInAccount;
@property (copy, nonatomic) NSError *lastCDPErrorForWalrusStatus;
@property (retain, nonatomic) NSObject<NSObject> *walrusStatusChangeObserver;
@property (weak, nonatomic) CKDLogicalDeviceContext *deviceContext;

/* class methods */
+ (id)sharedWalrusController;

/* instance methods */
- (id)initWithDeviceContext:(id)context;
- (void)dealloc;
- (void)_lockedSetManateeAvailableForLoggedInAccount:(long long)account;
- (long long)_fetchManateeAvailability:(id *)availability;
- (void)handleManateeStatusUpdateNotificationWithAvailability:(id)availability;
- (void)_lockedFetchAndUpdateManateeAvailability;
- (void)manateeStatusForAccount:(id)account isSecondaryAccount:(BOOL)account completionHandler:(id /* block */)handler;
- (BOOL)isManateeAvailableForAccount:(id)account isSecondaryAccount:(BOOL)account error:(id *)error;
- (BOOL)accountSupportsManatee:(id)manatee;
- (void)handleWalrusStateChanged;
- (void)walrusStatusForAccount:(id)account isSecondaryAccount:(BOOL)account checkCache:(BOOL)cache completionHandler:(id /* block */)handler;
- (BOOL)isWalrusEnabledForAccount:(id)account;
- (BOOL)isWalrusEnabledForAccount:(id)account isSecondaryAccount:(BOOL)account error:(id *)error;
- (void)postClouddWalrusUpdateNotification;
@end

#endif /* CKDAccountDataSecurityObserver_h */
