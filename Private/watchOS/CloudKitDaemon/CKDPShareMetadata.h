//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDPShareMetadata_h
#define CKDPShareMetadata_h
@import Foundation;

#include "PBCodable.h"
#include "CKDPParticipant.h"
#include "CKDPRecordType.h"
#include "NSCopying-Protocol.h"

@class NSData, NSString;

@interface CKDPShareMetadata : PBCodable<NSCopying> {
  /* instance variables */
  struct { unsigned int x :1 participantPermission; unsigned int x :1 participantState; unsigned int x :1 participantType; } _has;
}

@property (readonly, nonatomic) BOOL hasRoutingKey;
@property (retain, nonatomic) NSString *routingKey;
@property (readonly, nonatomic) BOOL hasProtectedFullToken;
@property (retain, nonatomic) NSData *protectedFullToken;
@property (readonly, nonatomic) BOOL hasOwnerParticipant;
@property (retain, nonatomic) CKDPParticipant *ownerParticipant;
@property (readonly, nonatomic) BOOL hasCallerParticipant;
@property (retain, nonatomic) CKDPParticipant *callerParticipant;
@property (nonatomic) BOOL hasParticipantPermission;
@property (nonatomic) int participantPermission;
@property (nonatomic) BOOL hasParticipantState;
@property (nonatomic) int participantState;
@property (nonatomic) BOOL hasParticipantType;
@property (nonatomic) int participantType;
@property (readonly, nonatomic) BOOL hasRootRecordType;
@property (retain, nonatomic) CKDPRecordType *rootRecordType;

/* instance methods */
- (id)_participantPermissionCKLogValue;
- (id)_participantStateCKLogValue;
- (id)_participantTypeCKLogValue;
- (id)participantPermissionAsString:(int)string;
- (int)StringAsParticipantPermission:(id)permission;
- (id)participantStateAsString:(int)string;
- (int)StringAsParticipantState:(id)state;
- (id)participantTypeAsString:(int)string;
- (int)StringAsParticipantType:(id)type;
- (id)description;
- (id)dictionaryRepresentation;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (void)copyTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)mergeFrom:(id)from;
@end

#endif /* CKDPShareMetadata_h */
