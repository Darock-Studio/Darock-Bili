//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXUIServiceManager_h
#define AXUIServiceManager_h
@import Foundation;

#include "AXUIDisplayManager.h"
#include "AXUIMessageSenderDelegate-Protocol.h"
#include "AccessibilityBoardServices_ServerProtocol-Protocol.h"
#include "BSServiceConnectionListenerDelegate-Protocol.h"

@class AXAccessQueue, AXUIMessageSender, BOOL *, BSProcessDeathWatcher, BSServiceConnectionListener, NSMutableArray, NSMutableDictionary, NSString;
@protocol AXUIServiceManagerDelegate, OS_dispatch_queue;

@interface AXUIServiceManager : NSObject<AXUIMessageSenderDelegate, BSServiceConnectionListenerDelegate, AccessibilityBoardServices_ServerProtocol> {
  /* instance variables */
  BSProcessDeathWatcher *_springBoardReaper;
  BSServiceConnectionListener *_connectionListener;
}

@property (retain, nonatomic) NSMutableArray *pausedConnections;
@property (retain, nonatomic) AXAccessQueue *resumingConnectionsQueue;
@property (retain, nonatomic) NSMutableDictionary *entitlementsCheckers;
@property (retain, nonatomic) AXAccessQueue *entitlementsCheckersAccessQueue;
@property (retain, nonatomic) AXUIMessageSender *messageSender;
@property (retain, nonatomic) NSMutableArray *serviceContexts;
@property (retain, nonatomic) AXAccessQueue *servicesAccessQueue;
@property (nonatomic) unsigned long long lastUsedServiceIdentifier;
@property (nonatomic) BOOL shouldAllowServicesToProcessMessages;
@property (retain, nonatomic) AXUIDisplayManager *displayManager;
@property (retain, nonatomic) NSMutableDictionary *transactions;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *transactionsQueue;
@property (weak, nonatomic) NSObject<AXUIServiceManagerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedServiceManager;
+ (void)_releaseSharedServiceManager;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)beginTransactionWithIdentifier:(id)identifier forService:(id)service;
- (void)endTransactionWithIdentifier:(id)identifier forService:(id)service;
- (id)_clientMessengerWithIdentifier:(id)identifier;
- (void)_sendAsynchronousMessage:(id)message withIdentifier:(unsigned long long)identifier toClientWithMessenger:(id)messenger targetAccessQueue:(id)queue completionRequiresWritingBlock:(BOOL)block completion:(id /* block */)completion;
- (id)_sendSynchronousMessage:(id)message withIdentifier:(unsigned long long)identifier toClientWithMessenger:(id)messenger error:(id *)error;
- (void)messageSender:(id)sender accessLaunchAngelConnectionForMessageWithContext:(void *)context usingBlock:(id /* block */)block;
- (void)messageSender:(id)sender accessXPCConnectionForMessageWithContext:(void *)context usingBlock:(id /* block */)block;
- (void)messageSender:(id)sender willSendXPCMessage:(id)xpcmessage context:(void *)context;
- (BOOL)_start;
- (void)_startLaunchAngel;
- (void)listener:(id)listener didReceiveConnection:(id)connection withContext:(id)context;
- (void)sendBoardServiceMessage:(id)message callback:(id /* block */)callback;
- (void)_handleConnection:(id)connection;
- (void)_processXPCObject:(id)xpcobject context:(id)context;
- (id)_extractClientIdentifier:(id)identifier;
- (BOOL)_extractAndHandleRegistration:(id)registration clientIdentifier:(id)identifier messageIdentifier:(unsigned long long)identifier context:(id)context error:(id *)error;
- (BOOL)_serviceWithClass:(Class)class canProcessMessageWithIdentifier:(unsigned long long)identifier fromClientWithConnection:(id)connection possibleRequiredEntitlements:(id *)entitlements;
- (void)_registerForSystemAppDeath;
- (void)_applicationDidFinishLaunching;
- (void)_applicationDidReceiveMemoryWarning:(id)warning;
- (BOOL)_registerClientWithIdentifier:(id)identifier connection:(id)connection serviceBundleName:(id)name initiatingMessageIdentifier:(unsigned long long)identifier error:(id *)error;
- (id)_serviceFromBundlePath:(id)path clientIdentifier:(id)identifier connection:(id)connection initiatingMessageIdentifier:(unsigned long long)identifier stopSearching:(BOOL *)searching error:(id *)error;
- (void)_unregisterAllClientsWithConnection:(id)connection;
- (void)_unregisterClientsIdentifiersLists:(id)lists serviceContexts:(id)contexts;
- (id)_serviceContextForClientWithIdentifier:(id)identifier;
- (id)_services;
- (unsigned long long)_servicesCount;
- (id)_serviceContextForService:(id)service;
- (id)_uniqueIdentifierForService:(id)service;
- (id)_servicesForUniqueIdentifiers:(id)identifiers;
@end

#endif /* AXUIServiceManager_h */
