//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLSessionModel_h
#define CSLSessionModel_h
@import Foundation;

#include "BSDescriptionProviding-Protocol.h"
#include "CSLBackgroundSessionScheduler.h"
#include "CSLManagedSessionRecoverer.h"
#include "CSLSessionAppLauncher.h"
#include "CSLSessionModelDelegate-Protocol.h"
#include "CSLSessionStoreController.h"
#include "CSLSessionSuppressionAssertionTracker.h"
#include "CSLSessionSuppressionDelegate-Protocol.h"
#include "CSLSessionXPCServer.h"
#include "CSLSessionXPCServerDelegate-Protocol.h"

@class NSMapTable, NSMutableSet, NSSet, NSString;

@interface CSLSessionModel : NSObject<BSDescriptionProviding, CSLSessionSuppressionDelegate, CSLSessionXPCServerDelegate> {
  /* instance variables */
  struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } ourl_lock; unsigned int ourl_count; } _recursiveLock;
  CSLSessionXPCServer *_xpcServer;
  NSMapTable *_connectionToSessions;
  CSLBackgroundSessionScheduler *_sessionScheduler;
  CSLSessionStoreController *_sessionStoreController;
  CSLSessionAppLauncher *_sessionAppLauncher;
  unsigned long long _stateHandler;
  CSLManagedSessionRecoverer *_managedSessionRecoverer;
  BOOL _shouldProcessRecoveredSessions;
  CSLSessionSuppressionAssertionTracker *_sessionSuppressionTracker;
}

@property (retain, nonatomic) NSMutableSet *activeSessionApps;
@property BOOL started;
@property (readonly, nonatomic) NSSet *sessions;
@property (weak, nonatomic) NSObject<CSLSessionModelDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)setSessionAppLauncher:(id)launcher;
- (void)start;
- (void)startWithStoreController:(id)controller;
- (void)_withLock:(id /* block */)lock;
- (void)_lock_start:(id)_lock_start;
- (void)clientConnected:(id)connected bundleID:(id)id;
- (id)_lock_checkIfSessionIsSuppressed:(id)suppressed;
- (id)_checkIfSessionIsAllowed:(id)allowed forConnection:(id)connection;
- (id)_lock_checkIfSessionAlreadyPresent:(id)present forConnection:(id)connection;
- (void)_lock_startSession:(id)session completion:(id /* block */)completion;
- (void)startSession:(id)session completionWithExpirationDate:(id /* block */)date;
- (void)scheduleSession:(id)session completion:(id /* block */)completion;
- (void)restartSession:(id)session completion:(id /* block */)completion;
- (void)cancelScheduledSession:(id)session completion:(id /* block */)completion;
- (void)_lock_removeAndMarkSessionEnded:(id)ended connection:(id)connection options:(id)options;
- (void)_lockEndSession:(id)session options:(id)options error:(id)error completion:(id /* block */)completion;
- (void)endSession:(id)session options:(id)options error:(id)error completion:(id /* block */)completion;
- (void)activateAppForSession:(id)session completion:(id /* block */)completion;
- (void)connectionWentBellyUp:(id)up;
- (void)fetchStickyCapableApps:(id /* block */)apps;
- (id)_getTCCBundleIDsForService:(struct __CFString *)service;
- (id)activeSessionOfType:(long long)type;
- (void)dismissSession:(id)session;
- (void)resumeSession:(id)session;
- (void)didUpdateStateForSession:(id)session resumed:(BOOL)resumed;
- (void)setDismissed:(BOOL)dismissed forSession:(id)session;
- (BOOL)pauseSession:(id)session completion:(id /* block */)completion;
- (BOOL)resumeSession:(id)session completion:(id /* block */)completion;
- (void)_lock_addSession:(id)session forConnection:(id)connection;
- (void)_lock_removeSession:(id)session forConnection:(id)connection;
- (void)_lock_startSessionAndNotify:(id)notify completion:(id /* block */)completion;
- (void)_lock_notifyDelegateSessionDidStart:(id)start completion:(id /* block */)completion;
- (void)_lock_markSessionEnded:(id)ended options:(id)options;
- (void)_lock_notifyDelegateSessionDidEnd:(id)end options:(id)options;
- (void)_lock_notifyDelegateActiveAppsChanged;
- (void)_lock_notifyDelegateDidStart;
- (void)_lock_notifyDismissalStateDidUpdateForSession:(id)session;
- (void)dismissAllSessions;
- (void)_lock_dismissAllSessions;
- (void)dismissSessionIfNecessary:(id)necessary;
- (void)_lock_dismissSessionIfNecessary:(id)necessary;
- (id)sessionsForBundleID:(id)id;
- (id)scheduledSessionsForBundleID:(id)id;
- (id)runningSessionsOfType:(long long)type;
- (void)endActiveSessionsForBundleID:(id)id error:(id)error;
- (void)cancelScheduledSessionsForBundleID:(id)id error:(id)error;
- (void)executeInOrder:(id /* block */)order;
- (void)takeSessionSuppressionAssertionForPID:(int)pid completion:(id /* block */)completion;
- (void)releaseSessionSuppressionAssertionForPID:(int)pid completion:(id /* block */)completion;
- (void)_lock_handleRecoveredSessions:(id)sessions;
- (void)_lock_processRecoveredSessions;
- (void)processRecoveredSessions;
- (void)sessionSuppressionsImposed;
- (void)_lock_endSuppressedSessions;
- (void)sessionSuppressionsLifted;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)descriptionWithMultilinePrefix:(id)prefix;
- (id)descriptionBuilderWithMultilinePrefix:(id)prefix;
- (BOOL)isStarted;
@end

#endif /* CSLSessionModel_h */
