//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLComplicationObserver_h
#define CSLComplicationObserver_h
@import Foundation;

#include "NSXPCListenerDelegate-Protocol.h"

@class CSLPRFConcurrentObserverStore, NSDictionary, NSMutableSet, NSOrderedSet, NSString, NSXPCConnection, NSXPCListener;

@interface CSLComplicationObserver : NSObject<NSXPCListenerDelegate> {
  /* instance variables */
  NSXPCListener *_listener;
  NSXPCConnection *_clockConnection;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableSet *_wakeSessionBundleIdentifiers;
  CSLPRFConcurrentObserverStore *_observers;
  NSOrderedSet *_orderedComplicationCounts;
  NSDictionary *_complicationCountByBundleID;
}

@property (readonly, nonatomic) NSOrderedSet *currentOrderedComplicationCounts;
@property (readonly, nonatomic) NSOrderedSet *currentOrderedComplicationApplicationIdentifiers;
@property (readonly, nonatomic) NSOrderedSet *currentOrderedFaceComplicationApplicationIdentifiers;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedObserver;

/* instance methods */
- (id)init;
- (id)initWithListenerEnabled:(BOOL)enabled;
- (void)_withLock:(id /* block */)lock;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)_setupListener;
- (void)_connectionInvalidated;
- (void)_endOutstandingWakeSessionsWithBundleIdentifiers:(id)identifiers;
- (void)complicationWillBeginWakeSessionForBundleIdentifier:(id)identifier;
- (void)complicationWillEndWakeSessionForBundleIdentifier:(id)identifier;
- (void)complicationDidReloadOrExtendForBundleIdentifier:(id)identifier;
- (void)complicationCountsDidChange:(id)change;
- (id)_lock_dictionaryForCurrentComplicationCounts;
- (id)complicationCountForBundleID:(id)id onFace:(BOOL)face;
- (BOOL)hasComplicationOnFace:(id)face;
- (long long)observedComplicationType:(id)type;
@end

#endif /* CSLComplicationObserver_h */
