//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLBulletinObserver_h
#define CSLBulletinObserver_h
@import Foundation;

#include "BBObserverDelegate-Protocol.h"
#include "CSLBulletinDeduplicator.h"
#include "CSLBulletinPipelineStep.h"
#include "CSLBulletinStateStore.h"
#include "CSLNotificationXPCServer.h"
#include "CSLNotificationXPCServerDelegate-Protocol.h"

@class BBObserver, NSString, SWWakingTimer;
@protocol OS_dispatch_queue;

@interface CSLBulletinObserver : NSObject<BBObserverDelegate, CSLNotificationXPCServerDelegate>

@property (retain, nonatomic) BBObserver *observer;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) CSLBulletinPipelineStep *pipeline;
@property (retain, nonatomic) CSLBulletinStateStore *stateStore;
@property (retain, nonatomic) CSLBulletinDeduplicator *deduplicator;
@property (retain, nonatomic) SWWakingTimer *obsolescenceTimer;
@property (retain, nonatomic) CSLNotificationXPCServer *xpcServer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedBulletinObserver;

/* instance methods */
- (id)init;
- (void)createBBObserver;
- (void)getSectionInfoForSectionID:(id)id completion:(id /* block */)completion;
- (id)sectionDisplayNameForLocalSection:(id)section;
- (id)sectionDisplayNameForBulletin:(id)bulletin;
- (id)_sectionDisplayNameForSection:(id)section sockPuppetAppID:(id)id localSectionID:(id)id sectionDisplayName:(id)name;
- (void)observer:(id)observer updateSectionInfo:(id)info;
- (void)observer:(id)observer addBulletin:(id)bulletin forFeed:(unsigned long long)feed;
- (void)_scheduleObsolescenceTimer;
- (void)observer:(id)observer modifyBulletin:(id)bulletin forFeed:(unsigned long long)feed;
- (void)observer:(id)observer removeBulletin:(id)bulletin forFeed:(unsigned long long)feed;
- (void)observer:(id)observer noteInvalidatedBulletinIDs:(id)ids;
- (void)observer:(id)observer purgeReferencesToBulletinID:(id)id;
- (void)observer:(id)observer noteSectionParametersChanged:(id)changed forSectionID:(id)id;
- (void)observer:(id)observer noteServerConnectionStateChanged:(BOOL)changed;
- (id)deduplicatorDescription;
- (id)pipelineStepDescriptionWithActorClassName:(id)name;
- (id)stateStoreDescription;
- (void)addNotificationWithTitle:(id)title subtitle:(id)subtitle message:(id)message delayLocal:(unsigned long long)local delayMirrored:(unsigned long long)mirrored clearable:(BOOL)clearable;
- (void)lockedNotificationsInPiplineStepActorWithClassName:(id)name completion:(id /* block */)completion;
- (void)removeNotificationsWithSectionID:(id)id publisherMatchID:(id)id;
- (void)clearNotificationWithSectionID:(id)id publisherMatchID:(id)id feed:(unsigned long long)feed;
- (void)clearAllNotificationsWithCompletion:(id /* block */)completion;
- (void)removeSectionWithSectionID:(id)id;
- (void)setNotificationsLevel:(long long)level sectionID:(id)id mirror:(BOOL)mirror;
- (id)getNotificationSettings;
- (id)_sectionDisplayNameForSectionID:(id)id;
@end

#endif /* CSLBulletinObserver_h */
