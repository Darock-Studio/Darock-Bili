//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLSystemStateManager_h
#define CSLSystemStateManager_h
@import Foundation;

#include "CSLSSystemStateInterfaceProviding-Protocol.h"
#include "CSLScrollCenterTransitionValidator-Protocol.h"
#include "CSLSystemStateClockNavigator.h"
#include "CSLSystemStateConfigurationProviding-Protocol.h"
#include "CSLSystemStateLayoutProviding-Protocol.h"
#include "CSLSystemStateSuppressing-Protocol.h"
#include "CSLSystemStateTypeEnumerating-Protocol.h"
#include "CSLSystemStateUserIdlePolicyApplier.h"
#include "CSLSystemStateWindowManager.h"
#include "CSLSystemStateXPCRequestValidator.h"
#include "CSLSystemStateXPCServer.h"
#include "CSLSystemStateXPCServerDelegate-Protocol.h"
#include "IOSSHLApplicationsProviding-Protocol.h"
#include "IOSSHLBatteryStatusObserving-Protocol.h"
#include "IOSSHLWorkspaceTransitionRequestValidator-Protocol.h"

@class NSDictionary, NSMutableSet, NSString;

@interface CSLSystemStateManager : NSObject<CSLSystemStateXPCServerDelegate, CSLSystemStateLayoutProviding, CSLSystemStateConfigurationProviding, CSLSystemStateTypeEnumerating, CSLSSystemStateInterfaceProviding, CSLSystemStateSuppressing, IOSSHLWorkspaceTransitionRequestValidator, CSLScrollCenterTransitionValidator> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSDictionary *_systemStateMap;
  NSDictionary *_systemStateProxyMap;
  CSLSystemStateXPCRequestValidator *_validator;
  CSLSystemStateXPCServer *_server;
  CSLSystemStateWindowManager *_windowManager;
  NSObject<IOSSHLBatteryStatusObserving> *_batteryStatusObserver;
  CSLSystemStateClockNavigator *_clockNavigator;
  CSLSystemStateUserIdlePolicyApplier *_userIdlePolicyApplier;
  NSObject<IOSSHLApplicationsProviding> *_applicationProvider;
  NSMutableSet *_suppressionAssertions;
  unsigned long long _stateHandle;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)depthModeModel;
+ (id)sharedInstance;
+ (id)interfaceForType:(unsigned long long)type;
+ (id)passcodeLockInterface;
+ (id)waterLockInterface;
+ (id)sleepLockInterface;
+ (id)theaterModeInterface;
+ (id)tourModeInterface;
+ (id)depthModeInterface;

/* instance methods */
- (id)initWithApplicationProvider:(id)provider userIdleManager:(id)manager batteryStatusObserver:(id)observer sessionManager:(id)manager;
- (void)_setupSystemState:(id)state withStateMap:(id)map proxyMap:(id)map;
- (void)startSystemStateUIWithEventHandler:(id)handler;
- (id)_descriptionForSystemState:(id)state;
- (BOOL)shouldSendEvent:(id)event;
- (void)_systemStateForType:(unsigned long long)type didUpdate:(BOOL)update;
- (void)_withLock:(id /* block */)lock;
- (void)_addInterfaceProxy:(id)proxy toMap:(id)map forType:(unsigned long long)type;
- (void)_enumerateProxiesForType:(unsigned long long)type withBlock:(id /* block */)block;
- (id)systemStateForType:(unsigned long long)type;
- (void)enumerateSystemStateTypes:(id /* block */)types;
- (id)layoutForType:(unsigned long long)type;
- (id)configurationForType:(unsigned long long)type;
- (id)interfaceForType:(unsigned long long)type;
- (void)server:(id)server setType:(unsigned long long)type enabled:(BOOL)enabled completion:(id /* block */)completion;
- (void)server:(id)server type:(unsigned long long)type getEnabled:(id /* block */)enabled;
- (void)_batteryStatusDidUpdate:(id)update;
- (BOOL)preflightTransitionRequest:(id)request;
- (BOOL)shouldExecuteTransitionRequest:(id)request declinedReason:(id *)reason;
- (BOOL)scrollCenter:(id)center shouldExecuteTransition:(unsigned long long)transition declinedReason:(id *)reason;
- (id)suppressUIForSystemStates:(id)states reason:(id)reason;
- (void)_invalidateAssertion:(id)assertion;
@end

#endif /* CSLSystemStateManager_h */
