//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLUIFieldOfIconsView_h
#define CSLUIFieldOfIconsView_h
@import Foundation;

#include "UIView.h"
#include "CSLHexAppGraph.h"
#include "CSLHexAppGraphDelegate-Protocol.h"
#include "CSLHexAppNode.h"
#include "CSLHexLayout.h"
#include "CSLIconTapGestureRecognizer.h"
#include "CSLLauncherViewModeDelegate-Protocol.h"
#include "CSLPanGestureRecognizer.h"
#include "CSLPressStateApplier.h"
#include "CSLPressStateApplierDelegate-Protocol.h"
#include "CSLUIFieldOfIconsViewScrollDelegate-Protocol.h"
#include "CSLUIHexIconActionDelegate-Protocol.h"
#include "CSLUIHexIconViewFactory-Protocol.h"
#include "CSLUIHighFidelityUIUpdatesAssertion.h"
#include "CSLUIIconView.h"
#include "CSLUIInertialUpdater.h"
#include "CSLUIInertialUpdaterDelegate-Protocol.h"
#include "CSLUILauncherStyleButtonView.h"
#include "CSLUIPointAnimator.h"
#include "CSLUniformHexLayout.h"
#include "PUICCrownInputSequencerDelegate-Protocol.h"

@class CADisplayLink, NSMutableDictionary, NSString, PUICCrownInputSequencer, PUICIntegerSequenceNotchProvider, UIGestureRecognizer, UIView;
@protocol UIView<CSLUIHexIconView;

@interface CSLUIFieldOfIconsView : UIView<CSLHexAppGraphDelegate, CSLUIInertialUpdaterDelegate, CSLPressStateApplierDelegate, PUICCrownInputSequencerDelegate> {
  /* instance variables */
  unsigned long long _options;
  UIView *_contentView;
  int _maxVisibleRows;
  NSMutableDictionary *_iconViewDict;
  CSLHexAppGraph *_iconGraph;
  NSObject<CSLUIHexIconViewFactory> *_viewFactory;
  BOOL _recognizersEnabled;
  BOOL _targetHexLocked;
  CSLUniformHexLayout *_contentOffsetLayout;
  CSLPanGestureRecognizer *_panRecognizer;
  CSLUIInertialUpdater *_inertialUpdater;
  struct CGPoint { double x; double y; } _rawTouchContentOffset;
  struct CGPoint { double x; double y; } _lastTranslation;
  struct CGPoint { double x; double y; } _normalizedRubberBand;
  CADisplayLink *_autoScrollLink;
  BOOL _autoScrolling;
  unsigned long long _autoScrollDirection;
  CSLUIPointAnimator *_contentOffsetAnimator;
  CSLIconTapGestureRecognizer *_tapRecognizer;
  struct Hex { int q; int r; } _touchedHex;
  CSLUIIconView *_pressedIcon;
  CSLPressStateApplier *_pressApplier;
  BOOL _isAnimatingIconPress;
  struct CGPoint { double x; double y; } _dragStartPoint;
  UIView<CSLUIHexIconView> *_dragView;
  BOOL _didPanDrag;
  UIGestureRecognizer *_pinchRecognizer;
  PUICCrownInputSequencer *_crownSequencer;
  PUICIntegerSequenceNotchProvider *_notchProvider;
  CSLUILauncherStyleButtonView *_listViewButtonView;
  CSLUIHighFidelityUIUpdatesAssertion *_highFidelityAssertion;
  CADisplayLink *_pptPanDisplayLink;
  double _pptPanStartTime;
  struct CGPoint { double x; double y; } _pptPanStartContentOffset;
  long long _pptPanCount;
  double _pptPanDistance;
  NSString *_pptPanTestName;
}

@property (retain, nonatomic) CSLHexLayout *layout;
@property (readonly, nonatomic) double defaultPixelDiameter;
@property (readonly, nonatomic) BOOL isEditing;
@property (readonly, nonatomic) BOOL isDragging;
@property (readonly, nonatomic) BOOL isPressing;
@property (readonly, nonatomic) CSLHexAppNode *draggingNode;
@property (readonly, nonatomic) CSLHexAppNode *lastTouchedNode;
@property (weak, nonatomic) NSObject<CSLUIHexIconActionDelegate> *actionDelegate;
@property (weak, nonatomic) NSObject<CSLLauncherViewModeDelegate> *launcherDelegate;
@property (weak, nonatomic) NSObject<CSLUIFieldOfIconsViewScrollDelegate> *scrollDelegate;
@property (readonly, nonatomic) struct Hex { int x0; int x1; } targetHex;
@property (retain, nonatomic) NSString *targetBundleIdentifier;
@property (readonly, nonatomic) struct Hex { int x0; int x1; } centeredHex;
@property (nonatomic) struct CGPoint { double x0; double x1; } contentOffset;
@property (nonatomic) BOOL scrollEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame iconGraph:(id)graph viewFactory:(id)factory options:(unsigned long long)options;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)dealloc;
- (void)lockTargetHex;
- (void)unlockTargetHex;
- (void)loadIconViews;
- (id)iconViewForBundleIdentifier:(id)identifier;
- (id)iconViewAtHexPoint:(struct Hex { int x0; int x1; })point;
- (void)enumerateIconViewsWithBlock:(id /* block */)block;
- (void)hexAppGraph:(id)graph addedNodes:(id)nodes removedNodes:(id)nodes movedNodes:(id)nodes;
- (void)revealViews:(id)views;
- (id)addedNodes:(id)nodes;
- (id)removedNodes:(id)nodes;
- (void)setLayout:(id)layout percentComplete:(double)complete animated:(BOOL)animated options:(unsigned long long)options;
- (void)setLayout:(id)layout animated:(BOOL)animated;
- (void)layoutAnimated:(BOOL)animated;
- (void)layoutSubviews;
- (void)layoutIconsForcedApply:(BOOL)apply forcedSubview:(BOOL)subview;
- (void)forceIconAttributesAndSubviewForView:(id)view;
- (void)layoutIconView:(id)view forcedApply:(BOOL)apply forcedSubview:(BOOL)subview;
- (void)enableGestureRecognizers:(BOOL)recognizers;
- (void)handlePanGesture:(id)gesture;
- (void)pressStateApplierDidUpdate;
- (void)endPressing;
- (struct { double x0; })originalLayoutAttributesForHex:(struct Hex { int x0; int x1; })hex;
- (void)handleIconTap:(id)tap;
- (void)handlePinch:(id)pinch;
- (struct CGPoint { double x0; double x1; })inertialUpdater:(id)updater willDecelerateWithTarget:(struct CGPoint { double x0; double x1; })target;
- (void)inertialUpdater:(id)updater scrolledWithDelta:(struct CGPoint { double x0; double x1; })delta;
- (void)inertialUpdaterFinishedScrolling:(id)scrolling;
- (void)setContentOffset:(struct CGPoint { double x0; double x1; })offset animated:(BOOL)animated;
- (id /* block */)createApplierToAnimateToContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)updateWithCrownInputEvent:(id)event;
- (id)scrolledCenterBundleIdentifier;
- (void)setTargetHexToScrolledCenterForReason:(id)reason;
- (void)autoScroll;
- (struct CGPoint { double x0; double x1; })contentOffsetToCenterHex:(struct Hex { int x0; int x1; })hex;
- (void)attemptBeginDraggingNode:(id)node fromPoint:(struct CGPoint { double x0; double x1; })point;
- (void)beginDraggingView:(id)view atPoint:(struct CGPoint { double x0; double x1; })point node:(id)node;
- (void)dragToPoint:(struct CGPoint { double x0; double x1; })point translation:(struct CGPoint { double x0; double x1; })translation;
- (void)endDragging;
- (void)crownInputSequencerOffsetDidChange:(id)change;
- (struct Hex { int x0; int x1; })closestIconHexToHex:(struct Hex { int x0; int x1; })hex;
- (void)updatePPT:(id)ppt;
- (void)PPTPanAround:(id)around panDistance:(double)distance panCount:(long long)count;
@end

#endif /* CSLUIFieldOfIconsView_h */
