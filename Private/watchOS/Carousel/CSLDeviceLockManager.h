//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLDeviceLockManager_h
#define CSLDeviceLockManager_h
@import Foundation;

#include "CSLDeviceLockAssertionManager.h"
#include "CSLDeviceLockDisableAssertion.h"
#include "CSLDeviceLockStateProviding-Protocol.h"
#include "CSLLockedAirplaneModeController.h"
#include "MCProfileConnectionObserver-Protocol.h"

@class NPSManager, NSDate, NSHashTable, NSMutableSet, NSString, SWWakingTimer;

@interface CSLDeviceLockManager : NSObject<CSLDeviceLockStateProviding, MCProfileConnectionObserver> {
  /* instance variables */
  CSLDeviceLockAssertionManager *_assertionManager;
  int _lockState;
  CSLDeviceLockDisableAssertion *_transientPasscodeCheckingAssertion;
  CSLDeviceLockDisableAssertion *_screenOnAssertion;
  double _lastLockTimestamp;
  SWWakingTimer *_unblockTimer;
  BOOL _attemptingPasscodeUnlock;
  BOOL _pendingUnblock;
  BOOL _lastKnownBlockedState;
  NPSManager *_simplePasscodePreferenceSyncManager;
  CSLLockedAirplaneModeController *_airplaneSafeguard;
}

@property (readonly, nonatomic) BOOL isPasscodeLocked;
@property (readonly) NSHashTable *lockStateObservers;
@property (readonly) NSHashTable *blockStateObservers;
@property (nonatomic) long long secureMode;
@property (readonly, nonatomic) NSMutableSet *delaySecureModeAssertions;
@property (nonatomic) BOOL BKSSecureModeEnabled;
@property (readonly, nonatomic) NSDate *lastLockDate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstanceCreateIfNecessary:(BOOL)necessary;
+ (id)sharedInstance;
+ (id)_sharedInstanceIfExists;

/* instance methods */
- (long long)maxMinutesToBlock;
- (BOOL)attemptUnlockWithPasscode:(id)passcode outError:(id *)error;
- (void)obliterateDevice;
- (void)_noteBlockedStateMayHaveChanged;
- (BOOL)isBlocked;
- (BOOL)isPasscodeLockedOrBlocked;
- (BOOL)deviceHasPasscodeSet;
- (BOOL)_isPasscodeLockedUpdatingLockStateIfNeeded:(BOOL)needed;
- (void)passcodeLockNow:(id)now;
- (BOOL)hasActiveForceNoLockAssertion;
- (void)_updateDeviceLockState;
- (void)_enablePasscodeLockImmediately:(id)immediately;
- (void)_fullyUnblock;
- (void)_setSecureDisplayMode;
- (void)_commitSecureDisplayMode;
- (void)_setLockState:(int)state alwaysNotify:(BOOL)notify;
- (void)notifyLockState;
- (void)_noteBacklightWillTurnOn:(id)on;
- (void)_noteBacklightDidTurnOn:(id)on;
- (void)_noteBacklightDidTurnOff:(id)off;
- (void)_takeScreenOnAssertionIfNeeded;
- (BOOL)_addDeviceLockDisableAssertion:(id)assertion;
- (void)_removeDeviceLockDisableAssertion:(id)assertion;
- (void)profileConnectionDidReceivePasscodeChangedNotification:(id)notification userInfo:(id)info;
- (id)init;
- (void)dealloc;
- (BOOL)shouldShowLockScreen;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)_notifyDeviceLockStateChanged:(BOOL)changed;
- (void)_notifyBlockedStateChanged:(BOOL)changed;
- (id)delaySecureModeForReason:(id)reason;
- (void)notifyBlockState;
- (BOOL)isLockStateObserver:(id)observer;
- (BOOL)isBKSSecureModeEnabled;
@end

#endif /* CSLDeviceLockManager_h */
