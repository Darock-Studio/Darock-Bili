//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLStatusBarRemoteContextView_h
#define CSLStatusBarRemoteContextView_h
@import Foundation;

#include "UIView.h"
#include "BLSHBacklightSceneHostEnvironment-Protocol.h"
#include "CSLStatusBarAppContextView.h"
#include "CUISStatusViewDelegate-Protocol.h"

@class BLSBacklightSceneVisualState, CAContext, CSLPRFConcurrentObserverStore, NSArray, NSDate, NSString, NSUUID, RBSProcessIdentity;

@interface CSLStatusBarRemoteContextView : UIView<CUISStatusViewDelegate, BLSHBacklightSceneHostEnvironment> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSUUID *_uuid;
  NSArray *_layoutConstraints;
  CSLPRFConcurrentObserverStore *_observers;
}

@property (retain, nonatomic) CAContext *context;
@property (readonly, nonatomic) unsigned int contextID;
@property (readonly, nonatomic) NSString *debugName;
@property (retain, nonatomic) CSLStatusBarAppContextView *globalContextView;
@property BOOL alwaysOnEnabledForEnvironment;
@property BOOL liveUpdating;
@property BOOL unrestrictedFramerateUpdates;
@property BOOL displayBlanked;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *identifier;
@property (readonly) RBSProcessIdentity *budgetProcessIdentity;
@property (readonly) BOOL clientHasDelegate;
@property (readonly) BOOL clientActive;
@property (readonly) BLSBacklightSceneVisualState *visualState;
@property (readonly) NSDate *presentationDate;
@property (readonly) BOOL clientSupportsAlwaysOn;
@property (readonly) BOOL local;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame debugName:(id)name;
- (void)_withLock:(id /* block */)lock;
- (void)_updateConfigurationWithLock:(id /* block */)lock completion:(id /* block */)completion;
- (void)dealloc;
- (BOOL)_shouldReverseLayoutDirection;
- (void)setHidden:(BOOL)hidden;
- (void)setAlpha:(double)alpha;
- (BOOL)isClientActive;
- (BOOL)isAlwaysOnEnabledForEnvironment;
- (BOOL)isLiveUpdating;
- (BOOL)hasUnrestrictedFramerateUpdates;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)requestedFidelityForInactiveContentWithCompletion:(id /* block */)completion;
- (void)updateToVisualState:(id)state presentationDateSpecifier:(id)specifier animated:(BOOL)animated triggerEvent:(id)event touchTargetable:(BOOL)targetable sceneContentsUpdated:(id /* block */)updated performBacklightRamp:(id /* block */)ramp animationComplete:(id /* block */)complete;
- (void)requestDateSpecifiersForDateInterval:(id)interval previousPresentationDate:(id)date shouldReset:(BOOL)reset completion:(id /* block */)completion;
- (void)updateToDateSpecifier:(id)specifier sceneContentsUpdated:(id /* block */)updated;
- (void)clearPresentationDate;
- (void)deactivateClient;
- (void)clientDidRequestInvalidationForReason:(id)reason;
- (void)invalidateContentForReason:(id)reason;
- (void)willBeginRenderSession:(id)session;
- (void)willEndRenderSession:(id)session;
- (void)statusView:(id)view didUpdateActiveItem:(id)item;
- (BOOL)isDisplayBlanked;
@end

#endif /* CSLStatusBarRemoteContextView_h */
