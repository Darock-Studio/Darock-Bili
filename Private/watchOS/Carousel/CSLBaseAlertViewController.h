//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLBaseAlertViewController_h
#define CSLBaseAlertViewController_h
@import Foundation;

#include "CUISAlertViewController.h"
#include "CUISAlertAnimatedTransitioning-Protocol.h"
#include "CUISBulletinQuickLongLookDelegate-Protocol.h"
#include "_UIAlwaysOnEnvironmentObserver-Protocol.h"

@class BLSAlwaysOnTimeline, CLKUITimeLabel, CUISAlertBackgroundView, NSString;
@protocol UIViewController<CUISBulletinQuickLongLook;

@interface CSLBaseAlertViewController : CUISAlertViewController<_UIAlwaysOnEnvironmentObserver, CUISAlertAnimatedTransitioning, CUISBulletinQuickLongLookDelegate> {
  /* instance variables */
  BOOL _subviewVisibilityChanged;
  BLSAlwaysOnTimeline *_timeline;
}

@property (retain, nonatomic) CLKUITimeLabel *timeLabel;
@property (retain, nonatomic) CUISAlertBackgroundView *backgroundView;
@property (retain, nonatomic) UIViewController<CUISBulletinQuickLongLook> *contentController;
@property (nonatomic) struct CGPoint { double x0; double x1; } contentOffset;
@property (nonatomic) BOOL timeLabelEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;

/* instance methods */
- (id)initWithServiceName:(id)name;
- (void)dealloc;
- (void)deactivate;
- (void)loadView;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)viewWillLayoutSubviews;
- (BOOL)prefersStatusBarHidden;
- (id)animationControllerForPresentation;
- (id)animationControllerForDismissal;
- (void)fadeTimeLabelIfNeeded;
- (void)_resetSubviewsVisibiity;
- (void)_changeIdleTimeout:(double)timeout;
- (void)animateInPostTransitionIfNeeded;
- (void)animateInForInitialTransition:(id)transition;
- (void)animateAlertTransition:(id)transition;
- (double)alertTransitionDuration:(id)duration;
- (void)fadeOutWithCompletion:(id /* block */)completion;
- (void)animateOutWithContext:(id)context style:(unsigned long long)style;
- (void)_animateOutForActionWithCompletion:(id /* block */)completion;
- (void)_animateOccludedBannerWithCompletion:(id /* block */)completion;
- (void)_animateOutPlainWithCompletion:(id /* block */)completion;
- (void)_animateOutDefaultWithCompletion:(id /* block */)completion;
- (unsigned long long)animateOutStyleWithContext:(id)context;
- (BOOL)_contentOffsetPastTopThreshold:(double)threshold;
- (BOOL)_draggedPastTopThreshold;
- (void)animateOut:(id)out;
- (void)animateIn:(id)in;
- (void)didTapIconInQuickLongLook:(id)look;
- (void)didTapLongLookContentInQuickLongLook:(id)look;
- (void)didTapQuickLookInQuickLongLook:(id)look;
- (void)didSwipeToDismissInQuickLongLook:(id)look;
- (void)didDismissActionMenuInQuickLongLook:(id)look;
- (void)didMuteActionMenuInQuickLongLook:(id)look;
- (BOOL)isMutedBulletinInQuickLongLook:(id)look;
- (void)didPerformActionInQuickLongLook:(id)look;
- (void)quickLongLook:(id)look requestPerformActionResponse:(id)response completion:(id /* block */)completion;
- (void)quickLongLook:(id)look requestActionCompletionForActionResponse:(id)response;
- (void)quickLongLook:(id)look didPresentMode:(unsigned long long)mode;
- (void)quickLongLook:(id)look didScrollToContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)quickLongLook:(id)look didEndScrollingAtContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)requestDismissQuickLongLook:(id)look;
- (void)willBeginDraggingInQuickLongLook:(id)look;
- (id)alertBackground;
- (void)usePlainAnimationOnDismissalForQuickLongLook:(id)look;
- (void)quickLongLook:(id)look setTimeVisible:(BOOL)visible;
- (id)puic_timelinesForDateInterval:(id)interval;
- (void)_updateWithFrameSpecifier:(id)specifier;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
@end

#endif /* CSLBaseAlertViewController_h */
