//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLTransactionQueue_h
#define CSLTransactionQueue_h
@import Foundation;

#include "BSDescriptionProviding-Protocol.h"
#include "BSTransactionObserver-Protocol.h"
#include "CSLContinuingTransactions.h"
#include "CSLEventQueue.h"
#include "CSLEventQueueDelegate-Protocol.h"
#include "CSLTransactionQueue.h"
#include "CSLTransactionQueueDelegate-Protocol.h"
#include "CSLWorkspaceTransitionRequest.h"
#include "IOSSHLTransactionWatchdog.h"
#include "IOSSHLTransactionWatchdogDelegate-Protocol.h"
#include "IOSSHLTransactionWatchdogHandler.h"
#include "IOSSHLTransactionWatchdogHandlerDelegate-Protocol.h"

@class BSEventQueueLock, BSTransaction, CSLPRFConcurrentObserverStore, NSString;
@protocol OS_dispatch_queue;

@interface CSLTransactionQueue : NSObject<BSTransactionObserver, IOSSHLTransactionWatchdogDelegate, CSLEventQueueDelegate, IOSSHLTransactionWatchdogHandlerDelegate, BSDescriptionProviding> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  CSLEventQueue *_eventQueue;
  BSEventQueueLock *_eventQueueLock;
  BSEventQueueLock *_secondaryEventQueueLock;
  IOSSHLTransactionWatchdog *_transactionWatchdog;
  IOSSHLTransactionWatchdogHandler *_watchdogHandler;
  unsigned long long _stateHandler;
  CSLPRFConcurrentObserverStore *_transactionObservers;
}

@property (retain, nonatomic) NSObject<CSLTransactionQueueDelegate> *delegate;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) BOOL isBusyWithTransaction;
@property (readonly, nonatomic) BOOL shouldContinueAfterWatchdog;
@property (readonly, nonatomic) unsigned long long watchdogPolicy;
@property (readonly, nonatomic) CSLContinuingTransactions *continuingTransactions;
@property (retain, nonatomic) CSLTransactionQueue *secondaryQueueToLockWhileExecuting;
@property (readonly, nonatomic) BSTransaction *currentTransaction;
@property (readonly, nonatomic) CSLWorkspaceTransitionRequest *activeTransitionRequest;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithName:(id)name onQueue:(id)queue shouldContinueAfterWatchdog:(BOOL)watchdog;
- (id)initWithName:(id)name onQueue:(id)queue watchdogPolicy:(unsigned long long)policy;
- (void)addTransactionObserver:(id)observer;
- (void)removeTransactionObserver:(id)observer;
- (void)dealloc;
- (void)executeOrAppendTransaction:(id)transaction withName:(id)name;
- (void)executeOrInsertTransactionWithName:(id)name atPosition:(int)position fromFactory:(id /* block */)factory;
- (void)executeOrInsertEvent:(id)event atPosition:(int)position;
- (id)lockWithReason:(id)reason;
- (void)failCurrentTransactionWithReason:(id)reason;
- (void)cancelPendingTransactions;
- (BOOL)isBusy;
- (void)_setCurrentTransaction:(id)transaction;
- (void)_scheduleWatchdogWithTransaction:(id)transaction;
- (void)_clearCurrentTransaction;
- (void)_lockSecondaryQueue;
- (void)_unlockSecondaryQueue;
- (void)noteQueueDidLock;
- (void)noteQueueDidUnlock;
- (void)transactionWillBegin:(id)begin;
- (void)transactionDidBegin:(id)begin;
- (void)transactionDidFinishWork:(id)work;
- (void)transactionDidComplete:(id)complete;
- (void)watchdogFired:(id)fired;
- (BOOL)watchdogShouldFire:(id)fire declineReason:(id *)reason;
- (void)watchdogHandler:(id)handler didContinueAfterWatchdogForContext:(id)context;
- (void)watchdog:(id)watchdog timerFireDeclinedForReason:(id)reason;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)descriptionWithMultilinePrefix:(id)prefix;
- (id)descriptionBuilderWithMultilinePrefix:(id)prefix;
@end

#endif /* CSLTransactionQueue_h */
