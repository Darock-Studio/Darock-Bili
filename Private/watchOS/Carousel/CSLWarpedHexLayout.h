//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLWarpedHexLayout_h
#define CSLWarpedHexLayout_h
@import Foundation;

#include "CSLHexLayout.h"
#include "CSLUniformHexLayout.h"

@protocol {vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>="__value_"^}}, {vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>="__value_"^}};

@interface CSLWarpedHexLayout : CSLHexLayout {
  /* instance variables */
  double _screenScale;
  struct vector<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>> { " *__begin_; _ x0; _ x1; e x2; in double x3; _ x4; _ ^; _ x5; e x6; in double x7; _ x8; char x9; a x10; p x11; _ x12; _ {__compressed_pair<float * __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>>=; _ x13; void x14; a x15; long x16; u x17; e x18; _ x19; " x20; } * x21; } _defaultIconPositions;
  struct vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>> { " *__begin_; _ x0; _ x1; e x2; in double x3; _ x4; _ ^; _ x5; e x6; in double x7; _ x8; char x9; a x10; p x11; _ x12; _ {__compressed_pair<float * __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>>=; _ x13; void x14; a x15; long x16; u x17; e x18; _ x19; " x20; } * x21; } _xYDiameterSplines;
}

@property (readonly, nonatomic) CSLUniformHexLayout *uniformLayout;

/* instance methods */
- (id)initWithUniformLayout:(id)layout;
- (struct { double x0; })layoutAttributesForItemAtHex:(struct Hex { int x0; int x1; })hex;
- (struct Hex { int x0; int x1; })hexAtPoint:(struct CGPoint { double x0; double x1; })point;
- (struct CGPoint { double x0; double x1; })unwarpPoint:(struct CGPoint { double x0; double x1; })point;
- (3)warpPixelForPoint:;
@end

#endif /* CSLWarpedHexLayout_h */
