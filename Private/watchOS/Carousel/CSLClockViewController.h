//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLClockViewController_h
#define CSLClockViewController_h
@import Foundation;

#include "UIViewController.h"
#include "BLSBacklightStateObserving-Protocol.h"
#include "CSLBackdropOverlay.h"
#include "CSLClockBlankingWindow.h"
#include "CSLClockHostingManager.h"
#include "CSLClockHostingManagerDelegate-Protocol.h"
#include "CSLClockManager.h"
#include "CSLClockSceneSettingsBinder.h"
#include "CSLClockUpdating-Protocol.h"
#include "CSLClockWorkspaceCoordinator.h"
#include "CSLClockWorkspaceCoordinatorDelegate-Protocol.h"
#include "CSLMainClockUIStateMachine.h"
#include "CSLMainClockUIStateMachineDelegate-Protocol.h"
#include "CSLPIButtonHandlerProtocol-Protocol.h"
#include "CSLPortalView.h"
#include "CSLSAlwaysOnTapToWakeProtocol-Protocol.h"
#include "CSLSensorActivityIndicatorSceneCoordinator.h"
#include "CSLSensorActivityIndicatorSceneCoordinatorDelegate-Protocol.h"
#include "CSLUIOverlayAssertion.h"
#include "CUISSiriContextProvider-Protocol.h"
#include "FBSceneObserver-Protocol.h"
#include "UIScenePresenter-Protocol.h"

@class CSLPIBacklightAssertion, FBScene, NSString, NSTimer, NSXPCListener, UIView, UIWindowScene;
@protocol UIView<CSLClockHosting;

@interface CSLClockViewController : UIViewController<FBSceneObserver, CSLPIButtonHandlerProtocol, CUISSiriContextProvider, CSLClockWorkspaceCoordinatorDelegate, CSLClockHostingManagerDelegate, CSLMainClockUIStateMachineDelegate, BLSBacklightStateObserving, CSLSAlwaysOnTapToWakeProtocol, CSLSensorActivityIndicatorSceneCoordinatorDelegate, CSLClockUpdating> {
  /* instance variables */
  CSLClockWorkspaceCoordinator *_workspaceCoordinator;
  UIView<CSLClockHosting> *_hostView;
  NSXPCListener *_listener;
  BOOL _clockPaused;
  BOOL _allowsClockContentBeforeFirstCommit;
  FBScene *_clockScene;
  CSLClockSceneSettingsBinder *_clockSceneSettingsBinder;
  UIWindowScene *_blankingWindowScene;
  CSLClockManager *_clockManager;
  CSLMainClockUIStateMachine *_mainClockUIStateMachine;
  NSObject<UIScenePresenter> *_scenePresenter;
  CSLUIOverlayAssertion *_logoAssertion;
  NSTimer *_logoAssertionWatchdog;
  UIView *_launchSnapshotView;
  CSLPIBacklightAssertion *_clockfaceDiedBacklightAssertion;
  long long _contentState;
  CSLSensorActivityIndicatorSceneCoordinator *_sensorActivitySceneCoordinator;
  UIView *_transitionContainer;
  CSLPortalView *_transitionPortal;
  CSLBackdropOverlay *_transitionOverlay;
}

@property (retain) CSLClockBlankingWindow *blankingWindow;
@property (readonly, nonatomic) CSLClockHostingManager *hostingManager;
@property (nonatomic) BOOL lockScreenBorrowed;
@property (nonatomic) unsigned int pauseReasons;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedClockViewControllerProvider;
+ (id)sharedClockViewController;

/* instance methods */
- (id)init;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)enableSlowMode;
- (void)disableSlowMode;
- (void)_handleSignificantAppearanceChange:(id)change;
- (void)_logoWatchdogTimerFired:(id)fired;
- (void)handleClockDidBeginEditing:(id)editing;
- (void)handleClockDidEndEditing:(id)editing;
- (void)handleClockDidBeginInteractive:(id)interactive;
- (void)handleClockDidEndInteractive:(id)interactive;
- (BOOL)handleCrownPressed;
- (id)currentFaceDescription;
- (id)currentFaceClass;
- (id)powerLogDescription;
- (id)siriContextFaceIdentifier;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })launchRectForBundleIdentifier:(id)identifier transitionReason:(unsigned long long)reason;
- (BOOL)currentFaceProvidesStickiness:(id)stickiness;
- (void)scene:(id)scene didUpdateClientSettingsWithDiff:(id)diff oldClientSettings:(id)settings transitionContext:(id)context;
- (void)sceneContentStateDidChange:(id)change;
- (void)sceneWillDeactivate:(id)deactivate withError:(id)error;
- (void)clockManagerDidInitialize:(id)initialize;
- (BOOL)handleButton:(unsigned long long)button eventType:(unsigned long long)type firstDownTime:(unsigned long long)time lastUpTime:(unsigned long long)time;
- (id)createSiriContext;
- (void)workspaceCoordinatorDidLaunchClock:(id)clock;
- (void)workspaceCoordinatorDidSkipLaunchingClock:(id)clock;
- (unsigned int)pausedReasonsForWorkspaceCoordinator:(id)coordinator;
- (void)stateMachineDidUpdateEffectiveVisibility:(id)visibility;
- (void)hostingManager:(id)manager willActivateRequester:(id)requester;
- (void)backlight:(id)backlight didCompleteUpdateToState:(long long)state forEvent:(id)event;
- (BOOL)handleAlwaysOnTapToWakeEvent:(id)event;
- (BOOL)prefersStatusBarHidden;
- (long long)puic_preferredSensorActivityIndicatorTimeStyle;
- (id)puic_preferredSensorActivityIndicatorPlacement;
- (id)puic_preferredSensorActivityIndicatorAttribution;
- (long long)puic_statusBarPlacement;
- (void)sensorActivityIndicatorSceneCoordinatorDidUpdate:(id)update;
- (BOOL)isLockScreenBorrowed;
@end

#endif /* CSLClockViewController_h */
