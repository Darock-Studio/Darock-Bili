//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 571.0.0.0.0
//
#ifndef ETTapMessage_h
#define ETTapMessage_h
@import Foundation;

#include "ETMessage.h"

@class NSMutableArray, NSTimer, SKFieldNode, SKScene;
@protocol {vector<CGPoint, std::allocator<CGPoint>>="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::allocator<CGPoint>>="__value_"^{CGPoint}}}, {vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}};

@interface ETTapMessage : ETMessage {
  /* instance variables */
  SKScene *_preVisualizeScene;
  SKFieldNode *_noiseField;
  struct vector<CGPoint, std::allocator<CGPoint>> { struct CGPoint *__begin_; struct CGPoint *__end_; struct __compressed_pair<CGPoint *, std::allocator<CGPoint>> { struct CGPoint *__value_; } __end_cap_; } _points;
  struct vector<double, std::allocator<double>> { double *__begin_; double *__end_; struct __compressed_pair<double *, std::allocator<double>> { double *__value_; } __end_cap_; } _times;
  NSMutableArray *_colors;
  double _baseTime;
  NSTimer *_soundTimer;
  unsigned long long _soundIndex;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _noiseFieldLock;
}

@property (readonly, nonatomic) unsigned long long tapCount;

/* class methods */
+ (unsigned short)messageType;

/* instance methods */
- (id)init;
- (id)initWithArchiveData:(id)data;
- (id)archiveData;
- (struct CGPoint { double x0; double x1; })pointAtIndex:(unsigned long long)index;
- (double)timeDeltaAtIndex:(unsigned long long)index;
- (void)addTapAtPoint:(struct CGPoint { double x0; double x1; })point time:(double)time color:(id)color;
- (BOOL)reachedSizeLimit;
- (id)messageTypeAsString;
- (void)preVisualizeInScene:(id)scene;
- (void)displayInScene:(id)scene;
- (id)_animateCircleInner0:(double)inner0 inner1:(double)inner1 outer0:(double)outer0 outer1:(double)outer1 duration:(double)duration;
- (void)_displayInScene:(id)scene point:(struct CGPoint { double x0; double x1; })point color:(id)color filled:(BOOL)filled withWisp:(BOOL)wisp;
- (unsigned int)hapticSoundID;
- (double)messageDuration;
@end

#endif /* ETTapMessage_h */
