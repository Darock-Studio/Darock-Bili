//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 571.0.0.0.0
//
#ifndef ETCanvasView_h
#define ETCanvasView_h
@import Foundation;

#include "UIView.h"
#include "DTSSceneView.h"
#include "ETAngerMessage.h"
#include "ETCanvasViewDelegate-Protocol.h"
#include "ETGLSketchView.h"
#include "ETHeartbeatMessage.h"
#include "ETKissMessage.h"
#include "ETMessage.h"
#include "ETMessageDelegate-Protocol.h"
#include "ETTapMessage.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class AVPlayerLayer, NSMutableDictionary, NSMutableSet, NSString, NSTimer, SKScene, UIColor, UIImageView, UILongPressGestureRecognizer, UITapGestureRecognizer, UITouch, UIView;
@protocol ETMessageTimeSource;

@interface ETCanvasView : UIView<ETMessageDelegate, UIGestureRecognizerDelegate> {
  /* instance variables */
  NSMutableSet *_playingMessages;
  ETGLSketchView *_currentSketchView;
  ETTapMessage *_currentTaps;
  ETHeartbeatMessage *_currentHeartbeat;
  NSTimer *_heartbeatDurationTimer;
  UILongPressGestureRecognizer *_heartbeatRecognizer;
  struct CGPoint { double x; double y; } _heartbeatStartCenter;
  double _lastActivityTimestamp;
  double _touchesBeganTimestamp;
  NSTimer *_sendMessageTimer;
  NSTimer *_idleTimer;
  BOOL _setAlwaysPaused;
  unsigned short _messageType;
  struct CGPoint { double x; double y; } _lastPt;
  UITouch *_drawingTouch;
  BOOL _drawingTouchStartedStroke;
  double _drawingTouchMovedDistance;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _ignoredTouchesRect;
  BOOL _didIgnoreTouchesBegan;
  BOOL _ignoreTouchesUntilAllTouchesEnded;
  NSMutableSet *_touchesDown;
  NSMutableDictionary *_messageIdentifierToDoodleView;
  UITapGestureRecognizer *_tapRecognizer;
  NSTimer *_fastTapAllowableMovementTimer;
  double _lastFastTapTimestamp;
  UITapGestureRecognizer *_kissRecognizer;
  ETKissMessage *_currentKissMessage;
  UILongPressGestureRecognizer *_angerRecognizer;
  ETAngerMessage *_currentAnger;
  NSTimer *_angerDurationLimitTimer;
  double _wispDelay;
  BOOL _sketchDidReachSizeLimit;
  SKScene *_scene;
  DTSSceneView *_sceneView;
  UIImageView *_photoView;
  UIView *_videoView;
  AVPlayerLayer *_videoLayer;
}

@property (weak, nonatomic) NSObject<ETCanvasViewDelegate> *canvasDelegate;
@property (weak, nonatomic) NSObject<ETMessageTimeSource> *timeSource;
@property (retain, nonatomic) UIColor *drawingColor;
@property (nonatomic) BOOL canComposeHeartbeat;
@property (nonatomic) BOOL canComposeTap;
@property (nonatomic) BOOL canComposeKiss;
@property (nonatomic) BOOL canComposeAnger;
@property (readonly, nonatomic) BOOL isComposing;
@property (nonatomic) BOOL usesMediaAppearance;
@property (retain, nonatomic) ETMessage *parentMessage;
@property (nonatomic) BOOL paused;
@property (nonatomic) BOOL useFastVerticalWisp;
@property (nonatomic) BOOL angerUsesForceTouch;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)showPhotoForImage:(id)image;
- (void)hidePhoto;
- (void)showVideoForPlayer:(id)player;
- (void)hideVideo;
- (void)_updateVideoViewFrame;
- (void)_updatePhotoViewFrame;
- (void)layoutSubviews;
- (BOOL)_sketchInProgress;
- (BOOL)isComposingHeartbeat;
- (BOOL)isComposingSketch;
- (BOOL)_tapsInProgress;
- (void)_startDoodleMessageCompositionAtTime:(double)time;
- (void)startDoodleMessageComposition;
- (void)_setIsComposingMessageOfType:(unsigned short)type;
- (void)_updateRecognizersAtEndOfComposition;
- (void)_endMessage:(id)message withSend:(BOOL)send;
- (void)dealloc;
- (void)_setSketchesPaused:(BOOL)paused;
- (BOOL)_sketchesPaused;
- (void)setAlwaysPaused:(BOOL)paused;
- (void)wispVisibleSketchViewsWithCompletion:(id /* block */)completion;
- (void)_animateOutSketchView:(id)view withCompletion:(id /* block */)completion;
- (void)_clearDoodleViewForMessage:(id)message;
- (void)clearCanvasAnimated:(BOOL)animated;
- (void)_startCheckForIdleTimer;
- (void)_stopCheckForIdleTimer;
- (void)_checkForIdle;
- (BOOL)_canComposeExclusiveMessage;
- (BOOL)_isTapTooRecentAfterKissGesture;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (void)updateIgnoredTouchesRectForStatusBarSize:(struct CGSize { double x0; double x1; })size;
- (void)_startFastTapAllowableMovementTimer;
- (void)_fastTapAllowableMovementTimerFired;
- (struct CGPoint { double x0; double x1; })_normalizedGesturePoint:(id)point;
- (void)_angerRecognized:(id)recognized;
- (void)_sendAnger;
- (void)_showAngerAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_hideAnger;
- (void)_angerDurationLimitTimerFired;
- (void)_kissRecognized:(id)recognized;
- (void)_tapRecognized:(id)recognized;
- (BOOL)_areRecognizersTrackingMultipleFingers;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)touchesMoved:(id)moved withEvent:(id)event;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (void)_doodleEndedWithTouches:(id)touches cancelled:(BOOL)cancelled;
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;
- (void)_createSketchViewWithColor:(id)color time:(double)time message:(id)message;
- (void)handleTapAtX:(float)x Y:(float)y color:(id)color time:(double)time isRemote:(BOOL)remote;
- (void)handlePanAtX:(float)x Y:(float)y color:(id)color time:(double)time state:(long long)state isRemote:(BOOL)remote;
- (void)handleDotAtX:(float)x Y:(float)y color:(id)color time:(double)time isRemote:(BOOL)remote;
- (void)_startSendMessageTimer;
- (void)_clearSendMessageTimer;
- (BOOL)_sendMessageTimerFired;
- (void)endMessageComposition;
- (id)composedSketchMessage;
- (void)_sendSketch;
- (void)_sendTaps;
- (void)sendCurrentMessage;
- (double)_angleOfRotationBetweenTwoFingers:(id)fingers;
- (struct CGPoint { double x0; double x1; })_viewPointNormalizedInSceneSpace:(struct CGPoint { double x0; double x1; })space;
- (void)_heartbeatRecognized:(id)recognized;
- (void)_sendKiss;
- (void)_sendHeartbeat;
- (void)updateCurrentMessageWithHeartRate:(unsigned long long)rate;
- (void)_showHeartbeatAtNormalizedPoint:(struct CGPoint { double x0; double x1; })point rotation:(double)rotation;
- (void)_hideHeartbeat;
- (void)_hideHeartbeatTimerFired;
- (void)playTestStrokeWithColor:(id)color duration:(double)duration;
- (void)playMessage:(id)message;
- (void)messageWillReachSizeLimit:(id)limit;
- (void)messageWillStopPlaying:(id)playing;
- (void)messageDidStopPlaying:(id)playing;
- (void)willMoveToWindow:(id)window;
- (void)setForceTouchEnabled:(BOOL)enabled;
- (void)_configureAngerRecognizer;
- (void)traitCollectionDidChange:(id)change;
- (BOOL)isPaused;
@end

#endif /* ETCanvasView_h */
