//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 571.0.0.0.0
//
#ifndef ETMessage_h
#define ETMessage_h
@import Foundation;

#include "ETMessage.h"
#include "ETMessageDelegate-Protocol.h"

@class NSMutableSet, NSString, UIColor;
@protocol ETMessageTimeSource;

@interface ETMessage : NSObject {
  /* instance variables */
  id /* block */ _soundCompletionHandler;
  NSMutableSet *_childrenDelayingWisp;
}

@property (readonly, nonatomic) unsigned short messageType;
@property (readonly, nonatomic) unsigned long long messageVersion;
@property (nonatomic) double timeCreated;
@property (nonatomic) double sendTime;
@property (nonatomic) double startDelay;
@property (nonatomic) BOOL supportsPlaybackTimeOffset;
@property (retain, nonatomic) NSString *identifier;
@property (nonatomic) BOOL missedDuringPlayback;
@property (readonly, nonatomic) BOOL shouldLoopDuringPlayback;
@property (retain, nonatomic) UIColor *color;
@property (nonatomic) BOOL renderingOffscreen;
@property (nonatomic) BOOL renderingOffscreenOpaque;
@property (readonly, nonatomic) double messageDuration;
@property (weak, nonatomic) NSObject<ETMessageDelegate> *delegate;
@property (weak, nonatomic) NSObject<ETMessageTimeSource> *timeSource;
@property (nonatomic) BOOL delayWisp;
@property (weak, nonatomic) ETMessage *parentMessage;
@property (readonly, nonatomic) BOOL animated;
@property (nonatomic) BOOL mute;

/* class methods */
+ (unsigned short)messageType;
+ (id)unarchive:(id)unarchive;

/* instance methods */
- (id)init;
- (id)initWithArchiveData:(id)data;
- (id)archiveData;
- (id)archive;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)preVisualizeInScene:(id)scene;
- (void)displayInScene:(id)scene;
- (id)messageTypeAsString;
- (id)description;
- (BOOL)sendTimeIsValid;
- (unsigned int)hapticSoundID;
- (void)_stopAudioPlayback;
- (void)_startAudioPlayback;
- (BOOL)reachedSizeLimit;
- (struct CGPoint { double x0; double x1; })scenePointFromNormalizedPoint:(struct CGPoint { double x0; double x1; })point inScene:(id)scene;
- (void)stopPlaying;
- (void)wispChildren;
- (void)childMessageDidCompleteWisp:(id)wisp;
- (void)childMessageDidDelayWisp:(id)wisp;
- (BOOL)hasWispingChildren;
- (BOOL)isAnimated;
- (BOOL)isRenderingOffscreen;
- (BOOL)isRenderingOffscreenOpaque;
@end

#endif /* ETMessage_h */
