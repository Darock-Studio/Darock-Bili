//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.12.1.0.0
//
#ifndef DEExecutor_h
#define DEExecutor_h
@import Foundation;

#include "DEDistribution.h"
#include "DEExecutionContext.h"
#include "DEPatternContext.h"

@class NSDictionary, NSString;

@interface DEExecutor : NSObject

@property (retain, nonatomic) NSString *templateDir;
@property (retain, nonatomic) NSString *catId;
@property (retain, nonatomic) NSString *locale;
@property (retain, nonatomic) NSDictionary *dialogMetadata;
@property (retain, nonatomic) NSString *interactionId;
@property (retain, nonatomic) NSString *patternId;
@property (retain, nonatomic) NSString *responseMode;
@property (retain, nonatomic) NSDictionary *parameters;
@property (retain, nonatomic) NSDictionary *globalParameters;
@property (retain, nonatomic) NSDictionary *userSettings;
@property (retain, nonatomic) NSString *pluginName;
@property (retain, nonatomic) DEExecutionContext *context;
@property (copy, nonatomic) id /* block */ callback;
@property (nonatomic) BOOL visual;
@property (nonatomic) BOOL debug;
@property (nonatomic) BOOL test;
@property (nonatomic) BOOL resetState;
@property (nonatomic) BOOL multiuser;
@property (nonatomic) BOOL grounding;
@property (nonatomic) BOOL enableUpdates;
@property (nonatomic) BOOL createTrace;
@property (nonatomic) BOOL switchFallthrough;
@property (nonatomic) BOOL includeKeywords;
@property (retain, nonatomic) NSString *voiceGender;
@property (nonatomic) unsigned int randomSeed;
@property (nonatomic) long long currentTime;
@property (retain, nonatomic) DEDistribution *distribution;
@property (retain, nonatomic) NSDictionary *customPronunciations;
@property (nonatomic) BOOL deterministic;
@property (retain, nonatomic) DEPatternContext *patternContext;
@property (nonatomic) BOOL isSpotlight;
@property (nonatomic) BOOL isLabelMode;

/* class methods */
+ (void)initialize;
+ (void)preload;
+ (id)bundleTemplateDir:(id)dir;
+ (id /* block */)prepareCallback:(id /* block */)callback forContext:(void *)context;
+ (void)executeWithJson:(id)json paramsString:(id)string localeString:(id)string callback:(id /* block */)callback completionBlock:(id /* block */)block;
+ (void)executeWithJson:(id)json callback:(id /* block */)callback completionBlock:(id /* block */)block;
+ (void)executeWithJson:(id)json completionBlock:(id /* block */)block;

/* instance methods */
- (void)LogCurareCATExecution:(const void *)catexecution;
- (id)init;
- (id)getRequestJSON;
- (struct shared_ptr<siri::dialogengine::Context> { struct Context * x0; struct __shared_weak_count * x1; })getContext:(struct ElapsedTimer { unsigned long long x0; struct TimeStamp { double x0; double x1; } x1; struct optional<siri::dialogengine::ElapsedTimer::TimeStamp> { union { char x0; struct TimeStamp { double x0; double x1; } x1; } x0; BOOL x1; } x2; })context;
- (void)updateContext:(void *)context paramsPath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })path localePath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })path visualPath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })path;
- (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })consumeContextForJson:(struct shared_ptr<siri::dialogengine::Context> { struct Context * x0; struct __shared_weak_count * x1; })json;
- (id)consumeContext:(struct shared_ptr<siri::dialogengine::Context> { struct Context * x0; struct __shared_weak_count * x1; })context paramsPath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })path localePath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })path visualPath:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })path;
- (void)executeWithCompletionBlock:(id /* block */)block;
- (id)execute;
- (void)executeWithParams:(id)params locale:(id)locale completionBlock:(id /* block */)block;
- (id)executeWithParams:(id)params locale:(id)locale;
- (id)executeVisual:(id)visual;
- (void)executeVisual:(id)visual completionBlock:(id /* block */)block;
- (id)executeWithParams:(id)params locale:(id)locale visual:(id)visual;
@end

#endif /* DEExecutor_h */
