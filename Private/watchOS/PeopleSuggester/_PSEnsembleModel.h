//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1852.4.7.0.3
//
#ifndef _PSEnsembleModel_h
#define _PSEnsembleModel_h
@import Foundation;

#include "_PSConfidenceModelForSharing.h"
#include "_PSContactResolver.h"
#include "_PSCoreMLScoringModel.h"
#include "_PSFeatureCache.h"
#include "_PSHeuristics.h"
#include "_PSKNNModel.h"
#include "_PSRuleMiningModel.h"
#include "_PSSharingContactRankerModel.h"

@class CNContactStore, NSArray, NSDictionary, NSNumber, NSSet, NSString, NSUserDefaults, PPContactStore, PPTopicStore, _CDInteractionCache, _CDInteractionStore;
@protocol OS_dispatch_queue, _DKKnowledgeQuerying><_DKKnowledgeSaving;

@interface _PSEnsembleModel : NSObject {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _visualIdentifierLock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _populateCacheLock;
  _PSFeatureCache *_featureCache;
  NSObject<OS_dispatch_queue> *_queue;
}

@property (retain) NSNumber *maxCandidatesFromShareSheetCache;
@property (retain) NSNumber *maxCandidatesFromMessageCache;
@property (retain) _PSCoreMLScoringModel *coreMLScoringModel;
@property (retain) _PSRuleMiningModel *ruleMiningModel;
@property (retain) _PSSharingContactRankerModel *sharingContactRankerModel;
@property (retain) _PSConfidenceModelForSharing *confidenceModelForSharing;
@property BOOL PSConfidenceModelInUse;
@property BOOL useSyntheticSharingInteractions;
@property (retain) _PSKNNModel *knnModel;
@property (retain) _PSKNNModel *knnMapsModel;
@property (retain) _PSKNNModel *knnZkwModel;
@property (retain) _PSKNNModel *knnNameOrContactRankerModel;
@property (retain) _PSKNNModel *knnSiriNLContactRankerModel;
@property (retain) _PSHeuristics *heuristics;
@property (retain) NSSet *cachedSupportedBundleIDs;
@property (retain) _PSContactResolver *contactResolver;
@property (nonatomic) BOOL allowNonSupportedBundleIDs;
@property (retain) NSDictionary *psConfig;
@property (retain) NSDictionary *psConfigForAdaptableModel;
@property (retain, nonatomic) NSObject<_DKKnowledgeQuerying><_DKKnowledgeSaving> *knowledgeStore;
@property (retain, nonatomic) _CDInteractionStore *interactionStore;
@property (retain, nonatomic) PPTopicStore *topicStore;
@property (retain, nonatomic) PPContactStore *portraitContactStore;
@property (retain) _CDInteractionCache *messageInteractionCache;
@property (retain) _CDInteractionCache *shareInteractionCache;
@property (retain) _CDInteractionCache *allOtherInteractionCache;
@property (retain, nonatomic) NSUserDefaults *peopleSuggesterDefaults;
@property (retain, nonatomic) CNContactStore *contactStore;
@property (retain, nonatomic) NSArray *defaultContactKeysToFetch;
@property (retain, nonatomic) NSString *trialID;
@property (retain, nonatomic) NSString *trialExperimentId;
@property (retain, nonatomic) NSString *trialDeploymentId;
@property (retain, nonatomic) NSString *trialTreatmentId;
@property (retain, nonatomic) NSArray *shareSheetMechanisms;
@property (retain, nonatomic) NSArray *messageDirections;
@property (retain, nonatomic) NSNumber *messageMechanism;
@property (retain, nonatomic) NSArray *allOtherInteractionCacheMechanism;
@property (retain, nonatomic) NSArray *allOtherInteractionCacheDirections;

/* instance methods */
- (id)init;
- (void)loadDefaultPSConfig;
- (BOOL)loadPSConfigPath:(id)path;
- (BOOL)loadPSConfig:(id)psconfig;
- (void)loadDefaultAdaptableModelConfig;
- (void)updateTrialID:(id)id;
- (BOOL)coreMLModelNeedsDurableFeatures;
- (BOOL)allowConcurrentReads;
- (id)fetchShareSheetSupportedBundleIDs;
- (void)populateCaches;
- (void)populateCachesWithSupportedBundleIDs:(id)ids;
- (void)refreshCaches;
- (void)freeCachesIfNotCoreDuetDaemon;
- (void)freeCaches;
- (id)predictWithPredictionContext:(id)context maxSuggestions:(unsigned long long)suggestions;
- (id)familyPredictionsWithMaxSuggestions:(unsigned long long)suggestions predictionContext:(id)context;
- (void)setPeopleAnalysisFromAssetsWithPredictionContext:(id)context identifiersOfPeopleInPhotos:(id)photos;
- (void)setPhotoAnalysisFromAssetsWithPredictionContext:(id)context;
- (id)fetchSupportedBundleIDsWithPredictionContextFilters:(id)filters;
- (void)getPhotoBasedFeatures:(id)features;
- (id /* block */)getPhotoBasedFeaturesAsync:(id)async withTimeout:(double)timeout;
- (void)getCoreMLSuggestionProxiesWithPredictionContext:(id)context modelSuggestionProxiesDict:(id)dict candidateToFeatureVectorDictGetter:(id /* block */)getter;
- (void)getHeuristicSuggestionProxies:(id)proxies supportedBundleIDs:(id)ids modelSuggestionProxiesDict:(id)dict;
- (void)getRuleMiningSuggestionProxies:(id)proxies supportedBundleIDs:(id)ids modelSuggestionProxiesDict:(id)dict;
- (void)getKnnSuggestionProxies:(id)proxies supportedBundleIDs:(id)ids modelSuggestionProxiesDict:(id)dict;
- (void)getOtherSuggestionProxies:(id)proxies supportedBundleIDs:(id)ids modelSuggestionProxiesDict:(id)dict;
- (id)getModelProxiesArrayWithPredictionContext:(id)context;
- (id)getModelSuggestionsProxyDictWithModelProxiesArray:(id)array;
- (id)getMeContactIdentifier;
- (id)predictWithPredictionContext:(id)context maxSuggestions:(unsigned long long)suggestions contactKeysToFetch:(id)fetch;
- (void)addAdaptedModelUsageInfoToSuggestions:(id)suggestions;
- (int)modelProxyToVirtualFeatureStoreFeature:(id)feature;
- (void)addTrialInfoToPredictionContext:(id)context;
- (void)addExtraInformationWithSuggestions:(id)suggestions modelSuggestionProxiesDict:(id)dict;
- (void)addUTIInfo:(id)utiinfo predictionContext:(id)context;
- (void)addSupportedBundleIDs:(id)ids;
- (id)suggestionsFromSuggestionProxies:(id)proxies supportedBundleIDs:(id)ids contactKeysToFetch:(id)fetch meContactIdentifier:(id)identifier maxSuggestions:(unsigned long long)suggestions;
- (BOOL)excludeSuggestionWithConversationId:(id)id;
- (id)mergedSuggestionsWithFamilySuggestions:(id)suggestions shareSheetSuggestions:(id)suggestions maxSuggestions:(unsigned long long)suggestions supportedBundleIds:(id)ids;
- (id)predictWithMapsPredictionContext:(id)context maxSuggestions:(unsigned long long)suggestions;
- (id)rerankMapsSuggestions:(id)suggestions usingPredictionContext:(id)context contactResolver:(id)resolver;
- (id)mapsSuggestionArrayWithArray:(id)array appendingUniqueElementsFromArray:(id)array contactResolver:(id)resolver meContactId:(id)id;
- (id)suggestZKWSuggestionsWithPredictionContext:(id)context maxSuggestions:(unsigned long long)suggestions;
- (id)_knnZKWSuggestionsWithPredictionContext:(id)context modelConfiguration:(id)configuration maxSuggestions:(unsigned long long)suggestions;
- (id)rankedGlobalSuggestionsWithPredictionContext:(id)context contactsOnly:(BOOL)only maxSuggestions:(unsigned long long)suggestions excludeBackfillSuggestions:(BOOL)suggestions;
- (id)rankedGlobalSuggestionsWithPredictionContext:(id)context contactsOnly:(BOOL)only maxSuggestions:(unsigned long long)suggestions;
- (id)rankedGlobalSuggestionsForSiriNLWithPredictionContext:(id)context maxSuggestions:(unsigned long long)suggestions interactionId:(id)id;
- (id)rankedNameSuggestionsWithPredictionContext:(id)context name:(id)name;
- (id)rankedAutocompleteSuggestionsFromContext:(id)context candidates:(id)candidates;
- (id)autocompleteSearchResultsWithPredictionContext:(id)context;
- (id)rankedSiriMLCRHandles:(id)mlcrhandles context:(id)context;
- (id)rankedHandlesFromCandidateHandles:(id)handles;
- (id)appExtensionSuggestionsFromContext:(id)context;
- (id)candidatesForShareSheetRanking;
- (id)computeEphemeralFeaturesWithPredictionContext:(id)context;
- (id)validateCoreMLModelWithRawInput:(id)input predictionContext:(id)context;
@end

#endif /* _PSEnsembleModel_h */
