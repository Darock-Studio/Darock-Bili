//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tools: [ld (857.1), ld (902.8)]
//    - LC_SOURCE_VERSION: 981.5.1.0.0
//
#ifndef AAURLSession_h
#define AAURLSession_h
@import Foundation;

#include "NSURLSessionDataDelegate-Protocol.h"
#include "NSURLSessionDelegate-Protocol.h"
#include "NSURLSessionTaskDelegate-Protocol.h"

@class NSMutableDictionary, NSString, NSURLSession;
@protocol OS_dispatch_queue;

@interface AAURLSession : NSObject<NSURLSessionDataDelegate, NSURLSessionDelegate, NSURLSessionTaskDelegate> {
  /* instance variables */
  BOOL _requiresSigning;
  BOOL _requiresICSSPinning;
  BOOL _requiresUrlCache;
  NSURLSession *_session;
  NSObject<OS_dispatch_queue> *_sessionQueue;
  NSMutableDictionary *_pendingSessionOperations;
}

@property (readonly, nonatomic) NSURLSession *urlSession;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedSession;
+ (id)sharedSigningSession;
+ (id)sharedPinningSession;
+ (id)sharedPinningOnlySession;
+ (id)sharedSessionWithNoUrlCache;

/* instance methods */
- (id)init;
- (id)_initRequiringSigning:(BOOL)signing;
- (id)_initRequiringSigning:(BOOL)signing requiresPinning:(BOOL)pinning;
- (id)_initRequiringSigning:(BOOL)signing requiresPinning:(BOOL)pinning requiresUrlCache:(BOOL)cache;
- (id)initForProxiedDevice:(id)device;
- (id)initForProxiedDevice:(id)device anisetteDataProvider:(id)provider;
- (void)resetSessionCache;
- (id)dataTaskWithURL:(id)url completion:(id /* block */)completion;
- (id)dataTaskWithRequest:(id)request completion:(id /* block */)completion;
- (id)bodyTaskWithURL:(id)url completion:(id /* block */)completion;
- (id)bodyTaskWithRequest:(id)request completion:(id /* block */)completion;
- (id)_enqueueRequest:(id)request completion:(id /* block */)completion;
- (void)_sessionQueue_enqueueTask:(id)task completion:(id /* block */)completion;
- (void)_sessionQueue_updateTask:(id)task withData:(id)data;
- (void)_sessionQueue_dequeueTask:(id)task withResponse:(id)response error:(id)error;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)URLSession:(id)urlsession didBecomeInvalidWithError:(id)error;
- (void)URLSession:(id)urlsession didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithError:(id)error;
@end

#endif /* AAURLSession_h */
