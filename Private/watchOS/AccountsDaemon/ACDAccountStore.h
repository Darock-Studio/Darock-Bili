//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 956.0.0.0.0
//
#ifndef ACDAccountStore_h
#define ACDAccountStore_h
@import Foundation;

#include "ACAccountStore.h"
#include "ACDAccessPluginManager.h"
#include "ACDAccountNotifier.h"
#include "ACDAccountStoreDelegate-Protocol.h"
#include "ACDAuthenticationDialogManager.h"
#include "ACDAuthenticationPluginManager.h"
#include "ACDClient.h"
#include "ACDClientAuthorizationManager.h"
#include "ACDDatabaseBackupActivity.h"
#include "ACDDatabaseConnection.h"
#include "ACDDataclassOwnersManager.h"
#include "ACDFakeRemoteAccountStoreSession.h"
#include "ACRemoteAccountStoreProtocol-Protocol.h"
#include "ACRemoteDeviceProxy.h"

@class NSMutableArray, NSString;

@interface ACDAccountStore : ACAccountStore<ACRemoteAccountStoreProtocol> {
  /* instance variables */
  NSMutableArray *_accountChanges;
  ACDFakeRemoteAccountStoreSession *_fakeRemoteAccountStoreSession;
}

@property (readonly, nonatomic) ACDDatabaseConnection *databaseConnection;
@property (retain, nonatomic) ACDAuthenticationPluginManager *authenticationPluginManager;
@property (retain, nonatomic) ACDAccessPluginManager *accessPluginManager;
@property (retain, nonatomic) ACDDataclassOwnersManager *dataclassOwnersManager;
@property (retain, nonatomic) ACDAuthenticationDialogManager *authenticationDialogManager;
@property (retain, nonatomic) ACRemoteDeviceProxy *remoteDeviceProxy;
@property (retain, nonatomic) ACDAccountNotifier *accountNotifier;
@property (retain, nonatomic) ACDDatabaseBackupActivity *databaseBackupActivity;
@property (nonatomic) BOOL notificationsEnabled;
@property (nonatomic) BOOL migrationInProgress;
@property (weak, nonatomic) NSObject<ACDAccountStoreDelegate> *delegate;
@property (weak, nonatomic) ACDClient *client;
@property (readonly, nonatomic) ACDClientAuthorizationManager *authorizationManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)accountCache;

/* instance methods */
- (id)init;
- (id)initWithClient:(id)client databaseConnection:(id)connection;
- (id)accountTypeWithIdentifier:(id)identifier;
- (id)accountsWithAccountTypeIdentifier:(id)identifier;
- (void)accountsOnPairedDeviceWithAccountTypes:(id)types withOptions:(id)options handler:(id /* block */)handler;
- (BOOL)accountsExistWithAccountTypeIdentifier:(id)identifier;
- (BOOL)_removeAccountNoSave:(id)save withDataclassActions:(id)actions withError:(id *)error;
- (BOOL)_saveWithError:(id *)error;
- (id)_commitOrRollbackDataclassActions:(id)actions forAccount:(id)account originalEnabledDataclasses:(id)dataclasses;
- (BOOL)_performDataclassActions:(id)actions forAccount:(id)account error:(id *)error;
- (void)addAccountNoSave:(id)save error:(id *)error;
- (id)_addAccountNoSave:(id)save withDataclassActions:(id)actions error:(id *)error;
- (void)updateAccountNoSave:(id)save error:(id *)error;
- (BOOL)_updateAccountNoSave:(id)save withDataclassActions:(id)actions error:(id *)error;
- (void)deleteAccountNoSave:(id)save error:(id *)error;
- (void)_deleteAccountNoSave:(id)save withDataclassActions:(id)actions error:(id *)error;
- (id)_accountWithIdentifier:(id)identifier;
- (id)_accountWithIdentifier:(id)identifier prefetchKeypaths:(id)keypaths;
- (id)_displayAccountForAccount:(id)account;
- (id)_accountTypeWithIdentifier:(id)identifier;
- (id)_dataclassWithName:(id)name createIfNecessary:(BOOL)necessary;
- (BOOL)_canSaveAccount:(id)account error:(id *)error;
- (void)_setAccountManagedObjectRelationships:(id)relationships withAccount:(id)account oldAccount:(id)account error:(id *)error;
- (void)_delegate_accountStoreDidSaveAccount:(id)account changeType:(int)type;
- (BOOL)_handleAccountMod:(id)mod withDataclassActions:(id)actions withError:(id *)error;
- (BOOL)_handleAccountAdd:(id)add withDataclassActions:(id)actions error:(id *)error;
- (id)_credentialItemWithAccountIdentifier:(id)identifier serviceName:(id)name;
- (void)setClientBundleID:(id)id withHandler:(id /* block */)handler;
- (void)accountWithIdentifier:(id)identifier handler:(id /* block */)handler;
- (id)_sync_accountWithIdentifier:(id)identifier;
- (id)_allAccounts_sync;
- (void)accountsWithHandler:(id /* block */)handler;
- (void)accountTypesWithHandler:(id /* block */)handler;
- (void)displayAccountTypeForAccountWithIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)accountTypeWithIdentifier:(id)identifier handler:(id /* block */)handler;
- (id)masterCredentialForAccountIdentifier:(id)identifier;
- (void)credentialForAccount:(id)account serviceID:(id)id handler:(id /* block */)handler;
- (void)setCredential:(id)credential forAccount:(id)account serviceID:(id)id completion:(id /* block */)completion;
- (void)credentialForAccountWithIdentifier:(id)identifier handler:(id /* block */)handler;
- (id)_legacyCredentialForAccount:(id)account client:(id)client error:(id *)error;
- (void)credentialItemsWithCompletion:(id /* block */)completion;
- (void)credentialItemForAccount:(id)account serviceName:(id)name completion:(id /* block */)completion;
- (void)insertCredentialItem:(id)item completion:(id /* block */)completion;
- (void)saveCredentialItem:(id)item completion:(id /* block */)completion;
- (void)removeCredentialItem:(id)item completion:(id /* block */)completion;
- (void)dataclassesWithHandler:(id /* block */)handler;
- (void)accountsWithAccountType:(id)type handler:(id /* block */)handler;
- (void)accountsWithAccountType:(id)type options:(unsigned long long)options completion:(id /* block */)completion;
- (id)_accountsWithAcountType:(id)type error:(id *)error;
- (id)_accountsWithAccountType:(id)type options:(unsigned long long)options error:(id *)error;
- (id)_predicateForFetchingAccountsWithManagedAccountTypeID:(id)id options:(unsigned long long)options;
- (void)parentAccountForAccountWithIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)childAccountsForAccountWithIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)childAccountsWithAccountTypeIdentifier:(id)identifier parentAccountIdentifier:(id)identifier handler:(id /* block */)handler;
- (id)_childAccountsForAccountWithID:(id)id;
- (void)accountIdentifiersEnabledForDataclass:(id)dataclass handler:(id /* block */)handler;
- (void)accountIdentifiersEnabledToSyncDataclass:(id)dataclass handler:(id /* block */)handler;
- (BOOL)_canManagedAccountType:(id)type syncManagedDataclass:(id)dataclass;
- (BOOL)_isManagedAccount:(id)account enabledForManagedDataclass:(id)dataclass;
- (void)accountIdentifiersEnabledForDataclasses:(id)dataclasses withAccountTypeIdentifiers:(id)identifiers completion:(id /* block */)completion;
- (void)enabledDataclassesForAccountWithIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)provisionedDataclassesForAccountWithIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)syncableDataclassesForAccountType:(id)type handler:(id /* block */)handler;
- (void)supportedDataclassesForAccountType:(id)type handler:(id /* block */)handler;
- (void)accessKeysForAccountType:(id)type handler:(id /* block */)handler;
- (void)insertAccountType:(id)type withHandler:(id /* block */)handler;
- (void)removeAccountType:(id)type withHandler:(id /* block */)handler;
- (void)removeAccount:(id)account withDataclassActions:(id)actions completion:(id /* block */)completion;
- (void)canSaveAccount:(id)account completion:(id /* block */)completion;
- (void)saveAccount:(id)account withHandler:(id /* block */)handler;
- (void)saveAccount:(id)account pid:(id)pid verify:(BOOL)verify dataclassActions:(id)actions completion:(id /* block */)completion;
- (void)saveAccount:(id)account verify:(BOOL)verify dataclassActions:(id)actions completion:(id /* block */)completion;
- (BOOL)shouldPreventAccountCreationWithObsoleteAccountType;
- (id)_lockForAccountType:(id)type;
- (void)_completeSave:(id)save dataclassActions:(id)actions completion:(id /* block */)completion;
- (void)verifyCredentialsForAccount:(id)account options:(id)options completion:(id /* block */)completion;
- (void)renewCredentialsForAccount:(id)account options:(id)options completion:(id /* block */)completion;
- (void)_requestAccessForAccountTypeWithIdentifier:(id)identifier options:(id)options allowUserInteraction:(BOOL)interaction withHandler:(id /* block */)handler;
- (void)requestAccessForAccountTypeWithIdentifier:(id)identifier options:(id)options withHandler:(id /* block */)handler;
- (void)appPermissionsForAccountType:(id)type withHandler:(id /* block */)handler;
- (void)setPermissionGranted:(id)granted forBundleID:(id)id onAccountType:(id)type withHandler:(id /* block */)handler;
- (void)clearAllPermissionsGrantedForAccountType:(id)type withHandler:(id /* block */)handler;
- (void)permissionForAccountType:(id)type withHandler:(id /* block */)handler;
- (void)grantedPermissionsForAccountType:(id)type withHandler:(id /* block */)handler;
- (void)clearGrantedPermissionsForAccountType:(id)type withHandler:(id /* block */)handler;
- (void)_updateExistenceCacheOfAccountWithTypeIdentifier:(id)identifier withHandler:(id /* block */)handler;
- (void)updateExistenceCacheOfAccountWithTypeIdentifier:(id)identifier withHandler:(id /* block */)handler;
- (void)preloadDataclassOwnersWithCompletion:(id /* block */)completion;
- (void)dataclassActionsForAccountSave:(id)save completion:(id /* block */)completion;
- (void)dataclassActionsForAccountDeletion:(id)deletion completion:(id /* block */)completion;
- (void)isPerformingDataclassActionsForAccount:(id)account completion:(id /* block */)completion;
- (void)accountExistsWithDescription:(id)description completion:(id /* block */)completion;
- (void)isTetheredSyncingEnabledForDataclass:(id)dataclass completion:(id /* block */)completion;
- (void)tetheredSyncSourceTypeForDataclass:(id)dataclass completion:(id /* block */)completion;
- (void)kerberosAccountsForDomainFromURL:(id)url completion:(id /* block */)completion;
- (void)isPushSupportedForAccount:(id)account completion:(id /* block */)completion;
- (void)discoverPropertiesForAccount:(id)account options:(id)options completion:(id /* block */)completion;
- (void)resetDatabaseToVersion:(id)version withCompletion:(id /* block */)completion;
- (id)_clientTokenQueue;
- (void)addClientToken:(id)token forAccountIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)clientTokenForAccountIdentifier:(id)identifier completion:(id /* block */)completion;
- (id)clientTokenForAccount:(id)account;
- (id)_clientTokenForAccountIdentifier:(id)identifier error:(id)error;
- (void)_removeClientTokenForAccountIdentifer:(id)identifer;
- (void)handleURL:(id)url;
- (id)remoteAccountStoreSession;
- (id)longLivedRemoteAccountStoreSession;
- (void)openAuthenticationURL:(id)url forAccount:(id)account shouldConfirm:(BOOL)confirm completion:(id /* block */)completion;
- (void)openAuthenticationURLForAccount:(id)account withDelegateClassName:(id)name fromBundleAtPath:(id)path shouldConfirm:(BOOL)confirm completion:(id /* block */)completion;
- (void)visibleTopLevelAccountsWithAccountTypeIdentifiers:(id)identifiers completion:(id /* block */)completion;
- (void)accountsWithAccountTypeIdentifiers:(id)identifiers preloadedProperties:(id)properties completion:(id /* block */)completion;
- (void)notifyRemoteDevicesOfModifiedAccount:(id)account withChangeType:(id)type;
- (void)notifyRemoteDevicesOfModifiedAccount:(id)account withChangeType:(id)type options:(id)options completion:(id /* block */)completion;
- (void)saveAccount:(id)account toPairedDeviceWithOptions:(id)options completion:(id /* block */)completion;
- (void)removeAccountsFromPairedDeviceWithOptions:(id)options completion:(id /* block */)completion;
- (void)removeAccountFromPairedDevice:(id)device withOptions:(id)options completion:(id /* block */)completion;
- (void)migrateCredentialForAccount:(id)account completion:(id /* block */)completion;
- (void)triggerKeychainMigrationIfNecessary:(id /* block */)necessary;
- (void)runAccountMigrationPlugins:(id /* block */)plugins;
- (void)_pruneDuplicateAccountsForAccountType:(id)type withUserName:(id)name error:(id *)error;
- (void)scheduleBackupIfNonexistent:(id /* block */)nonexistent;
- (void)shutdownAccountsD:(id /* block */)d;
- (void)accountsWithTypeIdentifier:(id)identifier propertyKey:(id)key value:(id)value cacheSuffix:(id)suffix completion:(id /* block */)completion;
- (void)cacheGenerationForAccounts:(id)accounts cacheSuffix:(id)suffix;
- (void)registerMonitorForAccountsOfTypes:(id)types propertiesToPrefetch:(id)prefetch completion:(id /* block */)completion;
- (BOOL)isMigrationInProgress;
@end

#endif /* ACDAccountStore_h */
