//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBWindow_h
#define WBWindow_h
@import Foundation;

#include "WBMutableTabGroup.h"
#include "WBTabGroup.h"
#include "WebBookmark.h"

@class NSDate, NSDictionary, NSString;

@interface WBWindow : NSObject

@property (readonly, nonatomic) WebBookmark *bookmark;
@property (readonly, nonatomic) int identifier;
@property (retain, nonatomic) WBTabGroup *activeTabGroup;
@property (retain, nonatomic) NSDate *dateClosed;
@property (copy, nonatomic) NSDictionary *extraAttributes;
@property (readonly, nonatomic) WBMutableTabGroup *localTabGroup;
@property (readonly, nonatomic) WBMutableTabGroup *privateTabGroup;
@property (copy, nonatomic) NSString *sceneID;
@property (readonly, copy, nonatomic) NSDictionary *tabGroupsToActiveTabs;
@property (readonly, copy, nonatomic) NSString *uuid;
@property (readonly, copy, nonatomic) NSString *customUnifiedFieldText;
@property (readonly, nonatomic) BOOL isFavoritesBarHidden;
@property (readonly, nonatomic) BOOL isMinimized;
@property (readonly, nonatomic) BOOL isPopupWindow;
@property (readonly, nonatomic) BOOL prefersSidebarVisible;
@property (readonly, nonatomic) BOOL isPrivateWindow;
@property (readonly, nonatomic) BOOL isTabBarHidden;

/* instance methods */
- (id)initWithUUID:(id)uuid;
- (id)initWithUUID:(id)uuid sceneID:(id)id;
- (id)initWithDictionaryRepresentation:(id)representation localTabGroup:(id)group privateTabGroup:(id)group;
- (id)initWithUUID:(id)uuid activeTabGroup:(id)group localTabGroup:(id)group privateTabGroup:(id)group sceneID:(id)id;
- (id)initWithBookmark:(id)bookmark activeTabGroup:(id)group localTabGroup:(id)group privateTabGroup:(id)group;
- (id)initWithBookmark:(id)bookmark;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)_updateExtraAttributesUsingBlock:(id /* block */)block;
- (id)activeTabUUIDForTabGroupWithUUID:(id)uuid;
- (void)setActiveTabUUID:(id)uuid forTabGroupWithUUID:(id)uuid;
- (void)removeActiveTabUUIDForTabGroupWithUUID:(id)uuid;
- (void)removeAllActiveTabUUIDs;
- (void)updateActiveTabGroup;
- (id)description;
@end

#endif /* WBWindow_h */
