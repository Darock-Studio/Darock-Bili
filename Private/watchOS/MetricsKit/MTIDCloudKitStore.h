//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2.8.10.0.0
//
#ifndef MTIDCloudKitStore_h
#define MTIDCloudKitStore_h
@import Foundation;

#include "MTIDCloudKitLocalDB.h"
#include "MTIDCloudKitLocalDBDelegate-Protocol.h"
#include "MTIDCloudKitPromiseManager.h"
#include "MTIDSecretStore-Protocol.h"
#include "MTIDSyncEngine.h"
#include "MTIDSyncEngineDelegate-Protocol.h"

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface MTIDCloudKitStore : NSObject<MTIDCloudKitLocalDBDelegate, MTIDSyncEngineDelegate, MTIDSecretStore>

@property (retain, nonatomic) NSString *containerIdentifier;
@property BOOL canSyncBetweenDevices;
@property (retain, nonatomic) MTIDSyncEngine *syncEngine;
@property (retain, nonatomic) MTIDCloudKitLocalDB *localDB;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *accessQueue;
@property (retain, nonatomic) NSMutableDictionary *generatedDates;
@property (retain, nonatomic) MTIDCloudKitPromiseManager *promiseManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)recordZoneID;
+ (id)referenceRecordIDForScheme:(id)scheme dsId:(id)id;
+ (id)referenceDateOfRecord:(id)record;
+ (id)keyOfReferenceDate:(id)date;
+ (id)spanRecordIDForScheme:(id)scheme referenceRecordID:(id)id serialNumber:(unsigned long long)number;
+ (id)spanRecordKeyWithReferenceRecord:(id)record serialNumber:(unsigned long long)number;
+ (BOOL)updateRecord:(id)record isSpanRecord:(BOOL)record scheme:(id)scheme expectedKey:(id)key expiration:(id)expiration reset:(BOOL)reset;

/* instance methods */
- (id)initWithContainerIdentifer:(id)identifer enableSync:(BOOL)sync;
- (void)generateFutureRecordsForScheme:(id)scheme referenceRecord:(id)record;
- (void)_generateFutureRecordsForScheme:(id)scheme referenceRecord:(id)record;
- (id)recordWithID:(id)id qualityOfService:(long long)service updateRecordMaybe:(id /* block */)maybe error:(id *)error;
- (id)promiseForRecordWithID:(id)id timeout:(double)timeout qualityOfService:(long long)service existingOnly:(BOOL)only updateRecordMaybe:(id /* block */)maybe;
- (id)referenceRecordForScheme:(id)scheme dsId:(id)id date:(id)date reset:(BOOL)reset timeout:(double)timeout existingOnly:(BOOL)only qualityOfService:(long long)service;
- (id)spanRecordForScheme:(id)scheme span:(id)span timeout:(double)timeout existingOnly:(BOOL)only qualityOfService:(long long)service referenceRecord:(id)record;
- (void)fetchChangesIfNeeded;
- (id)syncForSchemes:(id)schemes options:(id)options;
- (void)accountDidChangeWithUserRecordID:(id)id;
- (void)syncEngineDidStartWithError:(id)error;
- (id)recordWithID:(id)id;
- (void)recordWasSaved:(id)saved;
- (void)recordWasFailedToSave:(id)save;
- (void)recordWasFetched:(id)fetched;
- (void)recordWasDeleted:(id)deleted;
- (void)cloudKitLocalDB:(id)db didChangeRecord:(id)record;
- (id)secretForScheme:(id)scheme options:(id)options;
- (id)resetSchemes:(id)schemes options:(id)options;
- (id)maintainSchemes:(id)schemes options:(id)options;
- (void)clearLocalData;
- (id)debugInfo;
@end

#endif /* MTIDCloudKitStore_h */
