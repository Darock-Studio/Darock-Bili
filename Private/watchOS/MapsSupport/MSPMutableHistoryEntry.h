//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2811.42.9.28.8
//
#ifndef MSPMutableHistoryEntry_h
#define MSPMutableHistoryEntry_h
@import Foundation;

#include "MSPHistoryEntry-Protocol.h"
#include "MSPHistoryEntryStorage.h"
#include "MSPMutableObject-Protocol.h"

@class NSDate, NSString, NSUUID;

@interface MSPMutableHistoryEntry : NSObject<MSPHistoryEntry, MSPMutableObject> {
  /* instance variables */
  NSUUID *_storageIdentifier;
}

@property (readonly, nonatomic) BOOL immutable;
@property (readonly, nonatomic) MSPHistoryEntryStorage *storage;
@property (copy, nonatomic) NSDate *usageDate;
@property (nonatomic) BOOL tracksRAPReportingOnly;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (Class)immutableObjectClass;
+ (id)immutableObjectProtocol;
+ (Class)mutableObjectClass;
+ (id)mutableObjectProtocol;
+ (id)mutableHistoryEntryForStorage:(id)storage;

/* instance methods */
- (id)init;
- (id)initWithStorage:(id)storage;
- (void)ifSearch:(id /* block */)search ifRoute:(id /* block */)route ifPlaceDisplay:(id /* block */)display ifTransitLineItem:(id /* block */)item;
- (void)ifMutableSearch:(id /* block */)search ifMutableRoute:(id /* block */)route ifMutablePlaceDisplay:(id /* block */)display ifMutableTransitLineItem:(id /* block */)item;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (id)transferToImmutableIfValidWithError:(out id *)error;
- (id)copyIfValidWithError:(out id *)error;
- (BOOL)isUserVisibleDuplicateOfEntry:(id)entry;
- (BOOL)_isUserVisibleDuplicateOfSameClassObject:(id)object;
- (BOOL)isFailed;
- (void)_markImmutable;
- (void)_noteWillMutate;
- (id)debugTitle;
- (id)storageIdentifier;
- (BOOL)_isImmutable;
@end

#endif /* MSPMutableHistoryEntry_h */
