//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 342.208.0.0.0
//
#ifndef SCNSceneRenderer_Protocol_h
#define SCNSceneRenderer_Protocol_h
@import Foundation;

@protocol SCNSceneRenderer <NSObject>

@property (retain, nonatomic) SCNScene *scene;
@property (nonatomic) double sceneTime;
@property (weak, nonatomic) NSObject<SCNSceneRendererDelegate> *delegate;
@property BOOL playing;
@property (nonatomic) BOOL loops;
@property (retain, nonatomic) SCNNode *pointOfView;
@property (nonatomic) BOOL autoenablesDefaultLighting;
@property (nonatomic) BOOL jitteringEnabled;
@property (nonatomic) BOOL temporalAntialiasingEnabled;
@property (nonatomic) BOOL showsStatistics;
@property (nonatomic) unsigned long long debugOptions;
@property (retain, nonatomic) SKScene *overlaySKScene;
@property (readonly, nonatomic) unsigned long long renderingAPI;
@property (readonly, nonatomic) struct CGColorSpace * workingColorSpace;
@property (readonly, nonatomic) AVAudioEngine *audioEngine;
@property (readonly, nonatomic) AVAudioEnvironmentNode *audioEnvironmentNode;
@property (retain, nonatomic) SCNNode *audioListener;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } currentViewport;
@property (nonatomic) BOOL usesReverseZ;

/* instance methods */
- (void)presentScene:(id)scene withTransition:(id)transition incomingPointOfView:(id)view completionHandler:(id /* block */)handler;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test options:(id)options;
- (BOOL)isNodeInsideFrustum:(id)frustum withPointOfView:(id)view;
- (id)nodesInsideFrustumWithPointOfView:(id)view;
- (struct SCNVector3 { float x0; float x1; float x2; })projectPoint:(struct SCNVector3 { float x0; float x1; float x2; })point;
- (struct SCNVector3 { float x0; float x1; float x2; })unprojectPoint:(struct SCNVector3 { float x0; float x1; float x2; })point;
- (BOOL)prepareObject:(id)object shouldAbortBlock:(id /* block */)block;
- (void)prepareObjects:(id)objects withCompletionHandler:(id /* block */)handler;
- (BOOL)isPlaying;
- (BOOL)isJitteringEnabled;
- (BOOL)isTemporalAntialiasingEnabled;
@end

#endif /* SCNSceneRenderer_Protocol_h */
