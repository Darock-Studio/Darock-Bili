//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 342.208.0.0.0
//
#ifndef AVTAvatarMemoryOptimizer_h
#define AVTAvatarMemoryOptimizer_h
@import Foundation;

#include "AVTMemoji.h"

@class NSArray, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet;

@interface AVTAvatarMemoryOptimizer : NSObject {
  /* instance variables */
  AVTMemoji *_memoji;
  NSMapTable *_requiredVariantsPerMorpher;
  NSMutableArray *_requiredMorphVariantComponents;
  NSMutableSet *_presetVariantPrefixes;
  NSArray *_oldWeights;
  NSArray *_oldMainTargets;
  BOOL _hasInBetweens;
  NSMutableArray *_newWeights;
  NSMutableArray *_newTargetsAndInBetweens;
  NSMutableArray *_newInBetweenCounts;
  NSMutableArray *_newInBetweenWeights;
  NSMutableArray *_indicesOfTargetsToFlattenInBaseGeometry;
  NSMutableDictionary *_indicesOfTargetsToFlattenInOtherTarget;
  NSMutableDictionary *_nonOneWeightsOfTargetsToFlatten;
  NSArray *_oldCorrectives;
  NSArray *_oldCorrectiveDriverCounts;
  NSArray *_oldCorrectiveDriverIndices;
  BOOL _hasCorrectives;
  BOOL _hasCorrectiveInBetweens;
  NSMutableArray *_newCorrectivesAndInBetweens;
  NSMutableArray *_newCorrectiveDriverCounts;
  NSMutableArray *_newCorrectiveDriverIndices;
  NSMutableArray *_newCorrectiveInBetweenCounts;
  NSMutableArray *_newCorrectiveInBetweenWeights;
  NSMutableArray *_indicesOfCorrectivesToFlattenInBaseGeometry;
  NSMutableDictionary *_indicesOfCorrectivesToFlattenInMainTarget;
  NSMutableDictionary *_indicesOfCorrectivesToFlattenInOtherCorrective;
  NSMutableDictionary *_nonOneWeightsOfCorrectivesToFlatten;
}

/* instance methods */
- (id)initWithMemoji:(id)memoji;
- (BOOL)shouldKeepCreasesAndCorners;
- (BOOL)shouldClearCPUDataAfterUpload;
- (void)registerRequiredVariant:(id)variant weight:(float)weight inHierarchy:(id)hierarchy;
- (void)preprocessMemoji;
- (void)optimizeMemoji;
- (void)optimizeNodeHierarchy:(id)hierarchy;
- (void)optimizeNode:(id)node;
- (void)classifyTargetsOfMorpher:(id)morpher node:(id)node;
- (void)flattenTargetsOfMorpher:(id)morpher node:(id)node;
- (void)keepTargetAtIndex:(unsigned long long)index morpher:(id)morpher;
- (void)keepCorrectiveAtIndex:(unsigned long long)index morpher:(id)morpher;
- (void)keepCorrectiveAtIndex:(unsigned long long)index withDriverIndices:(id)indices morpher:(id)morpher;
- (void)flattenTargetAtIndex:(unsigned long long)index inBaseGeometryUsingWeight:(float)weight;
- (void)flattenTargetAtIndex:(unsigned long long)index inTargetAtIndex:(unsigned long long)index weight:(float)weight;
- (void)flattenCorrectiveAtIndex:(unsigned long long)index inBaseGeometryUsingWeight:(float)weight;
- (void)flattenCorrectiveAtIndex:(unsigned long long)index inTargetAtIndex:(unsigned long long)index weight:(float)weight;
- (void)flattenCorrectiveAtIndex:(unsigned long long)index inCorrectiveAtIndex:(unsigned long long)index weight:(float)weight;
- (void)flattenRelevantTargetsOfMorpher:(id)morpher inBaseGeometryOfNode:(id)node;
- (void)flattenRelevantTargetsInOtherTargetsOfMorpher:(id)morpher;
- (void)flattenTargetsAtIndices:(id)indices correctivesAtIndices:(id)indices inTargetAtIndex:(unsigned long long)index morpher:(id)morpher;
- (void)flattenTargetsAtIndices:(id)indices correctivesAtIndices:(id)indices inTarget:(id)target weight:(float)weight morpher:(id)morpher;
- (void)flattenCorrectivesAtIndices:(id)indices inCorrectiveAtIndex:(unsigned long long)index morpher:(id)morpher;
- (void)flattenCorrectivesAtIndices:(id)indices inCorrective:(id)corrective weight:(float)weight morpher:(id)morpher;
- (void)resolveInBetweensForTarget:(id)target weight:(float)weight inBetweenWeights:(id)weights inBetweenTargets:(id)targets block:(id /* block */)block;
- (id)flattenTarget0:(id)target0 weight0:(float)weight0 target1:(id)target1 weight1:(float)weight1 inMorphTarget:(id)target originalMorphTarget:(id)target;
- (void)applyMorphTarget:(id)target weight:(float)weight toBaseGeometryBuffer:(void *)buffer vertexCount:(unsigned long long)count;
- (void)applyMorphTarget:(id)target weight:(float)weight toMorphTargetBuffer:(struct { float x0; float x1; float x2; } *)buffer vertexCount:(unsigned long long)count;
@end

#endif /* AVTAvatarMemoryOptimizer_h */
