//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 146.60.7.1.1
//
#ifndef LNConnection_h
#define LNConnection_h
@import Foundation;

#include "LNConnectionHostInterface-Protocol.h"
#include "LNConnectionOperationDelegate-Protocol.h"
#include "LNConnectionOptions.h"
#include "LNWatchdogTimer.h"
#include "RBSAssertionObserving-Protocol.h"

@class NSMapTable, NSMutableSet, NSOperationQueue, NSSet, NSString, NSXPCConnection, RBSProcessMonitor;
@protocol LNConnectionManager<LNConnectionDelegate, OS_dispatch_queue, OS_os_activity;

@interface LNConnection : NSObject<RBSAssertionObserving, LNConnectionOperationDelegate>

@property (readonly, nonatomic) long long metadataVersion;
@property (readonly, nonatomic) RBSProcessMonitor *processMonitor;
@property (readonly, nonatomic) NSMutableSet *connectionOperations;
@property (copy, nonatomic) id /* block */ getConnectionInterfaceCompletionHandler;
@property (readonly, nonatomic) NSOperationQueue *getConnectionInterfaceQueue;
@property (nonatomic) long long state;
@property (retain, nonatomic) LNConnectionOptions *currentOptions;
@property (readonly, nonatomic) NSMapTable *assertionsMapTable;
@property (readonly, nonatomic) LNWatchdogTimer *idleTimer;
@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) NSSet *currentConnectionOperations;
@property (nonatomic) struct { unsigned int x0[8] } auditToken;
@property (readonly, nonatomic) BOOL daemon;
@property (retain, nonatomic) LNConnectionManager<LNConnectionDelegate> *manager;
@property (readonly, copy, nonatomic) NSString *appBundleIdentifier;
@property (retain, nonatomic) NSString *logPrefix;
@property (readonly, nonatomic) NSObject<LNConnectionHostInterface> *connectionInterface;
@property (readonly, nonatomic) NSMapTable *executors;
@property (readonly, nonatomic) NSObject<OS_os_activity> *activity;
@property (readonly, copy, nonatomic) NSString *bundleIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)fetchEntitiesFromActiveApplicationsWithInteractionIDs:(id)ids completionHandler:(id /* block */)handler;
+ (void)fetchEntitiesFromActiveApplicationsWithInteractionIDs:(id)ids bundleIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
+ (void)resolveEntitiesForInteractionIDs:(id)ids bundleIdentifier:(id)identifier completionHandler:(id /* block */)handler;
+ (void)invalidateAllConnections;
+ (id)optionsForAction:(id)action interactionMode:(long long)mode source:(unsigned short)source;
+ (Class)connectionOptionsClass;
+ (id)defaultOptions;

/* instance methods */
- (void)fetchSuggestedFocusActionsForActionMetadata:(id)metadata suggestionContext:(id)context completionHandler:(id /* block */)handler;
- (id)initWithBundleIdentifier:(id)identifier metadataVersion:(long long)version error:(id *)error;
- (id)initWithBundleIdentifier:(id)identifier;
- (id)executorForAction:(id)action metadata:(id)metadata appBundleIdentifier:(id)identifier options:(id)options delegate:(id)delegate;
- (id)executorForAction:(id)action metadata:(id)metadata options:(id)options delegate:(id)delegate;
- (id)executorForAction:(id)action label:(id)label delegate:(id)delegate;
- (id)executorForAction:(id)action interactionMode:(long long)mode label:(id)label delegate:(id)delegate;
- (id)executorForAction:(id)action interactionMode:(long long)mode label:(id)label source:(unsigned short)source delegate:(id)delegate;
- (void)fetchViewEntitiesWithOptions:(id)options interactionIDs:(id)ids completionHandler:(id /* block */)handler;
- (void)fetchViewEntitiesWithInteractionIDs:(id)ids completionHandler:(id /* block */)handler;
- (void)fetchViewActionsWithCompletionHandler:(id /* block */)handler;
- (void)fetchStructuredDataWithTypeIdentifier:(long long)identifier forEntityIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)updateAppShortcutParametersWithCompletionHandler:(id /* block */)handler;
- (void)fetchSuggestedActionsWithSiriLanguageCode:(id)code completionHandler:(id /* block */)handler;
- (void)fetchSuggestedActionsForStartWorkoutAction:(id)action completionHandler:(id /* block */)handler;
- (void)fetchDefaultValueForActionMetadata:(id)metadata parameterIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchOptionsDefaultValueForAction:(id)action completionHandler:(id /* block */)handler;
- (void)fetchDefaultValueForAction:(id)action actionMetadata:(id)metadata parameterIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchStateForAppIntentIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (void)fetchActionAppContextForAction:(id)action completionHandler:(id /* block */)handler;
- (void)performPropertyQuery:(id)query completionHandler:(id /* block */)handler;
- (void)performSuggestedResultsQueryWithEntityType:(id)type completionHandler:(id /* block */)handler;
- (void)performQuery:(id)query completionHandler:(id /* block */)handler;
- (void)performSuggestedEntitiesQueryWithEntityMangledTypeName:(id)name completionHandler:(id /* block */)handler;
- (void)performAllEntitiesQueryWithEntityMangledTypeName:(id)name completionHandler:(id /* block */)handler;
- (void)fetchActionForAutoShortcutPhrase:(id)phrase completionHandler:(id /* block */)handler;
- (void)fetchActionForAppShortcutIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchOptionsForActionMetadata:(id)metadata parameterMetadata:(id)metadata searchTerm:(id)term localeIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchOptionsForActionMetadata:(id)metadata parameterMetadata:(id)metadata completionHandler:(id /* block */)handler;
- (void)fetchOptionsForActionMetadata:(id)metadata parameterMetadata:(id)metadata localeIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchOptionsForAction:(id)action actionMetadata:(id)metadata parameterMetadata:(id)metadata searchTerm:(id)term localeIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchOptionsForAction:(id)action actionMetadata:(id)metadata parameterMetadata:(id)metadata optionsProviderReference:(id)reference searchTerm:(id)term localeIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)fetchDisplayRepresentationForActions:(id)actions completionHandler:(id /* block */)handler;
- (void)fetchAppShortcutParametersWithCompletionHandler:(id /* block */)handler;
- (void)fetchDestinationMDMAccountIdentifierForAction:(id)action completionHandler:(id /* block */)handler;
- (void)fetchActionOutputValue:(id)value completionHandler:(id /* block */)handler;
- (id)initWithBundleIdentifier:(id)identifier appBundleIdentifier:(id)identifier error:(id *)error;
- (void)_invalidateAllAssertions;
- (void)dealloc;
- (void)setXPCConnection:(id)xpcconnection;
- (void)enqueueConnectionOperation:(id)operation;
- (void)removeConnectionOperation:(id)operation;
- (void)getConnectionInterfaceWithOptions:(id)options completionHandler:(id /* block */)handler;
- (void)performGetConnectionInterfaceWithOptions:(id)options completionHandler:(id /* block */)handler;
- (void)completeWithError:(id)error;
- (void)connectWithOptions:(id)options;
- (BOOL)shouldRefreshWithOptions:(id)options;
- (BOOL)refreshWithOptions:(id)options;
- (void)setConnected;
- (void)setDisconnectedWithError:(id)error;
- (id)operationWithIdentifier:(id)identifier;
- (void)cancelTimeoutForOperationWithIdentifier:(id)identifier;
- (void)extendTimeoutForOperationWithIdentifier:(id)identifier;
- (BOOL)targetIsBeingDebugged;
- (BOOL)isPerformActionOperationPending;
- (BOOL)isDaemon;
- (void)connectionOperationWillStart:(id)start;
- (void)connectionOperation:(id)operation didFinishWithError:(id)error;
- (void)setIdleTimer;
- (void)extendIdleTimeout;
- (void)cancelIdleTimeout;
- (void)close;
- (void)closeWithError:(id)error;
- (id)executorForAction:(id)action options:(id)options delegate:(id)delegate;
- (void)assertion:(id)assertion didInvalidateWithError:(id)error;
- (void)acquireAssertionsForConnectionOperation:(id)operation;
- (void)invalidateAssertionsForConnectionOperation:(id)operation;
@end

#endif /* LNConnection_h */
