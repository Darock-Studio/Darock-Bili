//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKHistogramChartDataSource_h
#define HKHistogramChartDataSource_h
@import Foundation;

#include "HKGraphSeriesDataSource.h"
#include "HKGraphSeriesDataBlock.h"
#include "HKHistogramAxisDimensionDataSource-Protocol.h"
#include "HKHistogramChartDataSourceDataFetchObserver-Protocol.h"
#include "HKUnitPreferenceController.h"
#include "HKValueRange.h"

@class HKHealthStore, HKQuantitySample, HKQuantityType, HKUnit, NSArray, NSDate, NSPredicate, NSString;

@interface HKHistogramChartDataSource : HKGraphSeriesDataSource<HKHistogramAxisDimensionDataSource>

@property (nonatomic) unsigned long long binningMode;
@property (nonatomic) unsigned long long binCalculation;
@property (nonatomic) unsigned long long dateBasedBinModeConfig;
@property (nonatomic) unsigned long long numberOfBins;
@property (nonatomic) unsigned long long binWidth;
@property (nonatomic) unsigned char didExecuteQuery;
@property (retain, nonatomic) HKQuantitySample *minimumSample;
@property (retain, nonatomic) HKQuantitySample *maximumSample;
@property (retain, nonatomic) NSArray *quantityValueRanges;
@property (weak, nonatomic) NSObject<HKHistogramChartDataSourceDataFetchObserver> *fetchObserver;
@property (readonly, nonatomic) HKHealthStore *healthStore;
@property (readonly, nonatomic) HKUnitPreferenceController *unitPreferenceController;
@property (readonly, nonatomic) NSString *quantityIdentifier;
@property (readonly, nonatomic) HKQuantityType *quantityType;
@property (readonly, nonatomic) HKUnit *unit;
@property (readonly, nonatomic) NSPredicate *predicate;
@property (readonly, nonatomic) NSArray *sortDescriptors;
@property (retain, nonatomic) HKGraphSeriesDataBlock *dataBlock;
@property (retain, nonatomic) NSDate *samplesStartDate;
@property (retain, nonatomic) NSDate *samplesEndDate;
@property (readonly, nonatomic) HKValueRange *xAxisRange;
@property (readonly, nonatomic) HKValueRange *yAxisRange;
@property (copy, nonatomic) id /* block */ dataBlockBuilder;
@property (copy, nonatomic) id /* block */ xAxisStringForLocation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_hoursInDayXValueRange;
+ (id)_daysInWeekXValueRange;

/* instance methods */
- (id)_initWithQuantityTypeIdentifier:(id)identifier healthStore:(id)store unitPreferenceController:(id)controller predicate:(id)predicate xAxisRange:(id)range yAxisRange:(id)range binMode:(unsigned long long)mode binCalculation:(unsigned long long)calculation binWidth:(double)width numberOfBins:(unsigned long long)bins dateBasedBinModeConfig:(unsigned long long)config;
- (id)initWithQuantityTypeIdentifier:(id)identifier healthStore:(id)store unitPreferenceController:(id)controller predicate:(id)predicate yAxisRange:(id)range binWidth:(double)width;
- (id)initWithQuantityTypeIdentifier:(id)identifier healthStore:(id)store unitPreferenceController:(id)controller predicate:(id)predicate yAxisRange:(id)range binCalculation:(unsigned long long)calculation dateBasedBinModeConfig:(unsigned long long)config;
- (id)xAxisStringForLocation:(id)location;
- (void)fetchData;
- (void)didCompleteFetch;
- (id)buildGraphSeriesDataBlockFromSamples:(id)samples;
- (id)buildBinsWithSamples:(id)samples;
- (id)calculateBinValueForBins:(id)bins usingCalculation:(unsigned long long)calculation;
- (id)buildGraphSeriesDataBlockWithCalculatedBinValues:(id)values;
- (id)stringForLocation:(id)location;
- (id)_buildQuantityValueRangesFromSortedSamples:(id)samples;
- (id)_query;
- (id)_samplesSortedByQuantity:(id)quantity;
- (id)_displayType;
- (unsigned long long)_binIndexForSample:(id)sample;
- (unsigned long long)_normalBinIndexForSample:(id)sample;
- (struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })blockPathForX:(id)x zoom:(long long)zoom resolution:(long long)resolution;
- (void)blocksRequestedFromPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path toPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path priorityDelegate:(id)delegate;
- (id)cachedBlockForPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path context:(id)context;
- (unsigned long long)_dateBasedBinIndexForSample:(id)sample;
- (id)_dateBasedXValueRangeForConfig:(unsigned long long)config;
- (id)_dayXAxisStringForLocation:(id)location;
- (id)_dayNameFormatter;
- (id)_daysOfTheWeek;
- (unsigned long long)_dayIndexForDayName:(id)name;
- (id)_dayNameFromDayIndex:(unsigned long long)index;
- (id)_hourXAxisStringForLocation:(id)location;
- (id)_hourOfTheDayFormatter;
- (id)_hourNameFromHourIndex:(unsigned long long)index;
@end

#endif /* HKHistogramChartDataSource_h */
