//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKLineSeries_h
#define HKLineSeries_h
@import Foundation;

#include "HKGraphSeries.h"
#include "HKLineSeriesPointMarkerStyle.h"
#include "HKLineSeriesPresentationStyle.h"

@class NSArray, NSNumber;

@interface HKLineSeries : HKGraphSeries

@property (retain, nonatomic) NSArray *unhighlightedPresentationStyles;
@property (retain, nonatomic) NSArray *highlightedPresentationStyles;
@property (retain, nonatomic) NSArray *selectedPresentationStyles;
@property (retain, nonatomic) HKLineSeriesPointMarkerStyle *selectedPointMarkerStyle;
@property (retain, nonatomic) HKLineSeriesPresentationStyle *inactivePresentationStyle;
@property (nonatomic) BOOL flatLastValue;
@property (nonatomic) BOOL extendLastValue;
@property (nonatomic) BOOL extendFirstValue;
@property (retain, nonatomic) NSNumber *maximumConnectionDistance;

/* instance methods */
- (id)init;
- (id)_currentPresentationStyles;
- (void)_enumerateCoordinateList:(id)list withTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform weightedAverageWidth:(double)width block:(id /* block */)block;
- (void)_enumerateCoordinateList:(id)list withTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform presentationStyle:(id)style zoomLevelConfiguration:(id)configuration axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect block:(id /* block */)block;
- (void)_enumerateCoordinateListByRemovingOffscreenPoints:(id)points withTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform presentationStyle:(id)style zoomLevelConfiguration:(id)configuration axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect block:(id /* block */)block;
- (void)_enumeratePathsFromBlockCoordinates:(id)coordinates axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect zoomLevelConfiguration:(id)configuration transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform presentationStyle:(id)style caresAboutSelection:(BOOL)selection seriesRenderingDelegate:(id)delegate forceGapBetweenUntransformedPoints:(id /* block */)points handler:(id /* block */)handler;
- (void)addAxisAnnotationForValue:(double)value axisAnnotationDelegate:(id)delegate;
- (void)_enumerateSawToothPathsFromBlockCoordinates:(id)coordinates transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform zoomLevelConfiguration:(id)configuration presentationStyle:(id)style caresAboutSelection:(BOOL)selection axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect seriesRenderingDelegate:(id)delegate forceGapBetweenUntransformedPoints:(id /* block */)points handler:(id /* block */)handler;
- (void)_enumerateSinePathsFromBlockCoordinates:(id)coordinates transfrom:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transfrom zoomLevelConfiguration:(id)configuration presentationStyle:(id)style axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect handler:(id /* block */)handler;
- (void)drawSeriesWithBlockCoordinates:(id)coordinates axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect zoomLevelConfiguration:(id)configuration pointTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform renderContext:(struct CGContext *)context secondaryRenderContext:(id)context seriesRenderingDelegate:(id)delegate;
- (void)drawSeriesWithBlockCoordinates:(id)coordinates axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect zoomLevelConfiguration:(id)configuration pointTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform renderContext:(struct CGContext *)context secondaryRenderContext:(id)context seriesRenderingDelegate:(id)delegate forceGapBetweenUntransformedPoints:(id /* block */)points;
- (id)pointMarkerImageForPointMarkerStyle:(id)style;
- (void)drawLegendPointLabelInContext:(struct CGContext *)context point:(struct CGPoint { double x0; double x1; })point untransformedPoint:(struct CGPoint { double x0; double x1; })point presentationStyle:(id)style leftOfPoint:(BOOL)point;
- (void)_updateSecondaryRenderContextWithBlockCoordinates:(id)coordinates secondaryRenderContext:(id)context pointTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform zoomLevelConfiguration:(id)configuration axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_renderLineEndCapsInContext:(struct CGContext *)context endCaps:(id)caps endCapImage:(id)image;
- (void)_renderPointMarkersInContext:(struct CGContext *)context blockCoordinates:(id)coordinates pointTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform pointMarkerImage:(id)image;
- (void)_renderPointLabelsInContext:(struct CGContext *)context blockCoordinates:(id)coordinates axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect pointTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform presentationStyle:(id)style zoomLevelConfiguration:(id)configuration seriesRenderingDelegate:(id)delegate;
- (void)_renderPointLabelInContext:(struct CGContext *)context renderingData:(struct { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; double x1; long long x2; })data numberFormatter:(id)formatter labelAttributes:(id)attributes seriesRenderingDelegate:(id)delegate;
- (void)_renderPointLegendLabelWithText:(id)text drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect labelAttributes:(id)attributes;
- (id)coordinatesForBlock:(id)block blockPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path xAxis:(id)axis yAxis:(id)axis;
- (BOOL)supportsMultiTouchSelection;
- (long long)resolutionForTimeScope:(long long)scope traitResolution:(long long)resolution;
- (double)distanceFromPoint:(struct CGPoint { double x0; double x1; })point blockCoordinate:(id)coordinate chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (double)xAxisDistanceFromPoint:(struct CGPoint { double x0; double x1; })point blockCoordinate:(id)coordinate chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (double)yAxisDifferenceToPoint:(struct CGPoint { double x0; double x1; })point blockCoordinate:(id)coordinate chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)blockCoordinateIsVisibleInsideOfChartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect blockCoordinate:(id)coordinate;
- (BOOL)blockCoordinate:(id)coordinate lessThan:(id)than;
- (BOOL)blockCoordinate:(id)coordinate greaterThan:(id)than;
@end

#endif /* HKLineSeries_h */
