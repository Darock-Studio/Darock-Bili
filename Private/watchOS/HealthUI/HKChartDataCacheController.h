//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKChartDataCacheController_h
#define HKChartDataCacheController_h
@import Foundation;

#include "HKActivitySummaryDataProvider.h"
#include "HKSampleTypeUpdateController.h"
#include "HKSampleTypeUpdateControllerObserver-Protocol.h"
#include "HKUnitPreferenceController.h"

@class HKHealthStore, NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface HKChartDataCacheController : NSObject<HKSampleTypeUpdateControllerObserver> {
  /* instance variables */
  NSArray *_chartCachesByTimeScopeAndDisplayTypeIdentifier;
  NSMutableDictionary *_chartCachesByDisplayTypeIdentifier;
  NSMutableArray *_chartCachesByCustomDisplayType;
  NSMutableDictionary *_currentValueDataProvidersByDisplayType;
  NSMutableDictionary *_alternateCurrentValueDataProvidersByDisplayType;
  NSMutableDictionary *_secondaryValueDataProviders;
  HKActivitySummaryDataProvider *_activitySummaryDataProvider;
}

@property (retain, nonatomic) HKSampleTypeUpdateController *updateController;
@property (retain, nonatomic) HKHealthStore *healthStore;
@property (retain, nonatomic) HKUnitPreferenceController *unitController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithHealthStore:(id)store unitController:(id)controller updateController:(id)controller;
- (id)interactiveChartsCacheForDisplayType:(id)type timeScope:(long long)scope;
- (id)allInteractiveChartsCaches;
- (id)_timeScopeBasedChartCacheForDisplayType:(id)type timeScope:(long long)scope;
- (id)_chartCacheForDisplayType:(id)type timeScope:(long long)scope chartCachesByDisplayTypeIdentifier:(id)identifier;
- (id)_generateChartCacheForDisplayType:(id)type timeScope:(long long)scope;
- (void)updateController:(id)controller didReceiveUpdateForType:(id)type samplesAdded:(id)added objectsRemoved:(id)removed recoveringFromError:(BOOL)error;
- (BOOL)_anySampleShouldInvalidateCache:(id)cache;
- (void)updateController:(id)controller didReceiveHighFrequencyUpdateForType:(id)type;
- (id)_chartCacheIdentifiersFromSamples:(id)samples;
- (id)_chartCacheIdentifiersFromStartDate:(id)date endDate:(id)date;
- (void)_subscribeForUpdatesForDisplayType:(id)type;
- (id)currentValueDataProviderForDisplayType:(id)type healthStore:(id)store updateController:(id)controller dateCache:(id)cache;
- (id)alternateCurrentValueDataProviderForDisplayType:(id)type healthStore:(id)store updateController:(id)controller dateCache:(id)cache;
- (id)_createCurrentValueDataProviderForDisplayType:(id)type healthStore:(id)store updateController:(id)controller dateCache:(id)cache;
- (id)_createAlternateCurrentValueDataProviderForDisplayType:(id)type healthStore:(id)store updateController:(id)controller dateCache:(id)cache;
- (id)activitySummaryDataProviderWithHealthStore:(id)store dateCache:(id)cache displayTypeController:(id)controller unitController:(id)controller;
- (void)addCustomChartCache:(id)cache forDisplayType:(id)type;
- (void)_removeCustomCachesForDisplayTypeIdentifier:(long long)identifier;
- (id)findCustomCachesForDisplayType:(id)type;
- (void)removeCachesForDisplayTypeIdentifier:(long long)identifier;
@end

#endif /* HKChartDataCacheController_h */
