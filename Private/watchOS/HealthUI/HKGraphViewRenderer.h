//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKGraphViewRenderer_h
#define HKGraphViewRenderer_h
@import Foundation;

#include "HKAxis.h"
#include "HKGraphViewRendererSeriesConfiguration.h"
#include "HKGraphViewRendererVirtualMarginConfiguration.h"
#include "HKGraphViewSelectionStyle.h"
#include "HKSeriesRenderingDelegate-Protocol.h"
#include "HKValueRange.h"

@class NSArray, NSMutableArray, UIColor;
@protocol UIView<HKGraphRenderer;

@interface HKGraphViewRenderer : NSObject<HKSeriesRenderingDelegate>

@property (readonly, nonatomic) HKGraphViewRendererSeriesConfiguration *seriesConfiguration;
@property (readonly, nonatomic) UIView<HKGraphRenderer> *renderingView;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } fullChartRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } insetChartRect;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } insetDataArea;
@property (readonly, nonatomic) double rightHandInactiveArea;
@property (readonly, nonatomic) double zoomScale;
@property (readonly, nonatomic) long long traitResolution;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } contentOffset;
@property (readonly, nonatomic) long long xAxisDateZoom;
@property (readonly, nonatomic) BOOL drawingToTile;
@property (readonly, nonatomic) long long tileColumn;
@property (readonly, nonatomic) BOOL drawingDuringScrolling;
@property (readonly, nonatomic) BOOL drawingDuringAutoscale;
@property (readonly, nonatomic) HKAxis *xAxis;
@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } xAxisCoordinateTransform;
@property (readonly, nonatomic) HKGraphViewRendererVirtualMarginConfiguration *virtualMargins;
@property (readonly, nonatomic) UIColor *outlineColor;
@property (readonly, nonatomic) UIColor *tileBackgroundColor;
@property (readonly, nonatomic) double topBaselineY;
@property (readonly, nonatomic) double bottomBaselineY;
@property (readonly, nonatomic) UIColor *selectionLineColor;
@property (readonly, nonatomic) HKGraphViewSelectionStyle *selectionLineStyle;
@property (readonly, nonatomic) BOOL disableXAxis;
@property (readonly, nonatomic) double currentXAxisHeight;
@property (readonly, nonatomic) NSArray *gridlineRanges;
@property (readonly, nonatomic) HKValueRange *effectiveVisibleRangeActive;
@property (readonly, nonatomic) HKValueRange *effectiveVisibleRangeCadence;
@property (readonly, nonatomic) HKValueRange *actualVisibleRange;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } scrollingAreaRect;
@property (readonly, nonatomic) BOOL chartMeasuringStartupTime;
@property (readonly, nonatomic) long long postUpdates;
@property (readonly, nonatomic) double postXAxisHeight;
@property (readonly, nonatomic) NSMutableArray *postOverlayData;
@property (readonly, nonatomic) NSMutableArray *postSelectionPoints;

/* instance methods */
- (id)initWithRendererSeries:(id)series renderingView:(id)view fullChartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect insetChartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect insetDataArea:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })area rightHandInactiveArea:(double)area zoomScale:(double)scale traitResolution:(long long)resolution contentOffset:(struct CGPoint { double x0; double x1; })offset xAxisDateZoom:(long long)zoom drawingToTile:(BOOL)tile tileColumn:(long long)column drawingDuringScrolling:(BOOL)scrolling drawingDuringAutoscale:(BOOL)autoscale xAxis:(id)axis xAxisCoordinateTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform virtualMargins:(id)margins outlineColor:(id)color tileBackgroundColor:(id)color topBaselineY:(double)y bottomBaselineY:(double)y selectionLineColor:(id)color selectionLineStyle:(id)style disableXAxis:(BOOL)xaxis currentXAxisHeight:(double)height gridlineRanges:(id)ranges effectiveVisibleRangeCadence:(id)cadence effectiveVisibleRangeActive:(id)active actualVisibleRange:(id)range scrollingAreaRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect chartMeasuringStartupTime:(BOOL)time;
- (void)renderContentToContext:(struct CGContext *)context;
- (void)_clearBackgroundInContext:(struct CGContext *)context;
- (void)_renderXAxisLabelAndGridsNeedsNewRendererInContext:(struct CGContext *)context;
- (void)_renderXAxisGridlinesInContext:(struct CGContext *)context withBlendMode:(int)mode;
- (double)_renderXAxisLabelsInContext:(struct CGContext *)context;
- (void)_renderYAxisGridlinesInContext:(struct CGContext *)context renderingView:(id)view chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect withBlendMode:(int)mode zoomScale:(double)scale contentOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)_renderSeriesWithContext:(struct CGContext *)context secondaryRenderContext:(id)context chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_renderVirtualMarginsWithContext:(struct CGContext *)context;
- (void)_renderBaselineWithContext:(struct CGContext *)context chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_renderDataAreaDividersWithContext:(struct CGContext *)context;
- (void)_renderSelectionLineWithContext:(struct CGContext *)context;
- (void)_renderVirtualMarginInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect context:(struct CGContext *)context marginStyle:(long long)style;
- (void)_renderVirtualMarginGridLines:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })lines context:(struct CGContext *)context;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })virtualMarginInsets;
- (BOOL)seriesDrawingDuringScrolling;
- (BOOL)seriesDrawingDuringAutoscale;
- (BOOL)seriesDrawingDuringTiling;
- (struct CGPoint { double x0; double x1; })seriesContentOffset;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })screenRectForSeries:(id)series;
- (id)axisAnnotationDelegateForSeries:(id)series;
- (BOOL)seriesDrawingAsTopOverlay:(id)overlay;
- (BOOL)_lastSeriesInMultiSeriesRow:(id)row series:(id)series;
- (BOOL)measuringStartupTime;
@end

#endif /* HKGraphViewRenderer_h */
