//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKValueDataProvider_h
#define HKValueDataProvider_h
@import Foundation;

#include "HKDateCache.h"
#include "HKDateCacheObserver-Protocol.h"
#include "HKDisplayType.h"
#include "HKFetchOperation.h"
#include "HKSampleTypeUpdateControllerObserver-Protocol.h"

@class HKHealthStore, NSHashTable, NSString;

@interface HKValueDataProvider : NSObject<HKDateCacheObserver, HKSampleTypeUpdateControllerObserver> {
  /* instance variables */
  BOOL _resultsLoaded;
  BOOL _needsToReFetchValue;
  HKFetchOperation *_outstandingFetchOperation;
  NSHashTable *_observers;
}

@property (readonly, nonatomic) HKHealthStore *healthStore;
@property (readonly, nonatomic) HKDateCache *dateCache;
@property (readonly, nonatomic) id value;
@property (readonly, nonatomic) BOOL hasLoadedData;
@property (readonly, nonatomic) HKDisplayType *displayType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithHealthStore:(id)store updateController:(id)controller dateCache:(id)cache displayType:(id)type;
- (void)dealloc;
- (id)currentValue;
- (id)secondaryValue;
- (void)invalidateValue;
- (void)_setNeedsReFetchValue;
- (BOOL)_currentlyFetchingValue;
- (BOOL)_requiresValueFetch;
- (void)_refreshValueIfNecessary;
- (void)_fetchValueWithRetryCount:(long long)count;
- (void)_transitionToFetchFailure;
- (void)_updateValueWithValue:(id)value;
- (void)didUpdateValue;
- (void)unitPreferencesDidUpdate;
- (id)fetchOperationWithCompletion:(id /* block */)completion;
- (void)updateController:(id)controller didReceiveUpdateForType:(id)type samplesAdded:(id)added objectsRemoved:(id)removed recoveringFromError:(BOOL)error;
- (void)updateController:(id)controller didReceiveHighFrequencyUpdateForType:(id)type;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)_alertObserversDidUpdateValues;
- (void)dateCacheDidUpdate:(id)update onNotification:(id)notification;
- (void)_handleUnitPreferencesDidChangeNotification:(id)notification;
@end

#endif /* HKValueDataProvider_h */
