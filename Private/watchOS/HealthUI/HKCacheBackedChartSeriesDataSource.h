//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKCacheBackedChartSeriesDataSource_h
#define HKCacheBackedChartSeriesDataSource_h
@import Foundation;

#include "HKGraphSeriesDataSource.h"
#include "HKChartCache.h"
#include "HKChartDataCacheObserver-Protocol.h"

@class NSString;

@interface HKCacheBackedChartSeriesDataSource : HKGraphSeriesDataSource<HKChartDataCacheObserver> {
  /* instance variables */
  struct HKGraphSeriesDataBlockPath { long long index; long long zoom; long long resolution; } _lastStartPath;
  struct HKGraphSeriesDataBlockPath { long long index; long long zoom; long long resolution; } _lastEndPath;
}

@property (retain, nonatomic) HKChartCache *chartCache;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)cachedBlockForPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path context:(id)context;
- (void)blocksRequestedFromPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path toPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path priorityDelegate:(id)delegate;
- (BOOL)hasPendingQueriesBetweenStartPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path endPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path;
- (BOOL)hasAvailableBlocksBetweenStartPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path endPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path;
- (BOOL)hasAllBlocksAvailableBetweenStartPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path endPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path;
- (void)invalidateCache;
- (void)chartCacheDidUpdate:(id)update;
- (void)_resetCachedPaths;
@end

#endif /* HKCacheBackedChartSeriesDataSource_h */
