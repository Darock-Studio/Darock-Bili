//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKDisplayTypeChartingRules_h
#define HKDisplayTypeChartingRules_h
@import Foundation;

#include "HKDecimalPrecisionRule-Protocol.h"
#include "HKInteractiveChartsAxisScalingRule-Protocol.h"
#include "HKRemoteChartConfiguration.h"

@class NSDictionary, NSMutableDictionary, NSNumber;

@interface HKDisplayTypeChartingRules : NSObject {
  /* instance variables */
  long long _defaultStyle;
  NSMutableDictionary *_rulesByTimeScope;
  NSObject<HKDecimalPrecisionRule> *_allowedDecimalPrecisionRule;
  NSDictionary *_perUnitDecimalPrecision;
}

@property (retain, nonatomic) HKRemoteChartConfiguration *remoteChartConfiguration;
@property (readonly, nonatomic) BOOL shouldDisplayUnitForAxisLabels;
@property (readonly, nonatomic) BOOL shouldShowInitialLollipop;
@property (readonly, nonatomic) BOOL shouldInvertYAxis;
@property (readonly, nonatomic) BOOL shouldConnectSamplesWithLines;
@property (readonly, nonatomic) BOOL shouldRoundYAxisDuringExpansion;
@property (retain, nonatomic) NSNumber *maximumYAxisLabelCount;
@property (retain, nonatomic) NSNumber *maximumYAxisLabelWidth;
@property (readonly, nonatomic) long long defaultChartStyle;
@property (retain, nonatomic) NSObject<HKInteractiveChartsAxisScalingRule> *axisScalingRule;
@property (retain, nonatomic) NSObject<HKInteractiveChartsAxisScalingRule> *compactChartAxisScalingRule;
@property (nonatomic) long long preferredTimeScope;

/* class methods */
+ (BOOL)chartStyleContainsHorizontalGridlines:(long long)gridlines;
+ (id)chartingRulesWithDefaultChartStyle:(long long)style axisScalingRule:(id)rule;
+ (id)chartingRulesWithDefaultChartStyle:(long long)style chartStyleForTimeScopes:(id)scopes axisScalingRule:(id)rule preferredTimeScope:(long long)scope chartingOptions:(unsigned long long)options;
+ (id)chartingRulesWithDefaultChartStyle:(long long)style chartStyleForTimeScopes:(id)scopes axisScalingRule:(id)rule compactAxisScalingRule:(id)rule preferredTimeScope:(long long)scope chartingOptions:(unsigned long long)options;

/* instance methods */
- (id)initWithDefaultChartStyle:(long long)style;
- (id)initWithDefaultChartStyle:(long long)style chartingOptions:(unsigned long long)options;
- (id)initWithDefaultChartStyle:(long long)style chartingOptions:(unsigned long long)options preferredTimeScope:(long long)scope;
- (void)setChartStyle:(long long)style forTimeScope:(long long)scope;
- (long long)chartStyleForTimeScope:(long long)scope;
- (void)setIntervalComponents:(id)components forTimeScope:(long long)scope;
- (id)intervalComponentsForTimeScope:(long long)scope;
- (void)setChartPointLineWidth:(double)width forTimeScope:(long long)scope;
- (double)chartPointLineWidthForTimeScope:(long long)scope;
- (void)setChartPointRadius:(double)radius forTimeScope:(long long)scope;
- (double)chartPointRadiusForTimeScope:(long long)scope;
- (void)setLineChartFlatLastValue:(BOOL)value forTimeScope:(long long)scope;
- (BOOL)lineChartFlatLastValueForTimeScope:(long long)scope;
- (void)setLineChartExtendLastValue:(BOOL)value forTimeScope:(long long)scope;
- (BOOL)lineChartExtendLastValueForTimeScope:(long long)scope;
- (void)setLineChartExtendFirstValue:(BOOL)value forTimeScope:(long long)scope;
- (BOOL)lineChartExtendFirstValueForTimeScope:(long long)scope;
- (void)setLineChartUsesPointMarkerImage:(BOOL)image forTimeScope:(long long)scope;
- (BOOL)lineChartUsesPointMarkerImageForTimeScope:(long long)scope;
- (void)setLineChartUsesValueAxisAnnotation:(BOOL)annotation forTimeScope:(long long)scope;
- (BOOL)lineChartUsesValueAxisAnnotationForTimeScope:(long long)scope;
- (void)_setRule:(id)rule forKey:(id)key timeScope:(long long)scope;
- (id)_ruleForKey:(id)key timeScope:(long long)scope;
- (void)setAllowedDecimalPrecisionRule:(id)rule perUnitPrecisionRules:(id)rules;
- (id)allowedDecimalPrecisionRuleForUnit:(id)unit;
@end

#endif /* HKDisplayTypeChartingRules_h */
