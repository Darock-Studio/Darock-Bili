//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKBloodPressureSeries_h
#define HKBloodPressureSeries_h
@import Foundation;

#include "HKGraphSeries.h"
#include "HKBloodPressureSeriesPresentationStyle.h"

@class NSLock;

@interface HKBloodPressureSeries : HKGraphSeries

@property (readonly, nonatomic) NSLock *seriesMutableStateLock;
@property (retain, nonatomic) HKBloodPressureSeriesPresentationStyle *selectedPresentationStyleStorage;
@property (retain, nonatomic) HKBloodPressureSeriesPresentationStyle *unselectedPresentationStyleStorage;
@property (retain, nonatomic) HKBloodPressureSeriesPresentationStyle *selectedPresentationStyle;
@property (retain, nonatomic) HKBloodPressureSeriesPresentationStyle *unselectedPresentationStyle;

/* class methods */
+ (id)defaultSeriesWithSystolicColor:(id)color;
+ (void)_drawSystolicSymbolWithColor:(id)color atLocation:(struct CGPoint { double x0; double x1; })location width:(double)width context:(struct CGContext *)context;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_rectCenteredAt:(struct CGPoint { double x0; double x1; })at width:(double)width;
+ (void)_drawDiastolicSymbolWithColor:(id)color atLocation:(struct CGPoint { double x0; double x1; })location width:(double)width context:(struct CGContext *)context;
+ (id)systolicImageCompatibleWithFont:(id)font withColor:(id)color;
+ (id)diastolicImageCompatibleWithFont:(id)font withColor:(id)color;

/* instance methods */
- (id)init;
- (void)drawSeriesWithBlockCoordinates:(id)coordinates axisRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect zoomLevelConfiguration:(id)configuration pointTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform renderContext:(struct CGContext *)context secondaryRenderContext:(id)context seriesRenderingDelegate:(id)delegate;
- (void)_drawRangeDotsInContext:(struct CGContext *)context coordinate:(id)coordinate width:(double)width symbolType:(long long)type symbolColor:(id)color fillColor:(id)color;
- (void)_drawRangeBackgroundInContext:(struct CGContext *)context coordinate:(id)coordinate width:(double)width symbolType:(long long)type symbolColor:(id)color fillColor:(id)color;
- (void)_drawBloodPressureSymbol:(long long)symbol withColor:(id)color atLocation:(struct CGPoint { double x0; double x1; })location width:(double)width context:(struct CGContext *)context;
- (id)coordinatesForBlock:(id)block blockPath:(struct HKGraphSeriesDataBlockPath { long long x0; long long x1; long long x2; })path xAxis:(id)axis yAxis:(id)axis;
- (BOOL)supportsMultiTouchSelection;
- (double)distanceFromPoint:(struct CGPoint { double x0; double x1; })point blockCoordinate:(id)coordinate chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (double)xAxisDistanceFromPoint:(struct CGPoint { double x0; double x1; })point blockCoordinate:(id)coordinate chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (double)yAxisDifferenceToPoint:(struct CGPoint { double x0; double x1; })point blockCoordinate:(id)coordinate chartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)blockCoordinateIsVisibleInsideOfChartRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect blockCoordinate:(id)coordinate;
- (BOOL)blockCoordinate:(id)coordinate lessThan:(id)than;
- (BOOL)blockCoordinate:(id)coordinate greaterThan:(id)than;
@end

#endif /* HKBloodPressureSeries_h */
