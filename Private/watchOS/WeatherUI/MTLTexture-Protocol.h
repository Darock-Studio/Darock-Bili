//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 513.0.0.0.0
//
#ifndef MTLTexture_Protocol_h
#define MTLTexture_Protocol_h
@import Foundation;

@protocol MTLTexture <MTLResource>

@property (readonly) NSObject<MTLResource> *rootResource;
@property (readonly) NSObject<MTLTexture> *parentTexture;
@property (readonly) unsigned long long parentRelativeLevel;
@property (readonly) unsigned long long parentRelativeSlice;
@property (readonly) NSObject<MTLBuffer> *buffer;
@property (readonly) unsigned long long bufferOffset;
@property (readonly) unsigned long long bufferBytesPerRow;
@property (readonly) struct __IOSurface * iosurface;
@property (readonly) unsigned long long iosurfacePlane;
@property (readonly) unsigned long long textureType;
@property (readonly) unsigned long long pixelFormat;
@property (readonly) unsigned long long width;
@property (readonly) unsigned long long height;
@property (readonly) unsigned long long depth;
@property (readonly) unsigned long long mipmapLevelCount;
@property (readonly) unsigned long long sampleCount;
@property (readonly) unsigned long long arrayLength;
@property (readonly) unsigned long long usage;
@property (readonly) BOOL framebufferOnly;
@property (readonly) unsigned long long firstMipmapInTail;
@property (readonly) unsigned long long tailSizeInBytes;
@property (readonly) BOOL isSparse;
@property (readonly) BOOL allowGPUOptimizedContents;
@property (readonly) long long compressionType;
@property (readonly) struct MTLResourceID { unsigned long long x0; } gpuResourceID;
@property (readonly, nonatomic) struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; } swizzle;

/* instance methods */
- (void)getBytes:(void *)bytes bytesPerRow:(unsigned long long)row bytesPerImage:(unsigned long long)image fromRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })region mipmapLevel:(unsigned long long)level slice:(unsigned long long)slice;
- (void)replaceRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })region mipmapLevel:(unsigned long long)level slice:(unsigned long long)slice withBytes:(const void *)bytes bytesPerRow:(unsigned long long)row bytesPerImage:(unsigned long long)image;
- (void)getBytes:(void *)bytes bytesPerRow:(unsigned long long)row fromRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })region mipmapLevel:(unsigned long long)level;
- (void)replaceRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })region mipmapLevel:(unsigned long long)level withBytes:(const void *)bytes bytesPerRow:(unsigned long long)row;
- (id)newTextureViewWithPixelFormat:(unsigned long long)format;
- (id)newTextureViewWithPixelFormat:(unsigned long long)format textureType:(unsigned long long)type levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })levels slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })slices;
- (id)newTextureViewWithPixelFormat:(unsigned long long)format textureType:(unsigned long long)type levels:(struct _NSRange { unsigned long long x0; unsigned long long x1; })levels slices:(struct _NSRange { unsigned long long x0; unsigned long long x1; })slices swizzle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; })swizzle;
- (BOOL)isFramebufferOnly;
@end

#endif /* MTLTexture_Protocol_h */
