//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 123.2.7.0.1
//
#ifndef ContextSyncService_h
#define ContextSyncService_h
@import Foundation;

#include "ContextSyncManaging-Protocol.h"
#include "IDSServiceDelegate-Protocol.h"
#include "NSXPCListenerDelegate-Protocol.h"
#include "_ContextSyncSubscriptions.h"

@class IDSService, NSMutableDictionary, NSString, NSUserDefaults, NSXPCListener;
@protocol OS_dispatch_queue;

@interface ContextSyncService : NSObject<NSXPCListenerDelegate, IDSServiceDelegate, ContextSyncManaging>

@property (retain, nonatomic) IDSService *localService;
@property (retain, nonatomic) IDSService *internetService;
@property (retain, nonatomic) NSXPCListener *listener;
@property (retain, nonatomic) _ContextSyncSubscriptions *subscriptions;
@property (retain, nonatomic) NSUserDefaults *subscriptionDefaults;
@property (retain, nonatomic) NSString *deviceUUID;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *idsQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *biomeQueue;
@property (retain, nonatomic) NSMutableDictionary *remoteDSLIdentifiers;
@property (retain, nonatomic) NSMutableDictionary *localDSLIdentifiers;
@property (nonatomic) BOOL rebootNotificationDelivered;
@property (retain, nonatomic) NSMutableDictionary *lockedUpdates;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)contextSyncManager;
+ (id)stringForIDSDeviceType:(long long)type;

/* instance methods */
- (id)init;
- (void)loadSubscriptions;
- (void)initializeSinksForRemoteDSLIdentifiers:(id)dslidentifiers;
- (void)updateSubscriptionsAfterUnlock;
- (id)devicesWithDeviceType:(long long)type;
- (id)contextSyncLOIFromSemanticLocationEvent:(id)event;
- (id)contextSyncActivityLevelEventFromEvent:(id)event;
- (id)contextSyncCellularStatusFromEvent:(id)event;
- (id)contextSyncWalletTransactionFromEvent:(id)event;
- (id)registerSinkWithIdentifier:(id)identifier withDSL:(id)dsl;
- (void)subscribeToBiomeWithRemoteDSL:(id)dsl forRemoteIdentifier:(id)identifier;
- (void)removeSubscriptionsForRemoteDevice:(id)device;
- (void)sendLocalSubscriptionToDevice:(id)device;
- (id)bmdslFromMessage:(id)message forIdentifier:(id)identifier;
- (void)saveRemoteSubscription:(id)subscription forDevice:(id)device;
- (void)contextChanged:(id)changed forSubscriptionWithIdentifier:(id)identifier;
- (BOOL)registerRemoteDSLSubscription:(id)dslsubscription withRemoteIdentifier:(id)identifier asWakingCall:(BOOL)call forDevices:(id)devices;
- (BOOL)unregisterRemoteDSLSubscription:(id)dslsubscription withRemoteIdentifier:(id)identifier forDevices:(id)devices;
- (void)saveObject:(id)object forDevice:(id)device;
- (void)sendIDSMessageAsWaking:(BOOL)waking toDevices:(id)devices withContent:(id)content;
- (BOOL)registerForUpdates:(id)updates withIdentifier:(id)identifier shouldWake:(BOOL)wake forDeviceTypes:(long long)types withError:(id *)error;
- (BOOL)unregisterForUpdates:(id)updates withIdentifier:(id)identifier forDeviceTypes:(long long)types withError:(id *)error;
- (BOOL)registerForUpdates:(id)updates withIdentifier:(id)identifier shouldWake:(BOOL)wake forDevices:(id)devices withError:(id *)error;
- (BOOL)unregisterForUpdates:(id)updates withIdentifier:(id)identifier forDevices:(id)devices withError:(id *)error;
- (id)idsDeviceForDeviceUUID:(id)uuid;
- (void)logMetricsForIdentifier:(id)identifier withLocalDSL:(id)dsl forDevice:(id)device uponReboot:(BOOL)reboot;
- (void)logMetricsForMessage:(id)message andContext:(id)context fromDevice:(id)device;
- (void)service:(id)service account:(id)account incomingMessage:(id)message fromID:(id)id context:(id)context;
- (void)connection:(id)connection devicesChanged:(id)changed;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)registerForUpdates:(id)updates withIdentifier:(id)identifier forUseCase:(id)case shouldWake:(BOOL)wake forDeviceTypes:(long long)types withErrorHandler:(id /* block */)handler;
- (void)registerForUpdates:(id)updates withIdentifier:(id)identifier forUseCase:(id)case shouldWake:(BOOL)wake forDeviceTypes:(long long)types withHandler:(id /* block */)handler;
- (void)registerForUpdates:(id)updates withIdentifier:(id)identifier forUseCase:(id)case shouldWake:(BOOL)wake forDevices:(id)devices withErrorHandler:(id /* block */)handler;
- (void)unregisterForUpdates:(id)updates withIdentifier:(id)identifier forUseCase:(id)case forDeviceTypes:(long long)types withErrorHandler:(id /* block */)handler;
- (void)unregisterForUpdates:(id)updates withIdentifier:(id)identifier forUseCase:(id)case forDeviceTypes:(long long)types withHandler:(id /* block */)handler;
- (void)unregisterForUpdates:(id)updates withIdentifier:(id)identifier forUseCase:(id)case forDevices:(id)devices withErrorHandler:(id /* block */)handler;
@end

#endif /* ContextSyncService_h */
