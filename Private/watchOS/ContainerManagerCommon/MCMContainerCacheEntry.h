//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 582.60.2.0.0
//
#ifndef MCMContainerCacheEntry_h
#define MCMContainerCacheEntry_h
@import Foundation;

#include "MCMContainerCacheControlsXattrs-Protocol.h"
#include "MCMContainerCacheEntry-Protocol.h"
#include "MCMContainerCacheEntry_Internal-Protocol.h"
#include "MCMContainerCacheUpdatable-Protocol.h"
#include "MCMContainerPath.h"
#include "MCMFSNode.h"
#include "MCMMetadata-Protocol.h"
#include "MCMUserIdentityCache.h"

@class NSNumber, NSString, NSUUID;

@interface MCMContainerCacheEntry : NSObject<MCMContainerCacheControlsXattrs, MCMContainerCacheEntry_Internal, MCMContainerCacheEntry>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) MCMFSNode *fsNode;
@property (retain, nonatomic) NSObject<MCMMetadata> *metadata;
@property (retain, nonatomic) NSUUID *uuid;
@property (retain, nonatomic) MCMContainerPath *containerPath;
@property (retain, nonatomic) NSNumber *schemaVersion;
@property (readonly, nonatomic) MCMUserIdentityCache *userIdentityCache;
@property (weak, nonatomic) NSObject<MCMContainerCacheUpdatable> *cache;
@property (readonly, nonatomic) NSString *identifier;
@property (nonatomic) BOOL corrupt;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)identifierForURL:(id)url;
+ (id)identifierForFileHandle:(id)handle;
+ (id)schemaVersionForURL:(id)url;
+ (id)schemaVersionForFileHandle:(id)handle;
+ (id)UUIDForURL:(id)url;
+ (id)UUIDForFileHandle:(id)handle;
+ (void)setIdentifier:(id)identifier forURL:(id)url;
+ (void)setIdentifier:(id)identifier forFileHandle:(id)handle;
+ (void)setSchemaVersion:(id)version forURL:(id)url;
+ (void)setSchemaVersion:(id)version forFileHandle:(id)handle;
+ (void)setUUID:(id)uuid forURL:(id)url;
+ (void)setUUID:(id)uuid forFileHandle:(id)handle;
+ (void)clearAttributesForURL:(id)url;
+ (void)clearAttributesForFileHandle:(id)handle;
+ (id)_fileHandleForURL:(id)url writeable:(BOOL)writeable;

/* instance methods */
- (void)setXattrs;
- (void)setXattrsWithFileHandle:(id)handle;
- (id)initWithMetadata:(id)metadata userIdentityCache:(id)cache;
- (id)initWithIdentifier:(id)identifier containerPath:(id)path schemaVersion:(id)version uuid:(id)uuid metadata:(id)metadata userIdentityCache:(id)cache;
- (id)initFromContainerPath:(id)path identifier:(id)identifier uuid:(id)uuid schemaVersion:(id)version userIdentityCache:(id)cache;
- (id)metadataWithError:(id *)error;
- (BOOL)verify;
- (id)metadataMinimal;
- (id)containerIdentity;
- (id)fullDescription;
- (BOOL)isEqualToContainerCacheEntry:(id)entry;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)_readMetadataForIdentifier:(id)identifier containerPath:(id)path error:(id *)error;
- (id)_fabricateMetadataForContainerPath:(id)path identifier:(id)identifier uuid:(id)uuid schemaVersion:(id)version userIdentityCache:(id)cache;
- (id)_identifierForContainerPath:(id)path;
- (id)_findUserManagedAssetsDirectoryAtContainerRootURL:(id)url;
- (id)_metadataFromContainerPath:(id)path identifier:(id)identifier uuid:(id)uuid schemaVersion:(id)version userIdentityCache:(id)cache;
@end

#endif /* MCMContainerCacheEntry_h */
