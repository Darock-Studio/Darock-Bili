//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 582.60.2.0.0
//
#ifndef MCMFileManager_h
#define MCMFileManager_h
@import Foundation;

#include "MCMFileManager-Protocol.h"

@class BOOL *;

@interface MCMFileManager : NSObject<MCMFileManager>
/* class methods */
+ (id)defaultManager;

/* instance methods */
- (BOOL)removeItemAtURL:(id)url error:(id *)error;
- (BOOL)createDirectoryAtURL:(id)url withIntermediateDirectories:(BOOL)directories mode:(unsigned short)mode owner:(id)owner dataProtectionClass:(int)class error:(id *)error;
- (BOOL)createDirectoryAtURL:(id)url withIntermediateDirectories:(BOOL)directories mode:(unsigned short)mode owner:(id)owner dataProtectionClass:(int)class fsNode:(id *)node error:(id *)error;
- (BOOL)createDirectoryAtURL:(id)url withIntermediateDirectories:(BOOL)directories mode:(unsigned short)mode owner:(id)owner error:(id *)error;
- (BOOL)createDirectoryAtURL:(id)url withIntermediateDirectories:(BOOL)directories mode:(unsigned short)mode dataProtectionClass:(int)class error:(id *)error;
- (BOOL)createDirectoryAtURL:(id)url withIntermediateDirectories:(BOOL)directories mode:(unsigned short)mode error:(id *)error;
- (BOOL)symbolicallyLinkURL:(id)url toSymlinkTarget:(id)target error:(id *)error;
- (id)targetOfSymbolicLinkAtURL:(id)url error:(id *)error;
- (BOOL)_copyItemAtURL:(id)url toURL:(id)url failIfSrcMissing:(BOOL)missing error:(id *)error;
- (BOOL)_moveItemAtURL:(id)url toURL:(id)url failIfSrcMissing:(BOOL)missing error:(id *)error;
- (BOOL)copyItemIfExistsAtURL:(id)url toURL:(id)url error:(id *)error;
- (BOOL)moveItemIfExistsAtURL:(id)url toURL:(id)url error:(id *)error;
- (BOOL)copyItemAtURL:(id)url toURL:(id)url error:(id *)error;
- (BOOL)moveItemAtURL:(id)url toURL:(id)url error:(id *)error;
- (BOOL)replaceItemAtDestinationURL:(id)url withSourceURL:(id)url swapped:(BOOL *)swapped error:(id *)error;
- (id)createTemporaryDirectoryInDirectoryURL:(id)url withNamePrefix:(id)prefix error:(id *)error;
- (id)createTemporaryDirectoryInDirectoryURL:(id)url error:(id *)error;
- (BOOL)_traverseDirectory:(id)directory error:(id *)error withBlock:(id /* block */)block;
- (BOOL)_CreateSystemUserACEInACL:(struct _acl * *)acl withPermissions:(int)permissions andFlags:(int)flags withError:(id *)error;
- (struct _acl *)_CopySystemContainerACLWithNumACEs:(int)aces isDir:(BOOL)dir inheritOnly:(BOOL)only withError:(id *)error;
- (struct _acl *)_CopyTopLevelSystemContainerACLWithError:(id *)error;
- (BOOL)setTopLevelSystemContainerACLAtURL:(id)url error:(id *)error;
- (BOOL)standardizeACLsAtURL:(id)url isSystemContainer:(BOOL)container error:(id *)error;
- (BOOL)standardizeACLsForSystemContainerAtURL:(id)url error:(id *)error;
- (BOOL)standardizeAllSystemContainerACLsAtURL:(id)url error:(id *)error;
- (BOOL)standardizeOwnershipAtURL:(id)url toPOSIXUser:(id)posixuser error:(id *)error;
- (id)urlsForItemsInDirectoryAtURL:(id)url error:(id *)error;
- (BOOL)itemExistsAtURL:(id)url;
- (BOOL)itemAtURL:(id)url exists:(BOOL *)exists error:(id *)error;
- (BOOL)itemExistsAtURL:(id)url isDirectory:(BOOL *)directory;
- (BOOL)itemAtURL:(id)url exists:(BOOL *)exists isDirectory:(BOOL *)directory error:(id *)error;
- (BOOL)itemAtURL:(id)url followSymlinks:(BOOL)symlinks exists:(BOOL *)exists isDirectory:(BOOL *)directory error:(id *)error;
- (BOOL)itemAtURL:(id)url followSymlinks:(BOOL)symlinks exists:(BOOL *)exists isDirectory:(BOOL *)directory fsNode:(id *)node error:(id *)error;
- (BOOL)itemDoesNotExistAtURL:(id)url;
- (BOOL)dataProtectionClassOfItemAtURL:(id)url dataProtectionClass:(int *)class error:(id *)error;
- (BOOL)setDataProtectionClassOfItemAtURL:(id)url toDataProtectionClass:(int)class ifPredicate:(id /* block */)predicate error:(id *)error;
- (void)printDirectoryStructureAtURL:(id)url;
- (BOOL)enableFastDiskUsageForURL:(id)url error:(id *)error;
- (struct { unsigned long long x0; unsigned long long x1; })fastDiskUsageForURL:(id)url;
- (struct { unsigned long long x0; unsigned long long x1; })diskUsageForURL:(id)url;
- (id)_realPathWhatExistsInPath:(id)path;
- (id)_realPathForURL:(id)url allowNonExistentPathComponents:(BOOL)components;
- (BOOL)_validateSymlink:(id)symlink withStartingDepth:(unsigned int)depth andEndingDepth:(unsigned int *)depth;
- (id)realPathForURL:(id)url ifChildOfURL:(id)url;
- (id)realPathForURL:(id)url isDirectory:(BOOL)directory error:(id *)error;
- (id)readDataFromURL:(id)url options:(unsigned long long)options error:(id *)error;
- (id)readDataFromURL:(id)url options:(unsigned long long)options fsNode:(id *)node error:(id *)error;
- (BOOL)writeData:(id)data toURL:(id)url options:(unsigned long long)options mode:(unsigned short)mode error:(id *)error;
- (BOOL)compareVolumeForURL:(id)url versusURL:(id)url isSameVolume:(BOOL *)volume error:(id *)error;
- (BOOL)checkFileSystemAtURL:(id)url isCaseSensitive:(BOOL *)sensitive canAtomicSwap:(BOOL *)swap error:(id *)error;
- (BOOL)checkFileSystemAtURL:(id)url supportsPerFileKeys:(BOOL *)keys error:(id *)error;
- (BOOL)_enumeratePOSIX1eACLEntriesAtURL:(id)url error:(id *)error usingBlock:(id /* block */)block;
- (BOOL)stripACLFromURL:(id)url error:(id *)error;
- (unsigned long long)dataWritingOptionsForFileAtURL:(id)url;
- (BOOL)fixUserPermissionsAtURL:(id)url limitToTopLevelURL:(id)url error:(id *)error;
- (BOOL)removeExclusionFromBackupFromURL:(id)url error:(id *)error;
- (id)copyDescriptionOfURL:(id)url;
- (id)fsNodeOfURL:(id)url followSymlinks:(BOOL)symlinks error:(id *)error;
- (id)fsSanitizedStringFromString:(id)string allowSpaces:(BOOL)spaces;
- (BOOL)repairPermissionsAtURL:(id)url uid:(unsigned int)uid gid:(unsigned int)gid options:(unsigned long long)options error:(id *)error;
- (struct _filesec *)_removeACLFilesec;
- (struct _filesec *)_denyDeleteACLFilesecWithACLText:(char * *)acltext;
- (BOOL)_withEveryoneDenyDeleteACLDoBlock:(id /* block */)block;
- (BOOL)_fixACLOnFD:(int)fd removeACLFilesec:(struct _filesec *)aclfilesec denyDeleteFilesec:(struct _filesec *)filesec denyDeleteText:(const char *)text path:(const char *)path error:(id *)error;
- (BOOL)_fixPOSIXPermsOnFD:(int)fd FTSENT:(struct _ftsent { struct _ftsent * x0; struct _ftsent * x1; struct _ftsent * x2; long long x3; void * x4; char * x5; char * x6; int x7; int x8; unsigned short x9; unsigned short x10; unsigned long long x11; int x12; unsigned short x13; short x14; unsigned short x15; unsigned short x16; unsigned short x17; struct stat * x18; char x19[1] } *)ftsent stat:(struct stat { int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned int x4; unsigned int x5; int x6; struct timespec { long long x0; long long x1; } x7; struct timespec { long long x0; long long x1; } x8; struct timespec { long long x0; long long x1; } x9; struct timespec { long long x0; long long x1; } x10; long long x11; long long x12; int x13; unsigned int x14; unsigned int x15; int x16; long long x17[2] } *)stat error:(id *)error;
- (BOOL)_fixPOSIXBitsOnFD:(int)fd FTSENT:(struct _ftsent { struct _ftsent * x0; struct _ftsent * x1; struct _ftsent * x2; long long x3; void * x4; char * x5; char * x6; int x7; int x8; unsigned short x9; unsigned short x10; unsigned long long x11; int x12; unsigned short x13; short x14; unsigned short x15; unsigned short x16; unsigned short x17; struct stat * x18; char x19[1] } *)ftsent stat:(struct stat { int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned int x4; unsigned int x5; int x6; struct timespec { long long x0; long long x1; } x7; struct timespec { long long x0; long long x1; } x8; struct timespec { long long x0; long long x1; } x9; struct timespec { long long x0; long long x1; } x10; long long x11; long long x12; int x13; unsigned int x14; unsigned int x15; int x16; long long x17[2] } *)stat error:(id *)error;
- (BOOL)_fixFlagsOnFD:(int)fd FTSENT:(struct _ftsent { struct _ftsent * x0; struct _ftsent * x1; struct _ftsent * x2; long long x3; void * x4; char * x5; char * x6; int x7; int x8; unsigned short x9; unsigned short x10; unsigned long long x11; int x12; unsigned short x13; short x14; unsigned short x15; unsigned short x16; unsigned short x17; struct stat * x18; char x19[1] } *)ftsent stat:(struct stat { int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned int x4; unsigned int x5; int x6; struct timespec { long long x0; long long x1; } x7; struct timespec { long long x0; long long x1; } x8; struct timespec { long long x0; long long x1; } x9; struct timespec { long long x0; long long x1; } x10; long long x11; long long x12; int x13; unsigned int x14; unsigned int x15; int x16; long long x17[2] } *)stat error:(id *)error;
- (BOOL)_fixOwnershipOnFD:(int)fd FTSENT:(struct _ftsent { struct _ftsent * x0; struct _ftsent * x1; struct _ftsent * x2; long long x3; void * x4; char * x5; char * x6; int x7; int x8; unsigned short x9; unsigned short x10; unsigned long long x11; int x12; unsigned short x13; short x14; unsigned short x15; unsigned short x16; unsigned short x17; struct stat * x18; char x19[1] } *)ftsent stat:(struct stat { int x0; unsigned short x1; unsigned short x2; unsigned long long x3; unsigned int x4; unsigned int x5; int x6; struct timespec { long long x0; long long x1; } x7; struct timespec { long long x0; long long x1; } x8; struct timespec { long long x0; long long x1; } x9; struct timespec { long long x0; long long x1; } x10; long long x11; long long x12; int x13; unsigned int x14; unsigned int x15; int x16; long long x17[2] } *)stat statfs:(struct statfs { unsigned int x0; int x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct fsid { int x0[2] } x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; char x12[16] char x13[1024] char x14[1024] unsigned int x15; unsigned int x16[7] } *)statfs uid:(unsigned int)uid gid:(unsigned int)gid error:(id *)error;
@end

#endif /* MCMFileManager_h */
