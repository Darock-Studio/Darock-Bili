//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 582.60.2.0.0
//
#ifndef MCMContainerPath_h
#define MCMContainerPath_h
@import Foundation;

#include "MCMContainerClassPath.h"
#include "MCMContainerPathHasComponents-Protocol.h"
#include "MCMPOSIXUser.h"
#include "MCMUserIdentity.h"

@class BOOL *, NSString, NSURL;

@interface MCMContainerPath : NSObject<MCMContainerPathHasComponents>

@property (readonly, nonatomic) NSString *containerRootComponent;
@property (readonly, nonatomic) NSString *containerDataComponent;
@property (readonly, nonatomic) NSURL *containerRootURL;
@property (readonly, nonatomic) NSURL *containerDataURL;
@property (readonly, nonatomic) NSURL *metadataURL;
@property (readonly, nonatomic) NSString *containerPathIdentifier;
@property (readonly, nonatomic) MCMContainerClassPath *containerClassPath;
@property (readonly, nonatomic) MCMPOSIXUser *rootPOSIXOwner;
@property (readonly, nonatomic) unsigned short rootPOSIXMode;
@property (readonly, nonatomic) MCMPOSIXUser *dataPOSIXOwner;
@property (readonly, nonatomic) unsigned short dataPOSIXMode;
@property (readonly, nonatomic) MCMPOSIXUser *schemaPOSIXOwner;
@property (readonly, nonatomic) unsigned short schemaPOSIXMode;
@property (nonatomic) BOOL exists;
@property (readonly, nonatomic) BOOL transient;
@property (readonly, nonatomic) MCMUserIdentity *userIdentity;
@property (readonly, nonatomic) unsigned long long containerClass;
@property (readonly, nonatomic) BOOL randomized;
@property (readonly, nonatomic) NSURL *baseURL;
@property (readonly, nonatomic) NSURL *categoryURL;
@property (readonly, nonatomic) NSURL *classURL;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)containerPathForContainerIdentity:(id)identity containerPathIdentifier:(id)identifier;
+ (id)containerPathForUserIdentity:(id)identity containerClass:(unsigned long long)class containerPathIdentifier:(id)identifier;
+ (id)containerPathForContainerClassPath:(id)path containerPathIdentifier:(id)identifier;
+ (id)containerPathIdentifierForCodeSignIdentifier:(id)identifier containerClass:(unsigned long long)class;
+ (id)containerPathFromURL:(id)url containerClassPath:(id)path relativePath:(id *)path;
+ (Class)_containerClassPathClass;
+ (id)_posixOwnerForContainerSubdirectories:(unsigned long long)subdirectories user:(id)user;

/* instance methods */
- (BOOL)createIfNecessaryWithDataProtectionClass:(int)class error:(id *)error;
- (BOOL)createDataURLIfNecessaryWithDataProtectionClass:(int)class error:(id *)error;
- (id)containerPathForRealPath;
- (id)initWithContainerClassPath:(id)path containerPathIdentifier:(id)identifier containerRootComponent:(id)component containerDataComponent:(id)component;
- (BOOL)isEqualToContainerPath:(id)path;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isRandomized;
- (BOOL)_obj1:(id)_obj1 isEqualToObj2:(id)obj2;
- (BOOL)_createURLIfNecessary:(id)necessary mode:(unsigned short)mode owner:(id)owner dataProtectionClass:(int)class exists:(BOOL *)exists error:(id *)error;
@end

#endif /* MCMContainerPath_h */
