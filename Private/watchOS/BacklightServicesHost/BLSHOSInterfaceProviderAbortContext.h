//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3.2.4.0.0
//
#ifndef BLSHOSInterfaceProviderAbortContext_h
#define BLSHOSInterfaceProviderAbortContext_h
@import Foundation;

#include "BLSHWatchdogAbortContext-Protocol.h"

@class NSString;

@interface BLSHOSInterfaceProviderAbortContext : NSObject<BLSHWatchdogAbortContext> {
  /* instance variables */
  unsigned long long _watchdogType;
  long long _cbDisplayMode;
  long long _cbFlipbookState;
  BOOL _suppressionServiceActive;
  BOOL _caFlipbookEnabled;
  BOOL _caFlipbookSuppressed;
  BOOL _caBlanked;
  BOOL _flipbookTransparent;
  BOOL _deviceSupportsAlwaysOn;
  BOOL _kernelSpecialMode;
  BOOL _displayStateClientSupported;
  float _backlightDimmedFactor;
}

@property (readonly, nonatomic) unsigned long long abortReason;
@property (readonly, copy, nonatomic) NSString *abortReasonString;
@property (readonly, nonatomic) const void * payload;
@property (readonly, nonatomic) unsigned int payloadSize;
@property (readonly, nonatomic) BOOL hasEnsureFlipbookCurrent;
@property (readonly, nonatomic) BOOL wantsPanic;
@property (readonly, nonatomic) BOOL wantsWaitPastFireForCompletionAndTailspin;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithWatchdogType:(unsigned long long)type cbDisplayMode:(long long)mode cbFlipbookState:(long long)state suppressionServiceActive:(BOOL)active caFlipbookEnabled:(BOOL)enabled caFlipbookSuppressed:(BOOL)suppressed caBlanked:(BOOL)blanked flipbookTransparent:(BOOL)transparent deviceSupportsAlwaysOn:(BOOL)on kernelSpecialMode:(BOOL)mode displayStateClientSupported:(BOOL)supported backlightDimmedFactor:(float)factor;
- (void)setSleepImminentAbortReason;
@end

#endif /* BLSHOSInterfaceProviderAbortContext_h */
