//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3.2.4.0.0
//
#ifndef BLSHBacklightIdleProvider_h
#define BLSHBacklightIdleProvider_h
@import Foundation;

#include "BLSHBacklightHostObserving-Protocol.h"
#include "BLSHUserIdleProviding-Protocol.h"
#include "BLSHUserIdleProvidingDelegate-Protocol.h"
#include "BSInvalidatable-Protocol.h"

@class NSString;
@protocol BLSHBacklightHostObservable><BLSBacklightChangeRequestable, BLSHBacklightIdleProviderDelegate;

@interface BLSHBacklightIdleProvider : NSObject<BLSHBacklightHostObserving, BLSHUserIdleProvidingDelegate, BSInvalidatable> {
  /* instance variables */
  NSObject<BLSHUserIdleProviding> *_lock_idleProvider;
  NSObject<BLSHBacklightHostObservable><BLSBacklightChangeRequestable> *_backlightHost;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  double _lock_idleTimeout;
  double _lock_nonInteractiveIdleTimeout;
  long long _lock_previousBacklightState;
  BOOL _lock_started;
  BOOL _lock_active;
  BOOL _lock_suspended;
  BOOL _lock_suppressed;
  BOOL _lock_idle;
  BOOL _lock_pendingIdleInactiveRequest;
  BOOL _lock_didStartTransitionToNewState;
  BOOL _lock_userActivityOccured;
  BOOL _lock_invalidated;
}

@property (nonatomic) BOOL active;
@property (weak, nonatomic) NSObject<BLSHBacklightIdleProviderDelegate> *delegate;
@property (nonatomic) double idleTimeout;
@property (nonatomic) double nonInteractiveIdleTimeout;
@property (readonly, nonatomic) BOOL idle;
@property (readonly, nonatomic) BOOL userActivityOccured;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)createSharedProviderWithLocalAssertionService:(id)service;
+ (id)sharedProvider;

/* instance methods */
- (id)initWithLocalAssertionService:(id)service idleProvider:(id)provider backlightHost:(id)host;
- (void)dealloc;
- (void)start;
- (void)signalUserActivityOccurred;
- (void)reset;
- (void)invalidate;
- (BOOL)isActive;
- (BOOL)isIdle;
- (BOOL)hasUserActivityOccured;
- (void)setSuspended:(BOOL)suspended;
- (void)backlight:(id)backlight didCompleteUpdateToState:(long long)state forEvents:(id)events abortedEvents:(id)events;
- (void)backlightHost:(id)host willTransitionToState:(long long)state forEvent:(id)event;
- (void)idleProviderDidIdle:(id)idle;
- (void)idleProviderDidUnidle:(id)unidle;
@end

#endif /* BLSHBacklightIdleProvider_h */
