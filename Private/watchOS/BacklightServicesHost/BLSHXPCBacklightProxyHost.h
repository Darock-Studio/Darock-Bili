//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3.2.4.0.0
//
#ifndef BLSHXPCBacklightProxyHost_h
#define BLSHXPCBacklightProxyHost_h
@import Foundation;

#include "BLSBacklightProxy-Protocol.h"
#include "BLSHBacklightHostObserving-Protocol.h"
#include "BLSXPCBacklightProxyHostInterface-Protocol.h"
#include "BSInvalidatable-Protocol.h"

@class BLSXPCBacklightProxyObserverMask, NSString, RBSProcessMonitor;
@protocol BLSXPCBacklightProxyClientInterface;

@interface BLSHXPCBacklightProxyHost : NSObject<BLSHBacklightHostObserving, BLSXPCBacklightProxyHostInterface, BSInvalidatable> {
  /* instance variables */
  NSObject<BLSBacklightProxy> *_localBacklightProxy;
  NSObject<BLSXPCBacklightProxyClientInterface> *_lock_observingClient;
  RBSProcessMonitor *_processMonitor;
  BLSXPCBacklightProxyObserverMask *_lock_observingMask;
  int _clientPid;
  unsigned int _entitlements;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  BOOL _lock_clientIsTaskScheduled;
  BOOL _lock_stateIsStale;
  BOOL _lock_valid;
  BOOL _lock_observingDidCompleteUpdateToState;
  BOOL _lock_observingDidChangeAlwaysOnEnabled;
  BOOL _lock_observingActivatingWithEvent;
  BOOL _lock_observingDeactivatingWithEvent;
  BOOL _lock_observingPerformingEvent;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithLocalBacklightProxy:(id)proxy peer:(id)peer;
- (void)dealloc;
- (void)invalidate;
- (id)getBacklightState;
- (id)getFlipbookState;
- (BOOL)isTransitioning;
- (BOOL)isAlwaysOnEnabled;
- (BOOL)deviceSupportsAlwaysOn;
- (id)performChangeRequest:(id)request;
- (void)nowObservingWithMask:(id)mask completion:(id /* block */)completion;
- (void)backlight:(id)backlight didCompleteUpdateToState:(long long)state forEvents:(id)events abortedEvents:(id)events;
- (void)backlight:(id)backlight didChangeAlwaysOnEnabled:(BOOL)enabled;
- (BOOL)observesActivation;
- (void)backlight:(id)backlight activatingWithEvent:(id)event;
- (BOOL)observesDeactivation;
- (void)backlight:(id)backlight deactivatingWithEvent:(id)event;
- (BOOL)observesPerformingAllEvents;
- (void)backlight:(id)backlight performingEvent:(id)event;
@end

#endif /* BLSHXPCBacklightProxyHost_h */
