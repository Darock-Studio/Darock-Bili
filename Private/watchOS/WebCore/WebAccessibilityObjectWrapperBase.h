//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WebAccessibilityObjectWrapperBase_h
#define WebAccessibilityObjectWrapperBase_h
@import Foundation;

@protocol struct ObjectIdentifierGeneric<WebCore::AXIDType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; }, {ObjectIdentifierGeneric<WebCore::AXIDType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}, {WeakPtr<WebCore::AccessibilityObject, WTF::DefaultWeakPtrImpl>="m_impl"{RefPtr<WTF::DefaultWeakPtrImpl, WTF::RawPtrTraits<WTF::DefaultWeakPtrImpl>, WTF::DefaultRefDerefTraits<WTF::DefaultWeakPtrImpl>>="m_ptr"^{DefaultWeakPtrImpl}}};

@interface WebAccessibilityObjectWrapperBase : NSObject {
  /* instance variables */
  struct WeakPtr<WebCore::AccessibilityObject, WTF::DefaultWeakPtrImpl> { struct RefPtr<WTF::DefaultWeakPtrImpl, WTF::RawPtrTraits<WTF::DefaultWeakPtrImpl>, WTF::DefaultRefDerefTraits<WTF::DefaultWeakPtrImpl>> { struct DefaultWeakPtrImpl *m_ptr; } m_impl; } m_axObject;
}

@property (nonatomic) struct ObjectIdentifierGeneric<WebCore::AXIDType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } identifier;

/* class methods */
+ (void)accessibilitySetShouldRepostNotifications:(BOOL)notifications;

/* instance methods */
- (id)initWithAccessibilityObject:(void *)object;
- (void)attachAXObject:(void *)axobject;
- (void)detach;
- (BOOL)_prepareAccessibilityCall;
- (id)attachmentView;
- (void *)axBackingObject;
- (BOOL)isIsolatedObject;
- (id)baseAccessibilitySpeechHint;
- (id)accessibilityCustomContent;
- (id)baseAccessibilityHelpText;
- (struct CGPath *)convertPathToScreenSpace:(const void *)space;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })accessibilityVisibleCharacterRange;
- (id)_accessibilityWebDocumentView;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertRectToSpace:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)space space:(int)space;
- (void *)baseUpdateBackingStore;
- (id)lineRectsAndText;
- (id)ariaLandmarkRoleDescription;
- (id)accessibilityPlatformMathSubscriptKey;
- (id)accessibilityPlatformMathSuperscriptKey;
- (id)accessibilityMathPostscriptPairs;
- (id)accessibilityMathPrescriptPairs;
- (id)baseAccessibilityResolvedEditingStyles;
- (void)accessibilityPostedNotification:(id)notification;
- (void)accessibilityPostedNotification:(id)notification userInfo:(id)info;
- (id)innerHTML;
- (id)outerHTML;
@end

#endif /* WebAccessibilityObjectWrapperBase_h */
