//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WebCoreNSURLSession_h
#define WebCoreNSURLSession_h
@import Foundation;

@class NSOperationQueue, NSString, NSURLSessionConfiguration;
@protocol NSURLSessionTaskDelegate, {HashSet<WTF::RefPtr<WebCore::SecurityOrigin>, WTF::DefaultHash<RefPtr<WebCore::SecurityOrigin>>, WTF::HashTraits<WTF::RefPtr<WebCore::SecurityOrigin>>, WTF::HashTableTraits>="m_impl"{HashTable<WTF::RefPtr<WebCore::SecurityOrigin>, WTF::RefPtr<WebCore::SecurityOrigin>, WTF::IdentityExtractor, WTF::DefaultHash<RefPtr<WebCore::SecurityOrigin>>, WTF::HashTraits<WTF::RefPtr<WebCore::SecurityOrigin>>, WTF::HashTraits<WTF::RefPtr<WebCore::SecurityOrigin>>>=""(?="m_table"^v"m_tableForLLDB"^I)}}, {HashSet<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::DefaultHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>, WTF::HashTableTraits>="m_impl"{HashTable<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::IdentityExtractor, WTF::DefaultHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>>=""(?="m_table"^v"m_tableForLLDB"^I)}}, {Lock="m_byte"{Atomic<unsigned char>="value"{atomic<unsigned char>="__a_"{__cxx_atomic_impl<unsigned char, std::__cxx_atomic_base_impl<unsigned char>>="__a_value"AC}}}}, {OSObjectPtr<NSObject<OS_dispatch_queue> *>="m_ptr"@"NSObject<OS_dispatch_queue>"}, {RefPtr<WebCore::PlatformMediaResourceLoader, WTF::RawPtrTraits<WebCore::PlatformMediaResourceLoader>, WTF::DefaultRefDerefTraits<WebCore::PlatformMediaResourceLoader>>="m_ptr"^{PlatformMediaResourceLoader}}, {RefPtr<WebCore::RangeResponseGenerator, WTF::RawPtrTraits<WebCore::RangeResponseGenerator>, WTF::DefaultRefDerefTraits<WebCore::RangeResponseGenerator>>="m_ptr"^{RangeResponseGenerator}}, {RetainPtr<NSOperationQueue>="m_ptr"^v}, {RetainPtr<NSString>="m_ptr"^v}, {WeakObjCPtr<id<NSURLSessionDelegate>>="m_weakReference"@}, {atomic<unsigned long long>="__a_"{__cxx_atomic_impl<unsigned long long, std::__cxx_atomic_base_impl<unsigned long long>>="__a_value"AQ}};

@interface WebCoreNSURLSession : NSObject {
  /* instance variables */
  struct RetainPtr<NSOperationQueue> { void *m_ptr; } _queue;
  struct HashSet<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::DefaultHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>, WTF::HashTableTraits> { struct HashTable<WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::RetainPtr<WebCoreNSURLSessionDataTask>, WTF::IdentityExtractor, WTF::DefaultHash<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>, WTF::HashTraits<WTF::RetainPtr<WebCoreNSURLSessionDataTask>>> { union { void *m_table; unsigned int *m_tableForLLDB; } x0; } m_impl; } _dataTasks;
  struct HashSet<WTF::RefPtr<WebCore::SecurityOrigin>, WTF::DefaultHash<RefPtr<WebCore::SecurityOrigin>>, WTF::HashTraits<WTF::RefPtr<WebCore::SecurityOrigin>>, WTF::HashTableTraits> { struct HashTable<WTF::RefPtr<WebCore::SecurityOrigin>, WTF::RefPtr<WebCore::SecurityOrigin>, WTF::IdentityExtractor, WTF::DefaultHash<RefPtr<WebCore::SecurityOrigin>>, WTF::HashTraits<WTF::RefPtr<WebCore::SecurityOrigin>>, WTF::HashTraits<WTF::RefPtr<WebCore::SecurityOrigin>>> { union { void *m_table; unsigned int *m_tableForLLDB; } x0; } m_impl; } _origins;
  struct Lock { struct Atomic<unsigned char> { struct atomic<unsigned char> { struct __cxx_atomic_impl<unsigned char, std::__cxx_atomic_base_impl<unsigned char>> { atomic  __a_value; unsigned char x0; } __a_; } value; } m_byte; } _dataTasksLock;
  BOOL _invalidated;
  struct atomic<unsigned long long> { struct __cxx_atomic_impl<unsigned long long, std::__cxx_atomic_base_impl<unsigned long long>> { atomic  __a_value; unsigned long long x0; } __a_; } _nextTaskIdentifier;
  struct OSObjectPtr<NSObject<OS_dispatch_queue> *> { NSObject<OS_dispatch_queue> *m_ptr; } _internalQueue;
  unsigned char _corsResults;
  struct RefPtr<WebCore::RangeResponseGenerator, WTF::RawPtrTraits<WebCore::RangeResponseGenerator>, WTF::DefaultRefDerefTraits<WebCore::RangeResponseGenerator>> { struct RangeResponseGenerator *m_ptr; } _rangeResponseGenerator;
}

@property (readonly, @dynamic) void * loader;
@property (retain, @dynamic) NSObject<NSURLSessionTaskDelegate> *delegate;
@property (readonly, retain, @dynamic) NSOperationQueue *delegateQueue;
@property (readonly, copy, @dynamic) NSURLSessionConfiguration *configuration;
@property (copy) NSString *sessionDescription;
@property (readonly, @dynamic) BOOL didPassCORSAccessChecks;

/* instance methods */
- (id)initWithResourceLoader:(void *)loader delegate:(id)delegate delegateQueue:(id)queue;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)taskCompleted:(id)completed;
- (void)addDelegateOperation:(void *)operation;
- (void)task:(id)task didReceiveCORSAccessCheckResult:(BOOL)result;
- (void)task:(id)task addSecurityOrigin:(void *)origin;
- (void *)rangeResponseGenerator;
- (BOOL)isCrossOrigin:(const void *)origin;
- (void)finishTasksAndInvalidate;
- (void)invalidateAndCancel;
- (void)resetWithCompletionHandler:(id /* block */)handler;
- (void)flushWithCompletionHandler:(id /* block */)handler;
- (void)getTasksWithCompletionHandler:(id /* block */)handler;
- (void)getAllTasksWithCompletionHandler:(id /* block */)handler;
- (id)dataTaskWithRequest:(id)request;
- (id)dataTaskWithURL:(id)url;
- (void)sendH2Ping:(id)ping pongHandler:(id /* block */)handler;
- (id)uploadTaskWithRequest:(id)request fromFile:(id)file;
- (id)uploadTaskWithRequest:(id)request fromData:(id)data;
- (id)uploadTaskWithStreamedRequest:(id)request;
- (id)downloadTaskWithRequest:(id)request;
- (id)downloadTaskWithURL:(id)url;
- (id)downloadTaskWithResumeData:(id)data;
- (id)streamTaskWithHostName:(id)name port:(long long)port;
- (id)streamTaskWithNetService:(id)service;
- (BOOL)isKindOfClass:(Class)class;
@end

#endif /* WebCoreNSURLSession_h */
