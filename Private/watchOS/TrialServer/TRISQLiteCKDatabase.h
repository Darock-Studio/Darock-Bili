//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 396.4.0.0.0
//
#ifndef TRISQLiteCKDatabase_h
#define TRISQLiteCKDatabase_h
@import Foundation;

#include "TRISQLiteCKDatabaseDelegate-Protocol.h"
#include "_PASDatabaseMigrationProtocol-Protocol.h"

@class CKContainer, NSString, _PASSqliteDatabase;
@protocol OS_dispatch_queue;

@interface TRISQLiteCKDatabase : NSObject<_PASDatabaseMigrationProtocol> {
  /* instance variables */
  NSString *_parentDir;
  NSString *_assetDir;
  NSString *_assetCacheDir;
  _PASSqliteDatabase *_db;
  NSObject<OS_dispatch_queue> *_opQueue;
}

@property (weak, nonatomic) CKContainer *container;
@property (retain, nonatomic) NSObject<TRISQLiteCKDatabaseDelegate> *delegate;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *operationQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)mockContainerWithIdentifier:(id)identifier database:(id)database;

/* instance methods */
- (id)init;
- (id)initWithParentDir:(id)dir assetCacheDir:(id)dir;
- (void)addOperation:(id)operation;
- (void)saveRecordZone:(id)zone completionHandler:(id /* block */)handler;
- (void)deleteRecordZoneWithID:(id)id completionHandler:(id /* block */)handler;
- (void)closePermanently;
- (void)_processQueryOperation:(id)operation;
- (BOOL)_evalQueryOperationWithRecordType:(id)type predicate:(id)predicate sortDescriptors:(id)descriptors offset:(unsigned long long)offset resultsLimit:(unsigned long long)limit desiredKeys:(id)keys txn:(id)txn error:(id *)error recordMatchedBlock:(id /* block */)block;
- (BOOL)_parseDesiredKeys:(id)keys recordType:(id)type unindexedFields:(id *)fields indexedFields:(id *)fields error:(id *)error;
- (id)_createRecordFromSelectRow:(id)row recordType:(id)type unindexedDesiredKeys:(id)keys indexedDesiredKeys:(id)keys txn:(id)txn error:(id *)error;
- (id)_loadArrayForRecordType:(id)type recordId:(id)id fieldKey:(id)key indexRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range txn:(id)txn error:(id *)error;
- (id)_parseIndexedFieldKey:(id)key indexRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (BOOL)_parseDecimalString:(id)string value:(unsigned long long *)value;
- (BOOL)_translatePredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_translateCompoundPredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_translateComparisonPredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_translateScalarComparisonPredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_parseScalarExpression:(id)expression forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_translateDirectModifiedScalarComparisonPredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_translateAnyModifiedScalarComparisonPredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_translateArrayRHSComparisonPredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_translateDirectModifiedArrayRHSComparisonPredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_translateAnyModifiedArrayRHSComparisonPredicate:(id)predicate forRecordType:(id)type toSQLExpr:(id *)sqlexpr paramBindings:(id *)bindings error:(id *)error;
- (BOOL)_parseArrayExpression:(id)expression forRecordType:(id)type usingCTEName:(id)ctename toSQLCommonTableExpression:(id *)expression paramBindings:(id *)bindings error:(id *)error;
- (void)_processFetchRecordsOperation:(id)operation;
- (id)_evalFetchRecordsOperationWithRecordIds:(id)ids recordType:(id)type desiredKeys:(id)keys txn:(id)txn error:(id *)error;
- (void)_processModifyRecordsOperation:(id)operation;
- (void)_deleteRecordsWithRecordIds:(id)ids recordType:(id)type txn:(id)txn;
- (BOOL)_upsertRecord:(id)record txn:(id)txn error:(id *)error;
- (id)_filenameForLocallyCopiedAsset:(id)asset forRecordId:(id)id error:(id *)error;
- (id)_assetForLocallyStoredAssetWithFilename:(id)filename forRecordId:(id)id error:(id *)error;
- (BOOL)_replaceArrayFieldWithKey:(id)key recordType:(id)type recordId:(id)id values:(id)values txn:(id)txn error:(id *)error;
- (id)_allRecordTypes;
- (id)_valueTypesForFieldsOfRecordType:(id)type;
- (id)_keysForFieldsOfRecordType:(id)type;
- (void)_bindParam:(int)param toScalarValue:(id)value forStatement:(id)statement recordId:(id)id;
- (id)_errorWithCode:(long long)code message:(id)message;
- (BOOL)migrateToVersion:(unsigned int)version;
- (id)databaseHandle;
- (id)_createTableForRecordType:(id)type scalarFields:(id)fields;
- (id)_createTableForArrayFieldWithKey:(id)key attachedToRecordType:(id)type sqliteContainedType:(id)type;
- (id)migrations;
- (id)queriesToSkipFromEmptyToVersion:(unsigned int *)version;
@end

#endif /* TRISQLiteCKDatabase_h */
