//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 396.4.0.0.0
//
#ifndef TRIXPCNamespaceManagementRequestHandler_h
#define TRIXPCNamespaceManagementRequestHandler_h
@import Foundation;

#include "TRIXPCNamespaceManagementServiceProtocol-Protocol.h"
#include "TRIXPCServerContextPromise.h"

@interface TRIXPCNamespaceManagementRequestHandler : NSObject<TRIXPCNamespaceManagementServiceProtocol> {
  /* instance variables */
  TRIXPCServerContextPromise *_serverContextPromise;
  struct { unsigned int x[8] val; } _auditToken;
}

/* class methods */
+ (id)_notificationKeyWithNamespace:(id)namespace assetIndexesByTreatment:(id)treatment assetIdsByFactorPack:(id)pack;
+ (void)_purgeMismatchedDataForDynamicNamespaceName:(id)name appContainer:(id)container serverContext:(id)context;
+ (id)_deploymentsWithUnexpectedExperimentDataInContainer:(id)container dynamicNamespaceName:(id)name serverContext:(id)context;
+ (void)usingServerContext:(id)context registerNamespaceWithNamespaceName:(id)name compatibilityVersion:(unsigned int)version defaultsFileURL:(id)url teamId:(id)id appContainerId:(id)id appContainerType:(long long)type cloudKitContainerId:(int)id bundleId:(id)id completion:(id /* block */)completion;
+ (void)usingServerContext:(id)context deregisterNamespaceWithName:(id)name teamId:(id)id taskQueue:(id)queue completion:(id /* block */)completion;
+ (void)usingServerContext:(id)context taskQueue:(id)queue startDownloadNamespaceWithName:(id)name attribution:(id)attribution completion:(id /* block */)completion;
+ (void)_startDownloadAssetIndexesByTreatment:(id)treatment usingEntitlementWitness:(id)witness serverContext:(id)context taskQueue:(id)queue experimentIds:(id)ids assetIdsByFactorPack:(id)pack rolloutFactorNames:(id)names rolloutDeployments:(id)deployments namespace:(id)namespace taskAttribution:(id)attribution factorsState:(id)state notificationKey:(id)key;
+ (void)_immediateDownloadForNamespaceNames:(id)names usingEntitlementWitness:(id)witness serverContext:(id)context taskQueue:(id)queue allowExpensiveNetworking:(BOOL)networking taskAttribution:(id)attribution completion:(id /* block */)completion;
+ (void)resumeTaskQueue:(id)queue forNetworkOptions:(id)options;
+ (void)_reregisterOneShotXPCActivityWithDescriptor:(id)descriptor resumingTaskQueue:(id)queue;
+ (void)_resumeTaskQueueForDiscretionaryWifiWithQueue:(id)queue;
+ (void)_resumeTaskQueueForDiscretionaryCellularWithQueue:(id)queue;
+ (void)_removeAssetFactors:(id)factors usingEntitlementWitness:(id)witness serverContext:(id)context taskQueue:(id)queue namespace:(id)namespace factorsState:(id)state removeImmediately:(BOOL)immediately completion:(id /* block */)completion;
+ (void)_setProvisionalFactorPackId:(id)id usingEntitlementWitness:(id)witness serverContext:(id)context forNamespaceName:(id)name completion:(id /* block */)completion;
+ (void)_rejectFactorPackId:(id)id usingEntitlementWitness:(id)witness serverContext:(id)context forNamespaceName:(id)name rolloutDeployment:(id)deployment completion:(id /* block */)completion;
+ (void)_promoteFactorPackId:(id)id usingEntitlementWitness:(id)witness serverContext:(id)context forNamespaceName:(id)name rolloutDeployment:(id)deployment completion:(id /* block */)completion;

/* instance methods */
- (id)initWithServerContextPromise:(id)promise auditToken:(struct { unsigned int x0[8] })token;
- (void)runBlockWhenServerAvailable:(id /* block */)available;
- (void)registerNamespaceWithNamespaceName:(id)name compatibilityVersion:(unsigned int)version defaultsFileURL:(id)url applicationGroup:(id)group cloudKitContainerId:(int)id completion:(id /* block */)completion;
- (void)deregisterNamespaceWithNamespaceName:(id)name completion:(id /* block */)completion;
- (void)startDownloadNamespaceWithName:(id)name options:(id)options completion:(id /* block */)completion;
- (void)startDownloadLevelsForFactors:(id)factors withNamespace:(id)namespace factorsState:(id)state options:(id)options completion:(id /* block */)completion;
- (void)immediateDownloadForNamespaceNames:(id)names allowExpensiveNetworking:(BOOL)networking completion:(id /* block */)completion;
- (void)removeLevelsForFactors:(id)factors withNamespace:(id)namespace factorsState:(id)state removeImmediately:(BOOL)immediately completion:(id /* block */)completion;
- (void)setPurgeabilityLevelsForFactors:(id)factors forNamespaceName:(id)name completion:(id /* block */)completion;
- (void)loadNamespaceMetadataForNamespaceName:(id)name completion:(id /* block */)completion;
- (void)setProvisionalFactorPackId:(id)id forNamespaceName:(id)name completion:(id /* block */)completion;
- (void)rejectFactorPackId:(id)id forNamespaceName:(id)name rolloutDeployment:(id)deployment completion:(id /* block */)completion;
- (void)promoteFactorPackId:(id)id forNamespaceName:(id)name rolloutDeployment:(id)deployment completion:(id /* block */)completion;
- (void)statusOfDownloadForFactors:(id)factors withNamespace:(id)namespace factorsState:(id)state completion:(id /* block */)completion;
- (void)_setPurgeabilityLevelsForFactors:(id)factors usingEntitlementWitness:(id)witness namespace:(id)namespace paths:(id)paths completion:(id /* block */)completion;
- (BOOL)_validateSetPurgeabilityLevelRequestUsingFactorProviderChain:(id)chain paths:(id)paths purgeabilityLevelsForFactors:(id)factors error:(id *)error;
- (int)_namespacePurgeabilityLevelForNamespaceName:(id)name paths:(id)paths;
- (void)_loadNamespaceMetadataForNamespace:(id)namespace usingEntitlementWitness:(id)witness withPaths:(id)paths completion:(id /* block */)completion;
- (id)_factorProviderChainForNamespace:(id)namespace paths:(id)paths;
- (BOOL)_validateNamespaceName:(id)name error:(id *)error;
@end

#endif /* TRIXPCNamespaceManagementRequestHandler_h */
