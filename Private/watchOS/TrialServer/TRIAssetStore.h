//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 396.4.0.0.0
//
#ifndef TRIAssetStore_h
#define TRIAssetStore_h
@import Foundation;

#include "TRIAssetExtracting-Protocol.h"
#include "TRIAssetPatching-Protocol.h"
#include "TRIAssetStoreOperations-Protocol.h"
#include "TRIStorageManagementProtocol-Protocol.h"

@protocol OS_xpc_object, TRIPaths;

@interface TRIAssetStore : NSObject {
  /* instance variables */
  NSObject<TRIPaths> *_paths;
  NSObject<TRIAssetExtracting> *_extractor;
  NSObject<TRIAssetPatching> *_patcher;
  NSObject<OS_xpc_object> *_monitoredActivity;
  NSObject<TRIStorageManagementProtocol> *_storageManagement;
  BOOL _useGlobalPaths;
}

@property (retain, nonatomic) NSObject<TRIAssetStoreOperations> *assetOperator;

/* class methods */
+ (id)shortHashForAssetIdentifier:(id)identifier;

/* instance methods */
- (id)init;
- (id)initWithPaths:(id)paths;
- (id)initWithGlobalPaths:(id)paths;
- (id)initWithPaths:(id)paths monitoredActivity:(id)activity;
- (id)initWithPaths:(id)paths extractor:(id)extractor patcher:(id)patcher;
- (id)initWithPaths:(id)paths extractor:(id)extractor patcher:(id)patcher monitoredActivity:(id)activity;
- (BOOL)saveAssetWithIdentifier:(id)identifier assetData:(id)data type:(unsigned char)type;
- (struct { unsigned char x0; })saveAssetWithIdentifier:(id)identifier assetURL:(id)url metadata:(id)metadata error:(id *)error;
- (BOOL)saveAssetWithIdentifier:(id)identifier builtFromAssetWithIdentifier:(id)identifier patchFilename:(id)filename metadata:(id)metadata error:(id *)error;
- (BOOL)_saveFileAssetWithIdentifier:(id)identifier assetFilename:(id)filename flockWitness:(struct TRIFlockWitness_ { int x0; } *)witness;
- (BOOL)_saveFileAssetWithIdentifier:(id)identifier assetFilename:(id)filename workingTempDirectory:(id)directory flockWitness:(struct TRIFlockWitness_ { int x0; } *)witness;
- (struct { unsigned char x0; })_saveDirectoryAssetWithIdentifier:(id)identifier assetFilename:(id)filename metadata:(id)metadata flockWitness:(struct TRIFlockWitness_ { int x0; } *)witness error:(id *)error;
- (BOOL)removeAssetWithIdentifier:(id)identifier;
- (BOOL)linkAssetWithIdentifier:(id)identifier toPath:(id)path;
- (BOOL)linkAssetWithIdentifier:(id)identifier toCurrentPath:(id)path futurePath:(id)path;
- (BOOL)_linkFileAssetWithIdentifier:(id)identifier toCurrentPath:(id)path futurePath:(id)path flockWitness:(struct TRIFlockWitness_ { int x0; } *)witness;
- (BOOL)_linkDirectoryAssetWithIdentifier:(id)identifier toCurrentPath:(id)path futurePath:(id)path flockWitness:(struct TRIFlockWitness_ { int x0; } *)witness;
- (BOOL)referenceMAAutoAssetWithId:(id)id isFileFactor:(BOOL)factor usingCurrentPath:(id)path futurePath:(id)path;
- (unsigned long long)removableAssetsSizeOlderThanNumScans:(unsigned int)scans ignoreRecentlyCreatedAssets:(BOOL)assets includedCacheDeletableAssetIds:(id)ids deleteableAssetIds:(id *)ids;
- (unsigned long long)removableAssetsSizeOlderThanNumScans:(unsigned int)scans includedCacheDeletableAssetIds:(id)ids;
- (BOOL)collectGarbageOlderThanNumScans:(unsigned int)scans deletedAssetSize:(unsigned long long *)size;
- (BOOL)collectGarbageOlderThanNumScans:(unsigned int)scans ignoreRecentlyCreatedAssets:(BOOL)assets deletedAssetSize:(unsigned long long *)size deletedAssetIds:(id *)ids;
- (BOOL)isValidTargetForSymlink:(id)symlink assetIdentifier:(id)identifier;
- (BOOL)_isFileAtPath:(id)path matchingAssetContentAtPath:(id)path;
- (BOOL)_isDirectoryAtPath:(id)path matchingAssetContentAtPath:(id)path;
- (id)_requireAssetStoreTempDir;
- (BOOL)_acquireLockfileAndRunBlock:(id /* block */)block;
- (BOOL)hasAssetWithIdentifier:(id)identifier type:(unsigned char *)type;
- (void)enumerateSavedAssetsUsingBlock:(id /* block */)block;
- (void)fixFileProtectionForAssetStoreFiles;
- (BOOL)setCreationDate:(id)date forAssetIdentifier:(id)identifier;
- (id)pathForAssetDirWithIdentifier:(id)identifier;
- (id)pathForAssetContentWithIdentifier:(id)identifier;
- (id)pathForRefsToAssetWithIdentifier:(id)identifier;
- (id)_createTempDir;
- (void)enumerateAssetDirsUsingBlock:(id /* block */)block;
- (BOOL)_forceRemoveItemAtPath:(id)path;
- (BOOL)_overwriteRenameAsAtomicallyAsPossibleWithSrc:(id)src dest:(id)dest;
- (void)_fixupPermissionsOnPath:(id)path permissionBits:(const unsigned short *)bits;
- (BOOL)_nonAtomicOverwriteWithSrc:(id)src dest:(id)dest finalPermissionBits:(const unsigned short *)bits;
- (BOOL)_clearUnrefAgeForAssetWithIdentifier:(id)identifier;
@end

#endif /* TRIAssetStore_h */
