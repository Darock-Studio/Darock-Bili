//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 396.4.0.0.0
//
#ifndef TRIMakeDefaultTask_h
#define TRIMakeDefaultTask_h
@import Foundation;

#include "TRIActivateTreatmentBaseTask.h"
#include "TRIRetryableTask-Protocol.h"
#include "TRITaskCapabilityModifier.h"
#include "TRITaskQueueStateProviding-Protocol.h"

@class NSArray, NSDate, NSString, TRIMetric;

@interface TRIMakeDefaultTask : TRIActivateTreatmentBaseTask<TRIRetryableTask> {
  /* instance variables */
  TRIMetric *_treatmentMetric;
  TRITaskCapabilityModifier *_capabilityModifier;
}

@property (nonatomic) BOOL testingIgnoreDependencies;
@property (nonatomic) int retryCount;
@property BOOL wasDeferred;
@property (readonly, nonatomic) int taskType;
@property (readonly, nonatomic) NSString *taskName;
@property (readonly, nonatomic) NSArray *tags;
@property (copy, nonatomic) NSDate *startTime;
@property (readonly, nonatomic) NSArray *dependencies;
@property (weak, nonatomic) NSObject<TRITaskQueueStateProviding> *stateProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)taskWithExperiment:(id)experiment treatmentId:(id)id taskAttributing:(id)attributing capabilityModifier:(id)modifier;
+ (id)parseFromData:(id)data;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithExperiment:(id)experiment treatmentId:(id)id taskAttributing:(id)attributing capabilityModifier:(id)modifier;
- (id)_nextTasksForRunStatus:(int)status;
- (int)makeDefaultForNamespace:(id)namespace experiment:(id)experiment context:(id)context;
- (id)runTaskUsingContext:(id)context experiment:(id)experiment;
- (id)metrics;
- (id)_asPersistedTask;
- (id)serialize;
- (unsigned long long)requiredCapabilities;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* TRIMakeDefaultTask_h */
