//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 396.4.0.0.0
//
#ifndef TRICKNativeArtifactProvider_h
#define TRICKNativeArtifactProvider_h
@import Foundation;

#include "TRIArtifactProvider-Protocol.h"
#include "TRICKQueryLog.h"
#include "TRIDateProviding-Protocol.h"
#include "TRINamespaceDescriptorProviding-Protocol.h"

@class CKContainer, CKRecordZoneID, NSString;

@interface TRICKNativeArtifactProvider : NSObject<TRIArtifactProvider>

@property (readonly, nonatomic) CKContainer *container;
@property (readonly, nonatomic) CKRecordZoneID *zoneID;
@property (readonly, nonatomic) NSString *teamId;
@property (readonly, nonatomic) NSObject<TRIDateProviding> *dateProvider;
@property (readonly, nonatomic) NSObject<TRINamespaceDescriptorProviding> *namespaceDescriptorProvider;
@property (readonly, nonatomic) NSString *bundleId;
@property (readonly, nonatomic) TRICKQueryLog *queryLog;

/* class methods */
+ (BOOL)isActivityDeferralError:(id)error;
+ (id)fetchRetryDateFromErrorAndOptions:(id)options options:(id)options;
+ (id)providerForContainer:(int)container teamId:(id)id bundleId:(id)id dateProvider:(id)provider namespaceDescriptorProvider:(id)provider serverContext:(id)context;
+ (id)containerForIdentifier:(id)identifier serverContext:(id)context;
+ (id)mockSQLiteContainerWithIdentifier:(id)identifier serverContext:(id)context failureInjectionDelegate:(id)delegate;
+ (id)recordZoneForContainerIdentifier:(id)identifier teamId:(id)id;
+ (id)cloudkitIdentifierForContainer:(int)container;
+ (int)containerFromCkContainer:(id)container;

/* instance methods */
- (id)configurationFromOptions:(id)options;
- (id)queryOperationForRecordType:(id)type predicate:(id)predicate sortDescriptors:(id)descriptors desiredKeys:(id)keys options:(id)options recordMatchedBlock:(id /* block */)block queryCompletionBlock:(id /* block */)block;
- (id)queryOperationForRecordType:(id)type predicate:(id)predicate desiredKeys:(id)keys options:(id)options recordMatchedBlock:(id /* block */)block queryCompletionBlock:(id /* block */)block;
- (id)initWithCloudKitContainer:(id)container zoneId:(id)id teamId:(id)id bundleId:(id)id dateProvider:(id)provider namespaceDescriptorProvider:(id)provider;
- (id)queryOperationWithCursor:(id)cursor desiredKeys:(id)keys options:(id)options recordMatchedBlock:(id /* block */)block queryCompletionBlock:(id /* block */)block;
- (void)_fetchExperimentWithExperimentId:(id)id deploymentId:(id)id options:(id)options completion:(id /* block */)completion;
- (void)fetchExperimentWithExperimentDeployment:(id)deployment options:(id)options completion:(id /* block */)completion;
- (void)fetchExperimentWithLatestDeploymentForExperimentId:(id)id options:(id)options completion:(id /* block */)completion;
- (void)_fetchExperimentsWithCursor:(id)cursor withNamespaceNames:(id)names sinceDate:(id)date fetchRollbacksOnly:(BOOL)only options:(id)options resultsHandler:(id /* block */)handler;
- (void)_fetchNotificationsWithQueryType:(unsigned long long)type withCursor:(id)cursor withNamespaceNames:(id)names sinceDate:(id)date options:(id)options resultsHandler:(id /* block */)handler;
- (void)fetchExperimentNotificationsForLimitedCarryExperimentWithManager:(id)manager options:(id)options rollbacksOnly:(BOOL)only completion:(id /* block */)completion;
- (void)fetchExperimentNotificationsWithNamespaceNames:(id)names rollbacksOnly:(BOOL)only lastFetchDateOverride:(id)override options:(id)options completion:(id /* block */)completion;
- (id)fetchTreatmentWithId:(id)id options:(id)options completion:(id /* block */)completion;
- (id)fetchAssetsWithIndexes:(id)indexes fromTreatmentWithRecordId:(id)id options:(id)options progress:(id /* block */)progress completion:(id /* block */)completion;
- (void)fetchRolloutNotificationsDateAscendingWithOptions:(id)options lastFetchDateOverride:(id)override namespaceNames:(id)names completion:(id /* block */)completion;
- (void)_fetchRolloutNotificationsWithCursor:(id)cursor options:(id)options sinceDate:(id)date namespaceNames:(id)names resultsHandler:(id /* block */)handler;
- (void)fetchRolloutNotificationsDateDescendingWithOptions:(id)options completion:(id /* block */)completion;
- (void)_fetchRolloutNotificationsWithCursor:(id)cursor options:(id)options completion:(id /* block */)completion;
- (void)fetchRolloutNotificationWithDeployment:(id)deployment options:(id)options completion:(id /* block */)completion;
- (void)fetchRolloutNotificationWithLatestDeploymentForRolloutId:(id)id options:(id)options completion:(id /* block */)completion;
- (void)_fetchRolloutNotificationWithRolloutId:(id)id deploymentId:(id)id options:(id)options completion:(id /* block */)completion;
- (void)fetchFactorPackSetWithId:(id)id options:(id)options completion:(id /* block */)completion;
- (id)fetchRecordIdsForAssetsWithIds:(id)ids options:(id)options completion:(id /* block */)completion;
- (void)_fetchRecordIdsForAssetsWithIds:(id)ids options:(id)options cursor:(id)cursor cancelableOp:(id)op resultBuffer:(id)buffer completion:(id /* block */)completion;
- (id)fetchAssetsWithRecordIds:(id)ids options:(id)options perRecordProgress:(id /* block */)progress perRecordCompletionBlockOnSuccess:(id /* block */)success perRecordCompletionBlockOnError:(id /* block */)error completion:(id /* block */)completion;
- (id)fetchDiffSourceRecordIdsWithTargetAssetIds:(id)ids isAcceptableSourceAssetId:(id /* block */)id options:(id)options completion:(id /* block */)completion;
- (id)fetchDiffsWithRecordIds:(id)ids options:(id)options perRecordProgress:(id /* block */)progress perRecordCompletionBlockOnSuccess:(id /* block */)success perRecordCompletionBlockOnError:(id /* block */)error completion:(id /* block */)completion;
- (void)fetchBMLTCatalogNotificationWithOptions:(id)options completion:(id /* block */)completion;
- (void)fetchBMLTNotificationsWithOptions:(id)options completion:(id /* block */)completion;
- (void)fetchBMLTNotificationWithDeployment:(id)deployment options:(id)options completion:(id /* block */)completion;
- (void)_fetchBMLTNotificationsWithCursor:(id)cursor options:(id)options completion:(id /* block */)completion;
@end

#endif /* TRICKNativeArtifactProvider_h */
