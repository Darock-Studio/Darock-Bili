//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 730.8.0.0.0
//
#ifndef SKConnection_h
#define SKConnection_h
@import Foundation;

#include "CUActivatable-Protocol.h"
#include "CUAuthenticatableClient-Protocol.h"
#include "CUAuthenticatableServer-Protocol.h"
#include "CULabelable-Protocol.h"
#include "SKDevice.h"

@class CBConnection, CUPairingSession, CUPairingStream, NSData, NSError, NSMutableArray, NSMutableDictionary, NSString;
@protocol CUReadWriteRequestable, OS_dispatch_queue, OS_dispatch_source;

@interface SKConnection : NSObject<CUActivatable, CUAuthenticatableClient, CUAuthenticatableServer, CULabelable> {
  /* instance variables */
  BOOL _activateCalled;
  unsigned long long _authThrottleDeadlineTicks;
  NSObject<OS_dispatch_source> *_authThrottleTimer;
  struct { unsigned char frameType; unsigned char x[3] frameLen; } _frameHeader;
  NSObject<CUReadWriteRequestable> *_requestable;
  int _runState;
  BOOL _invalidateCalled;
  BOOL _invalidateDone;
  unsigned long long _mainAuthTagLength;
  CUPairingStream *_mainStream;
  CUPairingSession *_pairSetupSession;
  CUPairingSession *_pairVerifySession;
  BOOL _readRequested;
  BOOL _receivingHeader;
  NSMutableDictionary *_requests;
  NSMutableArray *_sendArray;
  BOOL _showPasswordCalled;
  NSObject<OS_dispatch_source> *_startTimer;
  BOOL _stepDone;
  NSError *_stepError;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucat;
  unsigned int _xidLast;
}

@property (retain, nonatomic) CBConnection *bleConnection;
@property (retain, nonatomic) SKDevice *blePeerDevice;
@property (nonatomic) unsigned int bluetoothUseCase;
@property (nonatomic) BOOL clientMode;
@property (copy, nonatomic) id /* block */ errorHandler;
@property (copy, nonatomic) NSData *pskData;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (copy, nonatomic) id /* block */ pairSetupConfigHandler;
@property (nonatomic) BOOL persistentPairing;
@property (copy, nonatomic) id /* block */ receivedEventHandler;
@property (copy, nonatomic) id /* block */ receivedRequestHandler;
@property (nonatomic) BOOL reversePairing;
@property (copy, nonatomic) id /* block */ sendDataHandler;
@property (nonatomic) int state;
@property (copy, nonatomic) id /* block */ stateChangedHandler;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (copy, nonatomic) id /* block */ authCompletionHandler;
@property (copy, nonatomic) id /* block */ authPromptHandler;
@property (copy, nonatomic) NSString *password;
@property (nonatomic) int passwordType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) id /* block */ authHidePasswordHandler;
@property (copy, nonatomic) id /* block */ authShowPasswordHandler;
@property (copy, nonatomic) NSString *label;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)activateWithCompletion:(id /* block */)completion;
- (void)_activateWithCompletion:(id /* block */)completion;
- (void)invalidate;
- (void)_invalidateWithError:(id)error;
- (void)_invalidateCore:(id)core;
- (void)_invalidated;
- (id)deriveKeyWithSaltPtr:(const void *)ptr saltLen:(unsigned long long)len infoPtr:(const void *)ptr infoLen:(unsigned long long)len keyLen:(unsigned long long)len error:(id *)error;
- (void)_pairSetupInvalidate;
- (void)_pairVerifyInvalidate;
- (void)_pskPrepareClientMode:(BOOL)mode;
- (void)_run;
- (void)tryPassword:(id)password;
- (void)updatePasswordType:(int)type;
- (void)_updateExternalState;
- (void)_clientRun;
- (void)_clientConnectStart;
- (void)_clientConnectStartBLE;
- (void)_clientConnectCompleted:(id)completed;
- (void)_clientPairSetupStart;
- (void)_clientPairSetupStartReverse;
- (void)_clientPairSetupContinueWithData:(id)data;
- (void)_clientPairSetupPromptWithFlags:(unsigned int)flags passwordType:(int)type throttleSeconds:(int)seconds;
- (void)_clientPairSetupCompleted:(id)completed;
- (void)_clientPairVerifyStart;
- (void)_clientPairVerifyWithData:(id)data;
- (void)_clientPairVerifyCompleted:(id)completed;
- (void)_clientError:(id)error;
- (void)_serverRun;
- (void)_serverAccept;
- (void)_serverAcceptBLE;
- (void)_serverPairSetupContinueWithData:(id)data start:(BOOL)start;
- (void)_serverPairSetupCompleted:(id)completed;
- (void)_serverPairVerifyContinueWithData:(id)data start:(BOOL)start;
- (void)_serverPairVerifyCompleted:(id)completed;
- (void)_serverError:(id)error;
- (void)sendEventID:(id)id event:(id)event options:(id)options completion:(id /* block */)completion;
- (void)sendEventID:(id)id data:(id)data xid:(unsigned int)xid options:(id)options completion:(id /* block */)completion;
- (void)_sendEventID:(id)id data:(id)data xid:(unsigned int)xid options:(id)options completion:(id /* block */)completion;
- (void)sendRequestID:(id)id request:(id)request options:(id)options responseHandler:(id /* block */)handler;
- (void)_sendRequestID:(id)id request:(id)request options:(id)options sendEntry:(id)entry responseHandler:(id /* block */)handler;
- (void)_sendResponse:(id)response error:(id)error xid:(id)xid requestID:(id)id completion:(id /* block */)completion;
- (void)_sendFrameType:(unsigned char)type body:(id)body;
- (void)_sendFrameType:(unsigned char)type unencryptedObject:(id)object;
- (void)_sendHeaderData:(id)data bodyData:(id)data completion:(id /* block */)completion;
- (void)_processSends;
- (void)_abortRequestsWithError:(id)error;
- (void)_timeoutForSendEntry:(id)entry;
- (void)_timeoutForXID:(id)xid;
- (void)receivedData:(id)data;
- (void)_receiveStart:(id)start;
- (void)_receiveCompletion:(id)completion;
- (void)_receivedHeader:(const struct { unsigned char x0; unsigned char x1[3] } *)header body:(id)body;
- (void)_receivedHeader:(const struct { unsigned char x0; unsigned char x1[3] } *)header encryptedObjectData:(id)data;
- (void)_receivedHeader:(const struct { unsigned char x0; unsigned char x1[3] } *)header unencryptedObjectData:(id)data;
- (void)_receivedObject:(id)object;
- (void)_receivedEvent:(id)event;
- (void)_receivedRequest:(id)request;
- (void)_receivedResponse:(id)response;
@end

#endif /* SKConnection_h */
