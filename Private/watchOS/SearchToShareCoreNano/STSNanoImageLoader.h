//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3301.2.1.0.0
//
#ifndef STSNanoImageLoader_h
#define STSNanoImageLoader_h
@import Foundation;

#include "NSCacheDelegate-Protocol.h"
#include "STSNanoImageLoaderDelegate-Protocol.h"

@class NSCache, NSMutableArray, NSMutableDictionary, NSString, NSURLCache, NSURLSession;
@protocol OS_dispatch_queue;

@interface STSNanoImageLoader : NSObject<NSCacheDelegate>

@property (retain, nonatomic) NSURLSession *thumbnailURLSession;
@property (retain, nonatomic) NSURLCache *thumbnailURLCache;
@property (retain, nonatomic) NSCache *imageInfoCache;
@property (retain, nonatomic) NSCache *firstFrameCache;
@property (retain, nonatomic) NSMutableArray *thumbnailEnqueedList;
@property (retain, nonatomic) NSMutableArray *thumbnailWaitingList;
@property (retain, nonatomic) NSMutableDictionary *thumbnailWaitingTable;
@property (retain, nonatomic) NSMutableArray *thumbnailDownloadEnqueedList;
@property (retain, nonatomic) NSMutableArray *thumbnailDownloadWaitingList;
@property (retain, nonatomic) NSMutableDictionary *thumbnailDownloadWaitingTable;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x0; } lock;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (weak, nonatomic) NSObject<STSNanoImageLoaderDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)_appendImageLoaderInfo:(id)info waitingTable:(id)table;
+ (void)_addOrBumpUpImageLoaderInfo:(id)info waitingTable:(id)table waitingList:(id)list enqueuedList:(id)list;
+ (void)_bumpUpURLString:(id)urlstring waitingList:(id)list enqueuedList:(id)list;
+ (id)_nextLoaderImageInfoWithWaitingTable:(id)table waitingList:(id)list enqueuedList:(id)list;
+ (id)_imageInfoUsingAVAssetReaderWithFileURL:(id)url;
+ (id)_imageFromSampleBuffer:(struct opaqueCMSampleBuffer *)buffer;
+ (id)_imageInfoWithData:(id)data;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)cache:(id)cache willEvictObject:(id)object;
- (id)firstFrameImageWithURLString:(id)urlstring;
- (id)imageInfoImageWithURLString:(id)urlstring;
- (void)handleLoadingCachedImageWithImageLoaderInfo:(id)info cachedRequest:(id)request cachedResponse:(id)response;
- (void)checkCacheWithImageLoaderInfo:(id)info completionHandler:(id /* block */)handler;
- (void)withQueue:(id /* block */)queue;
- (void)startLoadWithImageLoaderInfo:(id)info;
- (void)loadAnimatedImageWithImageLoaderInfo:(id)info;
- (void)loadAnimatedImageFromDiskWithImageLoaderInfo:(id)info;
- (void)scheduleNextLoad;
- (void)_on_queue_scheduleLoadWithInfo:(id)info;
- (void)scheduleLoadWithInfo:(id)info;
- (void)scheduleNetworkLoadWithInfo:(id)info;
- (id)finishLoadWithImageLoaderInfo:(id)info;
- (void)cancelAllImageLoads;
- (BOOL)shouldLoadMore;
- (void)invalidate;
- (void)startNetworkLoad:(id)load;
- (void)imageLoadFinishedWithImageLoaderInfo:(id)info image:(id)image;
@end

#endif /* STSNanoImageLoader_h */
