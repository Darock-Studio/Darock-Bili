//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 936.60.10.0.0
//
#ifndef MAAutoAssetSet_h
#define MAAutoAssetSet_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "SUCoreConnectClientDelegate-Protocol.h"

@class NSArray, NSString;
@protocol OS_dispatch_queue;

@interface MAAutoAssetSet : NSObject<SUCoreConnectClientDelegate, NSSecureCoding>

@property (retain, nonatomic) NSString *clientDomainName;
@property (retain, nonatomic) NSString *autoAssetSetClientName;
@property (retain, nonatomic) NSString *assetSetIdentifier;
@property (retain, nonatomic) NSArray *autoAssetEntries;
@property (retain, nonatomic) NSString *updateCategoryDesiredByClient;
@property (readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *completionDispatchQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (void)endAtomicLocks:(id)locks usingClientDomain:(id)domain forClientName:(id)name forAssetSetIdentifier:(id)identifier ofAtomicInstance:(id)instance removingLockCount:(long long)count completion:(id /* block */)completion;
+ (id)endAtomicLocksSync:(id)sync usingClientDomain:(id)domain forClientName:(id)name forAssetSetIdentifier:(id)identifier ofAtomicInstance:(id)instance removingLockCount:(long long)count;
+ (void)eliminateAtomic:(id)atomic usingClientDomain:(id)domain forAssetSetIdentifier:(id)identifier completion:(id /* block */)completion;
+ (id)eliminateAtomicSync:(id)sync usingClientDomain:(id)domain forAssetSetIdentifier:(id)identifier;
+ (void)frameworkInstanceSetLogDomain;
+ (id)defaultDispatchQueue;
+ (id)frameworkDispatchQueue;
+ (id)frameworkInstanceUUID;
+ (long long)waitOnSemaphore:(id)semaphore withDaemonTriggeredTimeout:(long long)timeout;

/* instance methods */
- (id)initUsingClientDomain:(id)domain forClientName:(id)name forAssetSetIdentifier:(id)identifier comprisedOfEntries:(id)entries error:(id *)error;
- (id)initUsingClientDomain:(id)domain forClientName:(id)name forAssetSetIdentifier:(id)identifier comprisedOfEntries:(id)entries completingFromQueue:(id)queue error:(id *)error;
- (id)initUsingClientDomain:(id)domain forClientName:(id)name forAssetSetIdentifier:(id)identifier comprisedOfEntries:(id)entries usingDesiredPolicyCategory:(id)category error:(id *)error;
- (id)initUsingClientDomain:(id)domain forClientName:(id)name forAssetSetIdentifier:(id)identifier comprisedOfEntries:(id)entries usingDesiredPolicyCategory:(id)category completingFromQueue:(id)queue error:(id *)error;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)alterEntriesRepresentingAtomic:(id)atomic toBeComprisedOfEntries:(id)entries completion:(id /* block */)completion;
- (void)alterEntriesRepresentingAtomic:(id)atomic toBeComprisedOfEntries:(id)entries withNeedPolicy:(id)policy completion:(id /* block */)completion;
- (id)alterEntriesRepresentingAtomicSync:(id)sync toBeComprisedOfEntries:(id)entries;
- (id)alterEntriesRepresentingAtomicSync:(id)sync toBeComprisedOfEntries:(id)entries withNeedPolicy:(id)policy;
- (void)needForAtomic:(id)atomic completion:(id /* block */)completion;
- (void)needForAtomic:(id)atomic withNeedPolicy:(id)policy completion:(id /* block */)completion;
- (id)needForAtomicSync:(id)sync;
- (id)needForAtomicSync:(id)sync withNeedPolicy:(id)policy;
- (void)checkAtomic:(id)atomic forAtomicInstance:(id)instance withTimeout:(long long)timeout completion:(id /* block */)completion;
- (void)checkAtomic:(id)atomic forAtomicInstance:(id)instance awaitingDownload:(BOOL)download withTimeout:(long long)timeout completion:(id /* block */)completion;
- (void)checkAtomic:(id)atomic forAtomicInstance:(id)instance awaitingDownload:(BOOL)download withTimeout:(long long)timeout reportingProgress:(id /* block */)progress completion:(id /* block */)completion;
- (void)checkAtomic:(id)atomic forAtomicInstance:(id)instance withNeedPolicy:(id)policy withTimeout:(long long)timeout completion:(id /* block */)completion;
- (void)checkAtomic:(id)atomic forAtomicInstance:(id)instance awaitingDownload:(BOOL)download withNeedPolicy:(id)policy withTimeout:(long long)timeout completion:(id /* block */)completion;
- (void)checkAtomic:(id)atomic forAtomicInstance:(id)instance awaitingDownload:(BOOL)download withNeedPolicy:(id)policy withTimeout:(long long)timeout reportingProgress:(id /* block */)progress completion:(id /* block */)completion;
- (id)checkAtomicSync:(id)sync forAtomicInstance:(id)instance withTimeout:(long long)timeout discoveredAtomicEntries:(id *)entries error:(id *)error;
- (id)checkAtomicSync:(id)sync forAtomicInstance:(id)instance awaitingDownload:(BOOL)download withTimeout:(long long)timeout discoveredAtomicEntries:(id *)entries error:(id *)error;
- (id)checkAtomicSync:(id)sync forAtomicInstance:(id)instance awaitingDownload:(BOOL)download withTimeout:(long long)timeout discoveredAtomicEntries:(id *)entries error:(id *)error reportingProgress:(id /* block */)progress;
- (id)checkAtomicSync:(id)sync forAtomicInstance:(id)instance withNeedPolicy:(id)policy withTimeout:(long long)timeout discoveredAtomicEntries:(id *)entries error:(id *)error;
- (id)checkAtomicSync:(id)sync forAtomicInstance:(id)instance awaitingDownload:(BOOL)download withNeedPolicy:(id)policy withTimeout:(long long)timeout discoveredAtomicEntries:(id *)entries error:(id *)error;
- (id)checkAtomicSync:(id)sync forAtomicInstance:(id)instance awaitingDownload:(BOOL)download withNeedPolicy:(id)policy withTimeout:(long long)timeout discoveredAtomicEntries:(id *)entries error:(id *)error reportingProgress:(id /* block */)progress;
- (void)lockAtomic:(id)atomic forAtomicInstance:(id)instance withTimeout:(long long)timeout completion:(id /* block */)completion;
- (void)lockAtomic:(id)atomic forAtomicInstance:(id)instance withNeedPolicy:(id)policy withTimeout:(long long)timeout completion:(id /* block */)completion;
- (void)lockAtomic:(id)atomic forAtomicInstance:(id)instance withTimeout:(long long)timeout reportingProgress:(id /* block */)progress completion:(id /* block */)completion;
- (void)lockAtomic:(id)atomic forAtomicInstance:(id)instance withNeedPolicy:(id)policy withTimeout:(long long)timeout reportingProgress:(id /* block */)progress completion:(id /* block */)completion;
- (id)lockAtomicSync:(id)sync forAtomicInstance:(id)instance withTimeout:(long long)timeout lockedAtomicEntries:(id *)entries error:(id *)error;
- (id)lockAtomicSync:(id)sync forAtomicInstance:(id)instance withNeedPolicy:(id)policy withTimeout:(long long)timeout lockedAtomicEntries:(id *)entries error:(id *)error;
- (id)lockAtomicSync:(id)sync forAtomicInstance:(id)instance withTimeout:(long long)timeout lockedAtomicEntries:(id *)entries error:(id *)error reportingProgress:(id /* block */)progress;
- (id)lockAtomicSync:(id)sync forAtomicInstance:(id)instance withNeedPolicy:(id)policy withTimeout:(long long)timeout lockedAtomicEntries:(id *)entries error:(id *)error reportingProgress:(id /* block */)progress;
- (void)formSubAtomicInstance:(id)instance fromAtomicInstance:(id)instance toBeComprisedOfEntries:(id)entries completion:(id /* block */)completion;
- (id)formSubAtomicInstanceSync:(id)sync fromAtomicInstance:(id)instance toBeComprisedOfEntries:(id)entries error:(id *)error;
- (void)continueAtomicLock:(id)lock ofAtomicInstance:(id)instance completion:(id /* block */)completion;
- (void)continueAtomicLock:(id)lock ofAtomicInstance:(id)instance withNeedPolicy:(id)policy completion:(id /* block */)completion;
- (id)continueAtomicLockSync:(id)sync ofAtomicInstance:(id)instance;
- (id)continueAtomicLockSync:(id)sync ofAtomicInstance:(id)instance withNeedPolicy:(id)policy;
- (void)endAtomicLock:(id)lock ofAtomicInstance:(id)instance completion:(id /* block */)completion;
- (id)endAtomicLockSync:(id)sync ofAtomicInstance:(id)instance;
- (void)assetSetForStaging:(id)staging asEntriesWhenTargeting:(id)targeting completion:(id /* block */)completion;
- (id)assetSetForStagingSync:(id)sync asEntriesWhenTargeting:(id)targeting;
- (void)currentSetStatus:(id /* block */)status;
- (id)currentSetStatusSync:(id *)sync;
- (id)summary;
- (void)_endAtomicLocks:(id)locks usingClientDomain:(id)domain forClientName:(id)name forAssetSetIdentifier:(id)identifier ofAtomicInstance:(id)instance removingLockCount:(long long)count completion:(id /* block */)completion;
- (id)_endAtomicLocksSync:(id)sync usingClientDomain:(id)domain forClientName:(id)name forAssetSetIdentifier:(id)identifier ofAtomicInstance:(id)instance removingLockCount:(long long)count;
- (void)_eliminateAtomic:(id)atomic completion:(id /* block */)completion;
- (id)_eliminateAtomicSync:(id)sync;
- (void)connectToServerFrameworkCompletion:(id /* block */)completion;
- (id)_newProxyObjectForSetProgressBlock:(id /* block */)block;
- (void)connectionClosed;
- (void)handleResponse:(id)response error:(id)error;
- (void)handleMessage:(id)message reply:(id /* block */)reply;
- (void)_successCheckAtomic:(id)atomic forAssetSetIdentifier:(id)identifier newerInstanceDiscovered:(id)discovered discoveredAtomicEntries:(id)entries completion:(id /* block */)completion;
- (void)_failedCheckAtomic:(id)atomic forAssetSetIdentifier:(id)identifier withErrorCode:(long long)code withResponseError:(id)error description:(id)description completion:(id /* block */)completion;
- (void)_successCurrentSetStatus:(id)status forAssetSetIdentifier:(id)identifier withAssetSetStatus:(id)status completion:(id /* block */)completion;
- (void)_failedCurrentSetStatus:(id)status forAssetSetIdentifier:(id)identifier withErrorCode:(long long)code withResponseError:(id)error description:(id)description completion:(id /* block */)completion;
- (void)_lockAtomicStatusProgress:(id)progress lockAtomicError:(id)error progressBlock:(id /* block */)block;
- (void)_successLockAtomic:(id)atomic forAssetSetIdentifier:(id)identifier lockedAtomicInstance:(id)instance lockedAtomicEntries:(id)entries completion:(id /* block */)completion;
- (void)_failedLockAtomic:(id)atomic forAssetSetIdentifier:(id)identifier withErrorCode:(long long)code withResponseError:(id)error description:(id)description completion:(id /* block */)completion;
- (void)_successFormSubAtomicInstance:(id)instance formedSubAtomicInstance:(id)instance completion:(id /* block */)completion;
- (void)_failedFormSubAtomicInstance:(id)instance withErrorCode:(long long)code withResponseError:(id)error description:(id)description completion:(id /* block */)completion;
- (void)_successOperation:(id)operation forAssetSetIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)_failedOperation:(id)operation forAssetSetIdentifier:(id)identifier withErrorCode:(long long)code withResponseError:(id)error description:(id)description completion:(id /* block */)completion;
@end

#endif /* MAAutoAssetSet_h */
