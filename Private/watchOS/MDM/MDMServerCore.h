//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3.26.3.6.0
//
#ifndef MDMServerCore_h
#define MDMServerCore_h
@import Foundation;

#include "APSConnectionDelegate-Protocol.h"
#include "MDMServerAppInstallBlocking.h"
#include "MDMUserXPCProtocol-Protocol.h"
#include "MDMXPCProtocol-Protocol.h"

@class APSConnection, DMCJobQueue, NSArray, NSData, NSDate, NSDictionary, NSNumber, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface MDMServerCore : NSObject<APSConnectionDelegate, MDMXPCProtocol, MDMUserXPCProtocol> {
  /* instance variables */
  unsigned int _reauthMAIDNotifyToken;
}

@property (retain, nonatomic) MDMServerAppInstallBlocking *appInstallBlocker;
@property (readonly, copy, nonatomic) NSString *daemonIdentifier;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue;
@property (readonly, nonatomic) DMCJobQueue *jobQueue;
@property (nonatomic) BOOL memberQueueIsMDMConfigurationValid;
@property (nonatomic) BOOL memberQueueIsUprooting;
@property (nonatomic) BOOL memberQueueLastResponseWasNotNow;
@property (nonatomic) BOOL memberQueuePinningRevocationCheckRequired;
@property (nonatomic) BOOL memberQueueSignMessage;
@property (nonatomic) BOOL memberQueueUseDevelopmentAPNS;
@property (nonatomic) BOOL memberQueueUseEnrollmentID;
@property (nonatomic) BOOL memberQueueUserSwitchAlreadyInitiated;
@property (nonatomic) unsigned long long memberQueueAccessRights;
@property (nonatomic) int memberQueuePowerAssertionDeassertedNotificationToken;
@property (retain, nonatomic) APSConnection *memberQueueDevAPSConnection;
@property (retain, nonatomic) APSConnection *memberQueueProdAPSConnection;
@property (retain, nonatomic) NSArray *memberQueueCheckInPinnedSecCertificateRefs;
@property (retain, nonatomic) NSArray *memberQueueServerPinnedSecCertificateRefs;
@property (retain, nonatomic) NSData *memberQueuePushToken;
@property (retain, nonatomic) NSData *memberQueueLastLoggedPushToken;
@property (retain, nonatomic) NSDate *memberQueueLastPollingAttempt;
@property (retain, nonatomic) NSDate *memberQueueLastPollingSuccess;
@property (retain, nonatomic) NSDictionary *memberQueueCachedResponse;
@property (retain, nonatomic) NSDictionary *memberQueueMDMOptions;
@property (retain, nonatomic) NSDictionary *memberQueueOrganizationInfo;
@property (retain, nonatomic) NSNumber *memberQueueLastPollingAttemptMonotonicTime;
@property (retain, nonatomic) NSNumber *memberQueueLastPollingAttemptRTCResetCount;
@property (retain, nonatomic) NSNumber *memberQueueLastPollingSuccessMonotonicTime;
@property (retain, nonatomic) NSNumber *memberQueueLastPollingSuccessRTCResetCount;
@property (retain, nonatomic) NSNumber *memberQueuePollingInterval;
@property (retain, nonatomic) NSString *memberQueueCommandUUID;
@property (retain, nonatomic) NSString *memberQueueEnrollmentID;
@property (retain, nonatomic) NSString *memberQueueManagingProfileIdentifier;
@property (retain, nonatomic) NSString *memberQueuePushMagic;
@property (retain, nonatomic) NSString *memberQueueTopic;
@property (retain, nonatomic) NSURL *memberQueueCheckInURL;
@property (retain, nonatomic) NSURL *memberQueueServerURL;
@property (nonatomic) struct __SecIdentity * memberQueueIdentity;
@property (nonatomic) long long memberQueueTokenUpdateRetryCount;
@property (copy, nonatomic) id /* block */ executionQueuePushTokenWaitContinuationBlock;
@property (nonatomic) BOOL executionQueueIsCheckinInProgress;
@property (nonatomic) int keybagEventToken;
@property (nonatomic) int buddyDoneEventToken;
@property (nonatomic) int pairedNRDeviceEventToken;
@property (nonatomic) BOOL isObservingReachability;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *appBlockQueue;
@property (copy, nonatomic) id /* block */ appBlockCompletionBlock;
@property (nonatomic) unsigned long long channelType;
@property (copy, nonatomic) NSDictionary *organizationInfo;
@property (readonly, copy, nonatomic) NSString *organizationName;
@property (readonly, copy, nonatomic) NSString *serverName;
@property (copy, nonatomic) NSDictionary *MDMOptions;
@property (readonly, copy, nonatomic) NSDictionary *softwareUpdatePathFromDisk;
@property (nonatomic) BOOL userSwitchAlreadyInitiated;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithChannelType:(unsigned long long)type;
- (void)dealloc;
- (BOOL)startOutError:(id *)error;
- (void)_schedulePollingServerForCommand;
- (void)_pollFromServerIfNeeded:(BOOL)needed isReachabilityEvent:(BOOL)event completionHandler:(id /* block */)handler;
- (void)_executionQueueUpdateTokenIfNeededAndCheckForOutstandingActivityIsReachabilityEvent:(BOOL)event assertion:(id)assertion completionBlock:(id /* block */)block;
- (void)_executionQueueCheckForOutstandingActivityIsReachabilityEvent:(BOOL)event assertion:(id)assertion completionBlock:(id /* block */)block;
- (void)_executionQueueTellServerAboutDeviceTokenWithAssertion:(id)assertion completionBlock:(id /* block */)block;
- (void)_executionQueueScheduleTokenUpdateRetryIfNeeded;
- (void)_executionQueuePollServerForCommandWithAssertion:(id)assertion completionBlock:(id /* block */)block;
- (id)sendResponseSynchronously:(id)synchronously outStatusCode:(long long *)code outError:(id *)error;
- (void)_sendResponse:(id)response completionBlock:(id /* block */)block;
- (id)_sendResponseSynchornously:(id)synchornously;
- (id)_transactionForResponse:(id)response;
- (void)_processRequest:(id)request encodeResponse:(BOOL)response completion:(id /* block */)completion;
- (void)_executionQueueHandleRequest:(id)request assertion:(id)assertion completionBlock:(id /* block */)block;
- (void)notifyNewConfigurationWithCompletion:(id /* block */)completion;
- (void)scheduleTokenUpdateWithCompletion:(id /* block */)completion;
- (void)scheduleTokenUpdateIfNecessaryWithCompletion:(id /* block */)completion;
- (void)simulatePushWithCompletion:(id /* block */)completion;
- (void)simulatePushIfNetworkTetheredWithCompletion:(id /* block */)completion;
- (void)retryNotNowWithCompletion:(id /* block */)completion;
- (void)migrateMDMWithContext:(int)context completion:(id /* block */)completion;
- (void)reauthenticationCompleteWithCompletion:(id /* block */)completion;
- (void)uprootMDMWithCompletion:(id /* block */)completion;
- (void)processDeviceRequest:(id)request encodeResponse:(BOOL)response completion:(id /* block */)completion;
- (void)pushTokenWithCompletion:(id /* block */)completion;
- (void)touchWithCompletion:(id /* block */)completion;
- (void)processUserRequest:(id)request encodeResponse:(BOOL)response completion:(id /* block */)completion;
- (void)isAwaitingUserConfiguredWithCompletion:(id /* block */)completion;
- (BOOL)_isAwaitingUserConfigured;
- (BOOL)isAppInstallBlocked;
- (void)blockAppInstallsWithCompletion:(id /* block */)completion;
- (void)unblockAppInstallsWithCompletion:(id /* block */)completion;
- (void)requestInstallOfAppsInRestoreWithCompletion:(id /* block */)completion;
- (void)getAssertionDescriptionsWithCompletion:(id /* block */)completion;
- (BOOL)_readConfigurationOutError:(id *)error isUproot:(BOOL)uproot;
- (void)_memberQueueForgetCurrentConfiguration;
- (BOOL)_memberQueueParseMDMConfigurationDict:(id)dict;
- (void)_memberQueueWriteDict:(id)dict toMDMConfigurationFileForChannel:(unsigned long long)channel shouldNotify:(BOOL)notify;
- (void)_memberQueueUpdateMDMConfiguration:(id)mdmconfiguration organizationInfo:(id)info;
- (void)_executeBlockWhenPushTokenIsAvailable:(id /* block */)available;
- (void)_memberQueueSetupAPSConnectionIfNeeeded:(BOOL)neeeded valid:(BOOL)valid;
- (void)_memberQueueSetupAPSConnectionIsMDMConfigurationValid:(BOOL)valid isUserDaemon:(BOOL)daemon;
- (id)_memberQueuePushMagicMismatchDateMarker;
- (void)_memberQueueSetPushMagicMismatchDateMarker:(id)marker;
- (void)_memberQueueLogLatestPushTokenIfNeeded:(id)needed;
- (void)connection:(id)connection didReceivePublicToken:(id)token;
- (void)connection:(id)connection didReceiveMessageForTopic:(id)topic userInfo:(id)info;
- (id)_httpErrorFromTransaction:(id)transaction assertion:(id)assertion rmAccountID:(id)id enrollmentMode:(id)mode reauthQueue:(id)queue;
- (BOOL)_handleHTTPStatusGoneResponse;
- (id)_processTraditionalErrorFromTransaction:(id)transaction;
- (id)_processTraditionalUnauthorizedFromTransaction:(id)transaction assertion:(id)assertion;
- (id)_processUserChannelUnauthorizedFromTransaction:(id)transaction rmAccountID:(id)id reauthQueue:(id)queue;
- (void)_executionQueueRemoveMDMProfileWithAssertion:(id)assertion;
- (void)_clearCoreFollowup;
- (void)_postReauthFollowUpChangedNotification;
- (void)_memberQueueStartListeningForInterestingEvents;
- (void)_memberQueueStopListeningForInterestingEvents;
- (void)_networkReachabilityDidChange;
- (void)_keybagStateDidChange;
- (void)buddyDidFinish;
- (unsigned int)_registerForDispatchNotification:(id)notification outToken:(int *)token targetQueue:(id)queue handler:(id /* block */)handler;
- (unsigned int)_cancelDispatchNotificationWithToken:(unsigned int)token;
- (void)_clearMAIDNotification;
- (void)_currentLocaleDidChange:(id)change;
- (id)_createBadInstallationError;
- (void)_pollOrScheduleNextPollForHRN;
- (void)_memberQueuePollOrScheduleNextPollForHRN;
- (void)_scheduleNextPollWithInterval:(double)interval;
- (void)_pollingSucceeded;
- (void)_pollingFailed;
- (void)_setLastPollingAttempt;
- (void)_setLastPollingSuccess;
- (void)_memberQueueSetLastPollingSuccess;
- (void)_memberQueueSetLastPollingAttempt;
- (void)willSwitchUser;
- (id)_eraseWatchFailedWithUnderlayingError:(id)error;
- (id)_mdmOutstandingActivitiesFilePathForChannelType:(unsigned long long)type;
- (id)_mdmFilePathForChannelType:(unsigned long long)type;
- (id)_mdmPropertiesFilePathForChannelType:(unsigned long long)type;
- (id)_prefixNameForChannelType:(unsigned long long)type;
- (id)_reasonStringWithReason:(id)reason;
- (BOOL)_isTokenUpdateScheduled;
- (long long)_tokenUpdateCount;
- (void)_setTokenUpdateRequestCountToZero;
- (long long)_tokenUpdateRetryCount;
- (void)_decreaseTokenUpdateRetryCount;
- (long long)_memberQueueTokenUpdateCount;
- (void)_memberQueueSetTokenUpdateRequestCount:(long long)count;
- (void)_memberQueueSetLastPushTokenHash:(id)hash;
- (id)_memberQueueLastPushTokenHash;
- (void)_memberQueueIncrementTokenUpdateRequestCount;
- (void)_memberQueueDecrementTokenUpdateRequestCount;
- (id)responseFromBasicResponse:(id)response;
- (void)_clearCachedResponse;
- (id)_cachedResponse;
- (void)_setCachedResponse:(id)response;
- (id)_memberQueueCachedResponse;
- (void)_memberQueueSetCachedResponse:(id)response;
- (id)_idleResponse;
- (id)_userFieldsForResponse;
- (id)_responseDataFromResponseDictionary:(id)dictionary;
- (void)_memberQueueSetOutstandingActivity:(id)activity forKey:(id)key;
- (void)_memberQueueRemoveOutstandingActivityForKey:(id)key;
- (void)_changeOrganizationNameForRMAccountIdentifier:(id)identifier personaID:(id)id organizationName:(id)name;
- (void)_listenForCleanupMigrationFinishedNotificaitonAndRetryTokenUpdate;
- (int)_listenForOneTimeGlobalNotification:(id)notification callbackQueue:(id)queue notificationHandler:(id /* block */)handler;
@end

#endif /* MDMServerCore_h */
