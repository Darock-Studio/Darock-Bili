//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 472.0.0.0.0
//
#ifndef REElementDataSourceController_h
#define REElementDataSourceController_h
@import Foundation;

#include "REElementDataSource.h"
#include "REElementDataSourceControllerDelegate-Protocol.h"
#include "REElementDataSourceControllerProperties-Protocol.h"
#include "REElementDataSourceDelegate-Protocol.h"
#include "RERelevanceEngine.h"
#include "RERelevanceProviderEnvironment.h"
#include "REUpNextScheduler.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface REElementDataSourceController : NSObject<REElementDataSourceControllerProperties, REElementDataSourceDelegate> {
  /* instance variables */
  NSString *_loggingHeader;
  NSMutableSet *_dataSourceElements;
  NSMutableDictionary *_dataSourceElementSectionMap;
  NSMutableDictionary *_dataSourceElementIdentifierMap;
  NSObject<OS_dispatch_queue> *_queue;
  NSMutableArray *_updates;
  REUpNextScheduler *_updateScheduler;
  REUpNextScheduler *_reloadScheduler;
  BOOL _wantsReloadWhilePaused;
  NSArray *_sectionsToReloadWhilePaused;
  unsigned long long _contentMode;
  BOOL _isPerformingReload;
  NSMutableArray *_enqueuedBlocks;
  RERelevanceProviderEnvironment *_providerEnvironment;
  RERelevanceEngine *_relevanceEngine;
  BOOL _willUnload;
  BOOL _supportsContentRelevance;
  NSArray *_contentAttributes;
  int _boostCount;
  BOOL _disableAutomaticContentManagement;
}

@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) Class dataSourceClass;
@property (readonly, nonatomic) NSArray *supportedSections;
@property (readonly, nonatomic) NSArray *allProvidedElements;
@property (readonly, nonatomic) BOOL allowsLocationUse;
@property (readonly, nonatomic) BOOL hasDataAvailable;
@property (readonly, nonatomic) unsigned long long updateCount;
@property (weak, nonatomic) NSObject<REElementDataSourceControllerDelegate> *delegate;
@property (readonly, nonatomic) Class dataSourceClass;
@property (readonly, nonatomic) REElementDataSource *dataSource;
@property (readonly, nonatomic) NSString *bundleIdentifier;
@property (readonly, nonatomic) NSString *applicationBundleIdentifier;
@property (readonly, nonatomic) BOOL hasLoadedData;
@property (readonly, nonatomic) NSArray *allElements;
@property (nonatomic) unsigned long long state;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithRelevanceEngine:(id)engine dataSource:(id)source;
- (id)initWithRelevanceEngine:(id)engine dataSourceClass:(Class)class;
- (id)_initWithRelevanceEngine:(id)engine dataSourceClass:(Class)class dataSource:(id)source;
- (unsigned int)_defaultDataSourceQOS;
- (void)dealloc;
- (void)_handleSignifiantTimeChange:(id)change;
- (void)_handleDeviceLockStateChange:(id)change;
- (id)_elementsByRemovingInvalidElements:(id)elements;
- (id)_shallowCopiedElements:(id)elements;
- (void)_namespaceElementIdentifier:(id)identifier section:(id)section;
- (BOOL)_validElement:(id)element;
- (BOOL)_supportsContentRelevanceProviderForElement:(id)element;
- (id)_updateRelevanceProvidersForElement:(id)element;
- (void)_addElementIdentifier:(id)identifier;
- (void)_removeElementIdentifier:(id)identifier;
- (BOOL)_containsElementIdentifier:(id)identifier;
- (id)_allDataSourceElements;
- (void)_setSection:(id)section forElementWithIdentifier:(id)identifier;
- (id)_sectionForElementWithIdentifier:(id)identifier;
- (void)_storeElement:(id)element;
- (void)_removeElementForIdentifier:(id)identifier;
- (id)_elementForIdentifier:(id)identifier;
- (id)_dataSourceIdentifierFromIdentifier:(id)identifier;
- (BOOL)_isWhitelisted;
- (void)resume;
- (void)_queue_resume;
- (void)processPendingUpdatesWhilePause:(id /* block */)pause;
- (void)_queue_processPendingUpdatesWhilePause:(id /* block */)pause;
- (void)pause;
- (void)pauseIfNeeded;
- (void)_queue_pause;
- (void)_queue_updateDataSourceLocationUse;
- (void)prepareToUnload;
- (void)invalidateAndReloadWithCompletion:(id /* block */)completion;
- (void)invalidateElementsInSections:(id)sections completion:(id /* block */)completion;
- (id)elementOperationQueue;
- (void)invalidateElements;
- (void)invalidateElementsInSection:(id)section;
- (void)addElements:(id)elements toSection:(unsigned long long)section;
- (void)addElements:(id)elements toSectionWithIdentifier:(id)identifier;
- (void)hack_setupElementPrivacyContentForElement:(id)element;
- (void)reloadElement:(id)element;
- (void)refreshElement:(id)element;
- (void)removeElements:(id)elements fromSection:(unsigned long long)section;
- (void)removeElementsWithIds:(id)ids;
- (void)_performOrEnqueueUpdateBlock:(id /* block */)block;
- (void)_queue_reloadWithQOS:(unsigned int)qos qosOffset:(int)offset forceReload:(BOOL)reload completion:(id /* block */)completion;
- (void)_queue_reloadWithQOS:(unsigned int)qos qosOffset:(int)offset forceReload:(BOOL)reload sections:(id)sections completion:(id /* block */)completion;
- (void)_queue_invalidateSections:(id)sections completion:(id /* block */)completion;
- (void)_queue_purgeContentWithCompletion:(id /* block */)completion;
- (void)_queue_reloadWithQOS:(unsigned int)qos qosOffset:(int)offset forceReload:(BOOL)reload operations:(id /* block */)operations completion:(id /* block */)completion;
- (void)_queue_performContentInvalidateWithElement:(id)element expectation:(id)expectation sections:(id)sections;
- (id)_groupElements:(id)elements bySections:(id)sections;
- (void)_queue_scheduleUpdate:(id)update;
- (void)_queue_performUpdates;
- (void)_queue_processUpdates:(id)updates forSection:(id)section;
- (void)elementWillBecomeVisible:(id)visible;
- (void)elementDidBecomeHidden:(id)hidden;
- (BOOL)hasElementWithId:(id)id inSection:(unsigned long long)section;
- (BOOL)hasElementWithId:(id)id inSectionWithIdentifier:(id)identifier;
- (void)fetchElementWithIdentifierVisible:(id)visible withHandler:(id /* block */)handler;
- (id)_queue_elementsForIds:(id)ids;
- (void)_loadLoggingHeader;
@end

#endif /* REElementDataSourceController_h */
