//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 472.0.0.0.0
//
#ifndef REUpNextTimer_h
#define REUpNextTimer_h
@import Foundation;

#include "SWSystemSleepObserver-Protocol.h"

@class NSDate, NSDateInterval, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface REUpNextTimer : NSObject<SWSystemSleepObserver> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSDate *_lastFireDate;
}

@property (retain) NSObject<OS_dispatch_source> *dispatch_timer;
@property (readonly, nonatomic) NSDateInterval *fireInterval;
@property (readonly, nonatomic) double rate;
@property (readonly, nonatomic) id /* block */ block;
@property (readonly) BOOL valid;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)timerWithInterval:(double)interval queue:(id)queue block:(id /* block */)block;
+ (id)timerWithFireDate:(id)date queue:(id)queue block:(id /* block */)block;
+ (id)timerWithFireInterval:(id)interval atRate:(double)rate queue:(id)queue block:(id /* block */)block;

/* instance methods */
- (id)initWithDateInterval:(id)interval rate:(double)rate queue:(id)queue block:(id /* block */)block;
- (void)dealloc;
- (BOOL)_isNowRepeatingTimerWithCurrentDate:(id)date;
- (void)_scheduleTimerWithInterval:(id)interval rate:(double)rate;
- (void)_handleTimer;
- (void)_rescheduleTimer;
- (BOOL)isValid;
- (void)invalidate;
- (void)systemSleepMonitor:(id)monitor sleepRequestedWithResult:(id /* block */)result;
- (void)systemSleepMonitor:(id)monitor prepareForSleepWithCompletion:(id /* block */)completion;
- (void)systemSleepMonitorSleepRequestAborted:(id)aborted;
- (void)systemSleepMonitorWillWakeFromSleep:(id)sleep;
- (void)systemSleepMonitorDidWakeFromSleep:(id)sleep;
@end

#endif /* REUpNextTimer_h */
