//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 472.0.0.0.0
//
#ifndef RERelevanceProviderManager_h
#define RERelevanceProviderManager_h
@import Foundation;

#include "REFeatureSet.h"
#include "REPriorityQueue.h"
#include "RERelevanceProviderEnvironment.h"
#include "RERelevanceProviderManagerProperties-Protocol.h"
#include "REUpNextTimer.h"

@class NSArray, NSDictionary, NSHashTable, NSString;
@protocol OS_dispatch_queue;

@interface RERelevanceProviderManager : NSObject<RERelevanceProviderManagerProperties> {
  /* instance variables */
  NSHashTable *_providers;
  REPriorityQueue *_scheduledUpdates;
  REUpNextTimer *_updateTimer;
  NSDictionary *_inflectionValues;
  BOOL _dataStoresOpened;
  BOOL _hasSeperateRelevanceQueue;
  BOOL _implementsPrepareForUpdate;
  NSObject<OS_dispatch_queue> *_relevanceQueue;
  NSObject<OS_dispatch_queue> *_accessQueue;
  NSString *_loggingHeader;
}

@property (weak, nonatomic) RERelevanceProviderEnvironment *environment;
@property (retain, nonatomic) REFeatureSet *supportedFeatures;
@property (readonly, nonatomic) NSArray *effectiveFeatures;
@property (readonly, nonatomic) NSArray *allProviders;
@property (readonly, nonatomic) NSArray *allRelevanceProviders;
@property (readonly, nonatomic) unsigned long long scheduledUpdatesCount;
@property (readonly, nonatomic) BOOL dataSourcesOpened;

/* class methods */
+ (void)setProviderManagerClassesLoadingBlock:(id /* block */)block;
+ (id)providerManagerClasses;
+ (Class)_relevanceProviderClass;
+ (id)_features;
+ (id)_dependencyClasses;
+ (BOOL)_wantsDelayedUpdate;
+ (BOOL)_requiresLocationServices;
+ (BOOL)_wantsSeperateRelevanceQueue;
+ (BOOL)_supportsHistoricProviders;
+ (BOOL)supportsHistoricProviders;

/* instance methods */
- (id)initWithQueue:(id)queue;
- (void)dealloc;
- (float)_relevanceForProvider:(id)provider;
- (id)_valueForProvider:(id)provider feature:(id)feature;
- (id)_valueForProvider:(id)provider context:(id)context feature:(id)feature;
- (id)_valuesForProvider:(id)provider context:(id)context features:(id)features;
- (BOOL)_isHistoricProvider:(id)provider;
- (float)_relevanceForHistoricProvider:(id)provider;
- (id)_valueForHistoricProvider:(id)provider feature:(id)feature;
- (void)addProvider:(id)provider completion:(id /* block */)completion;
- (void)removeProvider:(id)provider completion:(id /* block */)completion;
- (BOOL)containsProvider:(id)provider;
- (void)relevanceForProvider:(id)provider completion:(id /* block */)completion;
- (id)relevanceForProvider:(id)provider context:(id)context;
- (void)isProviderHistoric:(id)historic completion:(id /* block */)completion;
- (void)relevanceForHistoricProvider:(id)provider completion:(id /* block */)completion;
- (void)beginActivity:(id)activity;
- (void)endActivity:(id)activity;
- (void)enumerateInflectionFeatureValues:(id /* block */)values;
- (BOOL)_isValidProvider:(id)provider;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)pause;
- (void)resume;
- (void)_openDataStoresAndObserveChanges;
- (void)_closeDataStoresAndObserveChanges;
- (BOOL)_dataSourcesOpened;
- (id)_manager_queue;
- (void)_addedProvider:(id)provider;
- (void)_removeProvider:(id)provider;
- (void)_prepareForUpdate;
- (void)_enumerateProviders:(id /* block */)providers;
- (void)beginFetchingData;
- (void)finishFetchingData;
- (void)resumeWithCompletion:(id /* block */)completion;
- (void)pauseWithCompletion:(id /* block */)completion;
- (void)_handleSignificantTimeChange;
- (void)_scheduleUpdate:(id)update;
- (void)_removeAllPendingUpdates;
- (void)_prepareForUpdateWithCompletion:(id /* block */)completion;
- (id)description;
- (void)_relevanceQueue_openDataStores;
- (void)_accessQueue_appendCompletionHandlerForScheduledUpdate:(id)update;
- (void)_accessQueue_performImmediateUpdate:(id)update;
- (void)_accessQueue_performPendingUpdatesAndScheduleTimerIfNeeded;
- (void)_accessQueue_performUpdate:(id)update;
- (void)_accessQueue_resetTimer;
- (void)_accessQueue_scheduleUpdate:(id)update;
- (void)_loadLoggingHeader;
@end

#endif /* RERelevanceProviderManager_h */
