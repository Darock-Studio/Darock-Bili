//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 472.0.0.0.0
//
#ifndef REFeatureValueCounter_h
#define REFeatureValueCounter_h
@import Foundation;

@class NSPointerArray;
@protocol {REFancyShrinkingDictionary="m_mapDocumentFrequency"{unordered_map<std::string, unsigned short, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<std::string, unsigned short>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned short>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned short>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned short>, std::hash<std::string>, std::equal_to<std::string>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned short>, std::equal_to<std::string>, std::hash<std::string>>>="__value_"f}}}"m_maxSize"Q"m_shrinkSize"Q"m_nVersion"i"m_trimTop"B"m_shinksOnTotalCount"B};

@interface REFeatureValueCounter : NSObject {
  /* instance variables */
  NSPointerArray *_values;
  struct REFancyShrinkingDictionary { struct unordered_map<std::string, unsigned short, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned short>>> { struct __hash_table<std::__hash_value_type<std::string, unsigned short>, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned short>, std::hash<std::string>, std::equal_to<std::string>>, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned short>, std::equal_to<std::string>, std::hash<std::string>>, std::allocator<std::__hash_value_type<std::string, unsigned short>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<std::string, unsigned short>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<std::string, std::__hash_value_type<std::string, unsigned short>, std::hash<std::string>, std::equal_to<std::string>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<std::string, std::__hash_value_type<std::string, unsigned short>, std::equal_to<std::string>, std::hash<std::string>>> { float __value_; } __p3_; } __table_; } m_mapDocumentFrequency; unsigned long long m_maxSize; unsigned long long m_shrinkSize; int m_nVersion; BOOL m_trimTop; BOOL m_shinksOnTotalCount; } _indicies;
  struct _opaque_pthread_rwlock_t { long long __sig; char x[192] __opaque; } _lock;
}

@property (nonatomic) unsigned long long count;

/* instance methods */
- (id)init;
- (BOOL)readFromURL:(id)url error:(id *)error;
- (BOOL)writeToURL:(id)url error:(id *)error;
- (void)_updateConfigurationForCount:(unsigned long long)count;
- (unsigned long long)trackedValueForValue:(id)value;
- (unsigned long long)countForValue:(id)value;
- (unsigned long long)totalCount;
- (id)_createErrorWithCode:(unsigned long long)code description:(id)description underlyingError:(id)error;
@end

#endif /* REFeatureValueCounter_h */
