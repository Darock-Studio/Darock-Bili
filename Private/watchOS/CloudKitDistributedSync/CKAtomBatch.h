//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKAtomBatch_h
#define CKAtomBatch_h
@import Foundation;

#include "CKDSReadableStorage.h"
#include "CKXBackingStore.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class CKDistributedTimestampStateVector, CKMergeableDeltaVectors, CKMergeableValueID;

@interface CKAtomBatch : NSObject<NSSecureCoding, NSCopying>

@property (retain, nonatomic) CKXBackingStore *backingStore;
@property (readonly, nonatomic) CKDSReadableStorage *storage;
@property (readonly, nonatomic) struct { unsigned char x0; unsigned char x1; } writerIdentity;
@property (readonly, nonatomic) BOOL isWriting;
@property (readonly, nonatomic) CKDistributedTimestampStateVector *enumeratedContentsVector;
@property (readonly, nonatomic) unsigned char formatVersion;
@property (readonly, nonatomic) BOOL fileBacked;
@property (readonly, copy, nonatomic) CKMergeableValueID *mergeableValueID;
@property (readonly, nonatomic) CKMergeableDeltaVectors *vectors;
@property (readonly, nonatomic) long long count;
@property (copy, nonatomic) id /* block */ atomValueDescriptionBlock;

/* class methods */
+ (id)bindingForFormatVersion:(unsigned char)version;
+ (id)atomBatchByMergingAtomBatches:(id)batches error:(id *)error;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithMergeableDelta:(id)delta error:(id *)error;
- (id)splitWithMaximumDeltaSize:(unsigned long long)size error:(id *)error;
- (id)initWithData:(id)data error:(id *)error;
- (id)initWithData:(id)data mergeableValueID:(id)id vectors:(id)vectors error:(id *)error;
- (id)initWithData:(id)data mergeableValueID:(id)id vectors:(id)vectors options:(id)options error:(id *)error;
- (id)initWithFileURL:(id)url mergeableValueID:(id)id vectors:(id)vectors options:(id)options error:(id *)error;
- (id)initWriterWithMergeableValueID:(id)id metadata:(id)metadata version:(unsigned char)version;
- (id)initWriterWithMergeableValueID:(id)id metadata:(id)metadata formatVersion:(unsigned char)version error:(id *)error;
- (id)initWriterWithMergeableValueID:(id)id vectors:(id)vectors formatVersion:(unsigned char)version error:(id *)error;
- (id)initWriterWithMergeableValueID:(id)id vectors:(id)vectors options:(id)options error:(id *)error;
- (id)initWithStorage:(id)storage optionsByReaderWriterClass:(id)class mergeableValueID:(id)id vectors:(id)vectors formatVersion:(unsigned char)version error:(id *)error;
- (id)writerOptions;
- (void)enumerateAtomsWithOptions:(id)options usingBlock:(id /* block */)block;
- (void)appendAtomWithBlock:(id /* block */)block;
- (void)finishWriting;
- (BOOL)finishWritingWithError:(id *)error;
- (BOOL)validateWithError:(id *)error;
- (id)data;
- (id)dataWithError:(id *)error;
- (BOOL)_setStorage:(id)storage optionsByReaderWriterClass:(id)class error:(id *)error;
- (BOOL)size:(unsigned long long *)size error:(id *)error;
- (id)contentsDescriptionWithStringSiteIdentifiers:(BOOL)identifiers;
- (id)description;
- (id)contentsDescription;
- (id)contentsDescriptionWithStringSiteIdentifiers;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)writableCopyWithMergeableValueID:(id)id vectors:(id)vectors;
- (id)writableCopy;
- (id)splitWithMaximumSize:(unsigned long long)size error:(id *)error;
- (BOOL)splitWithMaximumSize:(unsigned long long)size error:(id *)error block:(id /* block */)block;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)_metadataForCoding;
@end

#endif /* CKAtomBatch_h */
