//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EFLazyCache_h
#define EFLazyCache_h
@import Foundation;

#include "NSCacheDelegate-Protocol.h"

@class NSCache, NSRecursiveLock, NSString;
@protocol EFLazyCacheDelegate;

@interface EFLazyCache : NSObject<NSCacheDelegate> {
  /* instance variables */
  NSRecursiveLock *_lock;
  NSCache *_storage;
  struct { unsigned int x :1 delegateRespondsToLazyCacheWillEvictObject; } _flags;
}

@property (weak, nonatomic) NSObject<EFLazyCacheDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (long long)waiterCountForKey:(id)key;
- (id)init;
- (id)initWithCountLimit:(unsigned long long)limit;
- (void)dealloc;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)key;
- (void)_exchangeOriginalObject:(id)object forKey:(id)key withObject:(id)object;
- (id)objectForKey:(id)key generator:(id /* block */)generator;
- (id)storedObjectForKey:(id)key;
- (id)cachedObjectForKey:(id)key;
- (void)cache:(id)cache willEvictObject:(id)object;
@end

#endif /* EFLazyCache_h */
