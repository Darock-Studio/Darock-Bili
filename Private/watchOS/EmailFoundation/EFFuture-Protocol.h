//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EFFuture_Protocol_h
#define EFFuture_Protocol_h
@import Foundation;

#include "EFFuture-Protocol.h"
#include "EFObserver-Protocol.h"
#include "EFPromisePrivate-Protocol.h"

@class NSConditionLock, NSError, NSMutableArray, NSString;
@protocol EFFutureDelegate;

@protocol EFFuture <EFCancelable>

@property (readonly, nonatomic) id result;
@property (readonly, nonatomic) id resultIfAvailable;
@property (weak) NSObject<EFFutureDelegate> *delegate;
@property (readonly) BOOL finished;
@property (readonly) BOOL cancelled;

/* instance methods */
- (id)result:(id *)result;
- (id)resultWithTimeout:(double)timeout error:(id *)error;
- (id)resultBeforeDate:(id)date error:(id *)error;
- (id)resultIfAvailable:(id *)available;
- (BOOL)tryCancel;
- (void)addSuccessBlock:(id /* block */)block;
- (void)onScheduler:(id)scheduler addSuccessBlock:(id /* block */)block;
- (void)addFailureBlock:(id /* block */)block;
- (void)onScheduler:(id)scheduler addFailureBlock:(id /* block */)block;
- (void)always:(id /* block */)always;
- (void)onScheduler:(id)scheduler always:(id /* block */)always;
- (id)then:(id /* block */)then;
- (id)onScheduler:(id)scheduler then:(id /* block */)then;
- (id)recover:(id /* block */)recover;
- (id)onScheduler:(id)scheduler recover:(id /* block */)recover;
- (id)map:(id /* block */)map;
- (id)onScheduler:(id)scheduler map:(id /* block */)map;
- (BOOL)isFinished;
- (BOOL)isCancelled;
@end

#endif /* EFFuture_Protocol_h */
