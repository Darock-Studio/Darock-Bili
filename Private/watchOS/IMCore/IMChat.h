//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMChat_h
#define IMChat_h
@import Foundation;

#include "IMItemsController.h"
#include "IMAccount.h"
#include "IMChatItemRules-Protocol.h"
#include "IMChatScrutinyController.h"
#include "IMHandle.h"
#include "IMInlineReplyController.h"
#include "IMMessage.h"
#include "IMOrderingTools.h"
#include "IMSendProgress.h"
#include "IMSendProgressDelegate-Protocol.h"
#include "IMStateLoggable-Protocol.h"
#include "INSpeakable-Protocol.h"

@class IMBrand, IMMessageItem, IMScheduledUpdater, IMTimingCollection, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSSet, NSString;
@protocol IMDaemonController<IMDaemonProtocol;

@interface IMChat : IMItemsController<IMStateLoggable, INSpeakable, IMSendProgressDelegate> {
  /* instance variables */
  unsigned char _style;
  NSMutableSet *_guids;
  void * _context;
  unsigned long long _senderBlackholeWarningStatus;
}

@property (readonly, nonatomic) BOOL suppressAccountRetargetingForNamedGroupConversation;
@property (readonly, nonatomic) BOOL shouldForceServerStatusRefresh;
@property (nonatomic) BOOL forceMMS;
@property (readonly, nonatomic) unsigned long long capabilities;
@property (readonly, nonatomic) BOOL shouldIgnoreiMessageSiblingGroupIdentityUpdates;
@property (readonly, nonatomic) long long watermarkMessageID;
@property (readonly, copy, nonatomic) NSDate *watermarkDate;
@property (readonly, nonatomic) NSArray *participantDNDContactHandles;
@property (readonly, nonatomic) IMBrand *brand;
@property (readonly, nonatomic) BOOL isReplyEnabled;
@property (readonly, nonatomic) BOOL isBusinessChat;
@property (readonly, nonatomic) BOOL isMakoChat;
@property (readonly, nonatomic) BOOL isAppleChat;
@property (readonly, nonatomic) BOOL hasVerifiedBusiness;
@property (readonly, nonatomic) IMHandle *businessHandle;
@property (nonatomic) unsigned long long numberOfMessagesToKeepLoaded;
@property (readonly, nonatomic) BOOL hasMoreMessagesToLoad;
@property (readonly, nonatomic) BOOL hasMoreRecentMessagesToLoad;
@property (readonly, copy, nonatomic) NSArray *attachments;
@property (readonly, copy, nonatomic) NSNumber *countOfAttachmentsNotCachedLocally;
@property (readonly, nonatomic) BOOL isCurrentlyDownloadingPurgedAttachments;
@property (readonly, copy, nonatomic) NSArray *chatItems;
@property (readonly, nonatomic) BOOL wantsSenderBlackholeWarning;
@property (readonly, nonatomic) BOOL hasCommSafetySensitiveMessage;
@property (readonly, nonatomic) BOOL isCommSafetySensitiveMessageRecent;
@property (readonly, nonatomic) BOOL allParticipantsBlocked;
@property (readonly, nonatomic) NSSet *fmfHandles;
@property (readonly, nonatomic) NSSet *findMyHandles;
@property (readonly, nonatomic) NSSet *allSiblingFMFHandles;
@property (readonly, nonatomic) NSSet *allSiblingFindMyHandles;
@property (readonly, nonatomic) BOOL hasRecipientsFollowingLocation;
@property (readonly, nonatomic) BOOL hasSiblingRecipientsSharingLocation;
@property (readonly, nonatomic) BOOL allRecipientsFollowingLocation;
@property (readonly, nonatomic) BOOL hasRecipientsSharingLocation;
@property (readonly, nonatomic) BOOL allRecipientsSharingLocation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *spokenPhrase;
@property (readonly, nonatomic) NSString *pronunciationHint;
@property (readonly, nonatomic) NSString *vocabularyIdentifier;
@property (readonly, nonatomic) NSArray *alternativeSpeakableMatches;
@property (readonly, nonatomic) NSString *identifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSString *typingGUID;
@property (retain, nonatomic) NSString *identifier;
@property (retain, nonatomic) NSString *roomNameWithoutSuffix;
@property (retain, nonatomic) NSArray *participants;
@property (retain, nonatomic) NSMutableDictionary *participantStates;
@property (retain, nonatomic) NSMutableArray *messagesPendingJoin;
@property (retain, nonatomic) NSMutableDictionary *chatProperties;
@property (retain, nonatomic) NSMutableDictionary *participantProperties;
@property (retain, nonatomic) NSArray *attachments;
@property (retain, nonatomic) NSNumber *countOfAttachmentsNotCachedLocally;
@property (retain, nonatomic) NSNumber *countOfMessagesMarkedAsSpam;
@property (retain, nonatomic) IMTimingCollection *timingCollection;
@property (retain, nonatomic) NSObject<IMChatItemRules> *chatItemRules;
@property (retain, nonatomic) IMSendProgress *sendProgress;
@property (nonatomic) unsigned long long dbFailedCount;
@property (nonatomic) unsigned long long dbUnreadCount;
@property (nonatomic) BOOL hasBeenConfigured;
@property (nonatomic) BOOL isFirstMessageInvitation;
@property (nonatomic) BOOL wasInvitationHandled;
@property (nonatomic) BOOL didSendAFinishedMessage;
@property (nonatomic) BOOL isUpdatingChatItems;
@property (retain, nonatomic) NSString *currentUnreadHistoryQuery;
@property (nonatomic) BOOL hasEarlierMessagesToLoad;
@property (nonatomic) BOOL hasMoreRecentMessagesToLoad;
@property (nonatomic) BOOL isCurrentlyDownloadingPurgedAssets;
@property (retain, nonatomic) NSString *groupChatIdentifierUppercase;
@property (nonatomic) long long hasKnownParticipantsCacheStatus;
@property (nonatomic) BOOL unregistered;
@property (nonatomic) unsigned long long lastKTStatus;
@property (nonatomic) BOOL hasQueriedForSiblingChats;
@property (nonatomic) char downgradeState;
@property (nonatomic) long long hybridGroupState;
@property (retain, nonatomic) IMScheduledUpdater *downgradeStateUpdater;
@property (nonatomic) BOOL ignoreDowngradeStatusUpdates;
@property (nonatomic) BOOL forceMMS;
@property (nonatomic) BOOL hasRefreshedServiceForSending;
@property (readonly, nonatomic) IMChatScrutinyController *chatScrutinyController;
@property (retain, nonatomic) NSMutableSet *_guids;
@property (nonatomic) double latestTypingIndicatorTimeInterval;
@property (nonatomic) BOOL hasSurfRequest;
@property (retain, nonatomic) IMOrderingTools *orderingTools;
@property (retain, nonatomic) NSString *currentLocationGUID;
@property (nonatomic) BOOL allowedByScreenTime;
@property (retain, nonatomic) NSSet *mergedPinningIdentifiers;
@property (retain, nonatomic) NSArray *replySuggestions;
@property (retain, nonatomic) NSMutableArray *showingEditHistoryForChatItemGUIDs;
@property (nonatomic) long long cachedShouldShowReportSpam;
@property (nonatomic) long long cachedShouldShowSpam;
@property (nonatomic) long long lastMessageTimeStampOnLoad;
@property (retain, nonatomic) NSDate *lastTUConversationCreatedDate;
@property (retain, nonatomic) IMScheduledUpdater *chatItemsUpdater;
@property (nonatomic) unsigned long long recoverableMessagesCount;
@property (nonatomic) unsigned long long unreadRecoverableMessagesCount;
@property (retain, nonatomic) NSDate *earliestRecoverableMessageDeletionDate;
@property (retain, nonatomic) NSDate *latestRecoverableMessageDeletionDate;
@property (readonly, nonatomic) IMDaemonController<IMDaemonProtocol> *daemonController;
@property (readonly, nonatomic) BOOL _shouldRegisterChat;
@property (retain, nonatomic) NSDate *earliestCachedMessageDate;
@property (retain, nonatomic) NSString *lastAddressedHandleID;
@property (retain, nonatomic) NSString *lastAddressedSIMID;
@property (retain, nonatomic) NSString *groupID;
@property (nonatomic) BOOL prefersTextResponseToIncomingAudioMessages;
@property (nonatomic) BOOL shouldShowAudioButtonInEntryView;
@property (copy, nonatomic) NSDictionary *proofreadingInfo;
@property (retain, nonatomic) NSString *originalGroupID;
@property (nonatomic) void * contextInfo;
@property (retain, nonatomic) NSString *personCentricID;
@property (nonatomic) BOOL hasHadSuccessfulQuery;
@property (readonly, nonatomic) NSString *guid;
@property (readonly, nonatomic) IMAccount *account;
@property (readonly, nonatomic) unsigned char chatStyle;
@property (readonly, nonatomic) NSString *chatIdentifier;
@property (readonly, nonatomic) NSString *persistentID;
@property (readonly, nonatomic) NSString *deviceIndependentID;
@property (readonly, nonatomic) NSString *pinningIdentifier;
@property (readonly, nonatomic) NSString *identityHash;
@property (readonly, nonatomic) NSData *engramID;
@property (readonly, nonatomic) BOOL autoDonateMessages;
@property (nonatomic) long long autoDonationBehavior;
@property (readonly, nonatomic) BOOL shouldShowAutoDonationAction;
@property (readonly, nonatomic) unsigned long long messageCount;
@property (readonly, nonatomic) unsigned long long unreadMessageCount;
@property (readonly, nonatomic) unsigned long long messageFailureCount;
@property (readonly, nonatomic) BOOL canLeaveChat;
@property (readonly, nonatomic) BOOL canHaveMultipleParticipants;
@property (readonly, nonatomic) unsigned long long overallChatStatus;
@property (readonly, nonatomic) BOOL groupChat;
@property (readonly, nonatomic) BOOL hasLeftGroup;
@property (readonly, nonatomic) BOOL canSend;
@property (readonly, nonatomic) BOOL canSendInlineReply;
@property (readonly, nonatomic) BOOL hasMessageFromMe;
@property (readonly, nonatomic) BOOL isPinned;
@property (readonly, nonatomic) unsigned long long ktStatus;
@property (readonly, nonatomic) BOOL isLastIncomingFinishedMessageNotiMessage;
@property (readonly, nonatomic) BOOL shouldDisplayUnavailabilityIndicator;
@property (readonly, nonatomic) NSDate *availabilityStatusPublishedDate;
@property (retain, nonatomic) NSString *displayName;
@property (readonly, nonatomic) NSString *roomName;
@property (retain, nonatomic) NSArray *frequentReplies;
@property (readonly, nonatomic) long long joinState;
@property (readonly, nonatomic) BOOL hasUnhandledInvitation;
@property (nonatomic) BOOL localUserIsTyping;
@property (nonatomic) BOOL localUserIsRecording;
@property (retain, nonatomic) NSString *localUserIsComposing;
@property (readonly, nonatomic) NSString *localTypingMessageGUID;
@property (nonatomic) BOOL oscarChat;
@property (readonly, nonatomic) IMMessage *firstMessage;
@property (readonly, nonatomic) IMMessage *lastMessage;
@property (readonly, nonatomic) IMMessageItem *firstUnreadMessageItem;
@property (readonly, nonatomic) NSString *lastSeenMessageGuid;
@property (readonly, nonatomic) BOOL lastMessageExists;
@property (readonly, nonatomic) IMMessage *lastFinishedMessage;
@property (readonly, nonatomic) IMMessageItem *lastFinishedMessageItem;
@property (readonly, nonatomic) IMMessage *lastSentMessage;
@property (readonly, nonatomic) IMMessage *lastIncomingMessage;
@property (readonly, nonatomic) IMMessage *lastIncomingFinishedMessage;
@property (readonly, nonatomic) IMMessage *lastIncomingFinishedMessageWithTextContent;
@property (readonly, nonatomic) NSDate *lastFinishedMessageDate;
@property (readonly, nonatomic) long long lastFinishedMessageID;
@property (readonly, nonatomic) NSDate *lastSentMessageDate;
@property (nonatomic) long long isFiltered;
@property (readonly, nonatomic) long long filterCategory;
@property (readonly, nonatomic) long long filterSubCategory;
@property (nonatomic) BOOL recovered;
@property (nonatomic) BOOL deletingIncomingMessages;
@property (retain, nonatomic) IMHandle *recipient;
@property (retain, nonatomic) IMMessage *invitationForPendingParticipants;
@property (copy, nonatomic) NSDictionary *bizIntent;
@property (readonly, nonatomic) IMInlineReplyController *inlineReplyController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)stateCaptureRecents;
+ (void)storeGUIDInAttemptingListInScrutinyMode:(id)mode;
+ (BOOL)isGUIDInAttemptingListInScrutinyMode:(id)mode;
+ (void)removeGUIDInAttemptingListInScrutinyMode:(id)mode;
+ (void)cleanWatermarkCache;
+ (id /* block */)watermarkComparator;
+ (void)_initializeFindMyController;
+ (void)setChatItemRulesClass:(Class)class;
+ (Class)chatItemRulesClass;
+ (id)_participantsWorkQueue;

/* instance methods */
- (void)updateReplySuggestions;
- (id)recentIncomingMessagesWithTextContentForReplySuggestions;
- (id)recentOugoingMessagesWithTextContentForReplySuggestions;
- (BOOL)allowedToShowConversation;
- (BOOL)allowedToShowConversationSync;
- (id)conversationContext;
- (id)hashOfParticipantIDs;
- (id)participantHandleIDs;
- (id)contacts;
- (void)invalidateSpamIndicatorCachedValues;
- (void)invalidateSpamIndicatorCachedValuesIfNeeded;
- (id)stateDictionaryForDiagnosticsRequest;
- (BOOL)repliedToChat;
- (BOOL)receivedResponseForChat;
- (id)testChatItems;
- (void)_automation_markAsRead:(BOOL)read messageGUID:(id)guid forChatGUID:(id)guid fromMe:(BOOL)me;
- (void)markAllLocationShareItemsAsUnactionable;
- (void)shareLocationWithDuration:(long long)duration;
- (void)stopSharingLocation;
- (void)startTrackingParticipantLocations;
- (void)stopTrackingParticipantLocations;
- (void)_configureLocationShareItem:(id)item;
- (void)_updateLocationShareItemsForSender:(id)sender;
- (void)cleanupChatItems;
- (void)beginHoldingUpdatesForKey:(id)key;
- (void)endHoldingUpdatesForKey:(id)key;
- (BOOL)isHoldingUpdatesForKey:(id)key;
- (void)endHoldingUpdatesForAllKeys;
- (void)updateChatItemsIfNeeded;
- (void)_updateChatItemsForChatItemUpdater;
- (void)_updateChatItemsWithReason:(id)reason block:(id /* block */)block;
- (void)_updateChatItemsWithReason:(id)reason block:(id /* block */)block shouldPost:(BOOL)post;
- (void)_replaceStaleChatItems;
- (id)_getDeleteChatItemMap:(id)map;
- (id)_getMessageChatItemMap:(id)map withDeleteMap:(id)map andAllChatItems:(id)items;
- (void)deleteChatItems:(id)items;
- (void)deleteChatItems:(id)items fromChatItems:(id)items;
- (void)deleteIMMessageItems:(id)items;
- (void)markChatItemAsSaved:(id)saved;
- (void)markChatItemAsNotifyRecipient:(id)recipient;
- (void)markChatItemAsPlayed:(id)played;
- (void)_markItemAsPlayed:(id)played;
- (void)markChatItemAsPlayedExpressiveSend:(id)send;
- (void)updateCommSafety:(long long)safety forChatItem:(id)item;
- (void)updateCommSafety:(long long)safety forChatItems:(id)items;
- (void)updateCommSafety:(long long)safety forChatItems:(id)items parentChatItem:(id)item;
- (id)_renderingDataDictionary;
- (void)_setRenderingDataDictionary:(id)dictionary;
- (void)stickerRepositionedForAssociatedChatItem:(id)item;
- (id)chatItemsForItems:(id)items;
- (id)allMessagesToReportAsSpam;
- (id)messagesToReportAsSpamFromChatItems:(id)items;
- (BOOL)_processSupportsHistory;
- (id)loadMessagesUpToGUID:(id)guid limit:(unsigned long long)limit;
- (id)loadMessagesBeforeDate:(id)date limit:(unsigned long long)limit;
- (id)loadMessagesBeforeDate:(id)date limit:(unsigned long long)limit loadImmediately:(BOOL)immediately;
- (void)fetchMessagesUpToLimit:(unsigned long long)limit completion:(id /* block */)completion;
- (id)_fetchMessagesUpToLimit:(unsigned long long)limit synchronous:(BOOL)synchronous completion:(id /* block */)completion;
- (id)loadMessagesUpToGUID:(id)guid date:(id)date limit:(unsigned long long)limit loadImmediately:(BOOL)immediately;
- (void)fetchMessagesUpToGUID:(id)guid limit:(unsigned long long)limit completion:(id /* block */)completion;
- (id)_fetchMessagesUpToGUID:(id)guid limit:(unsigned long long)limit synchronous:(BOOL)synchronous completion:(id /* block */)completion;
- (id)loadMessagesBeforeAndAfterGUID:(id)guid numberOfMessagesToLoadBeforeGUID:(unsigned long long)guid numberOfMessagesToLoadAfterGUID:(unsigned long long)guid loadImmediately:(BOOL)immediately threadIdentifier:(id)identifier;
- (void)fetchMessagesBeforeAndAfterGUID:(id)guid numberOfMessagesToLoadBeforeGUID:(unsigned long long)guid numberOfMessagesToLoadAfterGUID:(unsigned long long)guid threadIdentifier:(id)identifier completion:(id /* block */)completion;
- (id)_fetchMessagesBeforeAndAfterGUID:(id)guid numberOfMessagesToLoadBeforeGUID:(unsigned long long)guid numberOfMessagesToLoadAfterGUID:(unsigned long long)guid threadIdentifier:(id)identifier synchronous:(BOOL)synchronous completion:(id /* block */)completion;
- (id)loadFrequentRepliesLimit:(unsigned long long)limit loadImmediately:(BOOL)immediately;
- (id)loadUnreadMessagesWithLimit:(unsigned long long)limit fallbackToMessagesUpToGUID:(id)guid;
- (void)_setAttachments:(id)attachments;
- (void)_setCountOfMessagesMarkedAsSpam:(id)spam;
- (void)_setCountOfAttachmentsNotCachedLocally:(id)locally;
- (void)_setIsDownloadingPurgedAssets:(BOOL)assets;
- (void)loadAttachments:(id /* block */)attachments;
- (void)fetchIsCurrentlyDownloadingPurgedAttachments:(id /* block */)attachments;
- (void)deleteTransfers:(id)transfers;
- (void)deleteChatItemsWithTransferGUIDs:(id)guids fromMessageItem:(id)item;
- (void)_deleteTransfersWithGUIDs:(id)guids fromChatItems:(id)items;
- (void)watermarkInForScrutinyMode;
- (unsigned long long)scrutinyModeAttemptCount;
- (BOOL)_serverBagPreventsScrutinyMode;
- (BOOL)isInScrutinyMode;
- (void)watermarkOutForScrutinyMode;
- (void)clearScrutinyMode;
- (id)_privateInitWithAccount:(id)account style:(unsigned char)style roomName:(id)name messages:(id)messages participants:(id)participants isFiltered:(long long)filtered hasHadSuccessfulQuery:(BOOL)query isRecovered:(BOOL)recovered isDeletingIncomingMessages:(BOOL)messages;
- (id)localizedUnreadShortcutTitle;
- (id)_existingMessageFromMessagePartGUID:(id)guid;
- (void)_updateExistingMessageWithSyndicationAction:(id)action;
- (void)sendSyndicationAction:(unsigned char)action forMessagePartGUID:(id)guid syndicatedMessagePartRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)sendAutoDonationUpdate:(BOOL)update;
- (void)closeSession;
- (void)deleteExtensionPayloadData;
- (void)createIMChatItemForTransientAttachmentWithAssetUUID:(id)uuid parentChatItemGUID:(id)guid;
- (id)_storedWatermarkMessageID;
- (void)updateWatermarks;
- (void)saveWatermark;
- (void)verifyFiltering;
- (BOOL)shouldBeAllowListed;
- (BOOL)_hasJustSentAMessage;
- (long long)compareChatByDate:(id)date;
- (long long)compareChatByTUDateAndLastFinishedMessageDate:(id)date;
- (id)_tuDateForChat:(id)chat;
- (long long)_compareChat:(id)chat withDate:(id)date withDate:(id)date;
- (BOOL)mapsToTUConversation:(id)tuconversation;
- (void)addHandlesToGroupFaceTimeChatIfRegistered:(id)registered;
- (id)conversation;
- (id)conversationWithUUID:(id)uuid;
- (void)joinExistingTUConversationWithUUID:(id)uuid;
- (void)joinExistingTUConversation;
- (void)joinExistingConversation:(id)conversation;
- (void)initiateTUConversationWithVideoEnabled:(BOOL)enabled;
- (void)initiateTUDialRequestWithVideoEnabled:(BOOL)enabled;
- (void)leaveCurrentTUCall;
- (id)callDurationStringForTuCall;
- (id)currentTUCall;
- (id)activeParticipantsForTUConversation;
- (id)remoteMembersForTUConversation;
- (void)_updateHybridGroupStateWithPerParticipantIDSStatus:(id)idsstatus;
- (BOOL)supportsCapabilities:(unsigned long long)capabilities;
- (BOOL)_isHybridGroupEligibleByCarrier;
- (BOOL)_isHybridGroup;
- (BOOL)_uncachedHybridGroupStatus;
- (BOOL)_uncachedHybridGroupStatusWithIDSQueryResults:(id)results;
- (BOOL)_idsQueryResultsHaveMixedIDSStatus:(id)idsstatus;
- (BOOL)_isiMessageService;
- (BOOL)_isSMSService;
- (BOOL)_supportsInlineReply;
- (BOOL)_supportsUndoSend;
- (BOOL)_supportsEditMessage;
- (BOOL)_supportsMentions;
- (BOOL)_supportsDeleteAndBlockGroup;
- (BOOL)_supportsDeliveryReceipts;
- (BOOL)_supportsNameAndPhoto;
- (BOOL)_supportsAudioMessages;
- (BOOL)_supportsGroupIdentity;
- (BOOL)_supportsGroupMutability;
- (BOOL)_supportsAddSticker;
- (void)refreshServiceForSending;
- (void)downgradeMessage:(id)message manualDowngrade:(BOOL)downgrade;
- (void)downgradeMessage:(id)message manualDowngrade:(BOOL)downgrade downgradeChat:(BOOL)chat;
- (void)_delayedInvalidateDowngradeState;
- (BOOL)_accountIsOperational:(id)operational forService:(id)service;
- (id)_previousAccountForService:(id)service;
- (void)_setPreviousAccount:(id)account forService:(id)service;
- (void)_targetToService:(id)service newComposition:(BOOL)composition;
- (BOOL)isDowngraded;
- (void)_invalidateDowngradeState;
- (void)_updateDowngradeState:(char)state checkAgainInterval:(double)interval;
- (void)_calculateDowngradeStateTimerFired;
- (id)_consecutiveDowngradeAttemptsViaManualDowngrades:(BOOL)downgrades;
- (void)_clearDowngradeMarkers;
- (void)_setAndIncrementDowngradeMarkersForManual:(BOOL)manual;
- (void)_calculateDowngradeState;
- (BOOL)_recipientIsPhoneNumber;
- (void)_setupObservation;
- (id)_initWithGUID:(id)guid account:(id)account style:(unsigned char)style roomName:(id)name displayName:(id)name lastAddressedHandle:(id)handle lastAddressedSIMID:(id)simid items:(id)items participants:(id)participants isFiltered:(long long)filtered hasHadSuccessfulQuery:(BOOL)query isRecovered:(BOOL)recovered isDeletingIncomingMessages:(BOOL)messages;
- (void)_initialize;
- (id)init;
- (id)chatRegistry;
- (void)dealloc;
- (id)_initWithItems:(id)items;
- (void)_itemsDidChange:(id)change;
- (void)_handleItem:(id)item;
- (void)_handleItem:(id)item forChatStyle:(unsigned char)style;
- (void)_handleItem:(id)item forChatStyle:(unsigned char)style updateReplyCounts:(BOOL)counts;
- (void)_removeItem:(id)item;
- (void)_replaceItems:(id)items;
- (void)_removeItemsForGuids:(id)guids;
- (void)_clearUnreadCount;
- (void)_setDBUnreadCount:(unsigned long long)count;
- (void)_setDBUnreadCount:(unsigned long long)count postNotification:(BOOL)notification;
- (void)_setDBFailedCount:(unsigned long long)count;
- (void)_insertHistoricalMessages:(id)messages queryID:(id)id isRefresh:(BOOL)refresh isHistoryQuery:(BOOL)query;
- (void)_insertHistoricalMessages:(id)messages queryID:(id)id isRefresh:(BOOL)refresh isHistoryQuery:(BOOL)query limit:(unsigned long long)limit;
- (void)_insertHistoricalMessages:(id)messages queryID:(id)id isRefresh:(BOOL)refresh isHistoryQuery:(BOOL)query isReplacingItems:(BOOL)items limit:(unsigned long long)limit hasMessagesBefore:(BOOL)before hasMessagesAfter:(BOOL)after;
- (id)_archivedItemsToReplace:(id)replace isReplacingItems:(BOOL)items;
- (id)messageForGUID:(id)guid;
- (id)messageItemForGUID:(id)guid;
- (id)lastRelatedIncomingFinishedMessageTextContentWithLimit:(long long)limit;
- (id)messageGuidsForMyUnreadMentions;
- (void)removeMentionMessageGUID:(id)guid;
- (BOOL)deleteAllHistory;
- (unsigned long long)markAsSpam:(unsigned long long)spam;
- (unsigned long long)markAsSpam:(unsigned long long)spam isJunkReportedToCarrier:(BOOL)carrier;
- (void)markAsAutoSpamReported;
- (void)autoReportSpam;
- (void)reportJunkToCarrier;
- (void)markAsHasBeenBlockContact;
- (void)updateIsFiltered:(long long)filtered;
- (void)updateIsBlackholed:(BOOL)blackholed;
- (void)updateLineSwitchedTo:(id)to;
- (void)loadParticipantContactsIfNecessary;
- (BOOL)hasKnownParticipants;
- (void)invalidateHasKnownParticipantsCache;
- (void)setHasKnownParticipantsCache:(BOOL)cache;
- (BOOL)hasKnownParticipantsCache;
- (BOOL)allParticipantsAreContacts;
- (BOOL)hasMessageFromService:(id)service;
- (BOOL)isSMS;
- (BOOL)shouldForceToSMS;
- (void)updateShouldForceToSMS:(BOOL)sms;
- (void)setKeyTransparencyURIToUUIDMapping:(id)uuidmapping;
- (void)updateSMSCategory:(long long)smscategory subCategory:(long long)category;
- (long long)chatPropertyValueFor:(long long)for;
- (void)clearSMSCategory;
- (BOOL)isCategorized;
- (void)_updateChatItemsWithDataDetectorResultsForReason:(id)reason;
- (void)updateLastUsedBIAUserID:(id)id;
- (void)updateLastUsedBIAReferenceID:(id)id;
- (id)lastUsedBIAUserID;
- (id)lastUsedBIAReferenceID;
- (BOOL)isAutoDonatingMessages;
- (id)lastTranslatableMessageGUIDWithLanguageCode:(id)code;
- (void)updateLastMessageGUID:(id)guid forLanguageCode:(id)code;
- (BOOL)isEmergencyChat;
- (void)updateIsEmergencyChat:(BOOL)chat;
- (id)associatedBusinessID;
- (void)updateAssociatedBusinessID:(id)id;
- (BOOL)isOscarChat;
- (BOOL)containsMessageFromContactOrMe;
- (long long)numberOfTimesRespondedToThread;
- (void)clear;
- (void)didUnregisterFromRegistry:(id)registry;
- (void)_recomputeOverallChatStatusQuietly:(BOOL)quietly;
- (void)_handleHandleStatusChanged:(id)changed;
- (void)_accountLoggedOut:(id)out;
- (void)_startTiming:(id)timing;
- (void)_endTiming;
- (void)_postNotification:(id)notification userInfo:(id)info;
- (void)_postIMChatItemsDidChangeNotificationWithInserted:(id)inserted removed:(id)removed reload:(id)reload regenerate:(id)regenerate oldChatItems:(id)items newChatItems:(id)items;
- (void)_setParticipantState:(unsigned long long)state forHandle:(id)handle quietly:(BOOL)quietly;
- (void)_setParticipantState:(unsigned long long)state forHandles:(id)handles quietly:(BOOL)quietly;
- (void)_handleMessageGUIDDeletions:(id)guiddeletions;
- (unsigned long long)paymentTypeForMessage:(id)message;
- (BOOL)hasSurfRequestForPaymentType:(unsigned long long)type;
- (BOOL)hasSurfRequestNotFromMe:(id)me;
- (void)_fixSendingItemDateAndSortID:(id)id;
- (void)_persistSortIDFromReplacedItem:(id)item toItem:(id)item;
- (BOOL)_handleIncomingItem:(id)item;
- (BOOL)_handleIncomingItem:(id)item updateRecipient:(BOOL)recipient;
- (BOOL)_handleIncomingItem:(id)item updateRecipient:(BOOL)recipient suppressNotification:(BOOL)notification;
- (BOOL)_handleIncomingItem:(id)item updateRecipient:(BOOL)recipient suppressNotification:(BOOL)notification updateReplyCounts:(BOOL)counts;
- (void)_setJoinState:(long long)state;
- (void)_clearPendingMessages;
- (void)_setJoinState:(long long)state quietly:(BOOL)quietly;
- (void)_participant:(id)_participant statusChanged:(int)changed;
- (void)_showErrorMessage:(id)message;
- (id)_performQueryWithKey:(id)key loadImmediately:(BOOL)immediately block:(id /* block */)block completion:(id /* block */)completion;
- (id)_performQueryWithKey:(id)key loadImmediately:(BOOL)immediately block:(id /* block */)block;
- (void)endListeningToAttributionChanges;
- (void)beginListeningToAttributionChanges;
- (void)_handleAttributionChanged;
- (void)_engroupParticipantsUpdated;
- (void)_validateChatRegistrationWithRegistry;
- (id)participantsWithState:(unsigned long long)state;
- (unsigned long long)stateForParticipant:(id)participant;
- (void)_clearCachedIdentifier;
- (BOOL)isGroupChat;
- (void)_setDisplayName:(id)name;
- (void)_updateDisplayName:(id)name;
- (void)_updateDisplayName:(id)name sender:(id)sender;
- (void)_updateEngramID:(id)id;
- (id)displayNameWithRawAddress:(BOOL)address isSpamFilteringEnabled:(BOOL)enabled;
- (id)displayNameWithDescriptor:(struct IMChatDisplayNameDescriptor { BOOL x0; BOOL x1; BOOL x2; long long x3; })descriptor;
- (id)_participantListStringForNames:(id)names visibleNameCount:(long long)count;
- (void)_updateLastAddressedHandleID:(id)id;
- (void)_updateLastAddressedSIMID:(id)simid;
- (void)acceptInvitation;
- (void)declineInvitation;
- (void)cancelMessage:(id)message;
- (void)_sendMessage:(id)message adjustingSender:(BOOL)sender shouldQueue:(BOOL)queue;
- (void)_sendMessage:(id)message withAccount:(id)account adjustingSender:(BOOL)sender shouldQueue:(BOOL)queue;
- (void)_updateMessageItemTimeIfNeeded:(id)needed;
- (void)_updateSenderForMessageIfNeeded:(id)needed adjustingSender:(BOOL)sender;
- (void)_updateSenderForMessageIfNeeded:(id)needed adjustingSender:(BOOL)sender withAccount:(id)account;
- (void)_updateBizIntentForMessageIfNeeded:(id)needed;
- (void)_updateLocaleForMessageIfNeeded:(id)needed;
- (id)_getCurrentLocale;
- (void)_updateTypingGUIDForMessageIfNeeded:(id)needed;
- (void)_updateWalletBreadcrumbingAssociationForMessageIfNeeded:(id)needed;
- (BOOL)_updateJoinStateWithMessageIfNeeded:(id)needed;
- (void)_updatePayloadForMessageIfNeeded:(id)needed;
- (void)_updateFileAttachmentGUIDsForMessageIfNeeded:(id)needed withPayloadAttachments:(id)attachments;
- (void)_refreshServiceForSendingIfNeededWithMessage:(id)message;
- (void)_fixItemForSendingMessageTime:(id)time;
- (void)sendMessage:(id)message;
- (void)sendMessage:(id)message onService:(id)service;
- (void)sendMessage:(id)message onAccount:(id)account;
- (void)sendCurrentLocationMessage;
- (void)retractMessagePart:(id)part;
- (void)editMessageItem:(id)item atPartIndex:(long long)index withNewPartText:(id)text backwardCompatabilityText:(id)text;
- (void)resendEditedMessageItem:(id)item forPartIndex:(long long)index withBackwardCompatabilityText:(id)text;
- (void)beginShowingEditHistoryForChatItemGUID:(id)guid;
- (void)endShowingEditHistoryForChatItemGUID:(id)guid;
- (void)endShowingEditHistoryForAllChatItems;
- (BOOL)isShowingEditHistoryForChatItemGUID:(id)guid;
- (BOOL)isShowingEditHistoryForAnyChatItem;
- (void)repositionSticker:(id)sticker associatedChatItem:(id)item onService:(id)service;
- (void)sendGroupPhotoUpdate:(id)update;
- (void)resendGroupPhoto;
- (void)retryGroupPhotoUploadIfNecessary;
- (BOOL)_shouldSendCancelTypingIndicator;
- (unsigned long long)_flagsForTypingIndicatorMessage:(BOOL)message;
- (unsigned long long)_flagsForCancelTypingIndicatorMessage;
- (BOOL)_chatStyleSupportsTypingAndCancelTypingIndicators;
- (void)_setLocalUserIsComposing:(id)composing suppliedGUID:(id)guid;
- (void)_setLocalUserIsComposing:(id)composing suppliedGUID:(id)guid typingIndicatorData:(id)data;
- (void)setLocalUserIsComposing:(id)composing typingIndicatorData:(id)data;
- (BOOL)canSendMessage:(id)message;
- (BOOL)canSendTransfer:(id)transfer;
- (BOOL)canSendCurrentLocationMessage;
- (BOOL)authorizationToSendCurrentLocationMessageDetermined;
- (BOOL)authorizedToSendCurrentLocationMessage;
- (BOOL)authorizationToSendCurrentLocationMessageDenied;
- (void)updateMessage:(id)message withIndexesOfDeletedItems:(id)items withIndexToRangeMapOfDeletedItems:(id)items deleteDate:(id)date;
- (void)__clearReadMessageCache;
- (void)_setTimerForReadMessageCache;
- (void)markMessageAsRead:(id)read;
- (void)markMessagesAsRead:(id)read;
- (void)markLastMessageAsUnread;
- (void)markAllMessagesAsRead;
- (void)recoverFromJunk;
- (void)resortMessages;
- (BOOL)_isDuplicate:(id)duplicate;
- (void)_setChatProperties:(id)properties;
- (id)allChatProperties;
- (id)valueForChatProperty:(id)property;
- (void)setValue:(id)value forChatProperty:(id)property;
- (void)userToggledReadReceiptSwitch:(BOOL)switch;
- (id)allPropertiesOfParticipant:(id)participant;
- (id)valueForProperty:(id)property ofParticipant:(id)participant;
- (void)setValue:(id)value forProperty:(id)property ofParticipant:(id)participant;
- (id)_mergeParticipantIDs;
- (id)_generatePersonCentricID;
- (BOOL)_hasCommunicatedOnService:(id)service;
- (void)_setAccount:(id)account;
- (void)_setAccount:(id)account locally:(BOOL)locally;
- (void)setRecipient:(id)recipient locally:(BOOL)locally;
- (void)join;
- (void)leaveiMessageGroup;
- (void)leave;
- (void)_leaveChat:(BOOL)chat;
- (void)remove;
- (void)_addParticipants:(id)participants withState:(unsigned long long)state;
- (BOOL)canAddParticipant:(id)participant;
- (BOOL)canAddParticipants:(id)participants;
- (id)_pendingParticipants;
- (void)_inviteParticipants:(id)participants reason:(id)reason toiMessageChat:(BOOL)chat;
- (void)_invitePendingParticipants;
- (void)inviteParticipants:(id)participants reason:(id)reason;
- (void)inviteParticipantsToiMessageChat:(id)chat reason:(id)reason;
- (void)_inviteParticipantsToChat:(id)chat reason:(id)reason toiMessageChat:(BOOL)chat;
- (void)removeParticipants:(id)participants reason:(id)reason;
- (void)removeParticipantsFromiMessageChat:(id)chat reason:(id)reason;
- (BOOL)canRemoveParticipants:(id)participants;
- (void)_removeParticipantsFromChat:(id)chat reason:(id)reason fromiMessageChat:(BOOL)chat;
- (void)addPendingParticipants:(id)participants;
- (void)isInvitedToViewMyFocusStatusWithCompletion:(id /* block */)completion;
- (void)beginObservingHandleAvailability;
- (void)endObservingHandleAvailability;
- (void)_reloadChatItemsForHandleAvailabilityChange;
- (void)_reloadChatItemsForKeyTransparencyStatusChange;
- (void)_reloadChatItemsForJunkStateChange;
- (void)autoInviteToViewAvailabilityIfNeeded;
- (void)canShareFocusStatusWithCompletion:(id /* block */)completion;
- (BOOL)isMessagesAuthorizedToAccessFocusStatus;
- (void)_handleAddressBookChangeForRecipientUID:(id)uid;
- (BOOL)_sanityCheckAccounts;
- (void)_accountControllerUpdated:(id)updated;
- (void)_daemonAlive:(id)alive;
- (void)_daemonDied:(id)died;
- (BOOL)hasStoredMessageWithGUID:(id)guid;
- (id)_initWithDictionaryRepresentation:(id)representation items:(id)items participantsHint:(id)hint accountHint:(id)hint;
- (void)setSendProgressDelegate:(id)delegate;
- (id)sendProgressDelegate;
- (void)sendProgress:(id)progress progressDidChange:(float)change sendingMessages:(id)messages sendCount:(unsigned long long)count totalCount:(unsigned long long)count finished:(BOOL)finished;
- (void)downloadPurgedAttachments;
- (void)loadInlineRepliesForThreadIdentifier:(id)identifier threadOriginator:(id)originator messageGuid:(id)guid;
- (void)dismissInlineReplies;
- (BOOL)_isSendToMakoAllowed;
- (BOOL)isReadOnly;
- (void)_updateRepliesIfNecessaryWithItem:(id)item;
- (void)_updateRepliesIfNecessaryWithRemovedItems:(id)items threadIdentifiersOfRemovedParts:(id)parts;
- (BOOL)isMuted;
- (id)muteUntilDate;
- (void)setMuteUntilDate:(id)date;
- (id)_lastKTVerifierResultForParticipant:(id)participant;
- (id)_ktQueue;
- (void)markKTFailureSeen;
- (void)ignoreKTFailure;
- (unsigned long long)conversationKTUIStatus;
- (id)getParticipantsWithKTUIStatus:(unsigned long long)ktuistatus;
- (unsigned long long)getKTDisplayStatusAndRelatedPeerHandles:(id *)handles;
- (unsigned long long)keyTransparencyStatusForAffectedHandles:(id *)handles;
- (void)fetchKTStatus;
- (BOOL)enrolledInContactKeyVerification;
- (id)keyTransparencyVerifier;
- (BOOL)_lastKnownHybridState;
- (BOOL)_updateLastKnownHybridState:(BOOL)state;
- (void)_setGUIDs:(id)guids;
- (BOOL)isRecovered;
- (BOOL)isDeletingIncomingMessages;
- (BOOL)isUnregistered;
@end

#endif /* IMChat_h */
