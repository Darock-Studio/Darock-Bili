//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef _IMLegacyDaemonController_h
#define _IMLegacyDaemonController_h
@import Foundation;

#include "IMDaemonControlling-Protocol.h"
#include "IMDaemonControlling_Private-Protocol.h"
#include "IMDaemonListener.h"
#include "IMDaemonProtocol-Protocol.h"
#include "IMDaemonQueryController.h"

@class IMLocalObject, NSArray, NSLock, NSMutableArray, NSMutableDictionary, NSProtocolChecker, NSRecursiveLock, NSString;
@protocol IMRemoteObject<IMDaemonProtocol, OS_dispatch_queue;

@interface _IMLegacyDaemonController : NSObject<IMDaemonControlling, IMDaemonControlling_Private> {
  /* instance variables */
  IMDaemonListener *_daemonListener;
}

@property (retain, nonatomic) IMRemoteObject<IMDaemonProtocol> *remoteObject;
@property (retain, nonatomic) NSMutableDictionary *listenerMap;
@property (retain, nonatomic) IMLocalObject *localObject;
@property (retain, nonatomic) IMDaemonListener *listener;
@property (retain, nonatomic) NSMutableArray *services;
@property (retain, nonatomic) NSProtocolChecker *protocol;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *listenerLockQueue;
@property (nonatomic) struct os_unfair_recursive_lock_s { struct os_unfair_lock_s { unsigned int x0; } x0; unsigned int x1; } remoteDaemonLock;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *localObjectLockQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *daemonConnectionQueue;
@property (retain, nonatomic) NSRecursiveLock *connectionLock;
@property (nonatomic) struct __CFRunLoopSource * runLoopSource;
@property (retain, nonatomic) NSLock *blockingLock;
@property (nonatomic) BOOL hasCheckedForDaemon;
@property (nonatomic) BOOL preventReconnect;
@property (nonatomic) BOOL inBlockingConnect;
@property (nonatomic) BOOL acquiringDaemonConnection;
@property (nonatomic) BOOL hasBeenSuspended;
@property (readonly, nonatomic) BOOL requestingConnection;
@property (nonatomic) unsigned int gMyFZListenerCapabilities;
@property (nonatomic) unsigned int cachedCapabilities;
@property (nonatomic) unsigned int lastUpdatedCapabilities;
@property unsigned int _capabilities;
@property BOOL _autoReconnect;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *remoteMessageQueue;
@property (readonly, nonatomic) BOOL connected;
@property (readonly, nonatomic) NSObject<IMDaemonProtocol> *remoteDaemon;
@property (readonly, nonatomic) NSObject<IMDaemonProtocol> *synchronousRemoteDaemon;
@property (readonly, nonatomic) NSObject<IMDaemonProtocol> *synchronousReplyingRemoteDaemon;
@property (readonly, nonatomic) NSObject<IMDaemonProtocol> *replyingRemoteDaemon;
@property (readonly, nonatomic) IMDaemonQueryController *queryController;
@property (readonly, nonatomic) unsigned int capabilities;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSArray *_servicesToAllow;
@property (retain) NSArray *_servicesToDeny;
@property (retain, nonatomic) NSString *listenerID;
@property (weak, nonatomic) id delegate;
@property (nonatomic) BOOL _blocksConnectionAtResume;
@property (readonly, nonatomic) BOOL isConnecting;

/* class methods */
+ (BOOL)_applicationWillTerminate;
+ (void)_blockUntilSendQueueIsEmpty;
+ (void)_setApplicationWillTerminate;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)_agentDidLaunchNotification:(id)notification;
- (void)_handleDaemonException:(id)exception;
- (BOOL)_makeConnectionWithLaunch:(BOOL)launch completionBlock:(id /* block */)block;
- (void)_blockUntilSendQueueIsEmpty;
- (void)killDaemon;
- (void)disconnectFromDaemonWithForce:(BOOL)force;
- (void)_disconnectFromDaemonWithForce:(BOOL)force;
- (void)disconnectFromDaemon;
- (void)_connectToDaemonWithLaunch:(BOOL)launch capabilities:(unsigned int)capabilities;
- (BOOL)connectToDaemonWithLaunch:(BOOL)launch;
- (BOOL)connectToDaemon;
- (BOOL)connectToDaemonWithLaunch:(BOOL)launch capabilities:(unsigned int)capabilities blockUntilConnected:(BOOL)connected;
- (void)_listenerSetUpdated;
- (BOOL)addListenerID:(id)id capabilities:(unsigned int)capabilities;
- (BOOL)hasListenerForID:(id)id;
- (BOOL)removeListenerID:(id)id;
- (unsigned int)capabilitiesForListenerID:(id)id;
- (BOOL)setCapabilities:(unsigned int)capabilities forListenerID:(id)id;
- (unsigned long long)processCapabilities;
- (id)_remoteObject;
- (void)_setBlocksConnectionAtResume:(BOOL)resume;
- (BOOL)_acquiringDaemonConnection;
- (BOOL)isConnected;
- (double)_connectionTimeout;
- (void)blockUntilConnected;
- (void)_noteSetupComplete;
- (BOOL)__isLocalObjectValidOnQueue:(id)queue;
- (BOOL)__isRemoteObjectValid;
- (BOOL)remoteObjectExists;
- (BOOL)localObjectExists;
- (void)_localObjectCleanup;
- (void)_remoteObjectCleanup;
- (void)listener:(id)listener setListenerCapabilities:(unsigned int)capabilities;
- (void)_setCapabilities:(unsigned int)capabilities;
- (void)localObjectDiedNotification:(id)notification;
- (void)remoteObjectDiedNotification:(id)notification;
- (void)listener:(id)listener setValue:(id)value ofProperty:(id)property;
- (void)listener:(id)listener setValue:(id)value ofPersistentProperty:(id)property;
- (void)setDaemonTerminatesWithoutListeners:(BOOL)listeners;
- (void)setDaemonLogsOutWithoutStatusListeners:(BOOL)listeners;
- (void)sendQueryWithReply:(BOOL)reply query:(id /* block */)query;
- (void)setQueryContext:(id)context;
- (void)unsetQueryContext:(id)context;
- (BOOL)consumeQueryContext:(id)context;
- (id)methodSignatureForSelector:(SEL)selector;
- (void)forwardInvocation:(id)invocation;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidResume;
- (void)_setListenerID:(id)id;
- (BOOL)isRequestingConnection;
- (void)_setServicesToAllow:(id)allow;
- (void)_setServicesToDeny:(id)deny;
- (void)__setCapabilities:(unsigned int)capabilities;
- (void)_setAutoReconnect:(BOOL)reconnect;
@end

#endif /* _IMLegacyDaemonController_h */
