//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMAccount_h
#define IMAccount_h
@import Foundation;

#include "IMHandle.h"
#include "IMPeople.h"
#include "IMServiceImpl.h"
#include "IMSystemMonitorListener-Protocol.h"

@class NSArray, NSAttributedString, NSData, NSDate, NSDictionary, NSMapTable, NSMutableDictionary, NSRecursiveLock, NSString;

@interface IMAccount : NSObject<IMSystemMonitorListener>

@property (retain, nonatomic) IMPeople *buddyList;
@property (retain, nonatomic) NSRecursiveLock *lock;
@property (retain, nonatomic) NSMapTable *imHandles;
@property (retain, nonatomic) IMHandle *loginIMHandle;
@property (retain, nonatomic) NSArray *cachedAllowList;
@property (retain, nonatomic) NSArray *cachedBlockList;
@property (retain, nonatomic) NSString *loginID;
@property (nonatomic) long long accountType;
@property (retain, nonatomic) NSString *strippedLogin;
@property (retain, nonatomic) NSDictionary *data;
@property (retain, nonatomic) NSMutableDictionary *dataChanges;
@property (retain, nonatomic) NSMutableDictionary *localCache;
@property (retain, nonatomic) NSDictionary *profile;
@property (retain, nonatomic) NSMutableDictionary *profileChanges;
@property (retain, nonatomic) NSString *countryCode;
@property (nonatomic) long long profileStatus;
@property (retain, nonatomic) NSDictionary *accountPreferences;
@property (retain, nonatomic) NSMutableDictionary *accountPreferencesChanges;
@property (retain, nonatomic) NSDictionary *accountPersistentProperties;
@property (retain, nonatomic) NSMutableDictionary *accountPersistentPropertiesChanges;
@property (retain, nonatomic) NSArray *groups;
@property (retain, nonatomic) NSMutableDictionary *sortOrders;
@property (retain, nonatomic) NSDictionary *members;
@property (retain, nonatomic) NSMutableDictionary *coalescedChanges;
@property (retain, nonatomic) NSArray *targetGroupState;
@property (retain, nonatomic) NSArray *lastReceivedGroupState;
@property (retain, nonatomic) NSDictionary *accountSubtypeInfo;
@property (retain, nonatomic) NSArray *vettedAliases;
@property (retain, nonatomic) NSArray *aliases;
@property (nonatomic) unsigned long long myStatus;
@property (retain, nonatomic) NSMutableDictionary *myStatusDictionary;
@property (retain, nonatomic) NSString *myStatusMessage;
@property (retain, nonatomic) NSDictionary *myNowPlaying;
@property (retain, nonatomic) NSDate *myIdleSince;
@property (retain, nonatomic) NSData *myPictureData;
@property (retain, nonatomic) NSData *accountImageData;
@property (nonatomic) unsigned long long capabilities;
@property (nonatomic) unsigned long long defaultHandleCapabilities;
@property (nonatomic) BOOL hasCheckedDefaultHandleCapabilities;
@property (retain, nonatomic) NSAttributedString *myProfile;
@property (nonatomic) long long registrationStatus;
@property (nonatomic) long long registrationFailureReason;
@property (retain, nonatomic) NSDictionary *registrationAlertInfo;
@property (nonatomic) unsigned long long loginStatus;
@property (nonatomic) BOOL isActive;
@property (nonatomic) BOOL hasPostedOfflineNotification;
@property (nonatomic) BOOL justLoggedIn;
@property (nonatomic) BOOL useMeCardName;
@property (nonatomic) unsigned int cachedBlockingMode;
@property (nonatomic) BOOL blockIdleStatus;
@property (nonatomic) BOOL syncedWithRemoteBuddyList;
@property (nonatomic) BOOL hasReceivedSync;
@property (nonatomic) int numHolding;
@property (nonatomic) int coalesceCount;
@property (nonatomic) BOOL needToCheckForWatchedIMHandles;
@property (nonatomic) BOOL iconChecked;
@property (nonatomic) BOOL hasBeenRemoved;
@property (weak, nonatomic) IMServiceImpl *service;
@property (retain, nonatomic) id smallImage;
@property (retain, nonatomic) id accountImage;
@property (nonatomic) BOOL asleep;
@property (retain, nonatomic) NSString *keyTransparencyIDQueryListenerID;
@property (readonly, nonatomic) BOOL isAwaitingTargetGroupState;
@property (readonly, nonatomic) BOOL hasTargetGroupStateBeenMet;
@property (readonly, nonatomic) BOOL hasSyncedWithRemoteBuddies;
@property (readonly, nonatomic) NSDictionary *_persistentProperties;
@property (readonly, nonatomic) BOOL isAsleep;
@property (readonly, nonatomic) BOOL _isUsableForSending;
@property (readonly, nonatomic) NSDictionary *dictionary;
@property (readonly, nonatomic) NSString *uniqueID;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *shortName;
@property (readonly, nonatomic) NSString *serviceName;
@property (readonly, nonatomic) NSString *internalName;
@property (readonly, nonatomic) NSArray *emailDomains;
@property (readonly, nonatomic) BOOL supportsRegistration;
@property (readonly, nonatomic) NSDictionary *registrationFailureAlertInfo;
@property (readonly, nonatomic) BOOL isRegistered;
@property (readonly, nonatomic) BOOL isOperational;
@property (readonly, nonatomic) BOOL canSendMessages;
@property (readonly, nonatomic) BOOL supportsAuthorization;
@property (readonly, nonatomic) NSString *authorizationID;
@property (readonly, nonatomic) NSString *authorizationToken;
@property (readonly, nonatomic) NSDictionary *profileInfo;
@property (readonly, nonatomic) BOOL makoAccount;
@property (readonly, nonatomic) NSArray *aliasesToRegister;
@property (copy, nonatomic) NSString *displayName;
@property (readonly, nonatomic) BOOL hasCustomDescription;
@property (retain, nonatomic) NSString *accountDescription;
@property (readonly, nonatomic) NSString *loginStatusMessage;
@property (readonly, nonatomic) NSString *myNowPlayingString;
@property (readonly, nonatomic) BOOL isManaged;
@property (nonatomic) BOOL autoLogin;
@property (retain, nonatomic) NSString *login;
@property (readonly, nonatomic) NSString *server;
@property (readonly, nonatomic) long long port;
@property (readonly, nonatomic) BOOL useSSL;
@property (nonatomic) BOOL goIdle;
@property (nonatomic) BOOL allowsVCRelay;
@property (readonly, nonatomic) BOOL allowsSMSRelay;
@property (readonly, nonatomic) BOOL allowsMMSRelay;
@property (readonly, nonatomic) BOOL isSMSRelayCapable;
@property (readonly, nonatomic) BOOL isConnecting;
@property (readonly, nonatomic) BOOL isConnected;
@property (nonatomic) BOOL invisible;
@property (readonly, nonatomic) BOOL canActivate;
@property (readonly, nonatomic) BOOL handlesChatInvites;
@property (readonly, nonatomic) BOOL validLogin;
@property (readonly, nonatomic) BOOL validPort;
@property (readonly, nonatomic) BOOL validServer;
@property (readonly, nonatomic) long long invalidSettings;
@property (readonly, nonatomic) NSString *password;
@property (readonly, nonatomic) NSString *temporaryPassword;
@property (readonly, nonatomic) NSArray *groupList;
@property (readonly, nonatomic) BOOL makingChanges;
@property (retain, nonatomic) NSArray *blockList;
@property (retain, nonatomic) NSArray *allowList;
@property (readonly, nonatomic) unsigned int blockingMode;
@property (nonatomic) BOOL blockOtherAddresses;
@property (readonly, nonatomic) NSArray *arrayOfAllIMHandles;

/* class methods */
+ (id)passwordForAccount:(id)account forServiceName:(id)name;
+ (void)setPassword:(id)password forAccount:(id)account forAuthID:(id)id forServiceName:(id)name;
+ (void)removePasswordForAccount:(id)account forServiceName:(id)name;
+ (id)temporaryPasswordForAccount:(id)account forAuthID:(id)id forServiceName:(id)name;
+ (void)setTemporaryPassword:(id)password forAccount:(id)account forAuthID:(id)id forServiceName:(id)name;
+ (void)removeTemporaryPasswordForAccount:(id)account forServiceName:(id)name;
+ (id)_groupSummaryFromGroupList:(id)list;
+ (id)nameOfLoginStatus:(unsigned long long)status;
+ (id)arrayOfAllIMHandles;
+ (id)allBuddyListIMHandles;

/* instance methods */
- (void)dealloc;
- (void)clearServiceCaches;
- (id)initWithService:(id)service;
- (id)initWithUniqueID:(id)id service:(id)service;
- (void)loginIfActiveRegistered;
- (void)_loginWithAutoLogin:(BOOL)login;
- (void)autoLoginAccount;
- (void)loginAccount;
- (void)logoutAccount;
- (void)loginStatusChanged:(unsigned int)changed message:(id)message reason:(int)reason properties:(id)properties;
- (void)_updateLogin:(id)login;
- (void)_updateMyStatus:(unsigned long long)status message:(id)message;
- (void)setCurrentAccountStatus:(id)status;
- (id)canonicalFormOfID:(id)id;
- (id)canonicalFormOfID:(id)id countryCode:(id)code;
- (BOOL)equalID:(id)id andID:(id)id;
- (void)writeSettings;
- (void)resetToDefaults;
- (BOOL)emailAddressIsID:(id)id;
- (long long)compareLoginStatus:(id)status;
- (long long)compareAccountNames:(id)names;
- (long long)compareStatus:(id)status;
- (long long)compareIDs:(id)ids;
- (long long)compareServices:(id)services;
- (BOOL)hasCapability:(unsigned long long)capability;
- (void)updateCapabilities:(unsigned long long)capabilities;
- (void)removePassword;
- (void)removeTemporaryPassword;
- (BOOL)isInvisible;
- (id)description;
- (id)_serverWithSSL:(BOOL)ssl;
- (void)requestProperty:(id)property ofIMHandle:(id)imhandle;
- (void)setValue:(id)value ofExtraProperty:(id)property ofIMHandle:(id)imhandle;
- (void)_loadFromDictionary:(id)dictionary force:(BOOL)force;
- (void)loadFromDictionary:(id)dictionary;
- (void)setCachedBlockIdleStatus:(BOOL)status;
- (void)blockMessages:(BOOL)messages fromID:(id)id;
- (void)clearTargetState;
- (void)targetGroupStateTimeout;
- (void)setWaitForTargetState;
- (void)updateWithTargetGroups;
- (void)setTargetGroupsState:(id)state;
- (void)_applyChangesToTemporaryCache:(id)cache;
- (void)beginChanges;
- (void)hookupToDaemon;
- (void)requestGroups;
- (void)_markHasSyncedWithRemoteBuddies;
- (void)syncWithRemoteBuddies;
- (void)_ensureGroupsExists:(id)exists;
- (BOOL)addPeople:(id)people toGroups:(id)groups atLocation:(long long)location;
- (BOOL)removePeople:(id)people fromGroups:(id)groups;
- (BOOL)addIMHandle:(id)imhandle toGroups:(id)groups atLocation:(long long)location;
- (BOOL)removeIMHandle:(id)imhandle fromGroups:(id)groups;
- (void)addBuddyToBuddyList:(id)list;
- (void)changeBuddyList:(id)list add:(BOOL)add groups:(id)groups atLocation:(long long)location;
- (void)renameGroup:(id)group to:(id)to;
- (void)reorderGroup:(id)group order:(id)order;
- (void)reorderGroups:(id)groups;
- (id)propertiesForGroup:(id)group;
- (id)groupMembers:(id)members;
- (id)memberGroups:(id)groups;
- (void)endChanges;
- (void)holdBuddyUpdates;
- (void)_resumeBuddyUpdatesNow;
- (void)resumeBuddyUpdates;
- (void)buddyPropertiesChanged:(id)changed;
- (void)buddyPictureChanged:(id)changed imageData:(id)data imageHash:(id)hash;
- (void)setBuddyProperties:(id)properties buddyPictures:(id)pictures;
- (void)_registrationStatusChanged:(id)changed;
- (void)_serviceDidConnect:(id)connect;
- (void)_serviceDidReconnect:(id)reconnect;
- (void)_serviceDidDisconnect:(id)disconnect;
- (void)accountWillBeRemoved;
- (void)accountDidBecomeActive;
- (void)accountDidDeactivate;
- (void)_updateRegistrationStatus:(int)status error:(int)error info:(id)info;
- (BOOL)registerAccount;
- (BOOL)unregisterAccount;
- (void)_notJustLoggedIn;
- (void)setIMAccountLoginStatus:(unsigned long long)status;
- (void)setIMAccountLoginStatus:(unsigned long long)status errorMessage:(id)message;
- (void)setIMAccountLoginStatus:(unsigned long long)status errorMessage:(id)message reason:(int)reason;
- (void)_syncWithRemoteBuddies;
- (void)groupsChanged:(id)changed error:(id)error;
- (long long)compareNames:(id)names;
- (id)recalculatedSubtypeInfo;
- (void)_clearImageCache;
- (void)recalculateSubtypeInfo;
- (Class)imHandleClass;
- (id)imHandleWithInfo:(id)info;
- (id)existingIMHandleWithInfo:(id)info;
- (id)imHandleWithInfo:(id)info alreadyCanonical:(BOOL)canonical;
- (id)existingIMHandleWithInfo:(id)info alreadyCanonical:(BOOL)canonical;
- (id)existingIMHandleWithID:(id)id alreadyCanonical:(BOOL)canonical;
- (id)existingIMHandleWithID:(id)id;
- (id)imHandleWithID:(id)id alreadyCanonical:(BOOL)canonical;
- (id)_imHandleWithID:(id)id alreadyCanonical:(BOOL)canonical originalID:(id)id countryCode:(id)code;
- (id)imHandleWithID:(id)id countryCode:(id)code;
- (id)existingIMHandleWithID:(id)id countryCode:(id)code;
- (id)imHandleWithID:(id)id;
- (unsigned long long)sortOrderForIMHandle:(id)imhandle inGroup:(id)group;
- (void)setBuddyListAuthorization:(BOOL)authorization forIMHandle:(id)imhandle;
- (void)requestBuddyListAuthorizationFromIMHandle:(id)imhandle;
- (id)handlesForCNContact:(id)cncontact;
- (void)_watchBuddiesIfNecessary;
- (void)watchBuddiesIfNecessary;
- (void)startWatchingIMHandle:(id)imhandle;
- (void)stopWatchingIMHandle:(id)imhandle;
- (void)forgetAllWatches;
- (void)_refreshLoginIMHandle;
- (void)registerIMHandle:(id)imhandle;
- (void)unregisterIMHandleWithID:(id)id;
- (void)disconnectAllIMHandles;
- (void)imHandle:(id)handle buddyStatusChanged:(BOOL)changed;
- (void)handleSubscriptionRequestFrom:(id)from withMessage:(id)message;
- (void)nowLoggedIn;
- (void)nowLoggedOut;
- (id)chatIDForRoomName:(id)name;
- (id)defaultChatSuffix;
- (struct _FZChatRoomValidity { int x0; unsigned short x1; })validityOfChatRoomName:(id)name;
- (BOOL)requestNewAuthorizationCredentials;
- (BOOL)authenticateAccount;
- (void)enrollDeviceInSMSRelay:(id)smsrelay;
- (void)unEnrollDeviceInSMSRelay:(id)smsrelay;
- (void)enrollSelfDeviceInSMSRelay;
- (BOOL)updateAuthorizationCredentials:(id)credentials token:(id)token;
- (id)profileValueForKey:(id)key;
- (id)profileStringForKey:(id)key;
- (BOOL)removeProfileValueForKey:(id)key;
- (BOOL)setProfileValue:(id)value forKey:(id)key;
- (BOOL)setProfileString:(id)string forKey:(id)key;
- (BOOL)validateProfile;
- (long long)profileValidationStatus;
- (long long)profileValidationErrorReason;
- (void)_updateProfileInfo:(id)info;
- (id)_aliases;
- (BOOL)_aliasIsVisible:(id)visible;
- (id)_aliasInfoForAlias:(id)alias;
- (id)_statuses;
- (BOOL)isMakoAccount;
- (void)_invalidateCachedAliases;
- (BOOL)hasAlias:(id)alias;
- (BOOL)hasAlias:(id)alias type:(long long)type;
- (id)aliasesForType:(long long)type;
- (BOOL)addAlias:(id)alias;
- (BOOL)addAliases:(id)aliases;
- (BOOL)addAlias:(id)alias type:(long long)type;
- (BOOL)removeAlias:(id)alias;
- (BOOL)removeAliases:(id)aliases;
- (BOOL)removeAlias:(id)alias type:(long long)type;
- (long long)typeForAlias:(id)alias;
- (BOOL)unvalidateAlias:(id)alias;
- (BOOL)unvalidateAliases:(id)aliases;
- (BOOL)validateAlias:(id)alias;
- (BOOL)validateAliases:(id)aliases;
- (BOOL)validateAlias:(id)alias type:(long long)type;
- (long long)validationStatusForAlias:(id)alias;
- (long long)validationStatusForAlias:(id)alias type:(long long)type;
- (long long)validationErrorReasonForAlias:(id)alias;
- (long long)validationErrorReasonForAlias:(id)alias type:(long long)type;
- (id)objectForKey:(id)key;
- (void)_setObject:(id)object forKey:(id)key;
- (void)_setLocalCachedObject:(id)object forKey:(id)key;
- (void)setObject:(id)object forKey:(id)key;
- (void)removeObjectForKey:(id)key;
- (void)_removeObjectForKey:(id)key;
- (void)setDictionaryData:(id)data forKey:(id)key;
- (void)_setDictionaryData:(id)data forKey:(id)key;
- (id)dictionaryDataForKey:(id)key;
- (id)stringForKey:(id)key;
- (void)setString:(id)string forKey:(id)key;
- (void)_setString:(id)string forKey:(id)key;
- (BOOL)boolForKey:(id)key;
- (void)setBool:(BOOL)bool forKey:(id)key;
- (void)_setBool:(BOOL)bool forKey:(id)key;
- (long long)integerForKey:(id)key;
- (void)setInteger:(long long)integer forKey:(id)key;
- (void)_setInteger:(long long)integer forKey:(id)key;
- (void)systemDidWake;
- (void)systemWillSleep;
- (id)_persistentPropertyForKey:(id)key;
- (void)_setPersistentPropertyObject:(id)object forKey:(id)key;
- (void)_removePersistentPropertyForKey:(id)key;
- (id)objectForPreferenceKey:(id)key;
- (void)setObject:(id)object forPreferenceKey:(id)key;
- (void)removeObjectForPreferenceKey:(id)key;
- (void)setDictionaryData:(id)data forPreferenceKey:(id)key;
- (id)dictionaryDataForPreferenceKey:(id)key;
- (id)stringForPreferenceKey:(id)key;
- (void)setString:(id)string forPreferenceKey:(id)key;
- (BOOL)boolForPreferenceKey:(id)key;
- (void)setBool:(BOOL)bool forPreferenceKey:(id)key;
- (int)integerForPreferenceKey:(id)key;
- (void)setInteger:(int)integer forPreferenceKey:(id)key;
- (BOOL)_updateDisplayName:(id)name;
- (void)registerAsIDSIDQueryControllerDelegate;
- (void)deregisterAsIDSIDQueryControllerDelegate;
- (void)idStatusUpdatedForDestinations:(id)destinations service:(id)service;
- (void)idsKTVerifierResultsUpdatedForDestinations:(id)destinations service:(id)service;
@end

#endif /* IMAccount_h */
