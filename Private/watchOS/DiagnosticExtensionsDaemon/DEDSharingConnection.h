//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 170.2.3.0.0
//
#ifndef DEDSharingConnection_h
#define DEDSharingConnection_h
@import Foundation;

#include "DEDSharingInbound.h"
#include "DEDSharingInboundDelegate-Protocol.h"

@class NSMutableDictionary, NSMutableSet, SFDeviceDiscovery, SFService;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface DEDSharingConnection : NSObject

@property (retain) DEDSharingInbound *sharingInbound;
@property (weak) NSObject<DEDSharingInboundDelegate> *controller;
@property BOOL listenForClients;
@property BOOL started;
@property (retain) NSMutableDictionary *pongingDevices;
@property (retain) NSMutableDictionary *deviceSessions;
@property (retain) NSMutableDictionary *discoveredDevices;
@property (retain) NSObject<OS_dispatch_queue> *run_queue;
@property (retain) NSObject<OS_dispatch_semaphore> *bluetoothSessionSemaphore;
@property (retain, nonatomic) SFService *pingService;
@property (retain, nonatomic) SFDeviceDiscovery *pingDiscovery;
@property (retain) NSMutableSet *visiblePingUUIDs;
@property (retain, nonatomic) SFService *workerService;
@property (retain, nonatomic) SFDeviceDiscovery *pongDiscovery;
@property (copy) id /* block */ deviceStatusCallback;

/* class methods */
+ (void)checkIn;

/* instance methods */
- (id)initWithController:(id)controller;
- (void)dealloc;
- (void)configureSharingInbound:(id)inbound;
- (void)configureListenForClients:(BOOL)clients;
- (void)start;
- (void)setDeviceDiscoveryCallback:(id /* block */)callback;
- (void)discoverDevicesFromInbound:(id)inbound withCompletion:(id /* block */)completion;
- (void)stopDiscovery;
- (void)startPingServiceWithCompletion:(id /* block */)completion;
- (void)stopPingService;
- (void)updatePongAdvertisement;
- (void)startPongAdvertisement;
- (void)stopPongAdvertisement;
- (void)startWorkerService;
- (void)startPingDiscovery;
- (void)_handleIncomingPingingDevice:(id)device;
- (void)stopPingDiscovery;
- (void)startPongDiscoveryFromInbound:(id)inbound;
- (void)_handleIncomingPongingDevice:(id)device fromInbound:(id)inbound;
- (void)stopPongDiscovery;
- (void)trySessionWithFoundDevice:(id)device fromInbound:(id)inbound;
- (void)getSystemInfoForDevice:(id)device;
- (void)checkReadinessForSFDevice:(id)sfdevice session:(id)session;
- (void)sharing_startPairSetupForDevice:(id)device fromInbound:(id)inbound;
- (void)sharing_tryPIN:(id)pin forDevice:(id)device fromInbound:(id)inbound;
- (id)sharingOutboundForBugSessionIdentifier:(id)identifier device:(id)device fromInbound:(id)inbound;
- (void)sharing_startBugSessionWithIdentifier:(id)identifier configuration:(id)configuration caller:(id)caller target:(id)target fromInbound:(id)inbound;
- (void)sharing_didStartBugSessionWithInfo:(id)info forCaller:(id)caller;
- (void)updateControllerWithDevice:(id)device andStatus:(long long)status;
- (void)_saveDevice:(id)device;
- (void)_configureService:(id)service withLabel:(id)label needsSetup:(BOOL)setup actionType:(unsigned char)type completion:(id /* block */)completion;
- (id)_existingSharingSessionForDevice:(id)device;
- (id)blockingSharingSessionForDevice:(id)device fromInbound:(id)inbound;
- (void)createSharingSessionForSFDevice:(id)sfdevice holdForPIN:(BOOL)pin fromInbound:(id)inbound completion:(id /* block */)completion;
- (void)_verifyPairingForSession:(id)session holdForPIN:(BOOL)pin completion:(id /* block */)completion;
- (void)stopSession:(id)session;
- (void)addIncomingSFSession:(id)sfsession forIdentifier:(id)identifier;
@end

#endif /* DEDSharingConnection_h */
