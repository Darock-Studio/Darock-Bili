//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 139.203.0.0.0
//
#ifndef RTITextOperations_h
#define RTITextOperations_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "RTICustomDataProtocol-Protocol.h"
#include "RTIInputSourceState.h"
#include "RTIStyledIntermediateText.h"

@class NSArray, NSAttributedString, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSUUID, TIKeyboardIntermediateText, TIKeyboardOutput;

@interface RTITextOperations : NSObject<NSSecureCoding, RTICustomDataProtocol>

@property (retain, nonatomic) NSDictionary *attributedPlaceholders;
@property (readonly, nonatomic) NSMutableDictionary *mutableAttributedPlaceholders;
@property (retain, nonatomic) NSMutableArray *fileHandles;
@property (retain, nonatomic) NSMutableArray *typeIdentifiers;
@property (retain, nonatomic) NSMutableArray *imageUserInfos;
@property (readonly, nonatomic) TIKeyboardOutput *keyboardOutput;
@property (retain, nonatomic) TIKeyboardIntermediateText *intermediateText;
@property (retain, nonatomic) RTIStyledIntermediateText *styledIntermediateText;
@property (copy, nonatomic) NSString *textToAssert;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } selectionRangeToAssert;
@property (nonatomic) SEL editingActionSelector;
@property (retain, nonatomic) NSArray *multilingualLanguages;
@property (retain, nonatomic) RTIInputSourceState *inputSourceState;
@property (retain, nonatomic) NSString *customInfoType;
@property (retain, nonatomic) NSObject<NSSecureCoding> *customInfo;
@property (readonly, nonatomic) NSUUID *targetSessionUUID;
@property (nonatomic) BOOL isAutoFillTextOperation;
@property (nonatomic) BOOL isExplicitAutoFillInvocation;
@property (readonly, nonatomic) NSAttributedString *attributedInsertionText;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } textCheckingAnnotationRange;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } textCheckingReplacementRange;
@property (copy, nonatomic) NSAttributedString *textCheckingAnnotatedString;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } textCheckingAnnotationRemovalRange;
@property (copy, nonatomic) NSString *textCheckingAnnotationToRemove;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)customInfoDictionary;
+ (void)registerCustomInfoClasses:(id)classes forType:(id)type;
+ (void)unregisterCustomInfoType:(id)type;

/* instance methods */
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)init;
- (id)initWithTargetSessionUUID:(id)uuid;
- (BOOL)isEqual:(id)equal;
- (void)insertText:(id)text replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)_createAttributedPlaceholdersIfNecessary;
- (void)insertAttributedText:(id)text;
- (void)insertAttributedText:(id)text replacementRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)insertImageWithFileHandle:(id)handle typeIdentifier:(id)identifier;
- (void)insertImageWithFileHandle:(id)handle typeIdentifier:(id)identifier imageUserInfo:(id)info;
- (void)enumerateImagesUsingBlock:(id /* block */)block;
- (void)enumerateImagesAndUserInfosUsingBlock:(id /* block */)block;
@end

#endif /* RTITextOperations_h */
