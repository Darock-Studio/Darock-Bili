//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 730.8.0.0.0
//
#ifndef EasyConfigDevice_h
#define EasyConfigDevice_h
@import Foundation;

#include "NSCopying-Protocol.h"

@class NSDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface EasyConfigDevice : NSObject<NSCopying> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_internalQueue;
  NSObject<OS_dispatch_queue> *_userQueue;
  NSDictionary *_scanRecord;
  BOOL _started;
  int _firstErr;
  struct BonjourBrowser * _airplayBrowser;
  NSDictionary *_airplayBonjourInfo;
  struct BonjourBrowser * _raopBrowser;
  NSDictionary *_raopBonjourInfo;
  struct BonjourBrowser * _mfiConfigBrowser;
  NSDictionary *_mfiConfigBonjourInfo;
  struct BonjourBrowser * _hapBrowser;
  NSDictionary *_hapBonjourInfo;
  unsigned int _configSeed;
  struct HTTPClientPrivate * _httpClient;
  NSObject<OS_dispatch_source> *_timeoutTimer;
  int _state;
  double _securityStartTime;
  double _securityFinishTime;
  struct MFiSAP * _mfiSAP;
  struct PairingSessionPrivate * _pairingSession;
  id /* block */ _promptForSetupCodeBlock;
  NSDictionary *_configResponse;
  BOOL _supportsHAP;
  BOOL _supportsHAP2;
  BOOL _supportsMFi;
  BOOL _supportsPairSetup;
  BOOL _supportsTLV;
  BOOL _preConfigMetricsSet;
  struct { double startTime; unsigned char userChangedFriendlyName; unsigned char playPasswordSet; unsigned char adminPasswordSet; unsigned char destinationNetworkRecommendationUsed; double secondsToGetLinkUpOnSWAP; int wifiJoinSWAPError; unsigned char hitJoiningTargetSWAPTimeout; int rssiOfSWAP; unsigned int snrOfSWAP; unsigned int channelOfSWAP; } _preConfigMetrics;
  BOOL _postConfigMetricsSet;
  struct { double secondsToGetLinkUpOnDestination; int wifiJoinDestinationAPError; unsigned char destinationNetworkPSKInKeychain; unsigned char hitJoiningDestinationAPTimeout; int rssiOfDestinationAP; unsigned int snrOfDestinationAP; unsigned int channelOfDestinationAP; } _postConfigMetrics;
  double _configStartTime;
  double _findPreConfigStartTime;
  double _findPreConfigFoundTime;
  double _findPostConfigStartTime;
  double _findPostConfigFoundTime;
  double _applyConfigStartTime;
  double _applyConfigFinishTime;
  double _postConfigCheckStartTime;
  double _postConfigCheckFinishTime;
  NSDictionary *_deviceInfo;
  double _promptForSetupCodeTime;
  unsigned int _enterSetupCodeMs;
  BOOL _hasPairingDelegate;
  struct { void *context; undefined *showSetupCode_f; undefined *hideSetupCode_f; undefined *promptForSetupCode_f; undefined *copyIdentity_f; undefined *findPeer_f; undefined *savePeer_f; undefined *resumeRequest_f; undefined *resumeResponse_f; } _pairingDelegate;
}

@property (copy, nonatomic) NSDictionary *configuration;
@property (nonatomic) unsigned long long deviceIdentifier;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic) unsigned long long features;
@property (copy, nonatomic) NSString *model;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) id /* block */ progressHandler;
@property (nonatomic) unsigned int pairSetupFlags;
@property (nonatomic) unsigned int pairVerifyFlags;
@property (nonatomic) BOOL pausesAfterApply;
@property (nonatomic) BOOL skipPairSetup;

/* class methods */
+ (BOOL)supportedScanRecord:(id)record;
+ (id)deviceWithInfo:(id)info;
+ (id)deviceWithScanRecord:(id)record;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)updated:(id)updated;
- (BOOL)removed:(id)removed;
- (void)start;
- (void)_start;
- (void)stop;
- (void)_stop:(int)_stop;
- (void)resumePostConfig;
- (void)setPairingDelegate:(const void *)delegate;
- (void)setPreConfigMetrics:(const struct { double x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned char x4; double x5; int x6; unsigned char x7; int x8; unsigned int x9; unsigned int x10; } *)metrics;
- (void)setPostConfigMetrics:(const struct { double x0; int x1; unsigned char x2; unsigned char x3; int x4; unsigned int x5; unsigned int x6; } *)metrics;
- (void)setPromptForSetupCodeHandler:(id /* block */)handler;
- (void)trySetupCode:(id)code;
- (void)_trySetupCode:(id)code;
- (int)_findDevicePreConfigStart;
- (void)_findDevicePreConfigEvent:(unsigned int)event info:(id)info;
- (int)_configureStart:(id)start;
- (int)_mfiSAPStart;
- (int)_mfiSAPNext:(struct HTTPMessagePrivate { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct HTTPMessagePrivate * x1; struct { char x0[8192] unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; int x6; char * x7; unsigned long long x8; struct { char * x0; unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; char * x6; unsigned long long x7; char * x8; unsigned long long x9; char * x10; unsigned long long x11; char * x12; unsigned long long x13; char * x14; char * x15; char * x16; unsigned long long x17; char * x18; unsigned long long x19; } x9; char * x10; unsigned long long x11; int x12; char * x13; unsigned long long x14; unsigned char x15; unsigned long long x16; unsigned char x17; int x18; } x2; unsigned char x3; int x4; unsigned char x5; char * x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned char x10[1000] char * x11; struct  * x12; char * x13; unsigned long long x14; struct iovec { void * x150; unsigned long long x1; } x[2] struct iovec * x16; int x17; unsigned long long x18; int x19; int x20; int x21; void * x22; void * x23; void * x24; void * x25; void * x26; void * x27; undefined * x28; undefined * x29; id /* block */ x30; int x31; unsigned char x32; long long x33; char * x34; int x35; unsigned long long x36; unsigned int x37; } *)sapnext;
- (int)_pairSetupStart;
- (int)_pairSetupNext:(struct HTTPMessagePrivate { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct HTTPMessagePrivate * x1; struct { char x0[8192] unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; int x6; char * x7; unsigned long long x8; struct { char * x0; unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; char * x6; unsigned long long x7; char * x8; unsigned long long x9; char * x10; unsigned long long x11; char * x12; unsigned long long x13; char * x14; char * x15; char * x16; unsigned long long x17; char * x18; unsigned long long x19; } x9; char * x10; unsigned long long x11; int x12; char * x13; unsigned long long x14; unsigned char x15; unsigned long long x16; unsigned char x17; int x18; } x2; unsigned char x3; int x4; unsigned char x5; char * x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned char x10[1000] char * x11; struct  * x12; char * x13; unsigned long long x14; struct iovec { void * x150; unsigned long long x1; } x[2] struct iovec * x16; int x17; unsigned long long x18; int x19; int x20; int x21; void * x22; void * x23; void * x24; void * x25; void * x26; void * x27; undefined * x28; undefined * x29; id /* block */ x30; int x31; unsigned char x32; long long x33; char * x34; int x35; unsigned long long x36; unsigned int x37; } *)next;
- (int)_pairVerifyStart;
- (int)_pairVerifyNext:(struct HTTPMessagePrivate { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct HTTPMessagePrivate * x1; struct { char x0[8192] unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; int x6; char * x7; unsigned long long x8; struct { char * x0; unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; char * x6; unsigned long long x7; char * x8; unsigned long long x9; char * x10; unsigned long long x11; char * x12; unsigned long long x13; char * x14; char * x15; char * x16; unsigned long long x17; char * x18; unsigned long long x19; } x9; char * x10; unsigned long long x11; int x12; char * x13; unsigned long long x14; unsigned char x15; unsigned long long x16; unsigned char x17; int x18; } x2; unsigned char x3; int x4; unsigned char x5; char * x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned char x10[1000] char * x11; struct  * x12; char * x13; unsigned long long x14; struct iovec { void * x150; unsigned long long x1; } x[2] struct iovec * x16; int x17; unsigned long long x18; int x19; int x20; int x21; void * x22; void * x23; void * x24; void * x25; void * x26; void * x27; undefined * x28; undefined * x29; id /* block */ x30; int x31; unsigned char x32; long long x33; char * x34; int x35; unsigned long long x36; unsigned int x37; } *)next;
- (int)_applyConfigStart;
- (void)_applyConfigCompletion:(struct HTTPMessagePrivate { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct HTTPMessagePrivate * x1; struct { char x0[8192] unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; int x6; char * x7; unsigned long long x8; struct { char * x0; unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; char * x6; unsigned long long x7; char * x8; unsigned long long x9; char * x10; unsigned long long x11; char * x12; unsigned long long x13; char * x14; char * x15; char * x16; unsigned long long x17; char * x18; unsigned long long x19; } x9; char * x10; unsigned long long x11; int x12; char * x13; unsigned long long x14; unsigned char x15; unsigned long long x16; unsigned char x17; int x18; } x2; unsigned char x3; int x4; unsigned char x5; char * x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned char x10[1000] char * x11; struct  * x12; char * x13; unsigned long long x14; struct iovec { void * x150; unsigned long long x1; } x[2] struct iovec * x16; int x17; unsigned long long x18; int x19; int x20; int x21; void * x22; void * x23; void * x24; void * x25; void * x26; void * x27; undefined * x28; undefined * x29; id /* block */ x30; int x31; unsigned char x32; long long x33; char * x34; int x35; unsigned long long x36; unsigned int x37; } *)completion;
- (int)_findDevicePostConfigStart;
- (void)_findDevicePostConfigEvent:(unsigned int)event info:(id)info;
- (void)_postConfigCheckStart:(id)start;
- (void)_postConfigCheckCompletion:(struct HTTPMessagePrivate { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct HTTPMessagePrivate * x1; struct { char x0[8192] unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; int x6; char * x7; unsigned long long x8; struct { char * x0; unsigned long long x1; char * x2; unsigned long long x3; char * x4; unsigned long long x5; char * x6; unsigned long long x7; char * x8; unsigned long long x9; char * x10; unsigned long long x11; char * x12; unsigned long long x13; char * x14; char * x15; char * x16; unsigned long long x17; char * x18; unsigned long long x19; } x9; char * x10; unsigned long long x11; int x12; char * x13; unsigned long long x14; unsigned char x15; unsigned long long x16; unsigned char x17; int x18; } x2; unsigned char x3; int x4; unsigned char x5; char * x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned char x10[1000] char * x11; struct  * x12; char * x13; unsigned long long x14; struct iovec { void * x150; unsigned long long x1; } x[2] struct iovec * x16; int x17; unsigned long long x18; int x19; int x20; int x21; void * x22; void * x23; void * x24; void * x25; void * x26; void * x27; undefined * x28; undefined * x29; id /* block */ x30; int x31; unsigned char x32; long long x33; char * x34; int x35; unsigned long long x36; unsigned int x37; } *)completion;
- (void)_handleError:(int)error;
- (void)_logEnded;
- (void)_postNote:(id)note info:(id)info;
- (void)_postProgress:(int)progress info:(id)info;
- (void)_postProgress:(int)progress withResponse:(id)response;
- (int)_setupClient:(id)client;
- (int)_startBonjourWithTimeout:(int)timeout handler:(id /* block */)handler;
- (int)_timeoutTimerStart:(int)start block:(id /* block */)block;
@end

#endif /* EasyConfigDevice_h */
