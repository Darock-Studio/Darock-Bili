//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.8.1.0.0
//
#ifndef MarrsSiriNLUTypesConverter_h
#define MarrsSiriNLUTypesConverter_h
@import Foundation;

@interface MarrsSiriNLUTypesConverter : NSObject
/* class methods */
+ (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })NSString2StdString:(id)string;
+ (struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; })NSMutableArrayNSString2StdVectorStdString:(id)string;
+ (id)stdString2NSString:(struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })nsstring;
+ (id)StdVectorStdString2NSMutableArrayNSString:(struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; })nsstring;
+ (int)fromPluginRepetitionType:(int)type;
+ (int)fromPluginRewriteType:(int)type;
+ (struct Uuid { unsigned long long x0; unsigned long long x1; })toPluginUuid:(id)uuid;
+ (id)fromPluginUuid:(struct Uuid { unsigned long long x0; unsigned long long x1; })uuid;
+ (struct QRToken { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; } x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; double x7; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x8; BOOL x9; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x10; })toPluginToken:(id)token;
+ (struct QRToken { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; } x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; double x7; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x8; BOOL x9; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x10; })internalTokentoPluginToken:(id)token;
+ (id)fromPluginToken:(struct QRToken { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; } x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; double x7; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x8; BOOL x9; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x10; })token;
+ (id)internalTokenfromPluginToken:(struct QRToken { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; } x2; BOOL x3; BOOL x4; unsigned long long x5; unsigned long long x6; double x7; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x8; BOOL x9; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x10; })token;
+ (struct QRUtterance { struct Uuid { unsigned long long x0; unsigned long long x1; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; struct QRToken * x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; } x2; } x2; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; struct QRToken * x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; } x2; } x3; double x4; })toPluginUtterance:(id)utterance;
+ (id)fromPluginUtterance:(struct QRUtterance { struct Uuid { unsigned long long x0; unsigned long long x1; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; struct QRToken * x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; } x2; } x2; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; struct QRToken * x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; } x2; } x3; double x4; })utterance;
+ (struct QRInteraction { struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance * x0; struct QRUtterance * x1; struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance * x0; } x2; } x0; struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance * x0; struct QRUtterance * x1; struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance * x0; } x2; } x1; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; struct QRToken * x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; } x2; } x2; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x3; BOOL x4; unsigned long long x5; })toPluginInteraction:(id)interaction;
+ (id)fromPluginInteraction:(struct QRInteraction { struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance * x0; struct QRUtterance * x1; struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance * x0; } x2; } x0; struct vector<marrs::qr::orchestration::QRUtterance, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance * x0; struct QRUtterance * x1; struct __compressed_pair<marrs::qr::orchestration::QRUtterance *, std::allocator<marrs::qr::orchestration::QRUtterance>> { struct QRUtterance * x0; } x2; } x1; struct vector<marrs::qr::orchestration::QRToken, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; struct QRToken * x1; struct __compressed_pair<marrs::qr::orchestration::QRToken *, std::allocator<marrs::qr::orchestration::QRToken>> { struct QRToken * x0; } x2; } x2; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x3; BOOL x4; unsigned long long x5; })interaction;
+ (id)fromPluginHypothesis:(struct QRHypothesis { struct Uuid { unsigned long long x0; unsigned long long x1; } x0; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x1; double x2; int x3; })hypothesis;
+ (int)toPluginRequester:(int)requester;
+ (struct unique_ptr<marrs::qr::orchestration::QRRequest, std::default_delete<marrs::qr::orchestration::QRRequest>> { struct __compressed_pair<marrs::qr::orchestration::QRRequest *, std::default_delete<marrs::qr::orchestration::QRRequest>> { struct QRRequest * x0; } x0; })toPluginRequestPtr:(id)ptr;
+ (struct QRRequest { int x0; struct vector<marrs::qr::orchestration::QRInteraction, std::allocator<marrs::qr::orchestration::QRInteraction>> { struct QRInteraction * x0; struct QRInteraction * x1; struct __compressed_pair<marrs::qr::orchestration::QRInteraction *, std::allocator<marrs::qr::orchestration::QRInteraction>> { struct QRInteraction * x0; } x2; } x1; })toPluginRequestObj:(id)obj;
+ (id)fromPluginResponsePtr:(const void *)ptr;
+ (id)fromPluginResponseObj:(const void *)obj;
@end

#endif /* MarrsSiriNLUTypesConverter_h */
