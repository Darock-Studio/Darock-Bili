//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1450.2.4.0.0
//
#ifndef ISURLOperation_h
#define ISURLOperation_h
@import Foundation;

#include "ISOperation.h"
#include "ISDataProvider.h"
#include "ISURLOperationDelegate-Protocol.h"
#include "ISURLRequestPerformance.h"
#include "SSURLSessionManagerDelegate-Protocol.h"

@class NSArray, NSCountedSet, NSData, NSMutableData, NSNumber, NSString, NSURLCache, NSURLRequest, NSURLResponse, NSURLSessionTask, SSAuthenticationContext, SSBag, SSHTTPArchive, SSMutableURLRequestProperties, SSURLRequestProperties, SSURLSessionManager;
@protocol OS_dispatch_queue;

@interface ISURLOperation : ISOperation<SSURLSessionManagerDelegate> {
  /* instance variables */
  NSMutableData *_dataBuffer;
  long long _networkRetryCount;
  NSCountedSet *_redirectURLs;
  SSURLSessionManager *_urlSessionManager;
  NSURLSessionTask *_urlSessionTask;
  BOOL _usesPrivateCookieStore;
  NSObject<OS_dispatch_queue> *_dataBufferAccessQueue;
  SSHTTPArchive *_httpArchive;
  BOOL _loadsHTTPFailures;
}

@property (retain, nonatomic) NSNumber *_accountDSIDOverride;
@property (retain) NSURLRequest *_activeURLRequest;
@property BOOL _loadsHTTPFailures;
@property BOOL _usesPrivateCookieStore;
@property (retain) NSURLResponse *response;
@property (readonly) SSHTTPArchive *HTTPArchive;
@property (readonly) ISURLRequestPerformance *performanceMetrics;
@property BOOL _shouldSetCookies;
@property BOOL tracksPerformanceMetrics;
@property (nonatomic) BOOL uploadProgressRequested;
@property (readonly, copy) NSURLRequest *activeURLRequest;
@property (weak, @dynamic) NSObject<ISURLOperationDelegate> *delegate;
@property (retain) ISDataProvider *dataProvider;
@property (retain) SSAuthenticationContext *authenticationContext;
@property (retain) NSString *logKey;
@property (retain, nonatomic) NSArray *passThroughErrors;
@property (copy) SSURLRequestProperties *requestProperties;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSessionDuration;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSamplingPercentage;
@property (readonly, nonatomic) NSNumber *metricsLoadURLSamplingPercentageCachedResponses;
@property (readonly, nonatomic) SSBag *bag;
@property (readonly, nonatomic) BOOL isURLBagRequest;
@property (readonly, nonatomic) NSData *rawResponseData;
@property (readonly, nonatomic) BOOL shouldDisableCellular;
@property (readonly, nonatomic) BOOL shouldRequireCellular;
@property (readonly, nonatomic) BOOL shouldSetCookies;
@property (readonly, nonatomic) NSData *sourceAppAuditTokenData;
@property (readonly, nonatomic) NSString *sourceAppBundleID;
@property (readonly, nonatomic) NSURLCache *URLCache;
@property (readonly, nonatomic) NSString *URLCacheID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)copyUserAgent;
+ (struct _CFURLCache *)sharedCFURLCache;
+ (struct __CFURLStorageSession *)_sharedCacheStorageSession;

/* instance methods */
- (id)init;
- (id)initWithSessionManager:(id)manager;
- (void)dealloc;
- (id)request;
- (void)setRequest:(id)request;
- (void)run;
- (BOOL)handleRedirectFromDataProvider:(id)provider error:(id *)error;
- (void)handleResponse:(id)response;
- (id)newRequestWithURL:(id)url;
- (BOOL)shouldFollowRedirectWithRequest:(id)request returningError:(id *)error;
- (id)URLSession:(id)urlsession task:(id)task decodedDataForResponseData:(id)data;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithEvent:(id)event error:(id)error;
- (void)URLSession:(id)urlsession task:(id)task didFinishCreatingHTTPArchive:(id)httparchive;
- (void)URLSession:(id)urlsession task:(id)task didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession task:(id)task didSendBodyData:(long long)data totalBytesSent:(long long)sent totalBytesExpectedToSend:(long long)send;
- (void)URLSession:(id)urlsession task:(id)task needNewBodyStream:(id /* block */)stream;
- (void)URLSession:(id)urlsession task:(id)task willPerformHTTPRedirection:(id)httpredirection newRequest:(id)request completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (id)_accountIdentifier;
- (id)_copyAuthenticationContext;
- (BOOL)_processResponseData:(id)data error:(id *)error;
- (id)_requestProperties;
- (id)_sanitizedDescriptionForObject:(id)object;
- (id)_sanitizedStringForString:(id)string;
- (id)_sanitizedURLForURL:(id)url;
- (void)_willSendRequest:(id)request;
- (void)_handleFinishedLoading;
- (void)_handleReceivedData:(id)data;
- (void)_handleReceivedResponse:(id)response;
- (id)_handleRedirectRequest:(id)request response:(id)response;
- (id)_activeURL;
- (id)_copyConnectionPropertiesWithDataConnectionServiceType:(struct __CFString *)type;
- (id)_copyQueryStringDictionaryForRedirect:(id)redirect;
- (id)_decodedDataForData:(id)data;
- (long long)_defaultAuthChallengeDispositionForChallenge:(id)challenge;
- (id)_errorWithDefaultStringsForError:(id)error;
- (id)_errorWithDomain:(id)domain code:(long long)code;
- (BOOL)_isExternalURL:(id)url;
- (BOOL)_isPassThroughStatus:(long long)status;
- (void)_logRequest:(id)request;
- (void)_logResponseBody:(id)body;
- (void)_performDefaultHandlingForAuthenticationChallenge:(id)challenge;
- (void)_retry;
- (void)_run;
- (BOOL)_runRequestWithURL:(id)url dataConnectionServiceType:(struct __CFString *)type;
- (void)_sendContentLengthToDelegate:(long long)delegate;
- (void)_sendOutputToDelegate:(id)delegate;
- (void)_sendRequestToDelegate:(id)delegate;
- (void)_sendResponseToDelegate:(id)delegate;
- (void)_setActiveURLRequest:(id)urlrequest;
- (BOOL)_shouldFollowRedirectWithRequest:(id)request error:(id *)error;
- (void)_stopConnection;
- (void)_stopIfCancelled;
- (id)_stringForCachePolicy:(unsigned long long)policy;
- (void)_updateProgress;
- (BOOL)_validateContentLength:(long long)length error:(id *)error;
- (void)_setLoadsHTTPFailures:(BOOL)httpfailures;
- (void)_setShouldSetCookies:(BOOL)cookies;
- (void)_setUsesPrivateCookieStore:(BOOL)store;
- (BOOL)isUploadProgressRequested;
- (void)_setAccountDSIDOverride:(id)dsidoverride;
@end

#endif /* ISURLOperation_h */
