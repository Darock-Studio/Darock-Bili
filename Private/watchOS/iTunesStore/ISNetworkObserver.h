//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1450.2.4.0.0
//
#ifndef ISNetworkObserver_h
#define ISNetworkObserver_h
@import Foundation;

#include "CSLSConnectionStatusObserver-Protocol.h"
#include "SSDownloadQueueObserver-Protocol.h"

@class NSMutableSet, NSString, NWPath, NWPathEvaluator;
@protocol OS_dispatch_queue;

@interface ISNetworkObserver : NSObject<CSLSConnectionStatusObserver, SSDownloadQueueObserver> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_dispatchQueue;
  BOOL _isCellularRestricted;
  long long _networkUsageCount;
  NSObject<OS_dispatch_queue> *_notificationQueue;
  NSMutableSet *_observedDownloadQueues;
  struct __SCNetworkReachability * _reachability;
  struct __CTServerConnection * _telephonyServer;
}

@property (retain, nonatomic) NWPathEvaluator *pathEvaluator;
@property (retain, nonatomic) NWPath *path;
@property (readonly) NSString *connectionTypeHeader;
@property long long networkType;
@property (readonly) BOOL wifiEnabled;
@property (readonly) NSString *dataStatusIndicator;
@property (readonly) NSString *mobileSubscriberCountryCode;
@property (readonly) NSString *mobileSubscriberNetworkCode;
@property (readonly) NSString *modemRegistrationStatus;
@property (readonly) NSString *operatorName;
@property (readonly) NSString *phoneNumber;
@property (readonly) NSString *providerName;
@property (readonly) unsigned int networkReachabilityFlags;
@property (readonly) double lastNetworkTypeChangeTime;
@property (readonly) BOOL usingNetwork;
@property (readonly) BOOL shouldShowCellularAutomaticDownloadsSwitch;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (BOOL)isLikelyToReachRemoteServerWithReachabilityFlags:(unsigned int)flags;
+ (void)set3GEnabled:(BOOL)genabled;
+ (void)setAirplaneModeEnabled:(BOOL)enabled;
+ (void)setWiFiEnabled:(BOOL)enabled;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)beginObservingDownloadQueue:(id)queue;
- (void)beginUsingNetwork;
- (id)copyValueForCarrierBundleKey:(id)key;
- (void)endObservingDownloadQueue:(id)queue;
- (void)endUsingNetwork;
- (BOOL)isUsingNetwork;
- (BOOL)isWiFiEnabled;
- (void)reloadNetworkType;
- (void)downloadQueue:(id)queue changedWithRemovals:(id)removals;
- (void)downloadQueueNetworkUsageChanged:(id)changed;
- (void)connectionStatusDidChange:(unsigned long long)change;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)_applicationForegroundNotification:(id)notification;
- (void)_telephonyOperatorNameDidChangeNotification:(id)notification;
- (void)_telephonyRegistrationDidChangeNotification:(id)notification;
- (void)_handleTelephonyNotificationWithName:(struct __CFString *)name userInfo:(struct __CFDictionary *)info;
- (void)_copyConnectionDataStatus:(id /* block */)status;
- (unsigned int)_currentNetworkReachabilityFlags;
- (id)_dataStatusIndicator;
- (BOOL)_isWatchReachable;
- (long long)_networkTypeFromDataIndicator:(id)indicator;
- (long long)_networkTypeForReachabilityFlags:(unsigned int)flags;
- (BOOL)_ntsIsUsingNetwork;
- (void)_postReachabilityFlagsChangedNotificationFromValue:(unsigned int)value toValue:(unsigned int)value;
- (void)_postTypeChangedNotificationFromValue:(long long)value toValue:(long long)value;
- (void)_postUsageChangedToValue:(BOOL)value;
- (void)_reloadCellularRestriction;
- (void)_reloadDataStatusIndicator;
- (void)_reloadNetworkType;
- (void)_reloadNetworkTypeWithReachabilityFlags:(unsigned int)flags;
- (long long)_setNetworkType:(long long)type;
@end

#endif /* ISNetworkObserver_h */
