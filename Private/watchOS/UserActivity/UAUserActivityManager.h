//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 567.0.0.0.0
//
#ifndef UAUserActivityManager_h
#define UAUserActivityManager_h
@import Foundation;

#include "UAUserActivityClientResponseProtocol-Protocol.h"

@class NSMapTable, NSMutableSet, NSSet, NSString, NSUUID, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface UAUserActivityManager : NSObject<UAUserActivityClientResponseProtocol> {
  /* instance variables */
  BOOL _connectionInitializationSucceeded;
  int _useractivitydpid;
}

@property (readonly) NSObject<OS_dispatch_queue> *serverQ;
@property (copy) NSUUID *activeUserActivityUUID;
@property (retain) NSMapTable *userActivitiesByUUID;
@property (retain) NSMapTable *activeUserActivitiesByUUID;
@property (readonly, copy) NSSet *userActivityUUIDsSendToServer;
@property BOOL needToSendInitialMessage;
@property BOOL registeredForAppResignationMessages;
@property (readonly) NSXPCConnection *connection;
@property BOOL allowedToConnect;
@property (readonly) BOOL supportsActivityContinuation;
@property (readonly) BOOL activityContinuationIsEnabled;
@property (readonly, copy) NSObject<OS_dispatch_queue> *serialQueueForSendingActivitiesToServer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)shouldSupportActivityContinuation;
+ (BOOL)userActivityContinuationSupported;
+ (id)defaultManager;
+ (id)_determineMatchingApplicationBundleIdentfierWithOptionsForActivityType:(id)type dynamicType:(id)type kind:(unsigned long long)kind teamIdentifier:(id)identifier;

/* instance methods */
- (BOOL)initialServerHandshake:(BOOL)handshake;
- (id)init;
- (id)initWithConnection:(id)connection;
- (void)dealloc;
- (void)connectionInterrupted;
- (void)connectionInvalidated;
- (id)fetchUUID:(id)uuid intervalToWaitForDocumentSynchonization:(double)synchonization withCompletionHandler:(id /* block */)handler;
- (void)addUserActivity:(id)activity;
- (void)removeUserActivity:(id)activity;
- (void)addDynamicUserActivity:(id)activity matching:(id)matching;
- (void)removeDynamicUserActivity:(id)activity matching:(id)matching;
- (void)makeActive:(id)active;
- (void)makeInactive:(id)inactive;
- (BOOL)userActivityIsActive:(id)active;
- (id)userActivityForUUID:(id)uuid;
- (id)activeActivitiesByPriority;
- (void)askClientUserActivityToSave:(id)save;
- (void)askClientUserActivityToSave:(id)save completionHandler:(id /* block */)handler;
- (void)tellClientUserActivityItWasResumed:(id)resumed;
- (void)tellClientDebuggingEnabled:(BOOL)enabled logFileHandle:(id)handle;
- (void)didReceiveInputStreamWithUUID:(id)uuid inputStream:(id)stream outputStream:(id)stream;
- (id)encodeUserActivity:(id)activity;
- (id)createByDecodingUserActivity:(id)activity;
- (void)tellDaemonAboutNewLSUserActivity:(id)activity;
- (void)sendUserActivityInfoToLSUserActivityd:(id)activityd makeCurrent:(BOOL)current;
- (void)markUserActivityAsDirty:(id)dirty forceImmediate:(BOOL)immediate;
- (BOOL)currentUserActivityUUIDWithOptions:(id)options completionHandler:(id /* block */)handler;
- (BOOL)currentUserActivityProxiesWithOptions:(id)options predicate:(id)predicate completionHandler:(id /* block */)handler;
- (BOOL)determineIfUserActivityIsCurrent:(id)current completionHandler:(id /* block */)handler;
- (void)pinUserActivity:(id)activity withCompletionHandler:(id /* block */)handler;
- (BOOL)hasUserActivityWithUUID:(id)uuid;
- (id)activities;
- (void)sendToIndexerIfAppropriate:(id)appropriate force:(BOOL)force;
- (void)sendCurrentActivityToIndexer:(id)indexer;
- (void)registerForApplicationDeactivateIfNecessary;
- (void)unregisterForApplicationDeactivation;
- (BOOL)registerAsProxyForApplication:(int)application options:(id)options completionBlock:(id /* block */)block;
@end

#endif /* UAUserActivityManager_h */
