//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 11207.0.0.0.0
//
#ifndef CTCellularPlanManager_h
#define CTCellularPlanManager_h
@import Foundation;

#include "CTCellularPlanManagerDelegate.h"

@class NSXPCConnection;

@interface CTCellularPlanManager : NSObject {
  /* instance variables */
  struct dispatch_queue_s * _queue;
  NSXPCConnection *_connection;
  CTCellularPlanManagerDelegate *_delegate;
}

/* class methods */
+ (id)sharedManager;
+ (long long)calculateInstallConsentTextTypeFor:(id)for;

/* instance methods */
- (void)_reconnect;
- (void)_ensureConnected_sync;
- (void)_connect_sync;
- (id)init;
- (id)synchronousProxyWithErrorHandler:(id /* block */)handler;
- (void)ping;
- (void)shouldShowPlanSetup:(id /* block */)setup;
- (void)getSupportedFlowTypes:(id /* block */)types;
- (unsigned long long)getSupportedFlowTypes;
- (void)startProvisioningWithCompletion:(id /* block */)completion;
- (void)finishProvisioningWithCompletion:(id /* block */)completion;
- (void)enterSimSetupWithCompletion:(id /* block */)completion;
- (void)exitSimSetupWithCompletion:(id /* block */)completion;
- (void)addNewPlanWithCardData:(id)data confirmationCode:(id)code triggerType:(long long)type userConsent:(long long)consent completion:(id /* block */)completion;
- (void)addNewPlanWithFlowType:(unsigned long long)type completion:(id /* block */)completion;
- (void)addNewPlanWithAddress:(id)address matchingId:(id)id oid:(id)oid confirmationCode:(id)code triggerType:(long long)type userConsent:(long long)consent completion:(id /* block */)completion;
- (void)installPendingRemotePlan:(id)plan completion:(id /* block */)completion;
- (void)resumePlanProvisioning:(BOOL)provisioning userConsent:(long long)consent completion:(id /* block */)completion;
- (void)getIMEIPrefix:(id /* block */)imeiprefix;
- (void)setIMEIPrefix:(id)imeiprefix;
- (void)getSelectedEnv:(id /* block */)env;
- (void)setSelectedEnv:(long long)env;
- (void)getSelectedProxy:(id /* block */)proxy;
- (void)setSelectedProxy:(long long)proxy;
- (void)showUiIgnoringActivationFlags:(BOOL)flags;
- (void)mccMncOverride:(id /* block */)override;
- (void)setMcc:(long long)mcc andMnc:(long long)mnc;
- (void)latitudeLongitudeOverride:(id /* block */)override;
- (void)setLatitude:(id)latitude andLongitude:(id)longitude;
- (void)planItemsWithCompletion:(id /* block */)completion;
- (void)planItemsShouldUpdate:(BOOL)update completion:(id /* block */)completion;
- (id)planItemsShouldUpdate:(BOOL)update;
- (void)danglingPlanItemsShouldUpdate:(BOOL)update completion:(id /* block */)completion;
- (id)danglingPlanItemsShouldUpdate:(BOOL)update;
- (id)getPlansPendingTransfer:(id *)transfer;
- (id)getPlansPendingTransferForTestability:(id *)testability;
- (void)activatePlanPendingTransfer:(id)transfer completion:(id /* block */)completion;
- (id)cancelPlanActivation:(id)activation;
- (void)deletePlanPendingTransfer:(id)transfer completion:(id /* block */)completion;
- (void)resolveSimLabel:(id)label completion:(id /* block */)completion;
- (id)resolveSimLabel:(id)label;
- (void)remapSimLabel:(id)label to:(id)to completion:(id /* block */)completion;
- (id)remapSimLabel:(id)label to:(id)to;
- (void)carrierItemsShouldUpdate:(BOOL)update completion:(id /* block */)completion;
- (void)didSelectPlanItem:(id)item isEnable:(BOOL)enable completion:(id /* block */)completion;
- (id)didSelectPlanItem:(id)item isEnable:(BOOL)enable;
- (void)didSelectPlanForData:(id)data completion:(id /* block */)completion;
- (id)didSelectPlanForData:(id)data;
- (id)didEnablePlanItems:(id)items;
- (id)setLabelForPlan:(id)plan label:(id)label;
- (void)didSelectPlanForDefaultVoice:(id)voice completion:(id /* block */)completion;
- (id)didSelectPlanForDefaultVoice:(id)voice;
- (void)didSelectPlansForIMessage:(id)imessage completion:(id /* block */)completion;
- (void)didPurchasePlanWithIccid:(id)iccid downloadProfile:(BOOL)profile;
- (void)didDeletePlanItem:(id)item completion:(id /* block */)completion;
- (void)eraseAllPlans:(id /* block */)plans;
- (void)eraseAllRemotePlansWithCSN:(id)csn completion:(id /* block */)completion;
- (void)didPurchasePlanForCsn:(id)csn iccid:(id)iccid profileServer:(id)server state:(id)state;
- (void)didPurchasePlanForCarrier:(id)carrier mnc:(id)mnc gid1:(id)gid1 gid2:(id)gid2 state:(id)state;
- (void)didTransferPlanForCsn:(id)csn iccid:(id)iccid srcIccid:(id)iccid profileServer:(id)server state:(id)state;
- (void)setUserInPurchaseFlow:(BOOL)flow;
- (void)expirePlan;
- (void)isRemotePlanCapableWithContext:(id)context completion:(id /* block */)completion;
- (void)shouldShowAddNewRemotePlanWithContext:(id)context completion:(id /* block */)completion;
- (void)startRemoteProvisioningForCSN:(id)csn completion:(id /* block */)completion;
- (void)finishRemoteProvisioningForCSN:(id)csn completion:(id /* block */)completion;
- (void)manageAccountForRemotePlan:(id)plan completion:(id /* block */)completion;
- (void)addNewRemotePlan:(BOOL)plan withCSN:(id)csn withContext:(id)context userConsent:(long long)consent completion:(id /* block */)completion;
- (void)addNewRemotePlanWithCardData:(id)data confirmationCode:(id)code isPairing:(BOOL)pairing withCSN:(id)csn withContext:(id)context userConsent:(long long)consent completion:(id /* block */)completion;
- (void)addNewRemotePlanWithAddress:(id)address matchingId:(id)id oid:(id)oid confirmationCode:(id)code isPairing:(BOOL)pairing withCSN:(id)csn withContext:(id)context userConsent:(long long)consent completion:(id /* block */)completion;
- (void)remotePlanItemsWithCompletion:(id /* block */)completion;
- (void)remotePlanItemsWithUpdateFetch:(BOOL)fetch withCSN:(id)csn completion:(id /* block */)completion;
- (void)didSelectRemotePlanItem:(id)item completion:(id /* block */)completion;
- (void)didDeleteRemotePlanItem:(id)item completion:(id /* block */)completion;
- (void)fetchRemoteProfiles:(id)profiles;
- (void)getAutoPlanSelectionWithCompletion:(id /* block */)completion;
- (void)setAutoPlanSelection:(BOOL)selection;
- (void)getRoamingSignupOverrideWithCompletion:(id /* block */)completion;
- (void)setRoamingSignupOverride:(BOOL)override;
- (void)getSkipEligibilityCheck:(id /* block */)check;
- (void)setSkipEligibilityCheck:(BOOL)check;
- (void)selectRemoteProfile:(id)profile;
- (void)deleteRemoteProfile:(id)profile;
- (void)deleteAllRemoteProfiles;
- (void)getRemoteInfo:(id /* block */)info;
- (void)getPhoneAuthTokenWithMessage:(id)message completion:(id /* block */)completion;
- (void)didPurchaseRemotePlanForEid:(id)eid imei:(id)imei meid:(id)meid iccid:(id)iccid alternateSmdpFqdn:(id)fqdn completion:(id /* block */)completion;
- (void)didCancelRemotePlan;
- (void)pendingReleaseRemotePlan;
- (void)userSignupInitiatedOrFailed;
- (void)eraseAllRemotePlansWithCompletion:(id /* block */)completion;
- (id)getPredefinedLabels;
- (void)userDidProvideResponse:(long long)response confirmationCode:(id)code forPlan:(id)plan isRemote:(BOOL)remote completion:(id /* block */)completion;
- (void)userDidProvideConsentResponse:(long long)response forPlan:(id)plan isRemote:(BOOL)remote completion:(id /* block */)completion;
- (id)getSubscriptionContextUUIDforPlan:(id)plan;
- (id)getShortLabelsForLabels:(id)labels;
- (void)dealloc;
@end

#endif /* CTCellularPlanManager_h */
