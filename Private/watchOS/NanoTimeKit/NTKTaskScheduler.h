//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKTaskScheduler_h
#define NTKTaskScheduler_h
@import Foundation;

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface NTKTaskScheduler : NSObject {
  /* instance variables */
  NSMutableArray *_queuedTokens;
  NSMutableDictionary *_tasksByToken;
  NSMutableDictionary *_taskScheduleTimesByToken;
  unsigned long long _nextTokenCounter;
  long long _backlightStatus;
  BOOL _backlightIsOrWillBeOnAccordingToCSLPI;
  BOOL _havePowerAssertion;
  NSObject<OS_dispatch_queue> *_taskQueue;
  NSObject<OS_dispatch_queue> *_statusQueue;
  NSObject<OS_dispatch_queue> *_takePowerAssertionQueue;
  NSString *_taskSchedulerIdentifier;
}

@property double waitingPeriod;

/* instance methods */
- (id)init;
- (id)initWithQueue:(id)queue;
- (void)dealloc;
- (id)scheduleTask:(id /* block */)task identifier:(id)identifier;
- (void)cancelTaskForToken:(id)token;
- (void)cancelAllTasks;
- (void)_handleBacklightWillTurnOn;
- (void)_handleBacklightDidTurnOn;
- (void)_handleBacklightDidTurnOff;
- (void)_tryToPerformNextTask;
- (BOOL)_haveRemainingTasks;
- (id /* block */)_dequeueTask;
- (BOOL)_backlightIsOff;
- (BOOL)_havePowerAssertion;
- (void)_setHavePowerAssertion:(BOOL)assertion;
- (BOOL)_hasTimedOut;
- (void)_takePowerAssertionWithCompletion:(id /* block */)completion;
- (void)_releasePowerAssertion;
- (void)_queue_takePowerAssertion;
- (void)_queue_releasePowerAssertion;
@end

#endif /* NTKTaskScheduler_h */
