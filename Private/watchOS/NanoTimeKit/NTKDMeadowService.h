//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKDMeadowService_h
#define NTKDMeadowService_h
@import Foundation;

#include "CSLSOnWristMonitorDelegate-Protocol.h"
#include "CSLSUIProvider-Protocol.h"
#include "UNUserNotificationCenterDelegate-Protocol.h"

@class CSLSOnWristMonitor, NSNumberFormatter, NSString, UNUserNotificationCenter;
@protocol OS_dispatch_queue;

@interface NTKDMeadowService : NSObject<UNUserNotificationCenterDelegate, CSLSUIProvider, CSLSOnWristMonitorDelegate> {
  /* instance variables */
  UNUserNotificationCenter *_userNotificationCenter;
  unsigned long long _stateHandler;
  NSObject<OS_dispatch_queue> *_userNotificationQueue;
  CSLSOnWristMonitor *_wristMonitor;
  NSNumberFormatter *_percentageFormatter;
  int _meadowNotifydToken;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedService;

/* instance methods */
- (id)_init;
- (void)start;
- (void)dealloc;
- (void)_scheduleAutoExitMeadowNotificationIfPossible;
- (void)_updateDidReceiveAutoExitNotificationStatus:(BOOL)status;
- (BOOL)_didReceiveAutoLowPowerModeNotification;
- (void)_checkIfDeviceIsOnWristAndScheduleNotificationIfNeeded;
- (void)_queue_scheduleNotification;
- (long long)_notificationType;
- (void)userNotificationCenter:(id)center didReceiveNotificationResponse:(id)response withCompletionHandler:(id /* block */)handler;
- (void)requestUITriggerWithRegistration:(id)registration UITriggerName:(id)name withDictionary:(id)dictionary withReason:(long long)reason withCompletion:(id /* block */)completion;
- (void)onWristMonitor:(id)monitor didUpdateOnWristState:(id)state fromState:(id)state;
- (struct os_state_data_s { unsigned int x0; union { unsigned int x0 :32; unsigned int x1; } x1; struct os_state_data_decoder_s { char x0[64] char x1[64] } x2; char x3[64] unsigned char x4[0] } *)_perpetualMeadowStateData;
- (id)perpetualMeadowStateDescription;
- (void)lowPowerModeStateChanged;
@end

#endif /* NTKDMeadowService_h */
