//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKFaceColorPalette_h
#define NTKFaceColorPalette_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSObject-Protocol.h"
#include "NTKFaceColorPalette-Protocol.h"
#include "NTKFaceColorPalette.h"
#include "NTKFaceColorPaletteConfiguration.h"
#include "NTKFaceColorPaletteConfigurationDelegate-Protocol.h"
#include "NTKFaceColorPaletteKeyColors-Protocol.h"
#include "NTKInterpolatedColorPalette.h"
#include "NTKPigmentEditOption.h"

@class NSBundle, NSCache, NSMutableArray, NSString, UIColor;

@interface NTKFaceColorPalette : NSObject<NSObject, NSCopying, NTKFaceColorPalette, NTKFaceColorPaletteConfigurationDelegate, NTKFaceColorPaletteKeyColors> {
  /* instance variables */
  NSString *_identifier;
}

@property (copy, nonatomic) NSString *faceSpecificNamespace;
@property (retain, nonatomic) NSMutableArray *bundleList;
@property (retain, nonatomic) NSCache *colorCache;
@property (retain, nonatomic) NSCache *swatchImageCache;
@property (retain, nonatomic) NSBundle *domainBundle;
@property (retain, nonatomic) NTKInterpolatedColorPalette *interpolatedTritiumPalette;
@property (retain, nonatomic) NTKFaceColorPalette *tritiumPalette;
@property (retain, nonatomic) NTKFaceColorPaletteConfiguration *configuration;
@property (retain, nonatomic) NTKPigmentEditOption *pigmentEditOption;
@property (readonly, nonatomic) BOOL tritium;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, @dynamic, nonatomic) UIColor *primaryColor;
@property (readonly, @dynamic, nonatomic) UIColor *primaryShiftedColor;
@property (readonly, @dynamic, nonatomic) UIColor *secondaryColor;
@property (readonly, @dynamic, nonatomic) UIColor *secondaryShiftedColor;
@property (readonly, nonatomic) UIColor *swatch;

/* class methods */
+ (id)colorWithName:(id)name inDomain:(id)domain;
+ (BOOL)resolveInstanceMethod:(SEL)method;

/* instance methods */
- (BOOL)isWhite;
- (BOOL)isZeus;
- (BOOL)isVictory;
- (BOOL)isSiriColor;
- (id)_unitySwatchImageForSize:(struct CGSize { double x0; double x1; })size;
- (id)_unitySwatchImageForSize:(struct CGSize { double x0; double x1; })size redColor:(id)color blackColor:(id)color greenColor:(id)color;
- (id)_unityMiddleColor;
- (id)init;
- (id)initWithFaceClass:(Class)class;
- (id)initWithDomainName:(id)name inBundle:(id)bundle;
- (void)colorBundleContentChanged;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copyWithOption:(id)option;
- (id)tritiumPaletteWithProgress:(double)progress;
- (void)executeWithOption:(id)option block:(id /* block */)block;
- (void)configurationDidChange:(id)change;
- (void)resetColorCache;
- (BOOL)isEvergreenCollection;
- (BOOL)isSeasonalCollection;
- (BOOL)isNotFoundColor:(id)color;
- (BOOL)isMulticolor;
- (BOOL)isRainbowColor;
- (BOOL)isWhiteColor;
- (BOOL)isBlackColor;
- (BOOL)isUnityColor;
- (BOOL)hasPrimaryColorRange;
- (id)primaryColorWithFraction:(double)fraction;
- (BOOL)isCompositePalette;
- (id)paletteAtIndex:(unsigned long long)index;
- (id)multitoneColorNames;
- (id)identifier;
- (id)valueForKey:(id)key;
- (id)_notFoundColor;
- (id)_loadColorFromAssetCatalogForKey:(id)key namespace:(id)namespace collectionName:(id)name bundle:(id)bundle colorFraction:(double)fraction ignoringOptionAndCollection:(BOOL)collection inspector:(id)inspector;
- (id)entryNameForKey:(id)key;
- (id)_primaryShiftedColor;
- (id)_secondaryColor;
- (id)_secondaryShiftedColor;
- (id)swatchImageForSize:(struct CGSize { double x0; double x1; })size;
- (id)swatchPrimaryColor;
- (BOOL)isEqual:(id)equal;
- (BOOL)isTritium;
@end

#endif /* NTKFaceColorPalette_h */
