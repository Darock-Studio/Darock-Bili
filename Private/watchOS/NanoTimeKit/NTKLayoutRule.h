//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKLayoutRule_h
#define NTKLayoutRule_h
@import Foundation;

#include "NSCopying-Protocol.h"

@class CLKDevice;

@interface NTKLayoutRule : NSObject<NSCopying>

@property (readonly, nonatomic) CLKDevice *device;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } referenceFrame;
@property (nonatomic) long long horizontalLayout;
@property (nonatomic) long long verticalLayout;
@property (nonatomic) BOOL clipsToReferenceFrame;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } maximumSize;

/* class methods */
+ (id)layoutRuleForDevice:(id)device withReferenceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame horizontalLayout:(long long)layout verticalLayout:(long long)layout;
+ (id)layoutRuleForDevice:(id)device withReferenceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame horizontalLayout:(long long)layout verticalLayout:(long long)layout clip:(BOOL)clip;

/* instance methods */
- (id)initForDevice:(id)device;
- (id)layoutRuleByConvertingToCoordinateSpaceWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (double)calculateLayoutFrameXOriginForBoundsSize:(struct CGSize { double x0; double x1; })size;
- (double)calculateLayoutFrameYOriginForBoundsSize:(struct CGSize { double x0; double x1; })size;
- (double)calculateLayoutFrameWidthForBoundsSize:(struct CGSize { double x0; double x1; })size;
- (double)calculateLayoutFrameHeightForBoundsSize:(struct CGSize { double x0; double x1; })size;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })calculateLayoutFrameForBoundsSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)validate;
- (id)description;
@end

#endif /* NTKLayoutRule_h */
