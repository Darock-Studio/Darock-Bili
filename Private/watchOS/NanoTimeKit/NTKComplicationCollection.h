//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKComplicationCollection_h
#define NTKComplicationCollection_h
@import Foundation;

#include "NTKComplicationStoreClient-Protocol.h"

@class NSHashTable, NSLock, NSMutableArray, NSMutableDictionary, NSNumber, NSRecursiveLock, NSString, NSUUID, NSXPCConnection;

@interface NTKComplicationCollection : NSObject<NTKComplicationStoreClient> {
  /* instance variables */
  NSXPCConnection *_connection;
  BOOL _registrationNeeded;
  NSNumber *_seqId;
  NSRecursiveLock *_lock;
  NSMutableDictionary *_localizeableSampleDataTemplates;
  NSMutableDictionary *_complicationDescriptors;
  NSHashTable *_observers;
  NSMutableArray *_loadCallbacks;
  NSLock *_observersLock;
  BOOL _updatesSuspended;
  NSMutableArray *_updatesEnqueuedWhileSuspended;
}

@property (readonly, nonatomic) NSString *collectionIdentifier;
@property (readonly, nonatomic) NSUUID *deviceUUID;
@property (readonly, nonatomic) BOOL hasLoaded;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedRemoteCollection;
+ (id)newApricotCollection;
+ (id)sharedBundleCollection;
+ (id)lsSDKVersionForApplicationID:(id)id;
+ (id)_bundleForWatchKitAppID:(id)id;

/* instance methods */
- (id)initWithCollectionIdentifier:(id)identifier deviceUUID:(id)uuid;
- (void)dealloc;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (id)clients;
- (id)clientsSupportingFamily:(long long)family;
- (id)supportedTemplateFamiliesForClientIdentifier:(id)identifier descriptor:(id)descriptor;
- (BOOL)hasSampleTemplateForClientIdentifier:(id)identifier descriptor:(id)descriptor family:(long long)family;
- (id)sampleTemplateForClientIdentifier:(id)identifier descriptor:(id)descriptor applicationID:(id)id family:(long long)family;
- (id)complicationDescriptorsForClientIdentifier:(id)identifier;
- (void)setLocalizableSampleTemplate:(id)template forClientIdentifier:(id)identifier descriptor:(id)descriptor family:(long long)family;
- (void)setComplicationDescriptors:(id)descriptors forClientIdentifier:(id)identifier;
- (void)removeComplicationSampleTemplatesForClientIdentifier:(id)identifier descriptor:(id)descriptor;
- (void)removeAllComplicationSampleTemplatesExceptThoseWithClientIdentifiers:(id)identifiers;
- (id)_fetchOrCreateSampleDataForClientIdentifier:(id)identifier descriptor:(id)descriptor family:(long long)family;
- (void)_setLocalizedSampleTemplate:(id)template forClientIdentifier:(id)identifier descriptor:(id)descriptor family:(long long)family;
- (void)_setLocalizedSampleTemplateReference:(id)reference forClientIdentifier:(id)identifier descriptor:(id)descriptor family:(long long)family;
- (void)_setComplicationDescriptors:(id)descriptors forClientIdentifier:(id)identifier;
- (void)_cleanupOrphanedSampleTemplatesForClientIdentifier:(id)identifier;
- (void)_removeComplicationSampleTemplatesForClientIdentifier:(id)identifier descriptor:(id)descriptor;
- (void)suspendUpdatesFromDaemon;
- (void)resumeUpdatesFromDaemon;
- (void)_sendToDaemonUpdatedSampleDataTemplate:(id)template forClientIdentifier:(id)identifier descriptor:(id)descriptor family:(long long)family;
- (void)_sendToDaemonUpdatedComplicationDescriptors:(id)descriptors forClientIdentifier:(id)identifier;
- (void)_sendToDaemonRemoveComplicationSampleTemplatesForClientIdentifier:(id)identifier descriptor:(id)descriptor;
- (void)loadFullCollectionWithLocalizableSampleTemplates:(id)templates complicationDescriptors:(id)descriptors seqId:(id)id;
- (void)updateSampleTemplateReference:(id)reference forClientIdentifier:(id)identifier descriptor:(id)descriptor family:(long long)family seqId:(id)id;
- (void)updateComplicationDescriptors:(id)descriptors forClientIdentifier:(id)identifier seqId:(id)id;
- (void)removeComplicationSampleTemplatesForClientIdentifier:(id)identifier descriptor:(id)descriptor seqId:(id)id;
- (void)_notifyUpdateComplicationSampleTemplateForClientIdentifier:(id)identifier descriptor:(id)descriptor;
- (void)_notifyUpdateComplicationDescriptorsForClientIdentifier:(id)identifier;
- (void)_notifyRemovedComplicationSampleTemplatesForClientIdentifier:(id)identifier descriptor:(id)descriptor;
- (void)_notifyLoaded;
- (void)_notifyReloaded;
- (id)_sampleDataForClientIdentifier:(id)identifier descriptor:(id)descriptor;
- (void)_register;
- (void)_registerIfNeeded;
- (void)_handleConnectionInterrupted;
- (void)_throwIfNotLoaded:(SEL)loaded;
- (void)_performOrEnqueueUpdate:(id /* block */)update;
@end

#endif /* NTKComplicationCollection_h */
