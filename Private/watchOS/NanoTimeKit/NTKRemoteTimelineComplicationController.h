//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKRemoteTimelineComplicationController_h
#define NTKRemoteTimelineComplicationController_h
@import Foundation;

#include "NTKTimelineComplicationController.h"
#include "CLKUITimeTravel-Protocol.h"
#include "NTKComplicationCollection.h"
#include "NTKComplicationCollectionObserver-Protocol.h"
#include "NTKRemoteComplication.h"
#include "NTKTimelineDataOperation.h"
#include "SWSystemSleepObserver-Protocol.h"
#include "TLTimelineDelegate-Protocol.h"

@class CLKComplicationTemplate, NSDate, NSMutableSet, NSString, NSTimer, PCPersistentTimer, TLTimeline;
@protocol CLKComplicationDataSource;

@interface NTKRemoteTimelineComplicationController : NTKTimelineComplicationController<TLTimelineDelegate, CLKUITimeTravel, SWSystemSleepObserver, NTKComplicationCollectionObserver> {
  /* instance variables */
  NSDate *_timeTravelDate;
  BOOL _supportsTimeTravelForward;
  NSDate *_timelineEndDate;
  unsigned long long _timelineAnimationBehavior;
  BOOL _hasQueuedAnimation;
  unsigned long long _queuedAnimation;
  unsigned long long _privacyBehavior;
  TLTimeline *_timeline;
  NTKTimelineDataOperation *_currentOperation;
  BOOL _needsTimelineReload;
  BOOL _needsTimelineExtend;
  BOOL _performingTimelineReload;
  BOOL _performingTimelineExtend;
  NSObject<CLKComplicationDataSource> *_wakeSessionDataSource;
  id /* block */ _wakeSessionCompletionHandler;
  NSMutableSet *_suspendedRightBoundaryDates;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _suspendedRightBoundaryDatesLock;
  NSString *_sdkVersion;
  NTKComplicationCollection *_complicationCollection;
  CLKComplicationTemplate *_sampleTemplate;
  CLKComplicationTemplate *_noContentTemplate;
  NSTimer *_setupOperationGracePeriodTimer;
  BOOL _inSetupOperationGracePeriod;
  NSDate *_forcedExtensionTimerStartDate;
  PCPersistentTimer *_forcedExtensionTimer;
  NSTimer *_removeDataAndWakeSessionGracePeriodTimer;
  BOOL _inRemoveDataAndWakeSessionGracePeriod;
  unsigned long long _extendForwardOperationsInThisWakeSession;
  unsigned long long _extendBackwardOperationsInThisWakeSession;
  CLKComplicationTemplate *_alwaysOnTemplate;
  BOOL _useNoContentUntilNextTimelineUpdate;
  BOOL _observingSystemSleep;
}

@property (readonly, @dynamic, nonatomic) NTKRemoteComplication *complication;
@property (readonly, nonatomic) BOOL hasSetup;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_acceptsComplicationType:(unsigned long long)type family:(long long)family forDevice:(id)device;

/* instance methods */
- (id)initWithComplication:(id)complication variant:(id)variant device:(id)device;
- (void)dealloc;
- (void)setIgnoreNewTemplates:(BOOL)templates;
- (void)_deactivate;
- (void)_activate;
- (void)_removeDataAndWakeSession;
- (void)_cancelRemoveDataAndWakeSessionGracePeriod;
- (void)_setupRemoveDataAndWakeSessionGracePeriodTimer;
- (void)_applyCachingMode;
- (void)_applyUpdatingMode;
- (void)_updateIsComplicationActive:(BOOL)active;
- (void)setDataMode:(long long)mode forDisplayWrapper:(id)wrapper;
- (void)setShowsLockedUI:(BOOL)ui;
- (void)setNeedsTimelineReload;
- (void)setNeedsTimelineExtend;
- (void)updateSampleOrNoContentTemplatesIfNecessary;
- (void)performWakeSessionWithDataSource:(id)source completion:(id /* block */)completion;
- (void)cancelWakeSession;
- (void)_endWakeSessionNormally;
- (void)addDisplayWrapper:(id)wrapper;
- (void)setTritiumDelegate:(id)delegate;
- (void)setTimeTravelDate:(id)date animated:(BOOL)animated;
- (id)activeDisplayTemplateForDisplayWrapper:(id)wrapper;
- (id)_sampleTemplateIfExists;
- (void)_reloadTimeline;
- (void)setTimelineEndDate:(id)date;
- (id)_tritium_complicationEntriesInDateInterval:(id)interval;
- (id)_tritium_complicationTemplateAtDate:(id)date;
- (void)_handleRenderStatsForDisplayWrapper:(id)wrapper withTime:(double)time cost:(double)cost;
- (id)tritium_overRenderBudgetTemplate;
- (void)tritium_handledOverRenderBudget;
- (void)timeline:(id)timeline didChangeNowEntryFrom:(id)from to:(id)to;
- (void)_queueAnimationForNextUpdate:(unsigned long long)update;
- (void)entriesDidChangeInTimeline:(id)timeline;
- (void)complicationCollection:(id)collection didUpdateSampleTemplateForClient:(id)client;
- (void)complicationCollection:(id)collection didRemoveSampleTemplatesForClient:(id)client;
- (void)_completeSetupOperationWithEndDate:(id)date privacyBehavior:(unsigned long long)behavior timelineAnimationBehavior:(unsigned long long)behavior currentEntry:(id)entry alwaysOnTemplate:(id)template;
- (id)alwaysOnTemplate;
- (void)_startSetupOperationIfPossible;
- (void)_updateAllDisplayWrappersToCurrentTemplate;
- (void)_updateAllDisplayWrappersToCurrentTemplateWithAnimation:(unsigned long long)animation;
- (void)_updateDisplayWrapper:(id)wrapper toCurrentTemplateWithAnimation:(unsigned long long)animation;
- (void)_scheduleForcedTimelineExtensionTimer;
- (void)_resetForcedTimelineExtensionTimer;
- (void)_forcedExtensionTimerFired:(id)fired;
- (void)_handleSignificantTimeChange;
- (void)_considerForcedTimelineExtension;
- (void)_updateEndDateAndExtendTimelineIfNecessaryAndPossible;
- (void)_completeEndDateOperationWithEndDate:(id)date;
- (void)_extendTimelineIfNecessaryAndPossible;
- (void)_startExtendOperationIfNecessaryForTimeline:(id)timeline withDate:(id)date minBuffer:(double)buffer;
- (void)_suspendRightBoundaryDate:(id)date;
- (void)_clearSuspendedBoundaryDates;
- (void)_completeExtendRightOperationWithBoundaryDate:(id)date entries:(id)entries;
- (void)_startExtendRightOperationFromDate:(id)date;
- (id)_currentEntry;
- (id)privacyTemplate;
- (id)lockedTemplate;
- (void)_updateComplicationDimState;
- (void)_updateComplicationDimStateForDisplayWrapper:(id)wrapper;
- (BOOL)hasTapAction;
- (void)performTapActionForDisplayWrapper:(id)wrapper;
- (id)complicationApplicationIdentifier;
- (void)_startSetupOperationGracePeriod;
- (void)_setupOperationGracePeriodTimerFired:(id)fired;
- (void)_endSetupOperationGracePeriod;
- (void)systemSleepMonitor:(id)monitor prepareForSleepWithCompletion:(id /* block */)completion;
@end

#endif /* NTKRemoteTimelineComplicationController_h */
