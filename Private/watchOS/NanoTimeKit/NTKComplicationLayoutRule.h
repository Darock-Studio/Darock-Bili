//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKComplicationLayoutRule_h
#define NTKComplicationLayoutRule_h
@import Foundation;

#include "NTKLayoutRule.h"

@interface NTKComplicationLayoutRule : NTKLayoutRule

@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } keylinePadding;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } editingTransform;
@property (nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } contentTransform;

/* class methods */
+ (id)layoutRuleForDevice:(id)device withReferenceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame horizontalLayout:(long long)layout verticalLayout:(long long)layout keylinePadding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })padding;
+ (id)layoutRuleForDevice:(id)device withReferenceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame horizontalLayout:(long long)layout verticalLayout:(long long)layout keylinePadding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })padding clip:(BOOL)clip;
+ (id)layoutRuleForDevice:(id)device withReferenceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame horizontalLayout:(long long)layout verticalLayout:(long long)layout keylinePadding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })padding clip:(BOOL)clip editingTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
+ (id)layoutRuleForDevice:(id)device withReferenceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame horizontalLayout:(long long)layout verticalLayout:(long long)layout keylinePadding:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })padding clip:(BOOL)clip contentTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;

/* instance methods */
- (id)initForDevice:(id)device;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* NTKComplicationLayoutRule_h */
