//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKPageScrollViewController_h
#define NTKPageScrollViewController_h
@import Foundation;

#include "UIViewController.h"
#include "NTKPageDelegate-Protocol.h"
#include "NTKPageScrollView.h"
#include "NTKPageScrollViewControllerDataSource-Protocol.h"
#include "NTKPageScrollViewControllerDelegate-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSString, PUICPagedScrollViewNotchProvider, UIView;

@interface NTKPageScrollViewController : UIViewController<NTKPageDelegate> {
  /* instance variables */
  long long _scrollOrientation;
  struct { unsigned int x :1 handlesSelect; unsigned int x :1 handlesDelete; unsigned int x :1 handlesReorder; unsigned int x :1 configuresPage; unsigned int x :1 suppliesContentViewSize; unsigned int x :1 handlesWillAppear; unsigned int x :1 handlesDidAppear; unsigned int x :1 handlesWillDisappear; unsigned int x :1 handlesDidDisappear; unsigned int x :1 handlesScroll; unsigned int x :1 handlesScrollStart; unsigned int x :1 handlesScrollStop; unsigned int x :1 handlesSwipeToDeleteBegan; unsigned int x :1 handlesSwipeToDeleteUpdated; unsigned int x :1 handlesSwipeToDeleteEnded; unsigned int x :1 handlesWillDecelerateToIndex; unsigned int x :1 handlesWillAnimateDeletion; unsigned int x :1 handlesIsAnimatingDeletion; unsigned int x :1 handlesDidAnimateDeletion; unsigned int x :1 handlesPageDidScrollOffscreen; } _delegateFlags;
  struct { unsigned int x :1 handlesPagePurge; } _dataSourceFlags;
  NSMutableDictionary *_pageViewControllers;
  NSMutableSet *_recycledPages;
  BOOL _swipeToDeleteInProgress;
  unsigned long long _swipeToDeleteIndex;
  PUICPagedScrollViewNotchProvider *_notchProvider;
  long long _reorderPageIndex;
}

@property (weak, nonatomic) NSObject<NTKPageScrollViewControllerDataSource> *dataSource;
@property (weak, nonatomic) NSObject<NTKPageScrollViewControllerDelegate> *delegate;
@property (readonly, nonatomic) NTKPageScrollView *scrollView;
@property (nonatomic) double interpageSpacing;
@property (nonatomic) unsigned long long pageDeleteEdge;
@property (nonatomic) unsigned long long prefetchBuffer;
@property (nonatomic) unsigned long long tiledPageRange;
@property (nonatomic) BOOL scrollEnabled;
@property (readonly, nonatomic) unsigned long long currentPageIndex;
@property (retain, nonatomic) UIView *deleteConfirmationView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithScrollOrientation:(long long)orientation;
- (void)dealloc;
- (void)loadView;
- (void)viewDidLayoutSubviews;
- (void)_applyScollViewFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_applyLayoutForPageAtIndex:(unsigned long long)index;
- (void)_applyLayoutForPageView:(id)view pageFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame atIndex:(unsigned long long)index;
- (void)resetNotches;
- (void)generateNotches;
- (void)activate;
- (void)deactivate;
- (void)reloadPages;
- (void)reloadPageAtIndex:(unsigned long long)index;
- (void)scrollToPageAtIndex:(unsigned long long)index animated:(BOOL)animated;
- (void)scrollToPageAtIndex:(unsigned long long)index animated:(BOOL)animated completion:(id /* block */)completion;
- (id)pageViewControllerAtIndex:(unsigned long long)index;
- (id)lifeCycleTrackingViewControllers;
- (void)confirmPageDeletion;
- (void)cancelPageDeletion;
- (void)cancelPageDeletionAnimated:(BOOL)animated;
- (void)enumeratePageViewControllersWithBlock:(id /* block */)block;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)_forceScrollToSelectedPage;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)ensureViewControllerForPageAtIndex:(unsigned long long)index;
- (void)pageWasSelected:(id)selected;
- (void)pageDidBeginSwipeToDelete:(id)delete;
- (void)page:(id)page didUpdateSwipeToDelete:(double)delete;
- (void)page:(id)page didEndSwipeToDelete:(BOOL)delete;
- (void)updateScrollingEnabled;
- (void)updatePageBehaviors;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForCenteredPage;
- (BOOL)_canSelectPageAtIndex:(unsigned long long)index;
- (BOOL)_canDeletePageAtIndex:(unsigned long long)index;
- (void)_applyDefaultConfigurationToPage:(id)page;
- (BOOL)_shouldEnableScrolling;
- (struct CGSize { double x0; double x1; })_contentViewSizeForPageAtIndex:(unsigned long long)index;
- (id)_viewControllerForPageAtIndex:(unsigned long long)index;
- (void)_migratePageViewControllersWithStartIndex:(unsigned long long)index offset:(long long)offset;
- (void)_purgeViewControllerForPageAtIndex:(unsigned long long)index;
- (id)_pageForIndex:(unsigned long long)index;
- (void)_recyclePage:(id)page;
- (unsigned long long)_indexOfPage:(id)page;
- (void)_configureBehaviorsForPage:(id)page atIndex:(unsigned long long)index;
- (void)_updateScrollViewHandlers;
- (void)_handleDidReorderPageFromIndex:(unsigned long long)index toIndex:(unsigned long long)index;
- (void)_handlePageWillAppear:(unsigned long long)appear;
- (void)_handlePageWillDisappear:(unsigned long long)disappear;
- (void)_handlePageDidAppear:(unsigned long long)appear;
- (void)_handlePageDidDisappear:(unsigned long long)disappear;
- (void)_handlePageDidScrollOffscreenAtIndex:(unsigned long long)index toIndex:(unsigned long long)index;
- (void)_handleScroll;
- (void)_handleScrollingDidStart;
- (void)_handleScrollingDidStop;
- (void)_handlePageDeletion:(unsigned long long)deletion;
- (void)_handleScrollingToPage:(unsigned long long)page toDeletePageAtIndex:(unsigned long long)index;
- (void)_handleWillAnimatePageDeletion:(unsigned long long)deletion destinationIndex:(unsigned long long)index;
- (void)_handleIsAnimatingPageDeletion;
- (void)_handleDidAnimatePageDeletion;
- (void)_handleWillDecelerateToIndex:(unsigned long long)index;
- (void)_tearDownPageDeletion;
@end

#endif /* NTKPageScrollViewController_h */
