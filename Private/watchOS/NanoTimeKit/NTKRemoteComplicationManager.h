//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKRemoteComplicationManager_h
#define NTKRemoteComplicationManager_h
@import Foundation;

#include "CLKComplicationClientDelegate-Protocol.h"
#include "CLKComplicationWidgetMigrationDataSource-Protocol.h"
#include "LSApplicationWorkspaceObserverProtocol-Protocol.h"
#include "NTKApricotComplicationVendorObserver-Protocol.h"
#include "NTKComplicationBackgroundTaskResponsibilityCache.h"
#include "NTKComplicationCollection.h"
#include "NTKComplicationCollectionObserver-Protocol.h"
#include "NTKComplicationNoContentImageFileCache.h"
#include "NTKFaceCollection.h"
#include "NTKFaceCollectionObserver-Protocol.h"
#include "NTKPlaceholderComplicationTemplateFileCache.h"
#include "NTKRemoteComplicationBudgetManager.h"
#include "NTKRemoteComplicationBudgetManagerDelegate-Protocol.h"
#include "NTKRemoteComplicationOperationScheduler.h"
#include "NTKRemoteComplicationOperationSchedulerDelegate-Protocol.h"
#include "NTKRemoteComplicationProvider-Protocol.h"
#include "NTKRemoteComplicationUpdateScheduler.h"
#include "NTKRemoteComplicationUpdateSchedulerDelegate-Protocol.h"
#include "NTKVendorRegisterDateCache.h"
#include "WCComplicationManagerDelegate-Protocol.h"

@class BKSApplicationStateMonitor, CLKComplicationClientManager, CLKComplicationVendorManager, CLKComplicationWidgetMigrationObjectProvider, NSArray, NSDictionary, NSMutableDictionary, NSMutableSet, NSString, WCComplicationManager;
@protocol OS_dispatch_queue;

@interface NTKRemoteComplicationManager : NSObject<CLKComplicationClientDelegate, NTKRemoteComplicationUpdateSchedulerDelegate, NTKRemoteComplicationBudgetManagerDelegate, NTKComplicationCollectionObserver, NTKFaceCollectionObserver, WCComplicationManagerDelegate, LSApplicationWorkspaceObserverProtocol, NTKRemoteComplicationOperationSchedulerDelegate, NTKApricotComplicationVendorObserver, NTKRemoteComplicationProvider, CLKComplicationWidgetMigrationDataSource> {
  /* instance variables */
  CLKComplicationVendorManager *_sockPuppetComplicationManager;
  NSArray *_unfilteredVendors;
  NSArray *_lsRestrictedBundleIds;
  NSDictionary *_migrationOnlyVendorsByAppIdentifier;
  NSArray *_sortedComplicationVendors;
  NSDictionary *_vendorsByClientIdentifier;
  NSDictionary *_vendorsByAppIdentifier;
  NSMutableDictionary *_activeComplicationsByClientIdentifier;
  CLKComplicationClientManager *_clientManager;
  NSMutableDictionary *_remoteControllersByClientIdentifier;
  NTKRemoteComplicationOperationScheduler *_operationScheduler;
  BKSApplicationStateMonitor *_applicationStateMonitor;
  NTKFaceCollection *_libraryFaceCollection;
  NTKFaceCollection *_activeFaceCollection;
  NTKComplicationCollection *_complicationCollection;
  BOOL _needsToRequeryComplicationOnLoad;
  NTKPlaceholderComplicationTemplateFileCache *_placeholderTemplateFileCache;
  NTKVendorRegisterDateCache *_vendorSampleDataRegisterDateCache;
  NTKVendorRegisterDateCache *_vendorComplicationDescriptorsRegisterDateCache;
  NTKComplicationNoContentImageFileCache *_noContentImageFileCache;
  NTKComplicationBackgroundTaskResponsibilityCache *_backgroundTaskResponsibilityCache;
  NTKRemoteComplicationUpdateScheduler *_updateScheduler;
  NTKRemoteComplicationBudgetManager *_budgetManager;
  WCComplicationManager *_watchConnectivityManager;
  NSMutableSet *_priviledgedExtensionClientIDs;
  NSMutableSet *_monitorDeviceSwitchSessionEndClientIDs;
  id /* block */ _deviceSwitchRefreshCompletionHandler;
  NSObject<OS_dispatch_queue> *_launchServicesQueue;
  NSObject<OS_dispatch_queue> *_templateQueue;
  CLKComplicationWidgetMigrationObjectProvider *_widgetMigrationConfigurationCache;
}

@property (copy, nonatomic) NSString *lastSeenWatchKitExtension;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)_registerClient:(id)client;
- (void)_unregisterClient:(id)client;
- (void)_startObserving;
- (void)_stopObserving;
- (void)_reloadRemoteComplicationWithClientIdentifier:(id)identifier controllers:(id)controllers;
- (void)_DTDebug_reloadRemoteComplication:(id)complication;
- (void)enumerateEnabledVendorsForComplicationFamily:(long long)family withBlock:(id /* block */)block;
- (void)enumerateComplicationDescriptorsForClientIdentifier:(id)identifier family:(long long)family withBlock:(id /* block */)block;
- (void)enumerateComplicationDescriptorsForClientIdentifier:(id)identifier withBlock:(id /* block */)block;
- (void)notifyAppForClientIdentifier:(id)identifier ofSharedComplicationDescriptors:(id)descriptors withCompletion:(id /* block */)completion;
- (BOOL)vendorExistsWithClientIdentifier:(id)identifier appBundleIdentifier:(id)identifier;
- (id)localizedAppNameForClientIdentifier:(id)identifier;
- (void)registerRemoteComplicationController:(id)controller;
- (id)itemIdForVendorWithClientIdentifier:(id)identifier;
- (void)unregisterRemoteComplicationController:(id)controller;
- (void)remoteComplicationControllerShouldExtendSession:(id)session;
- (void)performUpdateForComplicationController:(id)controller;
- (void)setLibraryCollection:(id)collection;
- (void)faceCollectionDidLoad:(id)load;
- (void)_updateRegisteredComplicationInformation;
- (void)_reloadComplicationVendors;
- (void)_evaluteAllowedComplications;
- (void)widgetVendorCacheUpdated:(id)updated;
- (void)_reloadedComplicationDescriptorsCompletionForVendor:(id)vendor updated:(BOOL)updated;
- (BOOL)_isComplicationRestricted:(id)restricted;
- (void)updateSampleDataAndLoadingImagesForCurrentVendors:(id)vendors;
- (void)_safe_updateSampleDataAndLoadingImagesForVendor:(id)vendor allCurrentVendors:(id)vendors;
- (void)_safe_updateSampleDataAndNoContentImagesForVendor:(id)vendor descriptor:(id)descriptor;
- (BOOL)_safe_vendorIsMissingContent:(id)content;
- (void)_safe_updateSampleDataAndNoContentImagesForVendor:(id)vendor complicationDescriptor:(id)descriptor forceUpdate:(BOOL)update templateFetchHandler:(id /* block */)handler noContentImageFetchHelper:(id /* block */)helper;
- (void)_noteOperationInitiatedByClient:(id)client;
- (void)_shouldRequestComplicationDescriptorsForVendor:(id)vendor fromCollection:(id)collection force:(BOOL)force previousRegisterDate:(id)date completion:(id /* block */)completion;
- (void)updateComplicationDescriptorsForVendor:(id)vendor force:(BOOL)force budgeted:(BOOL)budgeted completion:(id /* block */)completion;
- (void)_enqueueClientBundlePathOperationForClientIdentifier:(id)identifier appBundleIdentifier:(id)identifier fetchHandler:(id /* block */)handler;
- (void)_enqueueTimelineUpdateOperationForClientIdentifier:(id)identifier discretionary:(BOOL)discretionary metering:(long long)metering;
- (void)_enqueueLocalizableSampleTemplateOperationForClientIdentifier:(id)identifier appBundleIdentifier:(id)identifier complication:(id)complication templateFetchHandler:(id /* block */)handler;
- (void)_enqueueLoadingImageFetchOperationForClientIdentifier:(id)identifier appBundleIdentifier:(id)identifier complication:(id)complication fetchHandler:(id /* block */)handler;
- (void)_enqueueComplicationDescriptorsUpdateOperationForClientIdentifier:(id)identifier appBundleIdentifier:(id)identifier budgeted:(BOOL)budgeted descriptorsHandler:(id /* block */)handler;
- (void)_enqueueHandleSharedComplicationDescriptorsOperationForClientIdentifier:(id)identifier appBundleIdentifier:(id)identifier descriptors:(id)descriptors completionHandler:(id /* block */)handler;
- (id)cachedWidgetMigrationForAppIdentifier:(id)identifier descriptor:(id)descriptor;
- (void)loadWidgetMigrationsForAppIdentifier:(id)identifier descriptor:(id)descriptor completion:(id /* block */)completion;
- (void)_enqueueWidgetMigrationOperationForClientIdentifier:(id)identifier appBundleIdentifier:(id)identifier descriptor:(id)descriptor completionHandler:(id /* block */)handler cancellationHandler:(id /* block */)handler;
- (id)_clientIdentifierForVendor:(id)vendor;
- (id)_vendorForClientIdentifier:(id)identifier;
- (id)_vendorForAppIdentifier:(id)identifier;
- (void)_handleLocaleChanged;
- (void)handleRequestedUpdateForClientIdentifier:(id)identifier;
- (void)budgetResetForAppBundleID:(id)id;
- (void)applicationDidForegroundWithClientID:(id)id;
- (void)complicationCollectionDidLoad:(id)load;
- (void)complicationCollectionDidReload:(id)reload;
- (void)complicationClient:(id)client reloadTimelineForComplication:(id)complication;
- (void)complicationClient:(id)client extendTimelineForComplication:(id)complication;
- (void)reloadComplicationDescriptorsForComplicationClient:(id)client;
- (void)_sessionStartingForClientID:(id)id;
- (void)_sessionEndingForClientID:(id)id;
- (void)handlePingForExtensionBundleID:(id)id;
- (void)isExtensionPrivileged:(id)privileged completionHandler:(id /* block */)handler;
- (void)handleDeviceHasBecomeActiveWithCompletionHandler:(id /* block */)handler;
- (void)handleAPSPushForComplicationClientIdentifier:(id)identifier;
- (void)applicationStateDidChange:(id)change;
- (void)remoteComplicationOperationScheduler:(id)scheduler willStartSessionWithClientID:(id)id;
- (void)remoteComplicationOperationScheduler:(id)scheduler didEndSessionWithClientID:(id)id;
- (void)remoteComplicationOperationScheduler:(id)scheduler didEndDeviceSwitchSessionWithClientID:(id)id;
- (void)remoteComplicationOperationScheduler:(id)scheduler didUpdateNextWakeUpDate:(id)date forClientID:(id)id;
@end

#endif /* NTKRemoteComplicationManager_h */
