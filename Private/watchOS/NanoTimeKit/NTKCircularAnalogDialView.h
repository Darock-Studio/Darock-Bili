//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef NTKCircularAnalogDialView_h
#define NTKCircularAnalogDialView_h
@import Foundation;

#include "UIView.h"
#include "NTKWhistlerAnalogColorPalette.h"

@class CALayer, CLKDevice, NSArray;

@interface NTKCircularAnalogDialView : UIView {
  /* instance variables */
  CLKDevice *_device;
  unsigned long long _numberOfTicks;
  CALayer *_dialBackgroundLayer;
  CALayer *_ticksLayer;
  NSArray *_allSmallTicks;
  NSArray *_allHourTicks;
  NSArray *_smallMatchingHourTicks;
  double _tickPadding;
  NTKWhistlerAnalogColorPalette *_colorPalette;
  struct { BOOL smallTicksMatchingMinutes; BOOL hideHourTicks; struct CGSize { double width; double height; } hourTickSize; struct CGSize { double width; double height; } smallTickSize; } _options;
}

/* class methods */
+ (id)_disabledLayerActions;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame forDevice:(id)device;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame forDevice:(id)device smallTicksMatchingMinutes:(BOOL)minutes;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame forDevice:(id)device hideHourTicks:(BOOL)ticks;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame options:(struct { BOOL x0; BOOL x1; struct CGSize { double x0; double x1; } x2; struct CGSize { double x0; double x1; } x3; })options device:(id)device;
- (void)layoutSubviews;
- (BOOL)isTickIndexForHour:(unsigned long long)hour;
- (void)layoutLayerTicks:(id)ticks rotationAngleInDegree:(double)degree smallTicks:(BOOL)ticks;
- (void)setDialBackgroundColor:(id)color;
- (void)applyColorTransitionFraction:(double)fraction fromColorPalette:(id)palette toColorPalette:(id)palette;
- (void)applyColorTransitionFraction:(double)fraction fromFaceColorPalette:(id)palette toFaceColorPalette:(id)palette;
- (id)_instantaneousAnimationForKeyPath:(id)path value:(id)value;
- (void)prepareForEdit;
- (void)cleanupAfterEdit;
- (void)setHideHourTicks:(BOOL)ticks;
- (void)setHourTicksOpacity:(double)opacity bezelTextWidthRadians:(double)radians;
- (void)fillDialTransitionWithFraction:(double)fraction bezelTextWidthRadians:(double)radians;
- (void)showAllTicksInDial;
- (void)transitTicksWithInitialBezelTextWidthInRadius:(double)radius finalBezelTextWidthInRadius:(double)radius fraction:(double)fraction;
- (void)transitInvisibleTicksAlphaWithBezelTextWidthInRadius:(double)radius invisbleTicksAlpha:(double)alpha;
- (double)_tickOpactiyAtIndex:(long long)index bezelTextWidthInRadius:(double)radius invisibleTicksAlpha:(double)alpha;
- (double)_tickOpactiyAtIndex:(long long)index bezelTextWidthInRadius:(double)radius invisibleTicksAlpha:(double)alpha visibleTicksAlpha:(double)alpha;
- (void)_toggleRasterization:(BOOL)rasterization;
@end

#endif /* NTKCircularAnalogDialView_h */
