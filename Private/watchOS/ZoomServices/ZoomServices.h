//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef ZoomServices_h
#define ZoomServices_h
@import Foundation;

#include "AXUIClientDelegate-Protocol.h"

@class AXUIClient, NSMutableDictionary, NSString;

@interface ZoomServices : NSObject<AXUIClientDelegate> {
  /* instance variables */
  NSMutableDictionary *_zoomListeners;
  NSMutableDictionary *_zoomAttributeListeners;
}

@property (readonly, nonatomic) BOOL showingZoomLens;
@property (retain, nonatomic) AXUIClient *zoomWindowClient;
@property (nonatomic) BOOL showingZoomLens;
@property (nonatomic) BOOL springBoardReady;
@property (nonatomic) BOOL triedToShowLensBeofreSBReady;
@property (nonatomic) BOOL registeredForZoomListener;
@property (nonatomic) BOOL registeredForZoomAttributeListeners;
@property (nonatomic) BOOL shouldRegisterForZoomListeners;
@property (nonatomic) double zoomLevel;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (void)showZoomLens;
- (void)hideZoomLens;
- (void)showMagnifier;
- (void)isMagnifierVisibleWithCompletion:(id /* block */)completion;
- (void)startMagnifier;
- (void)startMagnifierChangeTripleClickMenu:(BOOL)menu;
- (id)userInterfaceClient:(id)client processMessageFromServer:(id)server withIdentifier:(unsigned long long)identifier error:(id *)error;
- (id)userInterfaceClient:(id)client accessQueueForProcessingMessageWithIdentifier:(unsigned long long)identifier;
- (void)connectionWithServiceWasInterruptedForUserInterfaceClient:(id)client;
- (id)init;
- (void)dealloc;
- (void)_checkSpringBoardStarted;
- (void)_zoomChanged:(id)changed;
- (void)_applicationDidResume:(id)resume;
- (void)_applicationWillSuspend:(id)suspend;
- (BOOL)_isAllowedMagnifierClient;
- (BOOL)_isPrimaryZoomWindowClient;
- (id)registerForCoalescedZoomAttributesWithChangedHandler:(id /* block */)handler;
- (id)registerForCoalescedZoomAttributesWithChangedHandler:(id /* block */)handler onDisplay:(unsigned int)display;
- (void)removeCoalescedZoomAttributesChangedHandler:(id)handler;
- (id)registerForZoomAttributes:(id)attributes updatesImmediatelyWithChangedHandler:(id /* block */)handler;
- (id)registerForZoomAttributes:(id)attributes onDisplay:(unsigned int)display updatesImmediatelyWithChangedHandler:(id /* block */)handler;
- (void)removeZoomAttributesChangedHandler:(id)handler;
- (BOOL)notifyZoomFocusDidChangeWithType:(long long)type rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect contextId:(unsigned int)id displayId:(unsigned int)id;
- (BOOL)notifyZoomFocusDidChangeWithType:(long long)type rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect contextId:(unsigned int)id keyboardFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame displayId:(unsigned int)id;
- (BOOL)notifyZoomKeyboardWillBecomeVisibleWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame inAppWithBundleID:(id)id displayID:(unsigned int)id;
- (BOOL)notifyZoomKeyboardWillHideInAppWithBundleID:(id)id displayID:(unsigned int)id;
- (BOOL)notifyZoomKeyboardDidHideInAppWithBundleID:(id)id displayID:(unsigned int)id;
- (BOOL)notifyZoomLockButtonWasPressed;
- (BOOL)notifyZoomDeviceWasUnlocked;
- (BOOL)notifyZoomDeviceWillWake;
- (BOOL)notifyZoomHomeButtonWasPressed;
- (BOOL)notifyZoomLensModeWasChangedInSettingsTo:(id)to;
- (BOOL)notifyZoomDockPositionWasChangedInSettingsTo:(id)to;
- (BOOL)notifyZoomIdleSlugOpacityChangedTo:(double)to;
- (BOOL)notifyZoomFluidSwitcherGestureWillBegin;
- (BOOL)notifyZoomAppActivationAnimationWillBegin;
- (BOOL)notifyZoomAppDeactivationAnimationWillBegin;
- (BOOL)notifyZoomAppSwitcherRevealAnimationWillBegin;
- (BOOL)notifyZoomReturnedToClockFaceAtIdle;
- (BOOL)notifyZoomCarouselLockBegan;
- (BOOL)notifyZoomCarouselLockEnded;
- (BOOL)notifyZoomFluidSwitcherGestureDidFinish;
- (BOOL)notifyZoomFluidSwitcherGestureDidFinishWithDock;
- (BOOL)notifyZoomAppActivationAnimationDidFinish;
- (BOOL)notifyZoomAppDidBecomeActive:(id)active keyboardFrameIfVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visible;
- (BOOL)notifyZoomAppDidEnterBackground:(id)background;
- (BOOL)notifyZoomWillShowBrailleInputUI;
- (void)notifyZoomSOSMedicalIDShown;
- (BOOL)notifyZoomWillHideBrailleInputUI;
- (BOOL)notifyZoomDragWillStart;
- (BOOL)notifyZoomDragWillEnd;
- (void)registerInterestInZoomAttributes;
- (void)_handleChangedAttributes:(id)attributes;
- (double)appActivationAnimationStartDelay;
- (double)appDeactivationAnimationStartDelay;
- (double)reachabilityScaleFactor;
- (double)appSwitcherRevealAnimationStartDelay;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })zoomFrame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })zoomFrameOnDisplay:(unsigned int)display;
- (double)zoomLevelOnDisplay:(unsigned int)display;
- (void)setZoomLevel:(double)level onDisplay:(unsigned int)display;
- (void)_panWithDirection:(id)direction onDisplay:(unsigned int)display;
- (void)panLeft;
- (void)panLeftOnDisplay:(unsigned int)display;
- (void)panRight;
- (void)panRightOnDisplay:(unsigned int)display;
- (void)panUp;
- (void)panUpOnDisplay:(unsigned int)display;
- (void)panDown;
- (void)panDownOnDisplay:(unsigned int)display;
- (void)autoPanZoomUsingLocation:(struct CGPoint { double x0; double x1; })location withPanningStyle:(unsigned long long)style;
- (void)autoPanZoomUsingLocation:(struct CGPoint { double x0; double x1; })location withPanningStyle:(unsigned long long)style onDisplay:(unsigned int)display;
- (id)activeZoomMode;
- (id)activeZoomModeOnDisplay:(unsigned int)display;
- (BOOL)inStandbyMode;
- (BOOL)inStandbyModeOnDisplay:(unsigned int)display;
- (BOOL)shouldSuppressKeyCommandHUD;
- (BOOL)isShowingZoomLens;
@end

#endif /* ZoomServices_h */
