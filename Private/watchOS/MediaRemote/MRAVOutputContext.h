//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.1.0.0
//
#ifndef MRAVOutputContext_h
#define MRAVOutputContext_h
@import Foundation;

#include "MRAVOutputDevice.h"

@class NSArray, NSString;

@interface MRAVOutputContext : NSObject {
  /* instance variables */
  BOOL _postOutputDeviceChangedScheduled;
  BOOL _postOutputDevicesChangedScheduled;
  BOOL _postChangedScheduled;
}

@property (retain, nonatomic) NSArray *outputDevices;
@property (readonly, nonatomic) NSString *uniqueIdentifier;
@property (readonly, nonatomic) NSString *contextID;
@property (readonly, nonatomic) unsigned int type;
@property (readonly, nonatomic) NSArray *outputDevicesSnapshot;
@property (readonly, nonatomic) NSArray *outputDeviceUIDs;
@property (readonly, nonatomic) BOOL containsLocalDevice;
@property (readonly, nonatomic) NSArray *personalDevices;
@property (readonly, nonatomic) NSArray *personalDeviceUIDs;
@property (readonly, nonatomic) unsigned int volumeControlCapabilities;
@property (readonly, nonatomic) BOOL volumeControlAvailable;
@property (readonly, nonatomic) BOOL supportsVolumeControl;
@property (readonly, nonatomic) MRAVOutputDevice *predictedOutputDevice;
@property (nonatomic) float volume;
@property (nonatomic) BOOL volumeMuted;
@property (readonly, nonatomic) BOOL supportsMultipleBluetoothOutputDevices;

/* class methods */
+ (id)sharedAudioPresentationContext;
+ (id)sharedSystemAudioContext;
+ (id)sharedSystemScreenContext;
+ (id)iTunesContext;
+ (id)notificationQueue;

/* instance methods */
- (void)addOutputDevices:(id)devices withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)addOutputDevices:(id)devices initiator:(id)initiator withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)addOutputDevices:(id)devices initiator:(id)initiator fadeAudio:(BOOL)audio withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)setOutputDevices:(id)devices withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)setOutputDevices:(id)devices initiator:(id)initiator withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)setOutputDevices:(id)devices withPassword:(id)password withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)setOutputDevices:(id)devices initiator:(id)initiator password:(id)password fadeAudio:(BOOL)audio withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)removeOutputDevices:(id)devices withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)removeOutputDevices:(id)devices initiator:(id)initiator withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)removeOutputDevices:(id)devices initiator:(id)initiator fadeAudio:(BOOL)audio withCallbackQueue:(id)queue block:(id /* block */)block;
- (void)removeAllOutputDevicesWithCallbackQueue:(id)queue block:(id /* block */)block;
- (BOOL)containsOutputDevice:(id)device;
- (BOOL)containsOutputDeviceUID:(id)uid;
- (id)outputDeviceForUID:(id)uid;
- (BOOL)isVolumeControlAvailable;
- (void)setVolume:(float)volume details:(id)details;
- (void)setVolumeMuted:(BOOL)muted details:(id)details;
- (BOOL)isVolumeMuted;
- (void)adjustVolume:(long long)volume details:(id)details;
- (void)modifyTopologyWithRequest:(id)request withReplyQueue:(id)queue completion:(id /* block */)completion;
- (void)resetPredictedOutputDevice;
- (void)_scheduleOutputContextDeviceDidChangeNotification;
- (void)_scheduleOutputContextDevicesDidChangeNotification;
- (void)_scheduleOutputContextDidChangeNotification;
- (void)_reloadOutputDevices;
- (void)_reloadWithOutputDevices:(id)devices;
- (void)_compareOutputDeviceList:(id)list withNewOutputDeviceList:(id)list;
- (void)_notifyChangesInOutputDevicesWithAdded:(id)added removed:(id)removed updated:(id)updated previous:(id)previous newDevices:(id)devices;
- (void)_notfiyOutputDeviceRemoved:(id)removed;
- (void)_notifyOutputDeviceAdded:(id)added;
- (void)_notifyOutputDeviceChanged:(id)changed;
- (BOOL)shouldLog;
@end

#endif /* MRAVOutputContext_h */
