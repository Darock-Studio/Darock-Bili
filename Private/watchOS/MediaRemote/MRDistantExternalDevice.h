//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.1.0.0
//
#ifndef MRDistantExternalDevice_h
#define MRDistantExternalDevice_h
@import Foundation;

#include "MRExternalDevice.h"
#include "MRAVDistantEndpoint.h"
#include "MRAVDistantExternalDeviceClientProtocol-Protocol.h"
#include "MRDeviceInfo.h"
#include "MRExternalOutputContextDataSource.h"
#include "MRGroupSessionToken.h"
#include "MROrigin.h"

@class NSArray, NSDate, NSMutableArray, NSString, NSXPCConnection, NSXPCListenerEndpoint;
@protocol OS_dispatch_queue;

@interface MRDistantExternalDevice : MRExternalDevice<MRAVDistantExternalDeviceClientProtocol> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_workerQueue;
  NSObject<OS_dispatch_queue> *_serialQueue;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _distantEndpointLock;
  unsigned long long _deviceNotifications;
  NSDate *_connectionStateDate;
  unsigned int _connectionState;
  NSDate *_hasEverAttemptedToConnectDate;
  MROrigin *_customOrigin;
  BOOL _hasEverAtteptedToConnectWhileInvalid;
  NSArray *_subscribedPlayerPaths;
  unsigned int _connectionOptions;
  NSMutableArray *_pendingConnectionAttempts;
  MRDeviceInfo *_deviceInfo;
  BOOL _hasFetchedGroupSessionInfo;
  MRGroupSessionToken *_groupSessionToken;
}

@property (copy, nonatomic) id /* block */ connectionStateCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *connectionStateCallbackQueue;
@property (copy, nonatomic) id /* block */ customDataCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *customDataCallbackQueue;
@property (copy, nonatomic) id /* block */ volumeCallback;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *volumeCallbackQueue;
@property (retain, nonatomic) MRExternalOutputContextDataSource *externalOutputContext;
@property (retain, nonatomic) MRAVDistantEndpoint *distantEndpoint;
@property (retain, nonatomic) NSXPCConnection *hostedExternalDeviceConnection;
@property (readonly, nonatomic) NSXPCListenerEndpoint *listenerEndpoint;
@property (readonly, nonatomic) BOOL hasEverAttemptedToConnect;
@property (readonly, nonatomic) unsigned long long callbacks;
@property (readonly, nonatomic) unsigned long long notifications;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)serviceInterface;
+ (id)clientInterface;

/* instance methods */
- (id)initWithExternalDeviceListenerEndpoint:(id)endpoint endpoint:(id)endpoint;
- (void)dealloc;
- (BOOL)isValid;
- (id)name;
- (id)hostName;
- (long long)port;
- (id)uid;
- (BOOL)wantsNowPlayingNotifications;
- (void)setWantsNowPlayingNotifications:(BOOL)notifications;
- (BOOL)wantsNowPlayingArtworkNotifications;
- (void)setWantsNowPlayingArtworkNotifications:(BOOL)notifications;
- (BOOL)wantsVolumeNotifications;
- (void)setWantsVolumeNotifications:(BOOL)notifications;
- (BOOL)wantsOutputDeviceNotifications;
- (void)setWantsOutputDeviceNotifications:(BOOL)notifications;
- (BOOL)wantsEndpointChangeNotifications;
- (void)setWantsEndpointChangeNotifications:(BOOL)notifications;
- (BOOL)wantsSystemEndpointNotifications;
- (void)setWantsSystemEndpointNotifications:(BOOL)notifications;
- (id)subscribedPlayerPaths;
- (void)setSubscribedPlayerPaths:(id)paths;
- (unsigned int)connectionState;
- (id)groupSessionToken;
- (BOOL)isPaired;
- (BOOL)isUsingSystemPairing;
- (id)deviceInfo;
- (id)supportedMessages;
- (id)customOrigin;
- (void)connectWithOptions:(unsigned int)options userInfo:(id)info completion:(id /* block */)completion;
- (void)disconnect:(id)disconnect;
- (void)setConnectionStateCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setCustomDataCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setDiscoveryMode:(unsigned int)mode forConfiguration:(id)configuration;
- (void)outputDeviceVolumeControlCapabilities:(id)capabilities queue:(id)queue completion:(id /* block */)completion;
- (void)setOutputDeviceVolume:(float)volume outputDeviceUID:(id)uid details:(id)details queue:(id)queue completion:(id /* block */)completion;
- (void)outputDeviceVolume:(id)volume queue:(id)queue completion:(id /* block */)completion;
- (void)adjustOutputDeviceVolume:(long long)volume outputDeviceUID:(id)uid details:(id)details queue:(id)queue completion:(id /* block */)completion;
- (void)muteOutputDeviceVolume:(BOOL)volume outputDeviceUID:(id)uid details:(id)details queue:(id)queue completion:(id /* block */)completion;
- (void)setListeningMode:(id)mode outputDeviceUID:(id)uid queue:(id)queue completion:(id /* block */)completion;
- (void)setConversationDetectionEnabled:(BOOL)enabled outputDeviceUID:(id)uid queue:(id)queue completion:(id /* block */)completion;
- (void)modifyTopologyWithRequest:(id)request withReplyQueue:(id)queue completion:(id /* block */)completion;
- (void)createHostedEndpointWithOutputDeviceUIDs:(id)uids queue:(id)queue completion:(id /* block */)completion;
- (void)sendCustomData:(id)data withName:(id)name;
- (void)ping:(double)ping callback:(id /* block */)callback withQueue:(id)queue;
- (void)sendButtonEvent:(struct _MRHIDButtonEvent { unsigned int x0; unsigned int x1; BOOL x2; })event;
- (id)personalOutputDevices;
- (void)hostedExternalDeviceConnectionStateDidChange:(unsigned int)change withError:(id)error;
- (void)hostedExternalDeviceDeviceInfoDidChange:(id)change;
- (void)hostedExternalDeviceDidReceiveCustomData:(id)data withName:(id)name;
- (void)hostedExternalDeviceEndpointDidChange:(id)change;
- (void)hostedExternalDeviceVolumeCapabilitiesDidChange:(unsigned int)change forOutputDevice:(id)device;
- (void)hostedExternalDeviceVolumeDidChange:(float)change forOutputDevice:(id)device;
- (void)hostedExternalDeviceIsMutedDidChange:(BOOL)change forOutputDevice:(id)device;
- (void)hostedExternalDeviceDidAddOutputDevice:(id)device;
- (void)hostedExternalDeviceDidChangeOutputDevice:(id)device;
- (void)hostedExternalDeviceDidRemoveOutputDevice:(id)device;
- (void)hostedExternalDeviceGroupSessionTokenDidChange:(id)change;
- (void)discoveryOutputDevicesChanged:(id)changed forConfiguration:(id)configuration;
- (void)setPairingCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setNameCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setPairingAllowedCallback:(id /* block */)callback withQueue:(id)queue;
@end

#endif /* MRDistantExternalDevice_h */
