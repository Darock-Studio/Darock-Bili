//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.1.0.0
//
#ifndef MRV3NowPlayingController_h
#define MRV3NowPlayingController_h
@import Foundation;

#include "MRDestinationResolver.h"
#include "MRDestinationResolverDelegate-Protocol.h"
#include "MRNowPlayingControllerConfiguration.h"
#include "MRNowPlayingControllerDestination.h"
#include "MRNowPlayingControllerHelper.h"
#include "MRNowPlayingControllerImpl-Protocol.h"
#include "MRNowPlayingPlayerResponse.h"

@class MSVVariableIntervalTimer, NSDate, NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface MRV3NowPlayingController : NSObject<MRDestinationResolverDelegate, MRNowPlayingControllerImpl>

@property (retain, nonatomic) MRDestinationResolver *destinationResolver;
@property (copy, nonatomic) MRNowPlayingPlayerResponse *response;
@property (copy, nonatomic) MRNowPlayingControllerConfiguration *configuration;
@property (retain, nonatomic) NSMutableArray *deferredContentItemsToMerge;
@property (nonatomic) BOOL registeredForNotifications;
@property (nonatomic) BOOL isUpdating;
@property (nonatomic) BOOL isResolving;
@property (nonatomic) BOOL requestingQueue;
@property (retain, nonatomic) NSDate *lastQueueRequestDate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) MSVVariableIntervalTimer *loadRetryTimer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) MRNowPlayingControllerHelper *helper;
@property (readonly, copy, nonatomic) MRNowPlayingControllerDestination *destination;

/* instance methods */
- (id)initWithConfiguration:(id)configuration;
- (void)dealloc;
- (void)beginResolving;
- (void)beginLoadingUpdates;
- (void)endLoadingUpdates;
- (void)sendCommand:(unsigned int)command options:(id)options appOptions:(unsigned int)options completion:(id /* block */)completion;
- (void)destinationWithCompletion:(id /* block */)completion;
- (void)_reloadWithReason:(id)reason;
- (id)_loadNowPlayingStateForPlayerPath:(id)path error:(id *)error;
- (void)_requestPlaybackQueueForPlayerPath:(id)path request:(id)request queue:(id)queue completion:(id /* block */)completion;
- (void)_requestContentItemArtwork:(id)artwork forPlayerPath:(id)path queue:(id)queue completion:(id /* block */)completion;
- (void)_requestSupportedCommandsForPlayerPath:(id)path queue:(id)queue completion:(id /* block */)completion;
- (void)_requestPlayerLastPlayingDateForPlayerPath:(id)path queue:(id)queue completion:(id /* block */)completion;
- (void)_requestClientPropertiesForPlayerPath:(id)path queue:(id)queue completion:(id /* block */)completion;
- (void)destinationResolverDestinationDidInvalidate:(id)invalidate;
- (void)destinationResolver:(id)resolver playerPathDidChange:(id)change;
- (void)destinationResolver:(id)resolver didFailWithError:(id)error;
- (void)_onQueue_clearStateForResolvedPlayerPath;
- (void)_notifyDelegateOfNewResponse:(id)response;
- (void)_notifyDelegateOfPlaybackStateChange:(unsigned int)change;
- (void)_notifyDelegateOfPlaybackQueueChange:(id)change;
- (void)_notifyDelegateOfUpdatedContentItemsWithContentItems:(id)items;
- (void)_notifyDelegateOfUpdatedArtwork:(id)artwork;
- (void)_notifyDelegateOfSupportedCommandsChange:(id)change;
- (void)_notifyDelegateOfUpdatedPlayerLastPlayingDate:(id)date;
- (void)_notifyDelegateOfUpdatedClientProperties:(id)properties;
- (void)_notifyDelegateOfPlayerPathChange:(id)change;
- (void)_notifyDelegateOfInvalidation;
- (void)_notifyDelegateOfError:(id)error;
- (void)_handlePlaybackQueueChangedNotification:(id)notification;
- (void)_handlePlaybackQueueContentItemsChangedNotification:(id)notification;
- (void)_handlePlaybackQueueContentItemsArtworkChangedNotification:(id)notification;
- (void)_handlePlaybackStateChangedNotification:(id)notification;
- (void)_handleSupportedCommandsChangedNotification:(id)notification;
- (void)_handleClientPropertiesDidChange:(id)change;
- (void)_registerNotificationHandlersForResolvedPlayerPath:(id)path;
- (void)_unregisterNotificationHandlers;
@end

#endif /* MRV3NowPlayingController_h */
