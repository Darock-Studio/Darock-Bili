//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.1.0.0
//
#ifndef MRProtocolClientConnection_h
#define MRProtocolClientConnection_h
@import Foundation;

#include "MRDeviceInfo.h"
#include "MRExternalDeviceTransportConnection.h"
#include "MRExternalDeviceTransportConnectionDelegate-Protocol.h"
#include "MRProtocolClientConnectionDelegate-Protocol.h"
#include "MRSupportedProtocolMessages.h"
#include "MSVMessageParserDelegate-Protocol.h"

@class MSVMessageParser, NSError, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface MRProtocolClientConnection : NSObject<MSVMessageParserDelegate, MRExternalDeviceTransportConnectionDelegate> {
  /* instance variables */
  MSVMessageParser *_parser;
  unsigned long long _firstClientNanoseconds;
  unsigned long long _firstDeviceTicks;
  NSMutableDictionary *_pendingReplyQueue;
}

@property (retain, nonatomic) NSError *error;
@property (retain, nonatomic) MRDeviceInfo *deviceInfo;
@property (retain, nonatomic) MRSupportedProtocolMessages *supportedMessages;
@property (retain, nonatomic) NSString *label;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) BOOL isValid;
@property (readonly, nonatomic) BOOL disconnected;
@property (readonly, nonatomic) MRExternalDeviceTransportConnection *connection;
@property (weak, nonatomic) NSObject<MRProtocolClientConnectionDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConnection:(id)connection queue:(id)queue;
- (void)dealloc;
- (void)sendMessage:(id)message;
- (void)sendMessage:(id)message reply:(id /* block */)reply;
- (void)sendMessage:(id)message timeout:(double)timeout reply:(id /* block */)reply;
- (void)disconnectWithError:(id)error;
- (id)encryptDataForMessage:(id)message;
- (id)decryptData:(id)data error:(id *)error;
- (id)dataForMessage:(id)message;
- (void)transportDidClose:(id)close error:(id)error;
- (void)transport:(id)transport didReceiveData:(id)data;
- (void)parser:(id)parser didParseMessage:(id)message;
@end

#endif /* MRProtocolClientConnection_h */
