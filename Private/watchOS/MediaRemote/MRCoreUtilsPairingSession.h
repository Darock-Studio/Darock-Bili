//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.1.0.0
//
#ifndef MRCoreUtilsPairingSession_h
#define MRCoreUtilsPairingSession_h
@import Foundation;

#include "MRCryptoPairingSession.h"
#include "MRDeviceInfo.h"
#include "MRPasscodeCredentials.h"

@class NSArray, NSData, NSMutableData, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface MRCoreUtilsPairingSession : MRCryptoPairingSession {
  /* instance variables */
  MRPasscodeCredentials *_credentials;
  struct PairingSessionPrivate * _pairingSession;
  struct { void *context; undefined *showSetupCode_f; undefined *hideSetupCode_f; undefined *promptForSetupCode_f; undefined *copyIdentity_f; undefined *findPeer_f; undefined *savePeer_f; undefined *resumeRequest_f; undefined *resumeResponse_f; } _pairingDelegate;
  NSObject<OS_dispatch_queue> *_queue;
}

@property (retain, nonatomic) NSData *inputKey;
@property (retain, nonatomic) NSMutableData *inputNonce;
@property (retain, nonatomic) NSData *outputKey;
@property (retain, nonatomic) NSMutableData *outputNonce;
@property (readonly, nonatomic) MRDeviceInfo *pairedPeerDevice;
@property (readonly, nonatomic) NSArray *pairedPeerDevices;
@property (readonly, nonatomic) NSMutableDictionary *mediaRemotePairedDevices;
@property (readonly, nonatomic) NSString *peerIdentifier;
@property (readonly, nonatomic) unsigned long long state;
@property (readonly, nonatomic) BOOL hasExchangedMessage;
@property (nonatomic) unsigned int pairingFlags;

/* instance methods */
- (id)initWithRole:(unsigned long long)role device:(id)device;
- (void)dealloc;
- (BOOL)isValid;
- (BOOL)isPaired;
- (id)pairedDevices;
- (void)open;
- (void)close;
- (void)handlePairingExchangeData:(id)data completion:(id /* block */)completion;
- (void)handlePairingFailureWithStatus:(int)status;
- (id)encryptData:(id)data withError:(id *)error;
- (id)decryptData:(id)data withError:(id *)error;
- (BOOL)deleteIdentityWithError:(id *)error;
- (void)openInState:(unsigned long long)state;
- (BOOL)shouldAutoRetryPairingExchange:(id)exchange;
- (id)initializePairingSession:(struct PairingSessionPrivate *)session;
- (id)addPeer;
- (id)removePeer;
- (id)updatePeer;
@end

#endif /* MRCoreUtilsPairingSession_h */
