//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.1.0.0
//
#ifndef MRExternalDevice_h
#define MRExternalDevice_h
@import Foundation;

#include "MRDeviceInfo.h"
#include "MRGroupSessionToken.h"
#include "MROrigin.h"
#include "MRSupportedProtocolMessages.h"

@class NSArray, NSMutableDictionary, NSString;

@interface MRExternalDevice : NSObject {
  /* instance variables */
  NSMutableDictionary *_discoveryOutputDevicesCallbacks;
  NSMutableDictionary *_discoveryConfigurations;
  NSMutableDictionary *_discoveryModes;
}

@property (readonly, nonatomic) MRSupportedProtocolMessages *supportedMessages;
@property (nonatomic) BOOL usingSystemPairing;
@property (nonatomic) long long connectionRecoveryBehavior;
@property (readonly, nonatomic) BOOL supportsIdleDisconnection;
@property (readonly, nonatomic) BOOL supportsExternalDiscovery;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *hostName;
@property (readonly, nonatomic) long long port;
@property (readonly, nonatomic) MROrigin *customOrigin;
@property (readonly, nonatomic) NSString *uid;
@property (readonly, nonatomic) MRDeviceInfo *deviceInfo;
@property (readonly, nonatomic) NSArray *personalOutputDevices;
@property (readonly, nonatomic) MRGroupSessionToken *groupSessionToken;
@property (nonatomic) BOOL wantsNowPlayingNotifications;
@property (nonatomic) BOOL wantsNowPlayingArtworkNotifications;
@property (nonatomic) BOOL wantsVolumeNotifications;
@property (nonatomic) BOOL wantsOutputDeviceNotifications;
@property (nonatomic) BOOL wantsSystemEndpointNotifications;
@property (nonatomic) BOOL wantsEndpointChangeNotifications;
@property (copy, nonatomic) NSArray *subscribedPlayerPaths;
@property (readonly, nonatomic) BOOL valid;
@property (readonly, nonatomic) BOOL connected;
@property (readonly, nonatomic) unsigned int connectionState;
@property (readonly, nonatomic) BOOL paired;

/* instance methods */
- (id)_init;
- (BOOL)isPaired;
- (BOOL)isUsingSystemPairing;
- (void)disconnect:(id)disconnect;
- (void)setPairingCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setConnectionStateCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setNameCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setPairingAllowedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setCustomDataCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setOutputDevicesUpdatedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setOutputDevicesRemovedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeChangedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeControlCapabilitiesCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setVolumeMutedChangedCallback:(id /* block */)callback withQueue:(id)queue;
- (void)setGroupSessionTokenCallback:(id /* block */)callback withQueue:(id)queue;
- (void)removeFromParentGroup:(id)group queue:(id)queue completion:(id /* block */)completion;
- (void)outputDeviceVolumeControlCapabilities:(id)capabilities queue:(id)queue completion:(id /* block */)completion;
- (void)outputDeviceVolume:(id)volume queue:(id)queue completion:(id /* block */)completion;
- (void)setOutputDeviceVolume:(float)volume outputDeviceUID:(id)uid queue:(id)queue completion:(id /* block */)completion;
- (void)setOutputDeviceVolume:(float)volume outputDeviceUID:(id)uid details:(id)details queue:(id)queue completion:(id /* block */)completion;
- (void)adjustOutputDeviceVolume:(long long)volume outputDeviceUID:(id)uid details:(id)details queue:(id)queue completion:(id /* block */)completion;
- (void)muteOutputDeviceVolume:(BOOL)volume outputDeviceUID:(id)uid details:(id)details queue:(id)queue completion:(id /* block */)completion;
- (void)setListeningMode:(id)mode outputDeviceUID:(id)uid queue:(id)queue completion:(id /* block */)completion;
- (void)setConversationDetectionEnabled:(BOOL)enabled outputDeviceUID:(id)uid queue:(id)queue completion:(id /* block */)completion;
- (void)modifyTopologyWithRequest:(id)request withReplyQueue:(id)queue completion:(id /* block */)completion;
- (void)createHostedEndpointWithOutputDeviceUIDs:(id)uids queue:(id)queue completion:(id /* block */)completion;
- (void)sendButtonEvent:(struct _MRHIDButtonEvent { unsigned int x0; unsigned int x1; BOOL x2; })event;
- (void)sendCustomData:(id)data withName:(id)name;
- (void)ping:(double)ping callback:(id /* block */)callback withQueue:(id)queue;
- (id)errorForCurrentState;
- (id)currentClientUpdatesConfigMessage;
- (void)sendClientUpdatesConfigMessage;
- (void)connectWithOptions:(unsigned int)options;
- (void)connectWithOptions:(unsigned int)options userInfo:(id)info;
- (void)connectWithOptions:(unsigned int)options userInfo:(id)info completion:(id /* block */)completion;
- (BOOL)isConnected;
- (id)registerDiscoveryTokenForConfiguration:(id)configuration;
- (void)setDiscoveryMode:(unsigned int)mode forToken:(id)token;
- (void)setDiscoveryMode:(unsigned int)mode forConfiguration:(id)configuration;
- (void)setDiscoveryOutputDevicesChangedCallback:(id /* block */)callback forToken:(id)token;
- (void)unregisterDiscoveryToken:(id)token;
- (void)notifyDiscoveryOutputDevicesChanged:(id)changed forConfiguration:(id)configuration;
- (id)discoveryDescription;
- (BOOL)isValid;
@end

#endif /* MRExternalDevice_h */
