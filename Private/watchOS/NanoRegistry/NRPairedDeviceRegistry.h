//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 920.3.0.0.0
//
#ifndef NRPairedDeviceRegistry_h
#define NRPairedDeviceRegistry_h
@import Foundation;

#include "NRRegistryClient.h"
#include "NRCallbackArray.h"
#include "NRPairedDeviceRegistryXPCFrameworkDelegate-Protocol.h"

@class NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface NRPairedDeviceRegistry : NRRegistryClient<NRPairedDeviceRegistryXPCFrameworkDelegate> {
  /* instance variables */
  BOOL _disconnected;
  unsigned short _lastCompatibilityState;
  NSMutableDictionary *_legacyDevices;
  NSObject<OS_dispatch_queue> *_pairedDeviceRegistryDeviceListQueue;
  NSObject<OS_dispatch_queue> *_pairedRegistryGetDevicesQueue;
  unsigned long long _lastStatus;
  NRCallbackArray *_waitingForRegistryUpdateBlocks;
  unsigned long long _callCount;
}

@property (readonly, nonatomic) unsigned long long status;

/* class methods */
+ (Class)proxyClass;
+ (BOOL)shouldBoostProcess;
+ (id)sharedInstance;
+ (id /* block */)activeDeviceSelectorBlock;
+ (id /* block */)pairedDevicesSelectorBlock;
+ (id /* block */)activePairedDeviceSelectorBlock;
+ (id /* block */)setupCompletedDevicesSelectorBlock;
+ (id)getActiveDeviceMiniStore;
+ (BOOL)isActiveDeviceAltAccount;

/* instance methods */
- (void)_submitAlbertPairingReport;
- (id)_getLocalDeviceCollection;
- (id)_getChangeHistory;
- (id)_getSecureProperties:(id)properties;
- (id)_deviceIDAtSwitchIndex:(unsigned int)index date:(id *)date;
- (void)_invalidateActiveDeviceAssertionWithIdentifier:(id)identifier;
- (void)_getActiveDeviceAssertionsWithInlineBlock:(id /* block */)block;
- (void)_pingActiveGizmoWithPriority:(long long)priority withMessageSize:(unsigned long long)size withBlock:(id /* block */)block;
- (id)_getClientInfo;
- (id)applyDiff:(id)diff;
- (BOOL)isKeychainEnabled;
- (void)checkIfFlaggedForRecoveryWithCompletion:(id /* block */)completion;
- (void)clearRecoveryFlagWithCompletion:(id /* block */)completion;
- (void)logCallFrequency;
- (void)threadIsBlockedWaitingOn_nanoregistryd_syncGrabLegacyRegistryWithBlock:(id /* block */)block;
- (long long)maxPairedDeviceCount;
- (long long)maxTinkerPairedDeviceCount;
- (BOOL)watchNeedsGraduation;
- (void)clearWatchNeedsGraduation:(id /* block */)graduation;
- (void)setWatchNeedsGraduation:(id /* block */)graduation;
- (BOOL)pairedDeviceCountIsLessThanMaxPairedDevices;
- (BOOL)pairedDeviceCountIsLessThanMaxTinkerPairedDevices;
- (BOOL)pairedDeviceSupportQuickSwitch;
- (void)setActivePairedDevice:(id)device operationHasCompleted:(id /* block */)completed;
- (void)setActivePairedDevice:(id)device isMagicSwitch:(BOOL)switch operationHasCompleted:(id /* block */)completed;
- (void)setActivePairedDevice:(id)device withActiveDeviceAssertionHandler:(id /* block */)handler;
- (id)init;
- (id)initWithBoost:(BOOL)boost;
- (BOOL)supportsWatch;
- (id)initWithBoost:(BOOL)boost disconnected:(BOOL)disconnected;
- (id)_;
- (unsigned long long)_getStatusWithCollection:(id)collection;
- (unsigned short)compatibilityState;
- (void)getDevicesWithBlock:(id /* block */)block;
- (id)getDevices;
- (id)getPairedDevices;
- (id)getActivePairedDeviceIncludingAltAccount;
- (id)getActivePairedDeviceExcludingAltAccount;
- (id)getActivePairedDevice;
- (id)getSetupCompletedDevices;
- (id)getAllDevices;
- (id)getAllDevicesWithArchivedDevices;
- (id)getDevicesMatching:(id /* block */)matching;
- (id)getAllDevicesWithArchivedDevicesMatching:(id /* block */)matching;
- (id)getAllDevicesWithArchivedAltAccountDevicesMatching:(id /* block */)matching;
- (void)companionOOBDiscoverAndPairWithName:(id)name withOutOfBandPairingKey:(id)key withOptions:(id)options operationHasBegun:(id /* block */)begun;
- (void)companionPasscodePairWithDevice:(id)device withOptions:(id)options operationHasBegun:(id /* block */)begun;
- (void)gizmoOOBAdvertiseAndPairWithName:(id)name operationHasBegun:(id /* block */)begun;
- (void)gizmoPasscodeAdvertiseAndPairWithName:(id)name operationHasBegun:(id /* block */)begun;
- (void)notifyActivationCompleted:(id)completed withSuccess:(BOOL)success;
- (void)notifyPasscode:(id)passcode forDevice:(id)device;
- (void)notifyPairingShouldContinue;
- (void)unpairWithDevice:(id)device shouldObliterate:(BOOL)obliterate operationHasBegun:(id /* block */)begun;
- (void)unpairWithDevice:(id)device withOptions:(id)options operationHasBegun:(id /* block */)begun;
- (void)pairWithSimulator:(id)simulator withQueue:(id)queue withCompletion:(id /* block */)completion;
- (void)unpairWithSimulator:(id)simulator withQueue:(id)queue withCompletion:(id /* block */)completion;
- (void)switchToSimulator:(id)simulator withQueue:(id)queue withCompletion:(id /* block */)completion;
- (void)fakePairedSyncIsCompleteWithCompletion:(id /* block */)completion;
- (void)enterCompatibilityState:(unsigned short)state forDevice:(id)device;
- (void)pairingStorePathPairingID:(id /* block */)id;
- (void)altAccountPairingStorePathPairingID:(id /* block */)id;
- (void)waitForPairingStorePathPairingID:(id /* block */)id;
- (void)waitForAltAccountPairingStorePathPairingID:(id /* block */)id;
- (id)waitForActivePairedDevice;
- (id)waitForActivePairedOrAltAccountDevice;
- (id)waitForActiveOrAltAccountDevice;
- (id)waitForActiveDevice;
- (void)abortPairing;
- (void)abortPairingWithReason:(id)reason;
- (void)suspendPairingClientCrashMonitoring;
- (void)resumePairingClientCrashMonitoring;
- (id)pairingStorePath;
- (id)pairingID;
- (BOOL)isPaired;
- (id)blockAndQueryVersions;
- (void)userIsCheckingForUpdate;
- (long long)pairingCompatibilityVersion;
- (long long)maxPairingCompatibilityVersion;
- (long long)minPairingCompatibilityVersion;
- (long long)minQuickSwitchCompatibilityVersion;
- (void)retriggerUnpairInfoDialog;
- (void)beginDiscovery;
- (void)endDiscovery;
- (void)overrideSignalStrengthLimit:(long long)limit;
- (BOOL)supportsPairedDevice;
- (void)xpcDeviceID:(id)id needsPasscode:(id)passcode;
- (void)xpcHasNewOOBKey:(id)oobkey;
- (void)sendDevicesUpdatedNotification;
- (void)completeRTCPairingMetricForMetricID:(id)id withSuccess:(id /* block */)success;
- (void)updateWatchBuddyStage:(unsigned int)stage forPairingID:(id)id;
- (id)deviceForPairingID:(id)id;
- (id)deviceForBTDeviceID:(id)id;
- (id)deviceForBluetoothID:(id)id;
- (id)nonActiveDeviceForBTDeviceID:(id)id;
- (id)nonActiveDeviceForBluetoothID:(id)id;
- (id)deviceForIDSDevice:(id)idsdevice;
- (id)nonActiveDeviceForIDSDevice:(id)idsdevice;
- (id)deviceForNRDevice:(id)nrdevice fromIDSDevices:(id)idsdevices;
- (id)deviceIDForNRDevice:(id)nrdevice;
- (id)deviceIDForIDSDevice:(id)idsdevice;
- (void)pairingClientDidEnterPhase:(id)phase;
- (void)pairingClientSetAltAccountName:(id)name forDevice:(id)device completion:(id /* block */)completion;
- (void)pairingClientSetAltAccountName:(id)name altDSID:(id)dsid forDevice:(id)device completion:(id /* block */)completion;
- (void)pairingClientSetPairingParentName:(id)name pairingParentAltDSID:(id)dsid forDevice:(id)device completion:(id /* block */)completion;
- (void)setWatchBuddyPushedSyncTrapUI:(id /* block */)ui;
- (void)setWatchBuddyCompletedSetupSteps:(id /* block */)steps;
- (unsigned int)switchIndex;
- (void)getSwitchEventsFromIndex:(unsigned int)index inlineCallback:(id /* block */)callback;
- (void)getMigrationPairingCharacteristicReadDataWithQueue:(id)queue completion:(id /* block */)completion;
- (void)putMigrationChallengeCharacteristicWriteData:(id)data queue:(id)queue completion:(id /* block */)completion;
- (void)startWatchSetupPush;
- (BOOL)isWatchSetupPushActive;
- (void)stopWatchSetupPush;
- (void)waitForWatchPairingExtendedMetadataForAdvertisedName:(id)name completion:(id /* block */)completion;
- (void)setMigrationConsented:(BOOL)consented forDeviceID:(id)id withBlock:(id /* block */)block;
- (void)setMigrationConsented:(BOOL)consented forDevice:(id)device withBlock:(id /* block */)block;
- (void)beginMigrationWithDevice:(id)device passcode:(id)passcode withBlock:(id /* block */)block;
- (void)beginMigrationWithDevice:(id)device withCompletion:(id /* block */)completion;
- (id)lastMigrationRequestPhoneName;
- (id)migrationConsentRequestData;
- (id)devicesFromMigrationConsentRequestData:(id)data;
- (void)keepPhoneUnlockedInternalTestSPI:(id /* block */)spi;
- (unsigned long long)lastSyncSwitchIndex;
- (unsigned long long)migrationCountForPairingID:(id)id;
- (BOOL)hasCompletedInitialSyncForPairingID:(id)id;
- (BOOL)isAssertionActive:(id)active;
- (void)isPhoneReadyToMigrateDevice:(id)device withCompletion:(id /* block */)completion;
@end

#endif /* NRPairedDeviceRegistry_h */
