//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 920.3.0.0.0
//
#ifndef NRMutableDeviceCollection_h
#define NRMutableDeviceCollection_h
@import Foundation;

#include "NRMutableStateBase.h"
#include "NRMutableDevice.h"
#include "NRMutableStateParentDelegate-Protocol.h"
#include "NRPBMutableDeviceCollection.h"
#include "NSFastEnumeration-Protocol.h"

@class NSMutableDictionary, NSUUID;

@interface NRMutableDeviceCollection : NRMutableStateBase<NRMutableStateParentDelegate, NSFastEnumeration> {
  /* instance variables */
  NSMutableDictionary *_deviceCollection;
  NSMutableDictionary *_childMap;
}

@property (readonly, nonatomic) NRMutableDevice *activeDevice;
@property (retain, nonatomic) NSUUID *activeDeviceID;
@property (readonly, nonatomic) BOOL isPaired;
@property (readonly, nonatomic) BOOL isAllAltAccount;
@property (retain, nonatomic) NRPBMutableDeviceCollection *protobuf;

/* class methods */
+ (void)parseDiff:(id)diff forPropertyChange:(id)change withBlock:(id /* block */)block;
+ (id)diffFrom:(id)from to:(id)to;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)_diffsToChangeActiveDeviceToDeviceID:(id)id;
- (BOOL)paired;
- (BOOL)allAltAccount;
- (id)init;
- (void)setDevice:(id)device forPairingID:(id)id;
- (void)removeDeviceForPairingID:(id)id;
- (id)deviceForPairingID:(id)id;
- (id)allPairingIDs;
- (unsigned long long)count;
- (void)invalidate;
- (id)applyDiff:(id)diff upOnly:(BOOL)only notifyParent:(BOOL)parent unconditional:(BOOL)unconditional;
- (void)child:(id)child didApplyDiff:(id)diff;
- (void)_createIndex;
- (id)initWithCoder:(id)coder;
- (id)initWithProtobuf:(id)protobuf;
- (void)encodeWithCoder:(id)coder;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)description;
- (id)objectForKeyedSubscript:(id)subscript;
- (void)setObject:(id)object forKeyedSubscript:(id)subscript;
- (id)copyWithZone:(struct _NSZone *)zone;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
@end

#endif /* NRMutableDeviceCollection_h */
