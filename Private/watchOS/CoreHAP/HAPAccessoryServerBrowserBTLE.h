//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HAPAccessoryServerBrowserBTLE_h
#define HAPAccessoryServerBrowserBTLE_h
@import Foundation;

#include "HAPAccessoryServerBrowser.h"
#include "CBCentralManagerDelegate-Protocol.h"
#include "CBConnectionsObserver.h"
#include "HAPAccessoryServerBrowserWiProxBTLE.h"
#include "HAPAccessoryServerBrowserWiProxBTLEDelegate-Protocol.h"
#include "HMFLogging-Protocol.h"

@class BOOL *, CBCentralManager, HMFActivity, NSMapTable, NSMutableArray, NSMutableOrderedSet, NSString;
@protocol HAPAccessoryServerBrowserBTLEDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface HAPAccessoryServerBrowserBTLE : HAPAccessoryServerBrowser<CBCentralManagerDelegate, HAPAccessoryServerBrowserWiProxBTLEDelegate, HMFLogging> {
  /* instance variables */
  NSMutableOrderedSet *_peripheralsWithConnectionRequests;
  NSMutableOrderedSet *_peripheralsPendingConnection;
}

@property (nonatomic) unsigned long long qosLimits;
@property (weak, nonatomic) NSObject<HAPAccessoryServerBrowserBTLEDelegate> *delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (retain, nonatomic) CBCentralManager *centralManager;
@property (retain, nonatomic) CBConnectionsObserver *connectionsObserver;
@property (retain, nonatomic) HAPAccessoryServerBrowserWiProxBTLE *hapWiProxBLEBrowser;
@property (retain, nonatomic) NSMapTable *discoveredPeripheralsWithAccessories;
@property (retain, nonatomic) NSMapTable *recentlySeenPairedPeripherals;
@property (retain, nonatomic) NSMutableArray *powerOnCentralManagerCompletions;
@property (copy, nonatomic) id /* block */ reachabilityCompletion;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *targetedScanTimer;
@property (retain, nonatomic) HMFActivity *targetedScanActivity;
@property (retain, nonatomic) NSMutableArray *targetedScanAccessoryIdentifiers;
@property (retain, nonatomic) NSMapTable *identifiersWithReachabilityScanTuples;
@property long long peripheralDisconnectionTimeout;
@property (retain) NSMapTable *peripheralDisconnectionMonitorMap;
@property (nonatomic) long long scanState;
@property (readonly, nonatomic) BOOL performingGeneralScan;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (void)connectToBTLEAccessoryServer:(id)server;
- (void)disconnectFromBTLEAccessoryServer:(id)server;
- (unsigned long long)_parseAdvertisementData:(id)data forPeripheral:(id)peripheral name:(id *)name pairingUsername:(id *)username statusFlags:(id *)flags stateNumber:(id *)number category:(id *)category configNumber:(id *)number setupHash:(id *)hash;
- (void)setConnectionLatency:(long long)latency forPeripheral:(id)peripheral;
- (id)cachedAccessoryForIdentifier:(id)identifier;
- (void)removeCachedAccessoryWithIdentifier:(id)identifier;
- (void)saveCacheToDisk:(id)disk;
- (void)updateBroadcastKeyForIdentifier:(id)identifier key:(id)key keyUpdatedStateNumber:(id)number keyUpdatedTime:(double)time;
- (void)updateCachedStateForIdentifier:(id)identifier stateNumber:(id)number;
- (BOOL)isPerformingGeneralScan;
- (id)initWithQueue:(id)queue;
- (long long)linkType;
- (void)setDelegate:(id)delegate queue:(id)queue;
- (BOOL)_canStartScan;
- (void)startDiscoveringAccessoryServers;
- (void)_startDiscoveringAccessoryServers;
- (void)stopDiscoveringAccessoryServers;
- (void)updateRemoteBrowsing:(BOOL)browsing shouldScan:(BOOL)scan;
- (void)matchAccessoryServerWithSetupID:(id)id serverIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)_matchAccessoryServerWithSetupID:(id)id serverIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)pauseScans;
- (BOOL)remoteBrowsingEnabled;
- (BOOL)remoteBrowsingAndScanEnabled;
- (void)_stopActiveScanWithForce:(BOOL)force;
- (void)_startBrowsingForLegacyHAPBTLE100Accessories;
- (BOOL)_hasPairedAccessoriesOfType:(unsigned long long)type;
- (BOOL)_hasRecentlySeenAccessoriesWithIdentifiers:(id)identifiers;
- (void)_startScanningForReachability:(id)reachability;
- (void)_powerOnCentralManagerWithCompletion:(id /* block */)completion;
- (void)_callPowerOnCompletionsWithError:(id)error;
- (void)discoverAccessoryServerWithIdentifier:(id)identifier;
- (void)_discoverAccessoryServerWithIdentifier:(id)identifier;
- (void)setReachabilityCompletionHandler:(id /* block */)handler;
- (void)probeReachabilityForAccessoryServersWithIdentifiers:(id)identifiers forceScan:(BOOL)scan withCompletion:(id /* block */)completion;
- (void)_probeReachabilityForAccessoryServersWithIdentifiers:(id)identifiers forceScan:(BOOL)scan withCompletion:(id /* block */)completion;
- (void)resetLastSeenForAccessoryServersWithIdentifiers:(id)identifiers;
- (void)configureAccessoryWithIdentifier:(id)identifier trackState:(BOOL)state connectionPriority:(unsigned long long)priority;
- (void)retrieveCurrentStateForIdentifier:(id)identifier stateNumber:(id *)number isReachable:(BOOL *)reachable linkQuality:(unsigned long long *)quality lastSeen:(id *)seen;
- (void)updateStateForIdentifier:(id)identifier stateNumber:(id)number;
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)identifiers;
- (void)updateScanInBackground:(BOOL)background;
- (void)configureBTLEQoSLimits:(unsigned long long)slimits;
- (void)markNotifyingCharacteristicUpdatedForIdentifier:(id)identifier;
- (void)deRegisterAccessoryWithIdentifier:(id)identifier;
- (void)resetPairedAccessories;
- (void)_forgetPairedAccessoryWithIdentifier:(id)identifier;
- (id)_recentlySeenPairedPeripheralTupleWithPeripheral:(id)peripheral;
- (void)_removeIdentifiersForReachabilityScan;
- (void)_performTimedScanForIdentifiers:(id)identifiers forceScan:(BOOL)scan withCompletion:(id /* block */)completion;
- (void)_notifyDelegatesOfRemovedAccessoryServer:(id)server error:(id)error;
- (void)_removeDiscoveredPeripheralsWithIdentifier:(id)identifier;
- (id)_discoveredAccessoryServerTupleForBLEPeripheral:(id)bleperipheral shouldMerge:(BOOL)merge;
- (void)_didDiscoverPeripheral:(id)peripheral accessoryName:(id)name pairingIdentifier:(id)identifier format:(unsigned long long)format statusFlags:(id)flags stateNumber:(id)number category:(id)category configNumber:(id)number setupHash:(id)hash encryptedPayload:(id)payload whbStableIdentifier:(id)identifier;
- (void)centralManagerDidUpdateState:(id)state;
- (void)centralManager:(id)manager didDiscoverPeripheral:(id)peripheral advertisementData:(id)data RSSI:(id)rssi;
- (void)centralManager:(id)manager didConnectPeripheral:(id)peripheral;
- (void)connectedHAPPeripheral:(id)happeripheral;
- (void)centralManager:(id)manager didFailToConnectPeripheral:(id)peripheral error:(id)error;
- (void)failedToConnectHAPPeripheral:(id)happeripheral error:(id)error;
- (void)centralManager:(id)manager didDisconnectPeripheral:(id)peripheral error:(id)error;
- (void)disconnectedHAPPeripheral:(id)happeripheral error:(id)error;
- (void)_disconnectFromHAPBLEPeripheral:(id)hapbleperipheral cbPeripheral:(id)peripheral;
- (void)_stopMonitorDisconnectionOfCBPeripheral:(id)cbperipheral;
- (void)_monitorDisconnectionOfHAPPeripheral:(id)happeripheral peripheral:(id)peripheral;
- (id)_cbPeripheralForHAPBLEPeripheral:(id)hapbleperipheral routeMode:(unsigned char *)mode;
- (id)_cbPeripheralForPeripheralUUID:(id)uuid stableIdentifier:(id)identifier routeMode:(unsigned char *)mode;
- (id)_blePeripheralForCBPeripheral:(id)cbperipheral;
- (id)_blePeripheralForAccessoryServerIdentifier:(id)identifier;
- (id)_bleAccessoryServerTupleForIdentifier:(id)identifier;
- (void)accessoryServerBrowserBTLE:(id)btle didDiscoverHAPPeripheral:(id)happeripheral;
- (id)retrieveCBPeripheralWithUUID:(id)uuid blePeripheral:(id)peripheral;
- (id)_cachedCharacteristicForInstanceID:(id)id identifier:(id)identifier;
- (BOOL)_delegateRespondsToSelector:(SEL)selector;
- (id)hapCharacteristicsForEncryptedPayload:(id)payload identifier:(id)identifier shouldConnect:(BOOL *)connect;
- (void)_createHAPAccessoryAndNotifyDelegateWithPeripheral:(id)peripheral name:(id)name pairingUsername:(id)username statusFlags:(id)flags stateNumber:(id)number stateChanged:(BOOL)changed connectReason:(unsigned char)reason configNumber:(id)number category:(id)category connectionIdleTime:(unsigned char)time format:(unsigned long long)format setupHash:(id)hash encryptedPayload:(id)payload whbStableIdentifier:(id)identifier;
- (void)_performTimedConnectionRequestForIdentifier:(id)identifier;
- (id)peripheralsWithConnectionRequests;
- (void)_addToActiveConnections:(id)connections;
- (void)_removeFromActiveConnections:(id)connections;
- (id)peripheralsPendingConnection;
- (void)_addToPendingConnections:(id)connections;
- (void)_removeFromPendingConnections:(id)connections;
- (void)_connectHAPPeripheralWhenAllowed:(id)allowed;
- (void)_connectPendingConnections;
- (void)_performTargetedScanForAccessoryWithIdentifier:(id)identifier;
- (void)_reportReachabilityForAccessoryWithIdentifier:(id)identifier;
- (BOOL)_shouldCreateHAPAccessoryServerWithIdentifier:(id)identifier statusFlags:(id)flags stateNumber:(id)number category:(id)category configNumber:(id)number name:(id)name forPeripheral:(id)peripheral advertisementFormat:(unsigned long long)format setupHash:(id)hash stateChanged:(BOOL *)changed connectReason:(unsigned char *)reason;
- (void)_updateTargetedScanTimer;
- (void)_invalidTargetedScanActivity;
- (void)_handleTargetedScanTimeout;
- (id)logIdentifier;
@end

#endif /* HAPAccessoryServerBrowserBTLE_h */
