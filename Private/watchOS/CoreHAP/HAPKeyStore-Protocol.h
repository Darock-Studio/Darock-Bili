//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HAPKeyStore_Protocol_h
#define HAPKeyStore_Protocol_h
@import Foundation;

@protocol HAPKeyStore <NSObject>

@property (readonly, nonatomic) NSString *activeControllerPairingIdentifier;

/* instance methods */
- (id)getLocalPairingIdentity:(id *)identity;
- (id)getOrCreateLocalPairingIdentity:(id *)identity;
- (BOOL)saveLocalPairingIdentity:(id)identity syncable:(BOOL)syncable error:(id *)error;
- (BOOL)getControllerPublicKey:(id *)key secretKey:(id *)key username:(id *)username allowCreation:(BOOL)creation error:(id *)error;
- (BOOL)getControllerPublicKey:(id *)key secretKey:(id *)key username:(id *)username allowCreation:(BOOL)creation forAccessory:(id)accessory error:(id *)error;
- (BOOL)getControllerPublicKey:(id *)key secretKey:(id *)key keyPair:(id *)pair username:(id *)username allowCreation:(BOOL)creation error:(id *)error;
- (BOOL)getControllerPublicKey:(id *)key secretKey:(id *)key keyPair:(id *)pair username:(id *)username allowCreation:(BOOL)creation forAccessory:(id)accessory error:(id *)error;
- (BOOL)saveKeyPair:(id)pair username:(id)username syncable:(BOOL)syncable error:(id *)error;
- (BOOL)deserializeKeyPair:(id)pair publicKey:(id *)key secretKey:(id *)key error:(id *)error;
- (BOOL)getAllAvailableControllerPublicKeys:(id *)keys secretKeys:(id *)keys userNames:(id *)names error:(id *)error;
- (BOOL)updateActiveControllerPairingIdentifier:(id)identifier;
- (BOOL)removeControllerKeyPairWithError:(id *)error;
- (BOOL)removeControllerKeyPairLeaveTombstone:(BOOL)tombstone error:(id *)error;
- (BOOL)updateCurrentiCloudIdentifier:(id)identifier controllerPairingIdentifier:(id)identifier error:(id *)error;
- (BOOL)getCurrentiCloudIdentifier:(id *)identifier controllerPairingIdentifier:(id *)identifier error:(id *)error;
- (BOOL)removeControllerKeyPairForIdentifier:(id)identifier leaveTombstone:(BOOL)tombstone error:(id *)error;
- (id)readPublicKeyForAccessoryName:(id)name registeredWithHomeKit:(BOOL *)kit error:(id *)error;
- (id)readControllerPairingKeyForAccessory:(id)accessory error:(id *)error;
- (BOOL)savePublicKey:(id)key forAccessoryName:(id)name error:(id *)error;
- (BOOL)establishRelationshipBetweenAccessoryAndControllerKey:(id)key error:(id *)error;
- (BOOL)isAccessoryAssociatedWithControllerKey:(id)key controllerID:(id *)id;
- (BOOL)registerAccessoryWithHomeKit:(id)kit error:(id *)error;
- (BOOL)removeAccessoryKeyForName:(id)name error:(id *)error;
- (BOOL)removeAllAccessoryKeys:(id *)keys;
@optional
/* instance methods */
- (BOOL)savePeripheralIdentifier:(id)identifier forAccessoryIdentifier:(id)identifier error:(id *)error;
- (BOOL)updatePeripheralIdentifier:(id)identifier forAccessoryIdentifier:(id)identifier protocolVersion:(unsigned long long)version previousVersion:(unsigned long long *)version resumeSessionID:(unsigned long long)id error:(id *)error;
- (BOOL)deletePeripheralIdentifierForAccessoryIdentifier:(id)identifier error:(id *)error;
- (BOOL)deleteAllPeripheralIdentifiers:(id *)identifiers;
- (id)readPeripheralIdentifierForAccessoryIdentifier:(id)identifier protocolVersion:(unsigned long long *)version resumeSessionID:(unsigned long long *)id error:(id *)error;
- (id)getPeripherialIdentifiersAndAccessoryNames;
- (id)getAssociatedControllerKeyForAccessory:(id)accessory;
- (id)readAccessoryPairingKeyForAccessory:(id)accessory error:(id *)error;
- (BOOL)updateAccessoryPairingKey:(id)key error:(id *)error;
- (BOOL)createAccessoryPairingKey:(id)key error:(id *)error;
- (BOOL)deletePairingKeysForAccessory:(id)accessory error:(id *)error;
- (int)createHH2ControllerKey:(id *)key secretKey:(id *)key keyPair:(id *)pair username:(id *)username;
- (id)allAccessoryPairingKeys;
- (id)allLegacyAccessoryPairingKeys;
- (id)allHH2PairingKeys;
- (id)getPreferredHH2ControllerKey;
- (id)getHH2ControllerKeyWithIdentifier:(id)identifier;
- (BOOL)isHH2KeyType:(id)type;
- (BOOL)saveHH2PairingIdentity:(id)identity syncable:(BOOL)syncable;
- (BOOL)saveAppleMediaAccessoryPairingIdentity:(id)identity;
- (id)pairingIdentityForAppleMediaAccessoryWithUUID:(id)uuid;
- (id)allKeysForType:(id)type error:(id *)error;
- (BOOL)saveAppleMediaAccessorySensorPairingIdentity:(id)identity;
- (id)pairingIdentityForAppleMediaAccessorySensorWithUUID:(id)uuid;
- (BOOL)savePairingIdentityToBackUpTable:(id)table;
@end

#endif /* HAPKeyStore_Protocol_h */
