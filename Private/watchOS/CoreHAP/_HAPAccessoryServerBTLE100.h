//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef _HAPAccessoryServerBTLE100_h
#define _HAPAccessoryServerBTLE100_h
@import Foundation;

#include "HAPAccessoryServerBTLE.h"
#include "CBPeripheralDelegate-Protocol.h"
#include "HAPSecuritySession.h"
#include "HAPSecuritySessionDelegate-Protocol.h"

@class CBCharacteristic, CBService, NSMapTable, NSMutableArray, NSString;
@protocol OS_dispatch_source;

@interface _HAPAccessoryServerBTLE100 : HAPAccessoryServerBTLE<HAPSecuritySessionDelegate, CBPeripheralDelegate> {
  /* instance variables */
  struct PairingSessionPrivate * _pairingSession;
}

@property (nonatomic) unsigned long long state;
@property (nonatomic) unsigned long long connectionRetryCount;
@property (retain, nonatomic) NSMapTable *btleServiceToHAPServiceMap;
@property (nonatomic) unsigned long long characteristicDiscoveryRequestCount;
@property (nonatomic) unsigned long long characteristicValueReadCount;
@property (nonatomic) unsigned long long metadataDiscoveryRequestCount;
@property (nonatomic) unsigned long long metadataValueReadCount;
@property (nonatomic) unsigned long long availableInstanceID;
@property (retain, nonatomic) NSMapTable *btleCharacteristicToHAPCharacteristicMap;
@property (retain, nonatomic) NSMapTable *hapCharacteristicReadCompletionQueues;
@property (retain, nonatomic) NSMapTable *hapCharacteristicWriteCompletionQueues;
@property (retain, nonatomic) NSMapTable *hapCharacteristicEnableEventCompletionQueues;
@property (retain, nonatomic) NSMutableArray *addRemovePairingOperationsQueue;
@property (retain, nonatomic) CBService *pairingService;
@property (retain, nonatomic) CBCharacteristic *pairSetupCharacteristic;
@property (retain, nonatomic) CBCharacteristic *pairVerifyCharacteristic;
@property (retain, nonatomic) CBCharacteristic *pairingFeaturesCharacteristic;
@property (retain, nonatomic) CBCharacteristic *pairingsCharacteristic;
@property (retain, nonatomic) CBService *accessoryInfoService;
@property (retain, nonatomic) CBCharacteristic *identifyCharacteristic;
@property (retain, nonatomic) CBCharacteristic *modelCharacteristic;
@property (retain, nonatomic) CBCharacteristic *serialNumberCharacteristic;
@property (retain, nonatomic) CBCharacteristic *manufacturerCharacteristic;
@property (copy, nonatomic) id /* block */ pairVerifyCompletionBlock;
@property (nonatomic) BOOL startPairingRequested;
@property (nonatomic) BOOL pairingFeaturesRead;
@property (nonatomic) unsigned long long pairingFeatureFlags;
@property (retain, nonatomic) HAPSecuritySession *securitySession;
@property (nonatomic) BOOL securitySessionOpening;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *connectionLifetimeTimer;
@property (nonatomic) double idleConnectionTimeoutInSec;
@property (nonatomic) BOOL disconnecting;
@property (nonatomic) BOOL unpairedIdentifyRequested;
@property (copy, nonatomic) id /* block */ unpairedIdentifyCompletionBlock;
@property (nonatomic) BOOL removeOnDisconnect;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)serializeCharacteristicWriteValue:(id)value characteristicFormat:(unsigned long long)format supportsAdditionalAuthentication:(BOOL)authentication authenticationData:(id)data error:(id *)error;
+ (id)deserializeCharacteristicReadData:(id)data characteristicFormat:(unsigned long long)format supportsAdditionalAuthentication:(BOOL)authentication error:(id *)error;
+ (id)_convertFromBTLEToHAPUUID:(id)hapuuid;

/* instance methods */
- (id)initWithPeripheral:(id)peripheral name:(id)name pairingUsername:(id)username statusFlags:(id)flags stateNumber:(id)number stateChanged:(BOOL)changed connectReason:(unsigned char)reason configNumber:(id)number category:(id)category setupHash:(id)hash connectionIdleTime:(unsigned char)time browser:(id)browser keyStore:(id)store whbStableIdentifier:(id)identifier;
- (void)_resetState;
- (void)dealloc;
- (unsigned long long)hapBLEProtocolVersion;
- (void)_createPrimaryAccessoryFromAdvertisementData;
- (void)generateBroadcastKey:(unsigned char)key queue:(id)queue withCompletionHandler:(id /* block */)handler;
- (void)configureCharacteristics:(id)characteristics queue:(id)queue withCompletionHandler:(id /* block */)handler;
- (void)startPairingWithRequest:(id)request;
- (void)continuePairingAfterAuthPrompt;
- (void)_checkForAuthPrompt;
- (BOOL)tryPairingPassword:(id)password onboardingSetupPayloadString:(id)string error:(id *)error;
- (void)continueAuthAfterValidation:(BOOL)validation;
- (void)_handlePairingStateMachine;
- (BOOL)stopPairingWithError:(id *)error;
- (id)controllerUsername;
- (void)enableEvents:(BOOL)events forCharacteristics:(id)characteristics withCompletionHandler:(id /* block */)handler queue:(id)queue;
- (void)_enableEvents:(BOOL)events forCharacteristics:(id)characteristics withCompletionHandler:(id /* block */)handler queue:(id)queue;
- (void)_enableEvent:(BOOL)event forCharacteristic:(id)characteristic withCompletionHandler:(id /* block */)handler queue:(id)queue;
- (void)_handleHAPNotificationStateUpdateForCharacteristic:(id)characteristic error:(id)error;
- (void)_setupBTLEConnectionToPeripheral;
- (void)handleConnectionWithPeripheral:(id)peripheral withError:(id)error;
- (void)_handleConnectionWithError:(id)error;
- (void)_handleSuccessfulBTLEConnection;
- (BOOL)isBLELinkConnected;
- (void)handleDisconnectionWithError:(id)error completionHandler:(id /* block */)handler;
- (void)_handleDisconnectionWithCompletion:(id /* block */)completion;
- (void)_enqueueWriteCompletionHandler:(id /* block */)handler forCharacteristic:(id)characteristic;
- (id /* block */)_dequeueWriteCompletionHandlerForCharacteristic:(id)characteristic;
- (void)_enqueueReadCompletionHandler:(id /* block */)handler queue:(id)queue forCharacteristic:(id)characteristic;
- (id)_dequeueReadCompletionTupleForCharacteristic:(id)characteristic;
- (void)_enqueueEnableEventCompletionHandler:(id /* block */)handler queue:(id)queue forCharacteristic:(id)characteristic;
- (id)_dequeueEnableEventCompletionTupleForCharacteristic:(id)characteristic;
- (void)writeCharacteristicValues:(id)values timeout:(double)timeout completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_writeCharacteristicValues:(id)values queue:(id)queue completionHandler:(id /* block */)handler;
- (void)_writeValue:(id)value forCharacteristic:(id)characteristic authorizationData:(id)data withCompletionHandler:(id /* block */)handler queue:(id)queue;
- (void)_handleHAPWriteConfirmationForCharacteristic:(id)characteristic error:(id)error;
- (void)readCharacteristicValues:(id)values timeout:(double)timeout completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)readValueForCharacteristic:(id)characteristic queue:(id)queue completionHandler:(id /* block */)handler;
- (void)_readCharacteristicValues:(id)values completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_readValueForCharacteristic:(id)characteristic completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_handleUpdatedValueForBTLECharacteristic:(id)btlecharacteristic error:(id)error;
- (void)_establishSecureSession;
- (void)_reallyEstablishSecureSession;
- (void)_handleReceivedSecuritySessionSetupExchangeData:(id)data;
- (id)_encryptDataAndGenerateAuthTag:(id)tag error:(id *)error;
- (id)_decryptData:(id)data error:(id *)error;
- (id)securitySession:(id)session didReceiveLocalPairingIdentityRequestWithError:(id *)error;
- (id)securitySession:(id)session didReceiveRequestForPeerPairingIdentityWithIdentifier:(id)identifier error:(id *)error;
- (void)securitySession:(id)session didReceiveSetupExchangeData:(id)data;
- (void)securitySessionIsOpening:(id)opening;
- (void)securitySessionDidOpen:(id)open;
- (void)securitySession:(id)session didCloseWithError:(id)error;
- (void)discoverAccessories;
- (void)_getAttributeDatabase;
- (void)_handleHAPServiceDiscovery;
- (void)_handleDescriptorDiscovery;
- (void)_handleReadDescriptorValues;
- (void)_handleHAPCharacteristicDiscoveryForService:(id)service error:(id)error;
- (void)_handleHAPServiceDiscoveryCompletionForService:(id)service withInstanceId:(id)id;
- (id)_parseBTLEService:(id)btleservice withInstanceId:(id)id;
- (BOOL)_parseBTLECharacteristicDescriptor:(id)descriptor existingDescriptors:(id)descriptors characteristics:(id)characteristics;
- (id)_nextInstanceID;
- (BOOL)_delegateRespondsToSelector:(SEL)selector;
- (id)_btleCharacteristicForHAPCharacteristic:(id)hapcharacteristic;
- (id)_hapCharacteristicForBTLECharacteristic:(id)btlecharacteristic;
- (BOOL)_shouldEnableSessionSecurity;
- (void)_notifyDelegateOfReceivedEncryptedAuthenticatedData:(id)data forCharacteristic:(id)characteristic;
- (void)_notifyDelegateOfReceivedPlaintextData:(id)data forCharacteristic:(id)characteristic;
- (void)_notifyDelegateOfSentEncryptedAuthenticatedData:(id)data forCharacteristic:(id)characteristic;
- (void)_notifyDelegateOfSentPlaintextData:(id)data forCharacteristic:(id)characteristic;
- (id)_pairSetupHAPCharacteristic;
- (id)_pairVerifyHAPCharacteristic;
- (void)peripheral:(id)peripheral didDiscoverServices:(id)services;
- (void)peripheral:(id)peripheral didModifyServices:(id)services;
- (void)peripheral:(id)peripheral didDiscoverCharacteristicsForService:(id)service error:(id)error;
- (void)peripheral:(id)peripheral didDiscoverDescriptorsForCharacteristic:(id)characteristic error:(id)error;
- (void)peripheral:(id)peripheral didUpdateValueForDescriptor:(id)descriptor error:(id)error;
- (void)peripheral:(id)peripheral didUpdateValueForCharacteristic:(id)characteristic error:(id)error;
- (void)peripheral:(id)peripheral didWriteValueForCharacteristic:(id)characteristic error:(id)error;
- (void)peripheral:(id)peripheral didUpdateNotificationStateForCharacteristic:(id)characteristic error:(id)error;
- (int)_ensurePairingSessionIsInitializedWithType:(unsigned int)type;
- (int)_pairSetupStart;
- (int)_handlePairSetupExchangeWithData:(id)data;
- (int)_pairSetupTryPassword:(id)password;
- (void)updateConnectionIdleTime:(unsigned char)time;
- (void)_updateConnectionLifetimeTimer;
- (void)_cancelConnectionLifetimeTimer;
- (void)_disconnect;
- (void)_handleConnectionLifetimeTimeout;
- (void)identifyWithCompletion:(id /* block */)completion;
- (void)addPairing:(id)pairing completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_addPairingWithIdentifier:(id)identifier publicKey:(id)key admin:(BOOL)admin queue:(id)queue completion:(id /* block */)completion;
- (void)_handlePairingsWriteForCharacteristic:(id)characteristic writeError:(id)error removing:(BOOL)removing queue:(id)queue completion:(id /* block */)completion;
- (void)_handlePairingsReadForCharacteristic:(id)characteristic readError:(id)error removing:(BOOL)removing queue:(id)queue completion:(id /* block */)completion;
- (void)removePairing:(id)pairing completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_removePairingWithIdentifier:(id)identifier publicKey:(id)key queue:(id)queue completion:(id /* block */)completion;
- (BOOL)removePairingForCurrentControllerOnQueue:(id)queue completion:(id /* block */)completion;
- (void)listPairingsWithCompletionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_enqueueOperation:(long long)operation identifier:(id)identifier publicKey:(id)key admin:(BOOL)admin queue:(id)queue completion:(id /* block */)completion;
- (void)_dequeueAndContinueOperation;
- (void)disconnect;
- (BOOL)isSecuritySessionOpening;
- (BOOL)isDisconnecting;
@end

#endif /* _HAPAccessoryServerBTLE100_h */
