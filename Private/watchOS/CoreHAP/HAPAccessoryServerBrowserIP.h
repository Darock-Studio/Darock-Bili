//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HAPAccessoryServerBrowserIP_h
#define HAPAccessoryServerBrowserIP_h
@import Foundation;

#include "HAPAccessoryServerBrowser.h"
#include "HAPAccessoryServerNotification-Protocol.h"
#include "HAPPowerManager.h"
#include "HAPPowerManagerProtocol-Protocol.h"
#include "HAPWACAccessoryBrowser.h"
#include "HMFTimerDelegate-Protocol.h"

@class HMFTimer, NSArray, NSMutableSet, NSOperationQueue, NSString;
@protocol HAPAccessoryServerBrowserDelegate, OS_dispatch_queue;

@interface HAPAccessoryServerBrowserIP : HAPAccessoryServerBrowser<HMFTimerDelegate, HAPPowerManagerProtocol, HAPAccessoryServerNotification> {
  /* instance variables */
  struct BonjourBrowser * _bonjourBrowser;
}

@property (retain, nonatomic) NSMutableSet *discoveredAccessoryServers;
@property (weak, nonatomic) NSObject<HAPAccessoryServerBrowserDelegate> *delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (retain, nonatomic) NSOperationQueue *delegateOperationQueue;
@property (retain, nonatomic) NSMutableSet *pendingBonjourEvents;
@property (retain, nonatomic) HMFTimer *bonjourEventTimer;
@property (retain, nonatomic) HAPWACAccessoryBrowser *hapWACBrowser;
@property (retain, nonatomic) HAPPowerManager *powerManager;
@property (retain, nonatomic) NSString *serverIdentifierToSkipBonjourUpdate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *shortDescription;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly, copy, nonatomic) NSArray *attributeDescriptions;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithQueue:(id)queue;
- (long long)linkType;
- (int)_initializeAndStartBonjourBrowser;
- (void)setDelegate:(id)delegate queue:(id)queue;
- (void)startDiscoveringAccessoryServers;
- (void)startDiscoveringWACAccessoryServers;
- (void)startDiscoveringWACAccessoryServerWithIdentifier:(id)identifier;
- (void)startDiscoveringAirPlayAccessoriesWithDelegate:(id)delegate;
- (void)pendDelegateBlock:(id /* block */)block identifier:(id)identifier;
- (void)pendDelegateOperation:(id)operation identifier:(id)identifier;
- (void)stopDiscoveringAccessoryServers;
- (void)stopDiscoveringWACAccessoryServersWithInvalidation:(BOOL)invalidation;
- (id)visible2Pt4Networks;
- (id)wacBrowser;
- (void)notifyDelegatesOfWACCompletionWithIdentifier:(id)identifier error:(id)error;
- (void)discoverAccessoryServerWithIdentifier:(id)identifier;
- (void)processPendingBonjourRemoveEvents:(id)events;
- (void)matchAccessoryServerWithSetupID:(id)id serverIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)_matchAccessoryServerWithSetupID:(id)id serverIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)_handleBonjourBrowserEvent:(unsigned int)event eventInfo:(id)info;
- (void)_handleConnectionUpdateWithBonjourDeviceInfo:(id)info socketInfo:(id)info;
- (void)handleConnectionUpdateWithBonjourDeviceInfo:(id)info socketInfo:(id)info;
- (void)_handleBonjourAddOrUpdateWithEventInfo:(id)info;
- (void)_invalidateAndRemoveAccessoryServer:(id)server;
- (void)_doReachabilityUpdateForServer:(id)server withDictionary:(id)dictionary;
- (void)indicateNotificationFromServer:(id)server notifyType:(unsigned long long)type withDictionary:(id)dictionary;
- (void)_handleBonjourRemoveWithEventInfo:(id)info;
- (int)_server:(id *)_server forBonjourDevice:(id)device;
- (void)_invalidateAccessoryServers:(BOOL)servers;
- (void)_setReachability:(BOOL)reachability forServer:(id)server;
- (BOOL)_delegateRespondsToSelector:(SEL)selector;
- (void)_pendBonjourRemoveEvent:(id)event;
- (void)_pendBonjourEvent:(id)event;
- (int)_processPendingBonjourEvent:(id)event;
- (void)processPendingBonjourRemoveEventsForDeviceID:(id)id;
- (int)_purgePendingBonjourEvents:(id)events withProcessing:(BOOL)processing;
- (void)devicePowerStateChanged:(unsigned long long)changed;
- (void)timerDidFire:(id)fire;
- (void)_timerDidExpire:(id)expire;
- (id)serverWithIdentifier:(id)identifier ignoreLPM:(BOOL)lpm;
- (void)unitTest_handleBonjourBrowserEvent:(unsigned int)event eventInfo:(id)info;
- (id)logIdentifier;
@end

#endif /* HAPAccessoryServerBrowserIP_h */
