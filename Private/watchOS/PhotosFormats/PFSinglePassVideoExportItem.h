//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PFSinglePassVideoExportItem_h
#define PFSinglePassVideoExportItem_h
@import Foundation;

#include "PFProportionalIntegralController.h"
#include "PFSinglePassVideoExportItemStatistics.h"
#include "PFVideoExportRangeCoordinator.h"

@class AVAsset, AVAssetReader, AVAssetReaderTrackOutput, AVAssetTrack, AVAssetWriter, AVAssetWriterInput, NSArray, NSFileHandle, NSProgress, NSString, NSURL;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_source;

@interface PFSinglePassVideoExportItem : NSObject

@property (retain) NSString *identifier;
@property unsigned long long state;
@property (retain) NSObject<OS_dispatch_queue> *exportItemStateQueue;
@property (retain) AVAsset *inputAsset;
@property (retain) AVAssetTrack *videoTrack;
@property (retain) NSArray *additionalTracks;
@property (retain) NSFileHandle *conversionOutputFileHandle;
@property (retain) NSURL *destinationFileURL;
@property BOOL shouldDeleteDestinationURLOnDeallocation;
@property unsigned long long outputFileLastEndOffset;
@property (nonatomic) unsigned long long targetOutputFileSize;
@property long long targetOutputMediaDataSize;
@property (retain) PFSinglePassVideoExportItemStatistics *statistics;
@property (retain) PFProportionalIntegralController *bitRateController;
@property (retain) AVAssetReader *assetReader;
@property (retain) AVAssetReaderTrackOutput *videoReaderTrackOutput;
@property (retain) NSArray *additionalReaderTrackOutputs;
@property (retain) AVAssetWriter *assetWriter;
@property (retain) AVAssetWriterInput *videoWriterInput;
@property (retain) NSArray *additionalWriterInputs;
@property (retain) NSObject<OS_dispatch_source> *outputFileSizeChangeSource;
@property unsigned long long minimumChunkLength;
@property (retain) NSProgress *progress;
@property (retain) NSObject<OS_dispatch_group> *inputReadingCompletionGroup;
@property (retain) PFVideoExportRangeCoordinator *availableRangeCoordinator;
@property struct OpaqueVTCompressionSession * compressionSession;
@property long long currentEncodingBitRate;
@property BOOL needsCurrentEncodingBitRateUpdate;
@property BOOL maximizePowerEfficiency;
@property BOOL didCancel;
@property (copy, nonatomic) NSArray *additionalMetadata;

/* instance methods */
- (id)init;
- (void)dealloc;
- (BOOL)preflight;
- (BOOL)startConversionWithError:(id *)error outputAvailableHandler:(id /* block */)handler;
- (id)outputDataInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range waitUntilAvailableWithTimeout:(unsigned long long)timeout error:(id *)error;
- (BOOL)setupConversionWithError:(id *)error;
- (void)configureOutputMetadataForAssetWriter:(id)writer;
- (BOOL)isAPACAudioTrack:(id)track;
- (void)configureDroppableFrameRateForCompressionSession:(struct OpaqueVTCompressionSession *)session inputWidth:(int)width inputHeight:(int)height;
- (long long)estimatedOutputBitRate;
- (void)startReadingInputAssetWithOutputAvailableHandler:(id /* block */)handler;
- (void)processCompressedSampleBuffer:(struct opaqueCMSampleBuffer *)buffer presentationTimeStamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })stamp;
- (void)setupOutputFileSourceWithOutputAvailableHandler:(id /* block */)handler;
- (void)notifyDataAvailableToHandler:(id /* block */)handler ignoreMinimumChunkLength:(BOOL)length;
- (id)bitRateControllerForTargetEncodingBitRate:(long long)rate;
- (void)_cancel;
- (double)inputAssetDuration;
@end

#endif /* PFSinglePassVideoExportItem_h */
