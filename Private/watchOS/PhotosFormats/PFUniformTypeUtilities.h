//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PFUniformTypeUtilities_h
#define PFUniformTypeUtilities_h
@import Foundation;

@interface PFUniformTypeUtilities : NSObject
/* class methods */
+ (id)photosLibraryType;
+ (id)iPhotoLibraryType;
+ (id)apertureLibraryType;
+ (id)adobePhotoshopType;
+ (id)adobeIllustratorType;
+ (id)supplementalResourceXMPType;
+ (id)supplementalResourceAAEType;
+ (id)livePhotoBundleType;
+ (id)livePhotoBundlePrivateType;
+ (id)avifType;
+ (id)heicSequenceType;
+ (id)pictType;
+ (id)quicktimeImageType;
+ (id)icoType;
+ (id)macPaintType;
+ (id)jpeg2000Type;
+ (id)jpegXLType;
+ (id)sonyARWRAWImageType;
+ (id)canonCR2RAWImageType;
+ (id)canonCRWRAWImageType;
+ (id)canonTIFFRAWImageType;
+ (id)olympusRAWImageType;
+ (id)panasonicRW2RAWImageType;
+ (id)panasonicRAWImageType;
+ (id)pentaxRAWImageType;
+ (id)nikonRAWImageType;
+ (id)samsungRAWImageType;
+ (id)fujiRAWImageType;
+ (id)leafamericaRAWImageType;
+ (id)hasselblad3FRRAWImageType;
+ (id)hasselbladFFFRAWImageType;
+ (id)openEXRImageType;
+ (id)typeWithIdentifier:(id)identifier;
+ (id)typeWithFilenameExtension:(id)extension;
+ (id)typeWithFilenameExtension:(id)extension conformingToType:(id)type;
+ (id)preferredOrFallbackFilenameExtensionForType:(id)type;
+ (BOOL)type:(id)type conformsToOneOfTypes:(id)types;
+ (BOOL)filenameExtension:(id)extension conformsToOneOfTypes:(id)types;
+ (BOOL)url:(id)url conformsToType:(id)type;
+ (BOOL)url:(id)url conformsToOneOfTypes:(id)types;
+ (id)resourceModelTypeForFilenameExtension:(id)extension;
+ (id)typeForURL:(id)url error:(id *)error;
+ (id)typesSupportedForImport;
+ (id)typeForFilenameExtensionOrLastPathComponent:(id)component;
+ (id)supportedImageTypes;
+ (id)supportedMovieTypes;
+ (id)supportedAudioTypes;
+ (id)imageTypesUnsupportedForImport;
+ (id)imageTypesNotWellSupportedForSharing;
+ (id)typeForHFSType:(unsigned int)hfstype;
+ (id)typeForHFSType:(unsigned int)hfstype conformingToType:(id)type;
@end

#endif /* PFUniformTypeUtilities_h */
