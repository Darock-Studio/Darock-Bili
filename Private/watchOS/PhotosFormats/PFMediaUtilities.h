//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PFMediaUtilities_h
#define PFMediaUtilities_h
@import Foundation;

@interface PFMediaUtilities : NSObject
/* class methods */
+ (id)tracksWithMediaType:(id)type forAsset:(id)asset;
+ (id)trackWithTrackID:(int)id forAsset:(id)asset;
+ (struct CGImage *)copyCGImageFromImageGenerator:(id)generator atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time actualTime:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)time error:(id *)error;
+ (BOOL)insertTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range ofAsset:(id)asset atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time intoMutableComposition:(id)composition error:(id *)error;
+ (id)metadataForFormat:(id)format forAssetTrack:(id)track;
+ (id)metadataForFormat:(id)format forAsset:(id)asset;
+ (BOOL)canGenerateImageDerivativesFromType:(id)type;
+ (long long)devicePerformanceMemoryClass;
+ (BOOL)isValidImageFileForURL:(id)url;
+ (BOOL)typeRequiresRasterizationDPI:(id)dpi;
+ (long long)defaultRasterizationDPI;
+ (BOOL)embeddedJPEGSuitableForDerivativesInRawImageProperties:(id)properties enforcePixelCountLimits:(BOOL)limits;
+ (BOOL)embeddedJPEGSuitableForDerivativesInImageOfType:(id)type url:(id)url imageProperties:(id)properties;
+ (id)hasEmbeddedJPEGSuitableForDerivativesInImageAtURL:(id)url metadata:(id)metadata error:(id *)error;
+ (id)imagePropertiesFromImageSource:(struct CGImageSource *)source;
+ (id)imagePropertiesFromImageSource:(struct CGImageSource *)source atIndex:(unsigned long long)index;
+ (id)auxiliaryImageIdentifiersToPreserveForDerivatives;
+ (id)auxiliaryImagesToPreserveForDerivativesFromImageSource:(struct CGImageSource *)source imageIndex:(unsigned long long)index;
+ (id)auxiliaryImageRecordsToPreserveForDerivativesFromPrimaryImageInImageSource:(struct CGImageSource *)source;
+ (id)auxiliaryImageRecordsToPreserveForDerivativesFromImageSource:(struct CGImageSource *)source imageIndex:(unsigned long long)index;
+ (id)transformAuxiliaryImages:(id)images scaleFactor:(double)factor applyingOrientation:(unsigned int)orientation;
+ (id)cIImageFromAuxiliaryImageInfo:(id)info applyingOrientation:(unsigned int)orientation scaleFactor:(double)factor;
+ (id)dictionaryRepresentationForAuxiliaryImagePixelBuffer:(struct __CVBuffer *)buffer metadata:(struct CGImageMetadata *)metadata;
+ (struct __CVBuffer *)createPixelBufferFromAuxiliaryImageInfo:(id)info;
+ (id)cIImageFromPixelBuffer:(struct __CVBuffer *)buffer applyingOrientation:(unsigned int)orientation scaleFactor:(double)factor;
+ (struct CGImage *)createImageRefFromAuxiliaryImagePixelBuffer:(struct __CVBuffer *)buffer applyingOrientation:(unsigned int)orientation scaleFactor:(double)factor;
+ (struct CGSize { double x0; double x1; })maximumImageSizeFromProperties:(id)properties;
+ (BOOL)canLoadAssetAsRawForInteractiveEditingWithImageProperties:(id)properties;
+ (long long)rawSourceMaximumPixelCountForBackgroundProcessing;
+ (long long)rawSourceMaximumPixelCountForInteractiveEditing;
+ (id)formattedCameraModelFromCameraModel:(id)model cameraMake:(id)make;
+ (BOOL)isValidAVFileForURL:(id)url;
+ (id)mainVideoTrackForAsset:(id)asset;
+ (id)formatDebugDescriptionForVideoTrack:(id)track;
+ (id)hevcProfileInformationForVideoTrackFormatDescription:(struct opaqueCMFormatDescription *)description;
+ (void)enumerateVideoTrackFormatDescriptionsInAsset:(id)asset withBlock:(id /* block */)block;
+ (id)debugDescriptionForPlayerItem:(id)item;
+ (id)_debugDescriptionForAssetURL:(id)url;
+ (id)_debugDescriptionForAssetVariants:(id)variants;
+ (id)outOfBandHintsForVideoAsset:(id)asset;
+ (id)outOfBandHintsForURL:(id)url;
+ (id)urlByAttachingOutOfBandHintsBase64String:(id)string toVideoURL:(id)url;
+ (id)outOfBandHintsBase64StringForAVAssetProxyOrFileURLAsset:(id)urlasset;
+ (id)_outOfBandHintsForAVAssetProxyOrFileURLAsset:(id)urlasset;
+ (id)stringFromFourCharCode:(unsigned int)code;
+ (unsigned int)fourCharCodeFromString:(id)string;
+ (BOOL)enumerateImageSourceIndexesOfFileAtURL:(id)url error:(id *)error block:(id /* block */)block;
+ (struct CGImage *)createImageRefFromAuxiliaryImageInfo:(id)info applyingOrientation:(unsigned int)orientation scaleFactor:(double)factor;
+ (id)_cIImageFromAuxiliaryImageInfo:(id)info applyingOrientation:(unsigned int)orientation scaleFactor:(double)factor;
+ (struct __CVBuffer *)_createPixelBufferFromAuxiliaryImageInfo:(id)info;
+ (id)_cIImageFromPixelBuffer:(struct __CVBuffer *)buffer applyingOrientation:(unsigned int)orientation scaleFactor:(double)factor;
+ (double)gainMapHeadroomForHDRGain:(double)hdrgain gainMapValue:(double)value;
+ (id)protectedTemporaryItemsSubdirectoryName;
@end

#endif /* PFMediaUtilities_h */
