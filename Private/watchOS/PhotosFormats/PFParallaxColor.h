//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PFParallaxColor_h
#define PFParallaxColor_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "PFParallaxColor.h"

@class NSArray;

@interface PFParallaxColor : NSObject<NSSecureCoding> {
  /* instance variables */
   _srgb;
   _lhc;
  struct CGColor * _cgColor;
}

@property (readonly, nonatomic) BOOL isWarm;
@property (readonly, nonatomic) BOOL isCool;
@property (readonly, nonatomic) double luma;
@property (readonly, nonatomic) double hue;
@property (readonly, nonatomic) double chroma;
@property (readonly, nonatomic) double tone;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } pt;
@property (readonly, nonatomic) double red;
@property (readonly, nonatomic) double green;
@property (readonly, nonatomic) double blue;
@property (readonly, nonatomic) double luminance;
@property (readonly, nonatomic) NSArray *RGBValues;
@property (readonly, nonatomic) struct CGColor * CGColor;
@property (readonly, nonatomic) PFParallaxColor *complementaryColor;

/* class methods */
+ (id)colorWithCGColor:(struct CGColor *)cgcolor;
+ (id)whiteColor;
+ (id)blackColor;
+ (id)colorWithTone:(double)tone hue:(double)hue;
+ (id)colorWithRGBValues:(id)rgbvalues error:(id *)error;
+ (id)warmColor;
+ (id)coolColor;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)initWithRed:(double)red green:(double)green blue:(double)blue;
- (id)initWithLuma:(double)luma hue:(double)hue chroma:(double)chroma;
- (id)initWithHue:(double)hue tone:(double)tone;
- (id)description;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEqualToParallaxColor:(id)color;
- (double)distanceToColor:(id)color;
- (double)deltaE94DistanceToColor:(id)color;
- (id)debugQuickLookObject;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* PFParallaxColor_h */
