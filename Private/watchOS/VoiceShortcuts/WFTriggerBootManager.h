//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef WFTriggerBootManager_h
#define WFTriggerBootManager_h
@import Foundation;

#include "UNUserNotificationCenterDelegate-Protocol.h"
#include "WFDatabaseProvider-Protocol.h"

@class NSString, UNUserNotificationCenter, WFTriggerManager;
@protocol OS_dispatch_queue;

@interface WFTriggerBootManager : NSObject<UNUserNotificationCenterDelegate>

@property (readonly, nonatomic) NSObject<WFDatabaseProvider> *databaseProvider;
@property (retain, nonatomic) WFTriggerManager *triggerManager;
@property (retain, nonatomic) UNUserNotificationCenter *notificationCenter;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)registerForNotificationRemovalWithUserNotificationCenter:(id)center scheduleIfNeeded:(BOOL)needed;
+ (void)clearDeliveredNotificationsWithUserNotificationCenter:(id)center;
+ (id)category;

/* instance methods */
- (id)initWithDatabaseProvider:(id)provider;
- (void)start;
- (void)registerForInitialBootXPCActivityWithUserNotificationCenterIfNeeded:(id)needed;
- (BOOL)lastKnownBootUUIDDiffersFromCurrentBootUUID;
- (void)queue_postNotification;
- (void)postNotificationWithUserNotificationCenterIfNecessary:(id)necessary completionHandler:(id /* block */)handler;
- (id)notificationContentForDeviceWithKnownUnlockedState:(BOOL)state;
- (BOOL)canRunAutomations;
- (BOOL)triggerRunningTimeoutHasPassed;
- (id)runningThresholdDate;
- (void)willRunAutomations;
- (void)deviceWasUnlockedForTheFirstTime;
- (void)replaceNotificationContentWithUpdatedTitleIfNeeded;
- (void)configuredTriggersDidChange:(id)change;
- (BOOL)enabledTriggers:(id)triggers;
- (id)lastKnownBootUUID;
- (void)createOrUpdateBootTimeFileIfNeeded;
- (BOOL)createFirstUnlockTimeFile;
- (id)firstUnlockDate;
- (id)bootUUIDFileURL;
- (id)firstUnlockTimeURL;
- (void)userNotificationCenter:(id)center didReceiveNotificationResponse:(id)response withCompletionHandler:(id /* block */)handler;
@end

#endif /* WFTriggerBootManager_h */
