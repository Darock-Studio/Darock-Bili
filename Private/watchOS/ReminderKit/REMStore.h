//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1004.0.0.0.0
//
#ifndef REMStore_h
#define REMStore_h
@import Foundation;

#include "REMChangeTrackingProvider-Protocol.h"
#include "REMClientConnectionsInteractable-Protocol.h"
#include "REMDaemonController-Protocol.h"
#include "REMStore.h"
#include "REMStoreContainerToken.h"
#include "_REMInProgressSaveRequestsContainer.h"

@interface REMStore : NSObject<REMChangeTrackingProvider, REMClientConnectionsInteractable>

@property (readonly, nonatomic) REMStoreContainerToken *storeContainerToken;
@property (readonly, nonatomic) _REMInProgressSaveRequestsContainer *l_inProgressSaveRequestsContainer;
@property (readonly, nonatomic) struct os_unfair_lock_s { unsigned int x0; } lock;
@property (retain, nonatomic) NSObject<REMDaemonController> *daemonController;
@property (nonatomic) unsigned long long mode;
@property (nonatomic) BOOL assertOnMainThreadFetches;
@property (retain, nonatomic) REMStore *nonUserInteractiveStore;

/* class methods */
+ (BOOL)notificationsEnabled;
+ (BOOL)dataaccessDaemonStopSyncingReminders;
+ (BOOL)isEventKitSyncEnabledForReminderKit;
+ (void)notifyOfInteractionWithPeople:(id)people;
+ (BOOL)_shouldNotifyReminddOfInteractionWithPeople;
+ (void)initialize;
+ (id)storeDidChangeNotificationName;
+ (id)createIsolatedStoreContainerWithError:(id *)error;
+ (BOOL)destroyIsolatedStoreContainerWithToken:(id)token error:(id *)error;
+ (BOOL)siriShouldRouteIntentsToNewRemindersApp;

/* instance methods */
- (id)fetchTemplateSectionsWithObjectIDs:(id)ids error:(id *)error;
- (id)fetchTemplateSectionWithObjectID:(id)id error:(id *)error;
- (id)fetchTemplateSectionsForTemplateSectionContext:(id)context error:(id *)error;
- (id)fetchSmartListSectionsWithObjectIDs:(id)ids error:(id *)error;
- (id)fetchSmartListSectionWithObjectID:(id)id error:(id *)error;
- (id)fetchSmartListSectionsForSmartListSectionContext:(id)context error:(id *)error;
- (id)fetchListSectionsWithObjectIDs:(id)ids error:(id *)error;
- (id)fetchListSectionWithObjectID:(id)id error:(id *)error;
- (id)fetchListSectionsForListSectionContext:(id)context error:(id *)error;
- (id)fetchListSectionsForListSectionContextChangeItem:(id)item error:(id *)error;
- (id)fetchListSectionsWithListObjectID:(id)id error:(id *)error;
- (id)fetchListSectionsCountWithListObjectID:(id)id error:(id *)error;
- (void)test_setupForManualHashtagLabelRefreshing;
- (void)test_refreshHashtagLabelsImmediately;
- (void)test_handleIncompleteTemplateOperationQueueItemsImmediately;
- (void)test_handleIncompleteGroceryOperationQueueItemsImmediatelyWithTimeout:(double)timeout;
- (id)test_immediatelyCreateOrUpdatePublicLinkOfTemplateWithTemplateObjectID:(id)id configuration:(id)configuration error:(id *)error;
- (id)test_immediatelyRevokePublicLinkOfTemplateWithTemplateObjectID:(id)id error:(id *)error;
- (void)test_revertImageAttachmentsToUnDeduped:(id)deduped error:(id *)error;
- (id)debugFetchPhantomListsWithError:(id *)error;
- (id)repairPhantomObjectsWithObjectIDs:(id)ids error:(id *)error;
- (void)requestToUpdateClientConnectionsAsynchronously:(BOOL)asynchronously shouldKeepAlive:(BOOL)alive completion:(id /* block */)completion;
- (id)replicaManagerProviderForCalDAVSync;
- (void)addCKShareObserverIfNeededForAccountID:(id)id queue:(id)queue completion:(id /* block */)completion;
- (id)fetchTemplateWithObjectID:(id)id error:(id *)error;
- (id)fetchListRepresentationOfTemplateWithObjectID:(id)id error:(id *)error;
- (void)triggerThrottledSyncWithReason:(id)reason discretionary:(BOOL)discretionary completion:(id /* block */)completion;
- (void)updateAccountsAndSync:(BOOL)sync completion:(id /* block */)completion;
- (void)updateAccountWithAccountID:(id)id restartDA:(BOOL)da completion:(id /* block */)completion;
- (void)removeOrphanedAccountsWithCompletion:(id /* block */)completion;
- (void)_triggerSyncWithReason:(id)reason forcingCloudKitReload:(BOOL)reload discretionary:(BOOL)discretionary bypassThrottler:(BOOL)throttler completion:(id /* block */)completion;
- (void)requestToMergeLocalDataIntoSyncDataWithAccountIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)requestToDeleteSyncDataWithAccountIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)requestToDeleteLocalDataWithCompletion:(id /* block */)completion;
- (void)updateAccountWithAccountID:(id)id completion:(id /* block */)completion;
- (void)triggerSyncForDataAccessAccountsWithAccountIDs:(id)ids;
- (id)fetchAllListsWithExternalIdentifier:(id)identifier error:(id *)error;
- (id)fetchHashtagsWithObjectIDs:(id)ids includeConcealedObjects:(BOOL)objects error:(id *)error;
- (id)fetchAssignmentsWithObjectIDs:(id)ids includeConcealedObjects:(BOOL)objects error:(id *)error;
- (id)MCIsManagedAccountWithObjectID:(id)id error:(id *)error;
- (id)fetchAccountWithExternalIdentifier:(id)identifier error:(id *)error;
- (id)fetchAccountsWithExternalIdentifiers:(id)identifiers error:(id *)error;
- (id)fetchListsIncludingSpecialContainersInAccount:(id)account error:(id *)error;
- (id)fetchListIncludingSpecialContainerWithObjectID:(id)id error:(id *)error;
- (id)fetchReminderWithExternalIdentifier:(id)identifier inList:(id)list error:(id *)error;
- (id)fetchRemindersWithExternalIdentifiers:(id)identifiers inList:(id)list error:(id *)error;
- (id)fetchReminderWithDACalendarItemUniqueIdentifier:(id)identifier inList:(id)list error:(id *)error;
- (id)fetchRemindersWithDACalendarItemUniqueIdentifiers:(id)identifiers inList:(id)list error:(id *)error;
- (id)fetchRemindersMatchingTitle:(id)title dueAfter:(id)after dueBefore:(id)before isCompleted:(id)completed hasLocation:(id)location location:(id)location error:(id *)error;
- (id)fetchListsForEventKitBridgingWithError:(id *)error;
- (id)fetchRemindersForEventKitBridgingWithListIDs:(id)ids error:(id *)error;
- (id)fetchIncompleteRemindersForEventKitBridgingWithDueDateFrom:(id)from to:(id)to withListIDs:(id)ids error:(id *)error;
- (id)fetchCompletedRemindersForEventKitBridgingWithCompletionDateFrom:(id)from to:(id)to withListIDs:(id)ids error:(id *)error;
- (id)fetchAllRemindersWithExternalIdentifier:(id)identifier error:(id *)error;
- (id)fetchCreatedOrCompletedRemindersCountForAppStoreFromDate:(id)date toDate:(id)date error:(id *)error;
- (void)requestDownloadGroceryModelAssetsFromTrial;
- (BOOL)hasActiveCloudKitAccountForTipKitWithError:(id *)error;
- (BOOL)containsListWithCustomBadgeForTipKitWithError:(id *)error;
- (unsigned long long)completedRemindersCountForTipKitWithError:(id *)error;
- (BOOL)containsCustomSmartListForTipKitWithError:(id *)error;
- (BOOL)containsHashtagsForTipKitWithError:(id *)error;
- (void)notifyOfInteractionWithPeople:(id)people force:(BOOL)force completion:(id /* block */)completion;
- (id)provideAnonymousChangeTrackingWithTransactionAuthorKeysToExclude:(id)exclude;
- (id)fetchRemindersIncludingUnsupportedWithObjectIDs:(id)ids error:(id *)error;
- (id)provideChangeTrackingForAccountID:(id)id clientName:(id)name;
- (id)provideChangeTrackingForAccountID:(id)id clientName:(id)name transactionAuthorKeysToExclude:(id)exclude;
- (id)fetchListIncludingMarkedForDeleteWithObjectID:(id)id error:(id *)error;
- (id)fetchListIncludingConcealedWithObjectID:(id)id error:(id *)error;
- (id)fetchReminderIncludingConcealedWithObjectID:(id)id error:(id *)error;
- (id)fetchReminderIncludingMarkedForDeleteWithObjectID:(id)id error:(id *)error;
- (void)acceptCalDAVSharedList:(id)list queue:(id)queue completion:(id /* block */)completion;
- (void)rejectCalDAVSharedList:(id)list queue:(id)queue completion:(id /* block */)completion;
- (void)_respondToCalDAVSharedList:(id)list withResponse:(long long)response queue:(id)queue completion:(id /* block */)completion;
- (id)initWithStoreContainerToken:(id)token;
- (id)initUserInteractive:(BOOL)interactive;
- (id)init;
- (id)initWithDaemonController:(id)controller;
- (id)initWithDaemonController:(id)controller storeContainerToken:(id)token;
- (id)description;
- (id)debugDescription;
- (unsigned long long)storeGeneration;
- (void)invalidate;
- (void)nukeDatabase;
- (id)fetchAccountsWithError:(id *)error;
- (id)fetchAccountsIncludingInactive:(BOOL)inactive error:(id *)error;
- (id)fetchAccountsForDumpingWithError:(id *)error;
- (id)fetchSiriFoundInAppsListWithError:(id *)error;
- (id)refreshAccount:(id)account;
- (id)refreshList:(id)list;
- (id)refreshReminder:(id)reminder;
- (id)optimisticallyMaterializeReminderChangeItem:(id)item;
- (id)fetchPrimaryActiveCloudKitAccountREMObjectIDWithError:(id *)error;
- (id)fetchPrimaryActiveCloudKitAccountWithError:(id *)error;
- (id)fetchActiveCloudKitAccountObjectIDsWithFetchOption:(long long)option error:(id *)error;
- (id)fetchAccountWithObjectID:(id)id error:(id *)error;
- (id)fetchAccountsWithObjectIDs:(id)ids error:(id *)error;
- (id)fetchListWithObjectID:(id)id error:(id *)error;
- (id)fetchListsWithObjectIDs:(id)ids error:(id *)error;
- (id)fetchCustomSmartListWithObjectID:(id)id error:(id *)error;
- (id)fetchCustomSmartListsWithError:(id *)error;
- (id)fetchRemindersWithObjectIDs:(id)ids error:(id *)error;
- (id)fetchRemindersWithObjectIDs:(id)ids fetchOptions:(id)options error:(id *)error;
- (id)fetchRemindersMatchingPredicateDescriptor:(id)descriptor sortDescriptors:(id)descriptors options:(id)options error:(id *)error;
- (id)fetchRemindersWithParentReminderIDs:(id)ids error:(id *)error;
- (id)fetchReminderWithObjectID:(id)id error:(id *)error;
- (id)fetchReminderWithObjectID:(id)id fetchOptions:(id)options error:(id *)error;
- (id)fetchReplicaManagerForAccountID:(id)id error:(id *)error;
- (id)fetchReplicaManagersForAccountID:(id)id bundleID:(id)id error:(id *)error;
- (BOOL)saveSaveRequest:(id)request accountChangeItems:(id)items listChangeItems:(id)items listSectionChangeItems:(id)items smartListChangeItems:(id)items smartListSectionChangeItems:(id)items templateChangeItems:(id)items templateSectionChangeItems:(id)items reminderChangeItems:(id)items author:(id)author replicaManagerProvider:(id)provider error:(id *)error;
- (void)saveSaveRequest:(id)request accountChangeItems:(id)items listChangeItems:(id)items listSectionChangeItems:(id)items smartListChangeItems:(id)items smartListSectionChangeItems:(id)items templateChangeItems:(id)items templateSectionChangeItems:(id)items reminderChangeItems:(id)items author:(id)author replicaManagerProvider:(id)provider queue:(id)queue completion:(id /* block */)completion;
- (id)executeFetchRequest:(id)request error:(id *)error;
- (id)resultsIndexedByObjectIDFromExecutingFetchRequest:(id)request error:(id *)error;
- (unsigned long long)countForFetchRequest:(id)request error:(id *)error;
- (id)fetchResultByExecutingFetchRequest:(id)request error:(id *)error;
- (id)resultFromPerformingInvocation:(id)invocation error:(id *)error;
- (id)resultFromPerformingSwiftInvocation:(id)invocation parametersData:(id)data storages:(id)storages error:(id *)error;
- (void)enumerateAllRemindersWithBlock:(id /* block */)block;
- (void)enumerateAllListsWithBlock:(id /* block */)block;
- (void)enumerateAllGroupsAndListsWithBlock:(id /* block */)block;
- (void)_enumerateAllListsIncludingGroups:(BOOL)groups withBlock:(id /* block */)block;
- (id)_xpcSyncStorePerformerWithReason:(id)reason errorHandler:(id /* block */)handler;
- (void)_addChangeItemChangedKeys:(id)keys objectID:(id)id toChangedKeysMap:(id)map;
- (void)_saveAccountChangeItems:(id)items listChangeItems:(id)items listSectionChangeItems:(id)items smartListChangeItems:(id)items smartListSectionChangeItems:(id)items templateChangeItems:(id)items templateSectionChangeItems:(id)items reminderChangeItems:(id)items author:(id)author replicaManagerProvider:(id)provider synchronously:(BOOL)synchronously syncToCloudKit:(BOOL)kit performer:(id)performer completion:(id /* block */)completion;
- (id)fetchShareForListWithID:(id)id error:(id *)error;
- (id)createShareForListWithID:(id)id appIconData:(id)data error:(id *)error;
- (void)updateShare:(id)share accountID:(id)id queue:(id)queue completion:(id /* block */)completion;
- (void)stopShare:(id)share accountID:(id)id queue:(id)queue completion:(id /* block */)completion;
- (void)acceptShareWithMetadata:(id)metadata queue:(id)queue completion:(id /* block */)completion;
- (BOOL)everConnectedToCar;
- (id)compressedDistributedEvaluationDataWithOptions:(id)options error:(id *)error;
- (id)fetchEligibleDefaultListsWithError:(id *)error;
- (id)fetchDefaultListWithError:(id *)error;
- (id)fetchDefaultListRequiringCloudKitWithError:(id *)error;
- (id)fetchDefaultListRequiringCloudKitAccountWithAccountID:(id)id error:(id *)error;
- (id)fetchDefaultAccountWithError:(id *)error;
- (id)_withInProgressSaveRequestContainer:(id /* block */)container;
- (void)_incrementStoreGeneration;
- (BOOL)_isUserInteractiveStore;
- (void)anchoredBubbleCloudOverridesWithCompletion:(id /* block */)completion;
- (id)fetchMinimumSearchTermLengthByBaseLanguageWithError:(id *)error;
@end

#endif /* REMStore_h */
