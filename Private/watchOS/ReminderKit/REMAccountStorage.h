//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1004.0.0.0.0
//
#ifndef REMAccountStorage_h
#define REMAccountStorage_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "REMAccountTypeHost.h"
#include "REMCRMergeableOrderedSet.h"
#include "REMExternalSyncMetadataWritableProviding-Protocol.h"
#include "REMManualOrdering.h"
#include "REMObjectID.h"
#include "REMObjectIDProviding-Protocol.h"
#include "REMObjectStorageSupportedVersionProviding-Protocol.h"
#include "REMResolutionTokenMap.h"

@class NSData, NSSet, NSString;

@interface REMAccountStorage : NSObject<NSCopying, NSSecureCoding, REMObjectIDProviding, REMExternalSyncMetadataWritableProviding, REMObjectStorageSupportedVersionProviding> {
  /* instance variables */
  REMAccountTypeHost *_accountTypeHost;
  unsigned long long _storeGeneration;
  unsigned long long _copyGeneration;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  BOOL _isAddingExtraPrimaryCKAccountForTesting;
}

@property (retain, nonatomic) REMObjectID *objectID;
@property (nonatomic) long long type;
@property (retain, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *displayName;
@property (retain, nonatomic) REMCRMergeableOrderedSet *listIDsMergeableOrdering;
@property (retain, nonatomic) NSData *listIDsMergeableOrderingData;
@property (retain, nonatomic) REMManualOrdering *pinnedListsManualOrdering;
@property (retain, nonatomic) REMManualOrdering *templatesManualOrdering;
@property (nonatomic) BOOL markedForRemoval;
@property (retain, nonatomic) NSSet *listIDsToUndelete;
@property (retain, nonatomic) NSSet *smartListIDsToUndelete;
@property (nonatomic) BOOL listsDADisplayOrderChanged;
@property (retain, nonatomic) REMResolutionTokenMap *resolutionTokenMap;
@property (retain, nonatomic) NSData *resolutionTokenMapData;
@property (copy, nonatomic) NSString *personID;
@property (copy, nonatomic) NSData *personIDSalt;
@property (nonatomic) BOOL inactive;
@property (nonatomic) BOOL didChooseToMigrate;
@property (nonatomic) BOOL didChooseToMigrateLocally;
@property (nonatomic) BOOL didFinishMigration;
@property (nonatomic) long long persistenceCloudSchemaVersion;
@property (nonatomic) BOOL debugSyncDisabled;
@property (copy, nonatomic) NSString *daConstraintsDescriptionPath;
@property (nonatomic) BOOL daAllowsCalendarAddDeleteModify;
@property (nonatomic) BOOL daSupportsSharedCalendars;
@property (nonatomic) BOOL daWasMigrated;
@property (readonly, nonatomic) REMObjectID *remObjectID;
@property (copy, nonatomic) NSString *externalIdentifier;
@property (copy, nonatomic) NSString *externalModificationTag;
@property (copy, nonatomic) NSString *daSyncToken;
@property (copy, nonatomic) NSString *daPushKey;
@property (readonly, nonatomic) long long minimumSupportedVersion;
@property (readonly, nonatomic) long long effectiveMinimumSupportedVersion;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)newObjectID;
+ (id)objectIDWithUUID:(id)uuid;
+ (id)cdEntityName;
+ (id)listIDsMergeableOrderingReplicaIDSourceWithAccountID:(id)id;

/* instance methods */
- (id)initWithObjectID:(id)id type:(long long)type name:(id)name listIDsMergeableOrdering:(id)ordering;
- (id)initWithObjectID:(id)id type:(long long)type name:(id)name nullableListIDsMergeableOrdering:(id)ordering;
- (id)initWithObjectID:(id)id type:(long long)type name:(id)name;
- (id)optionalObjectID;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)description;
- (id)debugDescription;
- (id)initWithCoder:(id)coder;
- (unsigned long long)storeGeneration;
- (void)setStoreGenerationIfNeeded:(unsigned long long)needed;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)serializedListIDsMergeableOrdering;
- (BOOL)hasDeserializedListIDsMergeableOrdering;
- (id)accountTypeHost;
- (BOOL)isUnsupported;
- (id)cdKeyToStorageKeyMap;
- (id)listIDsMergeableOrderingReplicaIDSource;
- (BOOL)_isAddingExtraPrimaryCKAccountForTesting;
- (void)_setIsAddingExtraPrimaryCKAccountForTesting:(BOOL)testing;
@end

#endif /* REMAccountStorage_h */
