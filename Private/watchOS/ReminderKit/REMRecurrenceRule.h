//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1004.0.0.0.0
//
#ifndef REMRecurrenceRule_h
#define REMRecurrenceRule_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "REMObjectID.h"
#include "REMObjectIDProviding-Protocol.h"
#include "REMRecurrenceEnd.h"

@class NSArray;

@interface REMRecurrenceRule : NSObject<NSSecureCoding, NSCopying, REMObjectIDProviding>

@property (readonly, nonatomic) REMObjectID *objectID;
@property (readonly, nonatomic) REMObjectID *accountID;
@property (readonly, nonatomic) REMObjectID *reminderID;
@property (readonly, copy, nonatomic) REMRecurrenceEnd *recurrenceEnd;
@property (readonly, nonatomic) long long frequency;
@property (readonly, nonatomic) long long interval;
@property (readonly, nonatomic) long long firstDayOfTheWeek;
@property (readonly, nonatomic) NSArray *daysOfTheWeek;
@property (readonly, nonatomic) NSArray *daysOfTheMonth;
@property (readonly, nonatomic) NSArray *daysOfTheYear;
@property (readonly, nonatomic) NSArray *weeksOfTheYear;
@property (readonly, nonatomic) NSArray *monthsOfTheYear;
@property (readonly, nonatomic) NSArray *setPositions;
@property (readonly, nonatomic) REMObjectID *remObjectID;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)iCalendarValueFromRecurrenceType:(long long)type;
+ (id)iCalendarValueFromDate:(id)date isDateOnly:(BOOL)only isFloating:(BOOL)floating;
+ (id)iCalendarValueFromWeekday:(long long)weekday;
+ (id)nextRecurrentDueDateAfter:(id)after dueDate:(id)date timeZone:(id)zone allDay:(BOOL)day recurrenceRules:(id)rules;
+ (int)_convertREMRecurrenceFrequencyToCalRecurrenceFrequency:(long long)frequency;
+ (id)newObjectID;
+ (id)objectIDWithUUID:(id)uuid;
+ (id)cdEntityName;

/* instance methods */
- (id)initRecurrenceRuleWithObjectID:(id)id accountID:(id)id reminderID:(id)id frequency:(long long)frequency interval:(long long)interval end:(id)end;
- (id)initRecurrenceRuleWithObjectID:(id)id accountID:(id)id reminderID:(id)id frequency:(long long)frequency interval:(long long)interval firstDayOfTheWeek:(long long)week daysOfTheWeek:(id)week daysOfTheMonth:(id)month monthsOfTheYear:(id)year weeksOfTheYear:(id)year daysOfTheYear:(id)year setPositions:(id)positions end:(id)end;
- (id)initWithRecurrenceRule:(id)rule objectID:(id)id accountID:(id)id reminderID:(id)id;
- (id)initWithRecurrenceRule:(id)rule objectID:(id)id end:(id)end;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEqualToRecurrenceRule:(id)rule;
- (unsigned long long)hash;
- (id)description;
- (id)debugDescription;
- (id)iCalendarDescription;
- (id)stringValueAsDateOnly:(BOOL)only isFloating:(BOOL)floating;
@end

#endif /* REMRecurrenceRule_h */
