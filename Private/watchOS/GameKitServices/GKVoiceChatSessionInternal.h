//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef GKVoiceChatSessionInternal_h
#define GKVoiceChatSessionInternal_h
@import Foundation;

#include "GKRWLock.h"
#include "GKSessionInternal.h"
#include "GKSessionVoiceChatDelegate-Protocol.h"
#include "GKVoiceChatClient-Protocol.h"
#include "GKVoiceChatServiceFocus.h"
#include "InterfaceListenerDelegate-Protocol.h"
#include "VideoConferenceSpeakingDelegate-Protocol.h"
#include "VoiceChatSessionRoster.h"

@class GKInterfaceListener, NSArray, NSMutableArray, NSMutableDictionary, NSString;
@protocol GKVoiceChatSessionDelegate, OS_dispatch_queue;

@interface GKVoiceChatSessionInternal : NSObject<GKSessionVoiceChatDelegate, GKVoiceChatClient, VideoConferenceSpeakingDelegate, InterfaceListenerDelegate> {
  /* instance variables */
  BOOL focusCallbacks;
  GKSessionInternal *_gkSession;
  NSString *_peerID;
  NSMutableArray *_connectedPeers;
  NSMutableArray *_connectedVoicePeers;
  NSMutableArray *_connectedFocusPeers;
  NSMutableArray *_mutedPeers;
  NSMutableArray *_myPausedList;
  NSMutableDictionary *_peerChannelQuality;
  BOOL needsRecalculateGoodChannels;
  int goodChannels;
  unsigned int _sessionState;
  GKRWLock *_rwLock;
  GKVoiceChatServiceFocus *_vcService;
  VoiceChatSessionRoster *_roster;
  NSObject<OS_dispatch_queue> *_sendQueue;
  unsigned int congestionState;
  id _publicWrapper;
  GKInterfaceListener *_wifiListener;
  BOOL _currentWifiState;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property NSObject<GKVoiceChatSessionDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *sessionName;
@property (readonly, nonatomic) unsigned int conferenceID;
@property (readonly) NSArray *peerList;
@property BOOL activeSession;
@property float sessionVolume;
@property unsigned int talkingPeersLimit;
@property BOOL isUsingSuppression;

/* class methods */
+ (void)brokenHash:(id)hash response:(char *)response;

/* instance methods */
- (int)calculateChannelQualities;
- (int)goodChannels;
- (void)lossRate:(float)rate forParticipantID:(id)id;
- (void)didStartSpeaking:(id)speaking;
- (void)didStopSpeaking:(id)speaking;
- (void)voiceChatService:(id)service sendData:(id)data toParticipantID:(id)id;
- (id)participantID;
- (void)voiceChatService:(id)service didStartWithParticipantID:(id)id;
- (void)voiceChatService:(id)service didNotStartWithParticipantID:(id)id error:(id)error;
- (void)voiceChatService:(id)service didStopWithParticipantID:(id)id error:(id)error;
- (void)voiceChatService:(id)service didReceiveInvitationFromParticipantID:(id)id callID:(unsigned int)id;
- (void)informClientVoiceChatDidStart:(id)start;
- (void)informClientVoiceChatConnecting:(id)connecting;
- (void)informClientVoiceChatCouldNotConnect:(id)connect;
- (void)informClientVoiceChatDidStop:(id)stop;
- (void)informClientVoiceChatSpeaking:(id)speaking;
- (void)informClientVoiceChatSilent:(id)silent;
- (void)informClientVoiceChatFocusChange:(id)change;
- (void)session:(id)session didReceiveAudioPacket:(id)packet fromPeerID:(id)id;
- (void)session:(id)session peer:(id)peer didChangeState:(unsigned int)state;
- (void)session:(id)session didReceiveOOBAudioPacket:(id)packet fromPeerID:(id)id;
- (void)interfaceStateDidChangeWithWifiUp:(BOOL)up cellUp:(BOOL)up;
- (void)networkStateDidChange;
- (id)initWithGKSession:(id)gksession publicWrapper:(id)wrapper sessionName:(id)name;
- (void)calculateConferenceID;
- (id)encodePeerID:(id)id;
- (id)decodePeerID:(id)id;
- (void)dealloc;
- (void)cleanup;
- (void)cleanupProc:(id)proc;
- (void)startSession;
- (void)startSessionInternal;
- (void)stopSession;
- (void)stopSessionInternal;
- (void)setMute:(BOOL)mute forPeer:(id)peer;
- (BOOL)getMuteStateForPeer:(id)peer;
- (BOOL)isActiveSession;
- (BOOL)isEqual:(id)equal;
- (void)handlePeerDisconnected:(id)disconnected;
- (void)updatedSubscribedBeaconList:(id)list;
- (void)updatedFocusID:(unsigned int)id;
- (void)updatedMutedPeers:(id)peers forPeer:(id)peer;
- (void)sendMutedPeers;
- (void)parseMutedPeers:(id)peers forPeer:(id)peer;
- (void)pauseAll;
- (void)unPauseAll;
- (void)pruneBadLinks;
- (void)addPeerToFocusPausedList:(id)list;
- (void)removeFromFocusPausedList:(id)list;
- (void)updatedFocusPeers:(id)peers;
- (void)updatedConnectedPeers:(id)peers;
- (void)sendConnectedPeers;
- (void)parseConnectedPeers:(id)peers;
- (unsigned int)peerCount;
@end

#endif /* GKVoiceChatSessionInternal_h */
