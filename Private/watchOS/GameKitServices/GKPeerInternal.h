//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2005.6.1.3.2
//
#ifndef GKPeerInternal_h
#define GKPeerInternal_h
@import Foundation;

#include "GKSessionInternal.h"
#include "GKTableCleanupWhenRemoved-Protocol.h"

@class NSString;

@interface GKPeerInternal : NSObject<GKTableCleanupWhenRemoved> {
  /* instance variables */
  BOOL _isBusy;
  id * _addrList;
  unsigned int * _interfaceList;
  struct _DNSServiceRef_t * * _lookupServiceList;
  int _lookupServiceCount;
  int _lookupServiceSize;
}

@property (readonly) unsigned int pid;
@property (readonly) NSString *displayName;
@property (readonly) NSString *serviceName;
@property BOOL busy;
@property int serviceCount;
@property struct _DNSServiceRef_t * resolveService;
@property struct _DNSServiceRef_t * txtRecordService;
@property unsigned int servicePort;
@property BOOL moreResolvesComing;
@property (retain, nonatomic) GKSessionInternal *session;
@property double connectTimeout;
@property BOOL needsToTimeout;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)freeLookupList:(struct _DNSServiceRef_t * *)list andAddrList:(id *)list andInterfaceList:(unsigned int *)list count:(int)count;

/* instance methods */
- (id)initWithPID:(unsigned int)pid displayName:(id)name serviceName:(id)name;
- (void)dealloc;
- (BOOL)tryDetruncateDisplayName:(id)name;
- (void)addLookup:(struct _DNSServiceRef_t *)lookup;
- (void)removeAndReturnLookupList:(struct _DNSServiceRef_t * * *)list andAddrList:(id * *)list andInterfaceList:(unsigned int * *)list count:(int *)count;
- (BOOL)containsLookupService:(struct _DNSServiceRef_t *)service;
- (void)setAddr:(const struct sockaddr_in { unsigned char x0; unsigned char x1; unsigned short x2; struct in_addr { unsigned int x0; } x3; char x4[8] } *)addr interface:(unsigned int)interface forLookupService:(struct _DNSServiceRef_t *)service;
- (void)copyLookupList:(struct _DNSServiceRef_t * * *)list count:(int *)count;
- (int)usableAddrs;
- (void)stopResolving;
- (void)clearResolving;
- (void)stopTXTRecordMonitoring;
- (void)cleanupForGKTable:(id)gktable;
- (BOOL)isBusy;
@end

#endif /* GKPeerInternal_h */
