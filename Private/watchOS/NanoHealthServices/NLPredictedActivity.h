//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1880.5.0.0.0
//
#ifndef NLPredictedActivity_h
#define NLPredictedActivity_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDate, NSString;

@interface NLPredictedActivity : NSObject<NSCopying, NSSecureCoding> {
  /* instance variables */
  long long _state;
  double _escalationTime;
  double _classificationTime;
  double _alertVisibleTime;
}

@property (readonly, nonatomic) NSString *identifier;
@property (readonly, nonatomic) NSDate *date;
@property (readonly, nonatomic) long long locationType;
@property (readonly, nonatomic) unsigned long long activityType;
@property (readonly, nonatomic) long long swimmingLocationType;
@property (readonly, nonatomic) BOOL activityHasAlternateLocation;
@property (readonly, nonatomic) long long predictionType;
@property (nonatomic) BOOL userAccepted;

/* class methods */
+ (id)stringForPredictionType:(long long)type;
+ (id)compactStringForPredictionType:(long long)type;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)_stringFromLocationType:(long long)type;
- (void)_logEvent:(id)event;
- (void)_logEscalation;
- (void)_logEscalationCancelledByUser;
- (void)_logEscalationTimedOut;
- (void)_logEscalationCancelledBySystem;
- (void)_logEscalationCancelledMuteForToday;
- (void)_logClassification;
- (void)_logClassificationCancelledByAlternateWorkout;
- (void)_logClassificationCancelledByUser;
- (void)_logClassificationCancelledBySystem;
- (void)_logClassificationTimedOut;
- (void)_logClassificationCancelledMuteForToday;
- (void)_logClassificationRealerted;
- (void)_logAlertTransitionedWithResult:(id)result;
- (void)_logClassificationAlerted;
- (void)_logStartAlertAccepted;
- (void)_logStartAlertAcceptedFromApp;
- (void)_logStartAlertCancelledByUser;
- (void)_logStartAlertMuteForToday;
- (void)_logStartAlertCancelledByAlternateWorkout;
- (void)_logStartAlertCancelledBySystem;
- (void)_logStartAlertTimedOut;
- (void)_logStartAlertDeniedByCarousel;
- (void)_logEndDetected;
- (void)_logEndCancelledByUserWorkoutStop;
- (void)_logEndCancelledBySystem;
- (void)_logEndTimedOut;
- (void)_logEndAlerted;
- (void)_logEndRealerted;
- (void)_logEndAlertAccepted;
- (void)_logEndAlertCancelledByUser;
- (void)_logEndAlertCancelledBySystem;
- (void)_logEndAlertCancelledByTimeout;
- (void)_logEndAlertDeniedByCarousel;
- (id)compactName;
- (id)initWithIdentifier:(id)identifier predictionType:(long long)type date:(id)date locationType:(long long)type activityType:(unsigned long long)type swimmingLocationType:(long long)type;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)description;
- (double)escalationTime;
- (double)classificationTime;
- (double)alertVisibleTime;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)logPrefix;
- (long long)state;
- (id)stateString;
- (void)setState:(long long)state;
- (id)_stringForState:(long long)state;
@end

#endif /* NLPredictedActivity_h */
