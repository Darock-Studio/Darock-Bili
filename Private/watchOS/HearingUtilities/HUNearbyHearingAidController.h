//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 406.1.12.0.0
//
#ifndef HUNearbyHearingAidController_h
#define HUNearbyHearingAidController_h
@import Foundation;

#include "HUDeviceController.h"
#include "AXRemoteHearingAidDevice.h"
#include "HUSessionManager.h"
#include "HUSessionManagerDelegate-Protocol.h"

@class AXDispatchTimer, NSString, NSTimer;
@protocol HUNearbyHearingAidControllerDelegate, OS_dispatch_queue;

@interface HUNearbyHearingAidController : HUDeviceController<HUSessionManagerDelegate>

@property (nonatomic) BOOL hasStarted;
@property (retain, nonatomic) AXRemoteHearingAidDevice *localDevice;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *mediaQueue;
@property (retain, nonatomic) AXDispatchTimer *sendConnectionToCompanionTimer;
@property (nonatomic) BOOL holdingMediaForConnection;
@property (nonatomic) BOOL holdingPhoneForConnection;
@property (nonatomic) unsigned long long idsMessagesCount;
@property (retain, nonatomic) NSTimer *idsMessagesTimer;
@property (retain, nonatomic) AXDispatchTimer *requestConnectionTimer;
@property (retain, nonatomic) AXDispatchTimer *relinquishConnectionTimer;
@property BOOL processingConnection;
@property BOOL processingTransition;
@property (retain, nonatomic) HUSessionManager *sessionManager;
@property (nonatomic) long long state;
@property (weak, nonatomic) NSObject<HUNearbyHearingAidControllerDelegate> *delegate;
@property (readonly, nonatomic) BOOL shouldConnect;
@property (readonly, nonatomic) BOOL shouldDisconnect;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)init;
- (void)registerMediaNotifications;
- (void)unregisterMediaNotifications;
- (void)mediaServerDied;
- (void)mediaPlaybackDidChange:(id)change;
- (void)shouldRequestAudioConnectionForCall:(BOOL)call withCompletion:(id /* block */)completion;
- (void)routesDidChange:(id)change;
- (void)callStatusDidChange:(id)change;
- (void)requestHandoffForMedia;
- (void)checkConnectionRequestedAfterTimeout;
- (void)sendConnectionToCompanionIfPossible;
- (void)sendConnectionToCompanionIfPossible:(BOOL)possible;
- (void)requestConnectionForReason:(long long)reason;
- (BOOL)shouldRelinquishConnectionForReason:(long long)reason;
- (BOOL)relinquishConnectionForReason:(long long)reason;
- (BOOL)relinquishConnectionForReason:(long long)reason toDevice:(id)device sendHandoffMessage:(BOOL)message;
- (id)timeStamp;
- (void)relinquishConnection;
- (void)checkConnectionRelinquishedAfterTimeout;
- (void)requestConnection;
- (void)disconnectFromPairedDevice;
- (void)updateForBluetoothStateChange;
- (void)logNewDevices:(id)devices;
- (id)descriptionForHandoffReason:(long long)reason;
- (void)resetHandoff;
- (void)start;
- (void)stop;
- (void)updateStateOnDeviceQueue;
- (void)updateState;
- (id)descriptionForState:(long long)state;
- (id)descriptionForCurrentState;
- (id)availableDevices;
- (void)logAvailableDevicesWithTitle:(id)title;
- (void)getConnectedPeer:(id /* block */)peer;
- (id)peerWithState:(long long)state;
- (id)connectedPeer;
- (id)connectingPeer;
- (void)checkConnectionPeers:(id /* block */)peers;
- (void)checkConnectionToHearingDevice:(id /* block */)device;
- (BOOL)peerHasConnectionToHearingDevice;
- (id)hearingDevice;
- (void)sendConnectionUpdateToPeers;
- (void)sendStateMessageToAllDevices:(id)devices;
- (void)sendMessageToAllDevices:(id)devices;
- (void)sendStateMessage:(id)message toDevices:(id)devices;
- (void)sendMessage:(id)message toDevices:(id)devices;
- (void)sendWriteToAllDevices:(id)devices;
- (void)sendWrite:(id)write toDevices:(id)devices;
- (void)writeValue:(id)value forProperty:(unsigned long long)property andDeviceID:(id)id toDevices:(id)devices;
- (id)device:(id)device didReceiveMessage:(id)message;
- (void)updateResponse:(id)response withState:(long long)state;
- (void)validateResponse:(id)response;
- (void)processStateMessageFromPeer:(id)peer state:(id)state response:(id)response;
- (void)processReadMessageFromPeerDevice:(id)device value:(id)value;
- (void)processReadProperty:(id)property fromPeerDevice:(id)device;
- (void)processWriteMessageWithValue:(id)value response:(id)response;
- (id)hearingAidForDeviceID:(id)id;
- (void)updateProperty:(unsigned long long)property forDeviceID:(id)id;
- (void)writeValue:(id)value forProperty:(unsigned long long)property andDeviceID:(id)id;
- (BOOL)representsLocalDevices;
- (void)handleSessionMessage:(long long)message;
@end

#endif /* HUNearbyHearingAidController_h */
