//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1226.2.2.1.0
//
#ifndef PPLocalTopicStore_h
#define PPLocalTopicStore_h
@import Foundation;

#include "PPTopicStore.h"
#include "PPFeedbackProcessing-Protocol.h"
#include "PPTopicBlocklist.h"
#include "PPTopicStorage.h"
#include "PPTrialWrapper.h"

@class NSCache, NSError, NSString, _PASLock;
@protocol OS_dispatch_queue;

@interface PPLocalTopicStore : PPTopicStore<PPFeedbackProcessing> {
  /* instance variables */
  _PASLock *_lock;
  NSCache *_modelCache;
  PPTrialWrapper *_trialWrapper;
  PPTopicBlocklist *_blocklist;
  NSString *_cachePath;
  NSObject<OS_dispatch_queue> *_cacheAsyncUpdateQueue;
  NSObject<OS_dispatch_queue> *_cacheUpdateQueue;
  struct atomic_flag { atomic  _Value; BOOL x0; } _cacheUpdateEnqueued;
  NSError *_cacheUpdateError;
}

@property (readonly, nonatomic) PPTopicStorage *storage;

/* class methods */
+ (id)defaultStore;
+ (void)sortAndTruncate:(id)truncate queryLimit:(unsigned long long)limit;
+ (id)calibrateScoredTopic:(id)topic calibrationTrie:(id)trie;
+ (id)recordsForTopics:(id)topics source:(id)source algorithm:(unsigned long long)algorithm;

/* instance methods */
- (id)initWithStorage:(id)storage trialWrapper:(id)wrapper;
- (id)init;
- (id)cachePath:(id *)path;
- (id)cachedTopicScores;
- (double)finalScoreFromRecordsUsingHybrid:(id)hybrid streamingScorer:(id)scorer mlModel:(id)model;
- (id)scoreTopics:(id)topics scoringDate:(id)date decayRate:(double)rate strictFiltering:(BOOL)filtering sourceStats:(id)stats decayedFeedbackCounts:(id)counts streamingScorer:(id *)scorer mlModel:(id)model;
- (id)rankedTopicsWithQuery:(id)query error:(id *)error;
- (id)rankedTopicsWithQuery:(id)query error:(id *)error clientProcessName:(id)name;
- (BOOL)iterScoredTopicsWithQuery:(id)query error:(id *)error clientProcessName:(id)name block:(id /* block */)block;
- (BOOL)iterScoresForTopicMapping:(id)mapping query:(id)query error:(id *)error block:(id /* block */)block;
- (id)scoresForTopicMapping:(id)mapping query:(id)query error:(id *)error;
- (id)scoresForTopicMapping:(id)mapping query:(id)query error:(id *)error clientProcessName:(id)name;
- (id)unmapMappedTopicIdentifier:(id)identifier mappingIdentifier:(id)identifier error:(id *)error;
- (BOOL)iterTopicRecordsWithQuery:(id)query error:(id *)error block:(id /* block */)block;
- (id)topicRecordsWithQuery:(id)query error:(id *)error;
- (id)topicExtractionsFromText:(id)text error:(id *)error;
- (id)topicExtractionsFromText:(id)text clientProcessName:(id)name error:(id *)error;
- (BOOL)donateTopics:(id)topics source:(id)source algorithm:(unsigned long long)algorithm cloudSync:(BOOL)sync sentimentScore:(double)score exactMatchesInSourceText:(id)text error:(id *)error;
- (BOOL)flushDonationsWithError:(id *)error;
- (BOOL)deleteAllTopicsWithTopicId:(id)id deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsWithTopicId:(id)id algorithm:(unsigned long long)algorithm deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)id documentIds:(id)ids deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)id documentIds:(id)ids algorithm:(unsigned long long)algorithm deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)id groupIds:(id)ids deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)id groupIds:(id)ids algorithm:(unsigned long long)algorithm deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)id deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)id algorithm:(unsigned long long)algorithm deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)id groupId:(id)id olderThan:(id)than deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)id groupId:(id)id algorithm:(unsigned long long)algorithm olderThan:(id)than deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicsOlderThanDate:(id)date deletedCount:(unsigned long long *)count error:(id *)error;
- (BOOL)deleteAllTopicFeedbackCountsOlderThanDate:(id)date;
- (BOOL)pruneOrphanedTopicFeedbackCountsWithLimit:(unsigned long long)limit rowOffset:(unsigned long long)offset deletedCount:(unsigned long long *)count isComplete:(BOOL *)complete;
- (BOOL)cloudSyncWithError:(id *)error;
- (BOOL)clearWithError:(id *)error deletedCount:(unsigned long long *)count;
- (void)logDonationErrorForReason:(long long)reason errorCode:(unsigned long long)code source:(id)source;
- (void)disableSyncForBundleIds:(id)ids;
- (void)registerFeedback:(id)feedback completion:(id /* block */)completion;
- (void)registerUniversalSearchSpotlightFeedback:(id)feedback completion:(id /* block */)completion;
- (void)processFeedback:(id)feedback;
- (BOOL)computeAndCacheTopicScores:(id *)scores;
- (BOOL)computeAndCacheTopicScoresWithShouldContinueBlock:(id /* block */)block error:(id *)error;
- (BOOL)clearTopicScoresCache:(id *)cache;
- (id)topicCacheSandboxExtensionToken:(id *)token;
@end

#endif /* PPLocalTopicStore_h */
