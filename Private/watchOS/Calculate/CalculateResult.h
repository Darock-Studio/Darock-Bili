//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 92.0.0.0.0
//
#ifndef CalculateResult_h
#define CalculateResult_h
@import Foundation;

#include "CalculateResult.h"
#include "UnitTypeInfo.h"
#include "UnitsInfo.h"

@class BOOL *, NSArray, NSNumberFormatter, NSString;

@interface CalculateResult : NSObject

@property (weak, nonatomic) CalculateResult *parent;
@property (nonatomic) struct TreeObject { int x0; undefined * x1; struct TreeObject * x2; struct TreeObject * x3; double x4; struct { unsigned long long x0[2] } x5; unsigned long long x6; struct UnitCount { int x70; int x1; } x[16] BOOL x8; BOOL x9; BOOL x10; BOOL x11; int x12; } * parseTree;
@property (nonatomic) struct TreeObject { int x0; undefined * x1; struct TreeObject * x2; struct TreeObject * x3; double x4; struct { unsigned long long x0[2] } x5; unsigned long long x6; struct UnitCount { int x70; int x1; } x[16] BOOL x8; BOOL x9; BOOL x10; BOOL x11; int x12; } * resultTree;
@property (nonatomic) BOOL localizeUnit;
@property (nonatomic) unsigned long long unitFormat;
@property (retain, nonatomic) UnitsInfo *unitsInfo;
@property (retain, nonatomic) UnitTypeInfo *typeInfo;
@property (nonatomic) int singleUnitID;
@property (readonly, nonatomic) NSString *expression;
@property (readonly, nonatomic) NSString *formattedExpression;
@property (retain, nonatomic) NSNumberFormatter *numberFormatter;
@property (retain, nonatomic) NSArray *locales;
@property (nonatomic) BOOL autoScientificNotation;
@property (nonatomic) BOOL flexibleFractionDigits;
@property (readonly, nonatomic) BOOL isTrivial;
@property (readonly, nonatomic) unsigned long long unitType;
@property (readonly, nonatomic) int unitExponent;
@property (readonly, nonatomic) NSString *formattedResult;
@property (readonly, nonatomic) NSArray *terms;
@property (readonly, nonatomic) CalculateResult *inputValueAndUnit;
@property (readonly, nonatomic) NSArray *conversions;
@property (readonly, nonatomic) BOOL hasStaleCurrencyData;
@property (nonatomic) BOOL synchronous;

/* class methods */
+ (id)defaultNumberFormatter;
+ (id)decimalNumberWithDecimal128:(struct { unsigned long long x0[2] })decimal128;
+ (id)resultWithResultTree:(struct TreeObject { int x0; undefined * x1; struct TreeObject * x2; struct TreeObject * x3; double x4; struct { unsigned long long x0[2] } x5; unsigned long long x6; struct UnitCount { int x70; int x1; } x[16] BOOL x8; BOOL x9; BOOL x10; BOOL x11; int x12; } *)tree parseTree:(struct TreeObject { int x0; undefined * x1; struct TreeObject * x2; struct TreeObject * x3; double x4; struct { unsigned long long x0[2] } x5; unsigned long long x6; struct UnitCount { int x70; int x1; } x[16] BOOL x8; BOOL x9; BOOL x10; BOOL x11; int x12; } *)tree locales:(id)locales numberFormatter:(id)formatter unitsInfo:(id)info unitType:(int)type unitExponent:(int)exponent expression:(id)expression isTrivial:(BOOL)trivial localizeUnit:(BOOL)unit unitFormat:(unsigned long long)format autoScientificNotation:(BOOL)notation flexibleFractionDigits:(BOOL)digits hasStaleCurrencyData:(BOOL)data;
+ (void)preferMeasurementSystemsForLocale:(id)locale preferred:(unsigned long long *)preferred fallback:(unsigned long long *)fallback;

/* instance methods */
- (void)_setConversions:(id)conversions;
- (void)_setInputValueAndUnit:(id)unit;
- (void)_setExpression:(id)expression;
- (void)_setTerms:(id)terms;
- (id)init;
- (void)dealloc;
- (long long)compare:(id)compare;
- (BOOL)isEqual:(id)equal;
- (void)enableMeasurementSystemsForLocale:(id)locale metric:(BOOL *)metric US:(BOOL *)us UK:(BOOL *)uk;
- (id)newUnit:(id)unit;
- (id)conversionsForMetric:(BOOL)metric US:(BOOL)us UK:(BOOL)uk;
- (BOOL)isAcceptableConversion:(struct TreeObject { int x0; undefined * x1; struct TreeObject * x2; struct TreeObject * x3; double x4; struct { unsigned long long x0[2] } x5; unsigned long long x6; struct UnitCount { int x70; int x1; } x[16] BOOL x8; BOOL x9; BOOL x10; BOOL x11; int x12; } *)conversion;
- (id)bestConversion;
- (id)availableConversions;
- (id)localizedConversions;
- (struct TreeObject { int x0; undefined * x1; struct TreeObject * x2; struct TreeObject * x3; double x4; struct { unsigned long long x0[2] } x5; unsigned long long x6; struct UnitCount { int x70; int x1; } x[16] BOOL x8; BOOL x9; BOOL x10; BOOL x11; int x12; } *)convertedTree:(id)tree needsUpdate:(BOOL *)update;
- (id)convertedTo:(id)to;
- (id)description;
@end

#endif /* CalculateResult_h */
