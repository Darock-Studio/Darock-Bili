//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 371.14.0.0.0
//
#ifndef DNDSGlobalConfigurationStore_h
#define DNDSGlobalConfigurationStore_h
@import Foundation;

#include "DNDSBackingStore-Protocol.h"
#include "DNDSBackingStoreDelegate-Protocol.h"
#include "DNDSGlobalConfiguration.h"
#include "DNDSGlobalConfigurationStoreDelegate-Protocol.h"
#include "DNDSGlobalConfigurationStoring-Protocol.h"
#include "DNDSIDSSyncEngine.h"
#include "DNDSIDSSyncEngineDataSource-Protocol.h"
#include "DNDSSyncEngine.h"
#include "DNDSSyncEngineDataSource-Protocol.h"

@class NSString;

@interface DNDSGlobalConfigurationStore : NSObject<DNDSBackingStoreDelegate, DNDSSyncEngineDataSource, DNDSIDSSyncEngineDataSource, DNDSGlobalConfigurationStoring> {
  /* instance variables */
  NSObject<DNDSBackingStore> *_backingStore;
  DNDSSyncEngine *_syncEngine;
  DNDSIDSSyncEngine *_idsSyncEngine;
  DNDSGlobalConfiguration *_configuration;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (weak, nonatomic) NSObject<DNDSGlobalConfigurationStoreDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithBackingStore:(id)store syncEngine:(id)engine idsSyncEngine:(id)engine;
- (id)readRecordWithError:(id *)error;
- (unsigned long long)writeRecord:(id)record error:(id *)error;
- (unsigned long long)writeRecord:(id)record writePartition:(BOOL)partition error:(id *)error;
- (id)backingStore:(id)store migrateDictionaryRepresentation:(id)representation fromVersionNumber:(unsigned long long)number toVersionNumber:(unsigned long long)number;
- (long long)syncEngine:(id)engine wantsRecord:(id)record;
- (void)syncEngine:(id)engine didFetchRecord:(id)record;
- (void)syncEngine:(id)engine failedToDeleteRecordWithID:(id)id error:(id)error;
- (void)syncEngine:(id)engine resolveConflictBetweenClientRecord:(id)record andServerRecord:(id)record;
- (long long)syncEngine:(id)engine prepareRecordToSave:(inout id)save;
- (void)syncEngine:(id)engine recordWithIDWasDeleted:(id)deleted;
- (id)syncEngine:(id)engine recordTypeForRecordID:(id)id;
- (void)syncEngine:(id)engine zoneWithIDWasDeleted:(id)deleted removingRecordIDs:(id)ids;
- (id)recordIDsForSyncEngine:(id)engine;
- (void)purgeRecordsForSyncEngine:(id)engine;
- (void)idsSyncEngine:(id)engine prepareRecordToSave:(inout id)save;
- (void)idsSyncEngine:(id)engine didFetchRecord:(id)record;
- (void)idsSyncEngine:(id)engine recordWithIDWasDeleted:(id)deleted;
- (id)recordIDsForIDSSyncEngine:(id)engine;
- (void)purgeRecordsForIDSSyncEngine:(id)engine;
- (void)globalConfigurationSyncManager:(id)manager didReceiveUpdatedGlobalConfiguration:(id)configuration;
- (id)_createConfigurationFromDNDSIDSRecord:(id)dndsidsrecord;
- (id)_createConfigurationFromCKRecord:(id)ckrecord;
- (id)_lock_mutableExistingConfigurationInStore:(id)store;
- (id)_lock_existingConfiguration;
- (void)_populateDNDSIDSRecord:(id)dndsidsrecord withGlobalConfiguration:(id)configuration;
- (void)_populateCKRecord:(id)ckrecord withGlobalConfiguration:(id)configuration;
- (void)_lock_prepareDNDSIDSRecordToSave:(id)save;
- (void)_lock_prepareCKRecordToSave:(id)save;
- (void)_notifyDelegateOfConfigurationChange;
- (unsigned long long)_lock_writeRecord:(id)record writePartition:(BOOL)partition error:(id *)error;
- (void)_lock_updateConfigurationWithDNDSIDSRecord:(id)dndsidsrecord;
- (void)_lock_updateConfigurationWithCKRecord:(id)ckrecord;
- (void)_lock_purgeData;
- (void)_purgeData;
@end

#endif /* DNDSGlobalConfigurationStore_h */
