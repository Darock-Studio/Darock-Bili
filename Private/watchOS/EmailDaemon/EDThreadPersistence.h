//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EDThreadPersistence_h
#define EDThreadPersistence_h
@import Foundation;

#include "EDAccountChangeHookResponder-Protocol.h"
#include "EDDatabaseChangeHookResponder-Protocol.h"
#include "EDMailboxChangeHookResponder-Protocol.h"
#include "EDMessageChangeHookResponder-Protocol.h"
#include "EDMessagePersistence.h"
#include "EDPersistenceDatabase.h"
#include "EDPersistenceDatabaseSchemaProvider-Protocol.h"
#include "EDPersistenceHookRegistry.h"
#include "EDProtectedDataReconciliationHookResponder-Protocol.h"
#include "EDSenderBucketChangeHookResponder-Protocol.h"
#include "EDThreadScopeManager.h"
#include "EDThreadScopeManagerDataSource-Protocol.h"
#include "EFLoggable-Protocol.h"
#include "EFSignpostable-Protocol.h"
#include "EMVIPManager-Protocol.h"

@class EFDebouncer, EMBlockedSenderManager, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol EFScheduler;

@interface EDThreadPersistence : NSObject<EDDatabaseChangeHookResponder, EDAccountChangeHookResponder, EDMailboxChangeHookResponder, EDMessageChangeHookResponder, EDProtectedDataReconciliationHookResponder, EDSenderBucketChangeHookResponder, EDThreadScopeManagerDataSource, EFSignpostable, EDPersistenceDatabaseSchemaProvider, EFLoggable> {
  /* instance variables */
  NSMutableSet *_threadObjectIDsToRecompute;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _threadRecomputationLock;
  NSMutableArray *_migratingThreadScopes;
  NSMutableDictionary *_backgroundProcessingAssertionsByMigratingThreadScope;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _migratingThreadScopesLock;
}

@property (readonly, nonatomic) EDMessagePersistence *messagePersistence;
@property (readonly, nonatomic) EDPersistenceDatabase *database;
@property (readonly, nonatomic) EDPersistenceHookRegistry *hookRegistry;
@property (readonly, nonatomic) NSObject<EMVIPManager> *vipManager;
@property (readonly, nonatomic) EMBlockedSenderManager *blockedSenderManager;
@property (readonly, nonatomic) EDThreadScopeManager *threadScopeManager;
@property (readonly, nonatomic) NSObject<EFScheduler> *consistencyCheckScheduler;
@property (retain, nonatomic) NSObject<EFScheduler> *threadRecomputationScheduler;
@property (retain, nonatomic) EFDebouncer *threadRecomputationDebouncer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long signpostID;

/* class methods */
+ (id)log;
+ (id)signpostLog;
+ (id)tablesAndForeignKeysToResolve:(id *)resolve associationsToResolve:(id *)resolve;
+ (id)threadScopesTableSchema;
+ (id)threadsTableSchema;
+ (id)threadMailboxesTableSchema;
+ (id)threadSendersTableSchema;
+ (id)threadRecipientsTableSchema;

/* instance methods */
- (id)initWithMessagePersistence:(id)persistence database:(id)database hookRegistry:(id)registry vipManager:(id)manager blockedSenderManager:(id)manager;
- (void)_enumerateThreadScopesUsingBlock:(id /* block */)block;
- (void)test_tearDown;
- (unsigned long long)persistenceStateForThreadScope:(id)scope;
- (BOOL)_isThreadScopePrecomputed:(id)precomputed shouldMigrate:(BOOL *)migrate;
- (void)updateLastViewedDateForThreadScope:(id)scope;
- (void)resetThreadScopesForMailboxScope:(id)scope;
- (id)threadScopesByDatabaseID;
- (void)threadObjectIDsForThreadScope:(id)scope sortDescriptors:(id)descriptors initialBatchSize:(unsigned long long)size journaledObjectIDs:(id)ids batchBlock:(id /* block */)block;
- (BOOL)_enumerateThreadObjectIDsForThreadScope:(id)scope filterClause:(id)clause sortDescriptors:(id)descriptors batchBlock:(id /* block */)block;
- (id)threadForObjectID:(id)id originatingQuery:(id)query error:(id *)error;
- (id)_nonJournaledSubjectForThreadWithObjectID:(id)id connection:(id)connection;
- (id)changeForThreadWithObjectID:(id)id changedKeyPaths:(id)paths;
- (id)_flagColorsFromRow:(id)row;
- (id)_mailboxesForThreadDatabaseID:(id)id;
- (id)_sendersForThreadDatabaseID:(id)id senderBucket:(long long *)bucket;
- (id)_sendersFromMessagesForThreadObjectID:(id)id;
- (id)_recipientsOfType:(unsigned long long)type forThreadDatabaseID:(id)id;
- (id)_recipientsOfType:(unsigned long long)type fromMessagesForThreadObjectID:(id)id;
- (id)_addressesFromMessageAddressesStatement:(id)statement;
- (id)_addressesFromSelectStatement:(id)statement additionalRowHandling:(id /* block */)handling;
- (id)nextExistingThreadObjectIDForThreadObjectID:(id)id forSortDescriptors:(id)descriptors journaledThreadsToCheck:(id)check excluding:(id)excluding;
- (id)threadObjectIDsByNextExistingForThreadObjectIDs:(id)ids forSortDescriptors:(id)descriptors journaledThreadsToCheck:(id)check;
- (void)_addOrderByToThreadSelect:(id)select forSortDescriptors:(id)descriptors;
- (id)_comparisonExpressionForSortDescriptors:(id)descriptors conversationID:(long long)id threadExpression:(id)expression threadScopeDatabaseID:(long long)id connection:(id)connection;
- (id)_columnForSortDescriptor:(id)descriptor;
- (long long)_databaseIDForThreadObjectID:(id)id;
- (void)_scheduleRecomputationForThread:(id)thread reason:(id)reason;
- (void)_recomputeThreads;
- (id)_persistedMessagesForMailboxScope:(id)scope messageExpression:(id)expression;
- (void)persistenceIsInitializingDatabaseWithConnection:(id)connection;
- (void)setNeedsUpdateForThreadScope:(id)scope;
- (id)resetThreadScopesForAccount:(id)account;
- (void)_getIndividualMailboxScopes:(id *)scopes unifiedMailboxThreadScopes:(id *)scopes forAccount:(id)account;
- (void)persistenceIsAddingMailboxWithDatabaseID:(long long)id objectID:(id)id generationWindow:(id)window;
- (void)persistenceIsAddingMessages:(id)messages journaled:(BOOL)journaled generationWindow:(id)window;
- (void)_addPersistedMessages:(id)messages journaled:(BOOL)journaled generationWindow:(id)window;
- (void)_writeThreadedMessages:(id)messages withChangedKeyPaths:(id)paths journaled:(BOOL)journaled generationWindow:(id)window;
- (void)persistenceDidAddMessages:(id)messages generationWindow:(id)window;
- (void)persistenceIsChangingFlags:(id)flags messages:(id)messages generationWindow:(id)window;
- (void)_persistenceIsChangingFlags:(id)flags messages:(id)messages generationWindow:(id)window;
- (void)persistenceDidChangeFlags:(id)flags messages:(id)messages generationWindow:(id)window;
- (id)_persistenceIsChangingFlags:(id)flags wrappedMessages:(id)messages threadObjectID:(id)id threadScopeDatabaseID:(long long)id;
- (void)persistenceIsDeletingMessages:(id)messages generationWindow:(id)window;
- (void)_persistenceIsDeletingMessages:(id)messages generationWindow:(id)window;
- (void)persistenceDidDeleteMessages:(id)messages generationWindow:(id)window;
- (id)_deleteWrappedMessages:(id)messages fromThreadWithObjectID:(id)id threadScopeDatabaseID:(long long)id generationWindow:(id)window;
- (id)_updateThreadForDeleteWithObjectID:(id)id threadScopeDatabaseID:(long long)id generationWindow:(id)window;
- (id)_updateBasicPropertiesAfterDeleteForThreadObjectID:(id)id threadScopeDatabaseID:(long long)id;
- (BOOL)_deleteMailboxesFromWrappedMessages:(id)messages fromThreadWithDatabaseID:(id)id messageThreadExpression:(id)expression;
- (BOOL)_deleteSendersFromThreadWithDatabaseID:(id)id messageThreadExpression:(id)expression;
- (BOOL)_deleteRecipientsOfType:(unsigned long long)type fromThreadWithDatabaseID:(id)id messageThreadExpression:(id)expression;
- (void)persistenceIsDeletingAllMessagesInMailboxWithURL:(id)url generationWindow:(id)window;
- (void)_resetThreadScope:(id)scope withDatabaseID:(id)id;
- (void)persistenceDidDeleteAllMessagesInMailboxesWithURLs:(id)urls generationWindow:(id)window;
- (void)persistenceIsChangingConversationID:(long long)id messages:(id)messages generationWindow:(id)window;
- (void)persistenceDidChangeGlobalMessageID:(long long)id orConversationID:(long long)id message:(id)message generationWindow:(id)window;
- (BOOL)_messagesAreJournaledForThreadWithObjectID:(id)id;
- (void)persistenceDidChangeReadLaterDate:(id)date messages:(id)messages changeIsRemote:(BOOL)remote generationWindow:(id)window;
- (void)persistenceDidUpdateDisplayDateForReadLaterDateMessages:(id)messages generationWindow:(id)window;
- (void)persistenceDidUpdateFollowUpForMessages:(id)messages generationWindow:(id)window;
- (void)_persistenceDidUpdateFollowUpOrReadLaterForMessages:(id)messages generationWindow:(id)window isFollowUp:(BOOL)up;
- (void)persistenceIsUpdatingDisplayDateForMessage:(id)message fromDate:(id)date generation:(long long)generation;
- (void)persistenceDidUpdateDisplayDateForMessages:(id)messages changeIsRemote:(BOOL)remote generation:(long long)generation;
- (void)persistenceDidUpdateProperties:(id)properties message:(id)message generationWindow:(id)window;
- (void)persistenceDidChangeSenderBucketForSenders:(id)senders generation:(long long)generation;
- (void)persistenceDidAddAddresses:(id)addresses toSender:(id)sender generation:(long long)generation;
- (void)persistenceDidRemoveAddresses:(id)addresses fromSender:(id)sender generation:(long long)generation;
- (void)_reportSenderBucketChangeForThreadsWithSenderAddresses:(id)addresses generation:(long long)generation;
- (id)_filteredPersistedMessagesForPersistedMessages:(id)messages;
- (void)_iterateWrappedMessagesByConversationForPersistedMessages:(id)messages messageFilter:(id /* block */)filter writeBlock:(id /* block */)block;
- (void)_iterateWrappedMessagesByConversationForPersistedMessages:(id)messages block:(id /* block */)block;
- (id)_wrappedMessagesByThreadScopeForPersistedMessages:(id)messages messageFilter:(id /* block */)filter;
- (id)_persistedMessagesByPossibleThreadScopeForPersistedMessages:(id)messages;
- (id)_wrappedMessageForPersistedMessages:(id)messages threadScope:(id)scope messageFilter:(id /* block */)filter;
- (id)_threadForWrappedMessages:(id)messages objectID:(id)id;
- (id)_mailboxDatabaseIDsForWrappedMessages:(id)messages;
- (void)_addKeyPathsForBasicPropertiesChangeToKeyPaths:(id)paths;
- (void)_addKeyPathsForDisplayMessageChangeToKeyPaths:(id)paths;
- (BOOL)_updateNewestReadMessageWithWrappedMessage:(id)message threadExpression:(id)expression;
- (BOOL)_recalculateNewestReadMessageForThreadObjectID:(id)id threadScopeDatabaseID:(long long)id;
- (id)_recalculateDisplayMessageForThreadObjectID:(id)id threadScopeDatabaseID:(long long)id;
- (BOOL)setPriorityForDisplayMessageSenderForThreadObjectID:(id)id;
- (id)_threadDatabaseIDExpressionForThreadScopeDatabaseID:(long long)id conversation:(long long)conversation;
- (id)_threadExpressionForThreadScopeDatabaseID:(long long)id conversation:(long long)conversation;
- (id)_upsertForThreadsWithThreadScopeDatabaseID:(long long)id conversation:(long long)conversation;
- (id)_countMessagesForExpression:(id)expression;
- (id)_messageThreadExpressionForThreadObjectID:(id)id;
- (id)_messageThreadExpressionForThreadScope:(id)scope objectIDs:(id)ids;
- (id)_messageThreadExpressionForThreadScope:(id)scope conversationExpression:(id)expression;
- (id)_expressionForThreadScope:(id)scope;
- (id)_messageMailboxesExpressionForMailboxScope:(id)scope;
- (id)_messageMailboxesExpressionForMailboxType:(long long)type;
- (id)_messageMailboxesExpressionForMailboxObjectIDs:(id)ids;
- (id)_messageMailboxesExpressionForAccountObjectIDs:(id)ids;
- (id)_messageActiveFollowUpExpressionForSentMailboxObjectIDs:(id)ids;
- (id)_messageFiredReadLaterExpression:(id)expression;
- (id)_senderAddressesExpressionForMessages:(id)messages;
- (id)_recipientAddressesExpressionForRecipientType:(unsigned long long)type messages:(id)messages;
- (id)_messageFilterExpressionForFilterPredicate:(id)predicate;
- (id)_messageIsNotDeletedExpression;
- (id)_threadQueryForThreadScope:(id)scope;
- (id)beginMigratingThreadScope:(id)scope;
- (BOOL)endMigratingThreadScope:(id)scope;
- (BOOL)addThreads:(id)threads;
- (BOOL)deleteThreadsWithObjectIDs:(id)ids;
- (id)oldestThreadObjectIDForMailbox:(id)mailbox threadScope:(id)scope;
- (id)_statementForOldestThreadInMailbox:(id)mailbox threadScope:(id)scope createMailboxDatabaseIDIfNecessary:(BOOL)necessary;
- (void)verifyConsistencyOfThreadScope:(id)scope;
- (void)_logFailedVerifyConsistencyForConversationIDs:(id)ids;
- (id)_int64SetFromSet:(id)set byRemovingIndexesFromSet:(id)set andLimitingTo:(unsigned long long)to;
- (BOOL)_addThreadScopeToDatabase:(id)database needsUpdate:(BOOL)update lastViewedDate:(id)date updateThreadScopeManager:(BOOL)manager;
- (id)_mailboxScopeForThreadScope:(id)scope andFilterPredicate:(long long *)predicate;
- (BOOL)_addThreadScopeToDatabaseWithMailboxType:(id)type filterPredicate:(long long)predicate needsUpdate:(BOOL)update lastViewedDate:(id)date connection:(id)connection;
- (BOOL)_addThreadScopeToDatabase:(id)database withMailboxDatabaseID:(long long)id filterPredicate:(long long)predicate needsUpdate:(BOOL)update lastViewedDate:(id)date updateThreadScopeManager:(BOOL)manager connection:(id)connection;
- (BOOL)addThreadScopeToDatabase:(id)database needsUpdate:(BOOL)update lastViewedDate:(id)date;
- (id)statisticsForThreadScopesWithDatabaseIDs:(id)ids;
- (BOOL)threadScopeManager:(id)manager mailboxScopeExists:(id)exists;
- (BOOL)threadScopeManager:(id)manager isValidMailboxObjectID:(id)id;
- (void)threadScopeManager:(id)manager populateThreadScopesWithBlock:(id /* block */)block;
- (void)threadScopeManager:(id)manager gatherStatisticsForThreadScopesWithDatabaseIDs:(id)ids block:(id /* block */)block;
- (BOOL)threadScopeManager:(id)manager evictThreadScopesWithDatabaseIDs:(id)ids completionBlock:(id /* block */)block;
@end

#endif /* EDThreadPersistence_h */
