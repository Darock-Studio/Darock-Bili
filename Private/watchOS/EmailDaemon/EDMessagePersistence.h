//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EDMessagePersistence_h
#define EDMessagePersistence_h
@import Foundation;

#include "EDMailboxPersistence.h"
#include "EDMailboxPredictionQueryAdapter-Protocol.h"
#include "EDMessageObjectIDToDatabaseIDConverter-Protocol.h"
#include "EDMessagePersistenceStatistics.h"
#include "EDMessageQueryParser.h"
#include "EDMessageTransformer.h"
#include "EDPersistenceDatabase.h"
#include "EDPersistenceHookRegistry.h"
#include "EFLoggable-Protocol.h"
#include "EFSignpostable-Protocol.h"

@class NSNumber, NSString;
@protocol EFSQLValueExpressable, OS_dispatch_queue;

@interface EDMessagePersistence : NSObject<EFLoggable, EFSignpostable, EDMailboxPredictionQueryAdapter, EDMessageObjectIDToDatabaseIDConverter>

@property (readonly, nonatomic) EDPersistenceHookRegistry *hookRegistry;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *cachedMetadataIsolation;
@property (retain, nonatomic) NSNumber *cachedMetadataEstimatedRowCount;
@property (nonatomic) int cachedMetadataUpdatesSinceLastCheck;
@property (readonly, nonatomic) EDPersistenceDatabase *database;
@property (retain, nonatomic) EDMessageTransformer *messageTransformer;
@property (retain, nonatomic) EDMessageQueryParser *queryParser;
@property (readonly, nonatomic) NSObject<EFSQLValueExpressable> *expressionForFindingOnlyJournaledMessages;
@property (readonly, nonatomic) NSObject<EFSQLValueExpressable> *expressionForFilteringUnavailableMessages;
@property (readonly, nonatomic) NSObject<EFSQLValueExpressable> *expressionForFilteringUnavailableMessagesFromCount;
@property (readonly, nonatomic) NSObject<EFSQLValueExpressable> *expressionForFilteringUnavailableMessagesFromCountForGlobalMessageQuery;
@property (readonly, weak, nonatomic) EDMailboxPersistence *mailboxPersistence;
@property (readonly, nonatomic) EDMessagePersistenceStatistics *persistenceStatistics;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long signpostID;

/* class methods */
+ (id)log;
+ (id)signpostLog;
+ (id)messagesTableName;
+ (id)messagesDateReceivedColumnName;
+ (id)messagesDisplayDateColumnName;
+ (id)globalMessageIDColumnName;
+ (id)addressesTableName;
+ (id)messageGlobalDataTableName;
+ (id)objectPropertyMapperForSchema:(id)schema protectedSchema:(id)schema;
+ (id)bitExpressionForConversationFlag:(unsigned long long)flag;
+ (id)bitExpressionForIsToMe;
+ (id)bitExpressionForIsCCMe;
+ (id)bitExpressionForAttachments;
+ (id)tablesAndForeignKeysToResolve:(id *)resolve associationsToResolve:(id *)resolve;
+ (id)partialMessagesTableSchemaAndForeignKeysToResolve:(id *)resolve associationsToResolve:(id *)resolve;
+ (id)recipientsTableSchemaAndForeignKeysToResolve:(id *)resolve associationsToResolve:(id *)resolve;
+ (id)_messageReferencesTableSchema;
+ (id)_cachedMetadataTableSchema;
+ (id)messageGlobalDataTableSchema;
+ (id)protectedTablesAndForeignKeysToResolve:(id *)resolve;
+ (id)_addressesTableSchema;
+ (id)_addressMetadataTableSchema;
+ (id)_subjectsTableSchema;
+ (id)_summariesTableSchema;
+ (id)_protectedMessageDataTableSchema;
+ (id)_brandIndicatorsTableSchema;
+ (id)selectAddressesStatementWithResultColumns:(id *)columns;
+ (id)addJoinsForAddressToSelectComponent:(id)component withSourceAddressColumn:(id)column;
+ (long long)databaseIDForEmailAddress:(id)address connection:(id)connection;
+ (id)allDatabaseIDsForSimpleAddresses:(id)addresses connection:(id)connection;
+ (long long)_databaseIDFromSelect:(id)select connection:(id)connection;

/* instance methods */
- (id)initWithMailboxPersistence:(id)persistence database:(id)database hookRegistry:(id)registry userProfileProvider:(id)provider blockedSenderManager:(id)manager vipReader:(id)reader;
- (id)_expressionForNonDeletedMessagesDisqualifyingColumn:(BOOL)column;
- (void)reconcileJournalWithCompletionBlock:(id /* block */)block;
- (void)performDatabaseWorkInBlockWithHighPriority:(id /* block */)priority;
- (void)performDatabaseReadBlock:(id /* block */)block;
- (id)messageObjectIDCriterionExpressionForPredicateValue:(id)value;
- (long long)countOfMessagesWithGlobalMessageID:(long long)id matchingQuery:(id)query;
- (long long)countOfJournaledMessagesMatchingQuery:(id)query;
- (long long)countOfMessagesMatchingQuery:(id)query;
- (long long)_countForSQLQuery:(id)sqlquery;
- (long long)countOfMessageStatement:(id)statement;
- (id)messagesMatchingQuery:(id)query;
- (id)messagesMatchingQuery:(id)query limit:(long long)limit;
- (id)messagesMatchingQuery:(id)query limit:(long long)limit cancelationToken:(id)token;
- (void)iterateMessagesMatchingQuery:(id)query batchSize:(long long)size firstBatchSize:(long long)size limit:(long long)limit cancelationToken:(id)token handler:(id /* block */)handler;
- (id)persistedMessagesMatchingQuery:(id)query limit:(long long)limit;
- (id)persistedMessagesMatchingQuery:(id)query limit:(long long)limit requireProtectedData:(BOOL)data;
- (void)iteratePersistedMessagesMatchingQuery:(id)query limit:(long long)limit cancelationToken:(id)token handler:(id /* block */)handler;
- (void)iteratePersistedMessagesMatchingQuery:(id)query limit:(long long)limit cancelationToken:(id)token requireProtectedData:(BOOL)data handler:(id /* block */)handler;
- (void)_iteratePersistedMessagesMatchingQuery:(id)query limit:(long long)limit cancelationToken:(id)token requireProtectedData:(BOOL)data handler:(id /* block */)handler;
- (id)sqlQueryForQuery:(id)query connection:(id)connection;
- (id)createContextForIteration;
- (id)sortableMessagesMatchingQuery:(id)query limit:(long long)limit;
- (id)persistedMessageForSQLRow:(id)sqlrow connection:(id)connection iterationContext:(id)context;
- (id)queriesSeparatedByMailboxForQuery:(id)query;
- (id)_predicatesSeparatedByMailboxOrAccountForPredicate:(id)predicate containsMailboxPredicate:(BOOL *)predicate;
- (id)_predicatesSeparatedByMailboxOrAccountForAndPredicate:(id)predicate containsMailboxPredicate:(BOOL *)predicate;
- (id)_predicatesSeparatedByMailboxOrAccountForOrPredicate:(id)predicate containsMailboxPredicate:(BOOL *)predicate;
- (id)queryWithExpandedMailboxesFromQuery:(id)query;
- (id)persistedMessageForOutgoingMessage:(id)message isDraft:(BOOL)draft;
- (id)databaseIDsDictionaryForMessageObjectIDs:(id)ids;
- (id)_databaseIDsDictionaryForGlobalMessageIDs:(id)ids mailboxScope:(id)scope;
- (id)enabledAccountMailboxesExpression;
- (id)persistedMessagesForObjectIDs:(id)ids requireProtectedData:(BOOL)data;
- (id)_threadQueryForThreadObjectID:(id)id;
- (id)persistedMessagesForMessageObjectIDs:(id)ids requireProtectedData:(BOOL)data temporarilyUnavailableMessageObjectIDs:(id *)ids;
- (id)persistedMessagesForDatabaseIDs:(id)ids requireProtectedData:(BOOL)data temporarilyUnavailableDatabaseIDs:(id *)ids;
- (id)persistedMessageIDsForMessagesForConversationIDs:(id)ids;
- (id)persistedMessageIDsForMessagesWithFollowUpsForConversationIDs:(id)ids;
- (id)_persistedMessageIDsForMessagesForConversationIDs:(id)ids onlyFollowUps:(BOOL)ups;
- (id)persistedMessageIDsForGlobalMessageIDs:(id)ids;
- (id)messagesForPersistedMessages:(id)messages mailboxScope:(id)scope;
- (id)sortableMessagesForPersistedMessages:(id)messages mailboxScope:(id)scope;
- (id)messagesForMessageObjectIDs:(id)ids missedMessageObjectIDs:(id *)ids;
- (id)_groupMessageObjectIDsByMailboxScope:(id)scope;
- (id)cachedMetadataJSONForKey:(id)key messageID:(id)id;
- (id)_cachedMetadataJSONForKey:(id)key globalMessageID:(long long)id;
- (id)completeCachedMetadataJSONForGlobalMessageID:(long long)id;
- (void)setCachedMetadataJSON:(id)json forKey:(id)key messageID:(id)id;
- (void)_setCachedMetadataJSON:(id)json forKey:(id)key globalMessageID:(long long)id;
- (void)_checkCachedMetadataRowLimitWithConnection:(id)connection;
- (id)cachedDatabaseIDsDictionaryForGlobalMessageIDs:(id)ids;
- (BOOL)compressFile:(id)file error:(id *)error;
- (BOOL)compressDirectory:(id)directory shouldCancel:(id /* block */)cancel error:(id *)error;
- (void)setContentProtectionForAttachmentFile:(id)file;
- (id)brandIndicatorForDatabaseID:(long long)id;
- (id)brandIndicatorForURL:(id)url;
- (id)brandIndicatorsForURLs:(id)urls;
- (long long)addBrandIndicatorWithData:(id)data;
- (id)undownloadedBrandIndicatorsWithLimit:(unsigned long long)limit;
- (void)setBrandIndicator:(id)indicator forURL:(id)url;
- (void)removeBrandIndicatorForURL:(id)url;
- (void)setBrandIndicatorDatabaseID:(long long)id location:(id)location forMessages:(id)messages;
- (id)retrieveFollowUpJsonStringForModelEvaluationForSuggestionsForMessages:(id)messages;
- (void)persistFollowUp:(id)up forMessages:(id)messages;
- (void)persistSendLaterForMessages:(id)messages date:(id)date;
- (void)updateBeforeDisplayForMessagesMatchingQuery:(id)query;
- (void)updateBeforeDisplayForPersistedMessages:(id)messages;
- (void)updateDisplayDateForPersistedMessages:(id)messages displayDate:(id)date changeIsRemote:(BOOL)remote;
- (void)_checkForFollowUpExpirationWithQuery:(id)query;
- (id)metadataForAddresses:(id)addresses;
- (void)setMetadata:(id)metadata forAddress:(id)address;
- (id)messageObjectIDForURL:(id)url;
- (id)messageObjectIDsForSearchableItemIdentifiers:(id)identifiers;
- (long long)globalIDForMessageIDHash:(id)idhash;
- (long long)globalIDForMessageIDHeader:(id)idheader;
- (long long)globalIDForMessageWithDatabaseID:(long long)id mailboxScope:(id *)scope;
- (id)validMailboxesForPrediction;
- (id)groupedMessagesCountByMailboxMatchingQuery:(unsigned long long)query variable:(id)variable;
- (id)requestContentForMessageObjectID:(id)id requestID:(unsigned long long)id options:(id)options delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)requestSummaryForMessageObjectID:(id)id;
- (id)diagnosticsForForMessageObjectIDs:(id)ids;
- (void)iterateMessagesMatchingSmartSortQuery:(id)query limit:(long long)limit handler:(id /* block */)handler;
- (id)collectStatistics;
- (void)collectStatisticsWithStatistics:(id)statistics;
@end

#endif /* EDMessagePersistence_h */
