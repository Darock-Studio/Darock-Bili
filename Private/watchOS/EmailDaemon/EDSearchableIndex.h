//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EDSearchableIndex_h
#define EDSearchableIndex_h
@import Foundation;

#include "CSSearchableIndexDelegate-Protocol.h"
#include "EDSearchableIndexDataSource-Protocol.h"
#include "EDSearchableIndexSchedulable-Protocol.h"
#include "EDSearchableIndexSchedulableDelegate-Protocol.h"
#include "EDSearchableIndexVerifierDataSource-Protocol.h"
#include "EFCancelable-Protocol.h"
#include "EFLoggable-Protocol.h"
#include "EFSignpostable-Protocol.h"
#include "EMSearchableIndexInterface-Protocol.h"
#include "_EMSearchableIndexPendingRemovals.h"

@class CSSearchableIndex, EFCancelationToken, EFFuture, EFLazyCache, EFObservable, EFStoppableScheduler, EMCoreAnalyticsCollector, NSDate, NSMutableArray, NSMutableSet, NSString;
@protocol EDSearchableIndexReasonProvider, EFStoppableScheduler<EFAssertableScheduler, EFStoppableScheduler<EFSuspendableScheduler><EFAssertableScheduler, OS_os_activity;

@interface EDSearchableIndex : NSObject<CSSearchableIndexDelegate, EDSearchableIndexVerifierDataSource, EFSignpostable, EFLoggable, EDSearchableIndexSchedulable, EMSearchableIndexInterface> {
  /* instance variables */
  EFCancelationToken *_cancelationToken;
  NSObject<EFCancelable> *_stateCancelable;
  EFStoppableScheduler<EFAssertableScheduler> *_stateTransitionScheduler;
  NSObject<EFCancelable> *_coalescingTimer;
  unsigned long long _throttledIndexingBatchSize;
  unsigned long long _throttledDataSourceBatchSize;
  NSObject<OS_os_activity> *_batchIndexingActivity;
  NSMutableSet *_removedIdentifiers;
  NSMutableArray *_preparingItems;
  NSMutableArray *_pendingItems;
  NSMutableArray *_preprocessingItems;
  NSMutableArray *_processingItems;
  NSMutableSet *_pendingDomainRemovals;
  _EMSearchableIndexPendingRemovals *_pendingIdentifierRemovals;
  EFStoppableScheduler<EFSuspendableScheduler><EFAssertableScheduler> *_indexingScheduler;
  EFStoppableScheduler *_dataSourceScheduler;
  EFStoppableScheduler *_addIndexItemsScheduler;
  EFStoppableScheduler *_preprocessingScheduler;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _mainThreadAccessibleIvarLock;
  EFStoppableScheduler *_indexingBatchScheduler;
  EFLazyCache *_searchResultsCache;
  BOOL _isActive;
  BOOL _needsRefresh;
  BOOL _needsVerification;
  BOOL _coalesceTimerFired;
  BOOL _scheduledProcessing;
  BOOL _scheduledRefresh;
  BOOL _scheduledVerification;
  BOOL _indexImmediately;
  atomic long long _countOfBlocksAffectingDataSourceAndIndex;
  NSDate *_lastReindexRadarPrompt;
}

@property (readonly) long long transaction;
@property (retain, nonatomic) CSSearchableIndex *searchIndex;
@property (readonly) unsigned long long currentMaximumBatchSize;
@property (readonly, copy, nonatomic) NSString *copyDiagnosticInformation;
@property (nonatomic) BOOL skipIndexExclusionCheck;
@property (nonatomic) BOOL clientStateFetched;
@property (nonatomic) BOOL enableSpotlightVerification;
@property (copy, nonatomic) NSString *searchableIndexBundleID;
@property (nonatomic) double coalescingDelaySeconds;
@property (nonatomic) double dataSourceUpdateTimeLimit;
@property (readonly) long long resumeCount;
@property (readonly) BOOL active;
@property (retain, nonatomic) EFFuture *delayDataSourceAssignmentFuture;
@property (readonly, nonatomic) EMCoreAnalyticsCollector *analyticsCollector;
@property (readonly, copy, nonatomic) NSString *indexName;
@property (weak, nonatomic) NSObject<EDSearchableIndexDataSource> *dataSource;
@property (weak, nonatomic) NSObject<EDSearchableIndexReasonProvider> *reasonProvider;
@property (weak, nonatomic) NSObject<EDSearchableIndexSchedulableDelegate> *schedulableDelegate;
@property (readonly, nonatomic) unsigned long long pendingIndexItemsCount;
@property (nonatomic) BOOL isIndexingDisabled;
@property (readonly) BOOL performingBlockAffectingDataSourceAndIndex;
@property BOOL persistenceAvailable;
@property (readonly, nonatomic) EFObservable *powerObservable;
@property (readonly, nonatomic) BOOL pluggedIn;
@property (readonly, nonatomic) BOOL shouldCancelSearchQuery;
@property (readonly, nonatomic) BOOL canIndexAttachments;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long signpostID;
@property (nonatomic) BOOL dataSourceIndexingPermitted;

/* class methods */
+ (id)log;
+ (id)signpostLog;
+ (BOOL)isValidTransaction:(long long)transaction;
+ (BOOL)isIncrementalIndexingType:(long long)type;
+ (id)userHandle;
+ (id)_reindexReasonString:(long long)string;
+ (id)_localClientStateURL;
+ (id)_localClientState;
+ (void)_saveLocalClientState:(id)state;

/* instance methods */
- (id)initWithName:(id)name dataSource:(id)source reasonProvider:(id)provider;
- (void)dealloc;
- (void)scheduleRecurringActivity;
- (void)_powerStateChanged;
- (void)_promptToFileRadarAboutReindexing:(id /* block */)reindexing;
- (void)_sendAnalyticsForReindexReason:(long long)reason;
- (void)_storeLastKnownReindexReason:(long long)reason withInfo:(id)info;
- (void)_registerStateCaptureHandler;
- (void)_collectAnalyticsForReindexReason:(long long)reason withInfo:(id)info;
- (void)_collectAnalyticsForReindexReason:(long long)reason;
- (void)_scheduleSpotlightVerification;
- (void)_clearOrphanedSearchableMessagesFromDatabase;
- (void)_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:(id /* block */)completion;
- (void)_registerDistantFutureSpotlightVerification;
- (void)_verifySpotlightIndex;
- (void)_handleFailingTransactionIDs:(id)ids;
- (double)_throttleRequestedSize:(unsigned long long *)size targetTime:(double)time action:(id /* block */)action;
- (void)setForeground:(BOOL)foreground;
- (void)applicationWillSuspend;
- (void)applicationWillResume;
- (void)_fetchLastClientState;
- (void)_noteNeedsLastClientStateFetch;
- (long long)_transaction;
- (long long)_nextTransaction;
- (void)_invalidateCache;
- (id)_eventDataForTransitionState:(id)state;
- (void)_suspend;
- (void)suspend;
- (void)_resume;
- (void)resume;
- (void)refresh;
- (BOOL)isPersistenceAvailable;
- (BOOL)isActive;
- (BOOL)_queueContentsAllowsRefresh;
- (void)_dataSourceScheduleWork:(id /* block */)work;
- (void)_dataSourceAssignTransaction:(long long)transaction updates:(id)updates completion:(id /* block */)completion;
- (void)_dataSourceAssignTransaction:(long long)transaction forIdentifiers:(id)identifiers completion:(id /* block */)completion;
- (void)_dataSourceInvalidateItemsGreaterThanTransaction:(long long)transaction completion:(id /* block */)completion;
- (void)_dataSourceRequestNeededUpdatesExcludingIdentifiers:(id)identifiers completion:(id /* block */)completion;
- (void)_dataSourceVerifyRepresentativeSampleWithCompletion:(id /* block */)completion;
- (void)_dataSourcePrepareToIndexItems:(id)items fromRefresh:(BOOL)refresh withCompletion:(id /* block */)completion;
- (id)bundleIDForSearchableIndexVerifier:(id)verifier;
- (id)dataSamplesForSearchableIndexVerifier:(id)verifier searchableIndex:(id)index count:(unsigned long long)count lastVerifiedMessageID:(long long)id;
- (id)searchableIndexForSearchableIndexVerifier:(id)verifier;
- (id)knownTransactionIDsForSearchableIndexVerifier:(id)verifier;
- (void)_startCoalescingTimer;
- (void)_stopCoalescingTimer;
- (void)_coalescingTimerFired;
- (void)_transitionWithBudgetTimeUsed:(double)used;
- (void)_queueConsumeBudgetElapsedPeriod:(double)period;
- (void)_queueConsumeBudgetItemCount:(unsigned long long)count;
- (void)_queueRefresh;
- (unsigned long long)_countOfItemsInPendingQueues;
- (void)_queueTransitionActive:(BOOL)active fromRefresh:(BOOL)refresh;
- (void)_suspendIndexingScheduler;
- (void)_resumeIndexingScheduler;
- (void)_logSignpostForIndexingBatchStartWithPendingItemsCount:(id)count;
- (void)_logSignpostForIndexingBatchAssignedDomainRemovalCount:(unsigned long long)count;
- (void)_logSignpostForIndexingBatchAssignedUpdatesWithItemsIndexedCount:(unsigned long long)count;
- (void)_logSignpostForIndexingBatchCompletedWithItemsIndexedCount:(id)count;
- (void)_scheduleProcessPendingItemsFromRefresh:(BOOL)refresh;
- (void)_scheduleDataSourceRefresh;
- (void)beginUpdatesAffectingDataSourceAndIndex;
- (void)endUpdatesAffectingDataSourceAndIndex;
- (void)performBlockAffectingDataSourceAndIndex:(id /* block */)index;
- (BOOL)isPerformingBlockAffectingDataSourceAndIndex;
- (id)_consumeBatchOfSize:(unsigned long long)size;
- (id)_identifiersForItems:(id)items;
- (id)_identifiersStringForItems:(id)items maxLength:(unsigned long long)length;
- (void)_getDomainRemovals:(id *)removals identifierRemovals:(id *)removals;
- (BOOL)_processIndexingBatch:(id)batch clientState:(id)state itemsNotIndexed:(id)indexed;
- (id)_processDomainRemovals:(id)removals;
- (void)_processIdentifierRemovals:(id)removals;
- (id)_pendingIdentifiers;
- (void)_processRefreshRequestWithCompletion:(id /* block */)completion;
- (void)_processSpotlightVerificationWithCompletion:(id /* block */)completion;
- (id)issueDiagnosticsRequestForMessageRowId:(id)id;
- (id)indexedEmptySubjectIdentifers;
- (void)searchableIndex:(id)index reindexSearchableItemsWithIdentifiers:(id)identifiers acknowledgementHandler:(id /* block */)handler;
- (void)searchableIndex:(id)index reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)handler;
- (void)_invalidateItemsInTransactions:(id)transactions;
- (void)reindexSearchableItemsWithIdentifiers:(id)identifiers acknowledgementHandler:(id /* block */)handler;
- (void)reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)handler;
- (void)reindexAllItemsWithOptions:(unsigned long long)options acknowledgementHandler:(id /* block */)handler;
- (void)indexItems:(id)items;
- (void)indexItems:(id)items immediately:(BOOL)immediately;
- (void)indexItems:(id)items fromRefresh:(BOOL)refresh immediately:(BOOL)immediately;
- (void)_indexItems:(id)items fromRefresh:(BOOL)refresh immediately:(BOOL)immediately;
- (void)_doIndexItems:(id)items fromRefresh:(BOOL)refresh immediately:(BOOL)immediately;
- (void)removeItemsWithIdentifiers:(id)identifiers;
- (void)removeItemsWithIdentifiers:(id)identifiers reasons:(id)reasons fromRefresh:(BOOL)refresh;
- (void)removeItemsForDomainIdentifier:(id)identifier;
- (void)removeAllItems;
- (void)removeAllItemsWithAcknowledgementHandler:(id /* block */)handler;
- (id)messageIDsMatchingQuery:(id)query;
- (id)searchableItemSnippetDataMatchingCriterion:(id)criterion;
- (BOOL)_preprocessItemIfNecessary:(id)necessary fromRefresh:(BOOL)refresh;
- (void)removeMessages:(id)messages;
- (void)indexAttachmentsForMessageWithIdentifier:(id)identifier immediately:(BOOL)immediately;
- (void)_processAttachmentItemsForSuggestionsService:(id)service;
- (void)indexRichLinksForMessageWithIdentifier:(id)identifier immediately:(BOOL)immediately;
- (void)indexMessages:(id)messages includeBody:(BOOL)body indexingType:(long long)type;
- (void)markMessagesAsPrinted:(id)printed;
- (void)logPowerEventWithIdentifier:(id)identifier eventData:(id)data;
- (BOOL)isPluggedIn;
- (void)addSearchQueryCancelable:(id)cancelable;
- (void)removeSearchQueryCancelable:(id)cancelable;
- (void)attachmentBecameAvailable:(id)available;
- (void)richLinkBecameAvailable:(id)available;
- (id)dataSourceRefreshReasons;
- (id)purgeReasons;
- (id)exclusionReasons;
- (id)currentReasons;
- (void)test_tearDown;
- (BOOL)isDataSourceIndexingPermitted;
@end

#endif /* EDSearchableIndex_h */
