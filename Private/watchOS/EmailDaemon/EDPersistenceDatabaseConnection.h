//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EDPersistenceDatabaseConnection_h
#define EDPersistenceDatabaseConnection_h
@import Foundation;

#include "EDPersistenceDatabaseConnectionDelegate-Protocol.h"
#include "EDPersistenceDatabaseJournal.h"
#include "EFLoggable-Protocol.h"

@class EFSQLConnection, NSString;

@interface EDPersistenceDatabaseConnection : NSObject<EFLoggable> {
  /* instance variables */
  NSObject<EDPersistenceDatabaseConnectionDelegate> *_delegate;
  NSString *_protectedDatabaseName;
  NSString *_journalDatabaseName;
  EDPersistenceDatabaseJournal *_journal;
}

@property (readonly, nonatomic) EFSQLConnection *sqlConnection;
@property (readonly, nonatomic) NSString *basePath;
@property (readonly, nonatomic) NSString *fullPath;
@property (readonly, nonatomic) BOOL isValid;
@property (readonly, nonatomic) BOOL protectedDatabaseAttached;
@property (readonly, nonatomic) BOOL journalDatabaseAttached;
@property (copy, nonatomic) NSString *transactionLabel;
@property (readonly, nonatomic) struct sqlite3 * sqlDB;
@property (readonly, nonatomic) BOOL isWriter;
@property (readonly, nonatomic) long long lastInsertedDatabaseID;
@property (readonly, nonatomic) long long transactionGeneration;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)log;

/* instance methods */
- (id)init;
- (id)initWithBasePath:(id)path databaseName:(id)name isWriter:(BOOL)writer delegate:(id)delegate;
- (id)initForInMemoryDatabaseIsWriter:(BOOL)writer delegate:(id)delegate;
- (id)initWithSQLDB:(struct sqlite3 *)sqldb isWriter:(BOOL)writer delegate:(id)delegate;
- (void)dealloc;
- (id)SQLQueryLogger;
- (id)preparedStatementForQueryString:(id)string;
- (BOOL)executeSelectStatement:(id)statement withBlock:(id /* block */)block error:(id *)error;
- (BOOL)executeInsertStatement:(id)statement error:(id *)error;
- (BOOL)executeInsertStatement:(id)statement rowsChanged:(unsigned long long *)changed;
- (BOOL)executeUpdateStatement:(id)statement error:(id *)error;
- (BOOL)executeUpdateStatement:(id)statement rowsChanged:(unsigned long long *)changed;
- (BOOL)executeUpsertStatement:(id)statement error:(id *)error;
- (BOOL)executeUpsertStatement:(id)statement rowsChanged:(unsigned long long *)changed;
- (BOOL)executeDeleteStatement:(id)statement error:(id *)error;
- (BOOL)executeDeleteStatement:(id)statement rowsChanged:(unsigned long long *)changed;
- (BOOL)executeStatementString:(id)string errorMessage:(id)message;
- (unsigned long long)countForSelectStatement:(id)statement;
- (id)databaseIDsForSelectStatement:(id)statement;
- (void)clearLastInsertedDatabaseID;
- (void)open;
- (void)close;
- (int)configureSQLConnection;
- (BOOL)performWithOptions:(unsigned long long)options transactionError:(id *)error block:(id /* block */)block;
- (long long)transactionTypeForWriting;
- (BOOL)checkForConnectionErrorWithMessage:(id)message;
- (void)handleError:(id)error message:(id)message;
- (void)handleSQLResult:(int)sqlresult message:(id)message;
- (BOOL)databaseIsAttached:(id)attached;
- (BOOL)tableExists:(id)exists;
- (BOOL)tableExists:(id)exists inDatabase:(id)database;
- (BOOL)columnExists:(id)exists inTable:(id)table type:(unsigned long long *)type;
- (BOOL)columnExists:(id)exists inTable:(id)table database:(id)database type:(unsigned long long *)type;
- (BOOL)attachProtectedDatabaseWithName:(id)name url:(id)url error:(id *)error;
- (BOOL)attachProtectedDatabaseWithName:(id)name error:(id *)error;
- (BOOL)attachProtectedDatabaseWithName:(id)name;
- (BOOL)detachProtectedDatabase;
- (BOOL)attachJournalDatabase:(id)database withName:(id)name error:(id *)error;
- (BOOL)attachJournalDatabase:(id)database withName:(id)name;
- (BOOL)detachJournalDatabase;
@end

#endif /* EDPersistenceDatabaseConnection_h */
