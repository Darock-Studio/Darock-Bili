//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EDConversationPersistence_h
#define EDConversationPersistence_h
@import Foundation;

#include "EDConversationDailyCloudExporterDelegate-Protocol.h"
#include "EDConversationSubscriptionProvider-Protocol.h"
#include "EDPersistenceDatabase.h"
#include "EDPersistenceDatabaseSchemaProvider-Protocol.h"
#include "EDPersistenceHookRegistry.h"
#include "EDUbiquitousConversationManager.h"
#include "EDUbiquitousConversationManagerDelegate-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface EDConversationPersistence : NSObject<EDUbiquitousConversationManagerDelegate, EDConversationDailyCloudExporterDelegate, EDPersistenceDatabaseSchemaProvider, EDConversationSubscriptionProvider>

@property (readonly, weak, nonatomic) EDPersistenceDatabase *database;
@property (readonly, nonatomic) EDUbiquitousConversationManager *conversationManager;
@property (readonly, nonatomic) EDPersistenceHookRegistry *hookRegistry;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue;
@property (readonly, nonatomic) BOOL hasSubscribedConversations;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)log;
+ (id)conversationsTableName;
+ (id)tablesAndForeignKeysToResolve:(id *)resolve associationsToResolve:(id *)resolve;
+ (id)conversationsTableSchema;
+ (id)conversationIDMessageIDTableSchema;
+ (long long)conversationNotificationLevelForConversationFlags:(unsigned long long)flags;
+ (unsigned long long)conversationFlagsForConversationNotificationLevel:(long long)level;

/* instance methods */
- (id)initWithDatabase:(id)database hookRegistry:(id)registry;
- (void)initializeConversationManagerAndPerformInitialSync;
- (id)syncedConversationIDsBySyncKey;
- (id)messageIDsForConversationID:(long long)id limit:(unsigned long long)limit;
- (long long)conversationIDForMessageIDs:(id)ids;
- (unsigned long long)persistenceConversationFlagsForConversationID:(long long)id;
- (long long)createConversationWithFlags:(unsigned long long)flags;
- (void)markConversationWithIDs:(id)ids mute:(BOOL)mute;
- (void)markConversationWithIDs:(id)ids notify:(BOOL)notify;
- (void)setPersistenceConversationFlags:(unsigned long long)flags forConversationIDs:(id)ids reason:(long long)reason;
- (void)setPersistenceConversationFlags:(unsigned long long)flags syncKey:(id)key forConversationID:(long long)id reason:(long long)reason;
- (void)updateAssociationTableForMessagePersistentIDs:(id)ids conversationID:(long long)id;
- (void)remoteMessageIDsAdded:(id)added forConversationID:(long long)id;
- (void)updateAssociationTableForMessageIDs:(id)ids conversationID:(long long)id;
- (void)updateAssociationTableForMessageID:(id)id dateSent:(id)sent conversationID:(long long)id;
- (void)updateConversationNotificationLevel:(long long)level forConversationIDs:(id)ids;
- (void)pruneConversationTables:(double)tables;
- (void)clearConversationFlagsAndSyncKeyForConversationIDs:(id)ids;
- (void)_notifyOfFlagChangeForConversationID:(long long)id oldFlags:(unsigned long long)flags newFlags:(unsigned long long)flags reason:(long long)reason generationWindow:(id)window;
- (void)_postChangeNotificationForConversationID:(long long)id flags:(unsigned long long)flags oldFlags:(unsigned long long)flags reason:(long long)reason;
- (long long)previousSyncAnchorForDailyExport;
- (long long)currentSyncAnchorForDailyExport;
- (void)setNewPreviousSyncAnchorForDailyExport:(long long)export;
- (id)flaggedConversationsChangedBetweenStartAnchor:(long long)anchor endAnchor:(long long)anchor;
@end

#endif /* EDConversationPersistence_h */
