//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef EDThreadScopeManager_h
#define EDThreadScopeManager_h
@import Foundation;

#include "EDThreadScopeManagerDataSource-Protocol.h"
#include "EFLoggable-Protocol.h"

@class NSArray, NSMutableDictionary, NSString;
@protocol EFScheduler;

@interface EDThreadScopeManager : NSObject<EFLoggable> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _threadScopesLock;
}

@property (readonly, weak, nonatomic) NSObject<EDThreadScopeManagerDataSource> *dataSource;
@property (readonly, nonatomic) NSObject<EFScheduler> *evictionScheduler;
@property (readonly, copy, nonatomic) NSArray *threadScopes;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)log;
+ (id)mailboxTypesToPrecompute;

/* instance methods */
- (id)initWithDataSource:(id)source;
- (BOOL)isThreadScopePrecomputed:(id)precomputed mailboxProvider:(id)provider shouldMigrate:(BOOL *)migrate;
- (id)_threadScopeInfoForThreadScope:(id)scope;
- (id)precomputedMailboxScopeForThreadScope:(id)scope mailboxProvider:(id)provider foundPredicates:(unsigned long long *)predicates;
- (id)_precomputedMailboxScopeForFilterPredicate:(id)predicate mailboxProvider:(id)provider foundPredicates:(unsigned long long *)predicates;
- (id)_mailboxScopeFromPredicate:(id)predicate;
- (id)_mailboxFromPrecomputedMailboxScope:(id)scope mailboxProvider:(id)provider mailboxPredicate:(id *)predicate;
- (id)threadScopeFromPrecomputedMailboxScope:(id)scope predicates:(unsigned long long)predicates mailboxProvider:(id)provider;
- (BOOL)_shouldPrecomputeMailboxWithObjectID:(id)id;
- (BOOL)_shouldPrecomputeMailboxType:(id)type;
- (long long)databaseIDForThreadScope:(id)scope;
- (id)threadScopesByDatabaseID;
- (void)addThreadScope:(id)scope withDatabaseID:(long long)id needsUpdate:(BOOL)update lastViewedDate:(id)date;
- (void)setNeedsUpdate:(BOOL)update forThreadScope:(id)scope;
- (void)setLastViewedDate:(id)date forThreadScope:(id)scope;
- (void)removeAllThreadScopes;
- (void)removeThreadScope:(id)scope;
- (void)removeThreadScopesForMailboxScope:(id)scope;
- (void)_initializeThreadScopesIfNeeded;
- (void)_evictAtLeast:(unsigned long long)least upTo:(unsigned long long)to fromThreadScopesWithDatabaseIDs:(id)ids;
- (double)_evictionScoreForCount:(unsigned long long)count timeInterval:(double)interval;
- (id)_threadScopesWithLastViewedOlderThanLimit;
- (unsigned long long)_numberOfThreadScopesToEvictFrom:(id)from upTo:(unsigned long long *)to;
@end

#endif /* EDThreadScopeManager_h */
