//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDMedicationScheduleManager_h
#define HDMedicationScheduleManager_h
@import Foundation;

#include "HDDatabaseProtectedDataObserver-Protocol.h"
#include "HDMedicationNotificationManager.h"
#include "HDProfileReadyObserver-Protocol.h"

@class HDAssertion, HDProfile, NSMutableDictionary, NSString, _HKDelayedOperation;
@protocol HKObserverSet<HDMedicationScheduleObserver, HKSynchronousObserverSet<HDMedicationScheduleSynchronousObserver, OS_dispatch_queue;

@interface HDMedicationScheduleManager : NSObject<HDProfileReadyObserver, HDDatabaseProtectedDataObserver> {
  /* instance variables */
  HDProfile *_profile;
  NSObject<OS_dispatch_queue> *_queue;
  HKObserverSet<HDMedicationScheduleObserver> *_observers;
  HKSynchronousObserverSet<HDMedicationScheduleSynchronousObserver> *_synchronousObservers;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _observersLock;
  NSMutableDictionary *_observersLock_pendingSchedulesBySyncIdentity;
  _HKDelayedOperation *_rescheduleOperation;
  long long _isOperationRequiredOnNextUnlock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _operationLock;
  HDAssertion *_accessibilityAssertion;
}

@property (readonly, nonatomic) HDMedicationNotificationManager *notificationManager;
@property (copy, nonatomic) id /* block */ unitTesting_willRunRescheduleOperationWithDelay;
@property (copy, nonatomic) id /* block */ unitTesting_didRunRescheduleOperationWithDelay;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithProfile:(id)profile;
- (void)dealloc;
- (void)profileDidBecomeReady:(id)ready;
- (void)database:(id)database protectedDataDidBecomeAvailable:(BOOL)available;
- (BOOL)medicationSchedule:(id *)schedule medicationIdentifier:(id)identifier error:(id *)error;
- (BOOL)medicationSchedule:(id *)schedule identifier:(id)identifier error:(id *)error;
- (id)medicationSchedulesWithError:(id *)error;
- (id)medicationSchedulesWithPredicate:(id)predicate error:(id *)error;
- (id)medicationSchedulesWithPredicate:(id)predicate transaction:(id)transaction error:(id *)error;
- (BOOL)enumerateMedicationSchedulesWithPredicate:(id)predicate limit:(long long)limit orderingTerms:(id)terms error:(id *)error enumerationHandler:(id /* block */)handler;
- (BOOL)insertMedicationSchedule:(id)schedule error:(id *)error;
- (BOOL)insertMedicationSchedules:(id)schedules error:(id *)error;
- (BOOL)insertMedicationSchedules:(id)schedules syncProvenance:(long long)provenance syncIdentity:(long long)identity error:(id *)error;
- (BOOL)rescheduleMedicationsWithError:(id *)error;
- (void)rescheduleMedicationsSynchronously:(BOOL)synchronously;
- (BOOL)updateNotificationSent:(BOOL)sent scheduleItemIdentifier:(id)identifier error:(id *)error;
- (BOOL)updateSchedulesToLocalTimeZoneAndMaintainCalendarDatesAndTimes:(BOOL)times error:(id *)error;
- (BOOL)_updateSchedulesToTimeZone:(id)zone maintainCalendarDatesAndTimes:(BOOL)times error:(id *)error;
- (BOOL)deleteMedicationSchedule:(id)schedule error:(id *)error;
- (void)registerObserver:(id)observer queue:(id)queue;
- (void)unregisterObserver:(id)observer;
- (void)registerSynchronousObserver:(id)observer;
- (void)unregisterSynchronousObserver:(id)observer;
- (BOOL)pruneAllScheduleItemsBeforeDate:(id)date createDoseEvents:(BOOL)events error:(id *)error;
- (void)batchNotifyObserversOnCommitOfTransaction:(id)transaction didAddOrModifySchedule:(id)schedule syncIdentity:(long long)identity;
- (id)orderingTermsForSortDescriptors:(id)descriptors error:(id *)error;
@end

#endif /* HDMedicationScheduleManager_h */
