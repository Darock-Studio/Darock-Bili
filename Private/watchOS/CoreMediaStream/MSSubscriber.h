//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef MSSubscriber_h
#define MSSubscriber_h
@import Foundation;

#include "MSCupidStateMachine.h"
#include "MSMediaStreamDaemon.h"
#include "MSObjectQueue.h"
#include "MSReauthorizationProtocol.h"
#include "MSReauthorizationProtocolDelegate-Protocol.h"
#include "MSSubscribeStorageProtocol-Protocol.h"
#include "MSSubscribeStorageProtocolDelegate-Protocol.h"
#include "MSSubscribeStreamsProtocol.h"
#include "MSSubscribeStreamsProtocolDelegate-Protocol.h"
#include "MSSubscriber-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol MSSubscriberDelegate;

@interface MSSubscriber : MSCupidStateMachine<MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate> {
  /* instance variables */
  BOOL _checkOneMoreTime;
  int _state;
  MSSubscribeStreamsProtocol *_protocol;
  NSMutableDictionary *_newSubscriptionsByStreamID;
  int _retrievalState;
  NSObject<MSSubscribeStorageProtocol> *_storageProtocol;
  MSReauthorizationProtocol *_reauthProtocol;
  MSObjectQueue *_retrievalQueue;
  NSMutableArray *_assetsBeingRetrieved;
  long long _maxErrorCount;
}

@property (nonatomic) MSMediaStreamDaemon *daemon;
@property (nonatomic) long long targetRetrievalByteCount;
@property (nonatomic) int retrievalBatchSize;
@property (nonatomic) NSObject<MSSubscriberDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)subscriberForPersonID:(id)id;
+ (id)existingSubscriberForPersonID:(id)id;
+ (id)_clearInstantiatedSubscribersByPersonID;
+ (void)forgetPersonID:(id)id;
+ (void)_setMasterNextActivityDate:(id)date forPersonID:(id)id;
+ (id)nextActivityDate;
+ (id)nextActivityDateForPersonID:(id)id;
+ (id)personIDsWithOutstandingActivities;
+ (void)stopAllActivities;
+ (BOOL)isInRetryState;
+ (id)_descriptionForState:(int)state;
+ (id)_descriptionForRetrievalState:(int)state;

/* instance methods */
- (id)subscribedStreams;
- (id)ownSubscribedStream;
- (id)initWithPersonID:(id)id baseURL:(id)url;
- (void)deactivate;
- (void)dealloc;
- (void)_changeStateTo:(int)to;
- (void)_changeRetrievalStateTo:(int)to;
- (void)_refreshServerSideConfigurationParameters;
- (void)_serverSideConfigurationDidChange:(id)change;
- (void)_updateMasterManifest;
- (BOOL)_hasOutstandingPoll;
- (void)_setHasOutstandingPoll:(BOOL)poll;
- (id)_subscriptionsByStreamID;
- (void)_setSubscriptionsByStreamID:(id)id;
- (void)resetSync;
- (BOOL)_isAllowedToDownload;
- (void)checkForNewAssetCollectionsIfMissingCtag;
- (void)checkForNewAssetCollections;
- (void)_checkForNewAssetCollections;
- (void)_didFinishRetrievingSubscriptionUpdate;
- (void)subscribeStreamsProtocol:(id)protocol willReceiveUpdatesForPersonID:(id)id wasReset:(BOOL)reset metadata:(id)metadata;
- (void)subscribeStreamsProtocol:(id)protocol didReceiveAssetCollections:(id)collections forPersonID:(id)id;
- (void)subscribeStreamsProtocol:(id)protocol didFinishReceivingUpdatesForPersonID:(id)id ctag:(id)ctag;
- (void)subscribeStreamsProtocol:(id)protocol didFindDisappearedSubscriptionForPersonID:(id)id;
- (void)subscribeStreamsProtocol:(id)protocol didFinishError:(id)error;
- (void)_didReceiveAuthenticationError:(id)error;
- (void)subscribeStreamsProtocol:(id)protocol didReceiveAuthenticationError:(id)error;
- (void)subscribeStreamsProtocol:(id)protocol didFindTemporarilyUnavailableSubscriptionForPersonID:(id)id;
- (void)retrieveAssets:(id)assets;
- (void)checkForOutstandingActivities;
- (void)_retrieveAssets;
- (void)_retrieveNextAssets;
- (void)_reauthorizeAssets;
- (void)_stopOutSubscriberState:(int *)state outRetrievalState:(int *)state;
- (void)stop;
- (void)_abort;
- (void)abort;
- (void)_forget;
- (BOOL)_isInRetryState;
- (void)_finishedRetrievingAsset:(id)asset;
- (void)subscribeStorageProtocol:(id)protocol didFinishRetrievingAsset:(id)asset error:(id)error;
- (void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id)assets;
- (void)reauthorizationProtocol:(id)protocol didReceiveAuthenticationError:(id)error;
- (void)reauthorizationProtocol:(id)protocol reauthorizedAssets:(id)assets rejectedAssets:(id)assets error:(id)error;
@end

#endif /* MSSubscriber_h */
