//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef MSSubscribeStreamsProtocol_h
#define MSSubscribeStreamsProtocol_h
@import Foundation;

#include "MSStreamsProtocol.h"

@interface MSSubscribeStreamsProtocol : MSStreamsProtocol {
  /* instance variables */
  struct __MSSSPCContext { struct __MSSPCContext { void *owner; struct __CFString *personID; struct __CFString *authToken; struct __CFDictionary *deviceInfo; struct __CFDictionary *clientHeadersRef; double connectionTimeout; undefined *__didReceiveDataCallback; undefined *__didFinishCallback; undefined *__didFailAuthenticationCallback; undefined *__didReceiveServerSideConfigVersionCallback; undefined *__didReceiveRetryAfterCallback; struct CFURLConnectionClient_V1 *__client; struct _CFURLConnection *__connection; struct __CFData *__responseData; struct __CFHTTPMessage *__response; struct __CFError *__error; } _super; undefined *finishedCallback; undefined *gotDataChunkCallback; undefined *authFailedCallback; undefined *didReceiveServerSideConfigurationVersionCallback; undefined *didReceiveRetryAfterCallback; double connectionTimeout; long long __state; struct __CFData *__chunkLengthData; struct __CFData *__currentChunkData; long long __chunkBytesRemaining; } _context;
  int _chunkIndex;
  struct __MSSSPCChunkParsingContext { void * x0; undefined * x1; undefined * x2; undefined * x3; undefined * x4; undefined * x5; struct __CFString * x6; struct __CFURL * x7; struct __CFString * x8; struct __CFString * x9; int x10; } * _parseContext;
}

/* instance methods */
- (id)delegate;
- (void)setDelegate:(id)delegate;
- (id)initWithPersonID:(id)id baseURL:(id)url;
- (void)dealloc;
- (id)_pathToChunkIndex:(int)index;
- (void)pollForSubscriptionUpdatesWithAccountAnchors:(id)anchors;
- (void)_coreProtocolDidFinishError:(id)error;
- (void)_coreProtocolDidGetDataChunk:(id)chunk;
- (void)_coreProtocolDidFailAuthentication:(id)authentication;
- (void)_parseChunks;
- (void)_parseNextChunk;
- (void)_chunkDidBeginStreamForPersonID:(id)id wasReset:(BOOL)reset metadata:(id)metadata;
- (void)_chunkDidParseAssetCollections:(id)collections forPersonID:(id)id;
- (void)_chunkDidEndStreamForPersonID:(id)id ctag:(id)ctag;
- (void)_chunkDidFindSubscriptionGoneForPersonID:(id)id;
- (void)_chunkDidFindSubscriptionTemporarilyUnavailableForPersonID:(id)id;
- (id)_invalidFieldErrorWithFieldName:(id)name suggestion:(id)suggestion;
- (id)_invalidFieldErrorWithFieldName:(id)name;
- (id)_assetFromCoreDictionary:(id)dictionary personID:(id)id outError:(id *)error;
- (id)_assetCollectionsFromCoreArray:(id)array personID:(id)id outError:(id *)error;
- (void)abort;
@end

#endif /* MSSubscribeStreamsProtocol_h */
