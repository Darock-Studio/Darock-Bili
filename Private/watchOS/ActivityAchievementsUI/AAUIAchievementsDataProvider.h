//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 573.2.0.0.0
//
#ifndef AAUIAchievementsDataProvider_h
#define AAUIAchievementsDataProvider_h
@import Foundation;

@class ACHQuery, ACHVisibilityEvaluator, HKHealthStore, NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, _TtC22ActivityAchievementsUI15AAUIAwardsQuery;
@protocol OS_dispatch_queue;

@interface AAUIAchievementsDataProvider : NSObject

@property (retain, nonatomic) HKHealthStore *healthStore;
@property (retain, nonatomic) ACHQuery *query;
@property (retain, nonatomic) ActivityAchievementsUI.AAUIAwardsQuery *awardsQuery;
@property (retain, nonatomic) ACHVisibilityEvaluator *visibilityEvaluator;
@property (retain, nonatomic) NSMutableDictionary *achievementsBySection;
@property (retain, nonatomic) NSMutableArray *recentAchievements;
@property (retain, nonatomic) NSMutableArray *relevantAchievements;
@property (retain, nonatomic) NSMutableDictionary *filteredAchievementsByTemplateUniqueName;
@property (retain, nonatomic) NSMutableDictionary *achievementsByTemplateUniqueName;
@property (retain, nonatomic) NSMutableDictionary *achievementsByEarnedDateComponents;
@property (retain, nonatomic) NSMutableArray *allAchievementsSortedByEarnedDate;
@property (retain, nonatomic) NSArray *orderedSections;
@property (retain, nonatomic) NSArray *orderedMainSectionHeaderStrings;
@property (retain, nonatomic) NSArray *orderedRecentAndRelevantHeaderStrings;
@property (retain, nonatomic) NSDictionary *clientAchievementsBySection;
@property (retain, nonatomic) NSArray *clientAllAchievementsSortedByEarnedDate;
@property (retain, nonatomic) NSArray *clientRecentAchievements;
@property (retain, nonatomic) NSArray *clientRelevantAchievements;
@property (retain, nonatomic) NSDictionary *clientFilteredAchievementsByTemplateUniqueName;
@property (retain, nonatomic) NSDictionary *clientAchievementsByTemplateUniqueName;
@property (retain, nonatomic) NSDictionary *clientAchievementsByEarnedDateComponents;
@property (nonatomic) BOOL didFinishInitialLoad;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *achievementsDataQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *observerQueue;
@property (nonatomic) long long overrideDisplayState;
@property (nonatomic) double queryRetryDelay;
@property (nonatomic) long long queryRetryCount;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x0; } modelLock;
@property (retain, nonatomic) NSHashTable *initialLoadObservers;
@property (retain, nonatomic) NSHashTable *recentAndRelevantSectionObservers;
@property (retain, nonatomic) NSHashTable *mainSectionObservers;
@property (readonly, nonatomic) long long numberOfRecentAndRelevantSections;
@property (readonly, nonatomic) long long numberOfSections;

/* instance methods */
- (id)initWithHealthStore:(id)store layoutMode:(unsigned long long)mode;
- (void)cycleQuery;
- (void)addInitialLoadObserver:(id)observer;
- (void)removeInitialLoadObserver:(id)observer;
- (void)addRecentAndRelevantSectionObserver:(id)observer;
- (void)removeRecentAndRelevantSectionObserver:(id)observer;
- (void)addMainSectionObserver:(id)observer;
- (void)removeMainSectionObserver:(id)observer;
- (void)startFetching;
- (void)stopFetching;
- (id)headerStringForSection:(long long)section isRecentAndRelevant:(BOOL)relevant;
- (long long)numberOfItemsInRecentAndRelevantSection:(long long)section;
- (id)recentAndRelevantAchievementAtIndexPath:(id)path;
- (long long)numberOfItemsInSection:(long long)section;
- (id)achievementAtIndexPath:(id)path;
- (id)trophyCaseAchievementForTemplateUniqueName:(id)name;
- (id)achievementForTemplateUniqueName:(id)name;
- (id)achievementsForDateComponents:(id)components;
- (void)_deepCopyClientFacingModel;
- (id)_achievementsRespectingOverrideDisplayState:(id)state;
- (void)_handleUpdatedAchievements:(id)achievements;
- (void)_handleDeletedAchievements:(id)achievements;
- (void)_reload;
- (BOOL)_shouldShowAchievement:(id)achievement activityMoveMode:(long long)mode experienceType:(unsigned long long)type;
- (id)_oldestRecentAchievement;
- (BOOL)_achievementBelongsInRecents:(id)recents replacingRecent:(id *)recent;
- (BOOL)_remoteAchievementBelongsInRelevants:(id)relevants;
- (BOOL)_monthlyChallengeBelongsInRelevants:(id)relevants;
- (BOOL)_builtInBelongsInRelevants:(id)relevants;
- (BOOL)_achievementBelongsInRelevants:(id)relevants replacingRelevant:(id *)relevant;
- (void)_updateAchievementsByEarnedDateComponentsWithAchievement:(id)achievement earnedInstance:(id)instance;
- (long long)_updateAchievement:(id)achievement activityMoveMode:(long long)mode experienceType:(unsigned long long)type;
- (void)_deleteAchievementsByEarnedDateWithAchievement:(id)achievement earnedInstance:(id)instance;
- (long long)_deleteAchievement:(id)achievement fromUnfiltered:(BOOL)unfiltered;
- (id)_recentAndRelevantSectionIndexPathForAchievement:(id)achievement;
- (id)_mainSectionIndexPathForAchievement:(id)achievement;
@end

#endif /* AAUIAchievementsDataProvider_h */
