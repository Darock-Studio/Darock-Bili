//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKOverlay_h
#define VKOverlay_h
@import Foundation;

#include "VKCustomTileOverlayProviderData.h"
#include "VKCustomTileOverlayProviderDelegate-Protocol.h"
#include "VKRasterTileOverlayProviderData.h"
#include "VKRasterTileOverlayProviderDelegate-Protocol.h"
#include "VKVectorOverlayData.h"
#include "VKVectorOverlayDelegate-Protocol.h"

@class NSString;
@protocol VKOverlayDelegate, struct shared_ptr<md::RasterTileOverlayStyle> { struct RasterTileOverlayStyle * x0; struct __shared_weak_count * x1; }, struct weak_ptr<md::GlobeOverlayContainer> { struct GlobeOverlayContainer * x0; struct __shared_weak_count * x1; }, struct weak_ptr<md::OverlayContainer> { struct OverlayContainer * x0; struct __shared_weak_count * x1; }, {shared_ptr<md::RasterTileOverlayStyle>="__ptr_"^{RasterTileOverlayStyle}"__cntrl_"^{__shared_weak_count}}, {weak_ptr<md::GlobeOverlayContainer>="__ptr_"^{GlobeOverlayContainer}"__cntrl_"^{__shared_weak_count}}, {weak_ptr<md::OverlayContainer>="__ptr_"^{OverlayContainer}"__cntrl_"^{__shared_weak_count}};

@interface VKOverlay : NSObject<VKVectorOverlayDelegate, VKRasterTileOverlayProviderDelegate, VKCustomTileOverlayProviderDelegate> {
  /* instance variables */
  BOOL _canProvideVectorGeometry;
  VKVectorOverlayData *_vectorData;
  struct unfair_lock { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock; } _vectorDataLock;
  VKRasterTileOverlayProviderData *_rasterTileProvider;
  struct unfair_lock { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock; } _rasterTileProviderLock;
  VKCustomTileOverlayProviderData *_customTileProvider;
  struct unfair_lock { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock; } _customTileProviderLock;
}

@property (readonly, nonatomic) struct shared_ptr<md::RasterTileOverlayStyle> { struct RasterTileOverlayStyle * x0; struct __shared_weak_count * x1; } rasterStyle;
@property (readonly, nonatomic) struct shared_ptr<md::RasterTileOverlayStyle> { struct RasterTileOverlayStyle * x0; struct __shared_weak_count * x1; } customStyle;
@property (nonatomic) struct weak_ptr<md::GlobeOverlayContainer> { struct GlobeOverlayContainer * x0; struct __shared_weak_count * x1; } flyoverContainer;
@property (nonatomic) struct weak_ptr<md::OverlayContainer> { struct OverlayContainer * x0; struct __shared_weak_count * x1; } standardContainer;
@property (nonatomic) struct RunLoopController { struct MapEngine * x0; long long x1; } * runLoopController;
@property (weak, nonatomic) NSObject<VKOverlayDelegate> *delegate;
@property (readonly) BOOL canProvideVectorData;
@property (nonatomic) struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; } replaceMapContentInRect;
@property (nonatomic) unsigned long long level;
@property (nonatomic) unsigned long long fallbackable;
@property (readonly, nonatomic) unsigned int identifier;
@property (nonatomic) long long blendMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)clearDelegate;
- (void)setNeedsDisplayInRect:(const struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; } *)rect level:(long long)level reason:(unsigned long long)reason;
- (BOOL)canPossiblyDrawKey:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)key;
- (BOOL)canDrawKey:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)key;
- (BOOL)areResourcesRequired;
- (BOOL)shouldUseMetalTexture;
- (unsigned char)anisotropy;
- (unsigned long long)estimatedCostForCustomTileData:(id)data;
- (BOOL)canDrawKey:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)key withData:(id)data;
- (void)didExitKey:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)key;
- (void)didEnterKey:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)key withFallback:(BOOL)fallback;
- (void)onVisibleTiles:(id)tiles;
- (void)drawKey:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)key inContext:(struct CGContext *)context;
- (void)drawKey:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)key withData:(id)data inIOSurface:(struct __IOSurface *)iosurface withTimestamp:(double)timestamp;
- (void)drawKey:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; } *)key withData:(id)data inTexture:(id)texture withTimestamp:(double)timestamp withTileScale:(float)scale;
- (id)vectorData;
- (void)_updateVectorData;
- (id)rasterTileProvider;
- (void)_updateRasterTileProvider;
- (id)customTileProvider;
- (void)_updateCustomTileProvider;
- (void)setNeedsDisplayForReason:(unsigned long long)reason;
- (void)vectorOverlayNeedsDisplay:(id)display needsFullInvalidate:(BOOL)invalidate;
- (void)rasterTileOverlayNeedsDisplay:(id)display;
- (void)rasterTileOverlayDidChangeAlpha:(id)alpha;
- (void)rasterTileOverlayNeedsInvalidate:(id)invalidate;
- (void)customTileOverlayNeedsDisplay:(id)display;
- (void)customTileOverlayDidChangeAlpha:(id)alpha;
- (void)customTileOverlayNeedsInvalidate:(id)invalidate;
- (void)customTileOverlayDidChangeDisplayRate:(id)rate;
@end

#endif /* VKOverlay_h */
