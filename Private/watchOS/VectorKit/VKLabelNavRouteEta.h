//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKLabelNavRouteEta_h
#define VKLabelNavRouteEta_h
@import Foundation;

#include "VKLabelNavFeature-Protocol.h"
#include "VKLabelNavRoadLabel.h"
#include "VKRouteEtaDescription.h"
#include "VKRouteInfo.h"

@class NSString;
@protocol struct optional<gss::RouteLegWhen> { BOOL x0; union ValueUnion { unsigned char x0[1] unsigned char x1; } x1; }, struct optional<gss::When> { union { char x0; unsigned char x1; } x0; BOOL x1; }, {optional<gss::RouteLegWhen>="_hasValue"B"_value"(ValueUnion="data"[1C]"type"C)}, {optional<gss::When>=""(?="__null_state_"c"__val_"C)"__engaged_"B};

@interface VKLabelNavRouteEta : NSObject<VKLabelNavFeature> {
  /* instance variables */
  VKLabelNavRoadLabel *_etaLabel;
  unsigned long long _etaLabelArtworkKey;
  struct { double latitude; double longitude; double altitude; } _coordinate;
}

@property (readonly, nonatomic) VKLabelNavRoadLabel *label;
@property (nonatomic) BOOL selected;
@property (readonly, nonatomic) unsigned char etaComparisonToMain;
@property (retain, nonatomic) VKRouteInfo *routeInfo;
@property (readonly, nonatomic) VKRouteEtaDescription *displayEtaDescription;
@property (nonatomic) BOOL isRepositioning;
@property (nonatomic) unsigned char orientation;
@property (nonatomic) struct optional<gss::When> { union { char x0; unsigned char x1; } x0; BOOL x1; } when;
@property (nonatomic) struct optional<gss::RouteLegWhen> { BOOL x0; union ValueUnion { unsigned char x0[1] unsigned char x1; } x1; } routeLegWhen;
@property (readonly, nonatomic) double worldUnitsPerMeterAtPoint;
@property (nonatomic) BOOL didStyleChange;
@property (readonly, nonatomic) BOOL isOnRoute;
@property (readonly, nonatomic) BOOL isAwayFromRoute;
@property (readonly, nonatomic) struct PolylineCoordinate { unsigned int x0; float x1; } routeOffset;
@property (readonly, nonatomic) BOOL isRamp;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *shieldDisplayGroup;
@property (readonly, nonatomic) BOOL isStartOfRoadName;
@property (readonly, nonatomic) BOOL isInGuidance;
@property (readonly, nonatomic) long long intraRoadPriorityForRoadLabel;
@property (readonly, nonatomic) long long intraRoadPriorityForShieldLabel;
@property (readonly, nonatomic) BOOL isGuidanceStepStart;
@property (readonly, nonatomic) BOOL isEtaFeature;
@property (readonly, nonatomic) BOOL isTrafficCameraFeature;
@property (nonatomic) BOOL isPicked;
@property (readonly, nonatomic) BOOL isValid;

/* class methods */
+ (id)artworkForEtaDescription:(id)description navContext:(const struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context roadSignStyleGroup:(const void *)group mercatorPoint:(const void *)point orientation:(unsigned char)orientation isSelected:(BOOL)selected artworkCache:(void *)cache;
+ (struct vector<GeoCodecsFeatureStylePair, geo::StdAllocator<GeoCodecsFeatureStylePair, mdm::Allocator>> { struct GeoCodecsFeatureStylePair * x0; struct GeoCodecsFeatureStylePair * x1; struct __compressed_pair<GeoCodecsFeatureStylePair *, geo::StdAllocator<GeoCodecsFeatureStylePair, mdm::Allocator>> { struct GeoCodecsFeatureStylePair * x0; struct StdAllocator<GeoCodecsFeatureStylePair, mdm::Allocator> { struct Allocator * x0; } x1; } x2; })baseAttributesForEtaLabel:(BOOL)label focused:(BOOL)focused etaComparison:(unsigned char)comparison transportType:(unsigned char)type navLabelType:(unsigned char)type when:(struct optional<gss::When> { union { char x0; unsigned char x1; } x0; BOOL x1; })when routeLegWhen:(struct optional<gss::RouteLegWhen> { BOOL x0; union ValueUnion { unsigned char x0[1] unsigned char x1; } x1; })when additionalAttributes:(id)attributes;
+ (struct RoadSignStyleGroup { struct shared_ptr<gss::StylesheetQuery<gss::PropertyID>> { void * x0; struct __shared_weak_count * x1; } x0; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID>> { void * x0; struct __shared_weak_count * x1; } x1; struct shared_ptr<gss::StylesheetQuery<gss::PropertyID>> { void * x0; struct __shared_weak_count * x1; } x2; })styleForNavContext:(const struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context selected:(BOOL)selected focused:(BOOL)focused etaComparison:(unsigned char)comparison transportType:(unsigned char)type navLabelType:(unsigned char)type when:(struct optional<gss::When> { union { char x0; unsigned char x1; } x0; BOOL x1; })when routeLegWhen:(struct optional<gss::RouteLegWhen> { BOOL x0; union ValueUnion { unsigned char x0[1] unsigned char x1; } x1; })when additionalAttributes:(id)attributes;
+ (unsigned char)toStyleEtaComparison:(unsigned char)comparison;
+ (unsigned char)toStyleNavLabelType:(long long)type;

/* instance methods */
- (struct Matrix<double, 3, 1> { double x0[3] })worldPointForStaging;
- (BOOL)hasLabel;
- (BOOL)hasAnchor;
- (BOOL)hasLabelWithAnchor;
- (id)initWithRouteInfo:(id)info routeCoord:(struct PolylineCoordinate { unsigned int x0; float x1; })coord;
- (void)dealloc;
- (void)clearLabel;
- (void)layoutWithNavContext:(struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context;
- (void)createLabelWithNavContext:(const struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context orientation:(unsigned char)orientation etaDescription:(id)description selected:(BOOL)selected when:(struct optional<gss::When> { union { char x0; unsigned char x1; } x0; BOOL x1; })when routeLegWhen:(struct optional<gss::RouteLegWhen> { BOOL x0; union ValueUnion { unsigned char x0[1] unsigned char x1; } x1; })when artworkCache:(void *)cache;
- (void)updateAnchorWithContext:(const struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context;
- (void)prepareStyleVarsWithContext:(struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context;
- (struct _retain_ptr<VKLabelNavRoadLabel *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc> { undefined * * x0; id x1; struct _retain_objc_arc x2; struct _release_objc_arc x3; })updateRoadSignWithNavContext:(const struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context artworkCache:(void *)cache;
- (void)repositionAtRouteCoord:(struct PolylineCoordinate { unsigned int x0; float x1; })coord;
@end

#endif /* VKLabelNavRouteEta_h */
