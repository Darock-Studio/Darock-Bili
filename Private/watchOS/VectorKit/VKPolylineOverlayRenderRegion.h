//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKPolylineOverlayRenderRegion_h
#define VKPolylineOverlayRenderRegion_h
@import Foundation;

@protocol struct Box<double, 2> { struct Matrix<double, 2, 1> { double x0[2] } x0; struct Matrix<double, 2, 1> { double x0[2] } x1; }, {Box<double, 2>="_minimum"{Matrix<double, 2, 1>="_e"[2d]}"_maximum"{Matrix<double, 2, 1>="_e"[2d]}}, {MultiRectRegion="_rects"{set<gm::Box<double, 2>, md::MultiRectSetCompare, std::allocator<gm::Box<double, 2>>>="__tree_"{__tree<gm::Box<double, 2>, md::MultiRectSetCompare, std::allocator<gm::Box<double, 2>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<gm::Box<double, 2>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, md::MultiRectSetCompare>="__value_"Q}}}"_enclosingRect"{Box<double, 2>="_minimum"{Matrix<double, 2, 1>="_e"[2d]}"_maximum"{Matrix<double, 2, 1>="_e"[2d]}}}, {set<std::shared_ptr<md::RouteLineData>, std::less<std::shared_ptr<md::RouteLineData>>, std::allocator<std::shared_ptr<md::RouteLineData>>>="__tree_"{__tree<std::shared_ptr<md::RouteLineData>, std::less<std::shared_ptr<md::RouteLineData>>, std::allocator<std::shared_ptr<md::RouteLineData>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::shared_ptr<md::RouteLineData>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<std::shared_ptr<md::RouteLineData>>>="__value_"Q}}};

@interface VKPolylineOverlayRenderRegion : NSObject {
  /* instance variables */
  struct MultiRectRegion { struct set<gm::Box<double, 2>, md::MultiRectSetCompare, std::allocator<gm::Box<double, 2>>> { struct __tree<gm::Box<double, 2>, md::MultiRectSetCompare, std::allocator<gm::Box<double, 2>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<gm::Box<double, 2>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, md::MultiRectSetCompare> { unsigned long long __value_; } __pair3_; } __tree_; } _rects; struct Box<double, 2> { struct Matrix<double, 2, 1> { double x[2] _e; } _minimum; struct Matrix<double, 2, 1> { double x[2] _e; } _maximum; } _enclosingRect; } _snappingRegion;
}

@property (readonly, nonatomic) const void * routeLineDatas;
@property (readonly, nonatomic) struct Box<double, 2> { struct Matrix<double, 2, 1> { double x0[2] } x0; struct Matrix<double, 2, 1> { double x0[2] } x1; } visibleRect;

/* instance methods */
- (id)initForVisibleRect:(const void *)rect snappingRegion:(const void *)region routeLineDatas:(const void *)datas;
- (const void *)snappingRegion;
- (BOOL)isEquivalentToNewRegion:(id)region;
@end

#endif /* VKPolylineOverlayRenderRegion_h */
