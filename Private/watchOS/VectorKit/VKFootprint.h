//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKFootprint_h
#define VKFootprint_h
@import Foundation;

@protocol [12{Matrix<double, 3, 1>="_e"[3d]}], struct Box<double, 2> { struct Matrix<double, 2, 1> { double x0[2] } x0; struct Matrix<double, 2, 1> { double x0[2] } x1; }, struct Matrix<double, 3, 1> { double x0[3] }, struct VKFootprintConvexHull_struct { int x0; d]} x1[6{Matrix<double, 3, 1>=[3] d]} x2[6{Matrix<double, 3, 1>=[3] }, {Box<double, 2>="_minimum"{Matrix<double, 2, 1>="_e"[2d]}"_maximum"{Matrix<double, 2, 1>="_e"[2d]}}, {Matrix<double, 3, 1>="_e"[3d]}, {VKFootprintConvexHull_struct="edgeCount"i"edgeOrigin"[6{Matrix<double, 3, 1>="_e"[3d]}]"edgeNormal"[6{Matrix<double, 3, 1>="_e"[3d]}]};

@interface VKFootprint : NSObject {
  /* instance variables */
  double _maxDistance;
  double _minDistance;
}

@property (readonly, nonatomic) struct Box<double, 2> { struct Matrix<double, 2, 1> { double x0[2] } x0; struct Matrix<double, 2, 1> { double x0[2] } x1; } boundingRect;
@property (readonly, nonatomic) struct VKFootprintConvexHull_struct { int x0; d]} x1[6{Matrix<double, 3, 1>=[3] d]} x2[6{Matrix<double, 3, 1>=[3] } convexHull;
@property (readonly, nonatomic) double minDepth;
@property (readonly, nonatomic) double maxDepth;
@property (readonly, nonatomic) double centerDepth;
@property (readonly, nonatomic) struct Matrix<double, 3, 1> { double x0[3] } furthestGroundPoint;
@property (readonly, nonatomic) struct Matrix<double, 3, 1> { double x0[3] } nearestGroundPoint;
@property (readonly, nonatomic) void * cornerGroundPoints;
@property (readonly, nonatomic) int cornerGroundPointsCount;

/* instance methods */
- (void)computeFromCamera:(id)camera;
- (BOOL)rejectsRect:(const void *)rect;
- (BOOL)containsGroundPoint:(const void *)point;
- (struct Box<double, 2> { struct Matrix<double, 2, 1> { double x0[2] } x0; struct Matrix<double, 2, 1> { double x0[2] } x1; })_expandedBoundingRect;
- (id /* block */)annotationRectTest;
- (id /* block */)annotationCoordinateTest;
@end

#endif /* VKFootprint_h */
