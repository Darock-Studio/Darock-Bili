//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef MDRenderTarget_Protocol_h
#define MDRenderTarget_Protocol_h
@import Foundation;

@protocol MDRenderTarget <NSObject>

@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (nonatomic) double contentScale;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (weak, nonatomic) NSObject<GGLRenderQueueSource> *renderSource;
@property (readonly, nonatomic) BOOL multiSample;
@property (readonly, nonatomic) BOOL supportsFramebufferFetch;
@property (readonly, nonatomic) const struct RenderTargetFormat { int x0[4] unsigned long long x1; unsigned int x2; int x3; } * format;
@property (readonly, nonatomic) void * renderer;
@property (readonly, nonatomic) BOOL shouldRasterize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } sizeInPixels;
@property (readonly, nonatomic) void * finalRenderTarget;
@property (readonly, nonatomic) const struct RenderTargetFormat { int x0[4] unsigned long long x1; unsigned int x2; int x3; } * linearFormat;
@property (readonly, nonatomic) void * linearRenderTarget;
@property (readonly, nonatomic) float averageFPS;

/* instance methods */
- (void)createRenderTarget;
- (void)destroyRenderTarget;
- (BOOL)hasRenderTarget;
- (struct function<void (std::function<std::future<void> (std::function<void ()>)>, std::function<std::future<void> (std::function<void ()>)>)> { struct __value_func<void (std::function<std::future<void> (std::function<void ()>)>, std::function<std::future<void> (std::function<void ()>)>)> { struct type { unsigned char x0[24] } x0; void * x1; } x0; })prepareRenderTask:(double)task presentAtTime:(double)time didPresentDelegate:(struct function<void ()> { struct __value_func<void ()> { struct type { unsigned char x0[24] } x0; void * x1; } x0; })delegate taskModule:(struct LayoutSceneTaskModule { struct function<ggl::RenderQueue *()> { struct __value_func<ggl::RenderQueue *()> { struct type { unsigned char x0[24] } x0; void * x1; } x0; } x0; struct function<void ()> { struct __value_func<void ()> { struct type { unsigned char x0[24] } x0; void * x1; } x0; } x1; struct function<void ()> { struct __value_func<void ()> { struct type { unsigned char x0[24] } x0; void * x1; } x0; } x2; })module;
- (struct __IOSurface *)flipImage;
- (struct shared_ptr<ggl::BitmapDataBase> { struct BitmapDataBase * x0; struct __shared_weak_count * x1; })bitmapData;
@optional
/* instance methods */
- (void)willDrawView;
- (void)didDrawView;
- (struct CGPoint { double x0; double x1; })convertPoint:(struct CGPoint { double x0; double x1; })point toLayer:(id)layer;
- (void *)debugConsoleForId:(int)id;
- (void)addSizeObserver:(id)observer;
- (void)removeSizeObserver:(id)observer;
@end

#endif /* MDRenderTarget_Protocol_h */
