//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKNavContext_h
#define VKNavContext_h
@import Foundation;

@class GEOComposedRoute, GEORouteMatch, NSArray, NSHashTable;
@protocol {vector<AdditionalPointInfo, std::allocator<AdditionalPointInfo>>="__begin_"^{AdditionalPointInfo}"__end_"^{AdditionalPointInfo}"__end_cap_"{__compressed_pair<AdditionalPointInfo *, std::allocator<AdditionalPointInfo>>="__value_"^{AdditionalPointInfo}}}, {vector<AdditionalRouteInfo, std::allocator<AdditionalRouteInfo>>="__begin_"^{AdditionalRouteInfo}"__end_"^{AdditionalRouteInfo}"__end_cap_"{__compressed_pair<AdditionalRouteInfo *, std::allocator<AdditionalRouteInfo>>="__value_"^{AdditionalRouteInfo}}};

@interface VKNavContext : NSObject {
  /* instance variables */
  struct vector<AdditionalPointInfo, std::allocator<AdditionalPointInfo>> { struct AdditionalPointInfo *__begin_; struct AdditionalPointInfo *__end_; struct __compressed_pair<AdditionalPointInfo *, std::allocator<AdditionalPointInfo>> { struct AdditionalPointInfo *__value_; } __end_cap_; } _pointsToFrame;
  NSHashTable *_observers;
  unsigned long long _navCameraHeadingOverride;
  struct vector<AdditionalRouteInfo, std::allocator<AdditionalRouteInfo>> { struct AdditionalRouteInfo *__begin_; struct AdditionalRouteInfo *__end_; struct __compressed_pair<AdditionalRouteInfo *, std::allocator<AdditionalRouteInfo>> { struct AdditionalRouteInfo *__value_; } __end_cap_; } _additionalRoutesToFrame;
}

@property (readonly, nonatomic) GEOComposedRoute *route;
@property (retain, nonatomic) GEORouteMatch *routeMatch;
@property (nonatomic) unsigned long long currentStepIndex;
@property (readonly, @dynamic, nonatomic) unsigned long long groupedManeuverCount;
@property (copy, nonatomic) NSArray *groupedManeuverCounts;
@property (nonatomic) unsigned long long navigationCameraHeadingOverride;

/* instance methods */
- (id)init;
- (void)updateWithNewRoute:(id)route currentStepIndex:(unsigned long long)index;
- (void)clearPointsToFrame;
- (void)clearPointsToFrameOfType:(unsigned long long)type;
- (void)addPointToFrame:(struct { double x0; double x1; double x2; })frame ofType:(unsigned long long)type;
- (void)enumeratePointsToFrameOfType:(unsigned long long)type usingBlock:(id /* block */)block;
- (void)enumeratePointsToFrameUsingBlock:(id /* block */)block;
- (void)_notifyObserversStateChanged;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)clearAdditionalRoutesToFrame;
- (void)addRouteToFrame:(id)frame divergenceCoord:(struct PolylineCoordinate { unsigned int x0; float x1; })coord convergenceCoord:(struct PolylineCoordinate { unsigned int x0; float x1; })coord;
- (void)enumerateAdditionalRoutesToFrameUsingBlock:(id /* block */)block;
@end

#endif /* VKNavContext_h */
