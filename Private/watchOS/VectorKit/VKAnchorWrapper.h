//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKAnchorWrapper_h
#define VKAnchorWrapper_h
@import Foundation;

#include "MDRenderTarget-Protocol.h"
#include "VKAnchorDelegate-Protocol.h"

@class NSString;
@protocol {Coordinate3D<geo::Degrees, double>="latitude"{Unit<geo::DegreeUnitDescription, double>="_value"d}"longitude"{Unit<geo::DegreeUnitDescription, double>="_value"d}"altitude"{Unit<geo::MeterUnitDescription, double>="_value"d}}, {shared_ptr<md::Anchor>="__ptr_"^{Anchor}"__cntrl_"^{__shared_weak_count}};

@interface VKAnchorWrapper : NSObject<VKAnchorDelegate> {
  /* instance variables */
  struct shared_ptr<md::Anchor> { struct Anchor *__ptr_; struct __shared_weak_count *__cntrl_; } _anchor;
  struct CGPoint { double x; double y; } _screenPointInCanvas;
  struct CGSize { double width; double height; } _canvasSize;
  const void * _cameraContext;
  void * _anchorManager;
  struct Coordinate3D<geo::Degrees, double> { struct Unit<geo::DegreeUnitDescription, double> { double _value; } latitude; struct Unit<geo::DegreeUnitDescription, double> { double _value; } longitude; struct Unit<geo::MeterUnitDescription, double> { double _value; } altitude; } _lastCoordinate;
  BOOL _isUpdating;
  double _pointsPerMeter;
}

@property (nonatomic) NSObject<MDRenderTarget> *displayLayer;
@property (readonly, nonatomic) struct { double x0; double x1; } coordinate;
@property (readonly, nonatomic) struct { double x0; double x1; double x2; } coordinate3D;
@property (readonly, nonatomic) double elevationOffset;
@property (nonatomic) BOOL followsTerrain;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)dealloc;
- (void)destroyAnchor;
- (struct CGPoint { double x0; double x1; })pointInLayer:(id)layer bound:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bound;
- (double)pointOffsetForDistanceOffset:(double)offset;
- (struct shared_ptr<md::Anchor> { struct Anchor * x0; struct __shared_weak_count * x1; })_anchorWithContext:(void *)context;
- (void)_updateCachedPoint;
- (void)prepare:(struct CGSize { double x0; double x1; })prepare cameraContext:(const void *)context anchorContext:(const struct AnchorContext { struct AnchorManager * x0; } *)context;
- (void)layoutWithContext:(const void *)context;
- (void)updateIfNeeded;
- (void)anchorWorldPointDidChange:(void *)change;
@end

#endif /* VKAnchorWrapper_h */
