//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef GGLOpenGLESLayer_h
#define GGLOpenGLESLayer_h
@import Foundation;

#include "CAEAGLLayer.h"
#include "GGLLayer-Protocol.h"

@protocol GGLLayerDelegate, {shared_ptr<ggl::OESDevice>="__ptr_"^{OESDevice}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<ggl::RenderBuffer>="__ptr_"^{RenderBuffer}"__cntrl_"^{__shared_weak_count}}, {unique_ptr<ggl::OESContext, std::default_delete<ggl::OESContext>>="__ptr_"{__compressed_pair<ggl::OESContext *, std::default_delete<ggl::OESContext>>="__value_"^{OESContext}}};

@interface GGLOpenGLESLayer : CAEAGLLayer<GGLLayer> {
  /* instance variables */
  NSObject<GGLLayerDelegate> *_delegate;
  struct shared_ptr<ggl::OESDevice> { struct OESDevice *__ptr_; struct __shared_weak_count *__cntrl_; } _device;
  struct unique_ptr<ggl::OESContext, std::default_delete<ggl::OESContext>> { struct __compressed_pair<ggl::OESContext *, std::default_delete<ggl::OESContext>> { struct OESContext *__value_; } __ptr_; } _context;
}

@property (readonly, nonatomic) struct CGSize { double x0; double x1; } backingSize;
@property (readonly) int backingFormat;
@property (readonly, nonatomic) void * texture;
@property (weak) NSObject<GGLLayerDelegate> *renderDelegate;

/* instance methods */
- (id)initWithDevice:(struct shared_ptr<ggl::OESDevice> { struct OESDevice * x0; struct __shared_weak_count * x1; })device;
- (void)dealloc;
- (void)layoutSublayers;
- (void)_createTexture;
- (BOOL)_createLayerRenderBuffer;
- (void)_deleteLayerRenderBuffer;
- (void)onTimerFired:(double)fired;
- (void)setContentsScale:(double)scale;
- (void)didEnterBackground;
- (void)onTimerFired:(double)fired presentAtTime:(double)time;
@end

#endif /* GGLOpenGLESLayer_h */
