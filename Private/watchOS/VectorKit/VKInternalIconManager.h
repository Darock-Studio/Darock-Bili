//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKInternalIconManager_h
#define VKInternalIconManager_h
@import Foundation;

@protocol {_retain_ptr<VKManifestTileGroupObserverProxy *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>="_vptr$_retain_ptr"^^?"_obj"@"VKManifestTileGroupObserverProxy""_retain"{_retain_objc_arc=}"_release"{_release_objc_arc=}}, {_retain_ptr<VKResourceManager *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>="_vptr$_retain_ptr"^^?"_obj"@"VKResourceManager""_retain"{_retain_objc_arc=}"_release"{_release_objc_arc=}}, {map<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>, NSStringMapComparison, geo::StdAllocator<std::pair<const geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, mdm::Allocator>>="__tree_"{__tree<std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, std::__map_value_compare<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, NSStringMapComparison>, geo::StdAllocator<std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, mdm::Allocator>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, geo::StdAllocator<std::__tree_node<std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, void *>, mdm::Allocator>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}"__value_"{StdAllocator<std::__tree_node<std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, void *>, mdm::Allocator>="_allocator"^{Allocator}}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, NSStringMapComparison>>="__value_"Q}}}, {shared_ptr<grl::FontManager>="__ptr_"^{FontManager}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<grl::IconManager>="__ptr_"^{IconManager}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::GeoResourceProvider>="__ptr_"^{GeoResourceProvider}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::StylesheetVendor>="__ptr_"^{StylesheetVendor}"__cntrl_"^{__shared_weak_count}};

@interface VKInternalIconManager : NSObject {
  /* instance variables */
  struct shared_ptr<grl::IconManager> { struct IconManager *__ptr_; struct __shared_weak_count *__cntrl_; } _iconManager;
  struct shared_ptr<md::StylesheetVendor> { struct StylesheetVendor *__ptr_; struct __shared_weak_count *__cntrl_; } _stylesheetVendor;
  struct read_write_lock { struct _opaque_pthread_rwlock_t { long long __sig; char x[192] __opaque; } _lock; } _nameToStyleManagerLock;
  struct map<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>, NSStringMapComparison, geo::StdAllocator<std::pair<const geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, mdm::Allocator>> { struct __tree<std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, std::__map_value_compare<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, NSStringMapComparison>, geo::StdAllocator<std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, mdm::Allocator>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, geo::StdAllocator<std::__tree_node<std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, void *>, mdm::Allocator>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; struct StdAllocator<std::__tree_node<std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, void *>, mdm::Allocator> { struct Allocator *_allocator; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::__value_type<geo::_retain_ptr<NSString *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>, std::shared_ptr<gss::StylesheetManager<gss::PropertyID>>>, NSStringMapComparison>> { unsigned long long __value_; } __pair3_; } __tree_; } _nameToStyleManager;
  struct _retain_ptr<VKManifestTileGroupObserverProxy *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc> { undefined * *_vptr$_retain_ptr; VKManifestTileGroupObserverProxy *_obj; struct _retain_objc_arc _retain; struct _release_objc_arc _release; } _manifestTileGroupObserverProxy;
  struct _retain_ptr<VKResourceManager *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc> { undefined * *_vptr$_retain_ptr; VKResourceManager *_obj; struct _retain_objc_arc _retain; struct _release_objc_arc _release; } _resourceManager;
  struct shared_ptr<md::GeoResourceProvider> { struct GeoResourceProvider *__ptr_; struct __shared_weak_count *__cntrl_; } _resourceProvider;
  struct shared_ptr<grl::FontManager> { struct FontManager *__ptr_; struct __shared_weak_count *__cntrl_; } _fontManager;
  BOOL _isSharedIconManager;
}

/* class methods */
+ (unsigned char)convertSizeGroup:(long long)group;
+ (long long)convertGrlSizeGroup:(unsigned char)group;

/* instance methods */
- (id)init;
- (id)init:(struct shared_ptr<grl::IconManager> { struct IconManager * x0; struct __shared_weak_count * x1; })init stylesheetVendor:(struct shared_ptr<md::StylesheetVendor> { struct StylesheetVendor * x0; struct __shared_weak_count * x1; })vendor;
- (void)_startTileGroupObserver;
- (void)_purgeStyleManagers;
- (id)imageForImageSourceKey:(id)key;
- (id)imageForStyleAttributes:(id)attributes styleManager:(struct shared_ptr<gss::StylesheetManager<gss::PropertyID>> { void * x0; struct __shared_weak_count * x1; })manager contentScale:(float)scale sizeGroup:(long long)group modifiers:(id)modifiers;
- (id)imageForStyleAttributes:(id)attributes withStylesheetName:(id)name contentScale:(float)scale sizeGroup:(long long)group modifiers:(id)modifiers;
- (id)imageForDataID:(unsigned int)id text:(id)text contentScale:(float)scale sizeGroup:(long long)group modifiers:(id)modifiers;
- (id)imageForKey:(unsigned int)key value:(unsigned int)value contentScale:(float)scale sizeGroup:(long long)group modifiers:(id)modifiers;
- (id)imageForName:(id)name contentScale:(float)scale sizeGroup:(long long)group modifiers:(id)modifiers;
- (id)imageForIconID:(unsigned int)id contentScale:(float)scale sizeGroup:(long long)group modifiers:(id)modifiers;
- (unsigned int)styleAttributeTransitTypeKey;
- (unsigned int)styleAttributeTransitSystemTypeKey;
- (unsigned int)trafficIncidentTypeKey;
- (unsigned int)darkVariant;
- (BOOL)isCachingAtlases;
- (void)setIsCachingAtlases:(BOOL)atlases;
- (void)dealloc;
- (void)purge;
- (void)purgeNonsharedResources;
@end

#endif /* VKInternalIconManager_h */
