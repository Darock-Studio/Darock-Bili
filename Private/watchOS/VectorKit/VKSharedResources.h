//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKSharedResources_h
#define VKSharedResources_h
@import Foundation;

#include "VKInternalIconManager.h"
#include "VKResourceManager.h"

@protocol struct shared_ptr<grl::FontManager> { struct FontManager * x0; struct __shared_weak_count * x1; }, struct shared_ptr<md::MaterialTextureManager> { struct MaterialTextureManager * x0; struct __shared_weak_count * x1; }, struct shared_ptr<md::RealisticCommandBufferSelector> { struct RealisticCommandBufferSelector * x0; struct __shared_weak_count * x1; }, struct shared_ptr<md::StandardCommandBufferSelector> { struct StandardCommandBufferSelector * x0; struct __shared_weak_count * x1; }, struct shared_ptr<md::StylesheetVendor> { struct StylesheetVendor * x0; struct __shared_weak_count * x1; }, struct shared_ptr<md::TextureManager> { struct TextureManager * x0; struct __shared_weak_count * x1; }, {_retain_ptr<VKInternalIconManager *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>="_vptr$_retain_ptr"^^?"_obj"@"VKInternalIconManager""_retain"{_retain_objc_arc=}"_release"{_release_objc_arc=}}, {_retain_ptr<VKResourceManager *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>="_vptr$_retain_ptr"^^?"_obj"@"VKResourceManager""_retain"{_retain_objc_arc=}"_release"{_release_objc_arc=}}, {atomic<unsigned long>="__a_"{__cxx_atomic_impl<unsigned long, std::__cxx_atomic_base_impl<unsigned long>>="__a_value"AQ}}, {shared_ptr<ggl::StandardLibrary>="__ptr_"^{StandardLibrary}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<grl::FontManager>="__ptr_"^{FontManager}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<grl::IconManager>="__ptr_"^{IconManager}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::DataOverrideManager>="__ptr_"^{DataOverrideManager}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::GeoResourceProvider>="__ptr_"^{GeoResourceProvider}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::MaterialTextureManager>="__ptr_"^{MaterialTextureManager}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::RealisticCommandBufferSelector>="__ptr_"^{RealisticCommandBufferSelector}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::StandardCommandBufferSelector>="__ptr_"^{StandardCommandBufferSelector}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::StylesheetVendor>="__ptr_"^{StylesheetVendor}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::TextureManager>="__ptr_"^{TextureManager}"__cntrl_"^{__shared_weak_count}}, {unique_ptr<ggl::AlphaAtlas, std::default_delete<ggl::AlphaAtlas>>="__ptr_"{__compressed_pair<ggl::AlphaAtlas *, std::default_delete<ggl::AlphaAtlas>>="__value_"^{AlphaAtlas}}}, {unique_ptr<ggl::DistanceAtlas, std::default_delete<ggl::DistanceAtlas>>="__ptr_"{__compressed_pair<ggl::DistanceAtlas *, std::default_delete<ggl::DistanceAtlas>>="__value_"^{DistanceAtlas}}}, {unique_ptr<ggl::IsoAlphaAtlas, std::default_delete<ggl::IsoAlphaAtlas>>="__ptr_"{__compressed_pair<ggl::IsoAlphaAtlas *, std::default_delete<ggl::IsoAlphaAtlas>>="__value_"^{IsoAlphaAtlas}}}, {unique_ptr<md::Device, std::default_delete<md::Device>>="__ptr_"{__compressed_pair<md::Device *, std::default_delete<md::Device>>="__value_"^{Device}}}, {unique_ptr<md::SharedResourcesManager, std::default_delete<md::SharedResourcesManager>>="__ptr_"{__compressed_pair<md::SharedResourcesManager *, std::default_delete<md::SharedResourcesManager>>="__value_"^{SharedResourcesManager}}};

@interface VKSharedResources : NSObject {
  /* instance variables */
  struct unique_ptr<md::SharedResourcesManager, std::default_delete<md::SharedResourcesManager>> { struct __compressed_pair<md::SharedResourcesManager *, std::default_delete<md::SharedResourcesManager>> { struct SharedResourcesManager *__value_; } __ptr_; } _sharedResourceManager;
  struct shared_ptr<md::DataOverrideManager> { struct DataOverrideManager *__ptr_; struct __shared_weak_count *__cntrl_; } _dataOverrideManager;
  struct read_write_lock { struct _opaque_pthread_rwlock_t { long long __sig; char x[192] __opaque; } _lock; } _figCreationLock;
  struct shared_ptr<md::GeoResourceProvider> { struct GeoResourceProvider *__ptr_; struct __shared_weak_count *__cntrl_; } _resourceProvider;
  unsigned int _referenceCount;
}

@property (readonly, nonatomic) VKInternalIconManager *iconManager;
@property (readonly, nonatomic) struct shared_ptr<md::TextureManager> { struct TextureManager * x0; struct __shared_weak_count * x1; } textureManager;
@property (readonly, nonatomic) struct shared_ptr<md::MaterialTextureManager> { struct MaterialTextureManager * x0; struct __shared_weak_count * x1; } materialTextureManager;
@property (readonly, nonatomic) VKResourceManager *resourceManager;
@property (readonly, nonatomic) struct shared_ptr<md::StylesheetVendor> { struct StylesheetVendor * x0; struct __shared_weak_count * x1; } stylesheetVendor;
@property (readonly, nonatomic) void * device;
@property (readonly, nonatomic) void * gglDevice;
@property (readonly, nonatomic) struct shared_ptr<md::StandardCommandBufferSelector> { struct StandardCommandBufferSelector * x0; struct __shared_weak_count * x1; } standardCommandBufferSelector;
@property (readonly, nonatomic) struct shared_ptr<md::RealisticCommandBufferSelector> { struct RealisticCommandBufferSelector * x0; struct __shared_weak_count * x1; } realisticCommandBufferSelector;
@property (readonly, nonatomic) void * alphaAtlas;
@property (readonly, nonatomic) void * highInflationAlphaAtlas;
@property (readonly, nonatomic) void * isoAlphaAtlas;
@property (readonly, nonatomic) void * distanceAtlas;
@property (readonly, nonatomic) const void * shaderLibrary;
@property (readonly, nonatomic) void * grlIconManager;
@property (readonly, nonatomic) struct shared_ptr<grl::FontManager> { struct FontManager * x0; struct __shared_weak_count * x1; } grlFontManager;
@property (readonly, nonatomic) unsigned long long globalFrameStamp;
@property (readonly, nonatomic) struct CMPhotoDecompressionSession * defaultDecompressionSession;
@property (nonatomic) BOOL snapshotterIsInService;

/* instance methods */
- (const void *)dataOverrideManager;
- (id)_initWithDevice:(void *)device standardLibrary:(const void *)library;
- (void)dealloc;
- (void)_addResourceUser;
- (void)_removeResourceUser;
- (BOOL)_hasResourceUsers;
- (void)prune:(unsigned char)prune;
- (void)frameDidComplete:(unsigned long long)complete;
- (void)purgeDecompressSessionCachedBuffers;
- (void)startDecompressionSession;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)group;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)group;
@end

#endif /* VKSharedResources_h */
