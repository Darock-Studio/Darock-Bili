//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKVectorOverlayCircle_h
#define VKVectorOverlayCircle_h
@import Foundation;

#include "VKVectorOverlayData.h"

@protocol struct Box<double, 2> { struct Matrix<double, 2, 1> { double x0[2] } x0; struct Matrix<double, 2, 1> { double x0[2] } x1; }, struct shared_ptr<md::CircleOverlayRenderable> { struct CircleOverlayRenderable * x0; struct __shared_weak_count * x1; }, {Box<double, 2>="_minimum"{Matrix<double, 2, 1>="_e"[2d]}"_maximum"{Matrix<double, 2, 1>="_e"[2d]}}, {shared_ptr<md::CircleOverlayRenderable::Style>="__ptr_"^{Style}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<md::CircleOverlayRenderable>="__ptr_"^{CircleOverlayRenderable}"__cntrl_"^{__shared_weak_count}};

@interface VKVectorOverlayCircle : VKVectorOverlayData {
  /* instance variables */
  struct { struct { double x; double y; } origin; struct { double width; double height; } size; } _mapRect;
  struct unfair_lock { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock; } _propertiesLock;
  struct shared_ptr<md::CircleOverlayRenderable::Style> { struct Style *__ptr_; struct __shared_weak_count *__cntrl_; } _style;
}

@property (readonly, nonatomic) struct shared_ptr<md::CircleOverlayRenderable> { struct CircleOverlayRenderable * x0; struct __shared_weak_count * x1; } renderable;
@property (readonly, nonatomic) struct Box<double, 2> { struct Matrix<double, 2, 1> { double x0[2] } x0; struct Matrix<double, 2, 1> { double x0[2] } x1; } bounds;
@property (nonatomic) double lineWidth;
@property (nonatomic) struct CGColor * fillColor;
@property (nonatomic) struct CGColor * strokeColor;
@property (nonatomic) double alpha;

/* instance methods */
- (id)initWithMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect lineWidth:(double)width fillColor:(struct CGColor *)color strokeColor:(struct CGColor *)color alpha:(double)alpha;
- (void)dealloc;
- (void)setBlendMode:(long long)mode;
- (void)_updateStyleColor;
- (struct Box<double, 2> { struct Matrix<double, 2, 1> { double x0[2] } x0; struct Matrix<double, 2, 1> { double x0[2] } x1; })_bounds;
- (struct shared_ptr<md::CircleOverlayRenderable> { struct CircleOverlayRenderable * x0; struct __shared_weak_count * x1; })_renderable;
@end

#endif /* VKVectorOverlayCircle_h */
