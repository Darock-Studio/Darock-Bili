//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKLabelNavJunction_h
#define VKLabelNavJunction_h
@import Foundation;

#include "VKLabelNavFeature-Protocol.h"
#include "VKLabelNavJunction.h"
#include "VKLabelNavRoad.h"
#include "VKLabelNavRoadLabel.h"

@class NSArray, NSMutableArray, NSString;
@protocol struct Matrix<float, 2, 1> { float x0[2] }, {Matrix<float, 2, 1>="_e"[2f]}, {Mercator3<double>="_e"[3d]}, {shared_ptr<md::LabelTile>="__ptr_"^{LabelTile}"__cntrl_"^{__shared_weak_count}};

@interface VKLabelNavJunction : NSObject<VKLabelNavFeature> {
  /* instance variables */
  BOOL _foundRoads;
  void * _labelFeature;
  BOOL _areLabelsDisabled;
  BOOL _cachedSignVisibility[8];
  BOOL _isVisibilityCached[8];
  double _sortValue;
}

@property (readonly, nonatomic) const void * mercatorCoordinate;
@property (readonly, nonatomic) const void * tile;
@property (readonly, nonatomic) const struct GeoCodecsConnectivityJunction { unsigned int x0; unsigned int x1; struct GeoCodecsPointFeature * x2; unsigned long long x3; unsigned long long x4; } * geoJunction;
@property (readonly, nonatomic) struct Matrix<float, 2, 1> { float x0[2] } tileCoordinate;
@property (nonatomic) struct PolylineCoordinate { unsigned int x0; float x1; } routeOffset;
@property (readonly, nonatomic) NSArray *roads;
@property (readonly, weak, nonatomic) VKLabelNavRoad *outgoingRoad;
@property (readonly, weak, nonatomic) VKLabelNavRoad *incomingRoad;
@property (nonatomic) float distanceFromPreviousShieldLabel;
@property (nonatomic) BOOL isOnDualCarriageway;
@property (readonly, nonatomic) BOOL hasSharedRouteDirection;
@property (nonatomic) struct Matrix<float, 2, 1> { float x0[2] } sharedRouteDirection;
@property (readonly, nonatomic) BOOL isOnRoute;
@property (readonly, nonatomic) BOOL isIntraRamp;
@property (readonly, nonatomic) BOOL isTileEdgeJunction;
@property (nonatomic) BOOL isRouteRefineJunction;
@property (readonly, nonatomic) BOOL isRoadTerminus;
@property (readonly, nonatomic) BOOL isIntersection;
@property (readonly, nonatomic) BOOL isMultiRoadIntersection;
@property (readonly, nonatomic) BOOL isAwayFromRoute;
@property (readonly, nonatomic) BOOL isOffRouteGraph;
@property (readonly, nonatomic) BOOL isOverpass;
@property (nonatomic) BOOL isRouteOverpass;
@property (readonly, nonatomic) int largestRoadClass;
@property (nonatomic) unsigned long long depthFromRoute;
@property (weak, nonatomic) VKLabelNavJunction *overpassJunction;
@property (readonly, nonatomic) double worldUnitsPerMeter;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) VKLabelNavRoadLabel *junctionSign;
@property (readonly, nonatomic) BOOL isVisible;
@property (readonly, nonatomic) int requiredLabelPlacement;
@property (nonatomic) int preferredLabelPlacement;
@property (readonly, nonatomic) BOOL isRamp;
@property (readonly, nonatomic) NSString *shieldDisplayGroup;
@property (readonly, nonatomic) BOOL isStartOfRoadName;
@property (readonly, nonatomic) BOOL isInGuidance;
@property (readonly, nonatomic) long long intraRoadPriorityForRoadLabel;
@property (readonly, nonatomic) long long intraRoadPriorityForShieldLabel;
@property (readonly, nonatomic) BOOL isGuidanceStepStart;
@property (readonly, nonatomic) BOOL isEtaFeature;
@property (readonly, nonatomic) BOOL isTrafficCameraFeature;
@property (nonatomic) BOOL isPicked;
@property (readonly, nonatomic) BOOL isValid;

/* instance methods */
- (id)initWithGEOJunction:(struct GeoCodecsConnectivityJunction { unsigned int x0; unsigned int x1; struct GeoCodecsPointFeature * x2; unsigned long long x3; unsigned long long x4; } *)geojunction routeOffset:(struct PolylineCoordinate { unsigned int x0; float x1; })offset tile:(const void *)tile;
- (id)initWithRoadEdge:(const struct GeoCodecsRoadEdge { struct GeoCodecsMultiSectionFeature * x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; struct GeoCodecsConnectivityJunction * x5; struct GeoCodecsConnectivityJunction * x6; } *)edge atA:(BOOL)a routeOffset:(struct PolylineCoordinate { unsigned int x0; float x1; })offset tile:(const void *)tile;
- (void)dealloc;
- (id)description;
- (BOOL)matchesLocationForJunction:(id)junction;
- (void)findRoads;
- (void)addRouteEdge:(const struct VKLabelNavRouteRoadEdge { struct PolylineCoordinate { unsigned int x0; float x1; } x0; struct PolylineCoordinate { unsigned int x0; float x1; } x1; struct GeoCodecsRoadEdge { struct GeoCodecsMultiSectionFeature * x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; struct GeoCodecsConnectivityJunction * x5; struct GeoCodecsConnectivityJunction * x6; } x2; unsigned long long x3; unsigned long long x4; } *)edge atA:(BOOL)a;
- (void)evaluateCrossStreets;
- (void)evaluateCrossStreetsUsingRouteJunction:(id)junction;
- (unsigned char)_signOrientationWithDrivingSide:(BOOL)side;
- (struct Mercator3<double> { double x0[3] })_anchorCoordinateForSignOrientation:(unsigned char)orientation;
- (void)_updateWithNavContext:(struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context threshold:(double)threshold;
- (void)_updateWithNavContext:(struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context;
- (void)layoutWithNavContext:(struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context;
- (void)prepareStyleVarsWithContext:(struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context;
- (void)createLabelWithNavContext:(struct NavContext { undefined * * x0; struct LabelManager * x1; struct MapNavLabeler * x2; struct LabelLayoutContext * x3; struct LabelNavLayoutContext * x4; } *)context isDrivingSideRight:(BOOL)right artworkCache:(void *)cache;
@end

#endif /* VKLabelNavJunction_h */
