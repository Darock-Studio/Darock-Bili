//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKVectorOverlayPolygon_h
#define VKVectorOverlayPolygon_h
@import Foundation;

@protocol struct Range<signed char> { char x0; char x1; }, {Range<signed char>="_min"c"_max"c}, {shared_ptr<geo::Polygon2<double>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}, {unique_ptr<geo::Cache<unsigned char, std::shared_ptr<geo::Polygon2<double>>, std::hash<unsigned char>, geo::LRUPolicy>, std::default_delete<geo::Cache<unsigned char, std::shared_ptr<geo::Polygon2<double>>, std::hash<unsigned char>, geo::LRUPolicy>>>="__ptr_"{__compressed_pair<geo::Cache<unsigned char, std::shared_ptr<geo::Polygon2<double>>, std::hash<unsigned char>, geo::LRUPolicy> *, std::default_delete<geo::Cache<unsigned char, std::shared_ptr<geo::Polygon2<double>>, std::hash<unsigned char>, geo::LRUPolicy>>>="__value_"^v}};

@interface VKVectorOverlayPolygon : NSObject {
  /* instance variables */
  struct shared_ptr<geo::Polygon2<double>> { void *__ptr_; struct __shared_weak_count *__cntrl_; } _geometry;
  struct unique_ptr<geo::Cache<unsigned char, std::shared_ptr<geo::Polygon2<double>>, std::hash<unsigned char>, geo::LRUPolicy>, std::default_delete<geo::Cache<unsigned char, std::shared_ptr<geo::Polygon2<double>>, std::hash<unsigned char>, geo::LRUPolicy>>> { struct __compressed_pair<geo::Cache<unsigned char, std::shared_ptr<geo::Polygon2<double>>, std::hash<unsigned char>, geo::LRUPolicy> *, std::default_delete<geo::Cache<unsigned char, std::shared_ptr<geo::Polygon2<double>>, std::hash<unsigned char>, geo::LRUPolicy>>> { void *__value_; } __ptr_; } _simplifiedGeometryCache;
  struct unfair_lock { struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock; } _simplifiedGeometryCacheLock;
}

@property (readonly, nonatomic) struct Range<signed char> { char x0; char x1; } worldIndexes;

/* instance methods */
- (id)initWithMapPoints:(const struct { double x0; double x1; } *)points count:(unsigned long long)count;
- (struct shared_ptr<geo::Polygon2<double>> { void * x0; struct __shared_weak_count * x1; })simplifiedGeometryAtZoomLevel:(unsigned char)level;
@end

#endif /* VKVectorOverlayPolygon_h */
