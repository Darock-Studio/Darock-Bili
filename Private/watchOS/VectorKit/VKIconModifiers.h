//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKIconModifiers_h
#define VKIconModifiers_h
@import Foundation;

@protocol {IconModifiers="_isClusterIcon"B"_isGlyphHidden"B"_isGlyphOnly"B"_isInfoOnly"B"_isMirrored"B"_isLandmark"B"_isSelected"B"_useBalloonShape"B"_opacity"f"_scale"f"_pathScale"{optional<float>="_hasValue"B"_value"(ValueUnion="data"[4C]"type"f)}"_component"C"_customColor"{optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>>="_hasValue"B"_value"(ValueUnion="data"[4C]"type"{Color<unsigned char, 4, geo::ColorSpace::sRGB>="_backing"{Matrix<unsigned char, 4, 1>="_e"[4C]}})}"_shapeColor"{optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>>="_hasValue"B"_value"(ValueUnion="data"[4C]"type"{Color<unsigned char, 4, geo::ColorSpace::sRGB>="_backing"{Matrix<unsigned char, 4, 1>="_e"[4C]}})}"_fontSize"{optional<float>="_hasValue"B"_value"(ValueUnion="data"[4C]"type"f)}"_tailDirection"{optional<float>="_hasValue"B"_value"(ValueUnion="data"[4C]"type"f)}"_textLocale"{optional<std::string>="_hasValue"B"_value"(ValueUnion="data"[24C]"type"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}})}"_text"{map<unsigned short, std::string, std::less<unsigned short>, geo::StdAllocator<std::pair<const unsigned short, std::string>, grl::Allocator>>="__tree_"{__tree<std::__value_type<unsigned short, std::string>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, std::string>, std::less<unsigned short>>, geo::StdAllocator<std::__value_type<unsigned short, std::string>, grl::Allocator>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, geo::StdAllocator<std::__tree_node<std::__value_type<unsigned short, std::string>, void *>, grl::Allocator>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}"__value_"{StdAllocator<std::__tree_node<std::__value_type<unsigned short, std::string>, void *>, grl::Allocator>="_allocator"^{Allocator}}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, std::string>, std::less<unsigned short>>>="__value_"Q}}}"_clusterIconValues"{vector<unsigned int, std::allocator<unsigned int>>="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::allocator<unsigned int>>="__value_"^I}}"_clusterColors"{vector<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>, std::allocator<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB> *, std::allocator<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>>>="__value_"^v}}"_imageDataProvider"{function<CGImage *(gm::Matrix<unsigned int, 2, 1>, float)>="__f_"{__value_func<CGImage *(gm::Matrix<unsigned int, 2, 1>, float)>="__buf_"{type="__lx"[24C]}"__f_"^v}}};

@interface VKIconModifiers : NSObject {
  /* instance variables */
  struct IconModifiers { BOOL _isClusterIcon; BOOL _isGlyphHidden; BOOL _isGlyphOnly; BOOL _isInfoOnly; BOOL _isMirrored; BOOL _isLandmark; BOOL _isSelected; BOOL _useBalloonShape; float _opacity; float _scale; struct optional<float> { BOOL _hasValue; union ValueUnion { unsigned char x[4] data; float type; } _value; } _pathScale; unsigned char _component; struct optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>> { BOOL _hasValue; union ValueUnion { unsigned char x[4] data; struct Color<unsigned char, 4, geo::ColorSpace::sRGB> { struct Matrix<unsigned char, 4, 1> { unsigned char x[4] _e; } _backing; } type; } _value; } _customColor; struct optional<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>> { BOOL _hasValue; union ValueUnion { unsigned char x[4] data; struct Color<unsigned char, 4, geo::ColorSpace::sRGB> { struct Matrix<unsigned char, 4, 1> { unsigned char x[4] _e; } _backing; } type; } _value; } _shapeColor; struct optional<float> { BOOL _hasValue; union ValueUnion { unsigned char x[4] data; float type; } _value; } _fontSize; struct optional<float> { BOOL _hasValue; union ValueUnion { unsigned char x[4] data; float type; } _value; } _tailDirection; struct optional<std::string> { BOOL _hasValue; union ValueUnion { unsigned char x[24] data; struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned int x :63 __cap_; unsigned int x :1 __is_long_; } __l; struct __short { char x[23] __data_; unsigned char x[0] __padding_; unsigned int x :7 __size_; unsigned int x :1 __is_long_; } __s; struct __raw { unsigned long long x[3] __words; } __r; } x0; } __value_; } __r_; } type; } _value; } _textLocale; struct map<unsigned short, std::string, std::less<unsigned short>, geo::StdAllocator<std::pair<const unsigned short, std::string>, grl::Allocator>> { struct __tree<std::__value_type<unsigned short, std::string>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, std::string>, std::less<unsigned short>>, geo::StdAllocator<std::__value_type<unsigned short, std::string>, grl::Allocator>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, geo::StdAllocator<std::__tree_node<std::__value_type<unsigned short, std::string>, void *>, grl::Allocator>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; struct StdAllocator<std::__tree_node<std::__value_type<unsigned short, std::string>, void *>, grl::Allocator> { struct Allocator *_allocator; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, std::string>, std::less<unsigned short>>> { unsigned long long __value_; } __pair3_; } __tree_; } _text; struct vector<unsigned int, std::allocator<unsigned int>> { unsigned int *__begin_; unsigned int *__end_; struct __compressed_pair<unsigned int *, std::allocator<unsigned int>> { unsigned int *__value_; } __end_cap_; } _clusterIconValues; struct vector<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>, std::allocator<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>>> { void *__begin_; void *__end_; struct __compressed_pair<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB> *, std::allocator<geo::Color<unsigned char, 4, geo::ColorSpace::sRGB>>> { void *__value_; } __end_cap_; } _clusterColors; struct function<CGImage *(gm::Matrix<unsigned int, 2, 1>, float)> { struct __value_func<CGImage *(gm::Matrix<unsigned int, 2, 1>, float)> { struct type { unsigned char x[24] __lx; } __buf_; void *__f_; } __f_; } _imageDataProvider; } _iconModifiers;
}

@property (nonatomic) BOOL nightMode;
@property (nonatomic) BOOL transitMode;
@property (nonatomic) BOOL navMode;
@property (nonatomic) BOOL interactive;
@property (nonatomic) BOOL searchResult;
@property (nonatomic) BOOL elevated;
@property (nonatomic) long long zoom;
@property (nonatomic) unsigned long long variant;
@property (nonatomic) unsigned long long secondaryVariant;
@property (nonatomic) unsigned long long countryCode;

/* instance methods */
- (id)init;
- (id)initWithModifiers:(const void *)modifiers;
- (void *)cppModifiers;
- (void)setText:(id)text;
- (void)setTransitLineColor:(struct { float x0; float x1; float x2; float x3; })color;
- (void)setGlyphOnly:(BOOL)only;
- (BOOL)isSearchResult;
@end

#endif /* VKIconModifiers_h */
