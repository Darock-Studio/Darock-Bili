//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1899.42.9.28.10
//
#ifndef VKCustomFeature_h
#define VKCustomFeature_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"

@class NSString;
@protocol VKCustomFeatureDataSource, VKCustomImageProvider, {_retain_ptr<GEOFeatureStyleAttributes *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc>="_vptr$_retain_ptr"^^?"_obj"@"GEOFeatureStyleAttributes""_retain"{_retain_objc_arc=}"_release"{_release_objc_arc=}}, {shared_ptr<md::LabelExternalFeature>="__ptr_"^{LabelExternalFeature}"__cntrl_"^{__shared_weak_count}};

@interface VKCustomFeature : NSObject<NSSecureCoding> {
  /* instance variables */
  struct shared_ptr<md::LabelExternalFeature> { struct LabelExternalFeature *__ptr_; struct __shared_weak_count *__cntrl_; } _feature;
  NSObject<VKCustomFeatureDataSource> *_dataSource;
  NSObject<VKCustomImageProvider> *_imageProvider;
  NSString *_imageKey;
  BOOL _isGlobalFeature;
  struct _retain_ptr<GEOFeatureStyleAttributes *, geo::_retain_objc_arc, geo::_release_objc_arc, geo::_hash_objc, geo::_equal_objc> { undefined * *_vptr$_retain_ptr; GEOFeatureStyleAttributes *_obj; struct _retain_objc_arc _retain; struct _release_objc_arc _release; } _featureStyleAttributesPtr;
}

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (BOOL)isPointFeature;
- (BOOL)isLineFeature;
- (BOOL)isGlobalFeature;
- (void *)pointFeature;
- (void *)lineFeature;
- (id)_initWithCoordinate:(struct { double x0; double x1; double x2; })coordinate isInjected:(BOOL)injected;
- (id)initWithCoordinate:(struct { double x0; double x1; })coordinate;
- (id)initWithCoordinate3D:(struct { double x0; double x1; double x2; })d;
- (id)init;
- (id)_initInternalFeatureWithCoordinate:(struct { double x0; double x1; double x2; })coordinate;
- (id)initLineWithCoordinates:(const struct { double x0; double x1; double x2; } *)coordinates count:(unsigned long long)count;
- (void)setImageProvider:(id)provider withKey:(id)key;
- (id)imageProvider;
- (id)customImageKey;
- (void)setDataSource:(id)source;
- (id)dataSource;
- (void)setFeatureID:(unsigned long long)id;
- (unsigned long long)featureID;
- (void)setClientFeatureID:(unsigned long long)id;
- (unsigned long long)clientFeatureID;
- (void)setStyleAttributes:(id)attributes;
- (id)styleAttributes;
- (void)setMinZoom:(float)zoom;
- (void)setMaxZoom:(float)zoom;
- (void)setSortKey:(int)key;
- (void)setTextDisplayMode:(unsigned char)mode;
- (void)setText:(id)text locale:(id)locale;
- (void *)feature;
- (BOOL)isInjectedFeature;
- (void)setFeatureRegion:(id)region;
- (void)setBusinessID:(unsigned long long)id;
- (unsigned long long)businessID;
- (void)setVenueID:(unsigned long long)id;
- (unsigned long long)venueID;
- (void)setVenueBuildingID:(unsigned long long)id;
- (unsigned long long)venueBuildingID;
- (void)setVenueLevelID:(unsigned long long)id;
- (unsigned long long)venueLevelID;
- (void)setVenueComponentID:(unsigned long long)id;
- (unsigned long long)venueComponentID;
- (void)setVenueFloorOrdinal:(short)ordinal;
- (short)venueFloorOrdinal;
- (void)setAnnotationText:(id)text locale:(id)locale;
- (void)setPlaceholderIconWithSize:(struct CGSize { double x0; double x1; })size anchorPoint:(struct CGPoint { double x0; double x1; })point isRound:(BOOL)round;
- (void)setBuildingHeight:(float)height;
- (void)setBuildingFaceAzimuth:(float)azimuth;
- (void)setElevationOffset:(double)offset;
- (void)setClusteringMode:(unsigned char)mode;
- (unsigned char)clusteringMode;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* VKCustomFeature_h */
