//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 114.2.2.0.0
//
#ifndef WAGGestureHandlingSession_h
#define WAGGestureHandlingSession_h
@import Foundation;

#include "BLSAssertionObserving-Protocol.h"
#include "WAGExternalHIDEventDelegate-Protocol.h"
#include "WAGExternalHIDEventObserver.h"
#include "WAGGestureHandlingSessionDelegate-Protocol.h"
#include "WAGGesturePreventionAssertion.h"
#include "WAGGestureToolSimulationSession.h"
#include "WAGGestureToolSimulationSessionDelegate-Protocol.h"
#include "WAGGreySession.h"
#include "WAGGreySessionDelegate-Protocol.h"
#include "WAGSimulatorClientSessionManager.h"
#include "WAGSimulatorClientSessionManagerDelegate-Protocol.h"

@class BLSAssertion, NSMutableArray, NSString, SWPreventSystemSleepAssertion;
@protocol OS_os_transaction;

@interface WAGGestureHandlingSession : NSObject<WAGGreySessionDelegate, WAGGestureToolSimulationSessionDelegate, BLSAssertionObserving, WAGSimulatorClientSessionManagerDelegate, WAGExternalHIDEventDelegate> {
  /* instance variables */
  BOOL _isActive;
  WAGGreySession *_greySession;
  WAGGestureToolSimulationSession *_simulationSession;
  WAGSimulatorClientSessionManager *_simulatorSession;
  NSMutableArray *_requests;
  unsigned long long _interactionType;
  SWPreventSystemSleepAssertion *_apAssertion;
  NSObject<OS_os_transaction> *_osTransaction;
  BLSAssertion *_enforceBacklightOnAssertion;
  WAGExternalHIDEventObserver *_externalHIDEventObserver;
  WAGGesturePreventionAssertion *_externalHIDGesturePreventionAssertion;
  NSString *_gestureTargetIdentifier;
}

@property (weak, nonatomic) NSObject<WAGGestureHandlingSessionDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)startWithClientMetadata:(id)metadata;
- (void)stop;
- (void)updateGestureRequests:(id)requests;
- (void)handleUpdatedGestureTargetIdentifier:(id)identifier requestTime:(unsigned long long)time;
- (id)_activeRequestWithType:(int)type;
- (void)_sendGestureResponse:(id)response;
- (BOOL)_isInInteractionState;
- (BOOL)_isAnyActiveRequestInteractable;
- (void)_setInteractionType:(unsigned long long)type triggerByGestures:(BOOL)gestures context:(id)context;
- (BOOL)_handleDoubleTapActionWithContext:(id)context;
- (BOOL)_forceInteractionToEndWithFeedbackAndContext:(id)context;
- (BOOL)_handleDetectedGestureType:(unsigned long long)type context:(id)context;
- (void)_takeBacklightAssertion;
- (void)_releaseBacklightAssertion;
- (void)assertionWasAcquired:(id)acquired;
- (void)assertion:(id)assertion didFailToAcquireWithError:(id)error;
- (BOOL)greySession:(id)session didDetectGesture:(unsigned long long)gesture context:(id)context;
- (void)didConnectedToCommandLineToolInGestureToolSimulationSession:(id)session;
- (void)gestureToolSimulationSession:(id)session simulateGestureType:(unsigned long long)type;
- (void)gestureToolSimulationSession:(id)session handleRotationDegrees:(float)degrees;
- (void)simulatorManager:(id)manager simulateGestureType:(unsigned long long)type;
- (void)externalHIDEventObserverDidTriggerAnyEvent:(id)event;
@end

#endif /* WAGGestureHandlingSession_h */
