//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 114.2.2.0.0
//
#ifndef WAGServerClientsManager_h
#define WAGServerClientsManager_h
@import Foundation;

#include "BLSBacklightStateObserving-Protocol.h"
#include "CSLSOnWristMonitorDelegate-Protocol.h"
#include "CSLSSensitiveUIMonitoring-Protocol.h"
#include "HKSPSleepStoreObserver-Protocol.h"
#include "NSXPCListenerDelegate-Protocol.h"
#include "WAGBacklightStateObserver-Protocol.h"
#include "WAGGestureServerObserverConnectionDelegate-Protocol.h"
#include "WAGServerClientsManagerDelegate-Protocol.h"

@class CSLSOnWristMonitor, CSLSSensitiveUIMonitor, HKSPSleepStore, NSMutableArray, NSMutableSet, NSString, NSXPCListener;
@protocol CSLSSystemStateInterface;

@interface WAGServerClientsManager : NSObject<NSXPCListenerDelegate, WAGGestureServerObserverConnectionDelegate, BLSBacklightStateObserving, CSLSOnWristMonitorDelegate, WAGBacklightStateObserver, CSLSSensitiveUIMonitoring, HKSPSleepStoreObserver> {
  /* instance variables */
  NSMutableArray *_clients;
  NSXPCListener *_listener;
  NSMutableSet *_connections;
  BOOL _isOnWrist;
  BOOL _isActive;
  BOOL _isUnlockedOrHasNoPasscodeSet;
  BOOL _isSleepModeEnabled;
  BOOL _isCharging;
  unsigned long long _activeAssertionOptions;
  CSLSOnWristMonitor *_onWristMonitor;
  CSLSSensitiveUIMonitor *_sensitiveUIMonitor;
  HKSPSleepStore *_sleepStore;
  NSObject<CSLSSystemStateInterface> *_depthModeInterface;
  NSObject<CSLSSystemStateInterface> *_waterLockInterface;
}

@property (weak, nonatomic) NSObject<WAGServerClientsManagerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)start;
- (void)stop;
- (id)clientMetadataForSessionIdentifier:(id)identifier;
- (void)sendMessage:(id)message toClientWithMetadata:(id)metadata completionHandler:(id /* block */)handler;
- (void)updateActiveGestureRequests:(id)requests forClientWithMetadata:(id)metadata;
- (void)updateAssertionOptions:(unsigned long long)options;
- (id)activeClient;
- (id)carouselClient;
- (void)connectClientWithMetadata:(id)metadata channel:(id)channel connection:(id)connection;
- (void)disconnectClientWithMetadata:(id)metadata;
- (void)receiveMessageFromClientWithMetadata:(id)metadata;
- (id)canStartEltonWithAssertionOptions:(unsigned long long)options;
- (void)_sendMessage:(id)message toClientWithMetadata:(id)metadata notifyHeartbeatSession:(BOOL)session completionHandler:(id /* block */)handler;
- (void)_handleSettingsDidChange;
- (void)_recalculateInternalState;
- (id)_startOrStopWithAssertionOptions:(unsigned long long)options dryRun:(BOOL)run;
- (id)_lowToHighPriorityClients;
- (id)_topPriorityClient;
- (id)_clientWithMetadata:(id)metadata;
- (void)_handleConnectionsDidChange;
- (void)_handleOnWristState:(long long)state;
- (void)_logActiveClients;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)didStartConnection:(id)connection;
- (void)backlightStateManager:(id)manager didUpdateScreenActive:(BOOL)active;
- (void)onWristMonitor:(id)monitor didUpdateOnWristState:(id)state fromState:(id)state;
- (void)_updateLockedState;
- (BOOL)_passesSensitiveUICheck;
- (BOOL)_requireSensitiveUI;
- (void)sensitiveUIMonitor:(id)uimonitor sensitiveUIChanged:(BOOL)uichanged;
- (void)_updateSleepState;
- (void)sleepStore:(id)store sleepModeOnDidChange:(BOOL)change;
- (void)_updateBatteryState;
- (void)_lowPowerModeNotificationChanged;
@end

#endif /* WAGServerClientsManager_h */
