//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 114.2.2.0.0
//
#ifndef WAGGestureServer_h
#define WAGGestureServer_h
@import Foundation;

#include "WAGAssertionServer.h"
#include "WAGAssertionServerDelegate-Protocol.h"
#include "WAGDebuggingInformationManagerObserver-Protocol.h"
#include "WAGDebuggingInformationManagerServerDelegate-Protocol.h"
#include "WAGGestureHandlingSession.h"
#include "WAGGestureHandlingSessionDelegate-Protocol.h"
#include "WAGGestureServerChannelDelegate-Protocol.h"
#include "WAGGestureServerSysdiagnoseManager.h"
#include "WAGGestureServerXPCChannel.h"
#include "WAGIOHIDService.h"
#include "WAGServerClientsManager.h"
#include "WAGServerClientsManagerDelegate-Protocol.h"

@class BLSAssertion, NSString;

@interface WAGGestureServer : NSObject<WAGGestureServerChannelDelegate, WAGGestureHandlingSessionDelegate, WAGServerClientsManagerDelegate, WAGAssertionServerDelegate, WAGDebuggingInformationManagerServerDelegate, WAGDebuggingInformationManagerObserver> {
  /* instance variables */
  WAGGestureHandlingSession *_gestureHandlingSession;
  WAGGestureServerXPCChannel *_xpcChannel;
  WAGServerClientsManager *_clientsManager;
  WAGGestureServerSysdiagnoseManager *_sysdiagnoseManager;
  WAGIOHIDService *_hidService;
  WAGAssertionServer *_assertionServer;
  BLSAssertion *_forceBacklightActiveAssertion;
  BOOL _wantsToStart;
  BOOL _isRunning;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)start;
- (void)stop;
- (void)_startOrStopServices;
- (id)_channels;
- (id)_clientMetadataFromMessage:(id)message;
- (void)_logVersionDict;
- (void)_sendDebuggingInformationToClientIfPossible;
- (void)_invalidateBacklightAssertion;
- (void)channel:(id)channel connection:(id)connection requestStartFromClient:(id)client;
- (void)channel:(id)channel connection:(id)connection didReceiveClientMessage:(id)message;
- (void)channel:(id)channel didDisconnectFromClient:(id)client;
- (void)session:(id)session handleGestureResponse:(id)response;
- (void)clientsManager:(id)manager didUpdateActiveClient:(id)client;
- (void)clientsManager:(id)manager didUpdateGestureRequests:(id)requests;
- (void)assertionServer:(id)server didUpdateActiveAssertionOptions:(unsigned long long)options;
- (id)assertionServer:(id)server checkCanStartEltonWithAssertionOptions:(unsigned long long)options;
- (void)didUpdateInformationInDebuggingInformationManager:(id)manager;
- (void)debuggingInformationManager:(id)manager sendEventResponse:(id)response;
@end

#endif /* WAGGestureServer_h */
