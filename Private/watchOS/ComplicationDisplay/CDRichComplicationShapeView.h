//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef CDRichComplicationShapeView_h
#define CDRichComplicationShapeView_h
@import Foundation;

#include "UIView.h"
#include "CLKMonochromeComplicationView-Protocol.h"
#include "CLKMonochromeFilterProvider-Protocol.h"

@class CAGradientLayer, CALayer, CAShapeLayer, CLKDevice, NSArray, NSString, UIView;

@interface CDRichComplicationShapeView : UIView<CLKMonochromeComplicationView> {
  /* instance variables */
  CLKDevice *_device;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _previousBounds;
  BOOL _willUnfreezeForTransaction;
  UIView *_filterView;
  CALayer *_freezeLayer;
  CAShapeLayer *_shapeLayer;
  CAGradientLayer *_gradientLayer;
  NSArray *_filteredGradientColors;
  NSArray *_gradientLocations;
  double _monochromeFraction;
}

@property (retain, nonatomic) NSArray *gradientColors;
@property (nonatomic) double progress;
@property (readonly, nonatomic) long long filterStyle;
@property (weak, nonatomic) NSObject<CLKMonochromeFilterProvider> *filterProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initForDevice:(id)device withFilterStyle:(long long)style;
- (void)layoutSubviews;
- (void)unfreezeForTransaction;
- (void)setGradientColors:(id)colors locations:(id)locations;
- (struct CGPoint { double x0; double x1; })pointAtProgress:(float)progress;
- (void)_updatePath;
- (void)transitionToMonochromeWithFraction:(double)fraction;
- (void)updateMonochromeColor;
- (void)_updateGradient;
- (id)_shapeStrokeColor;
- (void)_setupShapeLayer:(id)layer;
- (void)_setupGradientLayer:(id)layer;
- (double)_shapeLineWidth;
- (struct CGPoint { double x0; double x1; })_pointAtProgress:(float)progress;
- (id)_normalizeGradientLocations:(id)locations;
- (struct CGPath *)_generatePath;
- (BOOL)_shouldReverseGradient;
- (id)device;
- (id)gradientLayer;
- (id)shapeLayer;
@end

#endif /* CDRichComplicationShapeView_h */
