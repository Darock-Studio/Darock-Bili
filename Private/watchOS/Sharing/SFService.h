//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1936.30.51.4.2
//
#ifndef SFService_h
#define SFService_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "SFXPCInterface-Protocol.h"

@class CUAppleIDClient, NSData, NSDictionary, NSMutableDictionary, NSString, NSUUID, NSXPCConnection, NSXPCListenerEndpoint;
@protocol OS_dispatch_queue;

@interface SFService : NSObject<NSSecureCoding, SFXPCInterface> {
  /* instance variables */
  BOOL _activateCalled;
  BOOL _activateInProgress;
  BOOL _activateCompleted;
  BOOL _invalidateCalled;
  BOOL _invalidateDone;
  NSMutableDictionary *_requestQueue;
  NSMutableDictionary *_sessions;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucatCore;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucatCrypto;
  id /* block */ _pairSetupCompletion;
  BOOL _pairSetupEnded;
  unsigned int _pairSetupFlags;
  struct PairingSessionPrivate * _pairSetupSession;
  unsigned int _pairSetupXID;
  NSXPCConnection *_xpcCnx;
}

@property (copy, nonatomic) NSData *authTagOverride;
@property (nonatomic) BOOL autoUnlockEnabled;
@property (nonatomic) BOOL autoUnlockWatch;
@property (nonatomic) unsigned char deviceClassCode;
@property (nonatomic) unsigned char deviceColorCode;
@property (nonatomic) unsigned char deviceModelCode;
@property (nonatomic) unsigned long long problemFlags;
@property (copy, nonatomic) id /* block */ receivedFramePeerHandler;
@property (copy, nonatomic) NSString *requestSSID;
@property (copy, nonatomic) id /* block */ responseMessageInternalHandler;
@property (copy, nonatomic) id /* block */ sendFramePeerHandler;
@property (nonatomic) unsigned char serviceType;
@property (copy, nonatomic) NSUUID *serviceUUID;
@property (retain, nonatomic) NSXPCListenerEndpoint *testListenerEndpoint;
@property (nonatomic) BOOL touchRemoteEnabled;
@property (nonatomic) BOOL watchLocked;
@property (nonatomic) BOOL wifiP2P;
@property (nonatomic) long long advertiseRate;
@property (nonatomic) unsigned char deviceActionType;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic) BOOL duetSync;
@property (copy, nonatomic) NSString *fixedPIN;
@property (copy, nonatomic) NSString *identifier;
@property (copy, nonatomic) NSString *label;
@property (nonatomic) BOOL needsAWDL;
@property (nonatomic) BOOL needsKeyboard;
@property (nonatomic) BOOL needsSetup;
@property (nonatomic) BOOL overrideScreenOff;
@property (copy, nonatomic) NSDictionary *pairSetupACL;
@property (nonatomic) BOOL pairSetupDisabled;
@property (copy, nonatomic) NSDictionary *pairVerifyACL;
@property (nonatomic) unsigned int pinType;
@property (nonatomic) unsigned int sessionFlags;
@property (copy, nonatomic) NSString *myAppleID;
@property (retain, nonatomic) CUAppleIDClient *myAppleIDInfoClient;
@property (copy, nonatomic) NSString *peerAppleID;
@property (copy, nonatomic) id /* block */ interruptionHandler;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (copy, nonatomic) id /* block */ showPINHandlerEx;
@property (copy, nonatomic) id /* block */ showPINHandler;
@property (copy, nonatomic) id /* block */ hidePINHandler;
@property (copy, nonatomic) id /* block */ promptForPINHandler;
@property (copy, nonatomic) id /* block */ receivedObjectHandler;
@property (copy, nonatomic) id /* block */ receivedRequestHandler;
@property (copy, nonatomic) id /* block */ sessionStartedHandler;
@property (copy, nonatomic) id /* block */ sessionEndedHandler;
@property (copy, nonatomic) id /* block */ sessionSecuredHandler;
@property (copy, nonatomic) id /* block */ peerDisconnectedHandler;
@property (copy, nonatomic) id /* block */ pairSetupCompletionHandler;
@property (retain, nonatomic) NSData *targetAuthTag;
@property (copy, nonatomic) id /* block */ errorHandler;
@property (copy, nonatomic) id /* block */ eventMessageHandler;
@property (nonatomic) BOOL hasProblem;
@property (copy, nonatomic) id /* block */ requestMessageHandler;
@property (nonatomic) BOOL supportsAirPlayReceiver;
@property (nonatomic) BOOL wakeDevice;
@property (nonatomic) BOOL isCLIMode;
@property (nonatomic) NSString *forcedPin;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (void)_cleanup;
- (id)description;
- (int)setEncryptionReadKey:(const char *)key readKeyLen:(unsigned long long)len writeKey:(const char *)key writeKeyLen:(unsigned long long)len peer:(id)peer;
- (void)clearEncryptionInfoForPeer:(id)peer;
- (void)updateWithService:(id)service;
- (void)activateWithCompletion:(id /* block */)completion;
- (void)_activateWithCompletion:(id /* block */)completion;
- (void)_activated;
- (void)_ensureXPCStarted;
- (void)_interrupted;
- (void)invalidate;
- (void)_invalidated;
- (void)_performActivateSafeChange:(id /* block */)change;
- (void)sendEvent:(id)event;
- (void)sendRequest:(id)request;
- (void)sendResponse:(id)response;
- (void)sendToPeer:(id)peer flags:(unsigned int)flags object:(id)object;
- (void)_sendToPeer:(id)peer type:(unsigned char)type unencryptedObject:(id)object;
- (void)sendToPeer:(id)peer type:(unsigned char)type data:(id)data;
- (void)_sendToPeer:(id)peer type:(unsigned char)type data:(id)data;
- (void)pairSetupWithFlags:(unsigned int)flags peer:(id)peer;
- (void)pairSetupTryPIN:(id)pin peer:(id)peer;
- (void)serviceError:(id)error;
- (void)servicePeerDisconnected:(id)disconnected error:(id)error;
- (void)serviceReceivedEvent:(id)event;
- (void)serviceReceivedFrameType:(unsigned char)type data:(id)data peer:(id)peer;
- (void)serviceReceivedRequest:(id)request;
- (void)serviceReceivedResponse:(id)response;
- (void)serviceSessionFailed:(id)failed error:(id)error;
@end

#endif /* SFService_h */
