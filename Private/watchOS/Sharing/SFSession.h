//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1936.30.51.4.2
//
#ifndef SFSession_h
#define SFSession_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "SFAppleIDContactInfo.h"
#include "SFDevice.h"
#include "SFXPCInterface-Protocol.h"

@class CUAppleIDClient, CUMessageSession, CUMessageSessionServer, CUPairedPeer, CUPairingSession, NSDictionary, NSMutableData, NSMutableDictionary, NSString, NSUUID, NSXPCConnection, NSXPCListenerEndpoint, SDStatusMonitor, TRSession;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_os_transaction;

@interface SFSession : NSObject<NSSecureCoding, SFXPCInterface> {
  /* instance variables */
  struct CryptoAEADPrivate * _encryptionReadAEAD;
  unsigned char _encryptionReadNonce[12];
  struct CryptoAEADPrivate * _encryptionWriteAEAD;
  unsigned char _encryptionWriteNonce[12];
  NSMutableData *_fragmentData;
  unsigned short _fragmentLastIndex;
  NSObject<OS_dispatch_source> *_heartbeatTimer;
  NSMutableDictionary *_requestMap;
  NSObject<OS_os_transaction> *_transaction;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucatCore;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucatCrypto;
  BOOL _activateCalled;
  BOOL _activateInProgress;
  BOOL _activateCompleted;
  id /* block */ _activateCompletion;
  SFAppleIDContactInfo *_appleIDContactInfo;
  BOOL _appleIDContactCompleted;
  BOOL _invalidateCalled;
  BOOL _invalidateDone;
  unsigned int _heartbeatID;
  BOOL _heartbeatV2;
  BOOL _heartbeatWaiting;
  CUMessageSessionServer *_messageSessionServer;
  id /* block */ _pairSetupCompletion;
  BOOL _pairSetupEnded;
  unsigned int _pairSetupFlags;
  CUPairingSession *_pairSetupSession;
  unsigned int _pairSetupXID;
  id /* block */ _pairVerifyCompletion;
  BOOL _pairVerifyEnded;
  unsigned int _pairVerifyFlags;
  struct PairingSessionPrivate * _pairVerifySession;
  NSMutableDictionary *_requestQueue;
  BOOL _timeoutFired;
  NSObject<OS_dispatch_source> *_timeoutTimer;
  NSXPCConnection *_xpcCnx;
}

@property (copy, nonatomic) NSUUID *identifier;
@property (nonatomic) unsigned long long heartbeatLastTicks;
@property (copy, nonatomic) NSUUID *peer;
@property (copy, nonatomic) id /* block */ receivedFrameHandler;
@property (readonly, copy, nonatomic) NSMutableDictionary *requestHandlers;
@property (copy, nonatomic) id /* block */ responseMessageInternalHandler;
@property (copy, nonatomic) id /* block */ sendFrameHandler;
@property (nonatomic) unsigned char serviceType;
@property (copy, nonatomic) NSUUID *serviceUUID;
@property (nonatomic) unsigned int sessionID;
@property (nonatomic) unsigned int sharingSourceVersion;
@property (retain, nonatomic) NSXPCListenerEndpoint *testListenerEndpoint;
@property (nonatomic) BOOL touchRemoteEnabled;
@property (retain, nonatomic) TRSession *trSession;
@property (nonatomic) long long bluetoothState;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (copy, nonatomic) id /* block */ errorHandler;
@property (copy, nonatomic) NSString *fixedPIN;
@property (retain, nonatomic) NSString *label;
@property (readonly, nonatomic) CUMessageSession *messageSessionTemplate;
@property (retain, nonatomic) SFDevice *peerDevice;
@property (copy, nonatomic) NSString *serviceIdentifier;
@property (nonatomic) unsigned int sessionFlags;
@property (nonatomic) double timeout;
@property (copy, nonatomic) NSString *myAppleID;
@property (retain, nonatomic) CUAppleIDClient *myAppleIDInfoClient;
@property (readonly, nonatomic) CUPairedPeer *pairedPeer;
@property (copy, nonatomic) NSString *peerAppleID;
@property (copy, nonatomic) NSString *peerContactIdentifier;
@property (retain, nonatomic) SDStatusMonitor *statusMonitor;
@property (copy, nonatomic) id /* block */ bluetoothStateChangedHandler;
@property (copy, nonatomic) id /* block */ interruptionHandler;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (copy, nonatomic) NSDictionary *pairSetupACL;
@property (copy, nonatomic) NSDictionary *pairVerifyACL;
@property (copy, nonatomic) id /* block */ pairSetupCompletionHandler;
@property (copy, nonatomic) id /* block */ showPINHandlerEx;
@property (copy, nonatomic) id /* block */ promptForPINHandler;
@property (copy, nonatomic) id /* block */ hidePINHandler;
@property (copy, nonatomic) id /* block */ receivedObjectHandler;
@property (copy, nonatomic) id /* block */ receivedRequestHandler;
@property (copy, nonatomic) id /* block */ sessionStartedHandler;
@property (copy, nonatomic) id /* block */ timeoutHandler;
@property (nonatomic) BOOL isCLIMode;
@property (nonatomic) NSString *forcedPasscode;
@property (copy, nonatomic) id /* block */ eventMessageHandler;
@property (copy, nonatomic) id /* block */ requestMessageHandler;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)registerForExternalIO:(id)io;
- (void)sendExternalIO:(id)io;
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (void)_cleanup;
- (id)description;
- (int)setEncryptionReadKey:(const char *)key readKeyLen:(unsigned long long)len writeKey:(const char *)key writeKeyLen:(unsigned long long)len;
- (void)activateWithCompletion:(id /* block */)completion;
- (void)_activateWithCompletion:(id /* block */)completion;
- (void)_activatedIfReady:(id)ready;
- (void)_activated;
- (void)_ensureXPCStarted;
- (void)_fetchInfo;
- (void)_hearbeatTimer;
- (void)_interrupted;
- (void)invalidate;
- (void)_invalidated;
- (void)_setupMessageSession;
- (void)_tearDownMessageSession;
- (void)_setupTouchRemote;
- (void)_tearDownTouchRemote;
- (void)_startTimeoutIfNeeded;
- (void)_timeoutTimerFired;
- (BOOL)pairingContainsACL:(id)acl;
- (id)pairingDeriveKeyForIdentifier:(id)identifier keyLength:(unsigned long long)length;
- (void)_serviceInitiatedPairSetup:(id)setup;
- (void)pairSetupWithFlags:(unsigned int)flags completion:(id /* block */)completion;
- (void)pairSetupWithFlags:(unsigned int)flags completion:(id /* block */)completion isServer:(BOOL)server;
- (void)_pairSetupWithFlags:(unsigned int)flags completion:(id /* block */)completion isServer:(BOOL)server;
- (void)_pairSetup:(id)setup start:(BOOL)start;
- (void)pairSetupTryPIN:(id)pin;
- (void)_pairSetupTryPIN:(id)pin;
- (void)_pairSetupCompleted:(int)completed;
- (void)pairVerifyWithFlags:(unsigned int)flags completion:(id /* block */)completion;
- (void)_pairVerifyWithFlags:(unsigned int)flags completion:(id /* block */)completion;
- (void)_pairVerify:(id)verify start:(BOOL)start;
- (void)_pairVerifyCompleted:(int)completed;
- (void)appleIDAddProof:(id)proof dispatchQueue:(id)queue completion:(id /* block */)completion;
- (BOOL)_appleIDAddProof:(id)proof error:(id *)error;
- (void)appleIDVerifyProof:(id)proof dispatchQueue:(id)queue completion:(id /* block */)completion;
- (id)_appleIDVerifyProof:(id)proof error:(id *)error;
- (void)sendEvent:(id)event;
- (void)sendRequest:(id)request;
- (void)sendResponse:(id)response;
- (void)sendFrameType:(unsigned char)type data:(id)data;
- (void)sendFrameType:(unsigned char)type object:(id)object;
- (void)_sendFrameType:(unsigned char)type object:(id)object;
- (void)sendRequestWithFlags:(unsigned int)flags object:(id)object responseHandler:(id /* block */)handler;
- (void)_sendRequestWithFlags:(unsigned int)flags object:(id)object responseHandler:(id /* block */)handler;
- (void)sendWithFlags:(unsigned int)flags object:(id)object;
- (void)_sendEncryptedObject:(id)object;
- (void)registerRequestID:(id)id options:(id)options handler:(id /* block */)handler;
- (void)_registerRequestID:(id)id options:(id)options handler:(id /* block */)handler;
- (void)deregisterRequestID:(id)id;
- (void)_deregisterRequestID:(id)id;
- (void)sendRequestID:(id)id options:(id)options request:(id)request responseHandler:(id /* block */)handler;
- (void)_sendRequestID:(id)id options:(id)options request:(id)request responseHandler:(id /* block */)handler;
- (void)sessionBluetoothStateChanged:(long long)changed;
- (void)sessionError:(id)error;
- (void)sessionReceivedEvent:(id)event;
- (void)sessionReceivedFrameType:(unsigned char)type data:(id)data;
- (void)sessionReceivedFragmentData:(id)data last:(BOOL)last;
- (void)_sessionReceivedEncryptedData:(id)data type:(unsigned char)type;
- (void)_sessionReceivedUnencryptedData:(id)data type:(unsigned char)type;
- (void)_sessionReceivedObject:(id)object flags:(unsigned int)flags;
- (BOOL)_sessionReceivedEvent:(id)event flags:(unsigned int)flags;
- (BOOL)_sessionReceivedRegisteredRequestID:(id)id flags:(unsigned int)flags xidKey:(id)key xidValue:(id)value;
- (void)_sessionReceivedRequestID:(id)id object:(id)object flags:(unsigned int)flags;
- (BOOL)_sessionReceivedRequest:(id)request flags:(unsigned int)flags responseHandler:(id /* block */)handler;
- (void)_sessionReceivedResponseID:(id)id object:(id)object flags:(unsigned int)flags;
- (void)_sessionReceivedStartAck:(id)ack;
- (void)sessionReceivedRequest:(id)request;
- (void)sessionReceivedResponse:(id)response;
@end

#endif /* SFSession_h */
