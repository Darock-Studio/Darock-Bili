//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1936.30.51.4.2
//
#ifndef SFAutoUnlockManager_h
#define SFAutoUnlockManager_h
@import Foundation;

#include "SFAutoUnlockManagerDelegate-Protocol.h"
#include "SFUnlockClientProtocol-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface SFAutoUnlockManager : NSObject<SFUnlockClientProtocol>

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (weak, nonatomic) NSObject<SFAutoUnlockManagerDelegate> *delegate;
@property (readonly, nonatomic) double spinnerDelay;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)autoUnlockSupported;
+ (BOOL)mockedAutoUnlockEnabled;
+ (BOOL)autoUnlockEnabled;
+ (BOOL)autoUnlockEnabled:(unsigned int)enabled;
+ (BOOL)mockedBluetoothAndWiFiEnabled;
+ (BOOL)bluetoothAndWiFiEnabled;
+ (void)mockedEnableBluetoothAndWiFi;
+ (void)enableBluetoothAndWiFi;
+ (id)userDefaults;
+ (BOOL)mockedPhoneAutoUnlockEnabled;
+ (BOOL)mockedPhoneAutoUnlockInBioLockout;
+ (BOOL)mockedPhoneAutoUnlockFaceIDDisabled;
+ (BOOL)mockedPhoneAutoUnlockNeverUnlocked;
+ (BOOL)mockedPhoneAutoUnlockMaskUnlikely;
+ (BOOL)mockedPhoneAutoUnlockNoMask;
+ (BOOL)mockedPhoneAutoUnlockWiFiOff;
+ (BOOL)mockedPhoneAutoUnlockAWDLUnavailable;
+ (BOOL)mockedPhoneAutoUnlockNoWatch;
+ (BOOL)mockedPhoneAutoUnlockNoPairedWatch;
+ (BOOL)mockedPhoneAutoUnlockWatchHasWeakPasscode;
+ (BOOL)mockedPhoneAutoUnlockWatchWristDetectionDisabled;
+ (BOOL)mockedPhoneAutoUnlockWatchLocked;
+ (BOOL)mockedPhoneAutoUnlockWatchOffWrist;
+ (BOOL)mockedPhoneAutoUnlockWatchWiFiOff;
+ (BOOL)mockedPhoneAutoUnlockWatchAWDLUnavailable;
+ (BOOL)mockedPhoneAutoUnlockWatchSleepModeOn;
+ (BOOL)mockedPhoneAutoUnlockWatchNoMotion;
+ (float)mockedPhoneAutoUnlockSimulateLatency;
+ (BOOL)mockedPhoneAutoUnlockSimulateDevicesOutOfRange;
+ (BOOL)mockedPhoneAutoUnlockSimulatePhoneMissedFinalConfirmationToUnlock;
+ (BOOL)mockedPhoneAutoUnlockSimulateMagnetBreak;
+ (float)mockedPhoneAutoUnlockSimulateManualReLock;
+ (long long)mockedPhoneAutoUnlockSimulateErrorCode;

/* instance methods */
- (id)init;
- (void)repairCloudPairing;
- (void)mockedEligibleAutoUnlockDevicesWithCompletionHandler:(id /* block */)handler;
- (void)eligibleAutoUnlockDevicesWithCompletionHandler:(id /* block */)handler;
- (void)mockedEnableAutoUnlockWithDevice:(id)device;
- (void)enableAutoUnlockWithDevice:(id)device passcode:(id)passcode;
- (void)cancelEnablingAutoUnlockForDevice:(id)device;
- (void)mockedDisableAutoUnlockForDevice:(id /* block */)device;
- (void)disableAutoUnlockForDevice:(id)device completionHandler:(id /* block */)handler;
- (void)mockedAttemptAutoUnlock;
- (void)prewarmAutoUnlock;
- (void)completeAutoUnlockWithNotification:(BOOL)notification;
- (void)donateDeviceUnlockedWithMask:(BOOL)mask;
- (void)declinedToEnablePhoneAutoUnlock;
- (void)clearPhoneAutoUnlockBehaviorChangeNotification;
- (void)attemptAutoUnlock;
- (void)attemptAutoUnlockWithoutNotifyingWatch;
- (void)attemptAutoUnlockForSiri;
- (void)mockedCancelUnlock;
- (void)cancelAutoUnlock;
- (void)requestRelock;
- (void)onDelegateQueue_notifyDelegateOfEnableError:(id)error device:(id)device;
- (void)onDelegateQueue_notifyDelegateOfAttemptError:(id)error;
- (void)keyDeviceLocked:(id)locked;
- (void)enabledDevice:(id)device;
- (void)failedToEnableDevice:(id)device error:(id)error;
- (void)beganAttemptWithDevice:(id)device;
- (void)completedUnlockWithDevice:(id)device;
- (void)failedUnlockWithError:(id)error;
- (void)deviceRequestedRelock:(id)relock;
- (void)autoUnlockStateWithCompletionHandler:(id /* block */)handler;
- (void)authPromptInfoWithCompletionHandler:(id /* block */)handler;
@end

#endif /* SFAutoUnlockManager_h */
