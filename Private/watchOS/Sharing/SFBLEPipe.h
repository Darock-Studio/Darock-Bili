//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1936.30.51.4.2
//
#ifndef SFBLEPipe_h
#define SFBLEPipe_h
@import Foundation;

#include "CBCentralManagerDelegate-Protocol.h"
#include "CBScalablePipeManagerDelegate-Protocol.h"
#include "SFBLEData.h"

@class CBCentralManager, CBScalablePipe, CBScalablePipeManager, NSData, NSDate, NSMutableArray, NSMutableData, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface SFBLEPipe : NSObject<CBCentralManagerDelegate, CBScalablePipeManagerDelegate> {
  /* instance variables */
  BOOL _activateCalled;
  CBCentralManager *_btCentral;
  struct channel * _btChannel;
  BOOL _btConnected;
  BOOL _btConnecting;
  BOOL _btEndpointRegistering;
  BOOL _btEndpointRegistered;
  int _btFD;
  unsigned char _btReadHeader[4];
  NSMutableData *_btReadPayload;
  unsigned long long _btReadLen;
  unsigned long long _btReadOffset;
  struct channel_ring_desc * _btReadRing;
  NSObject<OS_dispatch_source> *_btReadSource;
  NSData *_btWriteData;
  SFBLEData *_btWriteItem;
  unsigned long long _btWriteLen;
  unsigned long long _btWriteOffset;
  const char * _btWritePtr;
  NSMutableArray *_btWriteQueue;
  struct channel_ring_desc * _btWriteRing;
  NSObject<OS_dispatch_source> *_btWriteSource;
  BOOL _btWriteSuspended;
  CBScalablePipe *_btPipe;
  long long _btPipePriority;
  CBScalablePipeManager *_btPipeManager;
  NSMutableDictionary *_frameHandlers;
  BOOL _invalidateCalled;
  NSDate *_lastDisconnectDate;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucat;
}

@property (copy, nonatomic) id /* block */ bluetoothStateChangedHandler;
@property (readonly, nonatomic) long long connectionState;
@property (copy, nonatomic) id /* block */ connectionStateChangedHandler;
@property (copy, nonatomic) id /* block */ frameHandler;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (copy, nonatomic) NSString *identifier;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (nonatomic) BOOL manualConnect;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithPriority:(long long)priority;
- (void)dealloc;
- (id)getPeerUUID;
- (void)activate;
- (void)_activate;
- (void)invalidate;
- (void)_invalidate;
- (void)addFrameHandlerForType:(unsigned char)type handler:(id /* block */)handler;
- (void)removeFrameHandlerForType:(unsigned char)type;
- (void)sendFrameType:(unsigned char)type payload:(id)payload completion:(id /* block */)completion;
- (void)sendFrameTypeDirect:(unsigned char)direct payload:(id)payload completion:(id /* block */)completion;
- (void)_sendFrameType:(unsigned char)type payload:(id)payload completion:(id /* block */)completion;
- (void)_setupIfNeeded;
- (void)_setupPipe:(id)pipe;
- (void)_tearDownPipe;
- (void)_readHandler;
- (void)_writeHandler;
- (void)_frameHandler:(unsigned char)handler data:(id)data;
- (id)_defaultPairedDeviceBluetoothIdentifier;
- (void)centralManagerDidUpdateState:(id)state;
- (void)centralManager:(id)manager didConnectPeripheral:(id)peripheral;
- (void)centralManager:(id)manager didFailToConnectPeripheral:(id)peripheral error:(id)error;
- (void)centralManager:(id)manager didDisconnectPeripheral:(id)peripheral error:(id)error;
- (void)scalablePipeManagerDidUpdateState:(id)state;
- (void)scalablePipeManager:(id)manager didRegisterEndpoint:(id)endpoint error:(id)error;
- (void)scalablePipeManager:(id)manager didUnregisterEndpoint:(id)endpoint;
- (void)scalablePipeManager:(id)manager pipeDidConnect:(id)connect;
- (void)scalablePipeManager:(id)manager pipeDidDisconnect:(id)disconnect error:(id)error;
@end

#endif /* SFBLEPipe_h */
