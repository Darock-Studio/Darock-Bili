//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1936.30.51.4.2
//
#ifndef SFBLEConnection_h
#define SFBLEConnection_h
@import Foundation;

#include "SFBLEData.h"
#include "SFBLEDevice.h"

@class CURetrier, NSMutableArray, NSMutableSet;
@protocol OS_dispatch_queue;

@interface SFBLEConnection : NSObject {
  /* instance variables */
  BOOL _activateCalled;
  NSMutableSet *_clients;
  BOOL _connected;
  BOOL _connecting;
  double _connectStartTime;
  CURetrier *_connectRetrier;
  SFBLEData *_currentData;
  NSMutableArray *_dataSendQueue;
  BOOL _invalidateCalled;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucat;
}

@property (nonatomic) BOOL bleEncrypted;
@property (nonatomic) BOOL latencyCritical;
@property (nonatomic) BOOL lePipeCapable;
@property (retain, nonatomic) SFBLEDevice *peerDevice;
@property (nonatomic) BOOL acceptor;
@property (copy, nonatomic) id /* block */ bluetoothBandwidthChangedHandler;
@property (copy, nonatomic) id /* block */ bluetoothStateChangedHandler;
@property (readonly, nonatomic) long long connectionState;
@property (copy, nonatomic) id /* block */ connectionStateChangedHandler;
@property (copy, nonatomic) id /* block */ dataHandler;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (nonatomic) unsigned int sessionFlags;
@property (nonatomic) unsigned int useCase;

/* instance methods */
- (id)initWithDevice:(id)device acceptor:(BOOL)acceptor;
- (void)dealloc;
- (id)description;
- (void)activate;
- (void)activateDirect;
- (void)_activate;
- (void)invalidate;
- (void)_invalidate;
- (void)sendData:(id)data completion:(id /* block */)completion;
- (void)sendDataDirect:(id)direct completion:(id /* block */)completion;
- (void)_connectIfNeeded;
- (void)_processQueuedData;
- (void)_cleanupQueuedData:(int)data;
- (void)addClient:(id)client;
- (BOOL)removeClient:(id)client;
@end

#endif /* SFBLEConnection_h */
