//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.16.1.0.0
//
#ifndef INFERENCESchemaINFERENCECRRTrainingSampleCollected_h
#define INFERENCESchemaINFERENCECRRTrainingSampleCollected_h
@import Foundation;

#include "SISchemaInstrumentationMessage.h"
#include "INFERENCESchemaINFERENCEContactResolverConfig.h"
#include "INFERENCESchemaINFERENCEPotentialRetryContactInteractionContext.h"
#include "INFERENCESchemaINFERENCEPromptContext.h"
#include "INFERENCESchemaINFERENCETrialEnrollment.h"

@class NSArray, NSData, NSString;

@interface INFERENCESchemaINFERENCECRRTrainingSampleCollected : SISchemaInstrumentationMessage {
  /* instance variables */
  struct { unsigned int x :1 resolutionState; unsigned int x :1 resolutionType; unsigned int x :1 isInteractionExecuted; unsigned int x :1 isInteractionSuccess; unsigned int x :1 interactionDurationInSecBucket; unsigned int x :1 isPlusContactSuggesterEnabled; unsigned int x :1 isEntityCandidateRetrievalEnabled; } _has;
}

@property (copy, nonatomic) NSString *intentTypeName;
@property (nonatomic) BOOL hasIntentTypeName;
@property (retain, nonatomic) INFERENCESchemaINFERENCEContactResolverConfig *resolverConfig;
@property (nonatomic) BOOL hasResolverConfig;
@property (retain, nonatomic) INFERENCESchemaINFERENCETrialEnrollment *trialEnrollment;
@property (nonatomic) BOOL hasTrialEnrollment;
@property (copy, nonatomic) NSString *modelVersion;
@property (nonatomic) BOOL hasModelVersion;
@property (copy, nonatomic) NSArray *matches;
@property (nonatomic) int resolutionState;
@property (nonatomic) BOOL hasResolutionState;
@property (nonatomic) int resolutionType;
@property (nonatomic) BOOL hasResolutionType;
@property (retain, nonatomic) INFERENCESchemaINFERENCEPromptContext *forcePrompt;
@property (nonatomic) BOOL hasForcePrompt;
@property (copy, nonatomic) NSArray *anonymizedContactIdentifiers;
@property (nonatomic) BOOL isInteractionExecuted;
@property (nonatomic) BOOL hasIsInteractionExecuted;
@property (nonatomic) BOOL isInteractionSuccess;
@property (nonatomic) BOOL hasIsInteractionSuccess;
@property (nonatomic) unsigned int interactionDurationInSecBucket;
@property (nonatomic) BOOL hasInteractionDurationInSecBucket;
@property (retain, nonatomic) INFERENCESchemaINFERENCEPotentialRetryContactInteractionContext *interactionContext;
@property (nonatomic) BOOL hasInteractionContext;
@property (nonatomic) BOOL isPlusContactSuggesterEnabled;
@property (nonatomic) BOOL hasIsPlusContactSuggesterEnabled;
@property (nonatomic) BOOL isEntityCandidateRetrievalEnabled;
@property (nonatomic) BOOL hasIsEntityCandidateRetrievalEnabled;
@property (readonly, nonatomic) NSData *jsonData;

/* instance methods */
- (id)suppressMessageUnderConditions;
- (id)applySensitiveConditionsPolicy:(id)policy;
- (void)deleteIntentTypeName;
- (void)deleteResolverConfig;
- (void)deleteTrialEnrollment;
- (void)deleteModelVersion;
- (void)clearMatches;
- (void)deleteMatches;
- (void)addMatches:(id)matches;
- (unsigned long long)matchesCount;
- (id)matchesAtIndex:(unsigned long long)index;
- (void)deleteResolutionState;
- (void)deleteResolutionType;
- (void)deleteForcePrompt;
- (void)clearAnonymizedContactIdentifiers;
- (void)deleteAnonymizedContactIdentifiers;
- (void)addAnonymizedContactIdentifiers:(id)identifiers;
- (unsigned long long)anonymizedContactIdentifiersCount;
- (id)anonymizedContactIdentifiersAtIndex:(unsigned long long)index;
- (void)deleteIsInteractionExecuted;
- (void)deleteIsInteractionSuccess;
- (void)deleteInteractionDurationInSecBucket;
- (void)deleteInteractionContext;
- (void)deleteIsPlusContactSuggesterEnabled;
- (void)deleteIsEntityCandidateRetrievalEnabled;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)dictionaryRepresentation;
- (id)initWithJSON:(id)json;
- (id)initWithDictionary:(id)dictionary;
@end

#endif /* INFERENCESchemaINFERENCECRRTrainingSampleCollected_h */
