//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 371.14.0.0.0
//
#ifndef DNDConfiguration_h
#define DNDConfiguration_h
@import Foundation;

#include "DNDBypassSettings.h"
#include "DNDMutableSenderConfiguration.h"
#include "DNDSenderConfiguration.h"
#include "NSCopying-Protocol.h"
#include "NSMutableCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSMutableSet, NSSet;

@interface DNDConfiguration : NSObject<NSCopying, NSMutableCopying, NSSecureCoding>

@property (copy, nonatomic) NSSet *allowedWebApplicationIdentifiers;
@property (copy, nonatomic) NSSet *deniedWebApplicationIdentifiers;
@property (readonly, nonatomic) unsigned long long suppressionType;
@property (readonly, nonatomic) unsigned long long suppressionMode;
@property (readonly, nonatomic) unsigned long long minimumBreakthroughUrgency;
@property (readonly, nonatomic) unsigned long long hideApplicationBadges;
@property (readonly, nonatomic) BOOL supportedConfiguration;
@property (readonly, nonatomic) long long compatibilityVersion;
@property (readonly, nonatomic) long long rawCompatibilityVersion;
@property (readonly, nonatomic) unsigned long long applicationConfigurationType;
@property (readonly, copy, nonatomic) NSSet *applicationsWithExceptions;
@property (readonly, copy, nonatomic) NSSet *webApplicationsWithExceptions;
@property (readonly, @dynamic, nonatomic) unsigned long long threadConfigurationType;
@property (readonly, copy, nonatomic) NSDictionary *threadsWithExceptions;
@property (readonly, nonatomic) unsigned long long senderConfigurationType;
@property (readonly, copy, nonatomic) NSSet *contactsWithExceptions;
@property (readonly, copy, nonatomic) DNDBypassSettings *phoneCallBypassSettings;
@property (readonly, @dynamic, nonatomic) unsigned long long type;
@property (readonly, copy, nonatomic) NSDictionary *allowedApplicationIdentifiers;
@property (readonly, copy, nonatomic) NSSet *deniedApplicationIdentifiers;
@property (readonly, copy, nonatomic) DNDSenderConfiguration *senderConfiguration;

/* class methods */
+ (unsigned long long)defaultConfigurationType;
+ (unsigned long long)defaultSuppressionType;
+ (unsigned long long)defaultMinimumBreakthroughUrgency;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)_initWithConfigurationType:(unsigned long long)type;
- (id)_initWithSuppressionType:(unsigned long long)type suppressionMode:(unsigned long long)mode allowedApplicationIdentifiers:(id)identifiers deniedApplicationIdentifiers:(id)identifiers allowedWebApplicationIdentifiers:(id)identifiers deniedWebApplicationIdentifiers:(id)identifiers senderConfiguration:(id)configuration minimumBreakthroughUrgency:(unsigned long long)urgency hideApplicationBadges:(unsigned long long)badges compatibilityVersion:(long long)version applicationConfigurationType:(unsigned long long)type senderConfigurationType:(unsigned long long)type;
- (id)allowedApplications;
- (id)deniedApplications;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)description;
- (id)redactedDescription;
- (id)_descriptionForRedacted:(BOOL)redacted;
- (void)log:(id)log withPrefix:(id)prefix;
- (void)diffAgainstObject:(id)object usingDiffBuilder:(id)builder withDescription:(id)description;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (unsigned long long)exceptionForApplication:(id)application;
- (unsigned long long)exceptionForApplication:(id)application thread:(id)thread;
- (unsigned long long)exceptionForApplicationIdentifier:(id)identifier;
- (unsigned long long)exceptionForApplicationIdentifier:(id)identifier thread:(id)thread;
- (unsigned long long)_exceptionForApplicationIdentifier:(id)identifier thread:(id)thread;
- (unsigned long long)exceptionForWebApplicationIdentifier:(id)identifier;
- (unsigned long long)exceptionForContact:(id)contact;
- (unsigned long long)exceptionForContactHandle:(id)handle;
- (BOOL)isSupportedConfiguration;
@end

#endif /* DNDConfiguration_h */
