//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 720.1.0.0.0
//
#ifndef TPSURLSessionManager_h
#define TPSURLSessionManager_h
@import Foundation;

#include "NSURLSessionDataDelegate-Protocol.h"
#include "NSURLSessionDelegate-Protocol.h"
#include "TPSURLSessionCustomAuthHandling-Protocol.h"
#include "TPSURLSessionDelegate-Protocol.h"
#include "TPSURLSessionManagerDelegate-Protocol.h"

@class NSMutableDictionary, NSString, NSURLSession, PPCRedirect;
@protocol OS_dispatch_queue;

@interface TPSURLSessionManager : NSObject<NSURLSessionDelegate, NSURLSessionDataDelegate> {
  /* instance variables */
  struct TPSURLSessionDelegateResponds { BOOL willCacheResponse; BOOL downloadTaskDidFinishDownloadingToURL; BOOL didReceiveResponse; BOOL didCompleteWithError; BOOL taskDidReceiveChallenge; } _defaultSessionDelegateResponds;
  NSObject<OS_dispatch_queue> *_sessionTaskQueue;
  NSObject<OS_dispatch_queue> *_sessionMapQueue;
}

@property (nonatomic) BOOL respondsToDidReceiveChallenge;
@property (nonatomic) BOOL coalesceRequests;
@property (retain, nonatomic) NSMutableDictionary *coalesceTaskURLMap;
@property (retain, nonatomic) NSMutableDictionary *uncoalesceTaskMap;
@property (retain, nonatomic) NSMutableDictionary *URLSessionMap;
@property (retain, nonatomic) NSURLSession *defaultURLSession;
@property (retain, nonatomic) PPCRedirect *urlRedirector;
@property (weak, nonatomic) NSObject<TPSURLSessionManagerDelegate> *delegate;
@property (weak, nonatomic) NSObject<TPSURLSessionDelegate> *defaultSessionDelegate;
@property (retain, nonatomic) NSObject<TPSURLSessionCustomAuthHandling> *authenticationHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)defaultManager;
+ (unsigned long long)defaultURLCacheMemoryCapcity;
+ (unsigned long long)defaultURLCacheDiskCapcity;

/* instance methods */
- (void)dealloc;
- (id)init;
- (BOOL)allowsNetworkAttribution;
- (id)URLSessionForAttributionIdentifier:(id)identifier;
- (id)_mappedURLRequest:(id)urlrequest;
- (id)newURLSessionItemWithRequest:(id)request identifier:(id)identifier attributionIdentifier:(id)identifier requestType:(id)type completionHandler:(id /* block */)handler;
- (id)newURLSessionItemWithRequest:(id)request identifier:(id)identifier attributionIdentifier:(id)identifier requestType:(id)type networkDelegate:(id)delegate completionHandler:(id /* block */)handler;
- (void)resumeSessionItem:(id)item;
- (void)cancelSessionItem:(id)item;
- (void)sessionTask:(id)task didCompleteWithError:(id)error;
- (void)removeTaskFromMap:(id)map;
- (id)sessionTaskForTask:(id)task;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)URLSession:(id)urlsession dataTask:(id)task didBecomeDownloadTask:(id)task;
- (void)URLSession:(id)urlsession dataTask:(id)task willCacheResponse:(id)response completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession downloadTask:(id)task didWriteData:(long long)data totalBytesWritten:(long long)written totalBytesExpectedToWrite:(long long)write;
- (void)URLSession:(id)urlsession downloadTask:(id)task didFinishDownloadingToURL:(id)url;
- (void)URLSession:(id)urlsession task:(id)task didFinishCollectingMetrics:(id)metrics;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithError:(id)error;
- (void)URLSession:(id)urlsession task:(id)task didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
@end

#endif /* TPSURLSessionManager_h */
