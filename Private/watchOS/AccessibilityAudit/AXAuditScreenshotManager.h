//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 149.1.0.0.0
//
#ifndef AXAuditScreenshotManager_h
#define AXAuditScreenshotManager_h
@import Foundation;

@class NSMutableDictionary, NSString;

@interface AXAuditScreenshotManager : NSObject

@property (retain, nonatomic) NSMutableDictionary *_image;
@property (retain, nonatomic) NSMutableDictionary *_rotation;
@property (retain, nonatomic) NSMutableDictionary *_displayBounds;
@property (retain, nonatomic) NSMutableDictionary *_borderFrame;
@property (retain, nonatomic) NSMutableDictionary *_scaleFactor;
@property (retain, nonatomic) NSMutableDictionary *_shouldFlipOutline;
@property (retain, nonatomic) NSString *lastTimestamp;

/* class methods */
+ (id)sharedManager;
+ (id)imageProcessingQueue;
+ (id)imageFromRemoteImageData:(id)data rotation:(double)rotation;

/* instance methods */
- (id)init;
- (void)clear;
- (void)addScreenshot:(id)screenshot forTimestamp:(id)timestamp;
- (void)setScreenshotRotation:(double)rotation forTimestamp:(id)timestamp;
- (void)setScreenshotDisplayBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds forTimestamp:(id)timestamp;
- (void)setScreenshotBorderFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame forTimestamp:(id)timestamp;
- (void)setScreenshotScaleFactor:(double)factor forTimestamp:(id)timestamp;
- (void)setScreenshotShouldFlipOutline:(BOOL)outline forTimestamp:(id)timestamp;
- (id)screenshotImageForTimestamp:(id)timestamp;
- (double)screenshotRotationForTimestamp:(id)timestamp;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })screenshotDisplayBoundsForTimestamp:(id)timestamp;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })screenshotBorderFrameForTimestamp:(id)timestamp;
- (double)screenshotScaleFactorForTimestamp:(id)timestamp;
- (BOOL)screenshotShouldFlipOutlineForTimestamp:(id)timestamp;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_elementBoundsForIssue:(id)issue containerImageSize:(struct CGSize { double x0; double x1; })size;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect containerImageSize:(struct CGSize { double x0; double x1; })size timestamp:(id)timestamp;
- (void)addScreenshotWithInfo:(id)info timestamp:(id)timestamp completion:(id /* block */)completion;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })elementBoundsInScreenShotForIssue:(id)issue;
- (id)screenshotForIssue:(id)issue elementRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect;
- (id)screenshotHighlightingIssue:(id)issue;
- (id)thumbnailImageOfIssue:(id)issue;
- (id)screenshotImageForTimestamp:(id)timestamp inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
@end

#endif /* AXAuditScreenshotManager_h */
