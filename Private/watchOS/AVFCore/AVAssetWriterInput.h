//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVAssetWriterInput_h
#define AVAssetWriterInput_h
@import Foundation;

#include "AVAssetWriterInputHelper.h"
#include "AVAssetWriterInputInternal.h"
#include "AVKeyPathDependencyHost-Protocol.h"
#include "AVOutputSettings.h"
#include "AVWeakObservable-Protocol.h"
#include "AVWeakReference.h"

@class NSArray, NSDictionary, NSString;

@interface AVAssetWriterInput : NSObject<AVWeakObservable, AVKeyPathDependencyHost> {
  /* instance variables */
  AVAssetWriterInputInternal *_internal;
}

@property (readonly) long long numberOfAppendFailures;
@property (readonly) BOOL markAsFinishedCalled;
@property (retain, nonatomic) AVAssetWriterInputHelper *helper;
@property (copy, nonatomic) NSDictionary *sourcePixelBufferAttributes;
@property (readonly, nonatomic) struct __CVPixelBufferPool * pixelBufferPool;
@property (readonly, nonatomic) AVOutputSettings *outputSettingsObject;
@property (readonly, nonatomic) long long status;
@property (readonly, nonatomic) BOOL attachedToAdaptor;
@property (retain, nonatomic) AVWeakReference *weakReferenceToAssetWriter;
@property (nonatomic) short alternateGroupID;
@property (nonatomic) short provisionalAlternateGroupID;
@property (readonly, nonatomic) NSDictionary *trackReferences;
@property (readonly, nonatomic) NSString *mediaType;
@property (readonly, nonatomic) NSDictionary *outputSettings;
@property (readonly, nonatomic) struct opaqueCMFormatDescription * sourceFormatHint;
@property (copy, nonatomic) NSArray *metadata;
@property (readonly, nonatomic) BOOL readyForMoreMediaData;
@property (nonatomic) BOOL expectsMediaDataInRealTime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)assetWriterInputWithMediaType:(id)type outputSettings:(id)settings;
+ (id)assetWriterInputWithMediaType:(id)type outputSettings:(id)settings sourceFormatHint:(struct opaqueCMFormatDescription *)hint;

/* instance methods */
- (id)init;
- (id)initWithMediaType:(id)type outputSettings:(id)settings;
- (id)initWithMediaType:(id)type outputSettings:(id)settings sourceFormatHint:(struct opaqueCMFormatDescription *)hint;
- (void)dealloc;
- (id)_helper;
- (id)_weakReferenceToAssetWriter;
- (void)_setWeakReferenceToAssetWriter:(id)writer;
- (void)_tellAssetWriterToTransitionToFailedStatusWithError:(id)error;
- (long long)_status;
- (void)_setHelper:(id)helper;
- (id)_outputSettingsObject;
- (int)outputTrackID;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (void)setTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (int)mediaTimeScale;
- (void)setMediaTimeScale:(int)scale;
- (struct CGSize { double x0; double x1; })naturalSize;
- (void)setNaturalSize:(struct CGSize { double x0; double x1; })size;
- (id)languageCode;
- (void)setLanguageCode:(id)code;
- (id)extendedLanguageTag;
- (void)setExtendedLanguageTag:(id)tag;
- (BOOL)marksOutputTrackAsEnabled;
- (void)setMarksOutputTrackAsEnabled:(BOOL)enabled;
- (float)preferredVolume;
- (void)setPreferredVolume:(float)volume;
- (long long)layer;
- (void)setLayer:(long long)layer;
- (short)_alternateGroupID;
- (void)_setAlternateGroupID:(short)id;
- (short)_provisionalAlternateGroupID;
- (void)_setProvisionalAlternateGroupID:(short)id;
- (id)_trackReferences;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })preferredMediaChunkDuration;
- (void)setPreferredMediaChunkDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (long long)preferredMediaChunkAlignment;
- (void)setPreferredMediaChunkAlignment:(long long)alignment;
- (long long)preferredMediaChunkSize;
- (void)setPreferredMediaChunkSize:(long long)size;
- (BOOL)writesMediaDataToBeginningOfFile;
- (void)setWritesMediaDataToBeginningOfFile:(BOOL)file;
- (id)mediaDataLocation;
- (void)setMediaDataLocation:(id)location;
- (id)sampleReferenceBaseURL;
- (void)setSampleReferenceBaseURL:(id)url;
- (struct __CVPixelBufferPool *)_pixelBufferPool;
- (id)_sourcePixelBufferAttributes;
- (void)_setSourcePixelBufferAttributes:(id)attributes;
- (id)_attachedAdaptor;
- (BOOL)_isAttachedToAdaptor;
- (void)_setAttachedAdaptor:(id)adaptor;
- (BOOL)_prepareForWritingWithFigAssetWriter:(struct OpaqueFigAssetWriter *)writer mediaFileType:(id)type error:(id *)error;
- (void)_didStartInitialSession;
- (void)_prepareToEndSession;
- (BOOL)_prepareToFinishWritingReturningError:(id *)error;
- (void)_transitionToTerminalStatus:(long long)status;
- (void)declareKeyPathDependenciesWithRegistry:(id)registry;
- (BOOL)isReadyForMoreMediaData;
- (BOOL)maximizePowerEfficiency;
- (void)setMaximizePowerEfficiency:(BOOL)efficiency;
- (BOOL)performsMultiPassEncodingIfSupported;
- (void)setPerformsMultiPassEncodingIfSupported:(BOOL)supported;
- (void)addCallbackToCancelDuringDeallocation:(id)deallocation;
- (BOOL)canPerformMultiplePasses;
- (id)currentPassDescription;
- (void)respondToEachPassDescriptionOnQueue:(id)queue usingBlock:(id /* block */)block;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)requestMediaDataWhenReadyOnQueue:(id)queue usingBlock:(id /* block */)block;
- (void)stopRequestingMediaData;
- (long long)_appendSampleBuffer:(struct opaqueCMSampleBuffer *)buffer error:(id *)error;
- (BOOL)appendSampleBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (BOOL)_appendPixelBuffer:(struct __CVBuffer *)buffer withPresentationTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (BOOL)_appendTaggedPixelBufferGroup:(struct OpaqueCMTaggedBufferGroup *)group withPresentationTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)markAsFinished;
- (BOOL)_markAsFinishedCalled;
- (void)markCurrentPassAsFinished;
- (BOOL)canAddTrackAssociationWithTrackOfInput:(id)input type:(id)type;
- (void)addTrackAssociationWithTrackOfInput:(id)input type:(id)type;
- (id)availableTrackAssociationTypes;
- (id)associatedInputsWithTrackAssociationType:(id)type;
@end

#endif /* AVAssetWriterInput_h */
