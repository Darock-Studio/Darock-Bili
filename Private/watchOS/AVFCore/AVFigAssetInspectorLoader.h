//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVFigAssetInspectorLoader_h
#define AVFigAssetInspectorLoader_h
@import Foundation;

#include "AVAssetInspectorLoader.h"
#include "AVAssetInspector.h"
#include "AVDispatchOnce.h"
#include "AVWeakReference.h"

@class NSMutableArray, NSURL;
@protocol OS_dispatch_queue;

@interface AVFigAssetInspectorLoader : AVAssetInspectorLoader {
  /* instance variables */
  struct OpaqueFigAsset * _figAsset;
  int _figAssetCreationStatus;
  AVWeakReference *_weakReferenceToAsset;
  AVAssetInspector *_assetInspector;
  AVDispatchOnce *_assetInspectorOnce;
  NSObject<OS_dispatch_queue> *_completionHandlerQueue;
  struct OpaqueFigSimpleMutex * _loadingMutex;
  NSMutableArray *_loadingBatches;
  BOOL _loadingCanceled;
  BOOL _registeredForFigAssetNotifications;
  BOOL _prefersNominalDurations;
  long long _fragmentMinderAssociationCount;
  NSURL *_URL;
}

/* class methods */
+ (id)_figAssetPropertiesForKeys;
+ (id)_figAssetTrackPropertiesForKeys;
+ (void)_mapAssetKeys:(id)keys toFigAssetPropertySet:(id)set figAssetTrackPropertySet:(id)set callerName:(id)name;
+ (id)_figAssetMediaSelectionPropertiesArray;
+ (id)_figAssetTrackMediaSelectionPropertiesArray;

/* instance methods */
- (id)initWithURL:(id)url figAssetCreationFlags:(unsigned long long)flags figAssetCreationOptions:(id)options avAssetInitializationOptions:(id)options forAsset:(id)asset figErr:(int *)err;
- (id)initWithFigAsset:(struct OpaqueFigAsset *)asset forAsset:(id)asset;
- (void)_addFigAssetNotifications;
- (void)_removeFigAssetNotifications;
- (void)dealloc;
- (struct OpaqueFigFormatReader *)_copyFormatReader;
- (id)asset;
- (id)assetInspector;
- (struct OpaqueFigAsset *)_figAsset;
- (Class)_classForTrackInspectors;
- (id)_completionHandlerQueue;
- (struct OpaqueFigSimpleMutex *)_loadingMutex;
- (id)_loadingBatches;
- (long long)_loadStatusForProperty:(id)property figAsset:(struct OpaqueFigAsset *)asset error:(id *)error;
- (long long)statusOfValueForKey:(id)key error:(id *)error;
- (long long)_statusOfValueForKey:(id)key error:(id *)error firstNonLoadedDependencyKey:(id *)key;
- (void)loadValuesAsynchronouslyForKeys:(id)keys completionHandler:(id /* block */)handler;
- (void)loadValuesAsynchronouslyForKeys:(id)keys keysForCollectionKeys:(id)keys completionHandler:(id /* block */)handler;
- (void)cancelLoading;
- (void)_ensureAllDependenciesOfKeyAreLoaded:(id)loaded;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (id)variants;
- (id)lyrics;
- (BOOL)isPlayable;
- (BOOL)isExportable;
- (BOOL)isReadable;
- (BOOL)isComposable;
- (BOOL)isCompatibleWithSavedPhotosAlbum;
- (id)figChapterGroupInfo;
- (id)figChapters;
- (id)URL;
- (id)resolvedURL;
- (id)originalNetworkContentURL;
- (unsigned long long)downloadToken;
- (id)contentKeySpecifiersEligibleForPreloading;
- (BOOL)hasProtectedContent;
- (BOOL)_isStreaming;
- (BOOL)_prefersNominalDurations;
- (long long)firstFragmentSequenceNumber;
- (long long)fragmentCount;
- (void)_invokeCompletionHandlerForLoadingBatches:(id)batches;
- (double)_fragmentMindingInterval;
- (void)_setFragmentMindingInterval:(double)interval;
- (BOOL)isAssociatedWithFragmentMinder;
- (void)_setIsAssociatedWithFragmentMinder:(BOOL)minder;
@end

#endif /* AVFigAssetInspectorLoader_h */
