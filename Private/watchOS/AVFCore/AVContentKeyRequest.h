//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVContentKeyRequest_h
#define AVContentKeyRequest_h
@import Foundation;

#include "AVContentKey.h"
#include "AVContentKeyRequestInternal.h"
#include "AVContentKeySpecifier.h"

@class BOOL *, NSData, NSDictionary, NSError;

@interface AVContentKeyRequest : NSObject {
  /* instance variables */
  AVContentKeyRequestInternal *_contentKeyRequest;
}

@property (readonly) long long status;
@property (readonly) NSError *error;
@property (readonly) id identifier;
@property (readonly, nonatomic) NSData *initializationData;
@property (readonly, copy) NSDictionary *options;
@property (readonly) BOOL canProvidePersistableContentKey;
@property (readonly) AVContentKeySpecifier *contentKeySpecifier;
@property (readonly) AVContentKey *contentKey;

/* class methods */
+ (BOOL)_prepareCryptor:(struct OpaqueFigCPECryptor *)cryptor forRenewal:(BOOL)renewal andReturnKeyRequestID:(unsigned long long *)id isInchargeOfKeyRequest:(BOOL *)request error:(id *)error;
+ (id)_mergePreloadingRequestOptions:(id)options withCreateKeyRequestOptions:(id)options;
+ (void)_validateProtocolVersionList:(id)list;
+ (void)_validateHLSEncryptionMethod:(id)method;
+ (void)_validateServerChallenge:(id)challenge;
+ (id)_ensureProtocolVersionList:(id)list;
+ (id)_createKeyRequestDictionaryForApp:(id)app persistentKey:(id)key serverChallenge:(id)challenge cryptorKeyRequestID:(unsigned long long)id purpose:(int)purpose;

/* instance methods */
- (BOOL)setReportGroup:(id)group;
- (BOOL)willOutputBeObscuredDueToInsufficientExternalProtectionForDisplays:(id)displays;
- (long long)externalContentProtectionStatus;
- (id)initWithContentKeySession:(id)session reportGroup:(id)group identifier:(id)identifier contentIdentifier:(id)identifier keyIDFromInitializationData:(id)data initializationData:(id)data preloadingRequestOptions:(id)options providesPersistableKey:(BOOL)key;
- (void)_copyAndStoreCryptorUUID;
- (id)initWithContentKeySession:(id)session reportGroup:(id)group customURLHandler:(struct OpaqueFigCustomURLHandler *)urlhandler identifier:(id)identifier requestInfo:(struct __CFDictionary *)info requestID:(unsigned long long)id providesPersistableKey:(BOOL)key isRenewalRequest:(BOOL)request;
- (id)initWithContentKeySession:(id)session contentKeyBoss:(struct CMBaseObject *)boss useContentKeyBoss:(BOOL)boss keySpecifier:(struct FigContentKeySpecifier *)specifier initializationData:(id)data keyIDFromInitializationData:(id)data contentIdentifier:(id)identifier isRenewalRequest:(BOOL)request requestID:(unsigned long long)id providesPersistableKey:(BOOL)key preloadingRequestOptions:(id)options identifier:(id)identifier;
- (void)dealloc;
- (id)description;
- (id)_keySystem;
- (unsigned long long)_requestID;
- (struct CMBaseObject *)_copyContentKeyBoss;
- (id)identifierString;
- (int)_encryptionMode;
- (void)_setStatus:(long long)status;
- (void)_clearContext;
- (BOOL)_prepareForKeyRenewalReturningError:(id *)error;
- (BOOL)renewsExpiringResponseData;
- (void)_setError:(id)error;
- (struct OpaqueFigCPECryptor *)figCryptor;
- (id)session;
- (id)keyIDFromInitializationData;
- (id)contentIdentifier;
- (id)_getRetryReasonForError:(int)error;
- (void)_handleKeyResponseError:(id)error;
- (void)_handleKeyResponseSuccessWithCryptor:(struct OpaqueFigCPECryptor *)cryptor;
- (BOOL)ensureCryptorWithFormatDescription:(struct opaqueCMFormatDescription *)description error:(id *)error;
- (id)contentKeyRequestDataForApp:(id)app contentIdentifier:(id)identifier options:(id)options error:(id *)error;
- (id)_makeStreamingContentKeyRequestDataForApp:(id)app contentIdentifier:(id)identifier options:(id)options error:(id *)error;
- (void)makeStreamingContentKeyRequestDataForApp:(id)app contentIdentifier:(id)identifier options:(id)options completionHandler:(id /* block */)handler;
- (void)processContentKeyResponseData:(id)data;
- (BOOL)processContentKeyResponseData:(id)data renewalDate:(id)date error:(id *)error;
- (BOOL)_processContentKeyResponse:(id)response renewalDate:(id)date initalizationVector:(id)vector error:(id *)error;
- (void)processContentKeyResponse:(id)response;
- (void)_processContentKeyResponseError:(id)error;
- (void)processContentKeyResponseError:(id)error;
- (void)renewExpiringContentKeyResponseData;
- (BOOL)_canRespondByRequestingPersistableContentKeyRequest;
- (BOOL)respondByRequestingPersistableContentKeyRequestAndReturnError:(id *)error;
- (void)respondByRequestingPersistableContentKeyRequest;
- (void)_sendResponseInfoToCustomURLHandlerWithRenewalDate:(id)date;
- (void)_finishLoadingCustomURLRequestWithResponseData:(id)data renewalDate:(id)date;
- (void)_finishLoadingCustomURLRequestWithError:(id)error;
@end

#endif /* AVContentKeyRequest_h */
