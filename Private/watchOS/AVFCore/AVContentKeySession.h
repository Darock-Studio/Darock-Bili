//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVContentKeySession_h
#define AVContentKeySession_h
@import Foundation;

#include "AVContentKeyReportGroup.h"
#include "AVContentKeySessionInternal.h"
#include "AVIntegrityChecking-Protocol.h"

@class NSData, NSString, NSURL;
@protocol AVContentKeySessionDelegate, OS_dispatch_queue;

@interface AVContentKeySession : NSObject<AVIntegrityChecking> {
  /* instance variables */
  AVContentKeySessionInternal *_session;
}

@property (readonly, nonatomic) BOOL internal;
@property (readonly) AVContentKeyReportGroup *defaultContentKeyGroup;
@property (readonly, nonatomic) BOOL defunct;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak) NSObject<AVContentKeySessionDelegate> *delegate;
@property (readonly) NSObject<OS_dispatch_queue> *delegateQueue;
@property (readonly) NSURL *storageURL;
@property (readonly) NSString *keySystem;
@property (readonly) NSData *contentProtectionSessionIdentifier;

/* class methods */
+ (id)_uniqueIDForCyptorUUID:(id)uuid cryptorKeyRequestID:(unsigned long long)id;
+ (id)pendingExpiredSessionReportsWithAppIdentifier:(id)identifier storageDirectoryAtURL:(id)url;
+ (void)removePendingExpiredSessionReports:(id)reports withAppIdentifier:(id)identifier storageDirectoryAtURL:(id)url;
+ (struct OpaqueFigSecureStopManager *)copyDefaultSecureStopManagerForAppIdentifier:(id)identifier storageDirectoryAtURL:(id)url;
+ (void)initialize;
+ (id)contentKeySessionWithLegacyWebKitCompatibilityModeAndKeySystem:(id)system storageDirectoryAtURL:(id)url;
+ (id)contentKeySessionWithKeySystem:(id)system;
+ (id)contentKeySessionWithKeySystem:(id)system storageDirectoryAtURL:(id)url;

/* instance methods */
- (BOOL)isDefunct;
- (unsigned long long)_processContentKeyRequestWithIdentifier:(id)identifier encryptionMode:(int)mode supportedProtocolVersions:(id)versions groupID:(unsigned long long)id error:(id *)error;
- (unsigned long long)_renewKeyWithIdentifier:(id)identifier encryptionMode:(int)mode initializationData:(id)data contentIdentifier:(id)identifier keyIDFromInitializationData:(id)data options:(id)options error:(id *)error;
- (BOOL)_makeContentKeyGroupWithIDOut:(unsigned long long *)idout error:(id *)error;
- (id)makeContentKeyGroup;
- (id)initWithKeySystem:(id)system storageDirectoryAtURL:(id)url internal:(BOOL)internal;
- (BOOL)hasProtector;
- (id)issueContentKeyRequestForInitializationData:(id)data;
- (id)_weakReference;
- (id)_contentKeyGroups;
- (void)_sendFinishLoadingForPreloadedKeyRequest:(struct __CFDictionary *)request withRequestID:(unsigned long long)id fromHandler:(struct OpaqueFigCustomURLHandler *)handler error:(id)error;
- (struct OpaqueFigCPECryptor *)copyCryptorForInitializationData:(id)data;
- (BOOL)copyCryptorForFormatDescription:(struct opaqueCMFormatDescription *)description cryptorOut:(const struct OpaqueFigCPECryptor * *)out errorOut:(id *)out;
- (struct OpaqueFigCPECryptor *)createCryptorIfNecessaryForInitializationData:(id)data formatDescription:(struct opaqueCMFormatDescription *)description error:(id *)error;
- (struct OpaqueFigCPECryptor *)copyCryptorForCryptKeyAttributes:(id)attributes;
- (void)_handleRequest:(struct __CFDictionary *)request withRequestID:(unsigned long long)id fromHandler:(struct OpaqueFigCustomURLHandler *)handler willHandleRequest:(BOOL *)request;
- (int)createAndInstallCustomURLHandlerForAsset:(id)asset outHandler:(struct OpaqueFigCustomURLHandler * *)handler;
- (int)setAppIdentifier:(id)identifier;
- (BOOL)clientCanReceivePersistableContentKeyRequest;
- (void)issueContentKeyRequests:(id)requests forInitializationData:(id)data;
- (void)issueContentKeyRequest:(id)request toDelegateWithCallbackSelector:(SEL)selector;
- (void)issueContentKeyRequest:(id)request;
- (void)issuePersistableContentKeyRequest:(id)request;
- (void)issueRenewableContentKeyRequest:(id)request;
- (void)issueContentKeyRequestWithCustomURLHandler:(struct OpaqueFigCustomURLHandler *)urlhandler identifier:(id)identifier requestInfo:(struct __CFDictionary *)info requestID:(unsigned long long)id providesPersistableKey:(BOOL)key;
- (void)issueContentKeyRequestWithPreloadingRequestOptions:(id)options identifier:(id)identifier initializationData:(id)data providesPersistableKey:(BOOL)key;
- (void)contentKeyRequestDidProduceContentKey:(id)key;
- (void)issuePersistableContentKeyRequestForKeySpecifier:(struct FigContentKeySpecifier *)specifier initializationData:(id)data keyIDFromInitializationData:(id)data contentIdentifier:(id)identifier requestID:(unsigned long long)id preloadingRequestOptions:(id)options identifier:(id)identifier;
- (id)keyRequestByID:(unsigned long long)id;
- (void)trackRequest:(id)request byRequestID:(unsigned long long)id;
- (id)_internalQueue;
- (void)_setContentKeyRequest:(id)request forCryptorUUID:(id)uuid cryptorKeyRequestID:(unsigned long long)id;
- (id)_contentKeyRequestForCryptorUUID:(id)uuid cryptorKeyRequestID:(unsigned long long)id;
- (void)_removeContentKeyRequestForCryptorUUID:(id)uuid cryptorKeyRequestID:(unsigned long long)id;
- (void)_setWeakReferenceForContentKeyRequest:(id)request withCryptorUUID:(id)uuid;
- (void)_invokeDelegateCallbackWithBlock:(id /* block */)block synchronouslyWhenDelegateQueueIsNULL:(BOOL)null;
- (void)_handleKeyResponseError:(id)error forCryptorUUID:(id)uuid andCryptorKeyRequestID:(unsigned long long)id;
- (void)_handleKeyResponseSuccessfullyProcessedForCryptorUUID:(id)uuid andCryptorKeyRequestID:(unsigned long long)id;
- (void)_handleUpdateToPersistentKey:(id)key forKeyIdentifier:(id)identifier;
- (void)_handleContentProtectionSessionIdentifierDidChange:(id)change;
- (void)_handleSecureStopDidFinalizeRecordCallback;
- (void)_handleExternalProtectionStateChangedCallbackForCryptKeyIdentifier:(id)identifier;
- (id)init;
- (id)initWithStorageDirectoryAtURL:(id)url;
- (void)didProvideKeyRequestWithBoss:(struct CMBaseObject *)boss keySpecifier:(struct FigContentKeySpecifier *)specifier requestID:(unsigned long long)id renewalRequest:(BOOL)request;
- (void)removeResourcesForID:(unsigned long long)id;
- (void)contentKeyRequestDidSucceedWithBoss:(struct CMBaseObject *)boss keySpecifier:(struct FigContentKeySpecifier *)specifier requestID:(unsigned long long)id cryptor:(struct OpaqueFigCPECryptor *)cryptor;
- (void)externalProtectionStateChangedCallbackWithBoss:(struct CMBaseObject *)boss keySpecifier:(struct FigContentKeySpecifier *)specifier;
- (unsigned long long)defaultGroupID;
- (id)initWithKeySystem:(id)system storageDirectoryAtURL:(id)url legacyWebKitCompatibilityMode:(BOOL)mode;
- (void)_willDeallocOrFinalize;
- (void)dealloc;
- (void)setDelegate:(id)delegate queue:(id)queue;
- (BOOL)isInternal;
- (void)addContentKeyRecipient:(id)recipient;
- (void)removeContentKeyRecipient:(id)recipient;
- (id)contentKeyRecipients;
- (void)expire;
- (void)processContentKeyRequestForSinf:(id)sinf initializationData:(id)data groupID:(unsigned long long)id options:(id)options;
- (void)processContentKeyRequestForPSSHEntries:(id)psshentries initializationData:(id)data groupID:(unsigned long long)id options:(id)options;
- (void)processContentKeyRequestForTransportStreamWithCodecType:(id)type initializationData:(id)data groupID:(unsigned long long)id options:(id)options;
- (void)_processContentKeyRequestWithIdentifier:(id)identifier initializationData:(id)data options:(id)options groupID:(unsigned long long)id;
- (void)processContentKeyRequestWithIdentifier:(id)identifier initializationData:(id)data options:(id)options;
- (void)renewExpiringResponseDataForContentKeyRequest:(id)request;
- (void)makeSecureTokenForExpirationDateOfPersistableContentKey:(id)key completionHandler:(id /* block */)handler;
- (void)invalidatePersistableContentKey:(id)key options:(id)options completionHandler:(id /* block */)handler;
- (void)invalidateAllPersistableContentKeysForApp:(id)app options:(id)options completionHandler:(id /* block */)handler;
@end

#endif /* AVContentKeySession_h */
