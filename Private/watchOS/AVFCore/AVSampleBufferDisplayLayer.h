//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVSampleBufferDisplayLayer_h
#define AVSampleBufferDisplayLayer_h
@import Foundation;

#include "CALayer.h"
#include "AVContentKeyRecipient-Protocol.h"
#include "AVContentKeyRecipientInternal-Protocol.h"
#include "AVIntegrityChecking-Protocol.h"
#include "AVMediaDataRequesterConsumer-Protocol.h"
#include "AVQueuedSampleBufferRendering-Protocol.h"
#include "AVQueuedSampleBufferRenderingInternal-Protocol.h"
#include "AVSampleBufferVideoOutput.h"
#include "AVSampleBufferVideoRenderer.h"

@class CALayer, NSError, NSString;
@protocol OS_dispatch_queue;

@interface AVSampleBufferDisplayLayer : CALayer<AVContentKeyRecipient, AVContentKeyRecipientInternal, AVQueuedSampleBufferRendering, AVIntegrityChecking, AVMediaDataRequesterConsumer, AVQueuedSampleBufferRenderingInternal> {
  /* instance variables */
  CALayer *_contentLayer;
  struct CGSize { double width; double height; } _presentationSize;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _bounds;
  NSObject<OS_dispatch_queue> *_serialQueue;
  AVSampleBufferVideoOutput *_videoOutput;
}

@property (readonly, nonatomic) BOOL mayRequireContentKeysForMediaDataProcessing;
@property (readonly, nonatomic) BOOL mayRequireContentKeysForMediaDataProcessing;
@property (readonly, retain) struct OpaqueCMTimebase * timebase;
@property (readonly, nonatomic) long long status;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) BOOL requiresFlushToResumeDecoding;
@property (readonly) BOOL readyForMoreMediaData;
@property (readonly, nonatomic) BOOL hasSufficientMediaDataForReliablePlaybackStart;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL outputObscuredDueToInsufficientExternalProtection;
@property (nonatomic) BOOL preventsCapture;
@property (nonatomic) BOOL preventsDisplaySleepDuringVideoPlayback;
@property (nonatomic) BOOL preventsAutomaticBackgroundingDuringVideoPlayback;
@property BOOL disallowsVideoLayerDisplayCompositing;
@property (nonatomic) AVSampleBufferVideoOutput *output;
@property (readonly, nonatomic) AVSampleBufferVideoRenderer *sampleBufferRenderer;
@property (readonly, nonatomic) BOOL defunct;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) AVSampleBufferVideoRenderer *sampleBufferVideoRenderer;
@property (retain) struct OpaqueCMTimebase * controlTimebase;
@property (copy) NSString *videoGravity;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_destRectForAspectRatio:(struct CGSize { double x0; double x1; })ratio;
+ (id)keyPathsForValuesAffectingStatus;
+ (id)keyPathsForValuesAffectingError;
+ (id)keyPathsForValuesAffectingOutputObscuredDueToInsufficientExternalProtection;

/* instance methods */
- (BOOL)isDefunct;
- (struct __CVBuffer *)copyDisplayedPixelBuffer;
- (void)expectMinimumUpcomingSampleBufferPresentationTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)expectMonotonicallyIncreasingUpcomingSampleBufferPresentationTimes;
- (void)resetUpcomingSampleBufferPresentationTimeExpectations;
- (void)_setDisallowsVideoLayerDisplayCompositing:(BOOL)compositing;
- (BOOL)_disallowsVideoLayerDisplayCompositing;
- (void)enqueueSampleBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (void)flush;
- (void)flushAndRemoveImage;
- (void)flushWithRemovalOfDisplayedImage:(BOOL)image completionHandler:(id /* block */)handler;
- (void)prerollDecodeWithCompletionHandler:(id /* block */)handler;
- (void)requestMediaDataWhenReadyOnQueue:(id)queue usingBlock:(id /* block */)block;
- (void)stopRequestingMediaData;
- (int)_attachToContentKeySession:(id)session contentKeyBoss:(struct CMBaseObject *)boss failedSinceAlreadyAttachedToAnotherSession:(BOOL *)session;
- (BOOL)_attachedToExternalContentKeySession;
- (id)contentKeySession;
- (void)expire;
- (void)_updateLayerTreeGeometryWithVideoGravity:(id)gravity presentationSize:(struct CGSize { double x0; double x1; })size videoGravityShouldTriggerAnimation:(BOOL)animation;
- (void)_updatePresentationSize:(struct CGSize { double x0; double x1; })size;
- (id)init;
- (void)dealloc;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)layoutSublayers;
- (void)layerDidBecomeVisible:(BOOL)visible;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })videoRect;
- (void)postVideoRectDidChangeNotification;
- (BOOL)setRenderSynchronizer:(id)synchronizer error:(id *)error;
- (void)copyFigSampleBufferAudioRenderer:(struct OpaqueFigSampleBufferAudioRenderer * *)renderer;
- (void)setToneMapToStandardDynamicRange:(BOOL)range;
- (id)makeVideoRenderer;
- (BOOL)isReadyForMoreMediaData;
- (id)_contentLayer;
- (id)_sampleBufferVideoRenderer;
@end

#endif /* AVSampleBufferDisplayLayer_h */
