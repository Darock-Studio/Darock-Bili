//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVVideoCompositionLayerInstruction_h
#define AVVideoCompositionLayerInstruction_h
@import Foundation;

#include "AVVideoCompositionLayerInstructionInternal.h"
#include "NSCopying-Protocol.h"
#include "NSMutableCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@interface AVVideoCompositionLayerInstruction : NSObject<NSSecureCoding, NSCopying, NSMutableCopying> {
  /* instance variables */
  AVVideoCompositionLayerInstructionInternal *_layerInstruction;
}

@property (readonly, nonatomic) int trackID;

/* class methods */
+ (void)initialize;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (void)dealloc;
- (void)_setTransformRamps:(id)ramps;
- (void)_setOpacityRamps:(id)ramps;
- (void)_setCropRectangleRamps:(id)ramps;
- (void)_setTransformRampFromStartTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform toEndTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range selector:(SEL)selector;
- (void)setTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)setTransformRampFromStartTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform toEndTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
- (BOOL)getTransformRampForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time startTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)transform endTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } *)transform timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } *)range;
- (void)_setOpacityRampFromStartOpacity:(float)opacity toEndOpacity:(float)opacity timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range selector:(SEL)selector;
- (void)setOpacity:(float)opacity atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)setOpacityRampFromStartOpacity:(float)opacity toEndOpacity:(float)opacity timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
- (BOOL)getOpacityRampForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time startOpacity:(float *)opacity endOpacity:(float *)opacity timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } *)range;
- (void)_setCropRectangleRampFromStartCropRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectangle toEndCropRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectangle timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range selector:(SEL)selector;
- (void)setCropRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectangle atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)setCropRectangleRampFromStartCropRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectangle toEndCropRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectangle timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
- (BOOL)getCropRectangleRampForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time startCropRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rectangle endCropRectangle:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rectangle timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } *)range;
- (id)dictionaryRepresentationWithTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
- (void)_setValuesFromDictionary:(id)dictionary timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
@end

#endif /* AVVideoCompositionLayerInstruction_h */
