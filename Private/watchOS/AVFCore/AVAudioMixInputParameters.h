//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVAudioMixInputParameters_h
#define AVAudioMixInputParameters_h
@import Foundation;

#include "AVAudioMixInputParametersInternal.h"
#include "NSCopying-Protocol.h"
#include "NSMutableCopying-Protocol.h"

@class NSString;

@interface AVAudioMixInputParameters : NSObject<NSCopying, NSMutableCopying> {
  /* instance variables */
  AVAudioMixInputParametersInternal *_inputParameters;
}

@property (readonly, nonatomic) int trackID;
@property (readonly, copy, nonatomic) NSString *audioTimePitchAlgorithm;
@property (readonly, retain, nonatomic) struct opaqueMTAudioProcessingTap * audioTapProcessor;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)effectParameters;
- (void)setEffectParameters:(id)parameters;
- (void)_setVolumeRampFromStartVolume:(float)volume toEndVolume:(float)volume timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range rampMode:(long long)mode;
- (void)_setVolume:(float)volume atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)setVolumeRampFromStartVolume:(float)volume toEndVolume:(float)volume timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
- (void)setVolumeRampFromStartVolume:(float)volume toEndVolume:(float)volume timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range rampMode:(long long)mode;
- (void)setVolume:(float)volume atTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (BOOL)getVolumeRampForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time startVolume:(float *)volume endVolume:(float *)volume timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } *)range;
- (BOOL)getVolumeRampForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time startVolume:(float *)volume endVolume:(float *)volume timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; } *)range rampMode:(long long *)mode;
- (void)_setScheduledAudioParameters:(id)parameters;
- (id)_scheduledAudioParameters;
- (id)_audioVolumeCurve;
- (id)_figAudioCurves;
- (id)_volumeCurveAsString;
@end

#endif /* AVAudioMixInputParameters_h */
