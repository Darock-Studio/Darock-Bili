//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVPlayerInternal_h
#define AVPlayerInternal_h
@import Foundation;

#include "AVApplicationStateMonitor.h"
#include "AVBlockScheduler-Protocol.h"
#include "AVLoggingIdentifier-Protocol.h"
#include "AVOutputContext.h"
#include "AVPixelBufferAttributeMediator.h"
#include "AVPlayerItem.h"
#include "AVPlayerMediaSelectionCriteria.h"
#include "AVPlayerPlaybackCoordinator.h"
#include "AVPlayerRateState.h"
#include "AVPlayerTaggedBufferOutput.h"
#include "AVPlayerVideoOutput.h"
#include "AVQueuePlayer.h"
#include "AVWeakReference.h"

@class AVAudioSession, NSArray, NSDictionary, NSError, NSHashTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString;
@protocol OS_dispatch_queue;

@interface AVPlayerInternal : NSObject {
  /* instance variables */
  BOOL fullyInitializedAndNotDeallocating;
  AVWeakReference *weakReference;
  AVPixelBufferAttributeMediator *pixelBufferAttributeMediator;
  NSObject<OS_dispatch_queue> *stateDispatchQueue;
  NSObject<OS_dispatch_queue> *figConfigurationQueue;
  NSObject<OS_dispatch_queue> *layerInteractionQueue;
  NSObject<OS_dispatch_queue> *ivarAccessQueue;
  NSObject<OS_dispatch_queue> *currentItemPropertyUpdateQueue;
  NSObject<OS_dispatch_queue> *layersQ;
  struct OpaqueCMTimebase * proxyTimebase;
  BOOL logPerformanceData;
  id didFinishSuspensionNotificationToken;
  id didEnterBackgroundNotificationToken;
  id willEnterForegroundNotificationToken;
  void * IAPDCallbackToken;
  struct OpaqueFigSimpleMutex * prerollIDMutex;
  NSObject<OS_dispatch_queue> *configurationQueue;
  id layerForegroundingChangeToken;
  NSObject<AVBlockScheduler> *KVOChangeSerializer;
  long long status;
  NSError *error;
  AVPlayerItem *currentItem;
  AVPlayerItem *lastItem;
  NSMutableSet *items;
  NSArray *queueModifications;
  NSMutableDictionary *pendingFigPlayerProperties;
  AVAudioSession *audioSession;
  NSDictionary *vibrationPattern;
  AVOutputContext *outputContext;
  BOOL IOwnTheFigPlayer;
  AVQueuePlayer *interstitialPlayer;
  struct OpaqueFigPlayerInterstitialCoordinator * interstitialEventCoordinator;
  NSString *playerName;
  long long audiovisualBackgroundPlaybackPolicy;
  NSMutableArray *handlersToCallWhenReadyToPlay;
  BOOL shouldReduceResourceUsage;
  long long resourceConservationLevelWhilePaused;
  NSString *playerRole;
  NSString *externalPlaybackVideoGravity;
  long long actionAtItemEnd;
  float volume;
  float userVolume;
  float minRateForAudioPlayback;
  float maxRateForAudioPlayback;
  BOOL autoSwitchStreamVariants;
  BOOL preparesItemsForPlaybackAsynchronously;
  BOOL allowsOutOfBandTextTrackRendering;
  BOOL muted;
  BOOL closedCaptionDisplayEnabled;
  BOOL appliesMediaSelectionCriteriaAutomatically;
  BOOL limitsBandwidthForCellularAccess;
  BOOL usesAudioOnlyModeForExternalPlayback;
  BOOL allowsPixelBufferPoolSharing;
  BOOL disallowsAMRAudio;
  BOOL disallowsHardwareAcceleratedVideoDecoder;
  BOOL layerDestinationIsTVOut;
  BOOL preventsDisplaySleepDuringVideoPlayback;
  BOOL preventsAutomaticBackgroundingDuringVideoPlayback;
  BOOL disallowsVideoLayerDisplayCompositing;
  BOOL allowsExternalPlayback;
  BOOL usesExternalPlaybackWhileExternalScreenIsActive;
  BOOL supportsAdvanceTimeForOverlappedPlayback;
  NSString *captionPipelineStrategy;
  NSString *audioOutputDeviceUniqueID;
  NSString *clientName;
  NSString *STSLabel;
  NSString *multichannelAudioStrategy;
  long long clientPriority;
  BOOL PIPModePossible;
  BOOL isDisplayingClosedCaptions;
  BOOL externalPlaybackActive;
  BOOL airPlayVideoActive;
  BOOL bufferedAirPlayActive;
  BOOL isConnectedToPhysicalSecondScreen;
  BOOL outputObscuredDueToInsufficientExternalProtection;
  long long externalProtectionStatus;
  NSString *ancillaryPerformanceInformationForDisplay;
  AVPlayerRateState *rateState;
  int rateChangeIdentifier;
  float defaultRate;
  struct CGSize { double width; double height; } currentItemPresentationSize;
  BOOL currentItemNonForcedSubtitlesEnabled;
  unsigned long long preferredVideoDecoderGPURegistryID;
  BOOL disallowsAutoPauseOnRouteRemovalIfNoAudio;
  BOOL ensuresActiveAudioSessionWhenStartingPlayback;
  AVApplicationStateMonitor *applicationStateMonitor;
  BOOL preservesAudioSessionSampleRate;
  BOOL silencesOtherPlaybackDuringPIP;
  BOOL prefersPlayingSilentlyWhenConflictingWithOtherPlayback;
  BOOL suppressesAudioRendering;
  BOOL isInterstitialPlayer;
  BOOL isSilencedDueToConflictWithOtherPlayback;
  NSNumber *mxSessionID;
  NSArray *videoTargets;
  struct __CFDictionary * videoTargetsForInterstitialPlayer;
  BOOL shouldWaitForVideoTarget;
  AVPlayerPlaybackCoordinator *playbackCoordinator;
  BOOL clientRequestedPlaybackCoordinator;
  NSString *backgroundPIPAuthorizationToken;
  BOOL rateDidChangeNotificationIncludesExtendedDiagnosticPayload;
  NSObject<AVLoggingIdentifier> *loggingIdentifier;
  NSDictionary *cachedFigMediaSelectionCriteriaProperty;
  AVPlayerVideoOutput *videoOutput;
  AVPlayerTaggedBufferOutput *taggedBufferOutput;
  NSMutableArray *videoLayers;
  NSMutableArray *subtitleLayers;
  NSMutableArray *closedCaptionLayers;
  NSHashTable *avPlayerLayers;
  NSHashTable *playerCaptionLayers;
  int nextPrerollIDToGenerate;
  int pendingPrerollID;
  id /* block */ prerollCompletionHandler;
  id currentItemSuppressesVideoLayersNotificationToken;
  id currentItemPreferredPixelBufferAttributesNotificationToken;
  struct OpaqueFigPlayer * figPlayer;
  struct OpaqueFigPlaybackItem * figPlaybackItemToIdentifyNextCurrentItem;
  BOOL needsToCreateFigPlayer;
  BOOL allowsLegibleFallbackForAllAudibleMediaSelections;
  AVPlayerMediaSelectionCriteria *cachedFigLegibleFallbackMediaSelectionCriteriaProperty;
  NSArray *itemsInFigPlayQueue;
  NSArray *expectedAssetTypes;
  BOOL reevaluateBackgroundPlayback;
  BOOL hadAssociatedOnscreenPlayerLayerWhenSuspended;
  BOOL suspensionExpected;
  BOOL rateUpdateDuringTransitionDecided;
  BOOL videoLayersAreAttached;
  struct OpaqueCMClock * figSourceClock;
  NSString *captionRenderingStrategy;
  NSArray *displaysUsedForPlayback;
}

@end

#endif /* AVPlayerInternal_h */
