//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVAssetWriter_h
#define AVAssetWriter_h
@import Foundation;

#include "AVAssetWriterHelper.h"
#include "AVAssetWriterInternal.h"
#include "AVIntegrityChecking-Protocol.h"
#include "AVKeyPathDependencyHost-Protocol.h"
#include "AVWeakObservable-Protocol.h"

@class NSArray, NSError, NSString, NSURL;

@interface AVAssetWriter : NSObject<AVIntegrityChecking, AVWeakObservable, AVKeyPathDependencyHost> {
  /* instance variables */
  AVAssetWriterInternal *_internal;
}

@property (readonly, nonatomic) BOOL defunct;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, retain) AVAssetWriterHelper *helper;
@property (readonly, copy, nonatomic) NSURL *outputURL;
@property (readonly, copy, nonatomic) NSString *outputFileType;
@property (readonly, nonatomic) NSArray *availableMediaTypes;
@property (readonly) long long status;
@property (readonly) NSError *error;
@property (copy, nonatomic) NSArray *metadata;
@property (nonatomic) BOOL shouldOptimizeForNetworkUse;
@property (copy, nonatomic) NSURL *directoryForTemporaryFiles;
@property (readonly, nonatomic) NSArray *inputs;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)assetWriterWithURL:(id)url fileType:(id)type error:(id *)error;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
+ (id)_errorForOSStatus:(int)osstatus;

/* instance methods */
- (BOOL)isDefunct;
- (id)init;
- (id)initWithURL:(id)url fileType:(id)type error:(id *)error;
- (id)initWithContentType:(id)type;
- (id)initWithFileType:(id)type error:(id *)error;
- (BOOL)_initInternalObject;
- (void)addCallbackToCancelDuringDeallocation:(id)deallocation;
- (void)dealloc;
- (id)_helper;
- (BOOL)_setHelper:(id)helper ifCurrentHelper:(id)helper;
- (BOOL)_setHelper:(id)helper ifCurrentHelper:(id)helper withBlock:(id /* block */)block;
- (BOOL)_supportsSampleReferencesReturningError:(id *)error;
- (void)declareKeyPathDependenciesWithRegistry:(id)registry;
- (id)delegate;
- (void)setDelegate:(id)delegate;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })movieFragmentInterval;
- (void)setMovieFragmentInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })interval;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })initialMovieFragmentInterval;
- (void)setInitialMovieFragmentInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })interval;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })overallDurationHint;
- (void)setOverallDurationHint:(struct { long long x0; int x1; unsigned int x2; long long x3; })hint;
- (int)movieTimeScale;
- (void)setMovieTimeScale:(int)scale;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })preferredTransform;
- (void)setPreferredTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (float)preferredVolume;
- (void)setPreferredVolume:(float)volume;
- (float)preferredRate;
- (void)setPreferredRate:(float)rate;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })preferredOutputSegmentInterval;
- (void)setPreferredOutputSegmentInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })interval;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })initialSegmentStartTime;
- (void)setInitialSegmentStartTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (id)outputFileTypeProfile;
- (void)setOutputFileTypeProfile:(id)profile;
- (long long)initialMovieFragmentSequenceNumber;
- (void)setInitialMovieFragmentSequenceNumber:(long long)number;
- (BOOL)producesCombinableFragments;
- (void)setProducesCombinableFragments:(BOOL)fragments;
- (BOOL)requiresInProcessOperation;
- (void)setRequiresInProcessOperation:(BOOL)operation;
- (void)setWritesSinglePassUsingPredeterminedFileSize:(long long)size mediaDataSize:(long long)size;
- (id)inputGroups;
- (BOOL)canApplyOutputSettings:(id)settings forMediaType:(id)type;
- (BOOL)canAddInput:(id)input;
- (void)addInput:(id)input;
- (BOOL)canAddInputGroup:(id)group;
- (void)addInputGroup:(id)group;
- (BOOL)startWriting;
- (void)startSessionAtSourceTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)endSessionAtSourceTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)cancelWriting;
- (BOOL)finishWriting;
- (void)finishWritingWithCompletionHandler:(id /* block */)handler;
- (id)finishWritingDelegate;
- (void)setFinishWritingDelegate:(id)delegate;
- (void)_transitionToFailedStatusWithError:(id)error;
- (void)flush;
- (void)flushSegment;
@end

#endif /* AVAssetWriter_h */
