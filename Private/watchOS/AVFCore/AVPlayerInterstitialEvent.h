//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVPlayerInterstitialEvent_h
#define AVPlayerInterstitialEvent_h
@import Foundation;

#include "AVPlayerItem.h"
#include "NSCopying-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSString;
@protocol OS_dispatch_queue;

@interface AVPlayerInterstitialEvent : NSObject<NSCopying> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_ivarAccessQueue;
  struct OpaqueFigPlayerInterstitialEvent * _figEvent;
}

@property (readonly, weak, nonatomic) AVPlayerItem *primaryItem;
@property (readonly, nonatomic) NSString *identifier;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } time;
@property (readonly, nonatomic) NSDate *date;
@property (readonly, nonatomic) NSArray *templateItems;
@property (readonly, nonatomic) unsigned long long restrictions;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } resumptionOffset;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } playoutLimit;
@property (readonly, nonatomic) BOOL alignsStartWithPrimarySegmentBoundary;
@property (readonly, nonatomic) BOOL alignsResumptionWithPrimarySegmentBoundary;
@property (readonly, nonatomic) NSString *cue;
@property (readonly, nonatomic) BOOL willPlayOnce;
@property (readonly, nonatomic) NSDictionary *userDefinedAttributes;
@property (readonly, nonatomic) NSDictionary *assetListResponse;

/* class methods */
+ (id)interstitialEventWithPrimaryItem:(id)item identifier:(id)identifier time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time templateItems:(id)items restrictions:(unsigned long long)restrictions resumptionOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset playoutLimit:(struct { long long x0; int x1; unsigned int x2; long long x3; })limit userDefinedAttributes:(id)attributes;
+ (id)interstitialEventWithPrimaryItem:(id)item identifier:(id)identifier date:(id)date templateItems:(id)items restrictions:(unsigned long long)restrictions resumptionOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset playoutLimit:(struct { long long x0; int x1; unsigned int x2; long long x3; })limit userDefinedAttributes:(id)attributes;
+ (id)interstitialEventWithPrimaryItem:(id)item templateItems:(id)items figEvent:(struct OpaqueFigPlayerInterstitialEvent *)event;
+ (id)newItemArrayWithCopiedItems:(id)items;
+ (id)interstitialEventWithPrimaryItem:(id)item time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
+ (id)interstitialEventWithPrimaryItem:(id)item date:(id)date;

/* instance methods */
- (id)assetURLsReturningError:(id *)error;
- (id)initWithPrimaryItem:(id)item identifier:(id)identifier time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time date:(id)date templateItems:(id)items restrictions:(unsigned long long)restrictions resumptionOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset playoutLimit:(struct { long long x0; int x1; unsigned int x2; long long x3; })limit userDefinedAttributes:(id)attributes;
- (id)initWithPrimaryItem:(id)item time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time date:(id)date;
- (id)initWithPrimaryItemAndFigEvent:(id)event templateItems:(id)items figEvent:(struct OpaqueFigPlayerInterstitialEvent *)event;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)description;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)setImmutable;
- (void)checkMutability;
- (struct OpaqueFigPlayerInterstitialEvent *)figEvent;
- (id)_internalTemplateItems;
- (BOOL)validate:(int *)validate;
@end

#endif /* AVPlayerInterstitialEvent_h */
