//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVFigAssetWriterTrack_h
#define AVFigAssetWriterTrack_h
@import Foundation;

#include "AVMediaFileType.h"
#include "AVWeakReference.h"

@class NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface AVFigAssetWriterTrack : NSObject {
  /* instance variables */
  AVWeakReference *_weakReference;
  NSObject<OS_dispatch_queue> *_aboveHighWaterLevelQueue;
  NSOperationQueue *_operationQueue;
}

@property (readonly, nonatomic) struct OpaqueFigAssetWriter * figAssetWriter;
@property (readonly, nonatomic) NSString *mediaType;
@property (readonly, nonatomic) AVMediaFileType *mediaFileType;
@property (readonly, nonatomic) int trackID;
@property (readonly, nonatomic) struct __CVPixelBufferPool * pixelBufferPool;
@property (readonly, nonatomic) BOOL encoderSupportsMultiPass;
@property (readonly) BOOL aboveHighWaterLevel;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } sampleBufferCoalescingInterval;

/* class methods */
+ (id)assetWriterTrackWithFigAssetWriter:(struct OpaqueFigAssetWriter *)writer mediaType:(id)type mediaFileType:(id)type formatSpecification:(id)specification sourcePixelBufferAttributes:(id)attributes multiPass:(BOOL)pass attachedAdaptor:(id)adaptor error:(id *)error;

/* instance methods */
- (id)init;
- (id)initWithFigAssetWriter:(struct OpaqueFigAssetWriter *)writer mediaType:(id)type mediaFileType:(id)type formatSpecification:(id)specification sourcePixelBufferAttributes:(id)attributes multiPass:(BOOL)pass error:(id *)error;
- (void)dealloc;
- (void)_figAssetWriterDidDropBelowLowWaterLevelForTrackID:(int)id;
- (void)_refreshAboveHighWaterLevel;
- (BOOL)isAboveHighWaterLevel;
- (BOOL)beginPassReturningError:(id *)error;
- (BOOL)addSampleBuffer:(struct opaqueCMSampleBuffer *)buffer error:(id *)error;
- (BOOL)addPixelBuffer:(struct __CVBuffer *)buffer atPresentationTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time error:(id *)error;
- (BOOL)addTaggedPixelBufferGroup:(struct OpaqueCMTaggedBufferGroup *)group atPresentationTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time error:(id *)error;
- (void)endPassWithCompletionHandler:(id /* block */)handler;
- (void)prepareToEndSession;
- (BOOL)markEndOfDataReturningError:(id *)error;
- (void)setFigMetadata:(id)metadata;
- (void)setFigTrackMatrix:(id)matrix;
- (void)setMediaTimeScale:(int)scale;
- (void)setFigDimensions:(id)dimensions;
- (void)setLanguageCode:(id)code;
- (void)setExtendedLanguageTag:(id)tag;
- (void)setMarksOutputTrackAsEnabled:(BOOL)enabled;
- (void)setTrackVolume:(float)volume;
- (void)setLayer:(long long)layer;
- (void)setAlternateGroupID:(short)id;
- (void)setProvisionalAlternateGroupID:(short)id;
- (void)setExcludeFromAutoSelection:(BOOL)selection;
- (void)setPreferredChunkDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (void)setPreferredChunkAlignment:(long long)alignment;
- (void)setPreferredChunkSize:(long long)size;
- (void)setMediaDataLocation:(id)location;
- (void)setSampleReferenceBaseURL:(id)url;
- (void)setFormatDescriptions:(id)descriptions;
- (int)_attachToFigAssetWriterUsingFormatSpecification:(id)specification sourcePixelBufferAttributes:(id)attributes multiPass:(BOOL)pass error:(id *)error;
@end

#endif /* AVFigAssetWriterTrack_h */
