//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVFigAssetInspector_h
#define AVFigAssetInspector_h
@import Foundation;

#include "AVAssetInspector.h"
#include "AVDispatchOnce.h"

@class NSArray, NSURL;

@interface AVFigAssetInspector : AVAssetInspector {
  /* instance variables */
  AVDispatchOnce *_checkIsStreamingOnce;
  BOOL _isStreaming;
  BOOL didCheckForSaveRestriction;
  BOOL hasSaveRestriction;
}

@property (readonly, nonatomic) struct OpaqueFigAsset * figAsset;
@property (readonly, nonatomic) NSURL *URL;
@property (readonly, nonatomic) NSArray *figChapterGroupInfo;
@property (readonly, nonatomic) NSArray *figChapters;
@property (readonly, nonatomic) NSURL *resolvedURL;
@property (readonly, nonatomic) NSURL *originalNetworkContentURL;
@property (readonly, nonatomic) BOOL hasProtectedContent;
@property (readonly, nonatomic) BOOL streaming;
@property (readonly, nonatomic) unsigned long long downloadToken;
@property (readonly, nonatomic) NSArray *variants;
@property (readonly, nonatomic) NSArray *contentKeySpecifiersEligibleForPreloading;

/* instance methods */
- (id)initWithFigAsset:(struct OpaqueFigAsset *)asset;
- (void)dealloc;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (struct OpaqueFigAsset *)_figAsset;
- (struct OpaqueFigFormatReader *)_copyFormatReader;
- (void *)_valueAsCFTypeForProperty:(struct __CFString *)property;
- (id)identifyingTagClass;
- (id)identifyingTag;
- (id)httpSessionIdentifier;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (float)preferredRate;
- (float)preferredVolume;
- (float)preferredSoundCheckVolumeNormalization;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })preferredTransform;
- (struct CGSize { double x0; double x1; })naturalSize;
- (int)naturalTimeScale;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })minimumTimeOffsetFromLive;
- (BOOL)providesPreciseDurationAndTiming;
- (long long)trackCount;
- (id)alternateTrackGroups;
- (id)trackReferences;
- (id)_mediaSelectionGroupDictionaries;
- (id)_localizedMediaSelectionOptionDisplayNames;
- (id)creationDate;
- (id)lyrics;
- (id)commonMetadata;
- (id)availableMetadataFormats;
- (id)metadataForFormat:(id)format;
- (BOOL)_hasQTSaveRestriction;
- (BOOL)isExportable;
- (BOOL)isReadable;
- (BOOL)isComposable;
- (BOOL)_isStreaming;
- (BOOL)isPlayable;
- (BOOL)isCompatibleWithPhotosTranscodingServiceWithOptions:(id)options;
- (BOOL)isCompatibleWithSavedPhotosAlbum;
- (BOOL)isCompatibleWithAirPlayVideo;
- (id)SHA1Digest;
- (BOOL)canContainFragments;
- (BOOL)containsFragments;
- (long long)firstFragmentSequenceNumber;
- (long long)fragmentCount;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })overallDurationHint;
- (BOOL)supportsAnalysisReporting;
- (id)_assetAnalysisMessages;
- (id)_nameForProxy;
- (long long)_moovAtomSize;
- (id)propertyListForProxy;
- (BOOL)_isDefunct;
- (struct CGSize { double x0; double x1; })maximumVideoResolution;
- (id)availableVideoDynamicRanges;
@end

#endif /* AVFigAssetInspector_h */
