//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVPlayer_h
#define AVPlayer_h
@import Foundation;

#include "AVAudioSessionParticipant-Protocol.h"
#include "AVIntegrityChecking-Protocol.h"
#include "AVLoggingIdentifier-Protocol.h"
#include "AVPlayerInternal.h"
#include "AVPlayerMediaSelectionCriteria.h"
#include "AVPlayerPlaybackCoordinator.h"
#include "AVPlayerVideoOutput.h"

@class AVAudioSession, NSArray, NSError, NSNumber, NSString;

@interface AVPlayer : NSObject<AVAudioSessionParticipant, AVIntegrityChecking> {
  /* instance variables */
  AVPlayerInternal *_player;
}

@property (nonatomic) BOOL preventsDisplaySleepDuringVideoPlayback;
@property (nonatomic) BOOL preventsAutomaticBackgroundingDuringVideoPlayback;
@property (copy, nonatomic) NSArray *_displaysUsedForPlayback;
@property (readonly, nonatomic) long long _externalProtectionStatus;
@property (readonly, nonatomic) BOOL audioPlaybackEnabledAtAllRates;
@property float minRateForAudioPlayback;
@property float maxRateForAudioPlayback;
@property BOOL allowsPixelBufferPoolSharing;
@property BOOL disallowsAMRAudio;
@property BOOL appliesMediaSelectionCriteriaAutomatically;
@property (copy) NSString *audioOutputDeviceUniqueID;
@property BOOL allowsOutOfBandTextTrackRendering;
@property (copy) NSString *multichannelAudioStrategy;
@property (copy, nonatomic) NSString *captionRenderingStrategy;
@property (copy, nonatomic) NSString *captionPipelineStrategy;
@property (nonatomic) BOOL preservesAudioSessionSampleRate;
@property (nonatomic) BOOL participatesInAudioSession;
@property (retain) AVAudioSession *audioSession;
@property (nonatomic) unsigned long long preferredVideoDecoderGPURegistryID;
@property (retain, nonatomic) NSObject<AVLoggingIdentifier> *loggingIdentifier;
@property (nonatomic) BOOL disallowsAutoPauseOnRouteRemovalIfNoAudio;
@property (retain, nonatomic) NSString *STSLabel;
@property (nonatomic) BOOL prefersPlayingSilentlyWhenConflictingWithOtherPlayback;
@property (readonly, nonatomic) BOOL isSilencedDueToConflictWithOtherPlayback;
@property (nonatomic) BOOL silencesOtherPlaybackDuringPIP;
@property (readonly, nonatomic) NSNumber *mxSessionID;
@property (copy, nonatomic) NSString *backgroundPIPAuthorizationToken;
@property (nonatomic) BOOL shouldWaitForVideoTarget;
@property (readonly, nonatomic) NSArray *videoTargets;
@property (readonly, nonatomic) NSArray *taggedBufferOutputs;
@property (nonatomic) AVPlayerVideoOutput *videoOutput;
@property (readonly) AVPlayerPlaybackCoordinator *playbackCoordinator;
@property (nonatomic) BOOL allowsLegibleFallbackForAllAudibleMediaSelections;
@property (retain, nonatomic) AVPlayerMediaSelectionCriteria *legibleFallbackMediaSelectionCriteria;
@property (readonly, nonatomic) BOOL defunct;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL _supportsAdvanceTimeForOverlappedPlayback;
@property (readonly) long long status;
@property (readonly) NSError *error;

/* class methods */
+ (id)makePlayerLoggingIdentifier;
+ (BOOL)automaticallyNotifiesObserversOfAutoSwitchStreamVariants;
+ (BOOL)isIAPDExtendedModeActive;
+ (void)initialize;
+ (id)playerWithURL:(id)url;
+ (id)playerWithPlayerItem:(id)item;
+ (BOOL)worksAroundConcurrentKVOCrash;
+ (id)playerWithFigPlayer:(struct OpaqueFigPlayer *)player;
+ (BOOL)automaticallyNotifiesObserversOfCurrentItem;
+ (int)_createFigPlayerWithType:(long long)type options:(struct __CFDictionary *)options player:(struct OpaqueFigPlayer * *)player;
+ (id)_makePlayerName;
+ (BOOL)automaticallyNotifiesObserversOfRate;
+ (BOOL)automaticallyNotifiesObserversOfUsesLegacyAutomaticWaitingBehavior;
+ (BOOL)automaticallyNotifiesObserversOfUserVolume;
+ (BOOL)automaticallyNotifiesObserversOfVibrationPattern;
+ (id)keyPathsForValuesAffectingVolume;
+ (id)keyPathsForValuesAffectingMuted;
+ (id)keyPathsForValuesAffectingActionAtItemEnd;
+ (id)keyPathsForValuesAffectingClosedCaptionDisplayEnabled;
+ (BOOL)automaticallyNotifiesObserversOfExternalPlaybackActive;
+ (BOOL)automaticallyNotifiesObserversOfUsesAudioOnlyModeForExternalPlayback;
+ (BOOL)automaticallyNotifiesObserversOfAirPlayVideoActive;
+ (BOOL)automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive;
+ (long long)availableHDRModes;

/* instance methods */
- (void)_setSupportsAdvanceTimeForOverlappedPlayback:(BOOL)playback;
- (BOOL)isDefunct;
- (BOOL)_clientRequestedPlaybackCoordinator;
- (id)_playbackCoordinatorWithoutTriggeringFullSetup;
- (void)_ensureFigPlaybackCoordinatorIsConnected;
- (BOOL)_isInterstitialPlayer;
- (void)_setIsInterstitialPlayer:(BOOL)player;
- (void)syncAudioSessionToInterstitialPlayer:(id)player;
- (void)_setInterstitialPlayerGuts_invokeOnIvarAccessQueue:(id)queue;
- (void)_linkAndSyncAudioSessionWithInterstitialPlayer:(id)player;
- (id)_interstitialPlayerIfCreated;
- (id)interstitialPlayer;
- (struct OpaqueFigPlayerInterstitialCoordinator *)_copyInterstitialCoordinatorIfCreated;
- (BOOL)_hasCurrentInterstitialEvent;
- (void)_setInterstitialEventCoordinator:(struct OpaqueFigPlayerInterstitialCoordinator *)coordinator;
- (void)_setInterstitialEventCoordinator_invokeOnIvarAccessQueue:(struct OpaqueFigPlayerInterstitialCoordinator *)queue;
- (struct OpaqueFigPlayerInterstitialCoordinator *)_copyInterstitialEventCoordinatorEnsuringItIsRemote:(BOOL)remote;
- (struct OpaqueFigPlayerInterstitialCoordinator *)_copyInterstitialCoordinator;
- (void)_setInterstitialPlayer:(id)player;
- (void)_noteRemoteInterstitialEvents:(id)events forItem:(id)item;
- (void)_noteCurrentRemoteInterstitialEvent:(id)event;
- (void)setVideoOutput:(id)output withOwningTaggedBufferOutput:(id)output;
- (void)addTaggedBufferOutput:(id)output;
- (void)removeTaggedBufferOutput:(id)output;
- (void)removeVideoTarget:(struct OpaqueFigVideoTarget *)target synchronously:(BOOL)synchronously;
- (void)setActiveVideoTargetsForInterstitials:(unsigned char)interstitials;
- (struct OpaqueFigVideoTarget *)_interstitialVideoTargetForPrimaryVideoTarget:(struct OpaqueFigVideoTarget *)target;
- (void)_updateVideoTargetOnFigPlayer:(id)player synchronously:(BOOL)synchronously;
- (void)addVideoTarget:(struct OpaqueFigVideoTarget *)target;
- (void)removeVideoTarget:(struct OpaqueFigVideoTarget *)target;
- (BOOL)_silencesOtherPlaybackDuringPIP;
- (void)_setSilencesOtherPlaybackDuringPIP:(BOOL)pip;
- (id)_STSLabel;
- (void)_setSTSLabel:(id)stslabel;
- (void)_setEnsuresActiveAudioSessionWhenStartingPlayback:(BOOL)playback;
- (BOOL)_ensuresActiveAudioSessionWhenStartingPlayback;
- (void)_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:(BOOL)audio;
- (BOOL)_disallowsAutoPauseOnRouteRemovalIfNoAudio;
- (void)_setPreservesAudioSessionSampleRate:(BOOL)rate;
- (BOOL)_preservesAudioSessionSampleRate;
- (void)_setParticipatesInAudioSession:(BOOL)session;
- (BOOL)_participatesInAudioSession;
- (BOOL)autoSwitchStreamVariants;
- (void)setAutoSwitchStreamVariants:(BOOL)variants;
- (BOOL)preparesItemsForPlaybackAsynchronously;
- (void)setPreparesItemsForPlaybackAsynchronously:(BOOL)asynchronously;
- (id)defaultMediaSelectionCriteriaForMediaCharacteristic:(id)characteristic;
- (void)setMediaSelectionCriteria:(id)criteria forMediaCharacteristic:(id)characteristic;
- (id)_cachedMediaSelectionCriteria;
- (id)mediaSelectionCriteriaForMediaCharacteristic:(id)characteristic;
- (BOOL)disallowsHardwareAcceleratedVideoDecoder;
- (void)setDisallowsHardwareAcceleratedVideoDecoder:(BOOL)decoder;
- (void)_setWantsVolumeChangesWhenPausedOrInactive:(BOOL)inactive;
- (void)_setEQPreset:(int)eqpreset;
- (void)_setStoppingFadeOutDuration:(float)duration;
- (id)_clientName;
- (void)_setClientName:(id)name;
- (long long)_clientPriority;
- (void)_setClientPriority:(long long)priority;
- (void)_setCALayerDestinationIsTVOut:(BOOL)tvout;
- (BOOL)_CALayerDestinationIsTVOut;
- (void)_setPreventsSleepDuringVideoPlayback:(BOOL)playback;
- (BOOL)_preventsSleepDuringVideoPlayback;
- (void)_setDisallowsVideoLayerDisplayCompositing:(BOOL)compositing;
- (BOOL)_disallowsVideoLayerDisplayCompositing;
- (void)_setPreferredLanguageList:(id)list;
- (BOOL)_resumePlayback:(double)playback error:(id *)error;
- (BOOL)_hasAssociatedAVPlayerLayerInPIPMode;
- (BOOL)_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock;
- (BOOL)_hasAssociatedOnscreenAVPlayerLayer;
- (BOOL)_isIAPDExtendedModeActive;
- (BOOL)_carplayIsActive;
- (BOOL)_canContinuePlaybackInBackgrounBasedOnAudiovisualBackgroundPlaybackPolicy:(long long)policy;
- (long long)_itemOkayToPlayWhileTransitioningToBackground:(id)background;
- (BOOL)_shouldDetachVideoLayersFromFigPlayer;
- (void)_layerForegroundStateChanged:(id)changed;
- (id)_acquireBackgroundAssertion;
- (void)_didEnterBackground:(id)background;
- (void)_didFinishSuspension:(id)suspension;
- (void)_detachVideoLayersForSuspension;
- (BOOL)_rateUpdateDuringTransitionDecided;
- (void)_willEnterForeground:(id)foreground;
- (void)_ensureVideoLayersAreAttached;
- (void)removeAudioPlaybackRateLimits;
- (BOOL)isAudioPlaybackEnabledAtAllRates;
- (id)_playbackDisplaysForFigPlayer;
- (void)_setDisplaysUsedForPlayback:(id)playback;
- (long long)_externalProtectionStatusCopiedFromFig;
- (long long)_extractFPExternalProtectionStatus:(id)status;
- (BOOL)outputObscuredDueToInsufficientExternalProtection;
- (id)initWithPlayerItem:(id)item;
- (id)initWithURL:(id)url;
- (id)init;
- (id)initWithDispatchQueue:(id)queue;
- (id)initWithFigPlayer:(struct OpaqueFigPlayer *)player;
- (void)dealloc;
- (id)_nameForLogging_fromIvarAccessQueue;
- (id)_nameForLogging;
- (id)_weakReference;
- (id)dispatchQueue;
- (id)_stateDispatchQueue;
- (struct OpaqueFigPlayer *)_copyFigPlayer;
- (void)addObserver:(id)observer forKeyPath:(id)path options:(unsigned long long)options context:(void *)context;
- (id)valueForUndefinedKey:(id)key;
- (void)setValue:(id)value forUndefinedKey:(id)key;
- (void)_changeStatusToFailedWithError:(id)error;
- (void)_updateDecoderPixelBufferAttributes:(id)attributes onFigPlayer:(struct OpaqueFigPlayer *)player;
- (id)_updateAudioSessionOnFigPlayer;
- (id)currentItem;
- (id)currentItemPublisher;
- (id)closedCaptionsDisplayPublisher;
- (void)_updateCurrentItemPreferredPixelBufferAttributesAndVideoLayerSuppression;
- (void)_setCurrentItem:(id)item;
- (id)_synchronizeWithNewCurrentItem;
- (void)_updateProxyTimebaseFromNewCurrentItem;
- (BOOL)_runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:(id /* block */)block modificationBlock:(id /* block */)block error:(id *)error;
- (struct CGSize { double x0; double x1; })_cachedPresentationSizeOfCurrentItem;
- (void)_noteNewPresentationSizeForPlayerItem:(id)item;
- (BOOL)_cachedNonForcedSubtitleDisplayEnabledForCurrentItem;
- (void)_noteNewNonForcedSubtitleDisplayEnabledForPlayerItem:(id)item;
- (void)_startObservingPropertiesOfCurrentItem:(id)item;
- (void)_removePropertyObserversOfCurrentItemCalledOnStateDispatchQueueChecked:(id)checked;
- (void)_stopObservingPropertiesOfCurrentItem:(id)item;
- (void)_itemIsReadyToPlay:(id)play;
- (void)_advanceCurrentItemAccordingToFigPlaybackItem:(struct OpaqueFigPlaybackItem *)item;
- (void)_advanceToNextItem;
- (void)prepareItem:(id)item withCompletionHandler:(id /* block */)handler;
- (void)_insertItem:(id)item afterItem:(id)item;
- (id)_pendingFigPlayerProperties;
- (id)_pendingFigPlayerPropertyForKey:(id)key;
- (void)_setPendingFigPlayerProperty:(id)property forKey:(id)key;
- (void)_createAndConfigureFigPlayerWithType:(long long)type completionHandler:(id /* block */)handler;
- (id)expectedAssetTypes;
- (void)setExpectedAssetTypes:(id)types;
- (void)_setAncillaryPerformanceInformationForDisplay:(id)display;
- (id)_ancillaryPerformanceInformationForDisplay;
- (void)_addItemToLinkedList_invokeOnIvarAccessQueue:(id)queue afterItem:(id)item;
- (void)_applyLinkedListOfItemsToFigPlayerUsingBlock:(id /* block */)block;
- (void)_applyPlayQueueChangesToFigPlayerWithCompletionHandler:(id /* block */)handler;
- (void)_enqueuePlayQueueModification_invokeOnIvarAccessQueue:(id)queue;
- (void)_removeItemFromLinkedList_invokeOnIvarAccessQueue:(id)queue;
- (void)_removeItem:(id)item;
- (void)replaceCurrentItemWithPlayerItem:(id)item;
- (void)_enumerateItemsUsingBlock:(id /* block */)block;
- (id)_items_invokeOnIvarAccessQueue;
- (id)_items;
- (void)_removeAllItems;
- (id)_rateDidChangeNotificationPayloadForAVFRateChangeReason:(id)reason reasonIsExtendedDiagnostic:(BOOL)diagnostic rateChangeIdentifier:(id)identifier rateChangeOriginator:(id)originator;
- (id)_rateDidChangeNotificationPayloadForFigRateChangeReason:(int)reason rateChangeIdentifier:(id)identifier rateChangeOriginator:(id)originator;
- (float)_rate;
- (id)_rateState;
- (float)rate;
- (BOOL)_setRate:(float)rate rateChangeReason:(int)reason figPlayerSetRateHandler:(id /* block */)handler;
- (void)_setRate:(float)rate withVolumeRampDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration playImmediately:(BOOL)immediately rateChangeReason:(int)reason affectsCoordinatedPlayback:(BOOL)playback;
- (void)setRate:(float)rate withVolumeRampDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (void)setRate:(float)rate;
- (float)defaultRate;
- (void)setDefaultRate:(float)rate;
- (void)playImmediatelyAtRate:(float)rate;
- (void)pauseWithoutAffectingCoordinatedPlayback;
- (BOOL)_rateDidChangeNotificationIncludesExtendedDiagnosticPayload;
- (void)_setRateDidChangeNotificationIncludesExtendedDiagnosticPayload:(BOOL)payload;
- (long long)timeControlStatus;
- (id)reasonForWaitingToPlay;
- (BOOL)automaticallyWaitsToMinimizeStalling;
- (void)setAutomaticallyWaitsToMinimizeStalling:(BOOL)stalling;
- (void)_updateAutomaticallyWaitsToMinimizeStallingOnFigPlayer;
- (void)_setUsesLegacyAutomaticWaitingBehavior:(BOOL)behavior;
- (BOOL)_usesLegacyAutomaticWaitingBehavior;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentTime;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })currentUnfoldedTime;
- (void)seekToDate:(id)date;
- (void)seekToDate:(id)date completionHandler:(id /* block */)handler;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })before toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })after;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time completionHandler:(id /* block */)handler;
- (void)seekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })before toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })after completionHandler:(id /* block */)handler;
- (void)setRate:(float)rate time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time atHostTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)setRate:(float)rate time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time atHostTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time options:(id)options;
- (int)_createPrerollID;
- (int)_cancelPendingPrerollAndRegisterPrerollCompletionHandler:(id /* block */)handler;
- (id /* block */)_unregisterAndReturnRetainedPrerollCompletionHandler;
- (void)prerollAtRate:(float)rate completionHandler:(id /* block */)handler;
- (void)cancelPendingPrerolls;
- (void)prerollOperationDidComplete:(BOOL)complete notificationPayload:(struct __CFDictionary *)payload;
- (struct OpaqueCMClock *)masterClock;
- (void)setMasterClock:(struct OpaqueCMClock *)clock;
- (struct OpaqueCMClock *)sourceClock;
- (void)setSourceClock:(struct OpaqueCMClock *)clock;
- (float)_userVolume;
- (void)_setUserVolume:(float)volume;
- (id)vibrationPattern;
- (void)setVibrationPattern:(id)pattern;
- (float)_playerVolume;
- (float)volume;
- (void)setVolume:(float)volume;
- (BOOL)_isMuted;
- (BOOL)isMuted;
- (void)setMuted:(BOOL)muted;
- (long long)actionAtItemEnd;
- (struct __CFString *)figPlayerActionForActionAtItemEnd:(long long)end;
- (void)_setActionAtItemEnd:(long long)end allowingAdvance:(BOOL)advance;
- (void)setActionAtItemEnd:(long long)end;
- (BOOL)isClosedCaptionDisplayEnabled;
- (void)setClosedCaptionDisplayEnabled:(BOOL)enabled;
- (BOOL)_isDisplayingClosedCaptions;
- (BOOL)isDisplayingClosedCaptions;
- (BOOL)shouldReduceResourceUsage;
- (void)setShouldReduceResourceUsage:(BOOL)usage;
- (long long)resourceConservationLevelWhilePaused;
- (void)setResourceConservationLevelWhilePaused:(long long)paused;
- (id)playerRole;
- (void)setPlayerRole:(id)role synchronously:(BOOL)synchronously;
- (void)setPlayerRole:(id)role;
- (BOOL)allowsExternalPlayback;
- (void)setAllowsExternalPlayback:(BOOL)playback;
- (BOOL)usesExternalPlaybackWhileExternalScreenIsActive;
- (void)setUsesExternalPlaybackWhileExternalScreenIsActive:(BOOL)active;
- (BOOL)_externalPlaybackActive;
- (BOOL)isExternalPlaybackActive;
- (BOOL)_isBufferedAirPlayActive;
- (long long)externalPlaybackType;
- (BOOL)usesAudioOnlyModeForExternalPlayback;
- (void)setUsesAudioOnlyModeForExternalPlayback:(BOOL)playback;
- (id)outputContext;
- (void)setOutputContext:(id)context;
- (BOOL)allowsAirPlayVideo;
- (void)setAllowsAirPlayVideo:(BOOL)video;
- (BOOL)_airPlayVideoActive;
- (BOOL)_isAirPlayVideoActive;
- (BOOL)isAirPlayVideoActive;
- (void)_setPrimaryPlayerNameForInterstitial:(id)interstitial;
- (BOOL)usesAirPlayVideoWhileAirPlayScreenIsActive;
- (void)setUsesAirPlayVideoWhileAirPlayScreenIsActive:(BOOL)active;
- (void)play;
- (void)pause;
- (id)addPeriodicTimeObserverForInterval:(struct { long long x0; int x1; unsigned int x2; long long x3; })interval queue:(id)queue usingBlock:(id /* block */)block;
- (id)addBoundaryTimeObserverForTimes:(id)times queue:(id)queue usingBlock:(id /* block */)block;
- (void)removeTimeObserver:(id)observer;
- (void)_removeAllLayers;
- (id)_pixelBufferAttributeMediator;
- (id)_subtitleLayers;
- (id)_closedCaptionLayers;
- (id)_videoLayers;
- (id)_avPlayerLayers;
- (id)_playerCaptionLayers;
- (void)_updateClosedCaptionLayerBounds:(id)bounds videoRelativeToViewport:(const struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)viewport captionsAvoidanceMargins:(const struct NSEdgeInsets { double x0; double x1; double x2; double x3; } *)margins;
- (void)_setOptions:(id)options onClosedCaptionLayer:(id)layer;
- (void)_setSeparated:(BOOL)separated onClosedCaptionLayer:(id)layer;
- (void)_addPlayerCaptionLayer:(id)layer;
- (void)_removePlayerCaptionLayer:(id)layer;
- (struct CGSize { double x0; double x1; })_maximumAVPlayerLayerDisplaySize;
- (void)_evaluateDisplaySizeOfAllAttachedLayers;
- (struct __CVBuffer *)_copyDisplayedPixelBuffer;
- (void)_attachFigPlayerToSubtitleLayers;
- (void)_detachFigPlayerFromSubtitleLayers;
- (void)_attachVideoLayersToFigPlayer;
- (void)_detachVideoLayersFromFigPlayer:(struct OpaqueFigPlayer *)player;
- (void)_attachClosedCaptionLayersToFigPlayer;
- (void)_detachClosedCaptionLayersFromFigPlayer:(struct OpaqueFigPlayer *)player;
- (void)_removeLayer:(id)layer;
- (void)_removeLayer:(id)layer videoLayer:(id)layer closedCaptionLayer:(id)layer subtitleLayer:(id)layer interstitialLayer:(id)layer;
- (void)_addLayer:(id)layer;
- (BOOL)_hasForegroundLayers;
- (void)_pixelBufferAttributesDidChangeForLayer:(id)layer;
- (void)_updatePixelBufferAttributesForLayer:(id)layer;
- (id)_performanceDictionary;
- (id)_externalPlaybackVideoGravity;
- (id)externalPlaybackVideoGravity;
- (void)setExternalPlaybackVideoGravity:(id)gravity;
- (void)_setNeroVideoGravityOnFigPlayer;
- (id)_fpNotificationNames;
- (void)_addListenersToInterstitialCoordinator:(struct OpaqueFigPlayerInterstitialCoordinator *)coordinator;
- (void)_removeListenersFromInterstitialCoordinator:(struct OpaqueFigPlayerInterstitialCoordinator *)coordinator;
- (void)_addFPListeners;
- (void)_removeFPListeners;
- (void)_setFigPlaybackItemToMakeCurrent:(struct OpaqueFigPlaybackItem *)current;
- (BOOL)_getDisplayVideoRange:(id *)range displaySize:(struct CGSize { double x0; double x1; } *)size refreshRate:(id *)rate;
- (BOOL)_shouldLogPerformanceData;
- (void)_logPerformanceDataForPreviousItem;
- (id)_copyPerformanceDataForCurrentItem;
- (void)_logPerformanceDataForCurrentItem;
- (void)_setLimitsBandwidthForCellularAccess:(BOOL)access;
- (BOOL)_limitsBandwidthForCellularAccess;
- (BOOL)_isVideoPlaybackAllowedWhileInBackground;
- (void)_setPausesAudioVisualPlaybackInBackground:(BOOL)background;
- (BOOL)_pausesAudioVisualPlaybackInBackground;
- (void)setAudiovisualBackgroundPlaybackPolicy:(long long)policy;
- (long long)audiovisualBackgroundPlaybackPolicy;
- (BOOL)_suppressesAudioRendering;
- (void)_setSuppressesAudioRendering:(BOOL)rendering;
@end

#endif /* AVPlayer_h */
