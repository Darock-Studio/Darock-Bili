//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVAssetResourceLoader_h
#define AVAssetResourceLoader_h
@import Foundation;

#include "AVAssetResourceLoaderInternal.h"
#include "NSURLAuthenticationChallengeSender-Protocol.h"
#include "NSURLSessionDataDelegate-Protocol.h"

@class NSOperationQueue, NSString, NSURLSession;
@protocol AVAssetResourceLoaderDelegate, OS_dispatch_queue;

@interface AVAssetResourceLoader : NSObject<NSURLAuthenticationChallengeSender> {
  /* instance variables */
  AVAssetResourceLoaderInternal *_resourceLoader;
}

@property (nonatomic) BOOL preloadsEligibleContentKeys;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSObject<NSURLSessionDataDelegate> *URLSessionDataDelegate;
@property (readonly, nonatomic) NSOperationQueue *URLSessionDataDelegateQueue;
@property (retain, nonatomic) NSURLSession *URLSession;
@property (readonly, weak, nonatomic) NSObject<AVAssetResourceLoaderDelegate> *delegate;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;

/* instance methods */
- (id)remoteCustomURLHandlerContextForPID:(int)pid;
- (void)cacheContentInformation:(id)information forURL:(id)url;
- (id)cachedContentInformationForURL:(id)url;
- (void)_sendAuthResponseForChallenge:(id)challenge disposition:(long long)disposition credential:(id)credential error:(id)error;
- (void)useCredential:(id)credential forAuthenticationChallenge:(id)challenge;
- (void)cancelAuthenticationChallenge:(id)challenge;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)challenge;
- (void)rejectProtectionSpaceAndContinueWithChallenge:(id)challenge;
- (void)performDefaultHandlingForAuthenticationChallenge:(id)challenge;
- (id)init;
- (id)initWithURLRequestHelper:(id)helper asset:(id)asset;
- (id)initWithURLRequestHelper:(id)helper asset:(id)asset remoteCustomURLHandlerContext:(id)context;
- (void)dealloc;
- (void)_setDelegateOnStateQueue:(id)queue;
- (void)setDelegate:(id)delegate queue:(id)queue;
- (id)stateQueue;
- (id)_getDelegateOnStateQueue;
- (id)URLRequestHelper;
- (struct OpaqueFigCustomURLHandler *)_authHandler;
- (struct OpaqueFigCustomURLHandler *)_customURLHandler;
- (struct OpaqueFigCustomURLLoader *)_customURLLoader;
- (id)asset;
- (void)cancelLoading;
- (void)_performDelegateCallbackSynchronouslyIfCurrentDelegateQueueIsQueue:(id)queue delegateCallbackBlock:(id /* block */)block;
- (void)_performDelegateSelector:(SEL)selector withObject:(id)object representingNewRequest:(BOOL)request key:(id)key fallbackHandler:(id /* block */)handler;
- (void)_cancelRequestWithKey:(id)key fallbackHandler:(id /* block */)handler;
- (void)_cancelRequest:(struct __CFDictionary *)request requestID:(unsigned long long)id;
- (void)_issueLoadingRequestWithKey:(id)key loadingRequest:(id)request isRenewalRequest:(BOOL)request fallbackHandler:(id /* block */)handler;
- (void)_poseAuthenticationChallengeWithKey:(id)key challenge:(id)challenge fallbackHandler:(id /* block */)handler;
- (void)_poseAuthenticationChallengeWithRequestInfo:(struct __CFDictionary *)info requestID:(unsigned long long)id challenge:(id)challenge;
- (void)_noteFinishingOfRequest:(id)request;
- (void)_handleRequest:(struct __CFDictionary *)request requestID:(unsigned long long)id willHandleRequest:(BOOL *)request;
- (void)_setContentKeySessionCustomURLHandler:(struct OpaqueFigCustomURLHandler *)urlhandler;
- (struct OpaqueFigCustomURLHandler *)_contentKeySessionCustomURLHandler;
@end

#endif /* AVAssetResourceLoader_h */
