//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVAssetImageGenerator_h
#define AVAssetImageGenerator_h
@import Foundation;

#include "AVAsset.h"
#include "AVAssetImageGeneratorInternal.h"
#include "AVVideoCompositing-Protocol.h"
#include "AVVideoComposition.h"

@class NSString;

@interface AVAssetImageGenerator : NSObject {
  /* instance variables */
  AVAssetImageGeneratorInternal *_priv;
}

@property (readonly, nonatomic) AVAsset *asset;
@property (nonatomic) BOOL appliesPreferredTrackTransform;
@property (nonatomic) struct CGSize { double x0; double x1; } maximumSize;
@property (copy, nonatomic) NSString *apertureMode;
@property (copy, nonatomic) AVVideoComposition *videoComposition;
@property (readonly, nonatomic) NSObject<AVVideoCompositing> *customVideoCompositor;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } requestedTimeToleranceBefore;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } requestedTimeToleranceAfter;

/* class methods */
+ (id)assetImageGeneratorWithAsset:(id)asset;

/* instance methods */
- (id)init;
- (id)initWithAsset:(id)asset;
- (void)dealloc;
- (BOOL)_ensureFigAssetImageGeneratorAllowingSynchronousPropertyLoad:(BOOL)load error:(id *)error;
- (id)_videoSettingWithSize:(struct CGSize { double x0; double x1; })size;
- (id)_makeAutoreleasedAssetReader;
- (struct CGImage *)copyCGImageAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time actualTime:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)time error:(id *)error;
- (void)generateCGImagesAsynchronouslyForTimes:(id)times completionHandler:(id /* block */)handler;
- (void)generateCGImageAsynchronouslyForTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time completionHandler:(id /* block */)handler;
- (void)cancelAllCGImageGeneration;
- (void)setPrefersStandardDynamicRange:(BOOL)range;
- (BOOL)prefersStandardDynamicRange;
- (void)setUseSWDecoderForAV1:(BOOL)av1;
- (BOOL)useSWDecoderForAV1;
- (id)_optionsDictionary;
- (void)_didGenerateCGImage:(id)cgimage;
- (void)_failedToGenerateCGImage:(id)cgimage;
- (void)_serverDied;
- (id)_requestWithRequestID:(id)id;
- (struct CGSize { double x0; double x1; })_scaledSizeForRenderSize:(struct CGSize { double x0; double x1; })size;
- (struct CGImage *)_copyCGImageAtTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time usingAssetReader:(id)reader error:(id *)error;
- (id)_NSErrorForError:(int)error;
- (BOOL)isDefunct;
@end

#endif /* AVAssetImageGenerator_h */
