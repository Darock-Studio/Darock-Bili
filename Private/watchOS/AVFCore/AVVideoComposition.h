//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVVideoComposition_h
#define AVVideoComposition_h
@import Foundation;

#include "AVVideoCompositionCoreAnimationTool.h"
#include "AVVideoCompositionInternal.h"
#include "NSCopying-Protocol.h"
#include "NSMutableCopying-Protocol.h"

@class NSArray, NSString;

@interface AVVideoComposition : NSObject<NSCopying, NSMutableCopying> {
  /* instance variables */
  AVVideoCompositionInternal *_videoComposition;
}

@property (readonly, nonatomic) NSString *colorPrimaries;
@property (readonly, nonatomic) NSString *colorYCbCrMatrix;
@property (readonly, nonatomic) NSString *colorTransferFunction;
@property (readonly, nonatomic) NSString *perFrameHDRDisplayMetadataPolicy;
@property (readonly, nonatomic) Class customVideoCompositorClass;
@property (readonly, nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } frameDuration;
@property (readonly, nonatomic) int sourceTrackIDForFrameTiming;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } renderSize;
@property (readonly, nonatomic) float renderScale;
@property (readonly, copy, nonatomic) NSArray *instructions;
@property (readonly, retain, nonatomic) AVVideoCompositionCoreAnimationTool *animationTool;
@property (readonly, nonatomic) NSArray *sourceSampleDataTrackIDs;

/* class methods */
+ (id)_mutableVideoCompositionWithAsset:(id)asset applyingCIFiltersWithHandler:(id /* block */)handler;
+ (id)videoCompositionWithAsset:(id)asset applyingCIFiltersWithHandler:(id /* block */)handler;
+ (void)videoCompositionWithAsset:(id)asset applyingCIFiltersWithHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
+ (id)videoCompositionWithPropertiesOfAsset:(id)asset;
+ (void)videoCompositionWithPropertiesOfAsset:(id)asset completionHandler:(id /* block */)handler;
+ (id)videoCompositionWithPropertiesOfAsset:(id)asset videoGravity:(id)gravity;
+ (void)initialize;

/* instance methods */
- (void)videoCompositionOutputColorPropertiesWithCustomCompositor:(id)compositor formatDescriptions:(id)descriptions colorPrimaries:(id *)primaries transferFunction:(id *)function yCbCrMatrix:(id *)matrix perFrameHDRDisplayMetadataPolicy:(id *)policy;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (id)_deepCopy;
- (void)dealloc;
- (unsigned long long)_changeSeed;
- (void)_bumpChangeSeed;
- (id)builtInCompositorName;
- (void)setBuiltInCompositorName:(id)name;
- (BOOL)_copyFigVideoCompositor:(const void * *)compositor andSession:(id *)session recyclingSession:(id)session forFigRemaker:(BOOL)remaker error:(id *)error;
- (BOOL)_hasLayerAsAuxiliaryTrack;
- (id)_auxiliaryTrackLayer;
- (int)_auxiliaryTrackID;
- (BOOL)_hasPostProcessingLayers;
- (id)_postProcessingVideoLayer;
- (id)_postProcessingVideoLayers;
- (id)_postProcessingRootLayer;
- (id)_serializableInstructions;
- (id)instructionForFigInstruction:(void *)instruction;
- (BOOL)_isValidReturningExceptionReason:(id *)reason;
- (BOOL)isValidForAsset:(id)asset timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range validationDelegate:(id)delegate;
- (void)determineValidityForAsset:(id)asset timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range validationDelegate:(id)delegate completionHandler:(id /* block */)handler;
- (void)_setFrameDurationForFrameRate:(float)rate sourceTrackIDForFrameTiming:(int)timing;
@end

#endif /* AVVideoComposition_h */
