//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVAssetExportSession_h
#define AVAssetExportSession_h
@import Foundation;

#include "AVAsset.h"
#include "AVAssetExportSessionInternal.h"

@class NSError, NSString, NSURL;

@interface AVAssetExportSession : NSObject {
  /* instance variables */
  AVAssetExportSessionInternal *_exportSession;
}

@property (readonly, nonatomic) NSString *presetName;
@property (readonly, retain, nonatomic) AVAsset *asset;
@property (copy, nonatomic) NSString *outputFileType;
@property (copy, nonatomic) NSURL *outputURL;
@property (nonatomic) BOOL shouldOptimizeForNetworkUse;
@property (nonatomic) BOOL allowsParallelizedExport;
@property (readonly, nonatomic) long long status;
@property (readonly, nonatomic) NSError *error;
@property (readonly, nonatomic) float progress;

/* class methods */
+ (id)allExportPresets;
+ (id)exportPresetsCompatibleWithAsset:(id)asset;
+ (void)determineCompatibilityOfExportPreset:(id)preset withAsset:(id)asset outputFileType:(id)type completionHandler:(id /* block */)handler;
+ (id)exportSessionWithAsset:(id)asset presetName:(id)name;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })maximumDurationForPreset:(id)preset properties:(id)properties;
+ (long long)estimatedOutputFileLengthForPreset:(id)preset duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration properties:(id)properties;
+ (id)keyPathsForValuesAffectingEstimatedOutputFileLength;

/* instance methods */
- (void)estimateMaximumDurationWithCompletionHandler:(id /* block */)handler;
- (void)estimateOutputFileLengthWithCompletionHandler:(id /* block */)handler;
- (id)init;
- (id)initWithAsset:(id)asset presetName:(id)name;
- (void)dealloc;
- (id)description;
- (id)supportedFileTypes;
- (void)determineCompatibleFileTypesWithCompletionHandler:(id /* block */)handler;
- (void)AVExportSessionExportAsynchronouslyCompletionHandler;
- (void)exportAsynchronouslyWithCompletionHandler:(id /* block */)handler;
- (void)cancelExport;
- (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })timeRange;
- (void)setTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })maxDuration;
- (void)setMinVideoFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })minVideoFrameDuration;
- (void)setVideoFrameRateConversionAlgorithm:(id)algorithm;
- (id)videoFrameRateConversionAlgorithm;
- (void)setPreserveSyncFrames:(BOOL)frames;
- (BOOL)preserveSyncFrames;
- (long long)estimatedOutputFileLength;
- (id)metadata;
- (void)setMetadata:(id)metadata;
- (id)metadataItemFilter;
- (void)setMetadataItemFilter:(id)filter;
- (long long)fileLengthLimit;
- (void)setFileLengthLimit:(long long)limit;
- (BOOL)maximizePowerEfficiency;
- (void)setMaximizePowerEfficiency:(BOOL)efficiency;
- (id)audioTimePitchAlgorithm;
- (void)setAudioTimePitchAlgorithm:(id)algorithm;
- (id)audioMix;
- (void)setAudioMix:(id)mix;
- (unsigned long long)audioTrackGroupHandling;
- (void)setAudioTrackGroupHandling:(unsigned long long)handling;
- (id)videoComposition;
- (void)setVideoComposition:(id)composition;
- (id)customVideoCompositor;
- (BOOL)allowsAppleOnlySWAV1Decode;
- (void)setAllowsAppleOnlySWAV1Decode:(BOOL)decode;
- (BOOL)canPerformMultiplePassesOverSourceMediaData;
- (void)setCanPerformMultiplePassesOverSourceMediaData:(BOOL)data;
- (id)directoryForTemporaryFiles;
- (void)setDirectoryForTemporaryFiles:(id)files;
- (BOOL)isDefunct;
@end

#endif /* AVAssetExportSession_h */
