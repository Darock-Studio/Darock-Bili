//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2220.14.1.0.0
//
#ifndef AVMediaSelectionOption_h
#define AVMediaSelectionOption_h
@import Foundation;

#include "AVMediaSelectionOptionInternal.h"
#include "NSCopying-Protocol.h"

@class NSArray, NSLocale, NSString;

@interface AVMediaSelectionOption : NSObject<NSCopying> {
  /* instance variables */
  AVMediaSelectionOptionInternal *_mediaSelectionOption;
}

@property (readonly, nonatomic) int trackID;
@property (readonly, nonatomic) NSString *unicodeLanguageIdentifier;
@property (readonly, nonatomic) NSString *unicodeLanguageCode;
@property (readonly, nonatomic) NSString *mediaType;
@property (readonly, nonatomic) NSArray *mediaSubTypes;
@property (readonly, nonatomic) BOOL playable;
@property (readonly, nonatomic) NSString *extendedLanguageTag;
@property (readonly, nonatomic) NSLocale *locale;
@property (readonly, nonatomic) NSArray *commonMetadata;
@property (readonly, nonatomic) NSArray *availableMetadataFormats;
@property (readonly, nonatomic) NSString *displayName;

/* class methods */
+ (BOOL)_plistHasOptionIdentifier:(id)identifier;
+ (id)mediaSelectionOptionForAsset:(id)asset group:(id)group dictionary:(id)dictionary hasUnderlyingTrack:(BOOL)track;
+ (id)mediaSelectionNilOptionForGroup:(id)group;

/* instance methods */
- (id)initWithGroup:(id)group;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)description;
- (id)_ancillaryDescription;
- (id)dictionary;
- (id)optionID;
- (id)group;
- (id)_groupID;
- (id)_groupMediaType;
- (id)_groupMediaCharacteristics;
- (id)_track;
- (BOOL)_isAuxiliaryContent;
- (BOOL)_isMainProgramContent;
- (id)_taggedMediaCharacteristics;
- (BOOL)hasMediaCharacteristic:(id)characteristic;
- (id)mediaCharacteristics;
- (BOOL)isPlayable;
- (BOOL)_isDesignatedDefault;
- (id)associatedExtendedLanguageTag;
- (id)associatedUnicodeLanguageIdentifier;
- (id)languageCode;
- (id)associatedPersistentIDs;
- (id)fallbackIDs;
- (BOOL)displaysNonForcedSubtitles;
- (BOOL)_representsNilSelection;
- (id)_title;
- (id)metadataForFormat:(id)format;
- (id)associatedMediaSelectionOptionInMediaSelectionGroup:(id)group;
- (id)propertyList;
- (id)_preferredMetadataTitleAccordingToPreferredLanguages:(id)languages fallingBackToMatchingEmptyLocale:(BOOL)locale excludeM3U8Metadata:(BOOL)metadata;
- (id)_languageDisplayNameFromMetadataAccordingToPreferredLanguages:(id)languages fallingBackToMatchingEmptyLocale:(BOOL)locale;
- (id)_displayNameWithLocale:(id)locale fallingBackToMatchingUndeterminedAndMultilingual:(BOOL)multilingual;
- (BOOL)_updateDisplayNameWithLocale:(id)locale fallingBackToMatchingUndeterminedAndMultilingual:(BOOL)multilingual context:(long long)context;
- (id)displayNameWithLocale:(id)locale;
- (id)outOfBandSource;
- (id)outOfBandIdentifier;
- (id)track;
@end

#endif /* AVMediaSelectionOption_h */
