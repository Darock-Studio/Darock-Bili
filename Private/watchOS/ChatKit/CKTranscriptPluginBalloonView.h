//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKTranscriptPluginBalloonView_h
#define CKTranscriptPluginBalloonView_h
@import Foundation;

#include "CKBalloonView.h"
#include "CKBalloonImageView.h"
#include "CKCustomMaskDuringPrint-Protocol.h"
#include "CKInteractiveBalloonImageView.h"
#include "CKTranscriptPluginViewDelegate-Protocol.h"

@class IMBalloonPluginDataSource, NSString, UIView, UIViewController;
@protocol UIView<CKTranscriptPluginView;

@interface CKTranscriptPluginBalloonView : CKBalloonView<CKCustomMaskDuringPrint, CKTranscriptPluginViewDelegate> {
  /* instance variables */
  long long _userInterfaceStyle;
  long long _userInterfaceLevel;
}

@property (nonatomic) BOOL suppressMask;
@property (retain, nonatomic) CKInteractiveBalloonImageView *tailMask;
@property (retain, nonatomic) CKBalloonImageView *outlineMask;
@property (retain, nonatomic) UIView *pluginSnapshotView;
@property (nonatomic) BOOL isSyndicationOnboarding;
@property (nonatomic) BOOL suppressMask;
@property (weak, nonatomic) UIViewController *pluginViewController;
@property (retain, nonatomic) UIView<CKTranscriptPluginView> *pluginView;
@property (retain, nonatomic) IMBalloonPluginDataSource *dataSource;
@property (nonatomic) BOOL isInteractive;
@property (retain, nonatomic) UIView *pluginSnapshotViewForThrowAnimation;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } maskFrame;
@property (readonly, nonatomic) BOOL shouldMaskWhenOpaque;
@property (nonatomic) BOOL mayReparentPluginViews;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)configureForTranscriptPlugin:(id)plugin context:(id)context;
- (void)configureForComposition:(id)composition;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)willRemoveSubview:(id)subview;
- (void)layoutSubviews;
- (void)prepareForDisplay;
- (void)updateBalloonMasks;
- (void)setUserInterfaceStyle:(long long)style;
- (void)setUserInterfaceLevel:(long long)level;
- (void)prepareForReuse;
- (BOOL)canUseOpaqueMask;
- (void)setCanUseOpaqueMask:(BOOL)mask;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits textAlignmentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; } *)insets;
- (id)overlayColor;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
- (void)pluginViewRequestsPresentationAction:(id)action;
- (Class)invisibleInkEffectViewClass;
- (void)attachInvisibleInkEffectView;
- (void)detachInvisibleInkEffectView;
- (id)imageForInvisibleInkEffectView;
- (void)invisibleInkEffectViewWasUncovered;
- (void)_pluginViewReadyForSnapshot:(id)snapshot;
- (void)_reparentCurrentPluginView;
- (void)_setAndAddPluginViewAsSubview:(id)subview;
- (void)addFilter:(id)filter;
- (void)clearFilters;
- (long long)userInterfaceStyle;
- (long long)userInterfaceLevel;
@end

#endif /* CKTranscriptPluginBalloonView_h */
