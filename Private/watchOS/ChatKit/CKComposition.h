//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKComposition_h
#define CKComposition_h
@import Foundation;

#include "CKMediaObject.h"

@class IMPluginPayload, NSArray, NSAttributedString, NSDictionary, NSString, TUConversationActivity;

@interface CKComposition : NSObject

@property (readonly, nonatomic) NSArray *collaborationOptions;
@property (readonly, nonatomic) NSArray *mediaObjects;
@property (readonly, nonatomic) NSArray *pluginDisplayContainers;
@property (readonly, nonatomic) BOOL textOnly;
@property (readonly, nonatomic) unsigned long long mediaObjectsFileSize;
@property (readonly, nonatomic) BOOL expirableComposition;
@property (copy, nonatomic) NSAttributedString *text;
@property (copy, nonatomic) NSAttributedString *subject;
@property (copy, nonatomic) IMPluginPayload *shelfPluginPayload;
@property (copy, nonatomic) NSString *expressiveSendStyleID;
@property (copy, nonatomic) NSDictionary *bizIntent;
@property (copy, nonatomic) NSDictionary *proofreadingInfo;
@property (retain, nonatomic) CKMediaObject *shelfMediaObject;
@property (retain, nonatomic) NSArray *collaborationOptions;
@property (nonatomic) BOOL isFromExternalSource;
@property (readonly, nonatomic) BOOL hasContent;
@property (readonly, nonatomic) BOOL hasNonwhiteSpaceContent;
@property (readonly, copy, nonatomic) NSString *previewText;
@property (retain, nonatomic) NSString *sourceApplicationID;
@property (copy, nonatomic) NSString *firstMessageGUIDOverride;
@property (nonatomic) BOOL shouldHideClearPluginButton;
@property (retain, nonatomic) TUConversationActivity *groupActivity;
@property (readonly, nonatomic) BOOL sendAnimated;
@property (readonly, nonatomic) BOOL saveable;
@property (nonatomic) BOOL hasFailedCommSafetyCheck;
@property (nonatomic) BOOL hasCheckedCommSafety;

/* class methods */
+ (void)deleteCompositionWithGUID:(id)guid;
+ (id)savedCompositionForGUID:(id)guid;
+ (id)_savedCompositionForGUID:(id)guid readUsingBlock:(id /* block */)block;
+ (id)compositionForMessageParts:(id)parts preserveSubject:(BOOL)subject contextIdentifier:(id)identifier;
+ (id)stickerCompositionWithMediaObjects:(id)objects;
+ (id)photoPickerCompositionWithMediaObject:(id)object;
+ (id)photoPickerCompositionWithMediaObjects:(id)objects;
+ (id)quickImageCompositionWithMediaObject:(id)object;
+ (id)audioCompositionWithMediaObject:(id)object;
+ (id)expirableCompositionWithMediaObject:(id)object;
+ (id)newExpirableCompositionWithText:(id)text subject:(id)subject shelfPluginPayload:(id)payload;
+ (id)compositionWithMediaObject:(id)object subject:(id)subject;
+ (id)compositionWithMediaObjects:(id)objects subject:(id)subject;
+ (id)compositionWithPluginDisplayContainer:(id)container subject:(id)subject;
+ (id)composition;
+ (Class)_LPSharedObjectMetadataClass;
+ (void)compositionWithShelfPluginPayload:(id)payload completionHandler:(id /* block */)handler;
+ (id)_compositionWithShelfPluginPayload:(id)payload;
+ (void)compositionWithText:(id)text subject:(id)subject shelfPluginPayload:(id)payload completionHandler:(id /* block */)handler;
+ (id)compositionWithMSMessage:(id)msmessage appExtensionIdentifier:(id)identifier;
+ (id)compositionWithShelfMediaObject:(id)object;

/* instance methods */
- (id)compositionWithExpressiveSendStyleID:(id)id;
- (void)saveCompositionWithGUID:(id)guid;
- (void)_persistTextToComposition:(id)composition directoryURL:(id)url;
- (BOOL)_saveCompositionData:(id)data atURL:(id)url forGUID:(id)guid;
- (id)superFormatSubject;
- (id)superFormatText:(id)text transfterGUIDs:(id *)guids mediaObjects:(id *)objects;
- (id)superFormatText:(id *)text;
- (id)_messageFromPayload:(id)payload firstGUID:(id)guid;
- (id)_compositionParts;
- (id)messagesFromCompositionFirstGUIDForMessage:(id)message;
- (id)messageWithGUID:(id)guid superFormatText:(id)text superFormatSubject:(id)subject fileTransferGUIDs:(id)guids mediaObjects:(id)objects balloonBundleID:(id)id payloadData:(id)data;
- (id)messageWithGUID:(id)guid;
- (id)externalSourceComposition;
- (BOOL)isExpirableComposition;
- (id)compositionByAppendingMediaObject:(id)object;
- (id)compositionByAppendingMediaObjects:(id)objects;
- (id)compositionByReplacingMediaObject:(id)object withMediaObject:(id)object;
- (id)compositionByRemovingMediaObjects:(id)objects;
- (BOOL)isTextOnly;
- (id)compositionByAppendingPluginDisplayContainer:(id)container;
- (void)evaluateSendMetricsWithConversation:(id)conversation shareSheetHostBundleIdentifier:(id)identifier;
- (void)cleanupCKShareFromComposition;
- (void)removeShareURLForComposition:(id)composition;
- (id)initWithText:(id)text subject:(id)subject shelfPluginPayload:(id)payload bizIntent:(id)intent shelfMediaObject:(id)object collaborationOptions:(id)options proofreadingInfo:(id)info;
- (BOOL)compositionIsCollaboration;
- (id)compositionByAppendingText:(id)text shelfPluginPayload:(id)payload shelfMediaObject:(id)object collaborationOptions:(id)options;
- (id)compositionWithCollaborationOptions:(id)options;
- (id)compositionByAppendingCollaborativeComposition:(id)composition;
- (id)description;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (BOOL)isAudioComposition;
- (id)initWithText:(id)text subject:(id)subject shelfPluginPayload:(id)payload bizIntent:(id)intent;
- (id)initWithText:(id)text subject:(id)subject shelfPluginPayload:(id)payload bizIntent:(id)intent shelfMediaObject:(id)object proofreadingInfo:(id)info;
- (id)initWithText:(id)text subject:(id)subject shelfPluginPayload:(id)payload;
- (id)initWithText:(id)text subject:(id)subject shelfPluginPayload:(id)payload shelfMediaObject:(id)object;
- (id)initWithText:(id)text subject:(id)subject;
- (id)_compositionByAppendingText:(id)text isExpirable:(BOOL)expirable shelfPluginPayload:(id)payload shelfMediaObject:(id)object;
- (id)compositionByAppendingText:(id)text;
- (id)compositionByAppendingComposition:(id)composition;
- (BOOL)isSendAnimated;
- (BOOL)isSaveable;
- (Class)balloonViewClass;
@end

#endif /* CKComposition_h */
