//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKTranscriptCollectionViewController_h
#define CKTranscriptCollectionViewController_h
@import Foundation;

#include "CKViewController.h"
#include "CKAssociatedMessageTranscriptCellDelegate-Protocol.h"
#include "CKAudioController.h"
#include "CKAudioControllerDelegate-Protocol.h"
#include "CKBalloonViewDelegate-Protocol.h"
#include "CKConversation.h"
#include "CKCoreTranscriptControllerProtocol-Protocol.h"
#include "CKFullScreenEffectManager.h"
#include "CKFullScreenEffectManagerDelegate-Protocol.h"
#include "CKImpactEffectManager.h"
#include "CKJunkRecoveryTranscriptCellDelegate-Protocol.h"
#include "CKLocationShareBalloonViewDelegate-Protocol.h"
#include "CKLocationSharingDelegate-Protocol.h"
#include "CKMovieBalloonViewDelegate-Protocol.h"
#include "CKNanoCommSafetyEDUViewingDelegate-Protocol.h"
#include "CKNanoMoreActionDelegate-Protocol.h"
#include "CKNanoNicknameUpdateInfo.h"
#include "CKNanoPPTSmartReplyTest.h"
#include "CKNanoReplyListCellDelegate-Protocol.h"
#include "CKNanoReplyLoader.h"
#include "CKNanoReplyTextInputCellDelegate-Protocol.h"
#include "CKObscurableBalloonViewDelegate-Protocol.h"
#include "CKPluginPlaybackManager.h"
#include "CKPluginPlaybackManagerDelegate-Protocol.h"
#include "CKSendAnimationManagerDelegate-Protocol.h"
#include "CKTitledImageBalloonViewDelegate-Protocol.h"
#include "CKTranscriptBalloonCellDelegate-Protocol.h"
#include "CKTranscriptBalloonSelectionManager.h"
#include "CKTranscriptBalloonSelectionManagerDataSource-Protocol.h"
#include "CKTranscriptBalloonSelectionManagerDelegate-Protocol.h"
#include "CKTranscriptCollectionView.h"
#include "CKTranscriptCollectionViewDelegate-Protocol.h"
#include "CKTranscriptCompositorDatasourceDelegate-Protocol.h"
#include "CKWorkoutBalloonViewDelegate-Protocol.h"
#include "IMStateLoggable-Protocol.h"
#include "PUICQuickboardLanguageControllerDelegate-Protocol.h"
#include "UICollectionViewDelegateFlowLayout-Protocol.h"

@class BOOL *, CKChatNanoTipManager, CKTranscriptCompositor, CKTranscriptLayoutMessageEditingContext, CSLSBacklightAssertion, IMChat, IMStateCaptureAssistant, NSArray, NSDate, NSDictionary, NSHashTable, NSIndexPath, NSIndexSet, NSMutableSet, NSString, NSValue, PUICMixedDetentsFrameNotchProvider, PUICQuickboardLanguageController, UICollectionViewDiffableDataSource, UINavigationController, UITapGestureRecognizer, UIView, WAGUIPrimaryGestureViewInteraction;
@protocol CKTranscriptCollectionViewControllerDelegate, OS_dispatch_group, UIView<CKFullscreenEffectView, UIView<CKGradientReferenceView;

@interface CKTranscriptCollectionViewController : CKViewController<CKAudioControllerDelegate, CKTranscriptCompositorDatasourceDelegate, CKLocationShareBalloonViewDelegate, CKLocationSharingDelegate, CKTitledImageBalloonViewDelegate, CKTranscriptCollectionViewDelegate, CKMovieBalloonViewDelegate, CKNanoReplyListCellDelegate, CKNanoMoreActionDelegate, CKNanoReplyTextInputCellDelegate, IMStateLoggable, UICollectionViewDelegateFlowLayout, CKFullScreenEffectManagerDelegate, CKPluginPlaybackManagerDelegate, CKAssociatedMessageTranscriptCellDelegate, CKTranscriptBalloonCellDelegate, CKTranscriptBalloonSelectionManagerDelegate, CKTranscriptBalloonSelectionManagerDataSource, CKNanoCommSafetyEDUViewingDelegate, CKJunkRecoveryTranscriptCellDelegate, CKWorkoutBalloonViewDelegate, CKBalloonViewDelegate, CKObscurableBalloonViewDelegate, CKCoreTranscriptControllerProtocol, CKSendAnimationManagerDelegate, PUICQuickboardLanguageControllerDelegate> {
  /* instance variables */
  NSIndexPath *_itemIndexPathToHighlight;
}

@property (retain, nonatomic) UINavigationController *commSafetyEDUNavigationController;
@property (nonatomic) struct CGSize { double x0; double x1; } collectionViewSize;
@property (nonatomic) double lastViewWidthUsedToLayoutChatItems;
@property (copy, nonatomic) NSArray *notifications;
@property (retain, nonatomic) NSString *transcriptIdentifier;
@property (retain, nonatomic) CKConversation *conversation;
@property (retain, nonatomic) CKTranscriptCollectionView *collectionView;
@property (retain, nonatomic) CKTranscriptCompositor *compositor;
@property (copy, nonatomic) NSArray *chatItems;
@property (copy, nonatomic) NSArray *associatedChatItems;
@property (nonatomic) BOOL settingChatItems;
@property (retain, nonatomic) NSObject<OS_dispatch_group> *updateAnimationGroup;
@property (retain, nonatomic) CKAudioController *audioController;
@property (nonatomic) BOOL audioControllerWasPlayingBeforeScrub;
@property (nonatomic) double balloonMaxWidth;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } marginInsets;
@property (retain, nonatomic) NSDictionary *pluginSnapshots;
@property (retain, nonatomic) NSArray *cachedIncomingMessageBlock;
@property (retain, nonatomic) NSArray *cachedOutgoingMessageBlock;
@property (retain, nonatomic) CKNanoReplyLoader *replyLoader;
@property (retain, nonatomic) PUICQuickboardLanguageController *languageController;
@property (copy, nonatomic) id /* block */ postScrollAnimationBlock;
@property (nonatomic) BOOL scrolledForURLMessages;
@property (retain, nonatomic) CKNanoPPTSmartReplyTest *smartReplyTest;
@property (retain, nonatomic) CSLSBacklightAssertion *backlightAssertion;
@property (retain, nonatomic) CKChatNanoTipManager *tipManager;
@property (retain, nonatomic) CKPluginPlaybackManager *pluginPlaybackManager;
@property (nonatomic) BOOL isPerformingRegenerateOrReloadOnlyUpdate;
@property (nonatomic) struct CGPoint { double x0; double x1; } peekSampleTranslation;
@property (nonatomic) BOOL peeking;
@property (nonatomic) BOOL isLoadingMoreMessages;
@property (copy, nonatomic) NSString *speakerTransferGUID;
@property (nonatomic) BOOL sizedFullTranscript;
@property (nonatomic) BOOL shouldUseOpaqueMask;
@property (retain, nonatomic) UIView<CKFullscreenEffectView> *topEffectView;
@property (retain, nonatomic) NSMutableSet *currentEffectDecorationViews;
@property (nonatomic) BOOL filterAllButFirstMessage;
@property (nonatomic) BOOL playedLastImpactEffectForTransitionFromComposing;
@property (retain, nonatomic) UIView *snapshotOfPluginBeingReplacedByBreadcrumb;
@property (retain, nonatomic) NSValue *presentedChatItemScrollOffset;
@property (nonatomic) BOOL isPresentingChatItemForKeyboard;
@property (retain, nonatomic) NSHashTable *visibleBalloonCells;
@property (retain, nonatomic) PUICMixedDetentsFrameNotchProvider *notchProvider;
@property (retain, nonatomic) NSArray *notchProviderFrames;
@property (retain, nonatomic) WAGUIPrimaryGestureViewInteraction *primaryWatchGestureInteraction;
@property (retain, nonatomic) NSString *mostRecentlyTouchedPlugin;
@property (copy, nonatomic) id /* block */ transcriptUpdateCompletion;
@property (retain, nonatomic) IMStateCaptureAssistant *stateCaptureAssistant;
@property (retain, nonatomic) UICollectionViewDiffableDataSource *dataSource;
@property (readonly, nonatomic) CKTranscriptBalloonSelectionManager *selectionManager;
@property (readonly, nonatomic) BOOL showingTranscriptTimestamps;
@property (retain, nonatomic) NSDate *transcriptBecameVisibleTimestamp;
@property (readonly, nonatomic) BOOL wantsDrawerLayout;
@property (readonly, nonatomic) CKTranscriptBalloonSelectionManager *selectionManager;
@property (readonly, nonatomic) BOOL showingTranscriptTimestamps;
@property (retain, nonatomic) NSDate *transcriptBecameVisibleTimestamp;
@property (readonly, nonatomic) BOOL wantsDrawerLayout;
@property (retain, nonatomic) UICollectionViewDiffableDataSource *dataSource;
@property (readonly, nonatomic) IMChat *chat;
@property (readonly, nonatomic) BOOL isInline;
@property (weak, nonatomic) NSObject<CKTranscriptCollectionViewControllerDelegate> *delegate;
@property (retain, nonatomic) UIView<CKGradientReferenceView> *gradientReferenceView;
@property (copy, nonatomic) NSIndexSet *hiddenItems;
@property (copy, nonatomic) NSIndexSet *hiddenAssociatedItems;
@property (copy, nonatomic) NSIndexSet *hiddenAssociatedItemsForMessageEditing;
@property (copy, nonatomic) NSIndexSet *hiddenBalloonViews;
@property (copy, nonatomic) NSIndexSet *poppedBalloonsHiddenUntilNextChatItemUpdate;
@property (nonatomic) BOOL shouldLoadDefaultConversationViewingMessageCountOnAppear;
@property (retain, nonatomic) CKImpactEffectManager *impactEffectManager;
@property (retain, nonatomic) CKFullScreenEffectManager *fullscreenEffectManager;
@property (nonatomic) BOOL transitionedFromComposing;
@property (nonatomic) BOOL transitioningFromComposing;
@property (nonatomic) BOOL transcriptUpdateAnimated;
@property (nonatomic) BOOL allowsPluginPlayback;
@property (nonatomic) double pluginPlaybackDelay;
@property (retain, nonatomic) NSString *__CurrentTestName;
@property (nonatomic) long long contentAnimationPauseReasons;
@property (retain, nonatomic) CKNanoNicknameUpdateInfo *nicknameUpdateInfo;
@property (nonatomic) BOOL forceDisableNotches;
@property (retain, nonatomic) UITapGestureRecognizer *loggingTapGestureRecognizer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) CKTranscriptLayoutMessageEditingContext *messageEditingContext;
@property (retain, nonatomic) NSArray *replies;

/* class methods */
+ (id)logHandle;
+ (struct CGSize { double x0; double x1; })defaultCollectionViewSize;
+ (id)chatItemsDidChangeNotification;

/* instance methods */
- (void)presentUserInterventionScreenForIndexPath:(id)path shouldTargetAssociatedItems:(BOOL)items;
- (void)presentMoreHelpMenu;
- (BOOL)canInteractWithObscuredItem;
- (void)didConfirmForInterventionViewController:(id)controller;
- (void)didRejectForInterventionViewController:(id)controller;
- (void)_dismissInterventionController:(id)controller;
- (void)didRequestMoreHelpForInterventionViewController:(id)controller;
- (void)didAskForMoreHelp:(id)help;
- (void)didBlockContact:(id)contact;
- (void)didBlockContacts:(id)contacts;
- (void)didLeaveConversation:(id)conversation;
- (void)didCancel:(id)cancel;
- (id)dataSourceWithCollectionView:(id)view;
- (id)generateSnapshotForCKChatItems:(id)items;
- (id)_ckChatItemWithGUID:(id)guid inSection:(unsigned long long)section;
- (id)logHandle;
- (id)imChatItems;
- (void)dealloc;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (BOOL)shouldEndShowingEditHistoryOnViewDisappearance;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)viewDidLayoutSubviews;
- (void)presentViewController:(id)controller animated:(BOOL)animated completion:(id /* block */)completion;
- (id)transcriptBackgroundColor;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (double)_fullMaxWidth;
- (BOOL)_canShowWhileLocked;
- (BOOL)_canUseOpaqueMask;
- (void)parentControllerDidBecomeActive;
- (void)prepareForSuspend;
- (void)performResumeDeferredSetup;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidAppearDeferredSetup;
- (void)_prewarmTranscriptAssetsIfNecessary;
- (id)initWithConversation:(id)conversation delegate:(id)delegate balloonMaxWidth:(double)width marginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (id)initWithConversation:(id)conversation delegate:(id)delegate balloonMaxWidth:(double)width marginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets collectionViewSize:(struct CGSize { double x0; double x1; })size;
- (id)initWithConversation:(id)conversation delegate:(id)delegate notifications:(id)notifications balloonMaxWidth:(double)width marginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (id)initWithConversation:(id)conversation delegate:(id)delegate notifications:(id)notifications balloonMaxWidth:(double)width marginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets collectionViewSize:(struct CGSize { double x0; double x1; })size;
- (void)_highlightCell:(id)cell autoDismiss:(BOOL)dismiss;
- (void)highlightItemAtIndexPathWhenDisplayed:(id)displayed autoDismiss:(BOOL)dismiss;
- (id)selectedItems;
- (void)setSelectedItems:(id)items;
- (void)deleteSelectedChatItems:(id)items;
- (void)deleteChatItems:(id)items sender:(id)sender;
- (void)setScrollAnchor:(double)anchor;
- (void)_updateLayoutAndConfigureVisibleCells;
- (void)traitCollectionDidChange:(id)change;
- (void)_requestChatItemLayoutInvalidation;
- (void)invalidateChatItemLayoutWithNewBalloonMaxWidth:(double)width marginInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets traitCollection:(id)collection;
- (void)_resizingStart:(id)start;
- (void)_resizingEnd:(id)end;
- (void)sizeFullTranscriptIfNecessary;
- (void)_prewarmMediaPreviews;
- (void)_prewarmLinkPresentations;
- (void)_prewarmLinkPresentationsWithChatItems:(id)items;
- (void)_prewarmBalloonControllers;
- (void)reloadData;
- (void)_setupGestureInteraction;
- (void)updateTranscript:(id /* block */)transcript animated:(BOOL)animated completion:(id /* block */)completion;
- (void)stopPlayingAudio;
- (BOOL)canRaiseToListen;
- (BOOL)canRaiseToTalk;
- (void)raiseGestureRecognized:(id)recognized;
- (void)__raiseGestureRecognized:(id)recognized;
- (id)mostRecentImageChatItem;
- (id)possibleTipChatItem;
- (void)addChatItem:(id)item atIndex:(unsigned long long)index;
- (void)removeChatItemAtIndex:(unsigned long long)index;
- (void)startFullscreenEffectIfNeededForChatItem:(id)item;
- (void)stopFullscreenEffect;
- (BOOL)isVisiblePlugin:(id)plugin;
- (BOOL)hasRecentTouchForSendingPlugin:(id)plugin;
- (void)clearRecentPluginTouch;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)scrollViewWillEndDragging:(id)dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)offset;
- (BOOL)isContentOffsetAtOrBelowBottom:(struct CGPoint { double x0; double x1; })bottom;
- (void)updateTranscriptScrollIntentForUserScrollToContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (void)updateTranscriptScrollIntentToBottomOrHistoryBasedOnCurrentContentOffset;
- (struct CGPoint { double x0; double x1; })_platformSpecificBottomContentOffset;
- (void)scrollViewDidEndDragging:(id)dragging willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)scrollViewDidEndScrollingAnimation:(id)animation;
- (BOOL)scrollViewShouldScrollToTop:(id)top;
- (void)scrollViewDidScrollToTop:(id)top;
- (void)_setHoldingWhilePresentingKeyboardForChatItem:(BOOL)item;
- (void)_setHoldUpdatesForStickerMoveAnimation:(BOOL)animation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })collectionViewAdjustedContentFrameWithKeyboard:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })keyboard;
- (void)beginPresentingChatItemForKeyboardPresentation:(id)presentation layoutAreaContentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets completion:(id /* block */)completion;
- (void)endPresentingChatItemForKeyboardPresentation:(id)presentation completion:(id /* block */)completion;
- (void)stopPluginPlayback;
- (void)startPluginPlaybackAfterDelay:(double)delay;
- (void)_deferredStartPlayback;
- (void)_startPlaybackWithIndexPaths:(id)paths;
- (void)pluginPlaybackManagerDidStopPlayback:(id)playback;
- (void)collectionViewLayoutRestingDidChange:(id)change;
- (id)overrideCurrentFrameMapForLayout:(id)layout;
- (id)overrideTargetFrameMapForLayout:(id)layout;
- (id)balloonOffsetMapForLayout:(id)layout resetsOffsetMapAfterUse:(BOOL)use;
- (void)_collectionViewDidRestAsync:(BOOL)async;
- (id)compositorDatasourceItemsForSection:(long long)section;
- (id)layoutGroupForDatasourceItems:(id)items environment:(id)environment layoutItems:(id)items;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })compositorMarginInsets;
- (BOOL)compositorSupportsCustomLayoutGroupsForSection:(long long)section;
- (BOOL)compositorSupportsCustomLayoutGroupsForLayoutProvider:(id)provider;
- (id)compositorMessageEditingContext;
- (void)collectionViewWillScroll:(id)scroll targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)offset;
- (void)collectionViewWillProgrammaticallyScroll:(id)scroll animated:(BOOL)animated;
- (void)transcriptCollectionView:(id)view shouldScrollToHighlightedMessage:(id)message;
- (void)transcriptCollectionView:(id)view scrollToTopOfLastBubbleCellAnimated:(BOOL)animated;
- (BOOL)isShowingTranscriptTimestamps;
- (void)hideTranscriptTimestampsIfNeeded;
- (void)showTrascriptTimestamps;
- (BOOL)collectionView:(id)view shouldHighlightItemAtIndexPath:(id)path;
- (void)collectionView:(id)view didSelectItemAtIndexPath:(id)path;
- (void)collectionView:(id)view didDeselectItemAtIndexPath:(id)path;
- (void)collectionView:(id)view didEndDisplayingCell:(id)cell forItemAtIndexPath:(id)path;
- (void)collectionView:(id)view willDisplayCell:(id)cell forItemAtIndexPath:(id)path;
- (BOOL)collectionView:(id)view canFocusItemAtIndexPath:(id)path;
- (void)_addVisibleTranscriptBalloonCell:(id)cell;
- (void)_removeVisibleTranscriptBalloonCell:(id)cell;
- (void)_configureVisibleTranscriptBalloonCells;
- (void)_stopPlaybackOfAllBalloonMovies;
- (void)collectionViewWillInset:(id)inset targetContentInset:(inout struct UIEdgeInsets { double x0; double x1; double x2; double x3; } *)inset;
- (void)collectionViewDidInset:(id)inset;
- (long long)numberOfSectionsInCollectionView:(id)view;
- (long long)collectionView:(id)view numberOfItemsInSection:(long long)section;
- (id)collectionView:(id)view cellForItemAtIndexPath:(id)path;
- (id)collectionView:(id)view cellForCKChatItem:(id)item atIndexPath:(id)path;
- (void)collectionView:(id)view willDisplaySupplementaryView:(id)view forElementKind:(id)kind atIndexPath:(id)path;
- (void)collectionView:(id)view didEndDisplayingSupplementaryView:(id)view forElementOfKind:(id)kind atIndexPath:(id)path;
- (void)updateEffectViewMessageRects;
- (void)endHoldingUpdatesAfterQuicklookCancelsDismiss;
- (void)_updateEffectViewMessageRect:(id)rect effect:(id)effect;
- (id)collectionView:(id)view layout:(id)layout chatItemForItemAtIndexPath:(id)path;
- (id)collectionView:(id)view layout:(id)layout chatItemForSupplementaryViewAtIndexPath:(id)path;
- (id)chatItemAtIndexPath:(id)path;
- (void)collectionViewLayout:(id)layout sizeDidChange:(struct CGSize { double x0; double x1; })change;
- (id)currentEffectForCollectionView:(id)view layout:(id)layout;
- (void)didTapBlockContact;
- (void)didTapWaysToGetHelp;
- (BOOL)isRevealingContentEnabled;
- (void)presentGetHelpAlert;
- (void)balloonViewTapped:(id)tapped withModifierFlags:(long long)flags selectedText:(id)text;
- (void)_handleAudioBalloonTapForIndexPath:(id)path;
- (void)_presentOfframpDetonationAlert;
- (void)audioBalloonScrubberDidChangeValue:(double)value;
- (void)reloadLayoutForBalloonView:(id)view;
- (void)launchReaderViewForBalloonView:(id)view;
- (BOOL)_isRecognizerScrubbingOnCurrentAudioMessageBalloon:(id)balloon;
- (void)audioBalloonScrubberWithRecognizer:(id)recognizer didChangeValue:(double)value;
- (void)playbackSpeedDidChangeForAudioMessageBalloonView:(id)view playbackSpeed:(double)speed;
- (id)audioMessageMediaObjectsFromBalloonView:(id)view;
- (void)liveBalloonTouched:(id)touched;
- (void)interactionStartedWithPluginBalloonView:(id)view;
- (void)balloonViewLongTouched:(id)touched;
- (void)balloonViewShowInlineReply:(id)reply;
- (void)balloonViewDoubleTapped:(id)tapped;
- (void)balloonViewSelected:(id)selected withModifierFlags:(long long)flags selectedText:(id)text;
- (id)selectedChatItems;
- (BOOL)balloonTextViewIsSelected;
- (void)_selectChatItemGuid:(id)guid selectionState:(id)state;
- (void)_deselectChatItemGuid:(id)guid;
- (void)balloonViewTextViewDidChangeSelection:(id)selection selectedText:(id)text textView:(id)view;
- (void)balloonView:(id)view willInsertPluginViewAsSubview:(id)subview;
- (void)_handleAssociatedMessageCellTapEvent:(id)event isDoubleTap:(BOOL)tap;
- (void)associatedMessageTranscriptCellDoubleTapped:(id)tapped;
- (void)associatedMessageTranscriptCellLongTouched:(id)touched;
- (void)liveViewController:(id)controller requestPresentationStyle:(unsigned long long)style;
- (void)liveViewController:(id)controller stagePayload:(id)payload skipShelf:(BOOL)shelf allowAllCommits:(BOOL)commits completionHandler:(id /* block */)handler;
- (void)liveViewController:(id)controller stageSticker:(id)sticker skipShelf:(BOOL)shelf allowAllCommits:(BOOL)commits completionHandler:(id /* block */)handler;
- (id)liveViewControllerContextIdentifier:(id)identifier;
- (void)didTapWorkoutBalloonView:(id)view workoutData:(id)data;
- (void)interactionStartedFromPreviewItemControllerInBalloonView:(id)view;
- (void)interactionStoppedFromPreviewItemControllerInBalloonView:(id)view;
- (void)tuConversationBalloonJoinButtonTapped:(id)tapped;
- (void)balloonView:(id)view mediaObjectDidFinishPlaying:(id)playing;
- (void)locationShareBalloonViewIgnoreButtonTapped:(id)tapped;
- (void)locationShareBalloonViewShareButtonTapped:(id)tapped;
- (id)sharingMenu;
- (void)locationSharingClient:(id)client showShareLocationMenuWithBalloonPluginView:(id)view;
- (void)balloonViewTitleTapped:(id)tapped;
- (void)audioController:(id)controller mediaObjectDidFinishPlaying:(id)playing;
- (void)audioController:(id)controller mediaObjectProgressDidChange:(id)change currentTime:(double)time duration:(double)duration;
- (void)audioControllerDidPause:(id)pause;
- (void)audioControllerDidStop:(id)stop;
- (void)audioControllerPlayingDidChange:(id)change;
- (void)setForceBacklight:(BOOL)backlight timeoutSeconds:(double)seconds;
- (void)effectManager:(id)manager didStartEffect:(id)effect;
- (void)effectManager:(id)manager didStopEffect:(id)effect;
- (id)chatForSendAnimationManager:(id)manager;
- (id)collectionViewControllerForImpactEffectManager:(id)manager;
- (void)sendAnimationManagerWillStartAnimation:(id)animation context:(id)context;
- (void)sendAnimationManagerDidStopAnimation:(id)animation context:(id)context;
- (void)_updateHiddenBalloonViews;
- (void)transcriptBalloonCell:(id)cell didTranslateBalloonByDelta:(double)delta;
- (void)transcriptBalloonCell:(id)cell didEndBalloonSwipeWithDelta:(double)delta swipeVelocity:(struct CGPoint { double x0; double x1; })velocity;
- (void)recoverJunkPressedInTranscriptCell:(id)cell;
- (void)deleteConversationPressedInTranscriptCell:(id)cell;
- (void)keyTransparencyTranscriptCellDidRequestVerification:(id)verification;
- (void)keyTransparencyTranscriptCellDidRequestReportToApple:(id)apple;
- (void)keyTransparencyTranscriptCellDidSelectLearnMore:(id)more;
- (void)keyTransparencyTranscriptCellDidSelectIgnoreFailures:(id)failures;
- (void)keyTransparencyTranscriptOffErrorMenu:(id)menu;
- (BOOL)_allowsEffectAutoPlayback;
- (BOOL)_pluginChatItem:(id)item hasControllerConformingToProtocol:(id)protocol;
- (void)configureCell:(id)cell forCKChatItem:(id)item atIndexPath:(id)path animated:(BOOL)animated animationDuration:(double)duration animationCurve:(long long)curve;
- (id)_nextChatItemOfType:(Class)type afterIndex:(long long)index inChatItems:(id)items;
- (id)_previousChatItemOfType:(Class)type beforeIndex:(long long)index inChatItems:(id)items;
- (void)_hideBalloonViewIfNecessaryForCell:(id)cell indexPath:(id)path;
- (void)configureAssociatedCell:(id)cell forChatItem:(id)item atIndexPath:(id)path;
- (double)_balloonHorizontalOffsetForParentChatItem:(id)item contentAlignmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect responsibleChatItems:(id *)items individualOffsets:(id *)offsets;
- (void)_indicesOfReplyChatItemsToInsertWithoutFading:(id)fading inserted:(id)inserted outInsertIndices:(id *)indices;
- (void)_indicesOfTranscriptPluginChatItemRemoveAndInsertedWithoutFading:(id)fading inserted:(id)inserted removed:(id)removed outInsertIndices:(id *)indices outRemoveIndices:(id *)indices;
- (unsigned long long)_indexOfBreadcrumbReplacingTranscriptPluginInChatItems:(id)items inserted:(id)inserted removed:(id)removed outIndexOfReplacedPlugin:(unsigned long long *)plugin outIndexOfNewPlugin:(unsigned long long *)plugin;
- (void)_updatePluginPlaybackManagerForInsertedChatItems:(id)items;
- (void)reloadChatItemsAtIndexes:(id)indexes animated:(BOOL)animated;
- (void)reloadChatItemsAtIndexes:(id)indexes animated:(BOOL)animated completion:(id /* block */)completion;
- (void)updateTranscriptChatItems:(id)items inserted:(id)inserted removed:(id)removed reload:(id)reload regenerate:(id)regenerate animated:(BOOL)animated checkFiltered:(BOOL)filtered completion:(id /* block */)completion;
- (void)updateTranscriptChatItems:(id)items inserted:(id)inserted removed:(id)removed reload:(id)reload regenerate:(id)regenerate animated:(BOOL)animated completion:(id /* block */)completion;
- (void)_updateTranscriptChatItems:(id)items inserted:(id)inserted removed:(id)removed reload:(id)reload regenerate:(id)regenerate animated:(BOOL)animated completion:(id /* block */)completion;
- (void)_updateTranscriptChatItemsWithAnimation:(id)animation withIMChatItems:(id)items oldChatItems:(id)items insertedChatItems:(id)items inserted:(id)inserted removed:(id)removed reload:(id)reload reloadItemGUIDs:(id)guids wantsScrollToBottom:(BOOL)bottom scrollToBottomDuration:(double *)duration animationCurve:(long long)curve completion:(id /* block */)completion;
- (void)_updateSnapshotWithoutAnimation:(id)animation reloadingItemGUIDs:(id)guids completion:(id /* block */)completion;
- (void)_updateTranscriptChatItemsWithoutAnimation:(id)animation;
- (id)_itemGUIDsForItems:(id)items inIMChatItem:(id)item;
- (void)_removeChatItemsFrom:(id)from removed:(id)removed;
- (id)_insertChatItemsInto:(id)into withIMChatItems:(id)items inserted:(id)inserted insertedUnreadMessage:(id *)message insertedLocalUnsentChatItem:(id *)item;
- (void)_regenerateChatItemsIn:(id)in withIMChatItems:(id)items regenerate:(id)regenerate shouldShowBlackholeAlert:(BOOL *)alert;
- (void)_updateAudioControllerForInserted:(id)inserted chatItems:(id)items;
- (void)_updateCollectionViewSnapshotForChatItems:(id)items reloadingItemGUIDs:(id)guids animatingDifferences:(BOOL)differences associatedInserted:(id *)inserted associatedRemoved:(id *)removed completion:(id /* block */)completion;
- (void)_updateCollectionViewForChatItems:(id)items oldChatItems:(id)items inserted:(id)inserted removed:(id)removed associatedInserted:(id *)inserted associatedRemoved:(id *)removed animationDuration:(double)duration animationCurve:(long long)curve completion:(id /* block */)completion;
- (void)_handlePluginBreadcrumbingInChatItems:(id)items withIMChatItems:(id)items inserted:(id *)inserted removed:(id *)removed completion:(id /* block */)completion;
- (void)_animateChatItemRemoval:(id)removal removed:(id)removed;
- (void)_animateChatItemReload:(id)reload reload:(id)reload associatedInserted:(id)inserted animationDuration:(double)duration animationCurve:(long long)curve;
- (void)_animateChatItemInsertion:(id)insertion inserted:(id)inserted wantsScrollToBottom:(BOOL)bottom scrollToBottomDuration:(double *)duration;
- (void)_animateAssociatedChatItemWithIndices:(id)indices;
- (void)_animateStickerRepositionWithAssociatedChatItem:(id)item associatedCell:(id)cell associatedIndexPath:(id)path;
- (id)_sanitizeInsertedIndices:(id)indices inChatItems:(id)items withIMChatItems:(id)items;
- (void)_identifyIndicesNeedingCustomAnimationsForIMChatItems:(id)items inserted:(id)inserted removed:(id)removed;
- (BOOL)_shouldScrollToBottomOrReplyButton:(BOOL *)button insertedUnreadMessage:(BOOL)message insertedLocalUnsentChatItem:(BOOL)item;
- (void)scrollToBottomAnimated:(BOOL)animated withDuration:(double)duration animationCurve:(long long)curve insertedUnreadMessage:(id)message insertedLocalUnsentChatItem:(id)item wantsScrollToReplyButton:(BOOL)button withCompletion:(id /* block */)completion;
- (BOOL)scrollToTopOfLastBubbleCellAnimated:(BOOL)animated;
- (void)playEffectsIfNecessaryWithInsertedUnreadMessage:(id)message insertedLocalUnsentChatItem:(id)item;
- (void)playImpactEffectIfNecessaryAutoplayingOutgoingEffect:(BOOL)effect autoplayingIncomingEffect:(BOOL)effect impactEffectChatItem:(id)item;
- (void)playFullscreenEffectIfNecessaryAutoplayingOutgoingEffect:(BOOL)effect autoplayingIncomingEffect:(BOOL)effect insertedUnreadMessage:(id)message insertedLocalUnsentChatItem:(id)item;
- (void)startSuppressingSoundsForBulletinMessagesFromNotifications:(id)notifications;
- (void)stopSuppressingSoundsForBulletinMessagesWithChatItems:(id)items;
- (id)newChatItemsWithNotifications:(id)notifications;
- (id)newChatItemWithNotification:(id)notification;
- (id)newChatItemsWithIMChatItems:(id)items;
- (id)newChatItemWithIMChatItem:(id)item traitCollection:(id)collection;
- (double)_adjustedBalloonMaxWidthFor:(id)for balloonMaxWidth:(double)width;
- (void)_diffAssociatedItemsWithOldAssociatedItems:(id)items removedAssociatedIndexes:(id *)indexes insertedAssociatedIndexes:(id *)indexes;
- (void)setChatItems:(id)items removedAssociatedIndexes:(id *)indexes insertedAssociatedIndexes:(id *)indexes;
- (void)loadEarlierMessagesForConversation;
- (void)fetchEarlierMessagesForConversation:(id /* block */)conversation;
- (void)loadRecentMessagesForConversation;
- (void)fetchRecentMessagesForConversation:(id /* block */)conversation;
- (void)loadEarlierMessages;
- (void)loadRecentMessages;
- (void)_loadMessagesIfNeededWithTargetContentOffset:(struct CGPoint { double x0; double x1; })offset forKeyboardNavigation:(BOOL)navigation;
- (BOOL)_isHistoryLoadingNeededForDirection:(long long)direction withTargetContentOffset:(struct CGPoint { double x0; double x1; })offset forKeyboardNavigation:(BOOL)navigation;
- (void)loadMessagesIfNeededSkipValidation;
- (id)loadMoreItemIndexPathForDirection:(long long)direction;
- (BOOL)isLoadMoreSpinnerVisibleForDirection:(long long)direction;
- (BOOL)isLoadMoreSpinnerAboutToBeVisibleForDirection:(long long)direction withTargetContentOffset:(struct CGPoint { double x0; double x1; })offset;
- (id)lastMessagePartChatItem;
- (id)indexPathForBalloonView:(id)view;
- (id)messagePartForBalloonView:(id)view;
- (id)balloonPluginForViewController:(id)controller;
- (id)balloonViewForIndexPath:(id)path;
- (id)balloonViewForChatItem:(id)item;
- (id)cellForChatItem:(id)item;
- (id)chatItemForCell:(id)cell;
- (id)chatItemForGUID:(id)guid;
- (id)associatedChatItemForGUID:(id)guid;
- (id)cellForAssociatedChatItem:(id)item;
- (void)updateTargetAlphaForVisibleChatItems;
- (void)selectChatItem:(id)item;
- (void)updateLastAddressedHandleID:(id)id lastAddressedSIMID:(id)simid;
- (void)touchUpInsideNotifyAnywayButton:(id)button;
- (void)touchUpInsideCellFailureButton:(id)button;
- (id)_indexPathOfCellContainingStampButton:(id)button;
- (void)touchUpInsideCellStampButton:(id)button;
- (void)touchUpInsideCellStatusButton:(id)button;
- (void)_handleEditHistoryButtonTappedForIndexPath:(id)path;
- (void)_handleFailedEditStatusButtonTappedForIndexPath:(id)path;
- (void)_presentMessageCanNoLongerBeEditedAlert;
- (void)_presentEditedMessageResendConfirmationAlertForMessage:(id)message;
- (void)_resendEditedMessageForChatItem:(id)item;
- (void)_handleTapOnMessageRetractionChatItem:(id)item;
- (void)_presentMessageCanNoLongerBeRetractedAlert;
- (void)_presentRetractedMessageResendConfirmationAlertForIMChatItem:(id)item;
- (void)_resendMessageRetractionForChatItem:(id)item;
- (void)_handleCommSafetyMessageSomeoneStatusButtonTappedForIndexPath:(id)path;
- (void)_handleCommSafetySensitiveReceiveStatusButtonTappedForIndexPath:(id)path;
- (void)messageGuardians;
- (void)confirmToViewAtIndexPath:(id)path;
- (void)touchUpInsideCellSpeakerButton:(id)button;
- (void)touchUpInsideCellReportSpamButton:(id)button;
- (void)reportJunkAlertControllerActionHandler;
- (id)reportJunkAlertControllerTitle;
- (void)touchUpInsideCellBlockContactButton:(id)button;
- (void)_messageParents;
- (void)_showMoreHelp;
- (void)_dismissMoreHelpView:(id)view;
- (void)_blockHandle:(id)handle;
- (void)_showLeaveConversationFromView:(id)view;
- (void)_showBlockContactSelectionAlertFromView:(id)view;
- (void)addContentAnimationPauseReasons:(long long)reasons;
- (void)removeContentAnimationPauseReasons:(long long)reasons;
- (void)updateAnimationPaused;
- (void)cullCellSubviews;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })convertedBoundsToCullFromView:(id)view;
- (void)_releaseActiveBalloonControllers;
- (void)repromptLastBlackholeFailureIfNotPrompted;
- (BOOL)shouldPresentHawkingPromptForChatItem:(id)item;
- (void)presentHawkingPromptForChatItem:(id)item;
- (id)makeHawkingPromptForMessage:(id)message toRecipient:(id)recipient fromSender:(id)sender withSMSOption:(BOOL)smsoption;
- (id)hawkingFailurePromptMessageForHandle:(id)handle;
- (void)_replayLastImpactEffectIfNotFromMe;
- (void)_downgradeMessageAtIndexPath:(id)path;
- (void)_downgradeMessageAtIndexPath:(id)path andDowngradeChat:(BOOL)chat;
- (void)_downgradeMessage:(id)message;
- (void)_downgradeMessage:(id)message andDowngradeChat:(BOOL)chat;
- (void)_resendMessageAtIndexPath:(id)path;
- (void)_launchTapToRadar;
- (void)transferRestored:(id)restored;
- (id)stateDictionaryForDiagnosticsRequest;
- (void)snapshotTaken:(id)taken;
- (void)_logVisibleChatItems;
- (void)previewDidChange:(id)change;
- (void)snapshotDidChange:(id)change;
- (void)locationStringDidChange:(id)change;
- (void)unloadCachedSizeAndReloadChatItemAtIndexPath:(id)path;
- (void)transferUpdated:(id)updated;
- (void)_forceReloadChatItems;
- (void)addressBookChanged:(id)changed;
- (void)_conversationListFinishedMerging:(id)merging;
- (void)installedAppsChanged:(id)changed;
- (void)chatItemsDidChange:(id)change;
- (void)connectivityChanged:(id)changed;
- (void)_tearDownLiveBubbles;
- (void)_refreshLocationsForRecipientsIfNecessary;
- (void)reconfigureVisibleSpeakerButtonCells;
- (void)configureSpeakerButtonCell:(id)cell forItemAtIndexPath:(id)path;
- (id)collectionViewLayout;
- (void)verticallyScrollTranscriptByAmount:(double)amount animated:(BOOL)animated completion:(id /* block */)completion;
- (void)verticallyScrollTranscriptByAmount:(double)amount animated:(BOOL)animated duration:(double)duration completion:(id /* block */)completion;
- (void)updateReplies;
- (void)updateRepliesAnimated:(BOOL)animated completion:(id /* block */)completion;
- (id)replyButtonsChatItem;
- (id)repliesListChatItem;
- (id)moreActionChatItem;
- (void)updateReplyListCellWithReplies:(id)replies;
- (id)textInputContextIdentifier;
- (void)replyTextInputCell:(id)cell enteredText:(id)text;
- (void)replyTextInputCell:(id)cell tappedReplyType:(long long)type;
- (id)viewControllerForPresentingApplicationLauncherForTextInputCell:(id)cell;
- (void)replyListCell:(id)cell tappedNanoReply:(id)reply;
- (void)suggestedRepliesDidChange:(id)change;
- (BOOL)_performActionForReply:(id)reply;
- (void)performAction:(unsigned long long)action;
- (void)languageControllerDidChangePrimaryLanguage:(id)language;
- (void)conversationPreferredServiceChanged:(id)changed;
- (id /* block */)repliesLoadedPPTCompletionBlock;
- (void)deselectAllBalloons;
- (id)selectionManagerChatItems:(id)items;
- (void)selectionManager:(id)manager didAddChatItem:(id)item selectionState:(id)state;
- (void)selectionManager:(id)manager didRemoveChatItem:(id)item;
- (void)selectionManagerDidRemoveAllSelectedChatItems:(id)items;
- (id)_chatItemForGUID:(id)guid;
- (void)selectRangeWithIndexPath:(id)path;
- (void)_searchForSelectedBalloonHack;
- (void)copySelectedChatItemsToPasteboard;
- (void)copyChatItemsToPasteboard:(id)pasteboard;
- (void)selectSingleBalloonView:(id)view;
- (BOOL)collectionView:(id)view shouldAllowSwipeForItemAtIndexPath:(id)path;
- (void)collectionView:(id)view didRecognizePanGestureWithPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_logChatItems:(id)items withUpdates:(id)updates;
- (id)_logChatItems:(id)items withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_loggingRangeForUpdates:(id)updates chatItemsCount:(long long)count;
- (BOOL)isTranscriptUpdateAnimated;
- (void)__setCurrentTestName:(id)name;
- (BOOL)isSettingChatItems;
- (BOOL)isPeeking;
@end

#endif /* CKTranscriptCollectionViewController_h */
