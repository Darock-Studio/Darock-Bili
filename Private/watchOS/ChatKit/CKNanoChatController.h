//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKNanoChatController_h
#define CKNanoChatController_h
@import Foundation;

#include "CKCoreChatController.h"
#include "CKBrowserViewControllerSendDelegate-Protocol.h"
#include "CKNanoAckowledgmentPickerViewControllerDelegate-Protocol.h"
#include "CKNanoCommSafetyEDUSendingDelegate-Protocol.h"
#include "CKNanoCommSafetySendingDelegate-Protocol.h"
#include "CKNanoCommSafetySendingHelper.h"
#include "CKNanoInlineReplyChatController.h"
#include "CKNanoInlineReplyInteractionDelegate-Protocol.h"
#include "CKNanoMoreActionController.h"
#include "CKNanoNicknameUpdateListViewControllerDelegate-Protocol.h"
#include "CKNanoNicknameUpdaterViewControllerDelegate-Protocol.h"
#include "CKNanoPluginValidationManager.h"
#include "CKNanoReplyViewControllerDismissalDelegate-Protocol.h"
#include "CKReaderViewControllerDelegate-Protocol.h"
#include "MUNanoPlaceViewControllerDelegate-Protocol.h"
#include "NPTOMomentShareViewControllerDelegate-Protocol.h"
#include "STLockoutViewControllerDelegate-Protocol.h"

@class ACAccount, IMBalloonPlugin, NSArray, NSString, STConversationContext, UIView, UIViewController, UIViewPropertyAnimator;

@interface CKNanoChatController : CKCoreChatController<CKNanoCommSafetySendingDelegate, MUNanoPlaceViewControllerDelegate, CKReaderViewControllerDelegate, CKBrowserViewControllerSendDelegate, STLockoutViewControllerDelegate, CKNanoInlineReplyInteractionDelegate, NPTOMomentShareViewControllerDelegate, CKNanoAckowledgmentPickerViewControllerDelegate, CKNanoReplyViewControllerDismissalDelegate, CKNanoNicknameUpdateListViewControllerDelegate, CKNanoNicknameUpdaterViewControllerDelegate, CKNanoCommSafetyEDUSendingDelegate>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) IMBalloonPlugin *currentPlugin;
@property (retain, nonatomic) UIViewController *fullScreenPluginViewController;
@property (retain, nonatomic) CKNanoPluginValidationManager *validationManager;
@property (retain, nonatomic) ACAccount *primaryiCloudAccount;
@property (retain, nonatomic) CKNanoMoreActionController *moreActionController;
@property (retain, nonatomic) CKNanoInlineReplyChatController *inlineReplyController;
@property (retain, nonatomic) UIView *nicknameBannerView;
@property (retain, nonatomic) NSArray *nicknameUpdates;
@property (nonatomic) double lastContentOffsetY;
@property (nonatomic) double scrollTranslateY;
@property (retain, nonatomic) UIViewPropertyAnimator *nicknameBannerAnimator;
@property (nonatomic) BOOL bannerHidden;
@property (nonatomic) double lastContentHeight;
@property (nonatomic) BOOL dragStarted;
@property (retain, nonatomic) CKNanoCommSafetySendingHelper *commSafetySendingHelper;
@property (retain, nonatomic) STConversationContext *currentScreenTimeConversationContext;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)presentUserInterventionScreensForSending:(id)sending;
- (void)confirmToSendComposition:(id)composition withModel:(id)model;
- (void)_removeLockoutViewControllerIfNeeded;
- (void)_setupLockoutChildViewControllerIfNeeded;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidAppearDeferredSetup;
- (void)parentControllerDidBecomeActive;
- (id)initWithConversation:(id)conversation;
- (void)sendComposition:(id)composition sending:(id /* block */)sending;
- (void)sendComposition:(id)composition;
- (double)balloonMaxWidth;
- (void)transcriptCollectionViewController:(id)controller didTapAttributionButtonForChatItem:(id)item parentIndexPath:(id)path;
- (void)transcriptCollectionViewController:(id)controller didTapReplyCountStatusButtonForChatItem:(id)item;
- (BOOL)transcriptCollectionViewControllerShouldPlayAudio:(id)audio;
- (void)transcriptCollectionViewController:(id)controller balloonView:(id)view longPressedForItemWithIndexPath:(id)path;
- (double)transcriptCollectionViewController:(id)controller targetAlphaForChatItem:(id)item;
- (void)dismissModal:(id)modal;
- (void)transcriptCollectionViewController:(id)controller balloonView:(id)view doubleTappedItemAtIndexPath:(id)path;
- (void)transcriptCollectionViewController:(id)controller balloonView:(id)view tappedForChatItem:(id)item;
- (id)showFullScreenAppForPlugin:(id)plugin datasource:(id)datasource;
- (void)transcriptCollectionViewController:(id)controller tappedLauncherItem:(long long)item;
- (void)transcriptCollectionViewController:(id)controller tappedTextReply:(id)reply withItemIndex:(id)index;
- (void)transcriptCollectionViewController:(id)controller enteredText:(id)text;
- (void)transcriptCollectionViewController:(id)controller tappedTextReply:(id)reply;
- (void)transcriptCollectionViewController:(id)controller performAction:(unsigned long long)action;
- (void)transcriptCollectionViewController:(id)controller balloonViewTitleTappedForItemWithIndexPath:(id)path;
- (void)transcriptCollectionViewController:(id)controller willBeginImpactEffectAnimationWithSendAnimationContext:(id)context;
- (void)transcriptCollectionViewControllerWillBeginFullscreenEffectAnimationForOutgoingMessage:(id)message;
- (void)transcriptCollectionViewController:(id)controller didEndImpactEffectAnimationWithSendAnimationContext:(id)context;
- (void)transcriptCollectionViewController:(id)controller balloonView:(id)view didRequestPresentationStyle:(unsigned long long)style forChatItem:(id)item allowAllStyles:(BOOL)styles;
- (BOOL)transcriptCollectionViewController:(id)controller balloonViewDidRequestCommitPayload:(id)payload forPlugin:(id)plugin allowAllCommits:(BOOL)commits error:(id *)error;
- (void)transcriptCollectionViewController:(id)controller balloonViewDidRequestStartEditingPayload:(id)payload forPlugin:(id)plugin allowAllCommits:(BOOL)commits completionHandler:(id /* block */)handler;
- (BOOL)transcriptCollectionViewController:(id)controller balloonViewDidRequestCommitSticker:(id)sticker forPlugin:(id)plugin allowAllCommits:(BOOL)commits error:(id *)error;
- (void)dismiss;
- (void)dismissAndReloadInputViews:(BOOL)views;
- (void)startEditingPayload:(id)payload;
- (void)startEditingPayload:(id)payload dismiss:(BOOL)dismiss;
- (void)openURL:(id)url pluginID:(id)id completionHandler:(id /* block */)handler;
- (void)openURL:(id)url applicationIdentifier:(id)identifier pluginID:(id)id completionHandler:(id /* block */)handler;
- (void)requestPresentationStyleExpanded:(BOOL)expanded;
- (void)setLocalUserIsTyping:(BOOL)typing;
- (BOOL)commitPayload:(id)payload forPlugin:(id)plugin allowAllCommits:(BOOL)commits error:(id *)error;
- (void)commitPayload:(id)payload;
- (void)_markAsReadIfNecessary;
- (void)setConversation:(id)conversation;
- (void)_updateTitleAnimated:(BOOL)animated;
- (void)_setTitle:(id)title animated:(BOOL)animated;
- (id)progressBar;
- (void)showOrHideScreenTimeShieldIfNeededForChat:(id)chat;
- (void)chatAllowedByScreenTimeChanged:(id)changed;
- (void)releaseSurfViewController:(id)controller;
- (void)_textInputModeDidChange:(id)change;
- (id)_fullScreenBalloonViewControllerWithChatItem:(id)item;
- (void)showViewerForMediaObject:(id)object;
- (void)_showMapViewerForMediaObject:(id)object;
- (void)_showVCardViewerForMediaObject:(id)object;
- (void)_showPassViewerForMediaObject:(id)object;
- (void)_displayPreviewItemForMediaObject:(id)object;
- (void)_showReaderForAggregateChatItem:(id)item balloonView:(id)view;
- (void)showFullScreenAcknowledgmentPickerForChatItem:(id)item;
- (void)acknowledgmentPickerViewController:(id)controller sendMessageAcknowledgment:(long long)acknowledgment forChatItem:(id)item;
- (void)acknowledgmentPickerViewControllerCancelled;
- (BOOL)acknowledgmentPickerViewControllerShouldShowReplyButton;
- (void)acknowledgmentPickerViewController:(id)controller replyButtonPressedForChatItem:(id)item;
- (void)acknowledgmentPickerViewController:(id)controller shareButtonPressedForChatItem:(id)item;
- (void)acknowledgmentPickerViewController:(id)controller highlightButtonPressedForChatItem:(id)item;
- (void)acknowledgmentPickerViewController:(id)controller retractButtonPressedForChatItem:(id)item;
- (void)acknowledgmentPickerViewController:(id)controller confirmedEditWithComposition:(id)composition forChatItem:(id)item;
- (void)acknowledgmentPickerViewControllerDismissed;
- (void)readerViewControllerWillDismiss:(id)dismiss;
- (void)showMemojiPicker;
- (void)showHashtagImages;
- (void)showDigitalTouchCanvasForChatItem:(id)item completion:(id /* block */)completion;
- (id)digitalTouchViewControllerForChatItem:(id)item;
- (void)showSurfAppForCurrentConversationWithAmount:(double)amount currency:(id)currency;
- (void)_dismissFullScreenPluginViewController:(id)controller;
- (void)lockoutViewControllerDidFinishDismissing:(id)dismissing;
- (void)placeViewControllerDidSelectMap:(id)map;
- (void)placeViewController:(id)controller didSelectPhoneNumber:(id)number;
- (void)showInlineReplyControllerForChatItem:(id)item presentKeyboard:(BOOL)keyboard;
- (void)showMessageEditingViewControllerForChatItem:(id)item presentKeyboard:(BOOL)keyboard;
- (void)inlineReplyControllerRequestsDismissal:(id)dismissal;
- (void)fullScreenBalloonViewController:(id)controller replyButtonPressedForChatItem:(id)item;
- (void)addPassesViewControllerDidCancel:(id)cancel;
- (void)addPassesViewControllerDidReceiveConfirmation:(id)confirmation;
- (void)momentShareController:(id)controller didSelectAsset:(id)asset;
- (void)momentShareControllerDidFailToLoad:(id)load;
- (void)momentShareControllerDidFinishLoading:(id)loading;
- (void)replyController:(id)controller triedSend:(id)send toConversation:(id)conversation;
- (void)replyControllerDidCancel:(id)cancel;
- (id)topLevelNavigationController;
- (void)registerNotifications;
- (void)nicknameStoreDidChange:(id)change;
- (BOOL)_showNicknameUpdatesIfNeeded;
- (void)_clearNicknameUpdates;
- (void)nicknameUpdateRequested:(unsigned long long)requested;
- (void)_updateOrCreateContactWithNicknameUpdate:(id)update updateName:(BOOL)name updatePhoto:(BOOL)photo updateWallpaper:(BOOL)wallpaper;
- (void)transcriptCollectionViewController:(id)controller didScroll:(struct CGPoint { double x0; double x1; })scroll;
- (double)_nicknameBannerAnimatorProgress:(double)progress;
- (BOOL)_nicknameBannerAnimatorIsShowing;
- (void)transcriptCollectionViewController:(id)controller willBeginDragging:(struct CGPoint { double x0; double x1; })dragging;
- (void)transcriptCollectionViewController:(id)controller willEndDragging:(struct CGPoint { double x0; double x1; })dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)offset;
- (id)nicknameUpdatesForController:(id)controller;
- (void)dismissNicknameUpdateController:(id)controller;
- (void)nicknameUpdateListViewController:(id)controller selectedAction:(unsigned long long)action forNicknameUpdate:(id)update;
- (void)updateAll;
- (void)nicknameUpdaterViewController:(id)controller selectedAction:(unsigned long long)action forNicknameUpdate:(id)update;
- (void)messageGuardians;
- (void)confirmToSendWithComposition:(id)composition forComposeModel:(id)model;
@end

#endif /* CKNanoChatController_h */
