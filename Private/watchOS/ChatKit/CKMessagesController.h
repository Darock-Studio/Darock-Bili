//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKMessagesController_h
#define CKMessagesController_h
@import Foundation;

#include "UISplitViewController.h"
#include "CKAlertController.h"
#include "CKAlertSuppressionContextsProviding-Protocol.h"
#include "CKConversation.h"
#include "CKConversationListControllerDelegate-Protocol.h"
#include "CKCoreChatController.h"
#include "CKCoreChatControllerDelegate-Protocol.h"
#include "CKMacToolbarController.h"
#include "CKMessagesControllerDelegate-Protocol.h"
#include "CKMessagesNavigationProviding-Protocol.h"
#include "CKNanoCommSafetyEDUSendingDelegate-Protocol.h"
#include "CKNanoComposeControllerTypeDismissalDelegate-Protocol.h"
#include "CKNanoConversationListModel.h"
#include "CKNanoConversationListSelectionDelegate-Protocol.h"
#include "CKNanoMakoViewController.h"
#include "CKNanoSiriTaskServiceDelegate.h"
#include "CKSelectionViewController.h"
#include "IMFocusStateManagerDelegate-Protocol.h"
#include "NCABMakoEligibilityDelegate-Protocol.h"
#include "UINavigationControllerDelegate-Protocol.h"
#include "UIResponderStandardEditActions-Protocol.h"
#include "UISplitViewControllerDelegate-Protocol.h"

@class CKDetailsNavigationController, NCABMakoEligibilityController, NSArray, NSMutableArray, NSSet, NSString, UINavigationController, UIViewController;
@protocol UIViewController<CKConversationListControllerProtocol;

@interface CKMessagesController : UISplitViewController<CKNanoCommSafetyEDUSendingDelegate, UISplitViewControllerDelegate, CKCoreChatControllerDelegate, IMFocusStateManagerDelegate, UINavigationControllerDelegate, UIResponderStandardEditActions, CKNanoComposeControllerTypeDismissalDelegate, NCABMakoEligibilityDelegate, CKNanoConversationListSelectionDelegate, CKAlertSuppressionContextsProviding, CKConversationListControllerDelegate, CKMessagesNavigationProviding> {
  /* instance variables */
  unsigned int _attachmentPreviewQosClass;
  id /* block */ _composeDismissHandler;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) CKSelectionViewController *selectionViewController;
@property (retain, nonatomic) CKCoreChatController *chatController;
@property (retain, nonatomic) CKCoreChatController *composeChatController;
@property (retain, nonatomic) UINavigationController *composeChatNavigationController;
@property (retain, nonatomic) UINavigationController *conversationListNavigationController;
@property (retain, nonatomic) CKConversation *currentConversation;
@property (retain, nonatomic) UIViewController *inboxViewController;
@property (retain, nonatomic) CKMacToolbarController *macToolbarController;
@property (nonatomic) unsigned long long supportedInterfaceOrientations;
@property (retain, nonatomic) CKNanoConversationListModel *conversationListModel;
@property (retain, nonatomic) UIViewController *conversationListViewController;
@property (retain, nonatomic) NCABMakoEligibilityController *makoAccountController;
@property (retain, nonatomic) CKNanoMakoViewController *makoRootController;
@property (retain, nonatomic) CKNanoSiriTaskServiceDelegate *nanoSiriTaskServiceDelegate;
@property (nonatomic) BOOL isInitialLoad;
@property (retain, nonatomic) UIViewController *statusBarStyleViewController;
@property (weak, nonatomic) CKAlertController *currentSMSRelayPinAlert;
@property (retain, nonatomic) NSMutableArray *pendingSMSRelayPINPrompts;
@property (nonatomic) struct { double x0; double x1; BOOL x2; BOOL x3; BOOL x4; } columnResizeParams;
@property (retain, nonatomic) NSArray *windowToConversationListConstraints;
@property (nonatomic) BOOL forceOrientation;
@property (nonatomic) BOOL oscarModal;
@property (weak, nonatomic) NSObject<CKMessagesControllerDelegate> *messagesControllerDelegate;
@property (readonly, nonatomic) UIViewController<CKConversationListControllerProtocol> *conversationListController;
@property (weak, nonatomic) CKDetailsNavigationController *detailsNavigationController;
@property (readonly, nonatomic) BOOL isShowingConversationListController;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSSet *alertSuppressionContexts;
@property (readonly, nonatomic) BOOL isCollapsed;
@property (readonly, nonatomic) BOOL isAnimatingMessageSend;
@property (readonly, nonatomic) BOOL isShowingChatController;
@property (readonly, nonatomic) BOOL isShowingComposeChatController;
@property (copy, nonatomic) id /* block */ deferredHandleURLBlock;
@property (readonly, nonatomic) UIViewController *presentedViewController;

/* instance methods */
- (void)cleanupChatItems;
- (void)messageSomeonePressed;
- (void)messageGuardians;
- (void)confirmToSendWithComposition:(id)composition forComposeModel:(id)model;
- (void)dealloc;
- (id)init;
- (id)initAsOscarModal;
- (id)initWithStyle:(long long)style;
- (void)initialize;
- (void)loadView;
- (void)_populateChatNavigationControllerWithSelection;
- (void)didSelectConversation:(id)conversation;
- (void)didSelectCreateNewMessage;
- (void)willDeleteConversations:(id)conversations;
- (void)runTestWithName:(id)name options:(id)options;
- (id)conversationListControllerIfInitialized;
- (void)makoEligibilityDidChange:(BOOL)change;
- (void)conversationListControllerTappedDeleteNewMessage:(id)message;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (BOOL)daemonIsConnected;
- (void)_handleInitialLoad;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)disappear;
- (id)childViewControllerForStatusBarHidden;
- (void)didReceiveMemoryWarning;
- (BOOL)becomeFirstResponder;
- (id)conversationList;
- (void)performResumeDeferredSetup;
- (void)performVisibleAppPluginIconPrefetch:(id)prefetch;
- (void)dismissKeyboardIfVisible;
- (void)performSearchForQuery:(id)query;
- (void)prepareForSuspend;
- (void)prepareForResume;
- (void)parentControllerDidResume:(BOOL)resume animating:(BOOL)animating;
- (void)parentControllerDidBecomeActive;
- (void)focusStateDidChange;
- (BOOL)_shouldShowSMSRelayPromptOnLaunch;
- (BOOL)_shouldShowSMSRelayPrompt;
- (void)_showSMSRelayPromptOnLaunchIfNeeded;
- (void)_showSMSRelayPromptIfNeeded;
- (void)_showNextSMSRelayPINPrompt;
- (void)_smsRelayPINReceived:(id)pinreceived;
- (void)_pinVerificationShouldDismiss:(id)dismiss;
- (id)preferredFocusEnvironments;
- (Class)composeControllerClass;
- (id)composeController;
- (id)composeControllerWithRecipients:(id)recipients message:(id)message;
- (void)showNanoCompose;
- (void)composeController:(id)controller didSendToConversation:(id)conversation;
- (void)composeControllerDidCancel:(id)cancel;
- (void)chatController:(id)controller willSendComposition:(id)composition inConversation:(id)conversation;
- (void)chatController:(id)controller didSendCompositionInConversation:(id)conversation;
- (void)chatController:(id)controller didReportSpamForConversation:(id)conversation;
- (void)chatController:(id)controller requestDeleteJunkConversation:(id)conversation;
- (void)chatController:(id)controller requestRecoverJunkConversation:(id)conversation;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })initialSystemMinimumLayoutMarginsForChatController:(id)controller;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })initialSafeAreaInsetsForChatController:(id)controller;
- (void)navigationController:(id)controller didShowViewController:(id)controller animated:(BOOL)animated;
- (BOOL)_hasCurrentConversations;
- (long long)splitViewController:(id)controller topColumnForCollapsingToProposedTopColumn:(long long)column;
- (long long)splitViewController:(id)controller displayModeForExpandingToProposedDisplayMode:(long long)mode;
- (BOOL)splitViewController:(id)controller collapseSecondaryViewController:(id)controller ontoPrimaryViewController:(id)controller;
- (void)dismissPhotosGridIfNeeded;
- (id)splitViewController:(id)controller separateSecondaryViewControllerFromPrimaryViewController:(id)controller;
- (void)willTransitionToTraitCollection:(id)collection withTransitionCoordinator:(id)coordinator;
- (BOOL)_splitViewControllerShouldRestoreResponderAfterTraitCollectionTransition:(id)transition;
- (double)_splitViewController:(id)controller constrainPrimaryColumnWidthForResizeWidth:(double)width;
- (void)_splitViewController:(id)controller willBeginResizingColumn:(long long)column;
- (void)splitViewController:(id)controller willShowColumn:(long long)column;
- (void)splitViewController:(id)controller willHideColumn:(long long)column;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (void)dismissChatControllerIfVisibleAnimated:(BOOL)animated;
- (void)popToConversationListIfNecessaryAnimated:(BOOL)animated;
- (void)setCurrentConversation:(id)conversation keepAllCurrentlyLoadedMessages:(BOOL)messages;
- (BOOL)_isShowingFullscreenController;
- (BOOL)_isShowingModalChatController;
- (BOOL)_isShowingExpandedAppViewController;
- (void)__updateAlertSuppressionContext;
- (void)_updateAlertSuppressionContext;
- (void)_popToConversationListAndPerformBlockAnimated:(BOOL)animated block:(id /* block */)block;
- (void)_setIsShowingNoSelectionUI:(BOOL)ui;
- (void)setupBizNavBarForConversation:(id)conversation;
- (void)cleanUpBizNavBarForConversation:(id)conversation;
- (void)_conversationLeft:(id)left;
- (void)_conversationListFinishedMerging:(id)merging;
- (void)_chatRegistryDidLoad:(id)load;
- (void)_appStateChange:(id)change;
- (void)applicationWillResume:(id)resume;
- (void)_appStateDidResumeFromInactive:(id)inactive;
- (id)baseViewControllersForConversationListNavigationController;
- (id)nonConversationListControllersInNavigationStack;
- (void)updateInboxAndConversationList;
- (void)showInboxViewControllerAnimated:(BOOL)animated;
- (void)changeFilterMode:(unsigned long long)mode;
- (id)inboxItemForFilterMode:(unsigned long long)mode title:(id)title andSystemImage:(id)image;
- (id)inboxItemForFilterMode:(unsigned long long)mode localizedTitle:(id)title andSystemImage:(id)image;
- (id)newInboxModel;
- (id)_unreadCountStringForFilterMode:(unsigned long long)mode;
- (void)persistColumnWidths:(id)widths;
- (void)updateColumnWidths;
- (void)_updateInboxWidth;
- (void)_updateConversationListWidth;
- (double)_calculateConversationListColumnWidth;
- (double)_macConvertLegacySidebarWidthToModernWidth:(double)width;
- (double)_sanitizeProposedConversationListWidth:(double)width;
- (void)conversationListControllerWillPresentSearchResultsController;
- (void)conversationListControllerWillDismissSearchResultsController;
- (void)conversationListUpdatedSelectedIndexPathCount:(long long)count;
- (void)updatedFilterMode:(unsigned long long)mode previousFilterMode:(unsigned long long)mode;
- (void)_updateSelectionViewWithCount:(long long)count;
- (id)_recentlyDeletedDisclosureText;
- (void)dismissConversationListAnimated:(BOOL)animated;
- (void)conversationListDidBeginMultipleSelectionWithInitialSelectedCount:(long long)count;
- (id)currentlyShownConversation;
- (void)catalystFiltersNavigationBackButtonTapped:(id)tapped;
- (void)_conversationFilteringStateChangedNotification:(id)notification;
- (void)screenTimeOKPressedForChatController:(id)controller;
- (void)updateForNoConversationSelected;
- (void)conversationListFailedToSelectShownConversation;
- (void)executeDeferredTasks;
- (void)executeDeferredHandleURLBlock;
- (void)presentFocusStatusAuthorizationAlertIfNecessary;
- (id)_sharedBalloonPluginManager;
- (void)showNewMessageCompositionPanel;
- (void)showNewMessageCompositionPanelWithRecipients:(id)recipients composition:(id)composition animated:(BOOL)animated;
- (void)showNewMessageCompositionPanelAppendingToExistingDraft:(id)draft animated:(BOOL)animated;
- (void)showNewMessageCompositionPanelWithRecipients:(id)recipients composition:(id)composition suggestedReplies:(id)replies animated:(BOOL)animated;
- (void)showNewMessageCompositionPanelWithRecipients:(id)recipients composition:(id)composition suggestedReplies:(id)replies animated:(BOOL)animated sendMessageHandler:(id /* block */)handler;
- (void)showNewMessageCompositionPanelWithRecipients:(id)recipients composition:(id)composition animated:(BOOL)animated bizIntent:(id)intent launchPluginWithBundleID:(id)id pluginLaunchPayload:(id)payload;
- (void)showNewMessageCompositionPanelWithRecipients:(id)recipients composition:(id)composition suggestedReplies:(id)replies animated:(BOOL)animated bizIntent:(id)intent launchPluginWithBundleID:(id)id pluginLaunchPayload:(id)payload sendMessageHandler:(id /* block */)handler;
- (void)showNewMessageCompositionPanelWithRecipients:(id)recipients composition:(id)composition appendToExistingDraft:(BOOL)draft suggestedReplies:(id)replies animated:(BOOL)animated bizIntent:(id)intent launchPluginWithBundleID:(id)id pluginLaunchPayload:(id)payload sendMessageHandler:(id /* block */)handler;
- (void)showNewMessageCompositionPanelWithRecipients:(id)recipients composition:(id)composition suggestedReplies:(id)replies animated:(BOOL)animated bizIntent:(id)intent launchPluginWithBundleID:(id)id pluginLaunchPayload:(id)payload simID:(id)id sendMessageHandler:(id /* block */)handler;
- (void)showNewMessageCompositionPanelWithRecipients:(id)recipients composition:(id)composition appendToExistingDraft:(BOOL)draft suggestedReplies:(id)replies animated:(BOOL)animated bizIntent:(id)intent launchPluginWithBundleID:(id)id pluginLaunchPayload:(id)payload simID:(id)id sendMessageHandler:(id /* block */)handler;
- (void)_showNanoComposeWithRecipients:(id)recipients composition:(id)composition suggestedReplies:(id)replies animated:(BOOL)animated sendMessageHandler:(id /* block */)handler;
- (void)cancelNewMessageCompositionAnimated:(BOOL)animated;
- (BOOL)hasBusinessRecipientWithRecipientIDs:(id)ids;
- (void)showConversation:(id)conversation animate:(BOOL)animate forceToTranscript:(BOOL)transcript keepAllCurrentlyLoadedMessages:(BOOL)messages;
- (void)showConversation:(id)conversation animate:(BOOL)animate forceToTranscript:(BOOL)transcript keepAllCurrentlyLoadedMessages:(BOOL)messages userInitiated:(BOOL)initiated;
- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
- (BOOL)_changeFilterModeIfNeeded;
- (id)junkModalMessagesController;
- (BOOL)isDownTimeActiveForCurrentChat;
- (void)showConversationInNewWindow:(id)window;
- (void)showConversation:(id)conversation animate:(BOOL)animate;
- (void)showConversation:(id)conversation animate:(BOOL)animate userInitiated:(BOOL)initiated;
- (void)showConversation:(id)conversation animate:(BOOL)animate keepAllCurrentlyLoadedMessages:(BOOL)messages;
- (void)showConversationAndMessageForChatGUID:(id)guid messageGUID:(id)guid animate:(BOOL)animate;
- (void)chatControllerDidReselectConversation:(id)conversation;
- (void)showConversationAndMessageForChatGUID:(id)guid messageGUID:(id)guid withInlineReplyOverlay:(BOOL)overlay animate:(BOOL)animate;
- (BOOL)resumeToConversation:(id)conversation;
- (void)deleteConversation:(id)conversation;
- (id)firstConversationExactlyMatchingDisplayName:(id)name;
- (id)conversationMatchingGUID:(id)guid;
- (void)showConversationListWithAnimation:(BOOL)animation;
- (BOOL)_isTimedOutForState:(id)state;
- (BOOL)shouldRestoreToConversationListForState:(id)state;
- (void)_hideConversationListForIPadPPTTest;
- (void)conversationListWillBeginEditing:(BOOL)editing;
- (void)conversationListIsDeletingConversations:(id)conversations;
- (BOOL)isShowingSelectionView;
- (BOOL)isComposingMessage;
- (BOOL)currentCompositionHasContent;
- (BOOL)isTopVCChatNavigationController;
- (BOOL)isShowingInboxViewController;
- (BOOL)hasUnreadFilteredConversationsIgnoringMessages:(id)messages;
- (BOOL)showUnreadConversationsWithLastConversation:(id)conversation ignoringMessages:(id)messages;
- (void)_unreadCountDidChange:(id)change;
- (void)_junkConversationsRecovered:(id)recovered;
- (BOOL)isShowingChatControllerWithUnsentText;
- (BOOL)shouldShowMakoIMessageAlert;
- (void)showMakoIMessageAlert;
- (void)notifyThatKeepMessagesSettingWasResetIfNeeded;
- (void)showStoreForURL:(id)url fromSourceApplication:(id)application;
- (void)showSurfAppForCurrentConversationWithAmount:(double)amount currency:(id)currency;
- (void)_presentAppStoreWithLaunchURL:(id)url fromSourceApplication:(id)application;
- (void)dismiss;
- (void)_setEntryViewHidden:(BOOL)hidden;
- (void)didBeginInstallingAppWithBundleIdentifier:(id)identifier;
- (void)updateCompositionInEntryViewWithComposition:(id)composition;
- (void)commitPayload:(id)payload;
- (void)startEditingPayload:(id)payload;
- (void)startEditingPayload:(id)payload dismiss:(BOOL)dismiss;
- (void)setLocalUserIsTyping:(BOOL)typing;
- (void)openURL:(id)url pluginID:(id)id completionHandler:(id /* block */)handler;
- (void)openURL:(id)url applicationIdentifier:(id)identifier pluginID:(id)id completionHandler:(id /* block */)handler;
- (void)presentAlertWithTitle:(id)title message:(id)message buttonTitle:(id)title completion:(id /* block */)completion;
- (BOOL)shouldPresentOnboarding;
- (void)presentOnboardingViewControllerIfNeeded;
- (void)presentOnboardingViewController:(id)controller;
- (void)presentPrivacyView:(id)view;
- (id)_fetchMeContactWithError:(id *)error;
- (void)presentPhotoPicker:(id)picker;
- (void)presentFromPrefsPresentationController;
- (void)showBusinessChatNotSupportedAlert;
- (void)prewarmCameraIfNecessary;
- (void)teardownCamera;
- (BOOL)_shouldShowInboxView;
- (BOOL)_isMessageFilteringEnabled;
- (BOOL)_wantsThreeColumnLayout;
- (BOOL)isOscarModal;
@end

#endif /* CKMessagesController_h */
