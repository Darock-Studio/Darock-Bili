//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKImageData_h
#define CKImageData_h
@import Foundation;

#include "IMImageDataProtocol-Protocol.h"

@class NSData, NSString, NSURL, UIImage;

@interface CKImageData : NSObject<IMImageDataProtocol>

@property (retain, nonatomic) NSData *data;
@property (retain, nonatomic) NSURL *url;
@property (retain, nonatomic) UIImage *image;
@property (nonatomic) struct CGImageSource * imageSource;
@property (nonatomic) unsigned long long count;
@property (nonatomic) long long orientation;
@property (nonatomic) struct CGSize { double x0; double x1; } pxSize;
@property (nonatomic) BOOL initializedProperties;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } ptSize;
@property (readonly, copy, nonatomic) NSString *UTIType;
@property (readonly, copy, nonatomic) NSString *MIMEType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)UTITypeForData:(id)data;
+ (BOOL)supportsASTC;

/* instance methods */
- (void)dealloc;
- (id)initWithData:(id)data;
- (id)initWithURL:(id)url;
- (id)thumbnailFitToSize:(struct CGSize { double x0; double x1; })size;
- (id)thumbnailFillToSize:(struct CGSize { double x0; double x1; })size;
- (id)thumbnailFillToSizeCropping:(struct CGSize { double x0; double x1; })cropping;
- (id)thumbnailsFitToSize:(struct CGSize { double x0; double x1; })size maxCount:(unsigned long long)count;
- (id)thumbnailAtIndex:(unsigned long long)index fillToSize:(struct CGSize { double x0; double x1; })size maxCount:(unsigned long long)count;
- (id)thumbnailsFillToSize:(struct CGSize { double x0; double x1; })size maxCount:(unsigned long long)count;
- (id)_defaultDurationsWithMaxCount:(unsigned long long)count;
- (id)durationsWithMaxCount:(unsigned long long)count;
- (void)_initializeProperties;
- (id)_thumbnailFitToSize:(struct CGSize { double x0; double x1; })size atIndex:(unsigned long long)index;
- (struct CGSize { double x0; double x1; })sizeForImageSource:(struct CGImageSource *)source index:(unsigned long long)index;
- (id)_thumbnailFillToSize:(struct CGSize { double x0; double x1; })size atIndex:(unsigned long long)index;
@end

#endif /* CKImageData_h */
