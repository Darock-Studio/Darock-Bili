//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKNanoConversationListModel_h
#define CKNanoConversationListModel_h
@import Foundation;

#include "CKConversationsModel-Protocol.h"
#include "CKNanoConversationListSelectionDelegate-Protocol.h"
#include "CKScheduledUpdater.h"

@class BOOL *, CNContactStore, NSArray, NSDate, NSMutableArray, NSMutableDictionary;
@protocol CKConversationsModelDelegate;

@interface CKNanoConversationListModel : NSObject<CKConversationsModel>

@property (retain, nonatomic) NSMutableDictionary *conversationViewModelsMap;
@property (retain, nonatomic) NSMutableDictionary *pinnedConversationViewModelsMap;
@property (retain, nonatomic) NSMutableArray *conversationIdentifiers;
@property (copy, nonatomic) NSArray *frozenConversations;
@property (retain, nonatomic) CNContactStore *contactStore;
@property (retain, nonatomic) CKScheduledUpdater *updater;
@property (copy, nonatomic) NSDate *firstConversationDate;
@property (weak, nonatomic) NSObject<CKNanoConversationListSelectionDelegate> *selectionDelegate;
@property (weak, nonatomic) NSObject<CKConversationsModelDelegate> *delegate;
@property (nonatomic) unsigned long long filterMode;
@property (readonly, nonatomic) BOOL inboxFilterEnabled;
@property (readonly, nonatomic) NSArray *supportedFilterModes;
@property (nonatomic) unsigned long long inboxFilterMode;

/* instance methods */
- (id)initWithSelectionDelegate:(id)delegate;
- (id)activeConversations;
- (void)configureObservers;
- (void)beginHoldingConversationListUpdatesForPPTTests;
- (void)endHoldingConversationListUpdatesForPPTTests;
- (void)beginHoldingConversationListUpdatesForKey:(id)key;
- (void)endHoldingAllConversationListUpdatesForKey:(id)key;
- (void)endHoldingAllConversationListUpdatesForKeyWithoutUpdate:(id)update;
- (void)endHoldingConversationListUpdatesForKey:(id)key;
- (void)endHoldingAllConversationListUpdates;
- (void)startConversationUpdates;
- (void)endConversationUpdates;
- (void)pauseConversationUpdates;
- (void)resumeConversationUpdates;
- (void)finishPPTLaunchTestIfNeccessary;
- (void)_chatUnreadCountDidChange:(id)change;
- (void)_chatParticipantsChangedNotification:(id)notification;
- (void)_conversationIsFilteredChangedNotification:(id)notification;
- (void)_conversationDisplayNameChangedNotification:(id)notification;
- (void)_conversationMuteDidChangeNotification:(id)notification;
- (void)_conversationFilteringStateChangedNotification:(id)notification;
- (void)_conversationSpamFilteringStateChangedNotification:(id)notification;
- (void)_conversationContactPhotosEnabledChangedNotification:(id)notification;
- (void)_conversationPinStateChangedNotification:(id)notification;
- (void)_chatItemsDidChange:(id)change;
- (void)_updateByChangedChat:(id)chat;
- (void)_updatePinnedViewModel:(id)model forChat:(id)chat;
- (BOOL)_needResortListByChatChange:(id)change withFirstConversation:(id)conversation;
- (void)_updateViewModelForChangedConversation:(id)conversation;
- (void)_multiWayCallStateChanged:(id)changed;
- (void)_chatWatermarkDidChange:(id)change;
- (void)_conversationListDidFinishLoadingConversations:(id)conversations;
- (void)_reloadPinnedConversations;
- (void)_contactStoreDidFinishLoadingNotification:(id)notification;
- (void)_conversationListDidChange:(id)change;
- (void)_conversationMessageWasSent:(id)sent;
- (void)_refreshConversationList;
- (void)updateConversationNamesForNicknames:(id)nicknames;
- (void)_pinnedConversationsChanged:(id)changed;
- (void)_avatarCacheChanged:(id)changed;
- (void)updateConversationListForMessageSentToConversation:(id)conversation;
- (void)userDeletedJunkConversationFromTranscript;
- (void)userRecoveredJunkConversationFromTranscript;
- (void)shouldUpdateConversationList;
- (void)updateConversationList;
- (void)updateConversationListWithoutResort;
- (void)_updateConversationListNeedsResort:(BOOL)resort;
- (BOOL)_needShowTableWhenNoActiveConversation;
- (void)updateSMSSpamConversationsDisplayName;
- (void)_updateConversationFilteredFlagsAndReportSpam;
- (void)_updateConversationListsAndSortIfEnabled;
- (BOOL)_messageUnknownFilteringEnabled;
- (BOOL)_messageSpamFilteringEnabled;
- (void)_handleAccountRegistrationChange:(id)change;
- (void)_downtimeStateChanged:(id)changed;
- (void)_chatAllowedByScreenTimeChanged:(id)changed;
- (void)_updateViewModelBlockedStateForChat:(id)chat;
- (id)_getTitleForCurrentFilterMode;
- (BOOL)_shouldHaveAllFilterModes;
- (void)reloadData;
- (id)viewModelForPinnedConversationWithIdentifier:(id)identifier forSize:(struct CGSize { double x0; double x1; })size;
- (id)viewModelForConversationWithIdentifier:(id)identifier;
- (id)viewModelForConversation:(id)conversation;
- (struct CGSize { double x0; double x1; })avatarSize;
- (id)messageFromConversation:(id)conversation isBlocked:(BOOL *)blocked blockedMessage:(id *)message;
- (void)selectConversationWithIdentifier:(id)identifier;
- (void)createNewMessage;
- (void)deleteConversationsWithIdentifiers:(id)identifiers;
- (void)toggleMuteForConversationWithIdentifier:(id)identifier;
- (void)toggleMessageReadStatusInConversationWithIdentifier:(id)identifier;
- (BOOL)coversationHasUnreadMessagesWithIdentifier:(id)identifier;
- (void)deleteConversation:(id)conversation;
- (void)deleteConversationAtIndex:(long long)index;
- (void)conversationWillBeMarkedRead:(id)read;
@end

#endif /* CKNanoConversationListModel_h */
