//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKImageMediaObject_h
#define CKImageMediaObject_h
@import Foundation;

#include "CKMediaObject.h"
#include "CKImageData.h"
#include "NSSecureCoding-Protocol.h"

@class IMSticker, NSString, NSURL, PHLivePhoto, UIImage;

@interface CKImageMediaObject : CKMediaObject<NSSecureCoding> {
  /* instance variables */
  CKImageData *_backgroundImageData;
  NSURL *_appendedBundleURL;
  struct CGSize { double width; double height; } _originalSize;
  NSString *_irisVideoPath;
}

@property (readonly, nonatomic) BOOL isSticker;
@property (readonly, nonatomic) CKImageData *imageData;
@property (retain, nonatomic) UIImage *thumbnail;
@property (readonly, nonatomic) BOOL screenshot;
@property (retain, nonatomic) IMSticker *sticker;
@property (readonly, nonatomic) BOOL isIrisAsset;
@property (readonly, nonatomic) PHLivePhoto *livePhoto;

/* class methods */
+ (id)UTITypes;
+ (id)fallbackFilenamePrefix;
+ (BOOL)isPreviewable;
+ (Class)imageDataClass;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)_cknmp_presenterTitle;
- (Class)_cknmp_mediaPresenterClass;
- (id)initWithTransfer:(id)transfer context:(id)context forceInlinePreview:(BOOL)preview;
- (id)metricsCollectorMediaType;
- (id)attachmentSummary:(unsigned long long)summary;
- (int)mediaType;
- (id)location;
- (BOOL)supportsUnknownSenderPreview;
- (id)bbPreviewFillToSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })bbSize;
- (BOOL)validatePreviewFormat;
- (id)generateThumbnailForWidth:(double)width orientation:(char)orientation;
- (id)generateThumbnailFillToSize:(struct CGSize { double x0; double x1; })size contentAlignmentInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (id)generatePreviewFromThumbnail:(id)thumbnail width:(double)width orientation:(char)orientation;
- (BOOL)canExport;
- (void)legacyExport;
- (id)getIrisVideoPath;
- (id)calculateIrisVideoPath;
- (BOOL)isPhotosCompatible;
- (BOOL)canShareItem;
- (id)previewItemURL;
- (id)previewItemTitle;
- (BOOL)isScreenshot;
- (struct CGSize { double x0; double x1; })originalSize;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* CKImageMediaObject_h */
