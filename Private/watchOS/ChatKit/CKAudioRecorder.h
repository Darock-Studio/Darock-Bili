//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKAudioRecorder_h
#define CKAudioRecorder_h
@import Foundation;

#include "CKVoiceController.h"
#include "CKVoiceControllerDelegate-Protocol.h"

@class NSDate, NSString, NSURL;
@protocol CKAudioRecorderDelegate;

@interface CKAudioRecorder : NSObject<CKVoiceControllerDelegate>

@property (nonatomic) BOOL recording;
@property (nonatomic) BOOL recordingEmpty;
@property (nonatomic) BOOL cancelled;
@property (retain, nonatomic) CKVoiceController *voiceController;
@property (retain, nonatomic) NSDate *startDate;
@property (nonatomic) BOOL shouldPlayStartSound;
@property (nonatomic) BOOL shouldPlayStopSound;
@property (nonatomic) struct OpaqueAudioFileID * fileID;
@property (weak, nonatomic) NSObject<CKAudioRecorderDelegate> *delegate;
@property (readonly, nonatomic) double duration;
@property (copy, nonatomic) id /* block */ completion;
@property (nonatomic) long long totalPacketsCount;
@property (retain, nonatomic) NSURL *fileURL;
@property (nonatomic) BOOL paused;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)dealloc;
- (id)init;
- (void)startRecordingForRaiseGesture;
- (void)startRecordingAndPlaySound:(BOOL)sound;
- (void)startRecordingForRaiseGesture:(BOOL)gesture shouldPlaySound:(BOOL)sound;
- (void)openExistingAudioFile;
- (void)createNewAudioFile;
- (void)stopRecording:(id /* block */)recording;
- (void)stopRecordingAndPlaySound:(BOOL)sound completion:(id /* block */)completion;
- (void)cancelRecording;
- (void)voiceControllerDidDetectStartpoint:(id)startpoint;
- (void)voiceControllerDidStartRecording:(id)recording;
- (void)voiceControllerDidFinishRecording:(id)recording successfully:(BOOL)successfully;
- (void)voiceControllerRecordBufferAvailable:(id)available buffer:(id)buffer;
- (void)voiceController:(id)controller didUpdateAveragePower:(float)power;
- (void)resumeRecording;
- (float)averagePower;
- (void)resetState;
- (void)applicationDidEnterBackground:(id)background;
- (BOOL)isPaused;
- (BOOL)isRecording;
- (BOOL)isRecordingEmpty;
- (BOOL)isCancelled;
@end

#endif /* CKAudioRecorder_h */
