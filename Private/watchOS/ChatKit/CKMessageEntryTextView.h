//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKMessageEntryTextView_h
#define CKMessageEntryTextView_h
@import Foundation;

#include "UITextView.h"

@class NSAttributedString, NSDictionary, NSString, UIColor, UIKeyboardInputMode;

@interface CKMessageEntryTextView : UITextView

@property (nonatomic) BOOL showingDictationPlaceholder;
@property (retain, nonatomic) UIKeyboardInputMode *savedKeyboardInputMode;
@property (nonatomic) BOOL pencilWriting;
@property (copy, nonatomic) NSAttributedString *compositionText;
@property (copy, nonatomic) NSString *placeholderText;
@property (copy, nonatomic) UIColor *placeholderColor;
@property (nonatomic) double placeHolderWidth;
@property (readonly, nonatomic) BOOL singleLine;
@property (nonatomic) BOOL inPencilMode;
@property (nonatomic) BOOL shouldStripEmojis;
@property (copy, nonatomic) NSDictionary *proofreadingInfo;
@property (nonatomic) BOOL sendCurrentLocationFromKeyboardEnabled;
@property (nonatomic) BOOL updatesFontOnTextChange;
@property (nonatomic) BOOL hideCaret;
@property (nonatomic) BOOL hideCaretUntilUserTypes;
@property (nonatomic) BOOL preventShowingCalloutMenu;
@property (nonatomic) double adjustedLineFragmentPadding;

/* instance methods */
- (void)dealloc;
- (BOOL)resignFirstResponder;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame textContainer:(id)container;
- (void)setupTextViewFromInitWithTextLayoutManagerWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initUsingTextLayoutManagerWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })caretRectForPosition:(id)position;
- (void)setFont:(id)font;
- (void)setAttributedText:(id)text;
- (id)insertDictationResultPlaceholder;
- (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;
- (SEL)_sendCurrentLocationAction;
- (void)_updateAttributedPlaceholder;
- (void)_layoutPlaceholder;
- (BOOL)isSingleLine;
- (BOOL)shouldIncludeDictationPadding;
- (void)updateFontIfNeeded;
- (void)saveKeyboardInputMode;
- (void)restoreKeyboardInputMode;
- (void)setupScribbleInteraction;
- (void)_stripEmojisIfNecessary;
- (void)updatePlaceholderLabelIfNeeded;
- (void)updateTextView;
- (void)textViewDidChange:(id)change;
- (BOOL)isShowingDictationPlaceholder;
- (BOOL)isInPencilMode;
- (BOOL)isPencilWriting;
@end

#endif /* CKMessageEntryTextView_h */
