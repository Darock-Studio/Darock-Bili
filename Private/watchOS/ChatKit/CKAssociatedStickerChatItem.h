//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef CKAssociatedStickerChatItem_h
#define CKAssociatedStickerChatItem_h
@import Foundation;

#include "CKAssociatedMessageChatItem.h"
#include "CKMediaObject.h"

@class IMSticker, NSDictionary, NSNumber, NSString;

@interface CKAssociatedStickerChatItem : CKAssociatedMessageChatItem

@property (copy, nonatomic) IMSticker *sticker;
@property (retain, nonatomic) CKMediaObject *mediaObject;
@property (readonly, copy, nonatomic) NSString *transferGUID;
@property (readonly, nonatomic) NSDictionary *stickerUserInfo;
@property (readonly, nonatomic) NSDictionary *attributionInfo;
@property (readonly, nonatomic) NSString *stickerPackName;
@property (readonly, nonatomic) NSString *stickerPackGUID;
@property (readonly, nonatomic) NSNumber *adamID;
@property (readonly, nonatomic) BOOL isCustomSticker;
@property (readonly, nonatomic) BOOL isDeletable;
@property (readonly, nonatomic) BOOL canShowInAppStore;
@property (readonly, nonatomic) BOOL isReaction;
@property (nonatomic) long long stickerReactionIndex;
@property (readonly, nonatomic) BOOL isDraggable;

/* class methods */
+ (double)computeHorizontalStickerFrameOffset:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })offset parentSize:(struct CGSize { double x0; double x1; })size forPositioningWithinContentAlignmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect geometryDescriptor:(struct IMAssociatedMessageGeometryDescriptor { unsigned long long x0; unsigned long long x1; double x2; double x3; double x4; double x5; double x6; })descriptor forTranscriptOrientation:(char)orientation;
+ (id)_showingStickers;
+ (id)_droppedStickers;
+ (BOOL)userHasDraggedSticker;
+ (void)setUserHasDraggedSticker:(BOOL)sticker;
+ (void)addDroppedSticker:(id)sticker;
+ (void)removeDroppedSticker:(id)sticker;
+ (BOOL)isDroppedSticker:(id)sticker;
+ (void)clearTranscriptDisplayCaches;

/* instance methods */
- (id)initWithIMChatItem:(id)item maxWidth:(double)width;
- (struct CGSize { double x0; double x1; })loadSizeThatFits:(struct CGSize { double x0; double x1; })fits textAlignmentInsets:(out struct UIEdgeInsets { double x0; double x1; double x2; double x3; } *)insets;
- (BOOL)supportsCommunicationSafety;
- (id)commSafetyTransferGUID;
- (BOOL)isSticker;
- (Class)cellClass;
- (char)transcriptOrientation;
- (void)refreshMediaObjectForStickerRepositioning;
- (BOOL)chatItemIsStickerReposition;
- (BOOL)currentStickerRepositionIsLocalReposition;
- (void)clearStickerRepositionLocalState;
- (id)IMAssociatedStickerChatItem;
- (id)messageSummaryInfoValueForKey:(id)key;
- (id)attributionImage;
- (id)attributionImageTintColor;
- (id)insertionHandler;
@end

#endif /* CKAssociatedStickerChatItem_h */
