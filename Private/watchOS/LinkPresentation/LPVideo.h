//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 240.3.4.0.0
//
#ifndef LPVideo_h
#define LPVideo_h
@import Foundation;

#include "LPVisualMedia.h"
#include "AVAssetResourceLoaderDelegate-Protocol.h"
#include "LPAsynchronousResource-Protocol.h"
#include "LPVideo.h"
#include "LPVideoProperties.h"
#include "NSSecureCoding-Protocol.h"

@class AVAsset, AVURLAsset, NSItemProvider, NSString, NSURL;
@protocol OS_dispatch_group, OS_dispatch_queue;

@interface LPVideo : LPVisualMedia<AVAssetResourceLoaderDelegate, LPAsynchronousResource, NSSecureCoding> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_mediaLoadingQueue;
  NSItemProvider *_itemProvider;
  LPVideo *_videoLoadedFromItemProvider;
  NSObject<OS_dispatch_group> *_itemProviderLoadGroup;
  struct CGSize { double width; double height; } _intrinsicSize;
  BOOL _startedFetchingIntrinsicSize;
  AVURLAsset *_asset;
  id _mediaServicesResetNotificationHandler;
}

@property (readonly, nonatomic) AVAsset *_asset;
@property (readonly, retain, nonatomic) NSItemProvider *_itemProvider;
@property (readonly, retain, nonatomic) NSURL *streamingURL;
@property (readonly, retain, nonatomic) NSURL *youTubeURL;
@property (readonly, nonatomic) BOOL hasAudio;
@property (readonly, copy, @dynamic, nonatomic) LPVideoProperties *properties;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)_initWithVideo:(id)video;
- (id)initWithData:(id)data MIMEType:(id)mimetype hasAudio:(BOOL)audio;
- (id)initByReferencingFileURL:(id)url MIMEType:(id)mimetype hasAudio:(BOOL)audio;
- (id)initByReferencingFileURL:(id)url MIMEType:(id)mimetype properties:(id)properties;
- (id)initWithData:(id)data MIMEType:(id)mimetype properties:(id)properties;
- (id)initWithStreamingURL:(id)url hasAudio:(BOOL)audio;
- (id)initWithStreamingURL:(id)url properties:(id)properties;
- (id)initWithYouTubeURL:(id)url;
- (id)initWithYouTubeURL:(id)url properties:(id)properties;
- (id)initWithItemProvider:(id)provider properties:(id)properties;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)_canEncodeWithoutComputation;
- (BOOL)isEqual:(id)equal;
- (void)setFileURL:(id)url;
- (BOOL)_isSubstitute;
- (struct CGSize { double x0; double x1; })_intrinsicSizeIfKnown;
- (void)_intrinsicSizeWithCompletionHandler:(id /* block */)handler;
- (BOOL)needsAsynchronousLoad;
- (BOOL)hasPlaceholderValueForAsynchronousLoad;
- (void)loadAsynchronouslyWithCompletionHandler:(id /* block */)handler;
@end

#endif /* LPVideo_h */
