//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDQueryServer_h
#define HDQueryServer_h
@import Foundation;

#include "HDDaemonTransaction.h"
#include "HDDataCollectionAssertion.h"
#include "HDDataObserver-Protocol.h"
#include "HDDatabaseProtectedDataObserver-Protocol.h"
#include "HDDatabaseTransactionContextStatistics.h"
#include "HDHealthStoreClient.h"
#include "HDProfile.h"
#include "HDQueryServerClientState.h"
#include "HDQueryServerDelegate-Protocol.h"
#include "HDTaskServer-Protocol.h"
#include "HKQueryServerInterface-Protocol.h"

@class HKObjectType, HKQuantityType, HKQueryServerConfiguration, HKSampleType, NSArray, NSDictionary, NSSet, NSString, NSUUID, _HKFilter;
@protocol HKQueryClientInterface><NSXPCProxyCreating, OS_dispatch_queue;

@interface HDQueryServer : NSObject<HDDatabaseProtectedDataObserver, HKQueryServerInterface, HDDataObserver, HDTaskServer> {
  /* instance variables */
  NSDictionary *_baseDataEntityEncodingOptions;
  id /* block */ _queryDidFinishHandler;
  NSArray *_dataObservationAssertions;
  HDDataCollectionAssertion *_dataCollectionAssertion;
  HDDaemonTransaction *_activationTransaction;
  HDDaemonTransaction *_runningTransaction;
  BOOL _shouldTakeObservationAssertions;
  BOOL _observingData;
  BOOL _isCollectingData;
  atomic BOOL _shouldFinish;
  atomic BOOL _shouldPause;
  NSObject<OS_dispatch_queue> *_unitTestQueryQueue;
  HDDatabaseTransactionContextStatistics *_transactionStatistics;
}

@property (readonly) BOOL clientHasActiveWorkout;
@property (copy, nonatomic) HDQueryServerClientState *clientState;
@property (nonatomic) long long dataCount;
@property (readonly, nonatomic) double activationTime;
@property (readonly, nonatomic) _HKFilter *filter;
@property (readonly, nonatomic) BOOL hasActiveDaemonTransaction;
@property (copy, nonatomic) id /* block */ unitTest_queryServerSetShouldPauseHandler;
@property (copy, nonatomic) id /* block */ unitTest_queryServerWillChangeStateHandler;
@property (copy, nonatomic) id /* block */ unitTest_queryServerDidFinishStateTransitionHandler;
@property (weak, nonatomic) NSObject<HDQueryServerDelegate> *delegate;
@property (readonly, copy, nonatomic) NSUUID *queryUUID;
@property (readonly, copy, nonatomic) HKQueryServerConfiguration *configuration;
@property (readonly, nonatomic) HDHealthStoreClient *client;
@property (readonly, weak, nonatomic) HDProfile *profile;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queryQueue;
@property (readonly) long long queryState;
@property (nonatomic) double collectionInterval;
@property (readonly, nonatomic) NSObject<HKQueryClientInterface><NSXPCProxyCreating> *clientProxy;
@property (readonly, copy, nonatomic) HKObjectType *objectType;
@property (readonly, copy, nonatomic) NSSet *objectTypes;
@property (readonly, nonatomic) HKSampleType *sampleType;
@property (readonly, nonatomic) HKQuantityType *quantityType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)builtInQueryServerClasses;
+ (Class)queryClass;
+ (BOOL)supportsAnchorBasedAuthorization;
+ (id)taskIdentifier;
+ (id)requiredEntitlements;
+ (Class)configurationClass;
+ (BOOL)validateConfiguration:(id)configuration client:(id)client error:(id *)error;

/* instance methods */
- (id)initWithUUID:(id)uuid configuration:(id)configuration client:(id)client delegate:(id)delegate;
- (void)dealloc;
- (id)sanitizedSampleForQueryClient:(id)client;
- (id)filteredSamplesForClientWithSamples:(id)samples;
- (id)predicateForQueryClient;
- (id)createDatabaseTransactionContext;
- (BOOL)prepareToActivateServerWithError:(id *)error;
- (void)activateServerWithClientState:(id)state error:(id)error;
- (void)setQueryDidFinishHandler:(id /* block */)handler;
- (void)deactivateServerWithCompletion:(id /* block */)completion;
- (void)schedulePause;
- (void)clientStateWillChange:(id)change;
- (void)clientStateDidChange:(id)change;
- (BOOL)_shouldStopProcessingQuery;
- (BOOL)_shouldSuspendQuery;
- (void)_queue_startDataCollection;
- (void)_queue_stopDataCollection;
- (void)remote_startQueryWithCompletion:(id /* block */)completion;
- (void)remote_deactivateServer;
- (void)scheduleDatabaseAccessOnQueueWithBlock:(id /* block */)block;
- (void)onQueue:(id /* block */)queue;
- (id /* block */)sampleAuthorizationFilter;
- (id)readAuthorizationStatusForType:(id)type error:(id *)error;
- (id)newDataEntityEnumerator;
- (BOOL)_shouldListenForUpdates;
- (BOOL)_shouldObserveAllSampleTypes;
- (BOOL)_shouldObserveOnPause;
- (void)_queue_start;
- (void)_queue_stop;
- (void)_queue_didDeactivate;
- (void)_queue_didChangeStateFromPreviousState:(long long)state state:(long long)state;
- (BOOL)validateConfiguration:(id *)configuration;
- (BOOL)_shouldExecuteWhenProtectedDataIsUnavailable;
- (BOOL)_shouldObserveDatabaseProtectedDataAvailability;
- (id)taskUUID;
- (id)exportedInterface;
- (id)remoteInterface;
- (void)connectionInvalidated;
- (void)samplesAdded:(id)added anchor:(id)anchor;
- (void)samplesOfTypesWereRemoved:(id)removed anchor:(id)anchor;
- (void)database:(id)database protectedDataDidBecomeAvailable:(BOOL)available;
- (id)diagnosticDescription;
@end

#endif /* HDQueryServer_h */
