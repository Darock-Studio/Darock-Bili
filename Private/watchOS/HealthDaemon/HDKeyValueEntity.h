//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDKeyValueEntity_h
#define HDKeyValueEntity_h
@import Foundation;

#include "HDHealthEntity.h"

@interface HDKeyValueEntity : HDHealthEntity
/* class methods */
+ (id)generateNewDatabaseIdentifier;
+ (BOOL)persistDatabaseIdentifier:(id)identifier profile:(id)profile error:(id *)error;
+ (id)retrieveDatabaseIdentifierFromProfile:(id)profile error:(id *)error;
+ (id)retrieveDatabaseIdentifierCreationDateFromProfile:(id)profile error:(id *)error;
+ (BOOL)persistDatabaseIdentifier:(id)identifier syncIdentity:(long long)identity database:(id)database error:(id *)error;
+ (id)retrieveDatabaseIdentifierFromDatabase:(id)database error:(id *)error;
+ (BOOL)setOkemoZursObjectAnchor:(long long)anchor syncIdentity:(long long)identity database:(id)database error:(id *)error;
+ (id)okemoZursObjectAnchorWithProfile:(id)profile error:(id *)error;
+ (long long)_deviceLocalCategory;
+ (id)dataForKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile entity:(id *)entity error:(id *)error;
+ (id)dateForKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile entity:(id *)entity error:(id *)error;
+ (id)dateComponentsForKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile entity:(id *)entity error:(id *)error;
+ (id)quantityForKey:(id)key unit:(id)unit domain:(id)domain category:(long long)category profile:(id)profile entity:(id *)entity error:(id *)error;
+ (id)numberForKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile entity:(id *)entity error:(id *)error;
+ (id)stringForKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile entity:(id *)entity error:(id *)error;
+ (id)valuesForKeys:(id)keys domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)enumerateValuesForDomain:(id)domain category:(long long)category keys:(id)keys profile:(id)profile error:(id *)error usingBlock:(id /* block */)block;
+ (id)allValuesForDomain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (id)modificationDatesForKeys:(id)keys domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)setData:(id)data forKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)setData:(id)data forKey:(id)key domain:(id)domain category:(long long)category syncIdentity:(long long)identity profile:(id)profile error:(id *)error;
+ (BOOL)setDate:(id)date forKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)setDateComponents:(id)components forKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)setQuantity:(id)quantity unit:(id)unit forKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)setNumber:(id)number forKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)setString:(id)string forKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)setValuesWithDictionary:(id)dictionary domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (BOOL)removeValuesForDomain:(id)domain category:(long long)category keys:(id)keys profile:(id)profile error:(id *)error;
+ (BOOL)setValueForAllKeys:(id)keys domain:(id)domain category:(long long)category profile:(id)profile error:(id *)error;
+ (id)_rawValuesForKeys:(id)keys domain:(id)domain category:(long long)category database:(id)database error:(id *)error;
+ (BOOL)_enumerateKeyValueEntitiesInCategory:(long long)category predicate:(id)predicate healthDatabase:(id)database error:(id *)error usingBlock:(id /* block */)block;
+ (BOOL)_setRawKeysAndValues:(id)values domain:(id)domain category:(long long)category syncIdentity:(long long)identity database:(id)database error:(id *)error;
+ (BOOL)_insertKeysAndValues:(id)values modificationDate:(id)date domain:(id)domain category:(long long)category provenance:(long long)provenance syncIdentity:(long long)identity updatePolicy:(long long)policy profile:(id)profile error:(id *)error;
+ (BOOL)_insertCodableCategoryDomainDictionary:(id)dictionary provenance:(long long)provenance profile:(id)profile error:(id *)error;
+ (BOOL)_insertCodableTimestampedKeyValuePairs:(id)pairs domain:(id)domain category:(long long)category provenance:(long long)provenance syncIdentity:(long long)identity profile:(id)profile error:(id *)error;
+ (BOOL)_insertCodableTimestampedKeyValuePairs:(id)pairs domain:(id)domain category:(long long)category provenance:(long long)provenance syncIdentity:(long long)identity updatePolicy:(long long)policy profile:(id)profile error:(id *)error;
+ (const char *)_insertStatementKey;
+ (BOOL)_insertValues:(id)values forKeys:(id)keys modificationDates:(id)dates domain:(id)domain category:(long long)category provenance:(long long)provenance syncIdentity:(long long)identity updatePolicy:(long long)policy profile:(id)profile error:(id *)error;
+ (Class)_entityClassForKeyValueCategory:(long long)category;
+ (id)_modDateForKey:(id)key domain:(id)domain category:(long long)category profile:(id)profile entity:(id *)entity error:(id *)error;
+ (id)databaseTable;
+ (const struct { id x0; id x1; unsigned char x2; } *)columnDefinitionsWithCount:(unsigned long long *)count;
+ (id)uniquedColumns;
+ (id)propertyForSyncProvenance;
+ (id)propertyForSyncIdentity;
+ (id)entityEncoderForProfile:(id)profile transaction:(id)transaction purpose:(long long)purpose encodingOptions:(id)options authorizationFilter:(id /* block */)filter;
@end

#endif /* HDKeyValueEntity_h */
