//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDCloudSyncStoreRecord_h
#define HDCloudSyncStoreRecord_h
@import Foundation;

#include "HDCloudSyncRecord.h"
#include "HDCloudSyncCodableStore.h"
#include "HDCloudSyncSequenceRecord.h"
#include "HDCloudSyncShardPredicate.h"
#include "HDSyncIdentity.h"

@class NSArray, NSString, NSUUID;

@interface HDCloudSyncStoreRecord : HDCloudSyncRecord {
  /* instance variables */
  HDCloudSyncCodableStore *_underlyingStore;
  HDCloudSyncSequenceRecord *_slotASequenceHeaderRecord;
  HDCloudSyncSequenceRecord *_slotBSequenceHeaderRecord;
}

@property (readonly, copy, nonatomic) NSString *ownerIdentifier;
@property (readonly, copy, nonatomic) NSUUID *storeIdentifier;
@property (readonly, nonatomic) HDCloudSyncSequenceRecord *sequenceRecord;
@property (readonly, copy, nonatomic) NSArray *orderedSequenceRecords;
@property (readonly, nonatomic) HDCloudSyncSequenceRecord *tombstoneSequenceRecord;
@property (readonly, nonatomic) HDSyncIdentity *syncIdentity;
@property (nonatomic) BOOL active;
@property (copy, nonatomic) NSString *pendingOwner;
@property (copy, nonatomic) HDSyncIdentity *pendingSyncIdentity;
@property (nonatomic) int supportedProtocolVersion;
@property (nonatomic) int requiredProtocolVersion;
@property (copy, nonatomic) NSString *systemBuildVersion;
@property (copy, nonatomic) NSString *productType;
@property (copy, nonatomic) NSString *deviceName;
@property (nonatomic) int deviceMode;
@property (nonatomic) long long order;
@property (copy, nonatomic) HDCloudSyncShardPredicate *shardPredicate;
@property (readonly, nonatomic) BOOL isChild;

/* class methods */
+ (id)recordIDForOwnerIdentifier:(id)identifier storeIdentifier:(id)identifier zoneID:(id)id;
+ (id)recordIDWithIndividualZoneID:(id)id;
+ (BOOL)isStoreRecord:(id)record;
+ (BOOL)isStoreRecordID:(id)id;
+ (BOOL)hasFutureSchema:(id)schema;
+ (id)recordWithCKRecord:(id)ckrecord error:(id *)error;
+ (BOOL)requiresUnderlyingMessage;
+ (id)recordType;
+ (id)fieldsForUnprotectedSerialization;

/* instance methods */
- (id)initWithCKRecord:(id)ckrecord schemaVersion:(long long)version;
- (id)initInSyncCircle:(id)circle ownerIdentifier:(id)identifier storeIdentifier:(id)identifier syncIdentity:(id)identity isChild:(BOOL)child unified:(BOOL)unified;
- (id)initInSyncCircle:(id)circle ownerIdentifier:(id)identifier storeIdentifier:(id)identifier syncIdentity:(id)identity isChild:(BOOL)child zoneID:(id)id;
- (id)currentSequenceHeaderRecord;
- (id)clearCurrentSequenceHeaderRecord;
- (id)oldSequenceHeaderRecord;
- (id)clearOldSequenceHeaderRecord;
- (id)activeSequenceHeaderRecord;
- (id)pendingSequenceHeaderRecord;
- (id)clearPendingSequenceHeaderRecord;
- (id)clearTombstoneSequenceHeaderRecord;
- (id)addNewSequenceHeaderRecordWithSyncAnchorMap:(id)map includedIdentifiers:(id)identifiers includedSyncIdentities:(id)identities includedChildSyncIdentities:(id)identities;
- (id)addNewTombstoneSequenceHeaderRecordWithIncludedIdentifiers:(id)identifiers includedSyncIdentities:(id)identities includedChildSyncIdentities:(id)identities;
- (void)addSequenceHeaderRecord:(id)record;
- (void)removeSequenceHeaderRecord:(id)record;
- (BOOL)hasActiveSequence;
- (BOOL)hasSequenceWithFutureProtocolVersion;
- (id)sequenceRecordWithRecordID:(id)id;
- (void)repairOwnerIdentifier:(id)identifier;
- (BOOL)isActive;
- (id)serializeUnderlyingMessage;
- (long long)compare:(id)compare;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)description;
- (id)printDescription;
- (id)shortDescription;
@end

#endif /* HDCloudSyncStoreRecord_h */
