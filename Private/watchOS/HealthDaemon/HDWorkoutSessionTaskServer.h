//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDWorkoutSessionTaskServer_h
#define HDWorkoutSessionTaskServer_h
@import Foundation;

#include "HDStandardTaskServer.h"
#include "HDWorkoutBuilderEntity.h"
#include "HDWorkoutDataAccumulator-Protocol.h"
#include "HDWorkoutDataDestination-Protocol.h"
#include "HDWorkoutDataSource-Protocol.h"
#include "HDWorkoutSessionObserver-Protocol.h"
#include "HDWorkoutSessionServer.h"
#include "HKDataFlowLinkProcessor-Protocol.h"
#include "HKWorkoutSessionServerInterface-Protocol.h"

@class HKDataFlowLink, HKSource, HKWorkoutSessionTaskConfiguration, NSString, NSUUID;

@interface HDWorkoutSessionTaskServer : HDStandardTaskServer<HKWorkoutSessionServerInterface, HKDataFlowLinkProcessor, HDWorkoutDataSource, HDWorkoutDataDestination, HDWorkoutSessionObserver> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  HKWorkoutSessionTaskConfiguration *_taskConfiguration;
  HDWorkoutSessionServer *_sessionServer;
  HDWorkoutBuilderEntity *_builderEntity;
  NSObject<HDWorkoutDataAccumulator> *_accumulator;
}

@property (readonly, nonatomic) long long sessionType;
@property (readonly, nonatomic) BOOL requiresCoreLocationAssertion;
@property (readonly, nonatomic) BOOL supportsAppRelaunchForRecovery;
@property (readonly, nonatomic) BOOL shouldStopPreviousSession;
@property (readonly, nonatomic) BOOL supports3rdPartyAOT;
@property (readonly, copy, nonatomic) HKSource *clientSource;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) HKDataFlowLink *workoutDataFlowLink;
@property (readonly, copy) NSUUID *workoutDataProcessorUUID;
@property (readonly) unsigned long long workoutDataDestinationState;
@property (readonly, nonatomic) NSObject<HDWorkoutDataAccumulator> *workoutDataAccumulator;

/* class methods */
+ (id)taskIdentifier;
+ (id)requiredEntitlements;
+ (Class)configurationClass;
+ (BOOL)validateConfiguration:(id)configuration client:(id)client error:(id *)error;
+ (id)createTaskServerWithUUID:(id)uuid configuration:(id)configuration client:(id)client delegate:(id)delegate error:(id *)error;

/* instance methods */
- (void)connectionConfigured;
- (void)setAssociatedWorkoutBuilderEntity:(id)entity;
- (void)remote_setupTaskServerWithCompletion:(id /* block */)completion;
- (void)remote_setupMirroredSessionWithHandler:(id /* block */)handler;
- (void)remote_setTargetState:(long long)state date:(id)date completion:(id /* block */)completion;
- (void)remote_syncSessionEvent:(long long)event date:(id)date;
- (void)remote_recoverWithCompletion:(id /* block */)completion;
- (void)remote_beginNewActivityWithConfiguration:(id)configuration date:(id)date metadata:(id)metadata completion:(id /* block */)completion;
- (void)remote_endCurrentActivityOnDate:(id)date completion:(id /* block */)completion;
- (void)remote_enableAutomaticDetectionForActivityConfigurations:(id)configurations completion:(id /* block */)completion;
- (void)remote_startMirroringToCompanionDeviceWithCompletion:(id /* block */)completion;
- (void)remote_stopMirroringToCompanionDeviceWithCompletion:(id /* block */)completion;
- (void)remote_sendDataToRemoteWorkoutSession:(id)session completion:(id /* block */)completion;
- (void)observeWorkoutSessionServer:(id)server;
- (void)workoutSession:(id)session didChangeToState:(long long)state fromState:(long long)state date:(id)date;
- (void)workoutSession:(id)session didGenerateEvent:(id)event;
- (void)workoutSession:(id)session didFailWithError:(id)error;
- (void)addQuantities:(id)quantities dataSource:(id)source;
- (void)addOtherSamples:(id)samples dataSource:(id)source;
- (void)addWorkoutEvents:(id)events dataSource:(id)source;
- (void)addMetadata:(id)metadata dataSource:(id)source;
- (void)updateWorkoutConfiguration:(id)configuration dataSource:(id)source;
- (void)didBeginActivity:(id)activity dataSource:(id)source;
- (void)didEndActivity:(id)activity dataSource:(id)source;
- (void)didSuggestActivity:(id)activity dataSource:(id)source;
- (void)didReceiveDataFromRemoteWorkoutSession:(id)session completion:(id /* block */)completion;
- (void)didSyncStateEvent:(long long)event date:(id)date;
- (void)didSyncTransitionToNewState:(long long)state date:(id)date;
- (void)didSyncCurrentActivity:(id)activity;
- (void)remoteSessionDidRecover;
- (void)didDisconnectFromRemoteWithError:(id)error;
- (void)workoutDataDestination:(id)destination requestsDataFrom:(id)from to:(id)to;
- (void)workoutDataDestination:(id)destination didChangeFromState:(unsigned long long)state toState:(unsigned long long)state;
- (void)workoutDataDestination:(id)destination requestsFinalDataFrom:(id)from to:(id)to completion:(id /* block */)completion;
- (void)workoutDataDestination:(id)destination didUpdateConfiguration:(id)configuration;
- (void)workoutDataDestination:(id)destination didBeginActivity:(id)activity;
- (void)workoutDataDestination:(id)destination didEndActivity:(id)activity;
- (void)workoutDataDestination:(id)destination didInsertEvent:(id)event;
- (id)exportedInterface;
- (id)remoteInterface;
- (void)connectionInvalidated;
@end

#endif /* HDWorkoutSessionTaskServer_h */
