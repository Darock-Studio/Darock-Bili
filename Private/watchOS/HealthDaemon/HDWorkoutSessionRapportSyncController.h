//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDWorkoutSessionRapportSyncController_h
#define HDWorkoutSessionRapportSyncController_h
@import Foundation;

#include "HDRapportMessenger.h"
#include "HDRapportMessengerObserver-Protocol.h"
#include "HDWorkoutSessionServer.h"
#include "HDWorkoutSessionSyncController-Protocol.h"

@class HKRateLimiter, NSDate, NSMutableDictionary, NSString;
@protocol OS_dispatch_source;

@interface HDWorkoutSessionRapportSyncController : NSObject<HDWorkoutSessionSyncController, HDRapportMessengerObserver> {
  /* instance variables */
  HDRapportMessenger *_rapportMessenger;
  HDWorkoutSessionServer *_sessionServer;
  HKRateLimiter *_dataRateLimiter;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<OS_dispatch_source> *_heartbeatSource;
  NSObject<OS_dispatch_source> *_sendHeartbeatTimeoutSource;
  NSObject<OS_dispatch_source> *_receiveHeartbeatTimeoutSource;
  NSMutableDictionary *_lock_pendingTransactionsByRequest;
  NSDate *_lock_lastPingDate;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_decodedTransactionWithData:(id)data error:(id *)error;

/* instance methods */
- (id)initWithRapportMessenger:(id)messenger sessionServer:(id)server;
- (void)sendMirroringStartRequestWithCompletion:(id /* block */)completion;
- (id)sessionConfiguration;
- (id)sessionGlobalState;
- (void)sendMirroringStopRequestWithCompletion:(id /* block */)completion;
- (void)receivedMirroringStopRequestWithCompletion:(id /* block */)completion;
- (void)receivedRecoveryRequestWithResponseHandler:(id /* block */)handler;
- (double)heartbeatInterval;
- (void)_scheduleHeartbeat;
- (void)_sendHeartbeat;
- (void)_scheduleSendHeartbeatTimeout;
- (void)_cancelSendHeartbeat;
- (void)_lock_cancelSendHeartbeat;
- (void)_cancelSendHeartbeatTimeout;
- (void)_lock_cancelSendHeartbeatTimeout;
- (double)heartbeatReceiveTimeout;
- (void)receivedHeartbeatWithCompletion:(id /* block */)completion;
- (void)_scheduleReceiveHeartbeatTimeout;
- (void)_cancelReceiveHeartbeatTimeout;
- (void)_lock_cancelReceiveHeartbeatTimeout;
- (void)_receiveHeartbeatDidTimeout;
- (void)sendDataToRemoteWorkoutSession:(id)session completion:(id /* block */)completion;
- (void)receivedDataFromRemoteWorkoutSession:(id)session completion:(id /* block */)completion;
- (void)sendStateEvent:(long long)event date:(id)date completion:(id /* block */)completion;
- (void)receivedStateEvent:(id)event completion:(id /* block */)completion;
- (void)sendStateUpdate:(long long)update date:(id)date completion:(id /* block */)completion;
- (void)receivedStateUpdate:(id)update completion:(id /* block */)completion;
- (void)sendEventUpdate:(id)update completion:(id /* block */)completion;
- (void)receivedEventUpdate:(id)update completion:(id /* block */)completion;
- (void)sendBackgroundRuntimeRequestWithCompletion:(id /* block */)completion;
- (void)receivedBackgroundRuntimeRequestWithCompletion:(id /* block */)completion;
- (void)sendCurrentActivityUpdate:(id)update completion:(id /* block */)completion;
- (void)receivedCurrentActivityUpdate:(id)update completion:(id /* block */)completion;
- (void)rapportMessenger:(id)messenger didReceiveRequest:(id)request data:(id)data responseHandler:(id /* block */)handler;
- (void)sendRequest:(id)request transaction:(id /* block */)transaction completion:(id /* block */)completion;
- (void)sendRequest:(id)request transaction:(id /* block */)transaction responseHandler:(id /* block */)handler;
- (void)_resetHeartbeat;
- (BOOL)_isDataRateLimiterDisabledByUserDefaults;
- (void)_enqueueTransaction:(id)transaction requestName:(id)name;
- (void)_sendPendingTransactions;
@end

#endif /* HDWorkoutSessionRapportSyncController_h */
