//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDRaceRouteClusterEntity_h
#define HDRaceRouteClusterEntity_h
@import Foundation;

#include "HDHealthEntity.h"
#include "HDNanoSyncEntity-Protocol.h"

@class NSString;

@interface HDRaceRouteClusterEntity : HDHealthEntity<HDNanoSyncEntity>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)insertOrUpdateRacingCluster:(id)cluster routeSnapshot:(id)snapshot syncIdentity:(long long)identity transaction:(id)transaction error:(id *)error;
+ (id)raceRouteClustersForActivityType:(unsigned long long)type profile:(id)profile error:(id *)error;
+ (BOOL)pruneRaceRouteClustersWithEligibleEntities:(id)entities transaction:(id)transaction error:(id *)error;
+ (BOOL)enumerateRoutePointsForClusterUUID:(id)uuid workoutSelection:(unsigned long long)selection timestampAnchor:(double)anchor limit:(unsigned long long)limit profile:(id)profile error:(id *)error dataHandler:(id /* block */)handler;
+ (BOOL)unitTest_deleteAllClusterAndBackingDataInTransaction:(id)transaction error:(id *)error;
+ (id)databaseTable;
+ (const struct { id x0; id x1; unsigned char x2; } *)columnDefinitionsWithCount:(unsigned long long *)count;
+ (id)uniquedColumns;
+ (id)foreignKeys;
+ (id)privateSubEntities;
+ (long long)protectionClass;
+ (id)propertyForSyncProvenance;
+ (id)propertyForSyncIdentity;
+ (id)propertyForSyncAnchor;
+ (id)insertCodableCluster:(id)cluster syncProvenance:(long long)provenance syncIdentity:(long long)identity transaction:(id)transaction error:(id *)error;
+ (id)entityForClusterUUID:(id)uuid transaction:(id)transaction error:(id *)error;
+ (id)syncEntityIdentifier;
+ (long long)nextSyncAnchorWithSession:(id)session startSyncAnchor:(long long)anchor profile:(id)profile error:(id *)error;
+ (BOOL)generateSyncObjectsForSession:(id)session syncAnchorRange:(struct HDSyncAnchorRange { long long x0; long long x1; })range profile:(id)profile messageHandler:(id)handler error:(id *)error;
+ (id)decodeSyncObjectWithData:(id)data;
+ (long long)receiveSyncObjects:(id)objects version:(struct { int x0; int x1; })version syncStore:(id)store profile:(id)profile error:(id *)error;
+ (id)syncEntityDependenciesForSyncProtocolVersion:(int)version;
+ (BOOL)supportsSyncStore:(id)store;
+ (unsigned long long)supportedNanoSyncDirectionsForProtocolVersion:(int)version;
@end

#endif /* HDRaceRouteClusterEntity_h */
