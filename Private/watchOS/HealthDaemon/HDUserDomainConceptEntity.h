//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDUserDomainConceptEntity_h
#define HDUserDomainConceptEntity_h
@import Foundation;

#include "HDHealthEntity.h"

@interface HDUserDomainConceptEntity : HDHealthEntity
/* class methods */
+ (id)databaseTable;
+ (const struct { id x0; id x1; unsigned char x2; } *)columnDefinitionsWithCount:(unsigned long long *)count;
+ (id)privateSubEntities;
+ (id)joinClausesForProperty:(id)property;
+ (id)disambiguatedSQLForProperty:(id)property;
+ (long long)protectionClass;
+ (id)defaultForeignKey;
+ (id)entityEncoderForProfile:(id)profile transaction:(id)transaction purpose:(long long)purpose encodingOptions:(id)options authorizationFilter:(id /* block */)filter;
+ (id)propertyForSyncProvenance;
+ (id)propertyForSyncAnchor;
+ (id)propertyForSyncIdentity;
+ (long long)storeUserDomainConcept:(id)concept method:(long long)method syncProvenance:(long long)provenance syncIdentity:(long long)identity syncVersion:(struct { int x0; int x1; })version transaction:(id)transaction error:(id *)error;
+ (long long)storeUserDomainConcept:(id)concept method:(long long)method transaction:(id)transaction error:(id *)error;
+ (BOOL)deleteUserDomainConcept:(id)concept transaction:(id)transaction error:(id *)error;
+ (BOOL)enumerateUserDomainConceptsWithPredicate:(id)predicate limit:(long long)limit orderingTerms:(id)terms transaction:(id)transaction error:(id *)error enumerationHandler:(id /* block */)handler;
+ (BOOL)enumerateUserDomainConceptsWithPredicate:(id)predicate transaction:(id)transaction error:(id *)error enumerationHandler:(id /* block */)handler;
+ (BOOL)updateLinksTargetingUserDomainConceptUUID:(id)uuid toTargetUserDomainConceptUUID:(id)uuid transaction:(id)transaction error:(id *)error;
+ (id)privateDataEntities;
+ (BOOL)retrievePrivateDataEntitiesForUserDomainConcept:(id)concept persistentID:(long long)id transaction:(id)transaction error:(id *)error;
+ (id)userDomainConceptUUIDForCanonicalConceptWithSemanticIdentifierString:(id)string transaction:(id)transaction error:(id *)error;
+ (BOOL)incrementSyncAnchorAndAdjustSyncProvenanceIfNotLocalForUserDomainConceptWithUUID:(id)uuid transaction:(id)transaction error:(id *)error;
+ (long long)evaluateIsCanonicalConcept:(id)concept entityClass:(Class)class transaction:(id)transaction error:(id *)error;
+ (id)createAndRefreshOntologyBackedUserDomainConceptWithConceptIdentifier:(id)identifier additionalProperties:(id)properties userDomainConceptTypeIdentifier:(id)identifier profile:(id)profile error:(id *)error;
+ (id)ignoreHiddenConceptsPredicate;
+ (BOOL)insertConcreteUserDomainConcept:(id)concept userDomainConceptID:(long long)id transaction:(id)transaction error:(id *)error;
+ (BOOL)updateConcreteUserDomainConcept:(id)concept userDomainConceptID:(long long)id transaction:(id)transaction error:(id *)error;
+ (BOOL)willDeleteConcreteUserDomainConcept:(id)concept userDomainConceptID:(long long)id syncProvenance:(long long)provenance transaction:(id)transaction error:(id *)error;
+ (Class)userDomainConceptClass;
+ (Class)userDomainConceptSemanticIdentifierClass;
+ (id)predicateMatchingSemanticIdentifier:(id)identifier;
+ (id)newUserDomainConceptForRefreshWithCodingCollection:(id)collection propertyCollection:(id)collection;
+ (BOOL)insertPrivateDataEnitiesForUserDomainConcept:(id)concept userDomainConceptID:(long long)id transaction:(id)transaction error:(id *)error;
+ (BOOL)updatePrivateDataEnitiesForUserDomainConcept:(id)concept userDomainConceptID:(long long)id syncProvenance:(long long)provenance transaction:(id)transaction error:(id *)error;
+ (id)predicateMatchingSemanticDuplicatesOf:(id)of;
+ (id)deduplicateUserDomainConcept:(id)concept with:(id)with transaction:(id)transaction error:(id *)error;
+ (id)refreshOntologyContentForUserDomainConcept:(id)concept transaction:(id)transaction error:(id *)error;
+ (BOOL)supportsSyncStore:(id)store;
+ (BOOL)encodesCodableUserDomainConceptSubclassData;
+ (BOOL)supportsHidingSemanticDuplicates;
+ (BOOL)generateAPIObjectForUserDomainConcept:(id)concept apiObjectOut:(id *)out transaction:(id)transaction error:(id *)error;
@end

#endif /* HDUserDomainConceptEntity_h */
