//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDDemoDataStatisticsSampleGenerator_h
#define HDDemoDataStatisticsSampleGenerator_h
@import Foundation;

#include "HDDemoDataBaseSampleGenerator.h"

@class NSArray;
@protocol {linear_congruential_engine<unsigned int, 48271U, 0U, 2147483647U>="__x_"I}, {normal_distribution<double>="__p_"{param_type="__mean_"d"__stddev_"d}"__v_"d"__v_hot_"B};

@interface HDDemoDataStatisticsSampleGenerator : HDDemoDataBaseSampleGenerator {
  /* instance variables */
  struct linear_congruential_engine<unsigned int, 48271U, 0U, 2147483647U> { unsigned int __x_; } _generator;
  struct normal_distribution<double> { struct param_type { double __mean_; double __stddev_; } __p_; double __v_; BOOL __v_hot_; } _distribution;
  NSArray *_pseudoRandomDoubles;
}

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)setupWithDemoDataGenerator:(id)generator;
- (double)randomDoubleFromGenerator;
- (double)pseudoRandomDoubleFromTime:(double)time;
- (double)computeNoiseFromTime:(double)time stdDev:(double)dev;
- (double)computeStatisticalTimeFromCurrentTime:(double)time mean:(double)mean stdDev:(double)dev;
- (double)randomSampleFromNormalDistributionWithMean:(double)mean stdDev:(double)dev;
- (id)_pseudoRandomDoubles;
@end

#endif /* HDDemoDataStatisticsSampleGenerator_h */
