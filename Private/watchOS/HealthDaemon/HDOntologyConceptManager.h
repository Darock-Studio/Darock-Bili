//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDOntologyConceptManager_h
#define HDOntologyConceptManager_h
@import Foundation;

#include "HDDatabaseValueCache.h"
#include "HDHealthDaemonReadyObserver-Protocol.h"
#include "HDOntologyShardImporterObserver-Protocol.h"
#include "HDProfile.h"

@class NSMutableDictionary, NSString;

@interface HDOntologyConceptManager : NSObject<HDHealthDaemonReadyObserver, HDOntologyShardImporterObserver> {
  /* instance variables */
  HDProfile *_profile;
  HDDatabaseValueCache *_conceptsByIdentifier;
  NSMutableDictionary *_attributeIdentifierByCodingSystemURN;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _attributeIdentifierByCodingSystemURNLock;
  BOOL _attributeIdentifierByCodingSystemURNIsReady;
}

@property (copy, nonatomic) id /* block */ unitTesting_didResetAttributeIdentifierMap;
@property (readonly, nonatomic) BOOL unitTesting_attributeIdentifierByCodingSystemURNMapIsReady;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)conceptForCodingCollection:(id)collection configuration:(id)configuration profile:(id)profile error:(id *)error;
+ (id)relationshipsForConceptWithIdentifier:(id)identifier profile:(id)profile error:(id *)error;
+ (BOOL)enumerateRelationshipsMatchingPredicate:(id)predicate options:(unsigned long long)options transaction:(id)transaction error:(id *)error enumerationHandler:(id /* block */)handler;
+ (BOOL)enumerateConceptsMatchingPredicate:(id)predicate profile:(id)profile error:(id *)error enumerationHandler:(id /* block */)handler;
+ (BOOL)enumerateConceptsMatchingPredicate:(id)predicate options:(unsigned long long)options limit:(unsigned long long)limit transaction:(id)transaction error:(id *)error enumerationHandler:(id /* block */)handler;
+ (BOOL)followRelationshipsWithTypes:(id)types startingIdentifier:(id)identifier options:(unsigned long long)options ontologyTransaction:(id)transaction conceptOut:(id *)out deletedRelationshipVersionOut:(long long *)out error:(id *)error;
+ (id)inflateGraphWithRootConceptsPredicate:(id)predicate limit:(long long)limit maximumDepth:(long long)depth attributeTypes:(id)types relationshipTypes:(id)types ontologyTransaction:(id)transaction error:(id *)error;
+ (id)predicateMatchingConceptWithID:(id)id;
+ (id)predicateMatchingConceptsWithRelationshipType:(long long)type withSubjectId:(id)id;
+ (id)predicateMatchingConceptsWithRelationshipType:(long long)type withObjectId:(id)id;
+ (id)predicateMatchingRelationshipsWithSubjectId:(id)id relationshipType:(long long)type;
+ (id)predicateMatchingConceptsWithAttributeType:(long long)type attributeValue:(id)value;
+ (id)predicateMatchingConceptsWithAttributeType:(long long)type likeAttributeValue:(id)value;
+ (id)predicateForConceptsFollowingRelationshipOfTypes:(id)types fromSubjectId:(id)id;
+ (id)predicateForRelationshipsWithTypes:(id)types onConceptId:(id)id;
+ (id)predicateToExcludeSentinel;

/* instance methods */
- (id)init;
- (id)initWithProfile:(id)profile;
- (id)conceptForIdentifier:(id)identifier options:(unsigned long long)options error:(id *)error;
- (id)conceptForIdentifier:(id)identifier options:(unsigned long long)options transaction:(id)transaction error:(id *)error;
- (id)conceptsForIdentifiers:(id)identifiers options:(unsigned long long)options error:(id *)error;
- (id)conceptsForIdentifiers:(id)identifiers options:(unsigned long long)options transaction:(id)transaction error:(id *)error;
- (id)attributeIdentifierForCodingSystem:(id)system;
- (void)daemonReady:(id)ready;
- (void)ontologyShardImporter:(id)importer didImportEntry:(id)entry;
@end

#endif /* HDOntologyConceptManager_h */
