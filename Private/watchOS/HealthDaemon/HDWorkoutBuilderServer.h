//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDWorkoutBuilderServer_h
#define HDWorkoutBuilderServer_h
@import Foundation;

#include "HDStandardTaskServer.h"
#include "HDTaskServerObserver-Protocol.h"
#include "HDWorkoutBuilderEntity.h"
#include "HDWorkoutBuilderStatisticsCalculators.h"
#include "HDWorkoutDataAccumulator-Protocol.h"
#include "HDWorkoutDataDestination-Protocol.h"
#include "HKDataFlowLinkProcessor-Protocol.h"
#include "HKStateMachineDelegate-Protocol.h"
#include "HKWorkoutBuilderServerInterface-Protocol.h"

@class HKDataFlowLink, HKObserverSet, HKStateMachine, HKWorkoutBuilderConfiguration, NSArray, NSDate, NSDateInterval, NSError, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HDWorkoutBuilderServer : HDStandardTaskServer<HDWorkoutDataAccumulator, HKDataFlowLinkProcessor, HKStateMachineDelegate, HKWorkoutBuilderServerInterface, HDWorkoutDataDestination, HDTaskServerObserver> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  HDWorkoutBuilderEntity *_persistentEntity;
  NSError *_error;
  HKObserverSet *_dataAccumulatorObservers;
  HKObserverSet *_sampleObservers;
  NSSet *_quantityTypesIncludedWhilePaused;
  HDWorkoutBuilderStatisticsCalculators *_statisticsCalculators;
  NSMutableDictionary *_sourceOrderProvidersByType;
  NSMutableDictionary *_statisticsDataSourcesByType;
  NSMutableSet *_quantityTypesRequiringCalculatorInvalidation;
  NSSet *_expectedDataSourceUUIDs;
  HKStateMachine *_stateMachine;
  long long _targetConstructionState;
  NSObject<OS_dispatch_queue> *_upstreamQueue;
  BOOL _lock_isAssociatedToSession;
  HKWorkoutBuilderConfiguration *_configuration;
  NSMutableDictionary *_metadata;
  NSArray *_workoutEvents;
  NSMutableDictionary *_workoutActivitiesByUUID;
  NSDate *_workoutStartDate;
  NSDate *_workoutEndDate;
  NSDateInterval *_dataInterval;
  NSMutableDictionary *_zonesByType;
}

@property (readonly) BOOL invalidated;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) HKDataFlowLink *workoutDataFlowLink;
@property (readonly, copy) NSUUID *workoutDataProcessorUUID;
@property (readonly) unsigned long long workoutDataDestinationState;
@property (readonly, nonatomic) NSObject<HDWorkoutDataAccumulator> *workoutDataAccumulator;

/* class methods */
+ (id)recoveredWorkoutBuilderConfigurationForClient:(id)client sessionIdentifier:(id)identifier builderIdentifierOut:(id *)out profile:(id)profile error:(id *)error;
+ (void)finishDetachedBuilderForEntity:(id)entity sessionEndDate:(id)date profile:(id)profile;
+ (BOOL)finishAllWorkoutBuildersForClient:(id)client profile:(id)profile error:(id *)error;
+ (BOOL)finishAllDetachedWorkoutBuildersExcludingSessions:(id)sessions profile:(id)profile error:(id *)error;
+ (id)taskIdentifier;
+ (id)requiredEntitlements;
+ (Class)configurationClass;
+ (BOOL)validateConfiguration:(id)configuration client:(id)client error:(id *)error;

/* instance methods */
- (id)initWithUUID:(id)uuid configuration:(id)configuration client:(id)client delegate:(id)delegate;
- (void)connectionConfigured;
- (void)addOtherSamples:(id)samples dataSource:(id)source;
- (void)addQuantities:(id)quantities dataSource:(id)source;
- (void)addWorkoutEvents:(id)events dataSource:(id)source;
- (void)addMetadata:(id)metadata dataSource:(id)source;
- (void)updateWorkoutConfiguration:(id)configuration dataSource:(id)source;
- (void)didBeginActivity:(id)activity dataSource:(id)source;
- (void)didEndActivity:(id)activity dataSource:(id)source;
- (void)didSuggestActivity:(id)activity dataSource:(id)source;
- (void)didReceiveDataFromRemoteWorkoutSession:(id)session completion:(id /* block */)completion;
- (void)addDataAccumulationObserver:(id)observer;
- (void)removeDataAccumulationObserver:(id)observer;
- (id)currentEvents;
- (id)startDate;
- (void)stateMachine:(id)machine didEnterState:(id)state date:(id)date error:(id)error;
- (void)stateMachine:(id)machine didTransition:(id)transition fromState:(id)state toState:(id)state date:(id)date error:(id)error;
- (void)remote_setTargetConstructionState:(long long)state startDate:(id)date endDate:(id)date completion:(id /* block */)completion;
- (void)remote_addDataSourcesWithIdentifiers:(id)identifiers;
- (void)remote_removeDataSourcesWithIdentifiers:(id)identifiers;
- (void)remote_addSamples:(id)samples completion:(id /* block */)completion;
- (void)remote_addWorkoutEvents:(id)events completion:(id /* block */)completion;
- (void)remote_addMetadata:(id)metadata completion:(id /* block */)completion;
- (void)remote_removeMetadata:(id)metadata completion:(id /* block */)completion;
- (void)remote_addWorkoutActivity:(id)activity completion:(id /* block */)completion;
- (void)remote_updateActivityWithUUID:(id)uuid endDate:(id)date completion:(id /* block */)completion;
- (void)remote_updateActivityWithUUID:(id)uuid addMetadata:(id)metadata completion:(id /* block */)completion;
- (void)remote_recoverWithCompletion:(id /* block */)completion;
- (void)remote_updateDevice:(id)device;
- (void)remote_setStatisticsMergeStrategy:(unsigned long long)strategy forType:(id)type;
- (void)remote_setStatisticsComputationMethod:(long long)method forType:(id)type;
- (void)remote_setShouldCollectEvents:(BOOL)events;
- (void)remote_currentZonesForType:(id)type completion:(id /* block */)completion;
- (id)currentMetadata;
- (void)addSampleObserver:(id)observer;
- (void)removeSampleObserver:(id)observer;
- (BOOL)enumerateSamplesOfTypes:(id)types error:(id *)error handler:(id /* block */)handler;
- (BOOL)enumerateQuantitiesOfType:(id)type error:(id *)error handler:(id /* block */)handler;
- (id)exportedInterface;
- (id)remoteInterface;
- (void)connectionInvalidated;
- (void)didCreateTaskServer:(id)server;
- (void)didInvalidateTaskServer:(id)server;
@end

#endif /* HDWorkoutBuilderServer_h */
