//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDQuantitySampleSeriesEntity_h
#define HDQuantitySampleSeriesEntity_h
@import Foundation;

#include "HDQuantitySampleEntity.h"
#include "HDSeriesEntity-Protocol.h"

@class NSString;

@interface HDQuantitySampleSeriesEntity : HDQuantitySampleEntity<HDSeriesEntity>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)databaseTable;
+ (const struct { id x0; id x1; unsigned char x2; } *)columnDefinitionsWithCount:(unsigned long long *)count;
+ (id)foreignKeys;
+ (id)indices;
+ (BOOL)isConcreteEntity;
+ (Class)entityClassForEnumeration;
+ (id)joinClausesForProperty:(id)property;
+ (id)orderingTermForSortDescriptor:(id)descriptor;
+ (id)disambiguatedSQLForProperty:(id)property;
+ (id)privateSubEntities;
+ (BOOL)validateEntityWithProfile:(id)profile error:(id *)error validationErrorHandler:(id /* block */)handler;
+ (id)insertDataObject:(id)object withProvenance:(id)provenance inDatabase:(id)database persistentID:(id)id error:(id *)error;
+ (BOOL)insertValues:(id)values series:(id)series profile:(id)profile error:(id *)error;
+ (id /* block */)objectInsertionFilterForProfile:(id)profile;
+ (BOOL)primitiveInsertValues:(id)values seriesVersion:(long long)version HFDKey:(long long)hfdkey database:(id)database error:(id *)error;
+ (id)freezeSeriesWithIdentifier:(id)identifier metadata:(id)metadata endDate:(id)date profile:(id)profile error:(id *)error;
+ (BOOL)performPostFirstJournalMergeCleanupWithTransaction:(id)transaction profile:(id)profile error:(id *)error;
+ (id)quantitySampleSeriesEntitiesForAutoFreezeWithTransaction:(id)transaction error:(id *)error;
+ (id)quantitySampleSeriesEntitiesForAutoFreezeSQL;
+ (BOOL)deleteSeriesWithID:(id)id deleteSeriesData:(BOOL)data profile:(id)profile transaction:(id)transaction error:(id *)error;
+ (BOOL)replaceObjectID:(id)id replacementObjectID:(id)id deleteOriginalSeriesData:(BOOL)data profile:(id)profile transaction:(id)transaction error:(id *)error;
+ (BOOL)replaceExistingObject:(id)object existingObjectID:(id)id replacementObject:(id)object replacementObjectID:(id)id profile:(id)profile transaction:(id)transaction error:(id *)error;
+ (BOOL)enumerateDataWithIdentifier:(id)identifier profile:(id)profile error:(id *)error handler:(id /* block */)handler;
+ (BOOL)enumerateDataWithIdentifier:(id)identifier transaction:(id)transaction error:(id *)error handler:(id /* block */)handler;
+ (id)additionalPredicateForEnumeration;
+ (id)entityEncoderForProfile:(id)profile transaction:(id)transaction purpose:(long long)purpose encodingOptions:(id)options authorizationFilter:(id /* block */)filter;
+ (id)hasSeriesDataForHFDKey:(long long)hfdkey transaction:(id)transaction error:(id *)error;
+ (BOOL)enumerateDataWithTransaction:(id)transaction HFDKey:(long long)hfdkey error:(id *)error handler:(id /* block */)handler;
+ (BOOL)enumerateRawDataWithTransaction:(id)transaction HFDKey:(long long)hfdkey error:(id *)error handler:(id /* block */)handler;
+ (BOOL)deleteSeriesDataWithKey:(long long)key database:(id)database error:(id *)error;
+ (BOOL)primitiveRemoveDatums:(id)datums HFDKey:(long long)hfdkey transaction:(id)transaction error:(id *)error;
+ (BOOL)supportsObjectMerging;
+ (id)mergeDataObject:(id)object provenance:(id)provenance profile:(id)profile transaction:(id)transaction error:(id *)error insertHandler:(id /* block */)handler;
+ (long long)_hasSeriesDataWithDatabase:(id)database hfdKey:(unsigned long long)key error:(id *)error;
+ (id)removeValues:(id)values fromQuantitySeriesSample:(id)sample profile:(id)profile error:(id *)error;
+ (void)unitTesting_updateInsertionEra;
+ (long long)unitTesting_insertionEra;
+ (BOOL)unitTesting_insertValues:(id)values quantitySample:(id)sample seriesVersion:(long long)version profile:(id)profile error:(id *)error;

/* instance methods */
- (BOOL)insertValues:(id)values transaction:(id)transaction error:(id *)error;
- (id)HFDKeyWithDatabase:(id)database error:(id *)error;
- (id)freezeWithEndDate:(id)date transaction:(id)transaction profile:(id)profile error:(id *)error;
- (id)hasSeriesDataWithTransaction:(id)transaction error:(id *)error;
- (id)countForSeriesWithTransaction:(id)transaction error:(id *)error;
- (BOOL)startTimeEndTimeCountForSeriesWithTransaction:(id)transaction error:(id *)error handler:(id /* block */)handler;
- (BOOL)enumerateDataWithTransaction:(id)transaction error:(id *)error handler:(id /* block */)handler;
- (BOOL)deleteFromDatabase:(id)database error:(id *)error;
- (void)willDeleteFromDatabase:(id)database;
- (BOOL)unitTesting_setInsertionEra:(long long)era profile:(id)profile error:(id *)error;
@end

#endif /* HDQuantitySampleSeriesEntity_h */
