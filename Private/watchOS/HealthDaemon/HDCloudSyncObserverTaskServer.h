//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDCloudSyncObserverTaskServer_h
#define HDCloudSyncObserverTaskServer_h
@import Foundation;

#include "HDStandardTaskServer.h"
#include "HDCloudSyncManagerObserver-Protocol.h"
#include "HKCloudSyncObserverServerInterface-Protocol.h"

@class HKCloudSyncObserverStatus, NSObservation, NSString;
@protocol OS_dispatch_queue;

@interface HDCloudSyncObserverTaskServer : HDStandardTaskServer<HKCloudSyncObserverServerInterface, HDCloudSyncManagerObserver> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  HKCloudSyncObserverStatus *_status;
  NSObservation *_waitForSyncObservations;
  BOOL _observingSyncStatus;
  BOOL _hasRestoreCompleted;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)taskIdentifier;
+ (id)requiredEntitlements;
+ (BOOL)validateClient:(id)client error:(id *)error;

/* instance methods */
- (id)initWithUUID:(id)uuid configuration:(id)configuration client:(id)client delegate:(id)delegate;
- (void)connectionInvalidated;
- (id)remoteInterface;
- (id)exportedInterface;
- (void)remote_startObservingSyncStatusWithCompletion:(id /* block */)completion;
- (id)remote_startSyncIfRestoreNotCompletedWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)_cloudKitIdentityUpdated:(id)updated;
- (void)cloudSyncManager:(id)manager didUpdateSyncEnabled:(BOOL)enabled;
- (void)cloudSyncManager:(id)manager didUpdateLastPushDate:(id)date;
- (void)cloudSyncManager:(id)manager didUpdateLastLitePushDate:(id)date;
- (void)cloudSyncManager:(id)manager didUpdateLastPullDate:(id)date;
- (void)cloudSyncManager:(id)manager didUpdateLastPulledUpdateDate:(id)date;
- (void)cloudSyncManager:(id)manager didUpdateErrorRequiringUserAction:(id)action;
- (void)cloudSyncManager:(id)manager didUpdateRestoreCompletionDate:(id)date;
- (void)cloudSyncManager:(id)manager didUpdateDataUploadRequestStatus:(long long)status startDate:(id)date endDate:(id)date;
@end

#endif /* HDCloudSyncObserverTaskServer_h */
