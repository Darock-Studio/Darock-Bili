//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDHealthServicesServer_h
#define HDHealthServicesServer_h
@import Foundation;

#include "HDStandardTaskServer.h"
#include "HDHealthServiceManager.h"
#include "HDIdentifierTable.h"
#include "HKHealthServicesServerInterface-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface HDHealthServicesServer : HDStandardTaskServer<HKHealthServicesServerInterface> {
  /* instance variables */
  HDHealthServiceManager *_healthServiceManager;
  NSObject<OS_dispatch_queue> *_queue;
  HDIdentifierTable *_healthServiceDiscoveryServerIDs;
  NSMutableDictionary *_healthServiceDiscoveryClientIDs;
  HDIdentifierTable *_healthDeviceSessionServerIDs;
  NSMutableDictionary *_healthServiceSessionClientIDs;
  NSMutableSet *_healthServiceClosedSessionServerIDs;
  NSMutableSet *_healthServiceClosedSessionClientIDs;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)createTaskServerWithUUID:(id)uuid configuration:(id)configuration client:(id)client delegate:(id)delegate error:(id *)error;
+ (id)requiredEntitlements;
+ (id)taskIdentifier;

/* instance methods */
- (id)initWithUUID:(id)uuid configuration:(id)configuration client:(id)client delegate:(id)delegate;
- (void)remote_beginBluetoothStatusUpdates:(id /* block */)updates;
- (void)remote_endBluetoothStatusUpdates;
- (void)remote_fetchSupportedServiceIDsWithCompletion:(id /* block */)completion;
- (void)remote_startHealthServiceDiscovery:(long long)discovery withCompletion:(id /* block */)completion;
- (void)remote_endHealthServiceDiscovery:(unsigned long long)discovery;
- (void)remote_startHealthServiceSession:(id)session withCompletion:(id /* block */)completion;
- (void)remote_endHealthServiceSession:(unsigned long long)session;
- (void)remote_getHealthPeripheralsWithFilter:(unsigned long long)filter handler:(id /* block */)handler;
- (void)remote_addPairingForHealthService:(id)service withCompletion:(id /* block */)completion;
- (void)remote_removePairingForHealthService:(id)service withCompletion:(id /* block */)completion;
- (void)remote_addPeripheral:(id)peripheral name:(id)name forServices:(id)services withCompletion:(id /* block */)completion;
- (void)remote_removePeripheral:(id)peripheral withCompletion:(id /* block */)completion;
- (void)remote_getEnabledStatusForPeripheral:(id)peripheral withCompletion:(id /* block */)completion;
- (void)remote_setEnabledStatus:(BOOL)status forPeripheral:(id)peripheral withCompletion:(id /* block */)completion;
- (void)remote_getSupportedPropertyNamesWithHandler:(id /* block */)handler;
- (void)remote_getHealthServiceProperty:(id)property forSession:(unsigned long long)session withHandler:(id /* block */)handler;
- (void)remote_performHealthServiceOperation:(id)operation onSession:(unsigned long long)session withParameters:(id)parameters completion:(id /* block */)completion;
- (void)connectionInterrupted;
- (id)exportedInterface;
- (id)remoteInterface;
@end

#endif /* HDHealthServicesServer_h */
