//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDSQLiteEntity_h
#define HDSQLiteEntity_h
@import Foundation;

#include "HDSQLiteSchemaEntity.h"
#include "HDSQLiteEntity-Protocol.h"
#include "NSCopying-Protocol.h"

@class NSString;

@interface HDSQLiteEntity : HDSQLiteSchemaEntity<HDSQLiteEntity, NSCopying>

@property (readonly, nonatomic) long long persistentID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)anyInDatabase:(id)database predicate:(id)predicate error:(id *)error;
+ (id)firstInDatabase:(id)database predicate:(id)predicate orderingTerms:(id)terms error:(id *)error;
+ (BOOL)enumerateEntitiesInDatabase:(id)database predicate:(id)predicate error:(id *)error enumerationHandler:(id /* block */)handler;
+ (BOOL)enumerateQueryResultsFromColumns:(id)columns properties:(id)properties predicate:(id)predicate groupBy:(id)by orderingTerms:(id)terms limit:(long long)limit database:(id)database error:(id *)error enumerationHandler:(id /* block */)handler;
+ (BOOL)deleteEntitiesInDatabase:(id)database predicate:(id)predicate error:(id *)error;
+ (id)propertyValueForAnyInDatabase:(id)database property:(id)property predicate:(id)predicate error:(id *)error;
+ (id)aggregateValuesForProperty:(id)property functions:(id)functions predicate:(id)predicate groupBy:(id)by database:(id)database error:(id *)error;
+ (id)aggregateValuesForProperty:(id)property functions:(id)functions queryDescriptor:(id)descriptor database:(id)database error:(id *)error;
+ (id)aggregateSingleValueForProperty:(id)property function:(id)function predicate:(id)predicate database:(id)database error:(id *)error;
+ (id)aggregateSingleValueForProperty:(id)property function:(id)function queryDescriptor:(id)descriptor database:(id)database error:(id *)error;
+ (id)maxValueForProperty:(id)property predicate:(id)predicate database:(id)database error:(id *)error;
+ (id)sumValueForProperty:(id)property predicate:(id)predicate database:(id)database error:(id *)error;
+ (id)countValueForProperty:(id)property predicate:(id)predicate database:(id)database error:(id *)error;
+ (id)maxPersistentIDWithPredicate:(id)predicate database:(id)database error:(id *)error;
+ (id)countDistinctForProperty:(id)property predicate:(id)predicate database:(id)database error:(id *)error;
+ (id)distinctProperty:(id)property predicate:(id)predicate database:(id)database error:(id *)error;
+ (id)queryWithDatabase:(id)database predicate:(id)predicate;
+ (id)queryWithDatabase:(id)database predicate:(id)predicate limit:(unsigned long long)limit orderingTerms:(id)terms groupBy:(id)by;
+ (id)entityWithPersistentID:(id)id;
+ (BOOL)hasROWID;
+ (id)primaryKeyColumns;
+ (id)additionalPredicateForEnumeration;
+ (id)insertOrReplaceEntity:(BOOL)entity database:(id)database properties:(id)properties error:(id *)error bindingHandler:(id /* block */)handler;
+ (long long)sizeOfEntityTableInDatabase:(id)database;
+ (BOOL)updateProperties:(id)properties predicate:(id)predicate database:(id)database error:(id *)error bindingHandler:(id /* block */)handler;

/* instance methods */
- (id)initWithPersistentID:(long long)id;
- (BOOL)updateProperties:(id)properties database:(id)database error:(id *)error bindingHandler:(id /* block */)handler;
- (BOOL)deleteFromDatabase:(id)database error:(id *)error;
- (void)willDeleteFromDatabase:(id)database;
- (BOOL)existsInDatabase:(id)database;
- (BOOL)getValuesForProperties:(id)properties database:(id)database handler:(id /* block */)handler;
- (BOOL)getValuesForProperties:(id)properties database:(id)database error:(id *)error handler:(id /* block */)handler;
- (id)valueForProperty:(id)property database:(id)database;
- (BOOL)booleanForProperty:(id)property database:(id)database;
- (id)dateForProperty:(id)property database:(id)database;
- (id)numberForProperty:(id)property database:(id)database;
- (id)stringForProperty:(id)property database:(id)database;
- (id)UUIDForProperty:(id)property database:(id)database;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* HDSQLiteEntity_h */
