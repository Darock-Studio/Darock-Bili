//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDQuantityDistributionCalculator_h
#define HDQuantityDistributionCalculator_h
@import Foundation;

@protocol {HistogramState="_dateBuckets"{vector<HistogramBucket, std::allocator<HistogramBucket>>="__begin_"^{HistogramBucket}"__end_"^{HistogramBucket}"__end_cap_"{__compressed_pair<HistogramBucket *, std::allocator<HistogramBucket>>="__value_"^{HistogramBucket}}}"_histogramBucketAnchor"d"_histogramBucketSize"d"_currentStartDateBucket"q};

@interface HDQuantityDistributionCalculator : NSObject {
  /* instance variables */
  struct HistogramState { struct vector<HistogramBucket, std::allocator<HistogramBucket>> { struct HistogramBucket *__begin_; struct HistogramBucket *__end_; struct __compressed_pair<HistogramBucket *, std::allocator<HistogramBucket>> { struct HistogramBucket *__value_; } __end_cap_; } _dateBuckets; double _histogramBucketAnchor; double _histogramBucketSize; long long _currentStartDateBucket; } _histogramState;
}

/* instance methods */
- (id)initWithStartDate:(id)date endDate:(id)date anchorDate:(id)date intervalComponents:(id)components histogramBucketAnchor:(double)anchor histogramBucketSize:(double)size;
- (void)addDataPoint:(double)point startTime:(double)time endTime:(double)time;
- (id)quantityDistributionsWithUnit:(id)unit;
- (BOOL)validateDateSequenceForTesting:(id)testing;
@end

#endif /* HDQuantityDistributionCalculator_h */
