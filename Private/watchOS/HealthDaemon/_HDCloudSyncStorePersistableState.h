//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef _HDCloudSyncStorePersistableState_h
#define _HDCloudSyncStorePersistableState_h
@import Foundation;

#include "HDSyncIdentity.h"
#include "NSCopying-Protocol.h"

@class CKServerChangeToken, NSDate, NSDictionary, NSString;

@interface _HDCloudSyncStorePersistableState : NSObject<NSCopying>

@property (readonly, nonatomic) NSString *ownerIdentifier;
@property (readonly, nonatomic) NSString *containerIdentifier;
@property (readonly, nonatomic) HDSyncIdentity *syncIdentity;
@property (readonly, nonatomic) CKServerChangeToken *serverChangeToken;
@property (readonly, nonatomic) unsigned long long baselineEpoch;
@property (readonly, nonatomic) NSDate *rebaseDeadline;
@property (readonly, nonatomic) NSDate *lastSyncDate;
@property (readonly, nonatomic) NSDictionary *emptyZoneDateByZoneID;
@property (readonly, nonatomic) NSDate *lastCheckDate;
@property (readonly, nonatomic) BOOL hasEncounteredGapInCurrentEpoch;
@property (readonly, nonatomic) int syncProtocolVersion;

/* instance methods */
- (id)initWithServerChangeToken:(id)token baselineEpoch:(unsigned long long)epoch rebaseDeadline:(id)deadline lastSyncDate:(id)date emptyZones:(id)zones lastCheckDate:(id)date ownerIdentifier:(id)identifier containerIdentifier:(id)identifier syncIdentity:(id)identity syncProtocolVersion:(int)version;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)stateWithServerChangeToken:(id)token;
- (id)stateByResettingRebaselineDeadline;
- (id)stateByRequiringUrgentRebase;
- (id)stateByRecordingLastSyncDate:(id)date;
- (id)stateWithEmptyZones:(id)zones;
- (id)stateByRecordingLastCheckDate:(id)date;
- (id)stateWithGapEncountered:(BOOL)encountered;
- (id)stateWithBaselineEpoch:(unsigned long long)epoch;
- (id)stateWithSyncProtocolVersion:(int)version;
@end

#endif /* _HDCloudSyncStorePersistableState_h */
