//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WebFrameView_h
#define WebFrameView_h
@import Foundation;

#include "WAKView.h"
#include "WebCoreFrameView-Protocol.h"
#include "WebFrame.h"
#include "WebFrameViewPrivate.h"

@protocol WAKView<WebDocumentView;

@interface WebFrameView : WAKView<WebCoreFrameView> {
  /* instance variables */
  WebFrameViewPrivate *_private;
}

@property (readonly, nonatomic) WebFrame *webFrame;
@property (readonly, nonatomic) WAKView<WebDocumentView> *documentView;
@property (nonatomic) BOOL allowsScrolling;
@property (readonly, nonatomic) BOOL documentViewShouldHandlePrint;

/* class methods */
+ (id)_viewTypesAllowImageTypeOmission:(BOOL)omission;
+ (BOOL)_canShowMIMETypeAsHTML:(id)html;
+ (Class)_viewClassForMIMEType:(id)mimetype allowingPlugins:(BOOL)plugins;

/* instance methods */
- (void)frameSizeChanged;
- (float)_area;
- (BOOL)_isScrollable;
- (id)_largestScrollableChild;
- (BOOL)_hasScrollBars;
- (id)_largestChildWithScrollBars;
- (id)_contentView;
- (Class)_customScrollViewClass;
- (id)_webView;
- (void)_setDocumentView:(id)view;
- (id)_makeDocumentViewForDataSource:(id)source;
- (void)_setWebFrame:(id)frame;
- (id)_scrollView;
- (float)_verticalPageScrollDistance;
- (Class)_viewClassForMIMEType:(id)mimetype;
- (void)_install;
- (void)_frameSizeChanged;
- (float)_verticalKeyboardScrollDistance;
- (struct NakedPtr<WebCore::LocalFrame> { struct LocalFrame * x0; })_web_frame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)dealloc;
- (BOOL)scrollView:(id)view shouldScrollToPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)setNextKeyView:(id)view;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visibleRect;
- (void)setFrameSize:(struct CGSize { double x0; double x1; })size;
- (void)viewDidMoveToWindow;
- (BOOL)_scrollOverflowInDirection:(unsigned char)direction granularity:(unsigned char)granularity;
- (BOOL)_isVerticalDocument;
- (BOOL)_isFlippedDocument;
- (BOOL)_scrollToBeginningOfDocument;
- (BOOL)_scrollToEndOfDocument;
- (void)scrollToBeginningOfDocument:(id)document;
- (void)scrollToEndOfDocument:(id)document;
- (void)_goBack;
- (void)_goForward;
- (BOOL)_scrollVerticallyBy:(float)by;
- (BOOL)_scrollHorizontallyBy:(float)by;
- (float)_horizontalKeyboardScrollDistance;
- (float)_horizontalPageScrollDistance;
- (BOOL)_pageVertically:(BOOL)vertically;
- (BOOL)_pageHorizontally:(BOOL)horizontally;
- (BOOL)_pageInBlockProgressionDirection:(BOOL)direction;
- (BOOL)_scrollLineVertically:(BOOL)vertically;
- (BOOL)_scrollLineHorizontally:(BOOL)horizontally;
- (void)scrollPageUp:(id)up;
- (void)scrollPageDown:(id)down;
- (void)scrollLineUp:(id)up;
- (void)scrollLineDown:(id)down;
- (BOOL)_firstResponderIsFormControl;
- (void)_forwardMouseEvent:(id)event;
- (void)mouseDown:(id)down;
- (void)mouseUp:(id)up;
- (void)keyDown:(id)down;
- (id)_webcore_effectiveFirstResponder;
- (void)printDocumentView;
@end

#endif /* WebFrameView_h */
