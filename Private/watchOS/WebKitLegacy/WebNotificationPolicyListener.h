//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WebNotificationPolicyListener_h
#define WebNotificationPolicyListener_h
@import Foundation;

#include "WebAllowDenyPolicyListener-Protocol.h"

@class NSString;
@protocol {CompletionHandler<void (WebCore::NotificationPermission)>="m_function"{Function<void (WebCore::NotificationPermission)>="m_callableWrapper"{unique_ptr<WTF::Detail::CallableWrapperBase<void, WebCore::NotificationPermission>, std::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::NotificationPermission>>>="__ptr_"{__compressed_pair<WTF::Detail::CallableWrapperBase<void, WebCore::NotificationPermission> *, std::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::NotificationPermission>>>="__value_"^v}}}};

@interface WebNotificationPolicyListener : NSObject<WebAllowDenyPolicyListener> {
  /* instance variables */
  struct CompletionHandler<void (WebCore::NotificationPermission)> { struct Function<void (WebCore::NotificationPermission)> { struct unique_ptr<WTF::Detail::CallableWrapperBase<void, WebCore::NotificationPermission>, std::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::NotificationPermission>>> { struct __compressed_pair<WTF::Detail::CallableWrapperBase<void, WebCore::NotificationPermission> *, std::default_delete<WTF::Detail::CallableWrapperBase<void, WebCore::NotificationPermission>>> { void *__value_; } __ptr_; } m_callableWrapper; } m_function; } _permissionHandler;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithPermissionHandler:(void *)handler;
- (void)allow;
- (void)deny;
- (void)denyOnlyThisRequest;
- (BOOL)shouldClearCache;
@end

#endif /* WebNotificationPolicyListener_h */
