//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef DOMNode_h
#define DOMNode_h
@import Foundation;

#include "DOMObject.h"
#include "DOMDocument.h"
#include "DOMElement.h"
#include "DOMEventTarget-Protocol.h"
#include "DOMNamedNodeMap.h"
#include "DOMNode.h"
#include "DOMNodeList.h"
#include "WebArchive.h"

@class NSString;

@interface DOMNode : DOMObject<DOMEventTarget>

@property (readonly, nonatomic) WebArchive *webArchive;
@property (readonly, copy) NSString *nodeName;
@property (copy) NSString *nodeValue;
@property (readonly) unsigned short nodeType;
@property (readonly) DOMNode *parentNode;
@property (readonly) DOMNodeList *childNodes;
@property (readonly) DOMNode *firstChild;
@property (readonly) DOMNode *lastChild;
@property (readonly) DOMNode *previousSibling;
@property (readonly) DOMNode *nextSibling;
@property (readonly) DOMDocument *ownerDocument;
@property (readonly, copy) NSString *namespaceURI;
@property (copy) NSString *prefix;
@property (readonly, copy) NSString *localName;
@property (readonly) DOMNamedNodeMap *attributes;
@property (readonly, copy) NSString *baseURI;
@property (copy) NSString *textContent;
@property (readonly) DOMElement *parentElement;
@property (readonly) BOOL isContentEditable;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_nodeFromJSWrapper:(struct OpaqueJSValue *)jswrapper;

/* instance methods */
- (id)rangeOfContents;
- (id)startPosition;
- (id)endPosition;
- (id)markupString;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_renderRect:(BOOL *)rect;
- (id)webArchiveByFilteringSubframes:(id /* block */)subframes;
- (BOOL)isHorizontalWritingMode;
- (void)hidePlaceholder;
- (void)showPlaceholderIfNecessary;
- (id)boundingBoxes;
- (id)absoluteQuads;
- (id)borderRadii;
- (BOOL)containsOnlyInlineObjects;
- (BOOL)isSelectableBlock;
- (id)rangeOfContainingParagraph;
- (double)textHeight;
- (id)findExplodedTextNodeAtPoint:(struct CGPoint { double x0; double x1; })point;
- (id)insertBefore:(id)before;
- (id)replaceChild:(id)child;
- (BOOL)isSupported:(id)supported;
- (void)getPreviewSnapshotImage:(struct CGImage * *)image andRects:(id *)rects;
- (id)textRects;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundingBox;
- (id)lineBoxRects;
- (struct _WKQuad { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })absoluteQuad;
- (struct _WKQuad { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })absoluteQuadAndInsideFixedPosition:(BOOL *)position;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundingBoxUsingTransforms;
- (id)lineBoxQuads;
- (void *)_linkElement;
- (id)hrefURL;
- (id)hrefTarget;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })hrefFrame;
- (id)hrefLabel;
- (id)hrefTitle;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundingFrame;
- (struct _WKQuad { struct CGPoint { double x0; double x1; } x0; struct CGPoint { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; })innerFrameQuad;
- (float)computedFontSize;
- (id)nextFocusNode;
- (id)previousFocusNode;
- (struct RootObject *)_rootObject;
- (void)dealloc;
- (BOOL)isConnected;
- (id)insertBefore:(id)before refChild:(id)child;
- (id)replaceChild:(id)child oldChild:(id)child;
- (id)removeChild:(id)child;
- (id)appendChild:(id)child;
- (BOOL)hasChildNodes;
- (id)cloneNode:(BOOL)node;
- (void)normalize;
- (BOOL)isSupported:(id)supported version:(id)version;
- (BOOL)hasAttributes;
- (BOOL)isSameNode:(id)node;
- (BOOL)isEqualNode:(id)node;
- (id)lookupPrefix:(id)prefix;
- (id)lookupNamespaceURI:(id)uri;
- (BOOL)isDefaultNamespace:(id)namespace;
- (unsigned short)compareDocumentPosition:(id)position;
- (BOOL)contains:(id)contains;
- (void)inspect;
- (void)addEventListener:(id)listener listener:(id)listener useCapture:(BOOL)capture;
- (void)addEventListener:(id)listener;
- (void)removeEventListener:(id)listener listener:(id)listener useCapture:(BOOL)capture;
- (void)removeEventListener:(id)listener;
- (BOOL)dispatchEvent:(id)event;
@end

#endif /* DOMNode_h */
