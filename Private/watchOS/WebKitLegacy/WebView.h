//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WebView_h
#define WebView_h
@import Foundation;

#include "WAKView.h"
#include "DOMCSSStyleDeclaration.h"
#include "DOMDocument.h"
#include "DOMRange.h"
#include "WebBackForwardList.h"
#include "WebFrame.h"
#include "WebPolicyDelegate-Protocol.h"
#include "WebPreferences.h"
#include "WebUIDelegate-Protocol.h"
#include "WebViewPrivate.h"

@class Class *, NSData, NSString, NSUndoManager, WAKWindow, WebScriptObject;
@protocol WebDownloadDelegate, WebEditingDelegate, WebFrameLoadDelegate, WebResourceLoadDelegate;

@interface WebView : WAKView {
  /* instance variables */
  WebViewPrivate *_private;
}

@property (nonatomic) BOOL _useDarkAppearance;
@property (nonatomic) BOOL _useElevatedUserInterfaceLevel;
@property (copy, nonatomic) NSData *sourceApplicationAuditData;
@property (nonatomic) struct WebEdgeInsets { double x0; double x1; double x2; double x3; } _unobscuredSafeAreaInsets;
@property (nonatomic) BOOL _useSystemAppearance;
@property (readonly, nonatomic) BOOL canGoBack;
@property (readonly, nonatomic) BOOL canGoForward;
@property (readonly, nonatomic) BOOL canMakeTextLarger;
@property (readonly, nonatomic) BOOL canMakeTextSmaller;
@property (readonly, nonatomic) BOOL canMakeTextStandardSize;
@property (readonly, nonatomic) DOMRange *selectedDOMRange;
@property (readonly, nonatomic) unsigned long long selectionAffinity;
@property (readonly, nonatomic) BOOL maintainsInactiveSelection;
@property (nonatomic) BOOL editable;
@property (retain, nonatomic) DOMCSSStyleDeclaration *typingStyle;
@property (nonatomic) BOOL smartInsertDeleteEnabled;
@property (nonatomic) BOOL continuousSpellCheckingEnabled;
@property (readonly, nonatomic) NSUndoManager *undoManager;
@property (nonatomic) NSObject<WebEditingDelegate> *editingDelegate;
@property (nonatomic) BOOL shouldCloseWithWindow;
@property (nonatomic) NSObject<WebUIDelegate> *UIDelegate;
@property (nonatomic) NSObject<WebResourceLoadDelegate> *resourceLoadDelegate;
@property (nonatomic) NSObject<WebDownloadDelegate> *downloadDelegate;
@property (nonatomic) NSObject<WebFrameLoadDelegate> *frameLoadDelegate;
@property (nonatomic) NSObject<WebPolicyDelegate> *policyDelegate;
@property (readonly, nonatomic) WebFrame *mainFrame;
@property (readonly, nonatomic) WebFrame *selectedFrame;
@property (readonly, nonatomic) WebBackForwardList *backForwardList;
@property (nonatomic) float textSizeMultiplier;
@property (copy, nonatomic) NSString *applicationNameForUserAgent;
@property (copy, nonatomic) NSString *customUserAgent;
@property (readonly, nonatomic) BOOL supportsTextEncoding;
@property (copy, nonatomic) NSString *customTextEncodingName;
@property (copy, nonatomic) NSString *mediaStyle;
@property (readonly, nonatomic) WebScriptObject *windowScriptObject;
@property (retain, nonatomic) WebPreferences *preferences;
@property (copy, nonatomic) NSString *preferencesIdentifier;
@property (retain, nonatomic) WAKWindow *hostWindow;
@property (copy, nonatomic) NSString *groupName;
@property (readonly, nonatomic) double estimatedProgress;
@property (readonly, nonatomic) BOOL loading;
@property (nonatomic) BOOL drawsBackground;
@property (nonatomic) BOOL shouldUpdateWhileOffscreen;
@property (copy, nonatomic) NSString *mainFrameURL;
@property (readonly, nonatomic) DOMDocument *mainFrameDocument;
@property (readonly, copy, nonatomic) NSString *mainFrameTitle;

/* class methods */
+ (Class)_getPDFRepresentationClass;
+ (void)_setPDFRepresentationClass:(Class)class;
+ (Class)_getPDFViewClass;
+ (void)_setPDFViewClass:(Class)class;
+ (void)_setFontAllowList:(id)list;
+ (BOOL)shouldIncludeInWebKitStatistics;
+ (void)_setCacheModel:(unsigned long long)model;
+ (unsigned long long)_cacheModel;
+ (id)_standardUserAgentWithApplicationName:(id)name;
+ (void)_reportException:(struct OpaqueJSValue *)exception inContext:(struct OpaqueJSContext *)context;
+ (id)_supportedMIMETypes;
+ (void)enableWebThread;
+ (void)_releaseMemoryNow;
+ (void)willEnterBackgroundWithCompletionHandler:(id /* block */)handler;
+ (BOOL)isCharacterSmartReplaceExempt:(unsigned short)exempt isPreviousCharacter:(BOOL)character;
+ (void)_registerPluginMIMEType:(id)mimetype;
+ (void)_unregisterPluginMIMEType:(id)mimetype;
+ (BOOL)_viewClass:(Class *)class andRepresentationClass:(Class *)class forMIMEType:(id)mimetype allowingPlugins:(BOOL)plugins;
+ (void)_setAlwaysUsesComplexTextCodePath:(BOOL)path;
+ (BOOL)canCloseAllWebViews;
+ (void)closeAllWebViews;
+ (BOOL)canShowFile:(id)file;
+ (BOOL)_isUnderMemoryPressure;
+ (id)_MIMETypeForFile:(id)file;
+ (void)_setIconLoadingEnabled:(BOOL)enabled;
+ (BOOL)_isIconLoadingEnabled;
+ (void)_enableRemoteInspector;
+ (void)_disableRemoteInspector;
+ (void)_disableAutoStartRemoteInspector;
+ (BOOL)_isRemoteInspectorEnabled;
+ (BOOL)_hasRemoteInspectorSession;
+ (void)_unregisterViewClassAndRepresentationClassForMIMEType:(id)mimetype;
+ (void)_registerViewClass:(Class)class representationClass:(Class)class forURLScheme:(id)urlscheme;
+ (id)_generatedMIMETypeForURLScheme:(id)urlscheme;
+ (BOOL)_representationExistsForURLScheme:(id)urlscheme;
+ (BOOL)_canHandleRequest:(id)request forMainFrame:(BOOL)frame;
+ (BOOL)_canHandleRequest:(id)request;
+ (id)_decodeData:(id)data;
+ (id)_productivityDocumentMIMETypes;
+ (void)_doNotStartObservingNetworkReachability;
+ (void)_addOriginAccessAllowListEntryWithSourceOrigin:(id)origin destinationProtocol:(id)protocol destinationHost:(id)host allowDestinationSubdomains:(BOOL)subdomains;
+ (void)_removeOriginAccessAllowListEntryWithSourceOrigin:(id)origin destinationProtocol:(id)protocol destinationHost:(id)host allowDestinationSubdomains:(BOOL)subdomains;
+ (void)_resetOriginAccessAllowLists;
+ (void)_addUserScriptToGroup:(id)group world:(id)world source:(id)source url:(id)url includeMatchPatternStrings:(id)strings excludeMatchPatternStrings:(id)strings injectionTime:(int)time injectedFrames:(int)frames;
+ (void)_addUserStyleSheetToGroup:(id)group world:(id)world source:(id)source url:(id)url includeMatchPatternStrings:(id)strings excludeMatchPatternStrings:(id)strings injectedFrames:(int)frames;
+ (void)_removeUserScriptFromGroup:(id)group world:(id)world url:(id)url;
+ (void)_removeUserStyleSheetFromGroup:(id)group world:(id)world url:(id)url;
+ (void)_removeUserScriptsFromGroup:(id)group world:(id)world;
+ (void)_removeUserStyleSheetsFromGroup:(id)group world:(id)world;
+ (void)_removeAllUserContentFromGroup:(id)group;
+ (void)_setDomainRelaxationForbidden:(BOOL)forbidden forURLScheme:(id)urlscheme;
+ (void)_registerURLSchemeAsSecure:(id)secure;
+ (void)_registerURLSchemeAsAllowingLocalStorageAccessInPrivateBrowsing:(id)browsing;
+ (void)_registerURLSchemeAsAllowingDatabaseAccessInPrivateBrowsing:(id)browsing;
+ (void)_setLoadResourcesSerially:(BOOL)serially;
+ (BOOL)_HTTPPipeliningEnabled;
+ (void)_setHTTPPipeliningEnabled:(BOOL)enabled;
+ (void)_setTileCacheLayerPoolCapacity:(unsigned int)capacity;
+ (void)_makeAllWebViewsPerformSelector:(SEL)selector;
+ (void)initialize;
+ (BOOL)_canShowMIMEType:(id)mimetype allowingPlugins:(BOOL)plugins;
+ (BOOL)canShowMIMEType:(id)mimetype;
+ (BOOL)canShowMIMETypeAsHTML:(id)html;
+ (id)MIMETypesShownAsHTML;
+ (void)setMIMETypesShownAsHTML:(id)html;
+ (void)registerURLSchemeAsLocal:(id)local;
+ (void)registerViewClass:(Class)class representationClass:(Class)class forMIMEType:(id)mimetype;
+ (BOOL)_didSetCacheModel;
+ (unsigned long long)_maxCacheModelInAnyInstance;
+ (void)_cacheModelChangedNotification:(id)notification;
+ (void)_preferencesRemovedNotification:(id)notification;
+ (void)_preflightSpellCheckerNow:(id)now;
+ (void)_preflightSpellChecker;

/* instance methods */
- (void)_preferencesChangedGenerated:(id)generated;
- (id)fullScreenPlaceholderView;
- (id)_editableElementsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)revealCurrentSelection;
- (void)_installVisualIdentificationOverlayForViewIfNeeded:(id)needed kind:(id)kind;
- (void)_setNotificationProvider:(id)provider;
- (id)_notificationProvider;
- (void)_notificationDidShow:(id)show;
- (void)_notificationDidClick:(id)click;
- (void)_notificationsDidClose:(id)close;
- (id)_notificationIDForTesting:(struct OpaqueJSValue *)testing;
- (void)_clearNotificationPermissionState;
- (void)_setGeolocationProvider:(id)provider;
- (id)_geolocationProvider;
- (void)_geolocationDidChangePosition:(id)position;
- (void)_geolocationDidFailWithMessage:(id)message;
- (void)_resetAllGeolocationPermission;
- (void)_setDeviceOrientationProvider:(id)provider;
- (id)_deviceOrientationProvider;
- (BOOL)_becomingFirstResponderFromOutside;
- (void)_addObject:(id)object forIdentifier:(unsigned long long)identifier;
- (id)_objectForIdentifier:(unsigned long long)identifier;
- (void)_removeObjectForIdentifier:(unsigned long long)identifier;
- (void)_retrieveKeyboardUIModeFromPreferences:(id)preferences;
- (int)_keyboardUIMode;
- (void *)_mainCoreFrame;
- (id)_selectedOrMainFrame;
- (void)_clearCredentials;
- (BOOL)_needsOneShotDrawingSynchronization;
- (void)_setNeedsOneShotDrawingSynchronization:(BOOL)synchronization;
- (void)_scheduleUpdateRendering;
- (void)_updateRendering;
- (void)_willStartRenderingUpdateDisplay;
- (void)_didCompleteRenderingUpdateDisplay;
- (void)_didCompleteRenderingFrame;
- (BOOL)_flushCompositingChanges;
- (void)_scheduleRenderingUpdateForPendingTileCacheRepaint;
- (void)_enterVideoFullscreenForVideoElement:(struct NakedPtr<WebCore::HTMLVideoElement> { struct HTMLVideoElement * x0; })element mode:(unsigned int)mode;
- (void)_exitVideoFullscreen;
- (void)_getWebCoreDictationAlternatives:(void *)alternatives fromTextAlternatives:(const void *)alternatives;
- (void)_showDictationAlternativeUI:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)ui forDictationContext:(struct ObjectIdentifierGeneric<WebCore::DictationContextType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; })context;
- (void)_removeDictationAlternatives:(struct ObjectIdentifierGeneric<WebCore::DictationContextType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; })alternatives;
- (struct Vector<WTF::String, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct String * x0; unsigned int x1; unsigned int x2; })_dictationAlternatives:(struct ObjectIdentifierGeneric<WebCore::DictationContextType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; })alternatives;
- (struct CGPoint { double x0; double x1; })_convertPointFromRootView:(struct CGPoint { double x0; double x1; })view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_convertRectFromRootView:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })view;
- (void)showFormValidationMessage:(id)message withAnchorRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)hideFormValidationMessage;
- (void)updateTouchBar;
- (void)prepareForMouseDown;
- (void)prepareForMouseUp;
- (id)candidateList;
- (void)_windowVisibilityChanged:(id)changed;
- (void)_closeWindow;
- (void)_insertNewlineInQuotedContent;
- (void)_replaceSelectionWithNode:(id)node matchStyle:(BOOL)style;
- (BOOL)_selectionIsCaret;
- (BOOL)_selectionIsAll;
- (void)_simplifyMarkup:(id)markup endNode:(id)node;
- (void)_performResponderOperation:(SEL)operation with:(id)with;
- (void)alignCenter:(id)center;
- (void)alignJustified:(id)justified;
- (void)alignLeft:(id)left;
- (void)alignRight:(id)right;
- (void)capitalizeWord:(id)word;
- (void)centerSelectionInVisibleArea:(id)area;
- (void)changeAttributes:(id)attributes;
- (void)changeBaseWritingDirection:(id)direction;
- (void)changeBaseWritingDirectionToLTR:(id)ltr;
- (void)changeBaseWritingDirectionToRTL:(id)rtl;
- (void)changeColor:(id)color;
- (void)changeDocumentBackgroundColor:(id)color;
- (void)changeFont:(id)font;
- (void)changeSpelling:(id)spelling;
- (void)checkSpelling:(id)spelling;
- (void)complete:(id)complete;
- (void)copy:(id)copy;
- (void)copyFont:(id)font;
- (void)cut:(id)cut;
- (void)delete:(id)delete;
- (void)deleteBackward:(id)backward;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)character;
- (void)deleteForward:(id)forward;
- (void)deleteToBeginningOfLine:(id)line;
- (void)deleteToBeginningOfParagraph:(id)paragraph;
- (void)deleteToEndOfLine:(id)line;
- (void)deleteToEndOfParagraph:(id)paragraph;
- (void)deleteToMark:(id)mark;
- (void)deleteWordBackward:(id)backward;
- (void)deleteWordForward:(id)forward;
- (void)ignoreSpelling:(id)spelling;
- (void)indent:(id)indent;
- (void)insertBacktab:(id)backtab;
- (void)insertLineBreak:(id)break;
- (void)insertNewline:(id)newline;
- (void)insertNewlineIgnoringFieldEditor:(id)editor;
- (void)insertParagraphSeparator:(id)separator;
- (void)insertTab:(id)tab;
- (void)insertTabIgnoringFieldEditor:(id)editor;
- (void)lowercaseWord:(id)word;
- (void)makeBaseWritingDirectionLeftToRight:(id)right;
- (void)makeBaseWritingDirectionRightToLeft:(id)left;
- (void)makeTextWritingDirectionLeftToRight:(id)right;
- (void)makeTextWritingDirectionNatural:(id)natural;
- (void)makeTextWritingDirectionRightToLeft:(id)left;
- (void)moveBackward:(id)backward;
- (void)moveBackwardAndModifySelection:(id)selection;
- (void)moveDown:(id)down;
- (void)moveDownAndModifySelection:(id)selection;
- (void)moveForward:(id)forward;
- (void)moveForwardAndModifySelection:(id)selection;
- (void)moveLeft:(id)left;
- (void)moveLeftAndModifySelection:(id)selection;
- (void)moveParagraphBackwardAndModifySelection:(id)selection;
- (void)moveParagraphForwardAndModifySelection:(id)selection;
- (void)moveRight:(id)right;
- (void)moveRightAndModifySelection:(id)selection;
- (void)moveToBeginningOfDocument:(id)document;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)selection;
- (void)moveToBeginningOfLine:(id)line;
- (void)moveToBeginningOfLineAndModifySelection:(id)selection;
- (void)moveToBeginningOfParagraph:(id)paragraph;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)selection;
- (void)moveToBeginningOfSentence:(id)sentence;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)selection;
- (void)moveToEndOfDocument:(id)document;
- (void)moveToEndOfDocumentAndModifySelection:(id)selection;
- (void)moveToEndOfLine:(id)line;
- (void)moveToEndOfLineAndModifySelection:(id)selection;
- (void)moveToEndOfParagraph:(id)paragraph;
- (void)moveToEndOfParagraphAndModifySelection:(id)selection;
- (void)moveToEndOfSentence:(id)sentence;
- (void)moveToEndOfSentenceAndModifySelection:(id)selection;
- (void)moveToLeftEndOfLine:(id)line;
- (void)moveToLeftEndOfLineAndModifySelection:(id)selection;
- (void)moveToRightEndOfLine:(id)line;
- (void)moveToRightEndOfLineAndModifySelection:(id)selection;
- (void)moveUp:(id)up;
- (void)moveUpAndModifySelection:(id)selection;
- (void)moveWordBackward:(id)backward;
- (void)moveWordBackwardAndModifySelection:(id)selection;
- (void)moveWordForward:(id)forward;
- (void)moveWordForwardAndModifySelection:(id)selection;
- (void)moveWordLeft:(id)left;
- (void)moveWordLeftAndModifySelection:(id)selection;
- (void)moveWordRight:(id)right;
- (void)moveWordRightAndModifySelection:(id)selection;
- (void)orderFrontSubstitutionsPanel:(id)panel;
- (void)outdent:(id)outdent;
- (void)overWrite:(id)write;
- (void)pageDown:(id)down;
- (void)pageDownAndModifySelection:(id)selection;
- (void)pageUp:(id)up;
- (void)pageUpAndModifySelection:(id)selection;
- (void)paste:(id)paste;
- (void)pasteAsPlainText:(id)text;
- (void)pasteAsRichText:(id)text;
- (void)pasteFont:(id)font;
- (void)performFindPanelAction:(id)action;
- (void)scrollLineDown:(id)down;
- (void)scrollLineUp:(id)up;
- (void)scrollPageDown:(id)down;
- (void)scrollPageUp:(id)up;
- (void)scrollToBeginningOfDocument:(id)document;
- (void)scrollToEndOfDocument:(id)document;
- (void)selectAll:(id)all;
- (void)selectLine:(id)line;
- (void)selectParagraph:(id)paragraph;
- (void)selectSentence:(id)sentence;
- (void)selectToMark:(id)mark;
- (void)selectWord:(id)word;
- (void)setMark:(id)mark;
- (void)showGuessPanel:(id)panel;
- (void)startSpeaking:(id)speaking;
- (void)stopSpeaking:(id)speaking;
- (void)subscript:(id)subscript;
- (void)superscript:(id)superscript;
- (void)swapWithMark:(id)mark;
- (void)takeFindStringFromSelection:(id)selection;
- (void)toggleBaseWritingDirection:(id)direction;
- (void)transpose:(id)transpose;
- (void)underline:(id)underline;
- (void)unscript:(id)unscript;
- (void)uppercaseWord:(id)word;
- (void)yank:(id)yank;
- (void)yankAndSelect:(id)select;
- (void)clearText:(id)text;
- (void)toggleBold:(id)bold;
- (void)toggleItalic:(id)italic;
- (void)toggleUnderline:(id)underline;
- (void)insertDictationPhrases:(id)phrases metadata:(id)metadata;
- (void)insertText:(id)text;
- (id)typingAttributes;
- (void)replaceSelectionWithNode:(id)node;
- (void)replaceSelectionWithText:(id)text;
- (void)replaceSelectionWithMarkupString:(id)string;
- (void)replaceSelectionWithArchive:(id)archive;
- (void)deleteSelection;
- (void)applyStyle:(id)style;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (BOOL)isAutomaticTextReplacementEnabled;
- (BOOL)isAutomaticSpellingCorrectionEnabled;
- (id)editableDOMRangeForPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)_shouldChangeSelectedDOMRange:(id)domrange toDOMRange:(id)domrange affinity:(unsigned long long)affinity stillSelecting:(BOOL)selecting;
- (void)_setMaintainsInactiveSelection:(BOOL)selection;
- (void)setSelectedDOMRange:(id)domrange affinity:(unsigned long long)affinity;
- (BOOL)isEditable;
- (BOOL)isContinuousSpellCheckingEnabled;
- (void)registerForEditingDelegateNotification:(id)notification selector:(SEL)selector;
- (id)styleDeclarationWithText:(id)text;
- (id)computedStyleForElement:(id)element pseudoElement:(id)element;
- (void)scheduleInRunLoop:(id)loop forMode:(id)mode;
- (void)unscheduleFromRunLoop:(id)loop forMode:(id)mode;
- (BOOL)findString:(id)string options:(unsigned long long)options;
- (id)DOMRangeOfString:(id)string relativeTo:(id)to options:(unsigned long long)options;
- (void)setMainFrameDocumentReady:(BOOL)ready;
- (void)setTabKeyCyclesThroughElements:(BOOL)elements;
- (BOOL)tabKeyCyclesThroughElements;
- (void)setScriptDebugDelegate:(id)delegate;
- (id)scriptDebugDelegate;
- (void)setHistoryDelegate:(id)delegate;
- (id)historyDelegate;
- (BOOL)shouldClose;
- (BOOL)canMarkAllTextMatches;
- (unsigned long long)countMatchesForText:(id)text options:(unsigned long long)options highlight:(BOOL)highlight limit:(unsigned long long)limit markMatches:(BOOL)matches;
- (unsigned long long)countMatchesForText:(id)text inDOMRange:(id)domrange options:(unsigned long long)options highlight:(BOOL)highlight limit:(unsigned long long)limit markMatches:(BOOL)matches;
- (void)unmarkAllTextMatches;
- (id)rectsForTextMatches;
- (void)scrollDOMRangeToVisible:(id)visible;
- (void)scrollDOMRangeToVisible:(id)visible withInset:(double)inset;
- (BOOL)allowsUndo;
- (void)setAllowsUndo:(BOOL)undo;
- (void)setPageSizeMultiplier:(float)multiplier;
- (float)pageSizeMultiplier;
- (BOOL)canZoomPageIn;
- (void)zoomPageIn:(id)in;
- (BOOL)canZoomPageOut;
- (void)zoomPageOut:(id)out;
- (BOOL)canResetPageZoom;
- (void)resetPageZoom:(id)zoom;
- (void)setMediaVolume:(float)volume;
- (float)mediaVolume;
- (void)suspendAllMediaPlayback;
- (void)resumeAllMediaPlayback;
- (void)addVisitedLinks:(id)links;
- (void)removeVisitedLink:(id)link;
- (void)takeStringURLFrom:(id)urlfrom;
- (void)goBack:(id)back;
- (void)goForward:(id)forward;
- (void)stopLoading:(id)loading;
- (void)stopLoadingAndClear;
- (void)reload:(id)reload;
- (void)reloadFromOrigin:(id)origin;
- (void)makeTextSmaller:(id)smaller;
- (void)makeTextLarger:(id)larger;
- (void)makeTextStandardSize:(id)size;
- (void)toggleContinuousSpellChecking:(id)checking;
- (void)_setBrowserUserAgentProductVersion:(id)version buildVersion:(id)version bundleVersion:(id)version;
- (void)_setUIWebViewUserAgentWithBuildVersion:(id)version;
- (void)_dispatchPendingLoadRequests;
- (void)_commonInitializationWithFrameName:(id)name groupName:(id)name;
- (id)_initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame frameName:(id)name groupName:(id)name;
- (id)initSimpleHTMLDocumentWithStyle:(id)style frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame preferences:(id)preferences groupName:(id)name;
- (void)_replaceCurrentHistoryItem:(id)item;
- (void)updateLayoutIgnorePendingStyleSheets;
- (BOOL)_viewClass:(Class *)class andRepresentationClass:(Class *)class forMIMEType:(id)mimetype;
- (BOOL)_isClosed;
- (void)_dispatchUnloadEvent;
- (id)styleAtSelectionStart;
- (unsigned long long)_renderTreeSize;
- (void)_dispatchTileDidDraw:(id)draw;
- (void)_willStartScrollingOrZooming;
- (void)_didFinishScrollingOrZooming;
- (void)_setResourceLoadSchedulerSuspended:(BOOL)suspended;
- (void)_closePluginDatabases;
- (void)_closeWithFastTeardown;
- (void)_close;
- (BOOL)_isProcessingUserGesture;
- (id)_downloadURL:(id)url;
- (id)_openNewWindowWithRequest:(id)request;
- (void)_setUseDarkAppearance:(BOOL)appearance;
- (void)_setUseElevatedUserInterfaceLevel:(BOOL)level;
- (void)_setUseDarkAppearance:(BOOL)appearance useInactiveAppearance:(BOOL)appearance;
- (void)_setUseDarkAppearance:(BOOL)appearance useElevatedUserInterfaceLevel:(BOOL)level;
- (id)inspector;
- (BOOL)allowsRemoteInspection;
- (void)setAllowsRemoteInspection:(BOOL)inspection;
- (void)setShowingInspectorIndication:(BOOL)indication;
- (void)_setHostApplicationProcessIdentifier:(int)identifier auditToken:(struct { unsigned int x0[8] })token;
- (struct NakedPtr<WebCore::Page> { struct Page * x0; })page;
- (void)_mouseDidMoveOverElement:(id)element modifierFlags:(unsigned long long)flags;
- (void)_loadBackForwardListFromOtherView:(id)view;
- (void)_setFormDelegate:(id)delegate;
- (id)_formDelegate;
- (id)_formDelegateForwarder;
- (id)_formDelegateForSelector:(SEL)selector;
- (void)_preferencesChangedNotification:(id)notification;
- (void)_preferencesChanged:(id)changed;
- (id)_UIKitDelegateForwarder;
- (void)_cacheResourceLoadDelegateImplementations;
- (void)_cacheFrameLoadDelegateImplementations;
- (void)_cacheScriptDebugDelegateImplementations;
- (void)_cacheHistoryDelegateImplementations;
- (id)_policyDelegateForwarder;
- (id)_UIDelegateForwarder;
- (id)_UIDelegateForSelector:(SEL)selector;
- (id)_editingDelegateForwarder;
- (void)_pushPerformingProgrammaticFocus;
- (void)_popPerformingProgrammaticFocus;
- (BOOL)_isPerformingProgrammaticFocus;
- (void)_didCommitLoadForFrame:(id)frame;
- (void)_setUIKitDelegate:(id)delegate;
- (id)_UIKitDelegate;
- (void)setWebMailDelegate:(id)delegate;
- (id)_webMailDelegate;
- (id)caretChangeListener;
- (void)setCaretChangeListener:(id)listener;
- (id)caretChangeListeners;
- (void)addCaretChangeListener:(id)listener;
- (void)removeCaretChangeListener:(id)listener;
- (void)removeAllCaretChangeListeners;
- (void)caretChanged;
- (void)_clearDelegates;
- (id)_displayURL;
- (void)_setUseFastImageScalingMode:(BOOL)mode;
- (BOOL)_inFastImageScalingMode;
- (BOOL)_cookieEnabled;
- (void)_setCookieEnabled:(BOOL)enabled;
- (BOOL)_locked_plugInsAreRunningInFrame:(id)frame;
- (BOOL)_pluginsAreRunning;
- (void)_locked_recursivelyPerformPlugInSelector:(SEL)selector inFrame:(id)frame;
- (void)_destroyAllPlugIns;
- (void)_startAllPlugIns;
- (void)_stopAllPlugIns;
- (void)_stopAllPlugInsForPageCache;
- (void)_restorePlugInsFromCache;
- (BOOL)_setMediaLayer:(id)layer forPluginView:(id)view;
- (void)_setNeedsUnrestrictedGetMatchedCSSRules:(BOOL)cssrules;
- (void)_attachScriptDebuggerToAllFrames;
- (void)_detachScriptDebuggerFromAllFrames;
- (void)setBackgroundColor:(struct CGColor *)color;
- (struct CGColor *)backgroundColor;
- (BOOL)defersCallbacks;
- (void)setDefersCallbacks:(BOOL)callbacks;
- (id)quickLookContentForURL:(id)url;
- (BOOL)_isStopping;
- (BOOL)_isClosing;
- (void)_setDeviceOrientation:(unsigned long long)orientation;
- (unsigned long long)_deviceOrientation;
- (void)_setAllowsMessaging:(BOOL)messaging;
- (BOOL)_allowsMessaging;
- (void)_setFixedLayoutSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })_fixedLayoutSize;
- (void)_synchronizeCustomFixedPositionLayoutRect;
- (void)_setCustomFixedPositionLayoutRectInWebThread:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })thread synchronize:(BOOL)synchronize;
- (void)_setCustomFixedPositionLayoutRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)_fetchCustomFixedPositionLayoutRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect;
- (void)_viewGeometryDidChange;
- (void)_overflowScrollPositionChangedTo:(struct CGPoint { double x0; double x1; })to forNode:(id)node isUserScroll:(BOOL)scroll;
- (id)_touchEventRegions;
- (BOOL)usesPageCache;
- (void)setUsesPageCache:(BOOL)cache;
- (id)textIteratorForRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_executeCoreCommandByName:(id)name value:(id)value;
- (void)_clearMainFrameName;
- (void)setSelectTrailingWhitespaceEnabled:(BOOL)enabled;
- (BOOL)isSelectTrailingWhitespaceEnabled;
- (void)setMemoryCacheDelegateCallsEnabled:(BOOL)enabled;
- (BOOL)areMemoryCacheDelegateCallsEnabled;
- (BOOL)_postsAcceleratedCompositingNotifications;
- (void)_setPostsAcceleratedCompositingNotifications:(BOOL)notifications;
- (BOOL)_isUsingAcceleratedCompositing;
- (void)_setBaseCTM:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })ctm forContext:(struct CGContext *)context;
- (BOOL)interactiveFormValidationEnabled;
- (void)setInteractiveFormValidationEnabled:(BOOL)enabled;
- (int)validationMessageTimerMagnification;
- (void)setValidationMessageTimerMagnification:(int)magnification;
- (id)_contentsOfUserInterfaceItem:(id)item;
- (BOOL)_isSoftwareRenderable;
- (void)setTracksRepaints:(BOOL)repaints;
- (BOOL)isTrackingRepaints;
- (void)resetTrackedRepaints;
- (id)trackedRepaintRects;
- (BOOL)_isViewVisible;
- (void)_updateVisibilityState;
- (void)_updateActiveState;
- (void)_forceRepaintForTesting;
- (void)_scaleWebView:(float)view atOrigin:(struct CGPoint { double x0; double x1; })origin;
- (float)_viewScaleFactor;
- (void)_setUseFixedLayout:(BOOL)layout;
- (BOOL)_useFixedLayout;
- (void)_setPaginationMode:(int)mode;
- (int)_paginationMode;
- (void)_listenForLayoutMilestones:(unsigned long long)milestones;
- (unsigned long long)_layoutMilestones;
- (int)_visibilityState;
- (void)_setIsVisible:(BOOL)visible;
- (void)_setVisibilityState:(int)state isInitialState:(BOOL)state;
- (void)_setPaginationBehavesLikeColumns:(BOOL)columns;
- (BOOL)_paginationBehavesLikeColumns;
- (void)_setPageLength:(double)length;
- (double)_pageLength;
- (void)_setGapBetweenPages:(double)pages;
- (double)_gapBetweenPages;
- (void)_setPaginationLineGridEnabled:(BOOL)enabled;
- (BOOL)_paginationLineGridEnabled;
- (unsigned long long)_pageCount;
- (unsigned long long)markAllMatchesForText:(id)text caseSensitive:(BOOL)sensitive highlight:(BOOL)highlight limit:(unsigned long long)limit;
- (unsigned long long)countMatchesForText:(id)text caseSensitive:(BOOL)sensitive highlight:(BOOL)highlight limit:(unsigned long long)limit markMatches:(BOOL)matches;
- (BOOL)searchFor:(id)for direction:(BOOL)direction caseSensitive:(BOOL)sensitive wrap:(BOOL)wrap startInSelection:(BOOL)selection;
- (void)_didScrollDocumentInFrameView:(id)view;
- (id)_fixedPositionContent;
- (void)_documentScaleChanged;
- (BOOL)_wantsTelephoneNumberParsing;
- (void)_setWantsTelephoneNumberParsing:(BOOL)parsing;
- (BOOL)_webGLEnabled;
- (void)_setWebGLEnabled:(BOOL)glenabled;
- (void)_setUnobscuredSafeAreaInsets:(struct WebEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (void)_setUseSystemAppearance:(BOOL)appearance;
- (void)_setSourceApplicationAuditData:(id)data;
- (id)_sourceApplicationAuditData;
- (void)_setFontFallbackPrefersPictographs:(BOOL)pictographs;
- (void)showCandidates:(id)candidates forString:(id)string inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect forSelectedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range view:(id)view completionHandler:(id /* block */)handler;
- (void)forceRequestCandidatesForTesting;
- (BOOL)shouldRequestCandidates;
- (void)_removeFromAllWebViewsSet;
- (void)_addToAllWebViewsSet;
- (BOOL)_canShowMIMEType:(id)mimetype;
- (id)_pluginForMIMEType:(id)mimetype;
- (id)_pluginForExtension:(id)extension;
- (BOOL)_isMIMETypeRegisteredAsPlugin:(id)plugin;
- (id)_initWithArguments:(id)arguments;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame frameName:(id)name groupName:(id)name;
- (void)dealloc;
- (void)close;
- (void)viewDidMoveToWindow;
- (void)_wakWindowScreenScaleChanged:(id)changed;
- (void)_wakWindowVisibilityChanged:(id)changed;
- (void)_updateScreenScaleFromWindow;
- (id)_resourceLoadDelegateForwarder;
- (id)_frameLoadDelegateForwarder;
- (void)setMaintainsBackForwardList:(BOOL)list;
- (BOOL)goBack;
- (BOOL)goForward;
- (BOOL)goToBackForwardItem:(id)item;
- (void)_setZoomMultiplier:(float)multiplier isTextOnly:(BOOL)only;
- (float)_zoomMultiplier:(BOOL)multiplier;
- (float)_realZoomMultiplier;
- (BOOL)_realZoomMultiplierIsTextOnly;
- (BOOL)_canZoomOut:(BOOL)out;
- (BOOL)_canZoomIn:(BOOL)in;
- (void)_zoomOut:(id)out isTextOnly:(BOOL)only;
- (void)_zoomIn:(id)in isTextOnly:(BOOL)only;
- (BOOL)_canResetZoom:(BOOL)zoom;
- (void)_resetZoom:(id)zoom isTextOnly:(BOOL)only;
- (void)_invalidateUserAgentCache;
- (id)_mainFrameOverrideEncoding;
- (id)stringByEvaluatingJavaScriptFromString:(id)string;
- (struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; })_userAgentString;
- (id)userAgentForURL:(id)url;
- (id)documentViewAtWindowPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_elementAtWindowPoint:(struct CGPoint { double x0; double x1; })point;
- (id)elementAtPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (id)_webcore_effectiveFirstResponder;
- (void)setNextKeyView:(id)view;
- (BOOL)searchFor:(id)for direction:(BOOL)direction caseSensitive:(BOOL)sensitive wrap:(BOOL)wrap;
- (BOOL)isLoading;
- (id)mainFrameIconURL;
- (void)setCurrentNodeHighlight:(id)highlight;
- (id)currentNodeHighlight;
- (id)previousValidKeyView;
- (id)_focusedFrame;
- (BOOL)_isLoading;
- (id)_frameViewAtWindowPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)_continuousCheckingAllowed;
- (id)_responderForResponderOperations;
@end

#endif /* WebView_h */
