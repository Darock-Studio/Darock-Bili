//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WebDefaultUIKitDelegate_h
#define WebDefaultUIKitDelegate_h
@import Foundation;

@interface WebDefaultUIKitDelegate : NSObject
/* class methods */
+ (id)sharedUIKitDelegate;

/* instance methods */
- (struct CGPoint { double x0; double x1; })contentsPointForWebView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })documentVisibleRectForWebView:(id)view;
- (void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;
- (void)webView:(id)view didCommitLoadForFrame:(id)frame;
- (void)webView:(id)view didFinishLoadForFrame:(id)frame;
- (void)webView:(id)view saveStateToHistoryItem:(id)item forFrame:(id)frame;
- (void)webView:(id)view restoreStateFromHistoryItem:(id)item forFrame:(id)frame force:(BOOL)force;
- (void)webView:(id)view didReceiveViewportArguments:(id)arguments;
- (void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;
- (void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;
- (void)webViewDidPreventDefaultForEvent:(id)event;
- (BOOL)webView:(id)view shouldScrollToPoint:(struct CGPoint { double x0; double x1; })point forFrame:(id)frame;
- (void)webView:(id)view willCloseFrame:(id)frame;
- (void)webView:(id)view didFinishDocumentLoadForFrame:(id)frame;
- (void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
- (void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;
- (void)webView:(id)view didFirstLayoutInFrame:(id)frame;
- (void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;
- (void)webView:(id)view elementDidFocusNode:(id)node;
- (void)webView:(id)view elementDidBlurNode:(id)node;
- (void)webViewDidRestoreFromPageCache:(id)cache;
- (void)webViewDidReceiveMobileDocType:(id)type;
- (id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;
- (void)webView:(id)view willShowFullScreenForPlugInView:(id)view;
- (void)webView:(id)view didHideFullScreenForPlugInView:(id)view;
- (void)webView:(id)view didReceiveMessage:(id)message;
- (BOOL)handleKeyTextCommandForCurrentEvent;
- (BOOL)handleKeyAppCommandForCurrentEvent;
- (void)addInputString:(id)string withFlags:(unsigned long long)flags;
- (void)deleteFromInput;
- (void)deleteFromInputWithFlags:(unsigned long long)flags;
- (void)_webthread_webView:(id)view attachRootLayer:(id)layer;
- (void)webViewDidCommitCompositingLayerChanges:(id)changes;
- (void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)layer scrollSize:(id)size forNode:(id)node allowHorizontalScrollbar:(BOOL)scrollbar allowVerticalScrollbar:(BOOL)scrollbar;
- (void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)layer forNode:(id)node;
- (void)revealedSelectionByScrollingWebFrame:(id)frame;
- (void)webViewDidLayout:(id)layout;
- (void)webViewDidStartOverflowScroll:(id)scroll;
- (void)webViewDidEndOverflowScroll:(id)scroll;
- (void)webView:(id)view runOpenPanelForFileButtonWithResultListener:(id)listener configuration:(id)configuration;
- (id)checkSpellingOfString:(id)string;
- (void)writeDataToPasteboard:(id)pasteboard;
- (id)readDataFromPasteboard:(id)pasteboard withIndex:(long long)index;
- (long long)getPasteboardItemsCount;
- (id)supportedPasteboardTypesForCurrentSelection;
- (struct CGPoint { double x0; double x1; })interactionLocation;
- (BOOL)shouldRevealCurrentSelectionAfterInsertion;
- (void)showPlaybackTargetPicker:(BOOL)picker fromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (int)deviceOrientation;
- (BOOL)shouldSuppressPasswordEcho;
- (BOOL)hasRichlyEditableSelection;
- (BOOL)performsTwoStepPaste:(id)paste;
- (BOOL)performTwoStepDrop:(id)drop atDestination:(id)destination isMove:(BOOL)move;
- (long long)getPasteboardChangeCount;
- (void)webView:(id)view willAddPlugInView:(id)view;
- (void)webViewDidDrawTiles:(id)tiles;
- (void)webView:(id)view addMessageToConsole:(id)console withSource:(id)source;
@end

#endif /* WebDefaultUIKitDelegate_h */
