//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 752.2.0.0.0
//
#ifndef ASCompetitionManager_h
#define ASCompetitionManager_h
@import Foundation;

#include "ASAchievementManager.h"
#include "ASActivityDataManager.h"
#include "ASActivityDataManagerObserver-Protocol.h"
#include "ASActivitySharingManagerReadyObserver-Protocol.h"
#include "ASAsyncTransactionQueue.h"
#include "ASCloudKitManager.h"
#include "ASCloudKitManagerChangesObserver-Protocol.h"
#include "ASCompetitionBulletinManager.h"
#include "ASCompetitionStore.h"
#include "ASContactsManager.h"
#include "ASDatabaseClient.h"
#include "ASFriendListManager.h"
#include "ASPeriodicUpdateManager.h"
#include "ASPeriodicUpdateRecordProvider-Protocol.h"
#include "ASRelationshipManager.h"
#include "HDDatabaseProtectedDataObserver-Protocol.h"

@class NSHashTable, NSNumber, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface ASCompetitionManager : NSObject<ASCloudKitManagerChangesObserver, HDDatabaseProtectedDataObserver, ASActivityDataManagerObserver, ASActivitySharingManagerReadyObserver, ASPeriodicUpdateRecordProvider> {
  /* instance variables */
  ASAchievementManager *_achievementManager;
  ASActivityDataManager *_activityDataManager;
  ASCloudKitManager *_cloudKitManager;
  ASCompetitionBulletinManager *_competitionBulletinManager;
  ASContactsManager *_contactsManager;
  ASFriendListManager *_friendListManager;
  ASPeriodicUpdateManager *_periodicUpdateManager;
  ASRelationshipManager *_relationshipManager;
  ASDatabaseClient *_databaseClient;
  ASCompetitionStore *_competitionStore;
  ASAsyncTransactionQueue *_transactionQueue;
  NSObject<OS_dispatch_queue> *_serialQueue;
  NSObject<OS_dispatch_queue> *_observerQueue;
  NSHashTable *_observers;
  NSSet *_existingFriendUUIDsAwaitingMyCompetitionResponse;
  NSSet *_existingFriendUUIDsWithAcceptedCompetitionRequestsFromMe;
  NSSet *_existingFriendUUIDsWithCompletedCompetitions;
  NSSet *_friendUUIDsWithUpdatedCompetitions;
  NSNumber *_scoreCapCelebrationAnchor;
  BOOL _deviceParticipatesInAutomaticCompetitionManagement;
  BOOL _hasFetchedProtectedData;
}

@property (readonly, nonatomic) BOOL isReadyToProcessChanges;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithDatabaseClient:(id)client isWatch:(BOOL)watch;
- (void)activitySharingManagerReady:(id)ready;
- (void)loadCachedCompetitions;
- (void)deleteCachedCompetitions;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)sendCompetitionRequestToFriendWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)acceptCompetitionRequestFromFriendWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)ignoreCompetitionRequestFromFriendWithUUID:(id)uuid completion:(id /* block */)completion;
- (id)competitionsForFriendWithUUID:(id)uuid;
- (void)activityDataManager:(id)manager didUpdateTodaySummary:(id)summary yesterdaySummary:(id)summary;
- (void)cloudKitManager:(id)manager didBeginUpdatesForFetchWithType:(long long)type;
- (void)cloudKitManager:(id)manager didReceiveNewCompetitionListsForSelf:(id)self moreComing:(BOOL)coming changesProcessedHandler:(id /* block */)handler;
- (void)cloudKitManager:(id)manager didReceiveNewCompetitionLists:(id)lists moreComing:(BOOL)coming changesProcessedHandler:(id /* block */)handler;
- (void)cloudKitManager:(id)manager didEndUpdatesForFetchWithType:(long long)type;
- (id)recordsToSave;
- (id)recordIDsToDelete;
- (void)periodicUpdateManager:(id)manager didSaveRecords:(id)records;
- (void)periodicUpdateManager:(id)manager didFailToSaveRecords:(id)records;
- (void)database:(id)database protectedDataDidBecomeAvailable:(BOOL)available;
- (void)_handleCompetitionRequestFromFriendWithUUID:(id)uuid;
- (void)_handleAcceptedCompetitionFromFriendWithUUID:(id)uuid;
- (void)_saveCurrentCompetitionList:(id)list archivedCompetitionList:(id)list contact:(id)contact completion:(id /* block */)completion;
- (void)_queue_updateScoresWithTodaySummary:(id)summary yesterdaySummary:(id)summary;
- (void)_queue_handleSavedCompetitionListRecords:(id)records;
- (void)_queue_handleNewRemoteCompetitionList:(id)list contact:(id)contact;
- (void)_queue_showCompetitionRequestFromFriendWithUUID:(id)uuid competition:(id)competition;
- (void)_queue_showCompetitionAcceptedForFriendWithUUID:(id)uuid competition:(id)competition;
- (void)_queue_showCompetitionEndedWithFriendWithUUID:(id)uuid;
- (void)_queue_showScoreCapCelebrationForFriendsWithCappedInProgressCompetitions:(id)competitions;
- (void)_queue_autoAcceptCompetitionRequestFromContact:(id)contact completion:(id /* block */)completion;
- (void)_queue_completeCompetitionIfNecessaryForFriendWithUUID:(id)uuid;
- (void)_queue_notifyObserversOfCompetitionUpdatesForFriendsWithUUIDs:(id)uuids;
- (id)_archivedCompetitionListByMergingCurrentCompetitionList:(id)list;
- (id)_loadOrCreateCurrentCompetitionListForFriendWithUUID:(id)uuid;
- (id)_localCompetitionForRemoteCompetition:(id)competition friendUUID:(id)uuid;
- (void)_loadCachedCompetitionsAndNotifyObservers;
- (id)_recordForCurrentCompetitionList:(id)list contact:(id)contact;
- (id)_contactsWithActiveCompetitions;
- (id)_scoreCapCelebrationAnchor;
- (void)_setScoreCapCelebrationAnchor:(id)anchor;
- (id)_localUserDefaultsDomain;
- (void)completeCompetitionWithFriendWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)updateAllActiveCompetitionsWithScores:(id)scores completion:(id /* block */)completion;
- (void)_queue_setActivityDataVisibleIfNecessaryForContact:(id)contact completion:(id /* block */)completion;
@end

#endif /* ASCompetitionManager_h */
