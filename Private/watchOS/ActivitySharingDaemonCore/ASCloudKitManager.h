//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 752.2.0.0.0
//
#ifndef ASCloudKitManager_h
#define ASCloudKitManager_h
@import Foundation;

#include "APSConnectionDelegate-Protocol.h"
#include "ASActivitySharingManager.h"
#include "ASActivitySharingManagerReadyObserver-Protocol.h"
#include "ASCloudKitServerChangeTokenCache.h"
#include "ASCloudKitUtility.h"
#include "ASContactsManager.h"
#include "ASNotificationStep.h"

@class APSConnection, CKContainer, CKShare, HDDaemonTransaction, NSArray, NSDate, NSDictionary, NSHashTable, NSString;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_source;

@interface ASCloudKitManager : NSObject<APSConnectionDelegate, ASActivitySharingManagerReadyObserver> {
  /* instance variables */
  ASActivitySharingManager *_activitySharingManager;
  ASContactsManager *_contactsManager;
  NSObject<OS_dispatch_queue> *_serialQueue;
  NSObject<OS_dispatch_queue> *_observerQueue;
  NSObject<OS_dispatch_queue> *_changeTokenQueue;
  APSConnection *_apsConnection;
  CKShare *_activityDataShare;
  NSHashTable *_observers;
  ASNotificationStep *_relationshipNotificationStep;
  ASNotificationStep *_remoteRelationshipNotificationStep;
  ASNotificationStep *_privateDatabaseActivitySnapshotNotificationStep;
  ASNotificationStep *_activitySnapshotNotificationStep;
  ASNotificationStep *_workoutNotificationStep;
  ASNotificationStep *_achievementNotificationStep;
  ASNotificationStep *_notificationEventNotificationStep;
  ASNotificationStep *_privateDatabaseCompetitionNotificationStep;
  ASNotificationStep *_competitionNotificationStep;
  BOOL _pushNotificationRecieved;
  unsigned long long _currentFetchPriority;
  BOOL _subscriptionNotificationWasReceivedDuringCurrentFetch;
  NSArray *_blocksWaitingOnFetch;
  ASCloudKitServerChangeTokenCache *_serverChangeTokenCache;
  long long _cloudKitAccountStatus;
  NSObject<OS_dispatch_source> *_newAccountTasksTimer;
  NSDictionary *_friendUUIDsByZoneID;
  NSHashTable *_observersNotReady;
  NSObject<OS_dispatch_group> *_observersNotReadyGroup;
  HDDaemonTransaction *_fetchTransaction;
}

@property (retain, nonatomic) ASCloudKitUtility *cloudKitUtility;
@property (retain, nonatomic) CKContainer *container;
@property (retain, nonatomic) NSDate *dateOfLastSuccessfulFetch;
@property BOOL readyForOperations;
@property (readonly, nonatomic) BOOL hasCompletedFirstFetch;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)activityDataRecordZoneID;
+ (id)activityDataRootRecordID;
+ (id)_activityDataShareRecordID;
+ (id)relationshipZone;
+ (id)shareURLForShare:(id)share;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)activitySharingManagerReady:(id)ready;
- (void)beginHandlingOperations;
- (void)endHandlingOperations;
- (void)_createActivityDataShareWithCompletion:(id /* block */)completion;
- (void)fetchOrCreateActivityDataShareWithCompletion:(id /* block */)completion;
- (void)_queue_cancelAllExecutingFetches;
- (void)_queue_startFetchAllChangesOperationWithPriority:(long long)priority activity:(id)activity changeTokenCache:(id)cache completion:(id /* block */)completion;
- (void)_queue_callFetchCompletionBlocksWithSuccess:(BOOL)success error:(id)error;
- (void)_fetchAllChangesWithPriority:(long long)priority activity:(id)activity;
- (void)_fetchAllChangesWithPriority:(long long)priority activity:(id)activity completion:(id /* block */)completion;
- (void)fetchAllChangesWithPriority:(long long)priority activity:(id)activity completion:(id /* block */)completion;
- (void)fetchAllChangesIfTimeSinceLastFetchIsGreaterThan:(unsigned long long)than priority:(long long)priority activity:(id)activity completion:(id /* block */)completion;
- (void)_queue_setHasCompletedFirstFetch:(BOOL)fetch;
- (void)expireChangeTokenWithCompletion:(id /* block */)completion;
- (void)_subscribeToChangesInDatabase:(id)database subscriptionPrefix:(id)prefix recordTypes:(id)types recordTypesToDelete:(id)delete completion:(id /* block */)completion;
- (void)_subscribeToChangesInSharedDatabaseWithCompletion:(id /* block */)completion;
- (void)_subscribeToChangesInPrivateDatabaseWithCompletion:(id /* block */)completion;
- (void)_handleIncomingNotification:(id)notification;
- (void)_verifyOrCreateSubscriptionsWithCompletion:(id /* block */)completion;
- (id)_queue_apsEnvironmentString;
- (void)connection:(id)connection didReceivePublicToken:(id)token;
- (void)connection:(id)connection didReceiveToken:(id)token forTopic:(id)topic identifier:(id)identifier;
- (void)connection:(id)connection didReceiveIncomingMessage:(id)message;
- (void)_queue_pushEnable;
- (void)_queue_pushDisable;
- (void)forceSaveRecordsIntoPrivateDatabaseIgnoringServerChanges:(id)changes recordIDsToDelete:(id)delete priority:(long long)priority activity:(id)activity completion:(id /* block */)completion;
- (void)saveRecordsIntoPrivateDatabase:(id)database priority:(long long)priority completion:(id /* block */)completion;
- (void)_cloudKitAccountStatusChanged:(id)changed;
- (void)_queue_clearChangeTokenCacheAndFriendListWithCompletion:(id /* block */)completion;
- (void)_performNewAccountTasksCreatingSubscriptions:(BOOL)subscriptions fetching:(BOOL)fetching completion:(id /* block */)completion;
- (void)_cancelNewAccountTasksTimer;
- (void)_performAndRetryNewAccountTasksWithRetryInterval:(double)interval shouldCreateSubscriptions:(BOOL)subscriptions shouldFetch:(BOOL)fetch;
- (void)_performAndRetryNewAccountTasksIfNecessaryWithShouldCreateSubscriptions:(BOOL)subscriptions shouldFetch:(BOOL)fetch;
- (void)_saveCloudKitAddressToKeyValueStore;
- (BOOL)_queue_isLastCloudKitAddressDifferentFromNewCloudKitAddress:(id)address;
- (void)_fetchCloudKitAccountStatusAndNotifyOfChanges;
- (void)_handleAccountStatusChange:(long long)change;
- (void)fetchCloudKitAccountStatusWithCompletion:(id /* block */)completion;
- (void)fetchCloudKitAddressWithCompletion:(id /* block */)completion;
- (void)_fetchCloudKitAddressWithCompletion:(id /* block */)completion;
- (void)createShareWithRootRecord:(id)record otherRecordsToSave:(id)save completion:(id /* block */)completion;
- (void)fetchShareWithShareRecordID:(id)id completion:(id /* block */)completion;
- (void)acceptSharesWithURLs:(id)urls completion:(id /* block */)completion;
- (void)addParticipantWithCloudKitAddress:(id)address toShares:(id)shares completion:(id /* block */)completion;
- (void)removeParticpantWithCloudKitAddress:(id)address fromShares:(id)shares completion:(id /* block */)completion;
- (void)fetchShareParticipantWithCloudKitAddress:(id)address completion:(id /* block */)completion;
- (void)_createNotificationSteps;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)observerDidBecomeReadyToProcessChanges:(id)changes;
- (void)_performBlockWhenAllObserversBecomeReady:(id /* block */)ready;
- (void)_observerQueue_performNotificationStep:(id)step onRecords:(id)records dispatchGroup:(id)group;
- (void)_observerQueue_notifyObserversOfBeginUpdatesForFetchWithType:(long long)type;
- (void)_queue_notifyObserversOfStatusChanged:(long long)changed;
- (void)_observerQueue_notifyObserversOfEndUpdatesForFetchWithType:(long long)type;
- (void)_handleNewPrivateDatabaseRecordChanges:(id)changes sharedDatabaseRecordChanges:(id)changes fetchType:(long long)type;
- (id)_observerQueue_friendUUIDForActivityDataShareRecordZoneID:(id)id;
- (void)_observerQueue_clearFriendUUIDByZoneIDCache;
@end

#endif /* ASCloudKitManager_h */
