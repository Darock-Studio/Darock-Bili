//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2021.300.9.2.0
//
#ifndef NACVolumeControllerDemo_h
#define NACVolumeControllerDemo_h
@import Foundation;

#include "NACEventThrottler.h"
#include "NACVolumeController-Protocol.h"
#include "NACVolumeControllerDelegate-Protocol.h"

@class NSNumber, NSOrderedSet, NSString;

@interface NACVolumeControllerDemo : NSObject<NACVolumeController> {
  /* instance variables */
  NSString *_audioCategory;
  NACEventThrottler *_defaultsThrottler;
  BOOL _allowUserToExceedEUVolumeLimit;
  BOOL _observingListeningModes;
}

@property (weak, nonatomic) NSObject<NACVolumeControllerDelegate> *delegate;
@property (readonly, nonatomic) BOOL volumeControlAvailable;
@property (readonly, nonatomic) BOOL volumeWarningEnabled;
@property (readonly, nonatomic) long long volumeWarningState;
@property (readonly, nonatomic) BOOL muted;
@property (readonly, nonatomic) float volumeValue;
@property (readonly, nonatomic) float EUVolumeLimit;
@property (nonatomic) BOOL systemMuted;
@property (nonatomic) long long hapticState;
@property (readonly, nonatomic) NSOrderedSet *availableListeningModes;
@property (retain, nonatomic) NSString *currentListeningMode;
@property (nonatomic) float hapticIntensity;
@property (nonatomic) BOOL prominentHapticEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithAudioCategory:(id)category;
- (void)dealloc;
- (void)beginObservingVolume;
- (void)endObservingVolume;
- (void)beginObservingListeningModes;
- (void)endObservingListeningModes;
- (BOOL)isMuted;
- (BOOL)isVolumeControlAvailable;
- (BOOL)isVolumeWarningEnabled;
- (void)setVolumeValue:(float)value muted:(BOOL)muted overrideEULimit:(BOOL)eulimit;
- (void)allowUserToExceedEUVolumeLimit;
- (void)_applicationDidBecomeActiveNotification:(id)notification;
- (void)_setNeedsVolumeReload;
- (void)_persistVolumeValue:(id)value;
- (id)_volumeDictionary;
- (BOOL)isSystemMuted;
- (BOOL)isProminentHapticEnabled;
@end

#endif /* NACVolumeControllerDemo_h */
