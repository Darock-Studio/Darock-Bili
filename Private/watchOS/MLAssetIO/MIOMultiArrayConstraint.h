//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MIOMultiArrayConstraint_h
#define MIOMultiArrayConstraint_h
@import Foundation;

#include "MIOFeatureValueConstraint-Protocol.h"
#include "MIOMultiArrayShapeConstraint.h"

@class NSArray, NSString;
@protocol {ArrayFeatureType="_vptr$MessageLite"^^?"_internal_metadata_"{InternalMetadataWithArenaLite="ptr_"^v}"shape_"{RepeatedField<long long>="current_size_"i"total_size_"i"rep_"^{Rep}}"_shape_cached_byte_size_"i"datatype_"i"ShapeFlexibility_"(ShapeFlexibilityUnion="enumeratedshapes_"^{ArrayFeatureType_EnumeratedShapes}"shaperange_"^{ArrayFeatureType_ShapeRange})"defaultOptionalValue_"(DefaultOptionalValueUnion="intdefaultvalue_"i"floatdefaultvalue_"f"doubledefaultvalue_"d)"_cached_size_"i"_oneof_case_"[2I]};

@interface MIOMultiArrayConstraint : NSObject<MIOFeatureValueConstraint> {
  /* instance variables */
  struct ArrayFeatureType { undefined * *_vptr$MessageLite; struct InternalMetadataWithArenaLite { void *ptr_; } _internal_metadata_; struct RepeatedField<long long> { int current_size_; int total_size_; struct Rep *rep_; } shape_; int _shape_cached_byte_size_; int datatype_; union ShapeFlexibilityUnion { struct ArrayFeatureType_EnumeratedShapes *enumeratedshapes_; struct ArrayFeatureType_ShapeRange *shaperange_; } ShapeFlexibility_; union DefaultOptionalValueUnion { int intdefaultvalue_; float floatdefaultvalue_; double doubledefaultvalue_; } defaultOptionalValue_; int _cached_size_; unsigned int x[2] _oneof_case_; } _arrayFeatureTypeParams;
}

@property (readonly, copy, nonatomic) NSArray *shape;
@property (readonly, nonatomic) long long dataType;
@property (readonly, copy, nonatomic) MIOMultiArrayShapeConstraint *shapeConstraint;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithSpecification:(const void *)specification;
- (const void *)arrayFeatureTypeSpecification;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* MIOMultiArrayConstraint_h */
