//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 523.0.0.0.0
//
#ifndef WeatherService_h
#define WeatherService_h
@import Foundation;

#include "WFQueryDispatcher.h"
#include "WFTemperatureUnitProvider.h"
#include "WFWeatherStoreService.h"
#include "WeatherServicePrivateProtocol-Protocol.h"
#include "WeatherServiceProtocol-Protocol.h"

@class NSArray, NSMapTable, NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface WeatherService : NSObject<WeatherServiceProtocol, WeatherServicePrivateProtocol> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_clientQueue;
}

@property (retain) WFWeatherStoreService *internalService;
@property (retain) WFQueryDispatcher *queryDispatcher;
@property (retain) NSMapTable *clientDictionary;
@property (readonly, nonatomic) NSArray *clients;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) WFTemperatureUnitProvider *temperatureUnitProvider;

/* class methods */
+ (id)sharedService;

/* instance methods */
- (id)init;
- (id)initWithStore:(id)store;
- (void)addClient:(id)client;
- (void)addClient:(id)client forPid:(int)pid;
- (void)removeClient:(id)client;
- (id)clientForPid:(int)pid;
- (void)performMigrationWithCompletion:(id /* block */)completion;
- (void)forecastForLocation:(id)location locale:(id)locale onDate:(id)date options:(id)options taskIdentifier:(id)identifier;
- (void)hourlyForecastForLocation:(id)location locale:(id)locale taskIdentifier:(id)identifier;
- (void)dailyForecastForLocation:(id)location locale:(id)locale taskIdentifier:(id)identifier;
- (void)forecast:(unsigned long long)forecast forLocation:(id)location locale:(id)locale taskIdentifier:(id)identifier;
- (void)forecast:(unsigned long long)forecast forLocation:(id)location withUnits:(int)units locale:(id)locale taskIdentifier:(id)identifier;
- (void)forecast:(unsigned long long)forecast forLocation:(id)location withUnits:(int)units locale:(id)locale taskIdentifier:(id)identifier requestOptions:(id)options;
- (void)airQualityForLocation:(id)location locale:(id)locale options:(id)options taskIdentifier:(id)identifier;
- (void)reachabilityConfigurationForIdentifier:(id)identifier;
- (void)cancelTaskWithIdentifier:(id)identifier;
- (void)invalidateCache:(id)cache;
- (void)locationForString:(id)string taskIdentifier:(id)identifier;
- (void)locationForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate taskIdentifier:(id)identifier;
- (void)locationForSearchCompletion:(id)completion taskIdentifier:(id)identifier;
- (void)fetchFavoriteLocationsWithTaskIdentifier:(id)identifier;
- (void)temperatureUnitWithIdentifier:(id)identifier;
- (void)replaceTemperatureUnitWith:(int)with identifier:(id)identifier;
- (void)queryDispatcherDidReceiveResponse:(id)response identifier:(id)identifier;
@end

#endif /* WeatherService_h */
