//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 523.0.0.0.0
//
#ifndef WFLocationQueryGeocode_h
#define WFLocationQueryGeocode_h
@import Foundation;

#include "WFLocationQuery-Protocol.h"
#include "WFResponse.h"
#include "WFTaskIdentifier.h"

@class CLGeocoder, MKLocalSearch, MKLocalSearchCompletion, NSString;

@interface WFLocationQueryGeocode : NSObject<WFLocationQuery> {
  /* instance variables */
  BOOL _finished;
}

@property (copy) id /* block */ resultHandler;
@property (retain) WFResponse *response;
@property (retain, nonatomic) CLGeocoder *reverseGeocoder;
@property (retain, nonatomic) MKLocalSearch *search;
@property (nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } searchCoordinate;
@property (nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } unshiftedCoordinate;
@property (readonly) MKLocalSearchCompletion *searchCompletion;
@property (readonly) NSString *searchString;
@property (retain) WFTaskIdentifier *identifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)queryWithDictionaryRepresentation:(id)representation resultHandler:(id /* block */)handler;
+ (id)queryWithCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate resultHandler:(id /* block */)handler;
+ (id)queryWithSearchCompletion:(id)completion resultHandler:(id /* block */)handler;
+ (void)invalidateCaches;
+ (id)queryWithSearchString:(id)string resultHandler:(id /* block */)handler;

/* instance methods */
- (id)initWithSearchCompletion:(id)completion resultHandler:(id /* block */)handler;
- (id)initWithSearchString:(id)string resultHandler:(id /* block */)handler;
- (id)initWithCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate resultHandler:(id /* block */)handler;
- (void)start;
- (void)cancel;
- (void)_startMKLocalSearch;
- (void)_startCLGeocoderReverseGeo;
- (BOOL)isLocationValid:(id)valid;
- (id)_mkLocalSearchRequest;
- (id)_reverseGeocoderLocation;
- (void)handleSearchResponseWithLocation:(id)location;
- (void)_handleErrorResponse:(id)response;
@end

#endif /* WFLocationQueryGeocode_h */
