//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 55282.0.0.0.0
//
#ifndef _SFKeychainManager_h
#define _SFKeychainManager_h
@import Foundation;

@protocol OS_dispatch_queue;

@interface _SFKeychainManager : NSObject

@property (retain) NSObject<OS_dispatch_queue> *keychainManagerQueue;
@property (retain) NSObject<OS_dispatch_queue> *keychainReplyQueue;

/* class methods */
+ (id)defaultManager;
+ (id)defaultOverCommitManager;

/* instance methods */
- (id)initManager;
- (id)initOverCommitManager;
- (id)_symmetricKeyAttributesForIdentifier:(id)identifier accessPolicy:(id)policy key:(id)key;
- (void)setKey:(id)key forIdentifier:(id)identifier accessPolicy:(id)policy resultHandler:(id /* block */)handler;
- (struct __CFDictionary *)_commonKeyAttributesForIdentityIdentifier:(id)identifier accessPolicy:(id)policy key:(id)key;
- (struct __CFDictionary *)_privateKeyAttributesForIdentityIdentifier:(id)identifier accessPolicy:(id)policy key:(id)key;
- (struct __CFDictionary *)_publicKeyAttributesForIdentityIdentifier:(id)identifier accessPolicy:(id)policy key:(id)key;
- (struct __CFDictionary *)_certificateAttributesForIdentityIdentifier:(id)identifier accessPolicy:(id)policy;
- (int)generateAttributesForIdentityAndAddToKeychain:(id)keychain forIdentifier:(id)identifier accessPolicy:(id)policy;
- (BOOL)setIdentity:(id)identity forIdentifier:(id)identifier accessPolicy:(id)policy error:(id *)error;
- (void)setIdentity:(id)identity forIdentifier:(id)identifier accessPolicy:(id)policy resultHandler:(id /* block */)handler;
- (void)keyForIdentifier:(id)identifier specifier:(id)specifier resultHandler:(id /* block */)handler;
- (id)foundPrivateKey:(struct __SecKey { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __SecKeyDescriptor * x1; void * x2; } *)key certificate:(id)certificate;
- (struct __SecKey { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __SecKeyDescriptor * x1; void * x2; } *)findPrivateKeyWithIdentifier:(id)identifier certificate:(id *)certificate attributes:(struct __CFDictionary * *)attributes result:(int *)result;
- (id)publicKeyLookupWithIdentifier:(id)identifier certificate:(id)certificate result:(int)result;
- (id)identityForIdentifier:(id)identifier;
- (void)identityForIdentifier:(id)identifier resultHandler:(id /* block */)handler;
- (void)keysFilteredBy:(id)by resultHandler:(id /* block */)handler;
- (void)identitiesFilteredBy:(id)by resultHandler:(id /* block */)handler;
- (void)removeItemWithIdentifier:(id)identifier resultHandler:(id /* block */)handler;
@end

#endif /* _SFKeychainManager_h */
