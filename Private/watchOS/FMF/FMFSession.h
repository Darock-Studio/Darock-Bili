//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 488.1.0.0.0
//
#ifndef FMFSession_h
#define FMFSession_h
@import Foundation;

#include "FMFSessionDelegate-Protocol.h"
#include "FMFXPCInternalClientProtocol-Protocol.h"

@class FMFuture, NSMutableDictionary, NSMutableSet, NSOperationQueue, NSSet, NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface FMFSession : NSObject<FMFXPCInternalClientProtocol>

@property (retain, nonatomic) NSMutableSet *internalHandles;
@property (retain, nonatomic) NSXPCConnection *connection;
@property (retain, nonatomic) NSSet *cachedGetHandlesSharingLocationsWithMe;
@property (retain, nonatomic) NSSet *cachedGetHandlesFollowingMyLocation;
@property (retain, nonatomic) NSMutableDictionary *cachedLocationForHandleByHandle;
@property (retain, nonatomic) NSMutableDictionary *cachedOfferExpirationForHandleByHandle;
@property (retain, nonatomic) NSMutableDictionary *cachedCanShareLocationWithHandleByHandle;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *connectionQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *handlesQueue;
@property (nonatomic) BOOL isModelInitialized;
@property (retain, nonatomic) FMFuture *sessionInvalidationFuture;
@property (retain, nonatomic) FMFuture *sessionInterruptionFuture;
@property (copy, nonatomic) NSSet *handles;
@property (weak, nonatomic) NSObject<FMFSessionDelegate> *delegate;
@property (retain, nonatomic) NSOperationQueue *delegateQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (BOOL)FMFAllowed;
+ (BOOL)FMFRestricted;
+ (BOOL)isProvisionedForLocationSharing;
+ (BOOL)isAnyAccountManaged;

/* instance methods */
- (id)getHandlesSharingLocationsWithMe;
- (id)getHandlesFollowingMyLocation;
- (id)getFavoritesSharingLocationWithMe;
- (BOOL)canShareLocationWithHandle:(id)handle groupId:(id)id callerId:(id)id;
- (BOOL)canGetLocationForHandle:(id)handle groupId:(id)id callerId:(id)id;
- (id)getHandlesWithPendingOffers;
- (BOOL)isMyLocationEnabled;
- (id)cachedLocationForHandle:(id)handle;
- (id)getOfferExpirationForHandle:(id)handle groupId:(id)id callerId:(id)id;
- (void)reloadDataIfNotLoaded;
- (void)addFence:(id)fence completion:(id /* block */)completion;
- (void)deleteFence:(id)fence completion:(id /* block */)completion;
- (void)getFences:(id /* block */)fences;
- (void)fencesForHandles:(id)handles completion:(id /* block */)completion;
- (void)triggerWithUUID:(id)uuid forFenceWithID:(id)id withStatus:(id)status forDate:(id)date completion:(id /* block */)completion;
- (void)triggerWithUUID:(id)uuid forFenceWithID:(id)id withStatus:(id)status forDate:(id)date triggerLocation:(id)location completion:(id /* block */)completion;
- (void)muteFencesForHandle:(id)handle untilDate:(id)date completion:(id /* block */)completion;
- (BOOL)_isNoMappingPacketReturnedError:(id)error;
- (void)_sendFriendshipOfferToHandles:(id)handles groupId:(id)id callerId:(id)id endDate:(id)date completion:(id /* block */)completion;
- (void)_sendAutoSwitchMeDevice;
- (void)_checkAndDisplayMeDeviceSwitchAlert;
- (void)sendFriendshipOfferToHandles:(id)handles groupId:(id)id callerId:(id)id endDate:(id)date completion:(id /* block */)completion;
- (void)sendFriendshipOfferToHandle:(id)handle groupId:(id)id callerId:(id)id endDate:(id)date completion:(id /* block */)completion;
- (void)extendFriendshipOfferToHandle:(id)handle groupId:(id)id callerId:(id)id endDate:(id)date completion:(id /* block */)completion;
- (void)sendFriendshipInviteToHandle:(id)handle groupId:(id)id callerId:(id)id endDate:(id)date completion:(id /* block */)completion;
- (void)sendNotNowToHandle:(id)handle callerId:(id)id completion:(id /* block */)completion;
- (void)approveFriendshipRequest:(id)request completion:(id /* block */)completion;
- (void)declineFriendshipRequest:(id)request completion:(id /* block */)completion;
- (void)stopSharingMyLocationWithHandle:(id)handle groupId:(id)id callerId:(id)id completion:(id /* block */)completion;
- (void)stopSharingMyLocationWithHandles:(id)handles groupId:(id)id callerId:(id)id completion:(id /* block */)completion;
- (void)getPendingFriendshipRequestsWithCompletion:(id /* block */)completion;
- (void)getFavoritesWithCompletion:(id /* block */)completion;
- (void)addFavorite:(id)favorite completion:(id /* block */)completion;
- (void)removeFavorite:(id)favorite completion:(id /* block */)completion;
- (void)getAllLocations:(id /* block */)locations;
- (void)favoritesForMaxCount:(id)count completion:(id /* block */)completion;
- (void)nearbyLocationsWithCompletion:(id /* block */)completion;
- (void)contactForPayload:(id)payload completion:(id /* block */)completion;
- (void)handleAndLocationForPayload:(id)payload completion:(id /* block */)completion;
- (void)dataForPayload:(id)payload completion:(id /* block */)completion;
- (void)decryptPayload:(id)payload withToken:(id)token completion:(id /* block */)completion;
- (void)encryptPayload:(id)payload completion:(id /* block */)completion;
- (void)getActiveLocationSharingDevice:(id /* block */)device;
- (void)getThisDeviceAndCompanion:(id /* block */)companion;
- (void)setActiveDevice:(id)device completion:(id /* block */)completion;
- (void)getHandlesSharingLocationsWithMe:(id /* block */)me;
- (void)getHandlesSharingLocationsWithMeWithGroupId:(id)id completion:(id /* block */)completion;
- (void)getHandlesFollowingMyLocation:(id /* block */)location;
- (void)getHandlesFollowingMyLocationWithGroupId:(id)id completion:(id /* block */)completion;
- (void)setHideMyLocationEnabled:(BOOL)enabled completion:(id /* block */)completion;
- (void)isMyLocationEnabled:(id /* block */)enabled;
- (void)setAllowFriendRequestsEnabled:(BOOL)enabled completion:(id /* block */)completion;
- (void)isAllowFriendRequestsEnabled:(id /* block */)enabled;
- (void)getAccountEmailAddress:(id /* block */)address;
- (void)canShareLocationWithHandle:(id)handle groupId:(id)id callerId:(id)id completion:(id /* block */)completion;
- (void)canGetLocationForHandle:(id)handle groupId:(id)id callerId:(id)id completion:(id /* block */)completion;
- (void)getPendingMappingPacketsForHandle:(id)handle groupId:(id)id completion:(id /* block */)completion;
- (void)getOfferExpirationForHandle:(id)handle groupId:(id)id callerId:(id)id completion:(id /* block */)completion;
- (void)getHandlesWithPendingOffers:(id /* block */)offers;
- (void)canOfferToHandles:(id)handles completion:(id /* block */)completion;
- (void)refreshLocationForHandle:(id)handle callerId:(id)id priority:(long long)priority completion:(id /* block */)completion;
- (void)refreshLocationForHandles:(id)handles callerId:(id)id priority:(long long)priority completion:(id /* block */)completion;
- (void)locationForHandle:(id)handle completion:(id /* block */)completion;
- (void)iCloudAccountNameWithCompletion:(id /* block */)completion;
- (id)getActiveLocationSharingDevice;
- (id)getAllDevices;
- (double)maxLocatingInterval;
- (void)getAllDevices:(id /* block */)devices;
- (void)removeDevice:(id)device completion:(id /* block */)completion;
- (void)getPrettyNameForHandle:(id)handle completion:(id /* block */)completion;
- (void)getRecordIdForHandle:(id)handle completion:(id /* block */)completion;
- (id)verifyRestrictionsAndShowDialogIfRequired;
- (void)setExpiredInitTimestamp;
- (BOOL)is5XXError:(id)xxerror;
- (BOOL)shouldHandleErrorInFWK:(id)fwk;
- (void)crashDaemon;
- (void)exit5XXGracePeriod;
- (void)isIn5XXGracePeriodWithCompletion:(id /* block */)completion;
- (void)sendIDSPacket:(id)idspacket toHandle:(id)handle;
- (void)sendIDSMessage:(id)idsmessage toIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)dumpStateWithCompletion:(id /* block */)completion;
- (void)sessionHandleReport:(id /* block */)report;
- (void)getDataForPerformanceRequest:(id /* block */)request;
- (void)showShareMyLocationiCloudSettingsOffAlert;
- (void)showShareMyLocationRestrictedAlert;
- (void)showMeDeviceAlert;
- (void)includeDeviceInAutomations:(id /* block */)automations;
- (void)_daemonDidLaunch;
- (void)restoreClientConnection;
- (void)_registerForApplicationLifecycleEvents;
- (void)applicationDidEnterBackground;
- (void)applicationWillEnterForeground;
- (void)_registerForFMFDLaunchedNotification;
- (id)init;
- (id)initWithDelegate:(id)delegate delegateQueue:(id)queue;
- (void)locatingInProgressChanged:(id)changed;
- (id)initWithDelegate:(id)delegate;
- (void)dealloc;
- (void)addInterruptionHander:(id /* block */)hander;
- (void)addInvalidationHander:(id /* block */)hander;
- (id)__connection;
- (id)serverProxy;
- (void)dispatchOnDelegateQueue:(id /* block */)queue;
- (void)invalidate;
- (BOOL)hasModelInitialized;
- (void)forceRefresh;
- (void)forceRefreshWithCompletion:(id /* block */)completion;
- (void)setLocations:(id)locations;
- (void)failedToGetLocationForHandle:(id)handle error:(id)error;
- (void)didAddFollowerHandle:(id)handle;
- (void)didRemoveFollowerHandle:(id)handle;
- (void)didStartFollowingHandle:(id)handle;
- (void)didStopFollowingHandle:(id)handle;
- (void)didUpdateFavorites:(id)favorites;
- (void)didUpdateHideFromFollowersStatus:(BOOL)status;
- (void)didChangeActiveLocationSharingDevice:(id)device;
- (void)didUpdateActiveDeviceList:(id)list;
- (void)didReceiveFriendshipRequest:(id)request;
- (void)didUpdatePendingOffersForHandles:(id)handles;
- (void)sendMappingPacket:(id)packet toHandle:(id)handle;
- (void)didReceiveServerError:(id)error;
- (void)abDidChange;
- (void)abPreferencesDidChange;
- (void)didUpdateFollowers:(id)followers;
- (void)didUpdateFollowing:(id)following;
- (void)didUpdateLocations:(id)locations;
- (void)didUpdateFences:(id)fences;
- (void)didUpdatePreferences:(id)preferences;
- (void)networkReachabilityUpdated:(BOOL)updated;
- (void)modelDidLoad;
- (void)addHandles:(id)handles;
- (void)removeHandles:(id)handles;
- (void)setDebugContext:(id)context;
- (void)receivedMappingPacket:(id)packet completion:(id /* block */)completion;
- (void)mappingPacketSendFailed:(id)failed toHandle:(id)handle withError:(id)error;
- (void)handleIncomingAirDropURL:(id)url completion:(id /* block */)completion;
@end

#endif /* FMFSession_h */
