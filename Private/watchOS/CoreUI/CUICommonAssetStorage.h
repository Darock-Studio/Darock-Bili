//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 866.4.0.0.0
//
#ifndef CUICommonAssetStorage_h
#define CUICommonAssetStorage_h
@import Foundation;

@class NSData, NSDictionary, NSSet;

@interface CUICommonAssetStorage : NSObject {
  /* instance variables */
  unsigned int _thinnedWithCoreUIVersion;
  unsigned int x :1 _swap;
  unsigned int x :1 _isMemoryMapped;
  unsigned int x :1 _hasAppearanceKey;
  unsigned int x :1 _hasLocalizationKey;
  unsigned int x :28 _reserved;
  NSSet *_externalTags;
  unsigned short _renditionInfoCacheLookup[20];
  id _renditionInfoCache[20];
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _renditionInfoCacheLock;
  struct _renditionkeyattributeindex { unsigned long long keymask; unsigned char x[65] keyindices; unsigned int nkeys; unsigned int x[29] keylist; } _keyfmtindex;
}

@property (nonatomic) struct _carheader { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; char x5[128] char x6[256] unsigned char x7[16] unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; } * header;
@property (nonatomic) struct _carextendedMetadata { unsigned int x0; char x1[256] char x2[256] char x3[256] char x4[256] } * extendedMetadata;
@property (nonatomic) struct _renditionkeyfmt { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3[0] } * keyfmt;
@property (nonatomic) void * imagedb;
@property (nonatomic) void * colordb;
@property (nonatomic) void * fontdb;
@property (nonatomic) void * fontsizedb;
@property (nonatomic) void * facetKeysdb;
@property (nonatomic) void * bitmapKeydb;
@property (nonatomic) void * appearancedb;
@property (nonatomic) void * localizationdb;
@property (retain, nonatomic) NSData *globals;
@property (readonly, nonatomic) NSDictionary *appearances;

/* class methods */
+ (BOOL)isValidAssetStorageWithBytes:(const void *)bytes length:(unsigned long long)length;
+ (BOOL)isValidAssetStorageWithURL:(id)url;

/* instance methods */
- (struct os_unfair_lock_s { unsigned int x0; } *)lock;
- (struct os_unfair_lock_s { unsigned int x0; } *)renditionInfoCacheLock;
- (void)setExternalTags:(id)tags;
- (void)_initDefaultHeaderVersion:(double)version versionString:(const char *)string;
- (void)_bringHeaderInfoUpToDate;
- (void)_swapHeader;
- (void)_swapKeyFormat;
- (BOOL)swapped;
- (id)initWithPath:(id)path;
- (id)initWithPath:(id)path forWriting:(BOOL)writing;
- (id)initWithBytes:(const void *)bytes length:(unsigned long long)length;
- (BOOL)_commonInitWithStorage:(struct _BOMStorage *)storage forWritting:(BOOL)writting;
- (struct _BOMStorage *)_bomStorage;
- (id)path;
- (id)description;
- (void)dealloc;
- (unsigned int)storageVersion;
- (unsigned int)distilledInCoreUIVersion;
- (unsigned int)schemaVersion;
- (long long)_storagefileTimestamp;
- (long long)storageTimestamp;
- (int)keySemantics;
- (id)keyFormatData;
- (const struct _renditionkeyfmt { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3[0] } *)keyFormat;
- (const struct _renditionkeyattributeindex { unsigned long long x0; unsigned char x1[65] unsigned int x2; unsigned int x3[29] } *)keyAttributeIndex;
- (id)catalogGlobalData;
- (long long)maximumRenditionKeyTokenCount;
- (BOOL)usesCUISystemThemeRenditionKey;
- (const char *)versionString;
- (const char *)mainVersionString;
- (unsigned int)renditionCount;
- (unsigned int)thinnedWithCoreUIVersion;
- (id)uuid;
- (unsigned int)associatedChecksum;
- (unsigned int)colorSpaceID;
- (void)_loadExtendedMetadata;
- (id)thinningArguments;
- (id)deploymentPlatformString;
- (long long)deploymentPlatform;
- (id)deploymentPlatformVersion;
- (id)authoringTool;
- (void)_swapRenditionKeyArray:(unsigned short *)array;
- (BOOL)assetExistsForKey:(id)key;
- (BOOL)assetExistsForKeyData:(const void *)data length:(unsigned long long)length;
- (id)assetForKey:(id)key;
- (id)allAssetKeys;
- (id)assetKeysMatchingBlock:(id /* block */)block;
- (BOOL)enumerateKeysAndObjectsUsingBlock:(id /* block */)block;
- (void)enumerateKeysAndObjectsWithoutIgnoringUsingBlock:(id /* block */)block;
- (BOOL)enumerateColorsBlock:(id /* block */)block;
- (id)renditionInfoForIdentifier:(unsigned short)identifier;
- (void)enumerateRenditionInfosUsingBlock:(id /* block */)block;
- (struct _renditionkeytoken { unsigned short x0; unsigned short x1; })_swapRenditionKeyToken:(struct _renditionkeytoken { unsigned short x0; unsigned short x1; })token;
- (const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)renditionKeyForName:(const char *)name hotSpot:(struct CGPoint { double x0; double x1; } *)spot;
- (id)allRenditionNames;
- (id)renditionNameForKeyList:(struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)list;
- (id)renditionNamesWithKeys;
- (id)renditionNameForKeyBaseList:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)list;
- (BOOL)getColor:(struct _colordef { unsigned int x0; unsigned int x1; struct _rgbquad { unsigned int x0 :8; unsigned int x1 :8; unsigned int x2 :8; unsigned int x3 :8; } x2; } *)color forName:(const char *)name;
- (BOOL)hasColorForName:(const char *)name;
- (const struct FontValue { char x0[128] float x1; } *)_fontValueForFontType:(id)type;
- (BOOL)getFontName:(id *)name baselineOffset:(float *)offset forFontType:(id)type;
- (BOOL)getBaselineOffset:(float *)offset forFontType:(id)type;
- (float)fontSizeForFontSizeType:(id)type;
- (id)externalTags;
- (void)enumerateBitmapIndexUsingBlock:(id /* block */)block;
- (void)_addBitmapIndexForNameIdentifier:(unsigned short)identifier attribute:(int)attribute withValue:(unsigned short)value toDictionary:(id)dictionary;
- (void)_buildBitmapInfoIntoDictionary:(id)dictionary;
- (int)validateBitmapInfo;
- (int)validatekeyformat;
- (int)validateFile;
- (unsigned short)appearanceIdentifierForName:(id)name;
- (id)nameForAppearanceIdentifier:(unsigned short)identifier;
- (id)_readAppearances;
- (unsigned short)localizationIdentifierForName:(id)name;
- (id)nameForLocalizationIdentifier:(unsigned short)identifier;
- (id)localizations;
- (BOOL)writeToPath:(id)path withTreePageSize:(unsigned int)size;
@end

#endif /* CUICommonAssetStorage_h */
