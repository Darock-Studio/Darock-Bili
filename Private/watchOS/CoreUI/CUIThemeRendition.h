//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 866.4.0.0.0
//
#ifndef CUIThemeRendition_h
#define CUIThemeRendition_h
@import Foundation;

@class NSData, NSDictionary, NSString;

@interface CUIThemeRendition : NSObject {
  /* instance variables */
  struct _renditionkeytoken { unsigned short identifier; unsigned short value; } _stackKey[22];
  struct _renditionkeytoken { unsigned short x0; unsigned short x1; } * _key;
  unsigned int _scale;
  struct cuithemerenditionrenditionflags { unsigned int x :1 isVectorBased; unsigned int x :1 isOpaque; unsigned int x :4 bitmapEncoding; unsigned int x :1 optOutOfThinning; unsigned int x :1 isFlippable; unsigned int x :1 isTintable; unsigned int x :1 preservedVectorRepresentation; unsigned int x :1 preserveForArchiveOnly; unsigned int x :21 reserved; } _renditionFlags;
  long long _templateRenderingMode;
  unsigned long long _colorSpaceID;
  NSString *_name;
  NSString *_utiType;
  struct CGImage * _uncroppedImage;
  struct CGSize { double width; double height; } _physicalSizeInMeters;
  NSDictionary *_properties;
}

@property (nonatomic) long long type;
@property (nonatomic) unsigned int subtype;
@property (nonatomic) unsigned int internalScale;
@property (nonatomic) long long internalTemplateRenderingMode;
@property (retain, nonatomic) NSString *internalName;
@property (readonly, nonatomic) NSData *srcData;
@property (nonatomic) double opacity;
@property (nonatomic) int blendMode;
@property (nonatomic) int exifOrientation;

/* class methods */
+ (Class)renditionClassForRenditionType:(long long)type andPixelFormat:(unsigned int)format;
+ (id)displayNameForRenditionType:(long long)type;

/* instance methods */
- (void)setName:(id)name;
- (struct cuithemerenditionrenditionflags { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :4; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :1; unsigned int x6 :1; unsigned int x7 :1; unsigned int x8 :21; } *)renditionFlags;
- (void)_setStructuredThemeStore:(id)store;
- (BOOL)isInternalLink;
- (id)linkingToRendition;
- (struct CGSize { double x0; double x1; })unslicedSize;
- (unsigned long long)sourceRowbytes;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_destinationFrame;
- (void)_initializeTypeIdentifiersWithLayout:(unsigned short)layout;
- (void)_initializeCompositingOptionsFromCSIData:(const struct _csiheader { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7 :4; unsigned int x8 :28; struct _csimetadata { unsigned int x0; unsigned short x1; unsigned short x2; char x3[128] } x9; unsigned int x10; struct _csibitmaplist { unsigned int x0; unsigned int x1[0] } x11; } *)csidata version:(unsigned int)version;
- (void)_initalizeMetadataFromCSIData:(const struct _csiheader { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7 :4; unsigned int x8 :28; struct _csimetadata { unsigned int x0; unsigned short x1; unsigned short x2; char x3[128] } x9; unsigned int x10; struct _csibitmaplist { unsigned int x0; unsigned int x1[0] } x11; } *)csidata version:(unsigned int)version;
- (void)_initializePropertiesFromCSIData:(const struct _csiheader { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7 :4; unsigned int x8 :28; struct _csimetadata { unsigned int x0; unsigned short x1; unsigned short x2; char x3[128] } x9; unsigned int x10; struct _csibitmaplist { unsigned int x0; unsigned int x1[0] } x11; } *)csidata version:(unsigned int)version;
- (id)_initWithCSIHeader:(const struct _csiheader { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7 :4; unsigned int x8 :28; struct _csimetadata { unsigned int x0; unsigned short x1; unsigned short x2; char x3[128] } x9; unsigned int x10; struct _csibitmaplist { unsigned int x0; unsigned int x1[0] } x11; } *)csiheader version:(unsigned int)version;
- (int)pixelFormat;
- (void)_initializeRenditionKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)initWithCSIData:(id)csidata forKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key version:(unsigned int)version;
- (id)_initWithCSIData:(id)csidata forKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key version:(unsigned int)version;
- (void)dealloc;
- (const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)name;
- (id)utiType;
- (struct CGSize { double x0; double x1; })physicalSizeInMeters;
- (BOOL)isVectorBased;
- (BOOL)isOpaque;
- (int)bitmapEncoding;
- (long long)templateRenderingMode;
- (BOOL)optOutOfThinning;
- (BOOL)preserveForArchiveOnly;
- (BOOL)isFlippable;
- (BOOL)isInterpolatable;
- (void)_setFlippable:(BOOL)flippable;
- (BOOL)preservedVectorRepresentation;
- (BOOL)isTintable;
- (id)properties;
- (unsigned long long)colorSpaceID;
- (id)description;
- (id)provideTextureInfo;
- (id)textureImages;
- (long long)textureIntepretation;
- (struct CGImage *)unslicedImage;
- (id)imageForSliceIndex:(long long)index;
- (id)maskForSliceIndex:(long long)index;
- (double)scale;
- (id)metrics;
- (id)sliceInformation;
- (BOOL)isTiled;
- (BOOL)isScaled;
- (BOOL)edgesOnly;
- (struct CGColor *)cgColor;
- (id)systemColorName;
- (BOOL)substituteWithSystemColor;
- (const struct _csitextstyle { unsigned int x0; unsigned int x1; unsigned int x2; float x3; float x4; float x5; unsigned int x6; unsigned int x7; char x8[0] } *)csiTextStyle;
- (id)sizeIndexes;
- (double)gradientDrawingAngle;
- (id)gradient;
- (unsigned int)gradientStyle;
- (id)effectPreset;
- (struct CGPDFDocument *)pdfDocument;
- (struct CGImage *)createImageFromPDFRenditionWithScale:(double)scale;
- (id)data;
- (id)assetPackIdentifier;
- (id)externalTags;
- (id)layerReferences;
- (id)mipLevels;
- (id)contentNames;
- (struct CGSize { double x0; double x1; })originalUncroppedSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })alphaCroppedRect;
- (struct CGImage *)uncroppedImage;
- (struct { x0[4] })transformation;
- (int)objectVersion;
- (id)modelAsset;
- (id)modelMesh;
- (id)modelSubmesh;
- (struct CGSVGDocument *)svgDocument;
- (id)vectorGlyphAvailableSizes;
- (double)vectorGlyphBaseline;
- (double)vectorGlyphCapLine;
- (double)vectorGlyphReferencePointSize;
- (struct { double x0; double x1; double x2; double x3; })vectorGlyphAlignmentRectInsets;
- (float)vectorGlyphTemplateVersion;
- (id)_sourceRendition;
- (long long)vectorGlyphRenderingMode;
- (unsigned short)valueForTokenIdentifier:(unsigned short)identifier;
@end

#endif /* CUIThemeRendition_h */
