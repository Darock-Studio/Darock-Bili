//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 866.4.0.0.0
//
#ifndef CSIGenerator_h
#define CSIGenerator_h
@import Foundation;

#include "CUIPSDGradient.h"
#include "CUIShapeEffectPreset.h"

@class MDLAsset, MDLMesh, MDLSubmesh, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSSet, NSString;

@interface CSIGenerator : NSObject {
  /* instance variables */
  NSMutableArray *_slices;
  NSMutableArray *_bitmaps;
  NSMutableArray *_metrics;
  BOOL _isExcludedFromFilter;
  short _layout;
  NSData *_rawData;
  unsigned long long _rowbytes;
  NSString *_assetPackIdentifier;
  NSSet *_externalTags;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _externalReferenceFrame;
  unsigned short _linkLayout;
  NSArray *_containedNamedElements;
  BOOL _isCubeMap;
  NSString *_systemColorName;
  BOOL _isInterpolatable;
}

@property (nonatomic) double compressionQuality;
@property long long targetPlatform;
@property long long compressionType;
@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *utiType;
@property (nonatomic) struct CGSize { double x0; double x1; } physicalSizeInMeters;
@property (nonatomic) BOOL isVectorBased;
@property (nonatomic) long long templateRenderingMode;
@property (nonatomic) BOOL excludedFromContrastFilter;
@property (nonatomic) BOOL optOutOfThinning;
@property (nonatomic) BOOL preserveForArchiveOnly;
@property (nonatomic) BOOL preservedVectorRepresentation;
@property (nonatomic) BOOL isFlippable;
@property (nonatomic) BOOL isTintable;
@property (nonatomic) short colorSpaceID;
@property (nonatomic) unsigned int scaleFactor;
@property (nonatomic) unsigned int pixelFormat;
@property (nonatomic) BOOL allowsMultiPassEncoding;
@property (nonatomic) BOOL allowsOptimalRowbytesPacking;
@property (nonatomic) BOOL allowsPaletteImageCompression;
@property (nonatomic) BOOL allowsHevcCompression;
@property (nonatomic) BOOL allowsDeepmapImageCompression;
@property (nonatomic) BOOL allowsDeepmap2ImageCompression;
@property (nonatomic) int exifOrientation;
@property (nonatomic) struct CGSize { double x0; double x1; } originalUncroppedSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } alphaCroppedFrame;
@property (nonatomic) BOOL clampMetrics;
@property (nonatomic) long long textureFormat;
@property (nonatomic) long long textureInterpretation;
@property (nonatomic) BOOL textureOpaque;
@property (nonatomic) BOOL cubemap;
@property (readonly, nonatomic) NSArray *mipReferences;
@property (readonly, nonatomic) NSArray *layerReferences;
@property (retain, nonatomic) CUIPSDGradient *gradient;
@property (retain, nonatomic) CUIShapeEffectPreset *effectPreset;
@property (nonatomic) int blendMode;
@property (nonatomic) double opacity;
@property (copy, nonatomic) NSDate *modtime;
@property (copy, nonatomic) NSArray *colorComponents;
@property (copy, nonatomic) NSDictionary *sizesByIndex;
@property (copy, nonatomic) NSString *fontName;
@property (nonatomic) double fontSize;
@property (nonatomic) double maxPointSize;
@property (nonatomic) double minPointSize;
@property (nonatomic) short scalingStyle;
@property (nonatomic) short alignment;
@property (copy, nonatomic) NSDictionary *renditionProperties;
@property (nonatomic) int objectVersion;
@property (nonatomic) struct { x0[4] } transformation;
@property (copy, nonatomic) MDLAsset *modelAsset;
@property (readonly, nonatomic) NSArray *meshReferences;
@property (copy, nonatomic) MDLMesh *modelMesh;
@property (readonly, nonatomic) NSArray *submeshReferences;
@property (copy, nonatomic) MDLSubmesh *modelSubmesh;
@property (copy, nonatomic) NSArray *vectorSizes;
@property (nonatomic) unsigned int standardVectorSize;
@property (nonatomic) float baseline;
@property (nonatomic) float capHeight;
@property (nonatomic) struct { double x0; double x1; double x2; double x3; } alignmentRectInsets;
@property (nonatomic) float templateVersion;
@property (nonatomic) BOOL interpolatable;
@property (nonatomic) long long vectorGlyphRenderingMode;
@property (nonatomic) BOOL vectorContainsMulticolorLayers;
@property (nonatomic) BOOL vectorContainsHierarchicalLayers;

/* class methods */
+ (void)initialize;
+ (void)setFileEncoding:(int)encoding;
+ (int)fileEncoding;

/* instance methods */
- (id)initWithCanvasSize:(struct CGSize { double x0; double x1; })size sliceCount:(unsigned int)count layout:(short)layout;
- (id)initWithShapeEffectPreset:(id)preset forScaleFactor:(unsigned int)factor;
- (id)initWithNameList:(id)list;
- (id)initWithRawData:(id)data pixelFormat:(unsigned int)format layout:(short)layout;
- (id)initWithExternalReference:(id)reference tags:(id)tags;
- (id)initWithLayerStackData:(id)data withCanvasSize:(struct CGSize { double x0; double x1; })size;
- (id)initWithLayerStackData:(id)data type:(long long)type withCanvasSize:(struct CGSize { double x0; double x1; })size;
- (id)initWithTextureForPixelFormat:(long long)format;
- (id)initWithTextureImageWithSize:(struct CGSize { double x0; double x1; })size forPixelFormat:(long long)format cubeMap:(BOOL)map;
- (id)initWithInternalReferenceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect layout:(short)layout;
- (id)initWithColorNamed:(id)named colorSpaceID:(unsigned long long)id components:(id)components;
- (id)initWithColorNamed:(id)named colorSpaceID:(unsigned long long)id components:(id)components linkedToSystemColorWithName:(id)name;
- (id)initWithTextStyleNamed:(id)named fontName:(id)name fontSize:(double)size maxPointSize:(double)size minPointSize:(double)size scalingStyle:(short)style alignment:(short)alignment;
- (id)initWithMultisizeImageSetNamed:(id)named sizesByIndex:(id)index;
- (id)initWithModelAsset:(id)asset;
- (id)initWithModelMesh:(id)mesh;
- (id)initWithModelSubmesh:(id)submesh;
- (void)dealloc;
- (id)rawData;
- (void)addBitmap:(id)bitmap;
- (void)addSliceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)addMetrics:(struct { struct CGSize { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; struct CGSize { double x0; double x1; } x2; })metrics;
- (void)addLayerReference:(id)reference;
- (void)addMipReference:(id)reference;
- (void)addMeshReference:(id)reference;
- (void)addSubmeshReference:(id)reference;
- (id)CSIRepresentationWithCompression:(BOOL)compression;
- (BOOL)isExcludedFromContrastFilter;
- (BOOL)isInterpolatable;
@end

#endif /* CSIGenerator_h */
