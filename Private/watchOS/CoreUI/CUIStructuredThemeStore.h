//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 866.4.0.0.0
//
#ifndef CUIStructuredThemeStore_h
#define CUIStructuredThemeStore_h
@import Foundation;

#include "CUICommonAssetStorage.h"
#include "CUIStructuredThemeStorage-Protocol.h"
#include "CUIStructuredThemeStorage2-Protocol.h"

@class NSCache, NSDictionary, NSMutableDictionary, NSSet, NSString;

@interface CUIStructuredThemeStore : NSObject<CUIStructuredThemeStorage, CUIStructuredThemeStorage2> {
  /* instance variables */
  NSMutableDictionary *_cache;
  CUICommonAssetStorage *_store;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _cacheLock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _storeLock;
  unsigned long long _themeIndex;
  NSString *_bundleID;
  NSCache *_namedRenditionKeyCache;
  undefined * _attributePresent;
  NSDictionary *_aliasDictionary;
  NSSet *_legacyFlippableSet;
  NSCache *_nameCache;
}

@property BOOL mainBundle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (unsigned long long)colorSpaceID;
- (long long)maximumRenditionKeyTokenCount;
- (BOOL)usesCUISystemThemeRenditionKey;
- (const struct _renditionkeyfmt { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3[0] } *)keyFormat;
- (const struct _renditionkeyattributeindex { unsigned long long x0; unsigned char x1[65] unsigned int x2; unsigned int x3[29] } *)keyAttributeIndex;
- (id)baseGradationKeySignatureForKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)copyKeySignatureForKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key withBytesNoCopy:(char *)copy length:(unsigned long long)length;
- (id)copyLookupKeySignatureForKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)keySignatureForKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (BOOL)assetExistsForKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (void)_commonInit;
- (id)initWithPath:(id)path;
- (id)initWithURL:(id)url;
- (id)initWithBytes:(const void *)bytes length:(unsigned long long)length;
- (void)dealloc;
- (id)themeStore;
- (unsigned int)documentFormatVersion;
- (unsigned int)distilledInCoreUIVersion;
- (unsigned int)thinnedWithCoreUIVersion;
- (unsigned int)authoredWithSchemaVersion;
- (id)defaultAppearanceName;
- (BOOL)getPhysicalColor:(struct _colordef { unsigned int x0; unsigned int x1; struct _rgbquad { unsigned int x0 :8; unsigned int x1 :8; unsigned int x2 :8; unsigned int x3 :8; } x2; } *)color withName:(id)name;
- (BOOL)hasPhysicalColorWithName:(id)name;
- (BOOL)getFontName:(id *)name baselineOffset:(double *)offset forFontType:(id)type;
- (double)fontSizeForFontSizeType:(id)type;
- (void)_updateKeyWithCompatibilityMapping:(struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)mapping;
- (BOOL)_formatStorageKeyArrayBytes:(void *)bytes length:(unsigned long long)length fromKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)_newRenditionKeyDataFromKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)convertRenditionKeyToKeyData:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)data;
- (const struct _renditionkeyfmt { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3[0] } *)renditionKeyFormat;
- (id)debugDescriptionForKeyList:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)list;
- (id)lookupAssetForKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)renditionWithKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)renditionWithKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key usingKeySignature:(id)signature;
- (BOOL)canGetRenditionWithKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)renditionKeyForName:(id)name;
- (const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)renditionKeyForName:(id)name cursorHotSpot:(struct CGPoint { double x0; double x1; } *)spot;
- (id)renditionNameForKeyList:(struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)list;
- (id)allImageNames;
- (BOOL)containsLookupForName:(id)name;
- (id)imagesWithName:(id)name;
- (id)catalogGlobals;
- (unsigned short)appearanceIdentifierForName:(id)name;
- (id)nameForAppearanceIdentifier:(unsigned short)identifier;
- (id)nameForLocalizationIdentifier:(unsigned short)identifier;
- (id)appearances;
- (id)localizations;
- (unsigned short)localizationIdentifierForName:(id)name;
- (id)renditionInfoForIdentifier:(unsigned short)identifier;
- (BOOL)_subImageTexturingShouldBeSupported;
- (BOOL)caAllowSubimageOfImage:(struct CGImage *)image;
- (void)clearRenditionCache;
- (BOOL)localizationWorkaroundForKeyList:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)list withLocale:(id)locale;
- (id)aliasForName:(id)name;
- (id)mappedAliases;
- (BOOL)imageNamedShouldFlip:(id)flip;
- (id)bundleID;
- (void)setBundleID:(id)id;
- (void)setThemeIndex:(unsigned long long)index;
- (unsigned long long)themeIndex;
- (id)deploymentPlatformString;
- (long long)deploymentPlatform;
- (id)store;
@end

#endif /* CUIStructuredThemeStore_h */
