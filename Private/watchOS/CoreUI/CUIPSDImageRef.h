//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 866.4.0.0.0
//
#ifndef CUIPSDImageRef_h
#define CUIPSDImageRef_h
@import Foundation;

#include "_CUIPSDSublayerInfo.h"

@class NSString;

@interface CUIPSDImageRef : NSObject {
  /* instance variables */
  BOOL _parsedForLayers;
  _CUIPSDSublayerInfo *_rootLayers;
}

@property (nonatomic) int file;
@property (copy, nonatomic) NSString *path;
@property (nonatomic) void * psd;

/* class methods */
+ (BOOL)isValidPSDResourceAtPath:(id)path;
+ (BOOL)isValidPSDResourceAtPath:(id)path withLayerCount:(unsigned int *)count;
+ (BOOL)isValidPSDResourceAtPath:(id)path withLayerCount:(unsigned int *)count validateLayers:(BOOL)layers;
+ (BOOL)isValidPSDResourceAtPath:(id)path withImageInfo:(struct _PSDImageInfo { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; int x5; } *)info;

/* instance methods */
- (id)layerEnumerator;
- (void)enumerateLayersUsingBlock:(id /* block */)block;
- (BOOL)openImageFile;
- (BOOL)loadPSDFileWithLayers:(BOOL)layers;
- (id)initWithPath:(id)path;
- (void)dealloc;
- (void *)_psdFileWithLayers:(BOOL)layers;
- (void *)psdFile;
- (void *)psdFileForComposite;
- (id)imageFromRef:(struct CGImage *)ref;
- (struct CGImage *)createCGImageAtLayer:(unsigned int)layer;
- (id)imageAtLayer:(unsigned int)layer;
- (id)imageAtLayer:(unsigned int)layer isZeroSizeImage:(BOOL *)image;
- (id)imageFromSlice:(unsigned int)slice atLayer:(unsigned int)layer;
- (id)imageFromSlice:(unsigned int)slice atAbsoluteLayer:(unsigned int)layer;
- (id)imageFromSlice:(unsigned int)slice atLayer:(unsigned int)layer isEmptyImage:(BOOL *)image;
- (id)patternFromSlice:(unsigned int)slice atLayer:(unsigned int)layer;
- (id)patternFromSlice:(unsigned int)slice atLayer:(unsigned int)layer isZeroSizeImage:(BOOL *)image;
- (id)maskFromSlice:(unsigned int)slice atLayer:(unsigned int)layer;
- (struct CGImage *)createCompositeCGImage;
- (id)compositeImage;
- (id)maskFromCompositeAlphaChannel:(long long)channel;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsAtLayer:(unsigned int)layer;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundsForSlice:(unsigned int)slice;
- (int)absoluteLayerIndexFromLayerNames:(id)names;
- (int)_layerIndexFromLayerNames:(id)names indexRangeBegin:(int)begin indexRangeEnd:(int)end isTopLevel:(BOOL)level;
- (struct { struct CGSize { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; struct CGSize { double x0; double x1; } x2; })metricsInAlphaChannel:(long long)channel forRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct { struct CGSize { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; struct CGSize { double x0; double x1; } x2; })metricsInMask:(id)mask forRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)visibilityAtLayer:(unsigned int)layer;
- (id)layerRefAtIndex:(unsigned int)index;
- (struct CGColorSpace *)copyColorSpace;
- (struct _PSDImageInfo { unsigned int x0; unsigned int x1; unsigned short x2; unsigned short x3; unsigned short x4; int x5; })imageInfo;
- (unsigned int)numberOfLayers;
- (unsigned int)numberOfSlices;
- (unsigned int)numberOfChannels;
- (id)layerNames;
- (id)metadataString;
- (struct CGSize { double x0; double x1; })size;
- (id)fillSampleAtLayer:(unsigned int)layer;
- (id)gradientAtLayer:(unsigned int)layer;
- (id)_layerInfo;
- (unsigned int)_absoluteIndexOfRootLayer:(unsigned int)layer;
- (void *)_psdLayerRecordAtAbsoluteIndex:(unsigned int)index;
- (id)_layerRefAtAbsoluteIndex:(unsigned int)index;
- (BOOL)_treatDividerAsLayer;
- (id)_copySublayerInfoAtAbsoluteIndex:(unsigned int)index atRoot:(BOOL)root;
- (void)_logInvalidAbsoluteIndex:(unsigned int)index psd:(void *)psd;
- (id)_nameAtAbsoluteIndex:(unsigned int)index;
- (id)_namesOfSublayers:(id)sublayers;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_boundsAtAbsoluteIndex:(unsigned int)index;
- (BOOL)_visibilityAtAbsoluteIndex:(unsigned int)index;
- (double)_opacityAtAbsoluteIndex:(unsigned int)index;
- (double)_fillOpacityAtAbsoluteIndex:(unsigned int)index;
- (int)_blendModeAtAbsluteIndex:(unsigned int)index;
- (struct CGImage *)_copyCGImageAtAbsoluteIndex:(unsigned int)index;
- (id)_imageAtAbsoluteIndex:(unsigned int)index isZeroSizeImage:(BOOL *)image;
- (id)_imageFromSlice:(unsigned int)slice atAbsoluteIndex:(unsigned int)index isEmptyImage:(BOOL *)image;
- (id)_patternFromSlice:(unsigned int)slice atAbsoluteIndex:(unsigned int)index isZeroSizeImage:(BOOL *)image;
- (id)_createMaskFromSlice:(unsigned int)slice atAbsoluteIndex:(unsigned int)index;
- (id)_fillSampleAtAbsoluteIndex:(unsigned int)index;
- (int)cgBlendModeForPSDLayerOrLayerEffectBlendMode:(unsigned int)mode;
- (id)_gradientAtAbsoluteIndex:(unsigned int)index;
- (id)colorFromDocumentColor:(double *)color;
- (id)_dropShadowFromLayerEffectsInfo:(void *)info;
- (id)_innerShadowFromLayerEffectsInfo:(void *)info;
- (id)_innerGlowFromLayerEffectsInfo:(void *)info;
- (id)_outerGlowFromLayerEffectsInfo:(void *)info;
- (id)_colorOverlayFromLayerEffectsInfo:(void *)info;
- (id)_gradientOverlayFromLayerEffectsAtAbsoluteIndex:(unsigned int)index;
- (id)_bevelEmbossFromLayerEffectsInfo:(void *)info;
- (id)_layerEffectsAtAbsoluteIndex:(unsigned int)index;
@end

#endif /* CUIPSDImageRef_h */
