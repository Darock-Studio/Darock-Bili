//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 866.4.0.0.0
//
#ifndef CUIShapeEffectPreset_h
#define CUIShapeEffectPreset_h
@import Foundation;

@interface CUIShapeEffectPreset : NSObject {
  /* instance variables */
  struct { unsigned int effectType; unsigned int effectParameter; union { double floatValue; unsigned long long intValue; struct _rgbcolor { unsigned char r; unsigned char g; unsigned char b; } colorValue; short angleValue; unsigned int enumValue; } effectValue; } _parameterList[125];
  unsigned int _effectIndex[26];
  double _scaleFactor;
}

@property float minimumShadowSpread;

/* class methods */
+ (id)requiredEffectParametersForEffectType:(unsigned int)type;
+ (unsigned int)cuiEffectBlendModeFromCGBlendMode:(int)mode;
+ (int)cgBlendModeFromCUIEffectBlendMode:(unsigned int)mode;
+ (id)caFilterFromCUIEffectBlendMode:(unsigned int)mode;
+ (struct _CUIVibrantColorMatrixOptions { double x0[4] double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; })monochromeVibrantColorMatrixOptions;
+ (struct _CUIVibrantColorMatrixOptions { double x0[4] double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; })standardVibrantColorMatrixOptionsForColor:(struct CGColor *)color;
+ (struct _CUIVibrantColorMatrixOptions { double x0[4] double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; })vibrantColorMatrixOptionsWithColor:(struct CGColor *)color saturation:(double)saturation brightness:(double)brightness;
+ (void)configureVibrantColorMatrixFilter:(id)filter withOptions:(struct _CUIVibrantColorMatrixOptions { double x0[4] double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; })options;

/* instance methods */
- (id)initWithConstantPreset:(const struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; struct { unsigned int x50; unsigned int x1; union { double x0; unsigned long long x1; struct _rgbcolor { unsigned char x0; unsigned char x1; unsigned char x2; } x2; short x3; unsigned int x4; } x2; } x[125] } *)preset;
- (unsigned long long)_parameterCount;
- (id)CUIEffectDataRepresentation;
- (id)layerEffectsRepresentation;
- (id)init;
- (id)initWithEffectScale:(double)scale;
- (double)effectScale;
- (unsigned long long)effectCount;
- (unsigned int)effectTypeAtIndex:(unsigned long long)index;
- (union { double x0; unsigned long long x1; struct _rgbcolor { unsigned char x0; unsigned char x1; unsigned char x2; } x2; short x3; unsigned int x4; })valueForParameter:(unsigned int)parameter inEffectAtIndex:(unsigned long long)index;
- (void)_insertEffectTuple:(struct { unsigned int x0; unsigned int x1; union { double x0; unsigned long long x1; struct _rgbcolor { unsigned char x0; unsigned char x1; unsigned char x2; } x2; short x3; unsigned int x4; } x2; })tuple atEffectIndex:(unsigned long long)index;
- (void)getEffectTuples:(struct  * *)tuples count:(unsigned long long *)count atEffectIndex:(unsigned long long)index;
- (void)addValue:(union { double x0; unsigned long long x1; struct _rgbcolor { unsigned char x0; unsigned char x1; unsigned char x2; } x2; short x3; unsigned int x4; })value forParameter:(unsigned int)parameter withEffectType:(unsigned int)type atEffectIndex:(unsigned long long)index;
- (void)appendValue:(union { double x0; unsigned long long x1; struct _rgbcolor { unsigned char x0; unsigned char x1; unsigned char x2; } x2; short x3; unsigned int x4; })value forParameter:(unsigned int)parameter withEffectType:(unsigned int)type;
- (void)addValue:(union { double x0; unsigned long long x1; struct _rgbcolor { unsigned char x0; unsigned char x1; unsigned char x2; } x2; short x3; unsigned int x4; })value forParameter:(unsigned int)parameter withNewEffectType:(unsigned int)type;
- (void)addFloatValue:(double)value forParameter:(unsigned int)parameter withNewEffectType:(unsigned int)type;
- (void)addIntValue:(unsigned long long)value forParameter:(unsigned int)parameter withNewEffectType:(unsigned int)type;
- (void)addEnumValue:(unsigned int)value forParameter:(unsigned int)parameter withNewEffectType:(unsigned int)type;
- (void)addColorValueRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue forParameter:(unsigned int)parameter withNewEffectType:(unsigned int)type;
- (void)appendFloatValue:(double)value forParameter:(unsigned int)parameter withEffectType:(unsigned int)type;
- (void)appendAngleValue:(long long)value forParameter:(unsigned int)parameter withEffectType:(unsigned int)type;
- (void)appendIntValue:(unsigned long long)value forParameter:(unsigned int)parameter withEffectType:(unsigned int)type;
- (void)appendEnumValue:(unsigned int)value forParameter:(unsigned int)parameter withEffectType:(unsigned int)type;
- (void)appendColorValueRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue forParameter:(unsigned int)parameter withEffectType:(unsigned int)type;
- (void)addShapeOpacityWithOpacity:(double)opacity;
- (void)addOutputOpacityWithOpacity:(double)opacity;
- (void)addColorFillWithRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity blendMode:(unsigned int)mode tintable:(BOOL)tintable;
- (void)addGradientFillWithTopColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue bottomColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity blendMode:(unsigned int)mode;
- (void)addInnerGlowWithColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity blur:(int)blur blendMode:(unsigned int)mode;
- (void)addInnerShadowWithColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity blur:(int)blur offset:(int)offset angle:(int)angle blendMode:(unsigned int)mode;
- (void)addOuterGlowWithColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity blur:(int)blur spread:(int)spread;
- (void)addDropShadowWithColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity blur:(int)blur spread:(int)spread offset:(int)offset angle:(int)angle;
- (void)addExtraShadowWithColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity blur:(int)blur spread:(int)spread offset:(int)offset angle:(int)angle;
- (void)addBevelEmbossWithHighlightColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity shadowColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue opacity:(double)opacity blur:(int)blur soften:(int)soften bevelStyle:(unsigned int)style;
- (void)addHueSaturationWithColorRed:(unsigned int)red green:(unsigned int)green blue:(unsigned int)blue angle:(int)angle width:(int)width tintable:(BOOL)tintable;
- (void)addEffectsFromPreset:(id)preset;
- (id)debugDescription;
@end

#endif /* CUIShapeEffectPreset_h */
