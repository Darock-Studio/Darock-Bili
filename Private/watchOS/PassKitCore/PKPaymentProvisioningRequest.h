//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKPaymentProvisioningRequest_h
#define PKPaymentProvisioningRequest_h
@import Foundation;

#include "PKPaymentWebServiceRequest.h"
#include "PKDSPContext.h"
#include "PKPaymentDeviceMetadata.h"
#include "PKPaymentEligibilityResponse.h"

@class NSArray, NSData, NSNumber, NSString;

@interface PKPaymentProvisioningRequest : PKPaymentWebServiceRequest {
  /* instance variables */
  NSNumber *_primaryJSBLSequenceCounter;
  NSArray *_certChain;
  BOOL _devSigned;
  PKPaymentDeviceMetadata *_deviceData;
}

@property (nonatomic) long long style;
@property (retain, nonatomic) PKPaymentEligibilityResponse *eligibilityResponse;
@property (readonly, nonatomic) BOOL deviceProvisioningDataExpected;
@property (nonatomic) BOOL disableDeviceScore;
@property (nonatomic) BOOL sendReducedDeviceData;
@property (copy, nonatomic) NSString *nonce;
@property (copy, nonatomic) NSString *cardholderName;
@property (copy, nonatomic) NSString *cardSecurityCode;
@property (copy, nonatomic) NSData *activationData;
@property (copy, nonatomic) PKDSPContext *context;
@property (copy, nonatomic) NSData *cryptogram;
@property (copy, nonatomic) NSData *challengeResponse;
@property (copy, nonatomic) NSString *referrerIdentifier;
@property (nonatomic) BOOL includeExternalDestinationDevices;
@property (copy, nonatomic) NSArray *externalDestinationDevices;
@property (copy, nonatomic) NSString *transferFromDevice;
@property (nonatomic) BOOL removeFromSourceDevice;
@property (copy, nonatomic) NSString *applicationIdentifier;
@property (copy, nonatomic) NSData *fidoAttestation;
@property (copy, nonatomic) NSData *fidoKey;
@property (copy, nonatomic) NSData *fidoSignedChallenge;
@property (copy, nonatomic) NSData *seBlobDeviceEncryptionCertificate;
@property (copy, nonatomic) NSArray *transactionKeyCertificateChain;
@property (copy, nonatomic) NSData *longTermPrivacyKey;
@property (copy, nonatomic) NSData *transactionKey;
@property (copy, nonatomic) NSArray *isoDeviceEncryptionAttestation;
@property (copy, nonatomic) NSData *isoDeviceEncryptionAuthorization;
@property (copy, nonatomic) NSString *subCredentialIdentifier;
@property (copy, nonatomic) NSArray *authorizationKeyAttestation;
@property (copy, nonatomic) NSData *transactionKeyAttestation;
@property (copy, nonatomic) NSData *transactionKeySignature;
@property (copy, nonatomic) NSData *transactionKeyAuthorization;
@property (copy, nonatomic) NSData *progenitorKeyCASDAttestation;
@property (copy, nonatomic) NSArray *transactionKeys;
@property (copy, nonatomic) NSData *serverAttestedProvisioningData;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithEligibilityResponse:(id)response;
- (id)initWithEligibilityResponse:(id)response style:(long long)style;
- (id)initWithEligibilityResponse:(id)response addRequestConfiguration:(id)configuration addRequest:(id)request;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isDeviceProvisioningDataExpected;
- (void)_urlRequestWithServiceURL:(id)url deviceIdentifier:(id)identifier appleAccountInformation:(id)information certChain:(id)chain devSigned:(BOOL)signed deviceData:(id)data webService:(id)service completion:(id /* block */)completion;
- (void)_updateRequestForRetry:(id)retry retryFields:(id)fields webService:(id)service withCompletion:(id /* block */)completion;
- (void)_updateRequestForRedirect:(id)redirect overrides:(id)overrides webService:(id)service withCompletion:(id /* block */)completion;
- (void)_requestBodyWithWebService:(id)service completion:(id /* block */)completion;
- (void)_encryptSecureDictionary:(id)dictionary intoDictionary:(id)dictionary;
- (id)_secureParemters;
- (void)_deviceScoreWithCompletion:(id /* block */)completion;
- (void)_updateContextUsingWebService:(id)service completion:(id /* block */)completion;
@end

#endif /* PKPaymentProvisioningRequest_h */
