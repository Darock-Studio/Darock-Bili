//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKAnalyticsReporter_h
#define PKAnalyticsReporter_h
@import Foundation;

@class NSData, NSObject, NSString, RTCReporting;

@interface PKAnalyticsReporter : NSObject {
  /* instance variables */
  NSData *_archivedSessionToken;
  RTCReporting *_session;
  NSObject *_sessionToken;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lockArchive;
  NSString *_subject;
}

/* class methods */
+ (void)reportAccountRewardsEventIfNecessary:(id)necessary;
+ (id)subjectToReportDashboardAnalyticsForPass:(id)pass;
+ (id)subjectToReportDashboardAnalyticsForAccount:(id)account;
+ (id)subjectToReportDashboardAnalyticsForFeature:(unsigned long long)feature;
+ (void)updateIdentityEventToReportDashboardAnalytics:(id)analytics forPass:(id)pass;
+ (void)reportDashboardEventIfNecessary:(id)necessary forPass:(id)pass;
+ (id)virtualCardReferralSource:(unsigned long long)source;
+ (id)subjectDictionary;
+ (id)subjectSessionStateDateDictionary;
+ (id)reporterForSubject:(id)subject;
+ (void)beginSubjectReporting:(id)reporting;
+ (void)beginSubjectReporting:(id)reporting withArchivedParent:(id)parent;
+ (void)endSubjectReporting:(id)reporting;
+ (void)subject:(id)subject sendEvent:(id)event;
+ (void)subject:(id)subject category:(long long)category sendEvent:(id)event;
+ (void)subjects:(id)subjects sendEvent:(id)event;
+ (void)subjects:(id)subjects category:(long long)category sendEvent:(id)event;
+ (int)clientTypeForSubject:(id)subject;
+ (void)sendSingularEvent:(id)event;
+ (id)archivedSessionTokenForSubject:(id)subject;
+ (id)analyticsErrorTextForError:(long long)error;

/* instance methods */
- (id)initWithParent:(id)parent subject:(id)subject;
- (id)initWithParentToken:(id)token subject:(id)subject;
- (id)initWithArchivedParent:(id)parent subject:(id)subject;
- (id)initWithSubject:(id)subject;
- (id)_reportingSessionID;
- (id)archivedSessionToken;
- (void)sendEvent:(id)event;
- (void)sendEvent:(id)event withCategory:(long long)category;
@end

#endif /* PKAnalyticsReporter_h */
