//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKPaymentWebServiceRemoteProxyTargetDevice_h
#define PKPaymentWebServiceRemoteProxyTargetDevice_h
@import Foundation;

#include "PKPaymentWebService.h"
#include "PKPaymentWebServiceProxyObjectExportedInterface-Protocol.h"
#include "PKPaymentWebServiceTargetDeviceProtocol-Protocol.h"

@class NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface PKPaymentWebServiceRemoteProxyTargetDevice : NSObject<PKPaymentWebServiceProxyObjectExportedInterface> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_handlerQueue;
  PKPaymentWebService *_webService;
  NSObject<PKPaymentWebServiceTargetDeviceProtocol> *_targetDevice;
}

@property (readonly, nonatomic) NSXPCConnection *connection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithWebService:(id)service connection:(id)connection;
- (void)dealloc;
- (void)getContextWithCompletion:(id /* block */)completion;
- (void)queueConnectionToTrustedServiceManagerForPushTopic:(id)topic withCompletion:(id /* block */)completion;
- (void)getEncryptedServiceProviderDataForSecureElementPass:(id)pass completion:(id /* block */)completion;
- (void)getConfigurationDataWithCompletion:(id /* block */)completion;
- (void)getRegistrationDataWithCompletion:(id /* block */)completion;
- (void)getTrustedDeviceEnrollmentInfoWithCompletion:(id /* block */)completion;
- (void)signData:(id)data signatureEntanglementMode:(unsigned long long)mode withCompletion:(id /* block */)completion;
- (void)getProvisioningDataIncludingDeviceMetadata:(BOOL)metadata withCompletion:(id /* block */)completion;
- (void)deleteApplicationWithAID:(id)aid;
- (void)deleteKeyMaterialForSubCredentialId:(id)id;
- (void)didRegisterWithRegionMap:(id)map primaryRegionTopic:(id)topic;
- (void)paymentSupportedInCurrentRegion:(id /* block */)region;
- (void)registrationSupportedInCurrentRegionWithCompletion:(id /* block */)completion;
- (void)noteProvisioningUserInterfaceDidAppear;
- (void)noteProvisioningUserInterfaceDidDisappear;
- (void)noteProvisioningDidBegin;
- (void)noteProvisioningDidEnd;
- (void)setNewAuthRandomIfNecessaryReturningPairingState:(id /* block */)state;
- (void)setNewAuthRandom:(id /* block */)random;
- (void)hasPassesOfType:(unsigned long long)type completion:(id /* block */)completion;
- (void)passesOfType:(unsigned long long)type completion:(id /* block */)completion;
- (void)canProvisionPaymentPassWithPrimaryAccountIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)validateAddPreconditionsWithCompletion:(id /* block */)completion;
- (void)downloadAllPaymentPasses;
- (void)claimSecureElementForCurrentUserWithCompletion:(id /* block */)completion;
- (void)secureElementOwnershipStateForCurrentUserWithCompletion:(id /* block */)completion;
- (void)validateTransferPreconditionsWithCompletion:(id /* block */)completion;
- (void)handlePotentialExpressPass:(id)pass withCompletion:(id /* block */)completion;
- (void)addPassData:(id)data completion:(id /* block */)completion;
- (void)removePass:(id)pass completion:(id /* block */)completion;
- (void)supportsPeerPaymentRegistrationWithCompletion:(id /* block */)completion;
- (void)supportsAccountsWithCompletion:(id /* block */)completion;
- (void)supportedFeatureIdentifiersWithCompletion:(id /* block */)completion;
- (void)supportedFeatureIdentifiersForAccountProvisioningWithCompletion:(id /* block */)completion;
- (void)updatedAccountsForProvisioningWithCompletion:(id /* block */)completion;
- (void)triggerCloudStoreZoneCreationForAccount:(id)account withCompletion:(id /* block */)completion;
- (void)cachedFeatureApplicationsForProvisioningWithCompletion:(id /* block */)completion;
- (void)featureApplicationsForProvisioningWithCompletion:(id /* block */)completion;
- (void)deviceMetadataWithFields:(unsigned long long)fields completion:(id /* block */)completion;
- (void)updateAccountWithIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)default completion:(id /* block */)completion;
- (void)setDefaultPaymentPassUniqueIdentifier:(id)identifier;
- (void)renewAppleAccountWithCompletionHandler:(id /* block */)handler;
- (void)appleAccountInformationWithCompletion:(id /* block */)completion;
- (void)notePasscodeUpgradeFlowWillBeginWithCompletion:(id /* block */)completion;
- (void)notePasscodeUpgradeFlowDidEnd;
- (void)enforceUpgradedPasscodePolicyWithCompletion:(id /* block */)completion;
- (void)currentPasscodeMeetsUpgradedPasscodePolicy:(id /* block */)policy;
- (void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(BOOL)policy;
- (void)endRequiringUpgradedPasscodeIfNecessary;
- (void)performDeviceCheckInWithCompletion:(id /* block */)completion;
- (void)performDeviceRegistrationReturningContextForReason:(id)reason brokerURL:(id)url completion:(id /* block */)completion;
- (void)storePassOwnershipToken:(id)token withIdentifier:(id)identifier;
- (void)passOwnershipTokenWithIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)familyMembersWithCompletion:(id /* block */)completion;
- (void)generateTransactionKeyWithParameters:(id)parameters withCompletion:(id /* block */)completion;
- (void)statusForShareableCredentials:(id)credentials completion:(id /* block */)completion;
- (void)prepareProvisioningTarget:(id)target checkFamilyCircle:(BOOL)circle completion:(id /* block */)completion;
- (void)provisionHomeKeyPassForSerialNumbers:(id)numbers completionHandler:(id /* block */)handler;
- (void)availableHomeKeyPassesWithCompletionHandler:(id /* block */)handler;
- (void)createFidoKeyForRelyingParty:(id)party relyingPartyAccountHash:(id)hash challenge:(id)challenge externalizedAuth:(id)auth completion:(id /* block */)completion;
- (void)checkFidoKeyPresenceForRelyingParty:(id)party relyingPartyAccountHash:(id)hash fidoKeyHash:(id)hash completion:(id /* block */)completion;
- (void)signWithFidoKeyForRelyingParty:(id)party relyingPartyAccountHash:(id)hash fidoKeyHash:(id)hash challenge:(id)challenge publicKeyIdentifier:(id)identifier externalizedAuth:(id)auth completion:(id /* block */)completion;
- (void)generateSEEncryptionCertificateForSubCredentialId:(id)id completion:(id /* block */)completion;
- (void)generateISOEncryptionCertificateForSubCredentialId:(id)id completion:(id /* block */)completion;
- (BOOL)areUnifiedAccessPassesSupported;
- (void)addISO18013Blobs:(id)blobs cardType:(long long)type completion:(id /* block */)completion;
- (void)longTermPrivacyKeyForCredentialGroupIdentifier:(id)identifier reuseExisting:(BOOL)existing completion:(id /* block */)completion;
- (void)usingSynchronousProxy:(BOOL)proxy meetsProvisioningRequirements:(id)requirements completion:(id /* block */)completion;
- (void)currentSecureElementSnapshot:(id /* block */)snapshot;
- (void)reserveStorageForAppletTypes:(id)types metadata:(id)metadata completion:(id /* block */)completion;
- (void)deleteReservation:(id)reservation completion:(id /* block */)completion;
- (void)archiveContext:(id)context;
- (void)archiveBackgroundContext:(id)context;
- (void)invalidateRemoteProxyTargetDevice;
- (void)applePayTrustKeyForIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)createApplePayTrustKeyWithRequest:(id)request completion:(id /* block */)completion;
- (void)deleteApplePayTrustKeyWithIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)maximumPaymentCardsWithCompletion:(id /* block */)completion;
- (void)allPaymentApplicationUsageSummariesWithCompletion:(id /* block */)completion;
- (void)secureElementIsAvailableWithCompletion:(id /* block */)completion;
- (void)addPendingProvisionings:(id)provisionings completion:(id /* block */)completion;
@end

#endif /* PKPaymentWebServiceRemoteProxyTargetDevice_h */
