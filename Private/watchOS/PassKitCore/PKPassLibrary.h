//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKPassLibrary_h
#define PKPassLibrary_h
@import Foundation;

#include "NSObject-Protocol.h"
#include "PKPassLibrary.h"
#include "PKPassLibraryDelegate-Protocol.h"
#include "PKPassLibraryExportedInterface-Protocol.h"
#include "PKXPCService.h"
#include "PKXPCServiceDelegate-Protocol.h"

@class NSArray, NSHashTable, NSString;
@protocol OS_dispatch_queue;

@interface PKPassLibrary : NSObject<PKXPCServiceDelegate, PKPassLibraryExportedInterface> {
  /* instance variables */
  PKXPCService *_remoteService;
  PKPassLibrary *_remoteLibrary;
  NSObject<NSObject> *_remoteLibraryObserver;
  unsigned long long _interfaceType;
  NSHashTable *_delegates;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _delegatesLock;
  NSObject<OS_dispatch_queue> *_asynchronousImageQueue;
}

@property (weak, nonatomic) NSObject<PKPassLibraryDelegate> *delegate;
@property (readonly, nonatomic) BOOL secureElementPassActivationAvailable;
@property (readonly, copy, nonatomic) NSArray *remoteSecureElementPasses;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)isPassLibraryAvailable;
+ (BOOL)isPaymentPassActivationAvailable;
+ (BOOL)isSecureElementPassActivationAvailable;
+ (unsigned long long)requestAutomaticPassPresentationSuppressionWithResponseHandler:(id /* block */)handler;
+ (void)endAutomaticPassPresentationSuppressionWithRequestToken:(unsigned long long)token;
+ (BOOL)isSuppressingAutomaticPassPresentation;
+ (id)sharedInstanceWithRemoteLibrary;
+ (id)sharedInstance;
+ (BOOL)contactlessInterfaceCanBePresentedFromSource:(long long)source;
+ (BOOL)contactlessInterfaceCanBePresentedFromSource:(long long)source deviceUILocked:(BOOL)uilocked;

/* instance methods */
- (id)init;
- (id)_initWithRemote:(id)remote;
- (id)initWithMachServiceName:(id)name resumeNotificationName:(id)name interfaceType:(unsigned long long)type;
- (void)dealloc;
- (id)_remoteObjectProxy;
- (id)_remoteObjectProxyWithFailureHandler:(id /* block */)handler;
- (id)_remoteObjectProxyWithErrorHandler:(id /* block */)handler;
- (id)_synchronousRemoteObjectProxyWithErrorHandler:(id /* block */)handler;
- (id)_extendedRemoteObjectProxy;
- (id)_extendedRemoteObjectProxyWithFailureHandler:(id /* block */)handler;
- (id)_extendedRemoteObjectProxyWithErrorHandler:(id /* block */)handler;
- (id)_synchronousExtendedRemoteObjectProxyWithErrorHandler:(id /* block */)handler;
- (id)_inAppRemoteObjectProxy;
- (id)_inAppRemoteObjectProxyWithFailureHandler:(id /* block */)handler;
- (id)_inAppRemoteObjectProxyWithErrorHandler:(id /* block */)handler;
- (id)_synchronousInAppRemoteObjectProxyWithErrorHandler:(id /* block */)handler;
- (void)addDelegate:(id)delegate;
- (void)removeDelegate:(id)delegate;
- (id)delegates;
- (void)remoteService:(id)service didEstablishConnection:(id)connection;
- (void)remoteService:(id)service didInterruptConnection:(id)connection;
- (id)passes;
- (id)passesOfType:(unsigned long long)type;
- (id)passesOfStyles:(unsigned long long)styles;
- (id)passWithUniqueID:(id)id;
- (id)passWithFPANIdentifier:(id)fpanidentifier;
- (id)passWithDPANIdentifier:(id)dpanidentifier;
- (void)getPassesWithUniqueIdentifiers:(id)identifiers handler:(id /* block */)handler;
- (id)passUniqueIDsForAssociatedApplicationIdentifier:(id)identifier;
- (void)getMetadataForFieldWithProperties:(id)properties withHandler:(id /* block */)handler;
- (id)manifestHashForPassWithUniqueID:(id)id;
- (id)passWithPassTypeIdentifier:(id)identifier serialNumber:(id)number;
- (id)remotePaymentPasses;
- (BOOL)hasPassesOfType:(unsigned long long)type;
- (id)paymentPassesWithLocallyStoredValue;
- (id)peerPaymentPassUniqueID;
- (unsigned long long)countOfPasses;
- (unsigned long long)countPassesOfType:(unsigned long long)type;
- (BOOL)canAddPassOfType:(unsigned long long)type;
- (BOOL)canAddPaymentPassWithPrimaryAccountIdentifier:(id)identifier;
- (BOOL)canAddSecureElementPassWithPrimaryAccountIdentifier:(id)identifier;
- (BOOL)isSecureElementPassActivationAvailable;
- (BOOL)canAddFelicaPass;
- (BOOL)isRemovingPassesOfType:(unsigned long long)type;
- (BOOL)hasSecureElementPassesOfType:(long long)type;
- (BOOL)isPassbookVisible;
- (BOOL)passbookHasBeenDeleted;
- (id)inAppPaymentPassesForPaymentRequest:(id)request;
- (id)_filterPeerPaymentPass:(id)pass request:(id)request;
- (void)hasInAppPaymentPassesForNetworks:(id)networks capabilities:(unsigned long long)capabilities issuerCountryCodes:(id)codes withHandler:(id /* block */)handler;
- (void)hasInAppPaymentPassesForNetworks:(id)networks capabilities:(unsigned long long)capabilities issuerCountryCodes:(id)codes isMultiTokensRequest:(BOOL)request withHandler:(id /* block */)handler;
- (void)hasInAppPaymentPassesForNetworks:(id)networks capabilities:(unsigned long long)capabilities issuerCountryCodes:(id)codes paymentRequestType:(id)type isMultiTokensRequest:(BOOL)request withHandler:(id /* block */)handler;
- (id)inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)identifier issuerCountryCodes:(id)codes isMultiTokensRequest:(BOOL)request;
- (void)hasInAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)identifier issuerCountryCodes:(id)codes isMultiTokensRequest:(BOOL)request withHandler:(id /* block */)handler;
- (id)inAppPrivateLabelPaymentPassesForWebDomain:(id)domain issuerCountryCodes:(id)codes isMultiTokensRequest:(BOOL)request;
- (void)hasInAppPrivateLabelPaymentPassesForWebDomain:(id)domain issuerCountryCodes:(id)codes isMultiTokensRequest:(BOOL)request withHandler:(id /* block */)handler;
- (void)enabledValueAddedServicePassesWithCompletion:(id /* block */)completion;
- (void)getRouteRelevantPassesFromLocation:(id)location handler:(id /* block */)handler;
- (void)getPassesAndCatalog:(BOOL)catalog withHandler:(id /* block */)handler;
- (void)getPassesAndCatalog:(BOOL)catalog synchronously:(BOOL)synchronously withHandler:(id /* block */)handler;
- (void)getPassesAndCatalogOfPassTypes:(unsigned long long)types synchronously:(BOOL)synchronously withHandler:(id /* block */)handler;
- (void)getGroupsControllerSnapshotWithOptions:(id)options synchronously:(BOOL)synchronously handler:(id /* block */)handler;
- (BOOL)containsPass:(id)pass;
- (void)containsPassWithPassTypeIdentifier:(id)identifier serialNumber:(id)number completionHandler:(id /* block */)handler;
- (BOOL)replacePassWithPass:(id)pass;
- (id)archiveForObjectWithUniqueID:(id)id;
- (id)dataForBundleResourceNamed:(id)named withExtension:(id)extension objectUniqueIdentifier:(id)identifier;
- (id)dataForBundleResources:(id)resources objectUniqueIdentifier:(id)identifier;
- (id)passLocalizedStringForKey:(id)key uniqueID:(id)id;
- (void)addPasses:(id)passes withCompletionHandler:(id /* block */)handler;
- (void)addPassesWithData:(id)data withCompletionHandler:(id /* block */)handler;
- (void)addPassesWithIngestionPayloads:(id)payloads withCompletionHandler:(id /* block */)handler;
- (void)addPassesContainer:(id)container withCompletionHandler:(id /* block */)handler;
- (void)addUnsignedPassesAtURLs:(id)urls withCompletionHandler:(id /* block */)handler;
- (void)provisionHomeKeyPassForSerialNumbers:(id)numbers completionHandler:(id /* block */)handler;
- (void)availableHomeKeyPassesWithCompletionHandler:(id /* block */)handler;
- (void)replaceUnsignedPassAtURL:(id)url withCompletionHandler:(id /* block */)handler;
- (void)generateTransactionKeyWithReaderIdentifier:(id)identifier readerPublicKey:(id)key completion:(id /* block */)completion;
- (void)fetchTransactionKeyForPassTypeIdentifier:(id)identifier serialNumber:(id)number completionHandler:(id /* block */)handler;
- (void)fetchAppletSubCredentialForPassTypeIdentifier:(id)identifier serialNumber:(id)number completionHandler:(id /* block */)handler;
- (void)enableExpressForPassWithPassTypeIdentifier:(id)identifier serialNumber:(id)number completionHandler:(id /* block */)handler;
- (void)openPaymentSetup;
- (void)openPaymentSetupForMerchantIdentifier:(id)identifier domain:(id)domain completion:(id /* block */)completion;
- (void)presentPaymentSetupRequest:(id)request orientation:(id)orientation completion:(id /* block */)completion;
- (void)paymentSetupFeaturesForConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)paymentPassWithAssociatedAccountIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)presentPaymentPass:(id)pass;
- (void)presentSecureElementPass:(id)pass;
- (void)presentWalletWithRelevantPassUniqueID:(id)id;
- (void)canPresentPaymentRequest:(id)request completion:(id /* block */)completion;
- (BOOL)hasPassesWithSupportedNetworks:(id)networks merchantCapabilities:(unsigned long long)capabilities issuerCountryCodes:(id)codes webDomain:(id)domain;
- (BOOL)hasPassesWithSupportedNetworks:(id)networks merchantCapabilities:(unsigned long long)capabilities issuerCountryCodes:(id)codes webDomain:(id)domain paymentRequestType:(id)type isMultiTokensRequest:(BOOL)request;
- (void)presentContactlessInterfaceForDefaultPassFromSource:(long long)source completion:(id /* block */)completion;
- (void)presentContactlessInterfaceForPassWithUniqueIdentifier:(id)identifier fromSource:(long long)source completion:(id /* block */)completion;
- (void)activatePaymentPass:(id)pass withActivationCode:(id)code completion:(id /* block */)completion;
- (void)activatePaymentPass:(id)pass withActivationData:(id)data completion:(id /* block */)completion;
- (void)activateSecureElementPass:(id)pass withActivationData:(id)data completion:(id /* block */)completion;
- (void)_activateSecureElementPass:(id)pass withActivationCode:(id)code activationData:(id)data completion:(id /* block */)completion;
- (void)requestUpdateOfObjectWithUniqueIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)requestPersonalizationOfPassWithUniqueIdentifier:(id)identifier contact:(id)contact personalizationToken:(id)token requiredPersonalizationFields:(unsigned long long)fields personalizationSource:(unsigned long long)source handler:(id /* block */)handler;
- (void)removePass:(id)pass;
- (void)removePasses:(id)passes;
- (void)getContainmentStatusAndSettingsForPass:(id)pass withHandler:(id /* block */)handler;
- (void)noteObjectSharedWithUniqueID:(id)id;
- (void)updateSettings:(unsigned long long)settings forObjectWithUniqueID:(id)id;
- (void)setSortingState:(long long)state forObjectWithUniqueID:(id)id withCompletion:(id /* block */)completion;
- (unsigned long long)setLiveRenderingEnabled:(BOOL)enabled forPassUniqueID:(id)id;
- (id)dynamicStateForPassUniqueID:(id)id;
- (void)rescheduleCommutePlanRenewalReminderForPassWithUniqueID:(id)id;
- (void)checkForTransitNotification;
- (void)postUpgradedPassNotificationForMarket:(id)market passUniqueID:(id)id;
- (void)postUpgradesAvailableNotificationForMarket:(id)market passUniqueID:(id)id;
- (void)signData:(id)data withSecureElementPass:(id)pass completion:(id /* block */)completion;
- (void)encryptedServiceProviderDataForSecureElementPass:(id)pass completion:(id /* block */)completion;
- (void)serviceProviderDataForSecureElementPass:(id)pass completion:(id /* block */)completion;
- (BOOL)canAddSecureElementPassWithConfiguration:(id)configuration;
- (BOOL)canAddSecureElementPassWithConfiguration:(id)configuration outError:(id *)error;
- (void)canAddSecureElementPassWithConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)canAddCarKeyPassWithConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)meetsProvisioningRequirements:(id)requirements completion:(id /* block */)completion;
- (BOOL)meetsProvisioningRequirements:(id)requirements missingRequirements:(id *)requirements;
- (id)passForProvisioningCredentialHash:(id)hash;
- (id)contentForUniqueID:(id)id;
- (void)fetchContentForUniqueID:(id)id withCompletion:(id /* block */)completion;
- (void)_fetchContentForUniqueID:(id)id usingSynchronousProxy:(BOOL)proxy withCompletion:(id /* block */)completion;
- (id)cachedImageSetForUniqueID:(id)id type:(long long)type withDisplayProfile:(id)profile displayTraits:(id)traits;
- (id)imageSetForUniqueID:(id)id ofType:(long long)type displayProfile:(id)profile suffix:(id)suffix;
- (void)fetchImageSetForUniqueID:(id)id ofType:(long long)type displayProfile:(id)profile suffix:(id)suffix withCompletion:(id /* block */)completion;
- (void)_fetchImageSetContainerForUniqueID:(id)id ofType:(long long)type displayProfile:(id)profile suffix:(id)suffix usingSynchronousProxy:(BOOL)proxy withCompletion:(id /* block */)completion;
- (void)_fetchImageSetForUniqueID:(id)id ofType:(long long)type displayProfile:(id)profile suffix:(id)suffix usingSynchronousProxy:(BOOL)proxy withCompletion:(id /* block */)completion;
- (BOOL)_setSetting:(unsigned long long)setting enabled:(BOOL)enabled forPass:(id)pass;
- (BOOL)setShowInLockScreenEnabled:(BOOL)enabled forPass:(id)pass;
- (BOOL)setAutomaticUpdatesEnabled:(BOOL)enabled forPass:(id)pass;
- (BOOL)setNotificationServiceUpdatesEnabled:(BOOL)enabled forPass:(id)pass;
- (BOOL)setAutomaticPresentationEnabled:(BOOL)enabled forPass:(id)pass;
- (BOOL)setSuppressNotificationsEnabled:(BOOL)enabled forPass:(id)pass;
- (BOOL)setSuppressPromotionsEnabled:(BOOL)enabled forPass:(id)pass;
- (BOOL)resetSettingsForPass:(id)pass;
- (id)defaultPaymentPassesWithRemotePasses:(BOOL)passes;
- (id)expressFelicaTransitPasses;
- (void)sortedTransitPassesForTransitNetworkIdentifiersWithCompletion:(id /* block */)completion;
- (void)sortedTransitPassesForAppletDataFormat:(id)format completion:(id /* block */)completion;
- (id)_sortedPaymentPassesForPaymentRequest:(id)request;
- (id)_defaultPaymentPassForPaymentRequest:(id)request;
- (BOOL)supportsSearchForPassUniqueID:(id)id;
- (void)pushProvisioningNoncesWithCredentialCount:(unsigned long long)count completion:(id /* block */)completion;
- (void)configurePushProvisioningConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(id)identifier completion:(id /* block */)completion;
- (BOOL)sendRKEPassThroughMessage:(id)message forSessionIdentifier:(id)identifier error:(id *)error;
- (void)invalidateVehicleConnectionSessionIdentifier:(id)identifier;
- (id)backupMetadata;
- (void)setBackupMetadata:(id)metadata;
- (void)prepareForBackupRestoreWithExistingPreferencesData:(id)data;
- (void)prepareForBackupRestoreWithSafeHavenPath:(id)path;
- (long long)_currentNotificationCountForIdentifier:(id)identifier;
- (void)createFidoKeyForRelyingParty:(id)party relyingPartyAccountHash:(id)hash challenge:(id)challenge externalizedAuth:(id)auth completion:(id /* block */)completion;
- (void)checkFidoKeyPresenceForRelyingParty:(id)party relyingPartyAccountHash:(id)hash fidoKeyHash:(id)hash completion:(id /* block */)completion;
- (void)signWithFidoKeyForRelyingParty:(id)party relyingPartyAccountHash:(id)hash fidoKeyHash:(id)hash challenge:(id)challenge publicKeyIdentifier:(id)identifier externalizedAuth:(id)auth completion:(id /* block */)completion;
- (void)generateSEEncryptionCertificateForSubCredentialId:(id)id completion:(id /* block */)completion;
- (void)generateISOEncryptionCertificateForSubCredentialId:(id)id completion:(id /* block */)completion;
- (void)deleteKeyMaterialForSubCredentialId:(id)id;
- (void)addISO18013Blobs:(id)blobs cardType:(long long)type completion:(id /* block */)completion;
- (void)longTermPrivacyKeyForCredentialGroupIdentifier:(id)identifier reuseExisting:(BOOL)existing completion:(id /* block */)completion;
- (void)presentIssuerBindingFlowForIssuerData:(id)data signature:(id)signature orientation:(id)orientation;
- (void)requestIssuerBoundPassesWithBindingWithData:(id)data automaticallyProvision:(BOOL)provision withCompletion:(id /* block */)completion;
- (void)signData:(id)data signatureEntanglementMode:(unsigned long long)mode withCompletionHandler:(id /* block */)handler;
- (BOOL)isPaymentPassActivationAvailable;
- (BOOL)_hasRemoteLibrary;
- (id)_remoteLibrary;
- (BOOL)migrateDataWithDidRestoreFromBackup:(BOOL)backup;
- (void)sendUserEditedCatalog:(id)catalog;
- (void)notifyPassUsedWithIdentifier:(id)identifier fromSource:(long long)source;
- (void)issueWalletUserNotificationWithTitle:(id)title message:(id)message forPassUniqueIdentifier:(id)identifier customActionRoute:(id)route;
- (void)pendingUserNotificationsWithCompletion:(id /* block */)completion;
- (void)removeAllScheduledActivities;
- (void)introduceDatabaseIntegrityProblem;
- (void)forceImmediateRevocationCheck;
- (void)spotlightReindexAllContentWithAcknowledgement:(id /* block */)acknowledgement;
- (void)spotlightReindexContentWithIdentifiers:(id)identifiers acknowledgement:(id /* block */)acknowledgement;
- (void)spotlightResetWithCompletion:(id /* block */)completion;
- (void)spotlightStatusWithCompletion:(id /* block */)completion;
- (void)removePassWithUniqueID:(id)id diagnosticReason:(id)reason;
- (void)removePassesWithUniqueIDs:(id)ids diagnosticReason:(id)reason;
- (void)recoverPassWithUniqueID:(id)id;
- (void)removePassesOfType:(unsigned long long)type withDiagnosticReason:(id)reason;
- (void)removePassesOfType:(unsigned long long)type withDiagnosticReason:(id)reason completion:(id /* block */)completion;
- (unsigned long long)estimatedTimeToResetApplePay;
- (void)resetApplePayWithDiagnosticReason:(id)reason completion:(id /* block */)completion;
- (BOOL)resetApplePayWithDiagnosticReason:(id)reason;
- (void)shuffleGroups:(int)groups;
- (void)noteAppleAccountChanged:(id)changed;
- (void)noteACAccountChanged:(id)changed;
- (id)diffForPassUpdateUserNotificationWithIdentifier:(id)identifier;
- (BOOL)isIssuerAppProvisioningSupported;
- (void)catalogChanged:(id)changed withNewPasses:(id)passes;
- (void)catalogChanged:(id)changed withNewPasses:(id)passes states:(id)states;
- (void)passAdded:(id)added;
- (void)passUpdated:(id)updated;
- (void)passRecovered:(id)recovered;
- (void)passRemoved:(id)removed;
- (void)contactlessInterfaceDidPresentFromSource:(long long)source;
- (void)contactlessInterfaceDidDismissFromSource:(long long)source;
- (void)vehicleConnectionDidUpdateConnectionState:(long long)state;
- (void)vehicleConnectionDidRecievePassthroughData:(id)data;
- (void)issuerBindingAuthenticationOccured;
- (void)_postLibraryChangeWithUserInfo:(id)info;
- (id)_copyPassesWithRetries:(unsigned long long)retries;
- (id)_copyPassesOfType:(unsigned long long)type withRetries:(unsigned long long)retries;
- (id)_copyPassesOfStyles:(unsigned long long)styles withRetries:(unsigned long long)retries;
- (void)_getPassesAndCatalogOfPassTypes:(unsigned long long)types synchronously:(BOOL)synchronously limitResults:(BOOL)results withRetries:(unsigned long long)retries handler:(id /* block */)handler;
- (void)_getGroupsControllerSnapshotWithOptions:(id)options synchronously:(BOOL)synchronously retries:(unsigned long long)retries handler:(id /* block */)handler;
- (void)_applyDataAccessorToObjects:(id)objects;
- (void)recomputeRelevantPassesWithSearchMode:(long long)mode;
- (void)fetchHasCandidatePasses:(id /* block */)passes;
- (void)fetchCurrentRelevantPassInfo:(id /* block */)info;
- (void)_applyDataAccessorToObject:(id)object;
- (id)passesPendingActivation;
- (BOOL)_hasInterfaceOfType:(unsigned long long)type;
@end

#endif /* PKPassLibrary_h */
