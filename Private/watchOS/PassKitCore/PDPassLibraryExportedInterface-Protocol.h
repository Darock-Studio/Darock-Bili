//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PDPassLibraryExportedInterface_Protocol_h
#define PDPassLibraryExportedInterface_Protocol_h
@import Foundation;

@protocol PDPassLibraryExportedInterface <PDXPCServiceExportedInterface>
/* instance methods */
- (void)replacePassWithPassData:(id)data handler:(id /* block */)handler;
- (void)addPassesWithData:(id)data handler:(id /* block */)handler;
- (void)recoverPassWithUniqueID:(id)id handler:(id /* block */)handler;
- (void)removePassWithUniqueID:(id)id diagnosticReason:(id)reason handler:(id /* block */)handler;
- (void)removePassesWithUniqueIDs:(id)ids diagnosticReason:(id)reason handler:(id /* block */)handler;
- (void)getPassesAndCatalogOfPassTypes:(unsigned long long)types limitResults:(BOOL)results withHandler:(id /* block */)handler;
- (void)getGroupsControllerSnapshotWithOptions:(id)options handler:(id /* block */)handler;
- (void)sendUserEditedCatalog:(id)catalog;
- (void)getPassesWithHandler:(id /* block */)handler;
- (void)getPassesOfType:(unsigned long long)type handler:(id /* block */)handler;
- (void)getManifestHashAndSettingsForPassTypeID:(id)id serialNumber:(id)number handler:(id /* block */)handler;
- (void)getPassWithPassTypeID:(id)id serialNumber:(id)number handler:(id /* block */)handler;
- (void)getPassWithUniqueID:(id)id handler:(id /* block */)handler;
- (void)hasRemoteLibraryWithHandler:(id /* block */)handler;
- (void)usingSynchronousProxy:(BOOL)proxy setLiveRenderingEnabled:(BOOL)enabled forPassUniqueID:(id)id handler:(id /* block */)handler;
- (void)usingSynchronousProxy:(BOOL)proxy dynamicStateForPassUniqueID:(id)id handler:(id /* block */)handler;
- (void)getContentForUniqueID:(id)id handler:(id /* block */)handler;
- (void)getImageSetForUniqueID:(id)id ofType:(long long)type displayProfile:(id)profile suffix:(id)suffix handler:(id /* block */)handler;
- (void)getDataForBundleResourceNamed:(id)named withExtension:(id)extension objectUniqueIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)getArchivedObjectWithUniqueID:(id)id handler:(id /* block */)handler;
- (void)usingSynchronousProxy:(BOOL)proxy getEncryptedServiceProviderDataForUniqueID:(id)id completion:(id /* block */)completion;
- (void)usingSynchronousProxy:(BOOL)proxy getServiceProviderDataForUniqueID:(id)id completion:(id /* block */)completion;
- (void)isPaymentPassActivationAvailableWithHandler:(id /* block */)handler;
- (void)submitVerificationCode:(id)code verificationData:(id)data forPassWithUniqueID:(id)id handler:(id /* block */)handler;
- (void)hasPassesOfType:(unsigned long long)type handler:(id /* block */)handler;
- (void)canAddPassesOfType:(unsigned long long)type handler:(id /* block */)handler;
- (void)countPassesOfType:(unsigned long long)type handler:(id /* block */)handler;
- (void)defaultPaymentPassWithHandler:(id /* block */)handler;
- (void)canAddFelicaPassWithHandler:(id /* block */)handler;
- (void)expressTransitPassWithHandler:(id /* block */)handler;
- (void)sortedTransitPassesForAppletDataFormat:(id)format handler:(id /* block */)handler;
- (void)sortedTransitPassesForTransitNetworkIdentifiers:(id /* block */)identifiers;
- (void)paymentSetupFeaturesForConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)passWithFPANIdentifier:(id)fpanidentifier handler:(id /* block */)handler;
- (void)passWithDPANIdentifier:(id)dpanidentifier handler:(id /* block */)handler;
- (void)backupMetadataWithHandler:(id /* block */)handler;
- (void)setBackupMetadata:(id)metadata handler:(id /* block */)handler;
- (void)prepareForBackupRestoreWithExistingPreferencesData:(id)data handler:(id /* block */)handler;
- (void)prepareForBackupRestoreWithRequiredFileURLs:(id)urls destinationFileHandles:(id)handles handler:(id /* block */)handler;
- (void)migrateDataWithHandler:(id /* block */)handler didRestoreFromBackup:(BOOL)backup;
- (void)peerPaymentPassUniqueIDWithHandler:(id /* block */)handler;
- (void)supportsSearchForPassUniqueID:(id)id completion:(id /* block */)completion;
- (void)checkForTransitNotification;
- (void)postUpgradedPassNotificationForMarket:(id)market passUniqueID:(id)id;
- (void)usingSynchronousProxy:(BOOL)proxy postUpgradesAvailableNotificationForMarket:(id)market passUniqueID:(id)id;
- (void)usingSynchronousProxy:(BOOL)proxy passLocalizedStringForKey:(id)key uniqueID:(id)id completion:(id /* block */)completion;
- (void)usingSynchronousProxy:(BOOL)proxy getPassForProvisioningCredentialHash:(id)hash handler:(id /* block */)handler;
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)sendRKEPassThroughMessage:(id)message forSessionIdentifier:(id)identifier withCompletion:(id /* block */)completion;
- (void)invalidateVehicleConnectionSessionIdentifier:(id)identifier;
- (void)isIssuerAppProvisioningSupportedWithHandler:(id /* block */)handler;
- (void)usingSynchronousProxy:(BOOL)proxy canAddSecureElementPassWithConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)usingSynchronousProxy:(BOOL)proxy canAddCarKeyPassWithConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)usingSynchronousProxy:(BOOL)proxy meetsProvisioningRequirements:(id)requirements completion:(id /* block */)completion;
- (void)signData:(id)data forPassUniqueID:(id)id completion:(id /* block */)completion;
@end

#endif /* PDPassLibraryExportedInterface_Protocol_h */
