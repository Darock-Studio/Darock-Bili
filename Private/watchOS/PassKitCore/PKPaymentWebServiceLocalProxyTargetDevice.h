//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKPaymentWebServiceLocalProxyTargetDevice_h
#define PKPaymentWebServiceLocalProxyTargetDevice_h
@import Foundation;

#include "PKPaymentWebServiceArchiver-Protocol.h"
#include "PKPaymentWebServiceTargetDeviceProtocol-Protocol.h"

@class NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface PKPaymentWebServiceLocalProxyTargetDevice : NSObject<PKPaymentWebServiceTargetDeviceProtocol, PKPaymentWebServiceArchiver> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_handlerQueue;
}

@property (readonly, nonatomic) NSXPCConnection *connection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConnection:(id)connection;
- (void)dealloc;
- (void)_invalidateConnection;
- (id)_proxy;
- (id)_proxyWithErrorHandler:(id /* block */)handler;
- (id)_synchronousProxy;
- (id)_synchronousProxyWithErrorHandler:(id /* block */)handler;
- (id)context;
- (void)contextWithCompletion:(id /* block */)completion;
- (void)paymentWebServiceDidUpdateConfiguration:(id)configuration;
- (void)encryptedServiceProviderDataForSecureElementPass:(id)pass completion:(id /* block */)completion;
- (void)paymentWebService:(id)service queueConnectionToTrustedServiceManagerForPushTopic:(id)topic withCompletion:(id /* block */)completion;
- (void)paymentWebService:(id)service configurationDataWithCompletionHandler:(id /* block */)handler;
- (void)paymentWebService:(id)service registrationDataWithCompletionHandler:(id /* block */)handler;
- (void)paymentWebService:(id)service signData:(id)data signatureEntanglementMode:(unsigned long long)mode withCompletionHandler:(id /* block */)handler;
- (void)paymentWebService:(id)service provisioningDataIncludingDeviceMetadata:(BOOL)metadata withCompletionHandler:(id /* block */)handler;
- (void)paymentWebService:(id)service deleteApplicationWithAID:(id)aid;
- (void)deleteKeyMaterialForSubCredentialId:(id)id;
- (void)paymentWebService:(id)service didRegisterWithRegionMap:(id)map primaryRegionTopic:(id)topic;
- (id)paymentWebService:(id)service filterVerificationChannels:(id)channels;
- (void)renewAppleAccountWithCompletionHandler:(id /* block */)handler;
- (id)appleAccountInformation;
- (unsigned long long)paymentSupportedInCurrentRegionForWebService:(id)service;
- (unsigned long long)registrationSupportedInCurrentRegionForWebService:(id)service;
- (id)deviceDescriptionForPaymentWebService:(id)service;
- (id)deviceName;
- (id)deviceSerialNumber;
- (id)bridgedClientInfo;
- (id)deviceClass;
- (id)deviceVersion;
- (id)osVersion;
- (id)deviceRegion;
- (BOOL)supportsAutomaticPassPresentation;
- (void)noteProvisioningUserInterfaceDidAppear;
- (void)noteProvisioningUserInterfaceDidDisappear;
- (void)noteProvisioningDidBegin;
- (void)noteProvisioningDidEnd;
- (id)secureElementIdentifiers;
- (void)notePasscodeUpgradeFlowWillBeginWithCompletion:(id /* block */)completion;
- (void)notePasscodeUpgradeFlowDidEnd;
- (void)enforceUpgradedPasscodePolicyWithCompletion:(id /* block */)completion;
- (void)currentPasscodeMeetsUpgradedPasscodePolicy:(id /* block */)policy;
- (void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(BOOL)policy;
- (void)endRequiringUpgradedPasscodeIfNecessary;
- (void)paymentWebService:(id)service setNewAuthRandomIfNecessaryReturningPairingState:(id /* block */)state;
- (void)paymentWebService:(id)service setNewAuthRandom:(id /* block */)random;
- (BOOL)paymentWebService:(id)service hasPassesOfType:(unsigned long long)type;
- (id)paymentWebService:(id)service passesOfType:(unsigned long long)type;
- (BOOL)paymentWebService:(id)service canProvisionPaymentPassWithPrimaryAccountIdentifier:(id)identifier;
- (void)paymentWebService:(id)service validateAddPreconditionsWithCompletion:(id /* block */)completion;
- (void)paymentWebService:(id)service handlePotentialExpressPass:(id)pass withCompletionHandler:(id /* block */)handler;
- (void)paymentWebService:(id)service addPaymentPass:(id)pass withCompletionHandler:(id /* block */)handler;
- (void)downloadAllPaymentPassesForPaymentWebService:(id)service;
- (BOOL)claimSecureElementForCurrentUser;
- (void)claimSecureElementForCurrentUserWithCompletion:(id /* block */)completion;
- (unsigned long long)secureElementOwnershipStateForCurrentUser;
- (void)paymentWebService:(id)service validateTransferPreconditionsWithCompletion:(id /* block */)completion;
- (void)paymentWebService:(id)service addPaymentPass:(id)pass withCompletionHandlerV2:(id /* block */)v2;
- (void)paymentWebService:(id)service removePass:(id)pass withCompletionHandler:(id /* block */)handler;
- (BOOL)paymentWebServiceSupportsPeerPaymentRegistration:(id)registration;
- (BOOL)paymentWebServiceSupportsAccounts:(id)accounts;
- (id)supportedFeatureIdentifiersWithPaymentWebService:(id)service;
- (id)supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService:(id)service;
- (void)updatedAccountsForProvisioningWithCompletion:(id /* block */)completion;
- (void)triggerCloudStoreZoneCreationForAccount:(id)account withCompletion:(id /* block */)completion;
- (void)cachedFeatureApplicationsForProvisioningWithCompletion:(id /* block */)completion;
- (void)featureApplicationsForProvisioningWithCompletion:(id /* block */)completion;
- (void)paymentWebService:(id)service deviceMetadataWithFields:(unsigned long long)fields completion:(id /* block */)completion;
- (void)paymentWebService:(id)service updateAccountWithIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)applePayTrustKeyForIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)createApplePayTrustKeyWithRequest:(id)request completion:(id /* block */)completion;
- (void)deleteApplePayTrustKeyWithIdentifier:(id)identifier completion:(id /* block */)completion;
- (BOOL)supportsCheckingProvisioningRequirements;
- (void)meetsProvisioningRequirements:(id)requirements completion:(id /* block */)completion;
- (BOOL)meetsProvisioningRequirements:(id)requirements missingRequirements:(id *)requirements;
- (void)currentSecureElementSnapshot:(id /* block */)snapshot;
- (void)reserveStorageForAppletTypes:(id)types metadata:(id)metadata completion:(id /* block */)completion;
- (void)deleteReservation:(id)reservation completion:(id /* block */)completion;
- (unsigned long long)maximumPaymentCards;
- (id)allPaymentApplicationUsageSummaries;
- (void)addPendingProvisionings:(id)provisionings completion:(id /* block */)completion;
- (BOOL)secureElementIsAvailable;
- (BOOL)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)default;
- (void)paymentWebService:(id)service setDefaultPaymentPassUniqueIdentifier:(id)identifier;
- (void)paymentWebService:(id)service requestPassUpgrade:(id)upgrade pass:(id)pass completion:(id /* block */)completion;
- (void)performDeviceCheckInWithCompletion:(id /* block */)completion;
- (void)performDeviceRegistrationReturningContextForReason:(id)reason brokerURL:(id)url completion:(id /* block */)completion;
- (void)paymentWebService:(id)service storePassOwnershipToken:(id)token withIdentifier:(id)identifier;
- (void)paymentWebService:(id)service passOwnershipTokenWithIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)familyMembersWithCompletion:(id /* block */)completion;
- (void)paymentWebService:(id)service generateTransactionKeyWithParameters:(id)parameters withCompletion:(id /* block */)completion;
- (void)statusForShareableCredentials:(id)credentials completion:(id /* block */)completion;
- (void)prepareProvisioningTarget:(id)target checkFamilyCircle:(BOOL)circle completion:(id /* block */)completion;
- (void)provisionHomeKeyPassForSerialNumbers:(id)numbers completionHandler:(id /* block */)handler;
- (void)availableHomeKeyPassesWithCompletionHandler:(id /* block */)handler;
- (void)createFidoKeyForRelyingParty:(id)party relyingPartyAccountHash:(id)hash challenge:(id)challenge externalizedAuth:(id)auth completion:(id /* block */)completion;
- (void)checkFidoKeyPresenceForRelyingParty:(id)party relyingPartyAccountHash:(id)hash fidoKeyHash:(id)hash completion:(id /* block */)completion;
- (void)signWithFidoKeyForRelyingParty:(id)party relyingPartyAccountHash:(id)hash fidoKeyHash:(id)hash challenge:(id)challenge publicKeyIdentifier:(id)identifier externalizedAuth:(id)auth completion:(id /* block */)completion;
- (void)generateSEEncryptionCertificateForSubCredentialId:(id)id completion:(id /* block */)completion;
- (void)generateISOEncryptionCertificateForSubCredentialId:(id)id completion:(id /* block */)completion;
- (BOOL)areUnifiedAccessPassesSupported;
- (void)addISO18013Blobs:(id)blobs cardType:(long long)type completion:(id /* block */)completion;
- (void)longTermPrivacyKeyForCredentialGroupIdentifier:(id)identifier reuseExisting:(BOOL)existing completion:(id /* block */)completion;
- (void)archiveContext:(id)context;
- (void)archiveBackgroundContext:(id)context;
@end

#endif /* PKPaymentWebServiceLocalProxyTargetDevice_h */
