//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKDashboardTransactionFetcher_h
#define PKDashboardTransactionFetcher_h
@import Foundation;

#include "PKCreditInstallmentPlan.h"
#include "PKCurrencyAmount.h"
#include "PKMerchant.h"
#include "PKPaymentDataProvider-Protocol.h"
#include "PKPaymentDataProviderDelegate-Protocol.h"
#include "PKPaymentPass.h"
#include "PKTransactionSourceCollection.h"

@class NSArray, NSDate, NSDecimalNumber, NSDictionary, NSSet, NSString;
@protocol PKDashboardTransactionFetcherDelegate;

@interface PKDashboardTransactionFetcher : NSObject<PKPaymentDataProviderDelegate> {
  /* instance variables */
  PKTransactionSourceCollection *_transactionSourceCollection;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lockUpdate;
  BOOL _pendingUpdate;
  BOOL _hasMoreUpdates;
  PKMerchant *_merchant;
  long long _merchantCategory;
  long long _transactionType;
  PKCreditInstallmentPlan *_installmentPlan;
  NSArray *_regions;
  NSArray *_types;
  NSArray *_sources;
  NSArray *_statuses;
  PKCurrencyAmount *_amount;
  long long _amountComparison;
  NSSet *_tags;
  NSDecimalNumber *_rewardsValue;
  unsigned long long _rewardsValueUnit;
  long long _subType;
  NSSet *_filteredTransactionSourceIdentifiers;
  BOOL _filterDisputesOnly;
  NSString *_cashbackPassUniqueID;
  BOOL _needsCashbackUniqueID;
  unsigned long long _cashBackType;
  NSDictionary *_cashbackGroups;
  BOOL _needsInstantWithdrawalFees;
  NSArray *_instantWithdrawalFeeGroups;
}

@property (retain, nonatomic) PKTransactionSourceCollection *cashbackTransactionSourceCollection;
@property (weak, nonatomic) NSObject<PKDashboardTransactionFetcherDelegate> *delegate;
@property (readonly, nonatomic) unsigned long long type;
@property (readonly, nonatomic) unsigned long long limit;
@property (readonly, nonatomic) NSDate *startDate;
@property (readonly, nonatomic) NSDate *endDate;
@property (readonly, nonatomic) NSSet *counterpartHandles;
@property (nonatomic) BOOL allowSynchronousFetch;
@property (retain, nonatomic) PKPaymentPass *cashbackPass;
@property (readonly, nonatomic) NSObject<PKPaymentDataProvider> *paymentDataProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithTransactionSourceCollection:(id)collection paymentDataProvider:(id)provider;
- (id)initWithMerchant:(id)merchant transactionSourceCollection:(id)collection paymentDataProvider:(id)provider;
- (id)initWithCounterpartHandles:(id)handles transactionSourceCollection:(id)collection paymentDataProvider:(id)provider;
- (id)initWithMerchantCategory:(long long)category transactionSourceCollection:(id)collection paymentDataProvider:(id)provider;
- (id)initWithTransactionType:(long long)type transactionSourceCollection:(id)collection paymentDataProvider:(id)provider;
- (id)initWithInstallmentPlan:(id)plan transactionSourceCollection:(id)collection paymentDataProvider:(id)provider;
- (id)initWithRegions:(id)regions transactionSourceCollection:(id)collection paymentDataProvider:(id)provider;
- (void)_commonSetup;
- (void)setLimit:(unsigned long long)limit startDate:(id)date endDate:(id)date;
- (void)filterMerchant:(id)merchant;
- (void)filterCategory:(long long)category;
- (void)filterRegions:(id)regions;
- (void)filterTags:(id)tags;
- (void)filterTypes:(id)types;
- (void)filterSources:(id)sources;
- (void)filterStatuses:(id)statuses;
- (void)filterAmount:(id)amount comparison:(long long)comparison;
- (void)filterRewardsValue:(id)value unit:(unsigned long long)unit;
- (void)filterPeerPaymentSubType:(long long)type;
- (void)filterTransactionSourceIdentifiers:(id)identifiers;
- (void)filterDisputesOnly:(BOOL)only;
- (id)_transactionSourceIdentifiers;
- (void)reloadTransactionsWithCompletion:(id /* block */)completion;
- (id)_transactionRequestForCurrentFilters;
- (void)transactionCountByPeriod:(unsigned long long)period withCompletion:(id /* block */)completion;
- (void)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)identifier startDate:(id)date endDate:(id)date completion:(id /* block */)completion;
- (id)cashbackGroupForTransactionWithIdentifier:(id)identifier cashbackTransactionSourceCollection:(id *)collection;
- (id)cashbackGroupForDateComponents:(id)components cashbackTransactionSourceCollection:(id *)collection;
- (id)instantWithdrawalFeesTransactionGroups;
- (void)_addCashbackTransactions:(id)transactions currentMonthOnly:(BOOL)only completion:(id /* block */)completion;
- (void)_addInstantWidthdrawalTransactionsWithCompletion:(id /* block */)completion;
- (void)_processPaymentPassTransactionsWithTransactions:(id)transactions currentMonthOnly:(BOOL)only sendTransactionsBlock:(id /* block */)block;
- (id)_feeTotalForTransaction:(id)transaction;
- (id)_sortedTransactions:(id)transactions ascending:(BOOL)ascending limit:(unsigned long long)limit;
- (void)_sendUpdatedTransactions;
- (BOOL)_containsFrequentTransactionType:(id)type;
- (void)transactionSourceIdentifier:(id)identifier didReceiveTransaction:(id)transaction;
- (void)transactionSourceIdentifier:(id)identifier didRemoveTransactionWithIdentifier:(id)identifier;
- (void)didRemoveTransactionsWithSourceIdentifierMapping:(id)mapping;
- (void)paymentPassWithUniqueIdentifier:(id)identifier didEnableTransactionService:(BOOL)service;
@end

#endif /* PKDashboardTransactionFetcher_h */
