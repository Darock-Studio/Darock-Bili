//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKSharedPassSharesController_h
#define PKSharedPassSharesController_h
@import Foundation;

#include "PKContactResolver.h"
#include "PKPassShare.h"
#include "PKPaymentDataProvider-Protocol.h"
#include "PKPaymentDataProviderDelegate-Protocol.h"
#include "PKPaymentWebService.h"
#include "PKSecureElementPass.h"

@class BOOL *, NSArray, NSHashTable, NSString;
@protocol OS_dispatch_queue;

@interface PKSharedPassSharesController : NSObject<PKPaymentDataProviderDelegate> {
  /* instance variables */
  PKContactResolver *_contactResolver;
  PKPaymentWebService *_webService;
  NSObject<PKPaymentDataProvider> *_paymentServiceProvider;
  NSObject<OS_dispatch_queue> *_queue;
  BOOL _featureSupported;
  BOOL _isPerformingBatchOpperation;
  NSHashTable *_delegates;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _delegateLock;
}

@property (readonly, nonatomic) PKSecureElementPass *pass;
@property (readonly, nonatomic) NSArray *shares;
@property (readonly, nonatomic) NSArray *shareableEntitlements;
@property (readonly, nonatomic) NSArray *myEntitlements;
@property (readonly, nonatomic) NSArray *rootShares;
@property (readonly, nonatomic) NSArray *nonLocalShares;
@property (readonly, nonatomic) BOOL sharingEnabled;
@property (readonly, nonatomic) BOOL hasRevokableShares;
@property (readonly, nonatomic) unsigned long long maxEntitlementSelectionCount;
@property (readonly, nonatomic) BOOL canAllowResharing;
@property (readonly, nonatomic) PKPassShare *mostRecentlyCreatedShare;
@property (readonly, nonatomic) BOOL isCrossPlatformSharingEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithPass:(id)pass webService:(id)service paymentServiceProvider:(id)provider queue:(id)queue;
- (id)initWithPass:(id)pass contactResolver:(id)resolver webService:(id)service paymentServiceProvider:(id)provider queue:(id)queue;
- (void)dealloc;
- (void)addDelegate:(id)delegate;
- (void)removeDelegate:(id)delegate;
- (void)didUpdateShares;
- (id)contactForShare:(id)share;
- (void)fetchContactForShare:(id)share withCompletion:(id /* block */)completion;
- (id)_contactResolver;
- (id)senderShareForShare:(id)share;
- (void)updateSharesWithCompletion:(id /* block */)completion;
- (void)updateEntitlementsWithCompletion:(id /* block */)completion;
- (id)entitlementsForShare:(id)share;
- (id)childSharesOfShare:(id)share;
- (id)shareForShareIdentifier:(id)identifier;
- (void)canSendInvitationWithCompletion:(id /* block */)completion;
- (unsigned long long)_numberOfSharesPartnerDoesNotKnowAbout;
- (long long)_totalPendingShares;
- (long long)_totalPendingCredentialShares;
- (void)_immobilizerTokenCountWithCompletion:(id /* block */)completion;
- (void)revokeShare:(id)share shouldCascade:(BOOL)cascade withCompletion:(id /* block */)completion;
- (void)revokeAllSharesWithCompletion:(id /* block */)completion;
- (void)createShareWithPartialShare:(id)share authorization:(id)authorization completion:(id /* block */)completion;
- (void)updateShare:(id)share authorization:(id)authorization completion:(id /* block */)completion;
- (id)baseNewShareForPass;
- (void)addDefaultShareActivationOptionsToShare:(id)share availableOptions:(id *)options allowUserEdit:(BOOL *)edit channelBundleIdentifier:(id)identifier isRecipientKnownContact:(BOOL)contact;
- (id)shareInitiationActivationConfigurationForChannelBundleIdentifier:(id)identifier isRecipientKnownContact:(BOOL)contact;
- (void)prewarmCreateShare;
- (long long)_randomCodeOfLength:(long long)length;
- (id)blockedSharingChannels;
- (id)allowedSharingChannels;
- (BOOL)isSharingChannelBlockedForChannel:(id)channel isRecipientKnownContact:(BOOL)contact;
- (id)_feature;
- (id)_sharingActivationConfigurationForChannel:(id)channel channelRisk:(long long)risk;
- (void)sharesDidUpdateWithPaymentPassWithUniqueIdentifier:(id)identifier;
@end

#endif /* PKSharedPassSharesController_h */
