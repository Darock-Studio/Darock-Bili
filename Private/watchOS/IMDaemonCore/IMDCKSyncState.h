//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMDCKSyncState_h
#define IMDCKSyncState_h
@import Foundation;

#include "IMDCKSyncStateDelegate-Protocol.h"
#include "IMKeyValueCollectionDelegate-Protocol.h"
#include "SyncStateManaging-Protocol.h"

@class IMKeyValueCollection, NSArray, NSDate, NSDictionary, NSString;

@interface IMDCKSyncState : NSObject<SyncStateManaging, IMKeyValueCollectionDelegate> {
  /* instance variables */
  IMKeyValueCollection *_storage;
}

@property (@dynamic, nonatomic) unsigned long long syncControllerSyncState;
@property (@dynamic, nonatomic) unsigned long long syncStatus;
@property (@dynamic, nonatomic) long long syncControllerRecordType;
@property (@dynamic, nonatomic) BOOL syncing;
@property (@dynamic, nonatomic) BOOL startingPeriodicSyncSetByCloudKitHooks;
@property (@dynamic, nonatomic) BOOL startingInitialSyncSetByCloudKitHooks;
@property (readonly, nonatomic) IMKeyValueCollection *keyValueCollection;
@property (weak, nonatomic) NSObject<IMDCKSyncStateDelegate> *delegate;
@property (@dynamic, nonatomic) BOOL featureEnabled;
@property (@dynamic, nonatomic) BOOL createdChatZone;
@property (@dynamic, nonatomic) BOOL deletedZones;
@property (@dynamic, nonatomic) BOOL eligibleForTruthZone;
@property (@dynamic, nonatomic) BOOL syncingEnabled;
@property (@dynamic, nonatomic) BOOL removedFromBackup;
@property (@dynamic, nonatomic) BOOL inExitState;
@property (@dynamic, nonatomic) BOOL syncingPaused;
@property (copy, @dynamic, nonatomic) NSDate *exitDate;
@property (@dynamic, nonatomic) BOOL disablingDevices;
@property (@dynamic, nonatomic) BOOL startingEnabledSettingChange;
@property (copy, @dynamic, nonatomic) NSDictionary *analyticSyncDatesDictionary;
@property (copy, @dynamic, nonatomic) NSDate *lastSyncDate;
@property (copy, @dynamic, nonatomic) NSString *syncSessionID;
@property (copy, @dynamic, nonatomic) NSString *micDeviceIdentifier;
@property (@dynamic, nonatomic) long long accountStatus;
@property (readonly, nonatomic) NSArray *syncErrors;
@property (@dynamic, nonatomic) long long syncControllerSyncType;
@property (readonly, @dynamic, nonatomic) unsigned long long syncType;
@property (readonly, @dynamic, nonatomic) unsigned long long syncJobState;
@property (@dynamic, nonatomic) BOOL hasAvailableRecordsToDownload;
@property (@dynamic, nonatomic) double lastDownloadProgress;
@property (copy, nonatomic) NSDictionary *syncStatistics;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logHandle;
+ (void)removeBuildObjectsFromDict:(id)dict;

/* instance methods */
- (void)setSyncDate:(id)date forKey:(id)key shouldOverride:(BOOL)override;
- (void)setSyncPhaseType:(unsigned long long)type;
- (void)setSyncJobStateWithState:(unsigned long long)state;
- (void)setSyncStarted;
- (void)setSyncStopped;
- (void)setCloudKitSyncStatistics:(id)statistics;
- (void)setLastSyncDownloadProgress:(double)progress;
- (void)setCloudKitHasAvailableRecordsToDownload:(BOOL)download;
- (void)startChanges;
- (void)commitChanges;
- (void)sendBroadcastToClient;
- (void)deleteAllCloudKitData;
- (void)clearSyncStateForAllRecordTypes;
- (void)appendError:(id)error;
- (id)initWithKeyValueCollection:(id)collection;
- (id)init;
- (id)logHandle;
- (BOOL)isFeatureEnabled;
- (BOOL)isSyncing;
- (BOOL)isEligibleForTruthZone;
- (BOOL)isSyncingEnabled;
- (BOOL)isRemovedFromBackup;
- (BOOL)isInExitState;
- (BOOL)isSyncingPaused;
- (BOOL)isDisablingDevices;
- (BOOL)isStartingEnabledSettingChange;
- (BOOL)isStartingPeriodicSyncSetByCloudKitHooks;
- (BOOL)isStartingInitialSyncSetByCloudKitHooks;
- (void)setMiCDeviceIdentifier:(id)identifier;
- (void)clearSyncErrors;
- (void)addSyncError:(id)error;
- (void)_startBatchChange;
- (void)_finishBatchChange;
- (void)_setObject:(id)object forKey:(id)key forDictionary:(id)dictionary shouldSetBuild:(BOOL)build;
- (void)_removeObjectForKey:(id)key forDictionary:(id)dictionary;
- (void)removeObjectFromAnalyticSyncDatesDictionaryForKey:(id)key;
- (void)setAnalyticSyncDatesDictionaryObject:(id)object forKey:(id)key shouldOverrideIfExists:(BOOL)exists;
- (id)getAnalyticSyncDatesObjectForKey:(id)key;
- (id)describeErrors;
- (id)_describeErrors:(id)errors;
- (BOOL)_shouldReportNewUserIfCreatedChatZones:(BOOL)zones deletedZones:(BOOL)zones;
- (id)syncUserType;
- (id)syncReportDictionary;
- (id)describeRecordCounts;
- (id)syncReportDictionaryForAttempt:(unsigned long long)attempt withSuccess:(BOOL)success duration:(double)duration;
- (void)setSyncingFinished;
- (void)clearLocalCloudKitSyncState;
- (void)_setStartingSync;
- (void)updateSyncType:(unsigned long long)type;
- (void)updateSyncStatus:(unsigned long long)status;
- (void)updateSyncJobState:(unsigned long long)state;
- (void)updateLastDownloadProgress:(double)progress;
- (void)setStartingPeriodicSyncWithRecordType:(long long)type;
- (void)setStartingInitialSyncWithRecordType:(long long)type;
- (void)setSyncControllerSyncState:(unsigned long long)state withRecordType:(long long)type;
- (void)keyValueCollection:(id)collection willUpdateValues:(id)values;
- (void)keyValueCollection:(id)collection didUpdateValues:(id)values;
- (id)serializedRepresentation;
- (void)broadcastSyncState;
- (void)setErrorToAccountNeedsRepair;
- (void)setErrorToKeyRollingError;
@end

#endif /* IMDCKSyncState_h */
