//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMDChatStore_h
#define IMDChatStore_h
@import Foundation;

#include "IMDMessagePTaskStore-Protocol.h"
#include "IMStateLoggable-Protocol.h"
#include "RecordStoreDeleting-Protocol.h"
#include "RecordStoreProviding-Protocol.h"

@class IMStateCaptureAssistant, NSString;
@protocol IMDRemoteDatabaseProtocol;

@interface IMDChatStore : NSObject<IMStateLoggable, RecordStoreProviding, RecordStoreDeleting> {
  /* instance variables */
  NSString *_lastModificationStamp;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSString *modificationStamp;
@property (retain) NSObject<IMDMessagePTaskStore> *messagePTaskStore;
@property (retain, nonatomic) IMStateCaptureAssistant *stateCaptureAssistant;
@property (readonly, nonatomic) NSObject<IMDRemoteDatabaseProtocol> *database;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)batchOfRecordIDsToDeleteWithLimit:(long long)limit error:(id *)error;
- (void)clearTombstonesForRecordIDs:(id)ids;
- (id)syncTokenStore;
- (void)resetLocalSyncStateIfAppropriate;
- (void)clearLocalSyncState:(unsigned long long)state;
- (void)_markAllChatsAsNeedingSync;
- (BOOL)_shouldMarkAllChatsAsNeedingSync;
- (void)_hasMarkedAllChatsAsNeedingSync;
- (id)_lockRecord;
- (unsigned long long)_maxFetchChatAttempts;
- (id)batchOfRecordsToWriteWithLimit:(long long)limit error:(id *)error;
- (void)recordUpdateSucceededWithRecord:(id)record;
- (void)recordUpdateFailedWithID:(id)id localGUID:(id)guid error:(id)error;
- (id)_fetchChatRecordsToUploadWithLimit:(unsigned long long)limit;
- (id)_generateCKRecordsFromChatRecords:(id)records;
- (void)legacyImport:(id)import;
- (id)stateDictionaryForDiagnosticsRequest;
- (id)init;
- (void)_updateModificationDate;
- (void)archiveChat:(id)chat;
- (void)unarchiveChat:(id)chat;
- (void)blackholeChat:(id)chat;
- (void)unblackholeChat:(id)chat;
- (void)_addGroupPhotoToTransferCenterForChat:(id)chat;
- (void)_processIncomingChat:(id)chat;
- (id)loadAllChats;
- (id)loadRecentChats;
- (id)_loadChatsIncludingAllChats:(BOOL)chats;
- (BOOL)storeChat:(id)chat;
- (unsigned long long)unreadCountForChat:(id)chat;
- (id)_incomingChatWithChatRecord:(id)record;
- (id)_incomingChatsWithChatRecords:(id)records;
- (id)chatWithGUID:(id)guid;
- (id)chatsFilteredUsingPredicate:(id)predicate;
- (id)chatsFilteredUsingPredicate:(id)predicate sortedUsingDescriptors:(id)descriptors limit:(unsigned long long)limit;
- (id)chatsFilteredUsingPredicate:(id)predicate sortedUsingLastMessageDateAscending:(BOOL)ascending olderThan:(id)than limit:(unsigned long long)limit;
- (id)chatsWithIdentifier:(id)identifier;
- (id)chatsWithIdentifier:(id)identifier onService:(id)service;
- (id)chatsWithPinningIdentifier:(id)identifier;
- (id)chatsWithGroupID:(id)id;
- (id)chatsWithHandle:(id)handle onService:(id)service;
- (id)chatsWithHandles:(id)handles onService:(id)service displayName:(id)name groupID:(id)id style:(unsigned char)style;
- (id)chatsWithRoomname:(id)roomname onService:(id)service;
- (id)newestChatWithOriginalGroupID:(id)id onService:(id)service;
- (id)newestChatWithGroupID:(id)id onService:(id)service;
- (void)enumerateBatchedChatsFilteredUsingPredicate:(id)predicate block:(id /* block */)block;
- (void)enumerateBatchedChatsFilteredUsingPredicate:(id)predicate batchSize:(unsigned long long)size block:(id /* block */)block;
- (id)chatsGUIDsForMessageWithGUID:(id)guid;
- (id)chatIdentitiesForMessageWithGUIDs:(id)guids;
- (id)chatsGUIDsForMessageWithIdentifier:(long long)identifier;
- (void)addMessageWithGUID:(id)guid toChat:(id)chat;
- (void)addMessageWithGUID:(id)guid toChat:(id)chat deferSpotlightIndexing:(BOOL)indexing;
- (void)_performOrScheduleSpotlightIndexingOfAddedMessageWithGUID:(id)guid chat:(id)chat shouldDeferIndexing:(BOOL)indexing;
- (void)removeMessageWithGUID:(id)guid fromChat:(id)chat;
- (void)remapMessageError:(unsigned int)error toError:(unsigned int)error forChat:(id)chat completion:(id /* block */)completion;
- (void)deleteChat:(id)chat;
- (void)setChatIsFiltered:(long long)filtered withChatGuid:(id)guid;
- (id)_chatRegistry;
- (BOOL)updatePersonCentricIDForHandlesInChatWithMessage:(id)message fromIdentifier:(id)identifier personCentricID:(id)id chat:(id)chat;
- (BOOL)updateHandle:(id)handle sourceMessage:(id)message personCentricID:(id)id onService:(id)service;
- (void)_broadcastToForceReloadChats;
@end

#endif /* IMDChatStore_h */
