//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMDMessageStore_h
#define IMDMessageStore_h
@import Foundation;

#include "IMFocusStateManagerDelegate-Protocol.h"
#include "IMStateLoggable-Protocol.h"
#include "IMSystemMonitorListener-Protocol.h"
#include "RecordStoreDeleting-Protocol.h"
#include "RecordStoreProviding-Protocol.h"

@class BOOL *, IMStateCaptureAssistant, NSMutableDictionary, NSNumber, NSString, NSTimer;
@protocol OS_dispatch_queue;

@interface IMDMessageStore : NSObject<IMStateLoggable, RecordStoreProviding, RecordStoreDeleting, IMSystemMonitorListener, IMFocusStateManagerDelegate> {
  /* instance variables */
  NSNumber *_cachedUnreadMessageCount;
  NSNumber *_cachedLastFailedMessageDate;
  BOOL _suppressedUpdates;
  BOOL _pendingDBUpdatePost;
  NSTimer *_suppressedUpdatesTimer;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain) NSString *modificationStamp;
@property (retain, nonatomic) IMStateCaptureAssistant *stateCaptureAssistant;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *widgetKitQueue;
@property (nonatomic) long long lastNotifiedUnreadCount;
@property (retain, nonatomic) NSMutableDictionary *visitedChats;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (BOOL)_updateCacheForMessageGUID:(id)guid fromMessage:(id)message toMessage:(id)message updateLastMessage:(BOOL)message calculateUnreadCount:(BOOL)count;
+ (id)_missingMessageReadReceiptCache;
+ (void)databaseFull;
+ (void)databaseNoLongerFull;
+ (void)_displayDatabaseFullAlert;

/* instance methods */
- (id)batchOfRecordIDsToDeleteWithLimit:(long long)limit error:(id *)error;
- (void)clearTombstonesForRecordIDs:(id)ids;
- (id)syncTokenStore;
- (void)resetLocalSyncStateIfAppropriate;
- (void)clearLocalSyncState:(unsigned long long)state;
- (void)_needsToMarkAllMessagesAsNeedingSync;
- (BOOL)_shouldMarkAllMessagesAsNeedingSync;
- (void)_hasMarkedAllMessagesAsNeedingSync;
- (id)batchOfRecordsToWriteWithLimit:(long long)limit error:(id *)error;
- (void)recordUpdateSucceededWithRecord:(id)record;
- (void)recordUpdateFailedWithID:(id)id localGUID:(id)guid error:(id)error;
- (BOOL)_checkIfRecord:(id)record hasBadChatIDForMessageGUID:(id)guid;
- (void)_resetSyncStateForMessageWithGUID:(id)guid toState:(long long)state;
- (void)legacyImport:(id)import;
- (id)stateDictionaryForDiagnosticsRequest;
- (id)_logAllUnreadMessages;
- (id)init;
- (void)performInitialHousekeeping;
- (void)dealloc;
- (id)_chatRegistrySharedInstance;
- (void)focusStateDidChange;
- (void)_updateModificationDate;
- (void)_performBlock:(id /* block */)block afterDelay:(double)delay;
- (void)_storeAttachmentsForMessage:(id)message;
- (void)updateFileTransfer:(id)transfer;
- (id)storeItem:(id)item forceReplace:(BOOL)replace;
- (id)updateSyndicatedMessageWithSyndicationMessageAction:(id)action;
- (id)updateSyndicatedMessageWithMessageGUID:(id)guid newRange:(id)range;
- (BOOL)updateSyndicatedMessageWithMessageItem:(id)item newRange:(id)range;
- (id)storeMessage:(id)message forceReplace:(BOOL)replace modifyError:(BOOL)error modifyFlags:(BOOL)flags flagMask:(unsigned long long)mask;
- (id)storeMessage:(id)message forceReplace:(BOOL)replace modifyError:(BOOL)error modifyFlags:(BOOL)flags flagMask:(unsigned long long)mask updateMessageCache:(BOOL)cache calculateUnreadCount:(BOOL)count;
- (id)storeMessage:(id)message forceReplace:(BOOL)replace modifyError:(BOOL)error modifyFlags:(BOOL)flags flagMask:(unsigned long long)mask updateMessageCache:(BOOL)cache calculateUnreadCount:(BOOL)count reindexMessage:(BOOL)message;
- (id)storeMessage:(id)message forceReplace:(BOOL)replace modifyError:(BOOL)error modifyFlags:(BOOL)flags flagMask:(unsigned long long)mask updateMessageCache:(BOOL)cache calculateUnreadCount:(BOOL)count reindexMessage:(BOOL)message force:(BOOL)force;
- (void)updateUnformattedID:(id)id forBuddyID:(id)id onService:(id)service;
- (id)_itemsForMessageRecords:(id)records handleID:(id)id useAttachmentCache:(BOOL)cache shouldLoadAttachments:(BOOL)attachments reverseOrder:(BOOL)order;
- (id)_messageItemsForMessageRecords:(id)records handleID:(id)id useAttachmentCache:(BOOL)cache shouldLoadAttachments:(BOOL)attachments reverseOrder:(BOOL)order;
- (BOOL)_hasMessagesWithGUIDs:(id)guids;
- (id)_itemsWithAssociatedGUID:(id)guid shouldLoadAttachments:(BOOL)attachments;
- (id)_itemsWithGUIDs:(id)guids;
- (id)_itemsWithHandles:(id)handles onServices:(id)services messageGUID:(id)guid threadIdentifier:(id)identifier limit:(unsigned long long)limit onlyMessages:(BOOL)messages;
- (id)_itemsWithRoomNames:(id)names onServices:(id)services messageGUID:(id)guid threadIdentifier:(id)identifier limit:(unsigned long long)limit onlyMessages:(BOOL)messages;
- (id)_itemsWithHandlesBeforeAndAfterGUID:(id)guid handles:(id)handles onServices:(id)services numberOfMessagesBefore:(unsigned long long)before numberOfMessagesAfter:(unsigned long long)after threadIdentifier:(id)identifier hasMessagesBefore:(BOOL *)before hasMessagesAfter:(BOOL *)after;
- (id)_unreadMessagesWithHandles:(id)handles onServices:(id)services limit:(unsigned long long)limit fallbackGUID:(id)guid;
- (id)_unreadMessagesWithRoomNames:(id)names onServices:(id)services limit:(unsigned long long)limit fallbackGUID:(id)guid;
- (void)registerTransfersWithGUIDs:(id)guids forMessageGUID:(id)guid;
- (id)_fileTransferCenter;
- (id)messagesWithAssociatedGUID:(id)guid;
- (id)messagesWithAssociatedGUID:(id)guid shouldLoadAttachments:(BOOL)attachments;
- (id)messagesWithGUIDs:(id)guids;
- (BOOL)canStoreItem:(id)item onService:(id)service;
- (BOOL)canStoreMessage:(id)message onService:(id)service;
- (BOOL)hasStoredMessageWithGUID:(id)guid;
- (id)itemWithGUID:(id)guid;
- (id)messageWithGUID:(id)guid;
- (id)messageWithGUID:(id)guid registerAttachments:(BOOL)attachments;
- (id)existingMessageSimilarToMessage:(id)message skipServices:(id)services skipGUIDs:(id)guids withinTimeInterval:(double)interval participants:(id)participants;
- (id)existingSOSMessageSimilarToMessage:(id)message matchingService:(id)service withinTimeInterval:(double)interval;
- (void)markMessageAsDeduplicated:(id)deduplicated;
- (BOOL)wasMessageDeduplicatedWithGUID:(id)guid;
- (id)messageWithReplaceMessageID:(int)id fromHandle:(id)handle onService:(id)service;
- (id)itemsWithHandles:(id)handles onServices:(id)services limit:(unsigned long long)limit;
- (id)itemsWithHandles:(id)handles onServices:(id)services messageGUID:(id)guid limit:(unsigned long long)limit;
- (id)itemsWithHandles:(id)handles onServices:(id)services messageGUID:(id)guid threadIdentifier:(id)identifier limit:(unsigned long long)limit;
- (id)itemsWithRoomNames:(id)names onServices:(id)services limit:(unsigned long long)limit;
- (id)itemsWithRoomNames:(id)names onServices:(id)services messageGUID:(id)guid limit:(unsigned long long)limit;
- (id)itemsWithRoomNames:(id)names onServices:(id)services messageGUID:(id)guid threadIdentifier:(id)identifier limit:(unsigned long long)limit;
- (id)itemsWithHandles:(id)handles onServices:(id)services messageGUID:(id)guid numberOfMessagesBefore:(unsigned long long)before numberOfMessagesAfter:(unsigned long long)after threadIdentifier:(id)identifier hasMessagesBefore:(BOOL *)before hasMessagesAfter:(BOOL *)after;
- (id)lastMessageWithHandles:(id)handles onServices:(id)services;
- (id)unreadMessagesWithHandles:(id)handles onServices:(id)services limit:(unsigned long long)limit fallbackGUID:(id)guid;
- (id)unreadMessagesWithRoomNames:(id)names onServices:(id)services limit:(unsigned long long)limit fallbackGUID:(id)guid;
- (id)lastMessageWithRoomNames:(id)names onServices:(id)services;
- (id)messagesInChat:(id)chat earliestDate:(id)date limit:(unsigned long long)limit;
- (id)lastMessageForChatWithRowID:(long long)id;
- (id)lastTUConversationItemForChat:(id)chat;
- (id)attachmentsWithHandles:(id)handles onServices:(id)services;
- (id)attachmentsWithRoomNames:(id)names onServices:(id)services;
- (id)messageActionItemsForOriginalMessageGUID:(id)guid;
- (id)frequentRepliesForForChatIdentifiers:(id)identifiers onServices:(id)services limit:(unsigned long long)limit;
- (id)messagesWithReplyToGUID:(id)guid;
- (void)addMissingMessageReadReceipt:(id)receipt;
- (BOOL)popReadReceiptForMissingGUID:(id)guid;
- (id)chatForMessage:(id)message;
- (id)chatForMessageGUID:(id)guid;
- (id)chatForMessageGUID:(id)guid enableVerboseLogging:(BOOL)logging;
- (id)chatsForMessage:(id)message;
- (id)chatsForMessageGUID:(id)guid;
- (id)_chatsForMessageGUID:(id)guid enableVerboseLogging:(BOOL)logging;
- (id)chatForMessageIdentifier:(long long)identifier;
- (id)existingChatForMessageGUID:(id)guid;
- (id)_chatsForMessageIdentifier:(long long)identifier;
- (struct _IMDHandleRecordStruct { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; long long x1; struct __CFArray * x2; } *)_copyHandle:(id)handle onService:(id)service;
- (BOOL)_isValidPhoneNumber:(id)number forCountryCode:(id)code;
- (id)cleanUnformattedPhoneNumber:(id)number countryCode:(id)code;
- (id)updatedMessagesForMessages:(id)messages;
- (id)_cleanupPhoneNumber:(id)number;
- (void)resolveUnformattedRepresentationsForHandles:(id)handles onService:(id)service message:(id)message completionBlock:(id /* block */)block;
- (id)deleteMessageGUIDs:(id)guids inChat:(id)chat;
- (id)deleteMessageGUIDs:(id)guids;
- (void)_deleteMessagesWithGUIDs:(id)guids chatIdentifiers:(id)identifiers style:(unsigned char)style onServices:(id)services batchNumber:(unsigned long long)number completion:(id /* block */)completion;
- (id)deleteMessagesWithChatIdentifiers:(id)identifiers style:(unsigned char)style onServices:(id)services completion:(id /* block */)completion;
- (id)deleteMessagesWithChatIdentifiers:(id)identifiers style:(unsigned char)style onServices:(id)services;
- (id)deleteMessagesWithReplaceMessageID:(int)id fromHandle:(id)handle onService:(id)service;
- (void)signalUnreadChangeForHandle:(id)handle;
- (BOOL)markMessageGUIDUnread:(id)guidunread;
- (id)markMessagesAsReadWithIdentifiers:(id)identifiers onServices:(id)services chatStyle:(unsigned char)style upToGUID:(id)guid readDate:(id)date fromMe:(BOOL)me;
- (id)markMessagesAsReadWithChatGUIDs:(id)guids upToGUID:(id)guid readDate:(id)date fromMe:(BOOL)me;
- (void)deleteMessageFromSpotlightWithGUID:(id)guid;
- (long long)lastFailedMessageDate;
- (long long)unreadMessagesCount;
- (long long)_calculateUnreadMessagesCountFilteredByFocus:(BOOL)focus filteredByAssistiveAccess:(BOOL)access;
- (id)_handleStringsForChat:(id)chat;
- (id)_handleIDsForChat:(id)chat;
- (void)cleanseAttachments;
- (BOOL)isAttachmentReferencedByMessage:(id)message;
- (BOOL)isSuppressDatabaseUpdates;
- (void)_suppressDBUpdateTimerFired;
- (void)setSuppressDatabaseUpdates:(BOOL)updates;
- (void)retractPostedNotificationsForMessageGUIDs:(id)guids;
- (void)retractPostedNotificationsForMessagesMatchingChatGUIDs:(id)guids;
- (void)postUrgentNotificationsForMessageGUIDs:(id)guids;
- (void)updatePostedNotificationsForMessageGUIDs:(id)guids;
- (void)__postDBUpdate;
- (void)_postDBUpdate;
- (void)updateStamp;
- (void)databaseChatSpamUpdated:(id)updated;
- (id)notificationContext;
- (BOOL)_shouldUseBadgeUtilities;
- (void)rebuildLastFailedMessageDate;
- (void)rebuildUnreadMessageCount;
- (void)postCountChanges;
- (void)_notifyWidgetKitTimeline:(long long)timeline;
- (id)replaceMessageAcknowledgmentsWithNewMessageAcknowledgment:(id)acknowledgment associatedMessageGUID:(id)guid sender:(id)sender;
- (id)_fileTransferGUIDsInMessageBody:(id)body;
- (id)storeEditedMessage:(id)message editedPartIndex:(long long)index editType:(unsigned long long)type previousMessage:(id)message chat:(id)chat updatedAssociatedMessageItems:(id *)items;
- (id)_updateAssociatedMessageItemsFromMessage:(id)message toMessage:(id)message;
- (id)storeRepositionedStickerWithMetadata:(id)metadata fileTransferGUID:(id)guid repositioningFromLocalChange:(BOOL)change;
- (id)storeRepositionedStickerLocally:(id)locally;
- (void)loadConsumedSessionPayloadsForItems:(id)items;
- (BOOL)_itemClassShouldUpdateTransferForItem:(id)item;
- (id)messagesThatNeedSyncWithCloudKitWithLimit:(long long)limit;
- (id)_messagesThatNeedSyncWithCloudKitWithLimit:(long long)limit attemptCount:(unsigned long long)count;
- (id)messagesPendingUpdateT1ToCloudKitWithLimit:(long long)limit;
- (id)_messagesPendingUpdateT1ToCloudKitWithLimit:(long long)limit attemptCount:(unsigned long long)count;
- (id)messagesPendingUpdateT2ToCloudKitWithLimit:(long long)limit;
- (id)_messagesPendingUpdateT2ToCloudKitWithLimit:(long long)limit attemptCount:(unsigned long long)count;
- (id)messagesPendingUpdateT3ToCloudKitWithLimit:(long long)limit;
- (id)_messagesPendingUpdateT3ToCloudKitWithLimit:(long long)limit attemptCount:(unsigned long long)count;
- (void)markAllMessagesAsNeedingCloudKitSync;
- (id)copyMessagesThatNeedToBeDeletedInCloudKitWithLimit:(unsigned long long)limit;
- (void)deleteMessagesFromTombStoneTableWithRecordIDs:(id)ids;
- (void)clearMessagesTombStoneTable;
- (void)markMessageAsCleanWithROWID:(long long)rowid;
- (void)markMessageAsIgnoreButNeedingSyncWithROWID:(long long)rowid;
- (long long)lastSyncedMessageRowID;
@end

#endif /* IMDMessageStore_h */
