//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMDCKMessageSyncController_h
#define IMDCKMessageSyncController_h
@import Foundation;

#include "IMDCKAbstractSyncController.h"
#include "IMDCKMessageSyncCKOperationFactory.h"
#include "IMDRecordZoneManager.h"
#include "SyncTokenStoreProviding-Protocol.h"

@class CKServerChangeToken, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface IMDCKMessageSyncController : IMDCKAbstractSyncController

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *ckQueue;
@property (retain, nonatomic) IMDRecordZoneManager *recordZoneManager;
@property (retain, nonatomic) NSObject<SyncTokenStoreProviding> *syncTokenStore;
@property (retain, nonatomic) CKServerChangeToken *latestSyncToken;
@property (retain, nonatomic) IMDCKMessageSyncCKOperationFactory *CKOperationFactory;
@property (retain, nonatomic) CKServerChangeToken *archivedRecordSyncToken;
@property (nonatomic) unsigned long long deviceConditionsToCheck;
@property (retain, nonatomic) NSMutableDictionary *visitedChats;
@property (nonatomic) BOOL encounteredIncompatibleMessage;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)initWithSyncTokenStore:(id)store;
- (id)init;
- (id)_chatRegistry;
- (long long)syncControllerRecordType;
- (id)_messageZoneID;
- (id)_recordKeyManagerSharedInstance;
- (id)_messageRecordSalt;
- (unsigned long long)_numberOfMessagesToUpload;
- (unsigned long long)_numberOfRecordsToFetchForSyncType:(long long)type;
- (unsigned long long)_messageDeleteBatchSize;
- (long long)_numberOfBatchesOfMessagesToFetchInInitialSync;
- (BOOL)_isValidCKRecordToSync:(id)sync;
- (id)_recordsToSaveWithAttemptCount:(unsigned long long)count;
- (id)_recordsToSave;
- (BOOL)_messageZoneCreated;
- (void)_scheduleOperation:(id)operation;
- (void)_processRecordWriteCompletionForRecord:(id)record NSError:(id)nserror;
- (id)_ckUtilitiesInstance;
- (id)_operationErrorForModifyingRecordCompletion:(id)completion;
- (void)_processModifyRecordsCompletion:(id)completion deletedRecordIDs:(id)ids operationError:(id)error isLastBatchOfWrite:(BOOL)write activity:(id)activity writeCompletionBlock:(id /* block */)block;
- (id)_syncOperationGroupName;
- (void)_writeDirtyMessagesToCloudKitWithActivity:(id)activity completion:(id /* block */)completion;
- (void)_processRecordChange:(id)change;
- (void)_updateDeviceConditionsToCheckIfNeededForCurrentBatchCount:(long long)count maxBatchCount:(long long)count;
- (BOOL)_deviceConditionsAllowsMessageSyncForCurrentBatchCount:(long long)count maxBatchCount:(long long)count activity:(id)activity;
- (BOOL)_shouldDeferCoreDuetMessagesSyncWithActivity:(id)activity;
- (BOOL)_isCoreDuetSyncForMaxBatchCount:(long long)count activity:(id)activity;
- (BOOL)_deviceConditionsAllowsMessageSyncForActivity:(id)activity deviceConditionsToCheck:(unsigned long long)check currentBatchCount:(long long)count maxBatchCount:(long long)count;
- (void)_migrateSyncTokens;
- (void)_resetArvchivedRecordSyncToken;
- (id)_changeTokenKey;
- (void)_resetSyncToken;
- (void)_processArchivedRecordsFetchCompletionZoneID:(id)id serverChangeToken:(id)token moreComing:(BOOL)coming currentBatchCount:(long long)count maxNumberOfBatches:(long long)batches activity:(id)activity error:(id)error completionBlock:(id /* block */)block;
- (void)_fetchArchivedRecordsIfNeeded:(BOOL)needed currentBatchCount:(long long)count maxNumberOfBatches:(long long)batches activity:(id)activity withCompletionBlock:(id /* block */)block;
- (void)_processFetchArchivedRecordCompletionWithError:(id)error WithCompletionBlock:(id /* block */)block;
- (void)_processRecordZoneFetchCompletionZoneID:(id)id serverChangeToken:(id)token clientChangeTokenData:(id)data moreComing:(BOOL)coming NSError:(id)nserror syncType:(long long)type currentBatchCount:(long long)count maxNumberOfBatches:(long long)batches shouldFetchArchivedRecords:(BOOL)records activity:(id)activity completionBlock:(id /* block */)block;
- (void)_processFetchRecordZoneChangesCompletionWithError:(id)error completionBlock:(id /* block */)block;
- (BOOL)_shouldFetchArchivedRecords:(id)records;
- (BOOL)_doesAnyRecordZoneIDHavePendingArchivedRecords:(long long)records;
- (BOOL)_isDiskSpaceAvailableForSyncType:(long long)type currentBatchCount:(long long)count;
- (void)_fetchMessageZoneChangesSyncType:(long long)type currentBatchCount:(long long)count maxNumberOfBatches:(long long)batches activity:(id)activity completionBlock:(id /* block */)block;
- (void)_noteSyncEnded;
- (void)_markAllIncompatibleMessagesForDeletion;
- (void)_needsToMarkAllMessagesAsNeedingSync;
- (BOOL)_shouldMarkAllMessagesAsNeedingSync;
- (void)_hasMarkedAllMessagesAsNeedingSync;
- (void)_markAllUnsuccessFullSyncMessagesAsNeedingSync;
- (void)_kickOffWriteOnCKQueueWithActivity:(id)activity completion:(id /* block */)completion;
- (BOOL)_kickOffWriteIfNeededForSyncType:(long long)type activity:(id)activity completion:(id /* block */)completion;
- (void)syncMessagesWithSyncType:(long long)type deviceConditionsToCheck:(unsigned long long)check activity:(id)activity completionBlock:(id /* block */)block;
- (void)deleteMessageSyncToken;
- (void)deleteMessagesZone;
- (void)clearLocalSyncState:(unsigned long long)state;
- (void)_processRecordDeletionCompletion:(id)completion error:(id)error completionBlock:(id /* block */)block;
- (void)_deleteMessagesWithRecordIDs:(id)ids completion:(id /* block */)completion;
- (id)_sharedIMDMessageStore;
- (id)_constructMessageRecordIDUsingTombStoneDictionary:(id)dictionary;
- (id)_copyRecordIDsToDeleteWithLimit:(unsigned long long)limit;
- (void)syncDeletedMessagesToCloudKitWithCompletion:(id /* block */)completion;
- (void)incompatibleMessageDeleteDetected:(id)detected;
@end

#endif /* IMDCKMessageSyncController_h */
