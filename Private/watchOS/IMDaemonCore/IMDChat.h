//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMDChat_h
#define IMDChat_h
@import Foundation;

#include "IMDAccount.h"
#include "IMDService.h"
#include "IMDServiceSession.h"
#include "IMDaemonListenerChatProtocol-Protocol.h"
#include "INSpeakable-Protocol.h"

@class IMMessageItem, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSRecursiveLock, NSString;

@interface IMDChat : NSObject<INSpeakable> {
  /* instance variables */
  NSRecursiveLock *_lock;
  NSMutableDictionary *_chatInfo;
}

@property (readonly, nonatomic) NSString *spokenPhrase;
@property (readonly, nonatomic) NSString *pronunciationHint;
@property (readonly, nonatomic) NSString *vocabularyIdentifier;
@property (readonly, nonatomic) NSArray *alternativeSpeakableMatches;
@property (readonly, nonatomic) NSString *identifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSObject<IMDaemonListenerChatProtocol> *broadcaster;
@property (copy) NSString *guid;
@property unsigned char style;
@property (copy) NSString *groupID;
@property (copy) NSString *engramID;
@property (copy) NSString *roomName;
@property (copy) NSString *displayName;
@property (retain) IMMessageItem *lastMessage;
@property (retain) NSDictionary *properties;
@property (copy) NSString *accountID;
@property unsigned long long unreadCount;
@property long long rowID;
@property (copy) NSArray *participants;
@property long long isFiltered;
@property BOOL isBlackholed;
@property BOOL recovered;
@property BOOL deletingIncomingMessages;
@property BOOL hasHadSuccessfulQuery;
@property (readonly, nonatomic) BOOL isUnnamedChat;
@property unsigned long long numMessagesSent;
@property BOOL meCardUpdated;
@property (readonly, copy) NSDictionary *keyTransparencyURIToUUIDMapping;
@property (copy, nonatomic) NSString *serverChangeToken;
@property long long lastMessageTimeStampOnLoad;
@property unsigned long long repairHistory;
@property (copy) NSString *chatIdentifier;
@property (copy) NSString *serviceName;
@property (readonly, nonatomic) NSString *persistentID;
@property (readonly, nonatomic) NSString *deviceIndependentID;
@property (readonly, nonatomic) NSString *pinningIdentifier;
@property long long state;
@property (copy) NSString *cloudKitRecordID;
@property long long cloudKitSyncState;
@property (readonly, copy) NSString *originalGroupID;
@property (nonatomic) long long lastReadMessageTimeStamp;
@property (readonly, copy) NSString *lastSeenMessageGuid;
@property (retain, nonatomic) NSDate *lastTUConversationCreatedDate;
@property (readonly, retain) IMDServiceSession *serviceSession;
@property (readonly, retain) IMDAccount *account;
@property (readonly, retain) IMDService *service;
@property (retain, nonatomic) NSArray *replySuggestions;
@property (copy) NSString *lastAddressedLocalHandle;
@property (copy) NSString *lastAddressedSIMID;
@property (readonly, retain) NSDictionary *dictionaryRepresentation;
@property (readonly, retain) NSDictionary *chatProperties;
@property (readonly) BOOL isArchived;
@property (readonly) BOOL isRecovered;
@property (readonly) BOOL isDeletingIncomingMessages;
@property (retain, nonatomic) NSDate *lastReplicationSinceLoadDate;
@property BOOL createEngramGroupOnMessageSend;
@property BOOL pendingENGroupParticipantUpdate;
@property (readonly, nonatomic) NSString *personCentricID;
@property (readonly, nonatomic) NSDictionary *nicknamesForParticipants;
@property BOOL wasReportedAsJunk;
@property (readonly, nonatomic) long long autoDonationBehavior;
@property (readonly, nonatomic) NSDate *autoDonationBehaviorLastModificationDate;
@property (nonatomic) BOOL oscarChat;

/* class methods */
+ (id)_recordType;
+ (id)chatWithSyncData:(id)data;
+ (BOOL)identifier:(id)identifier equalsIdentifier:(id)identifier;

/* instance methods */
- (id)_copyCKRecordFromExistingCKMetadataWithZoneID:(id)id salt:(id)salt;
- (BOOL)_addGroupPhotoToCKRecord:(id)ckrecord error:(id *)error;
- (id)copyCKRecordRepresentationWithZoneID:(id)id salt:(id)salt error:(id *)error;
- (BOOL)applyChangesUsingSyncData:(id)data;
- (id)recordName;
- (id)compressedProtobufDataForChatProto1;
- (BOOL)updateDonationStateWithSyndicationAction:(id)action;
- (void)_repairChatIfNeeded;
- (void)_repairGUIDIfNeeded;
- (id)_expectedGUID;
- (BOOL)_otherChatExistsWithChatGUID:(id)guid;
- (void)_resetGUIDToExpectedGUID:(id)guid;
- (void)_repairParticipantForChatIDHandleIDMismatch;
- (void)_updateRepairHistoryWithRepairHistory:(unsigned long long)history;
- (unsigned long long)powerLogConversationType;
- (id)initWithAccountID:(id)id service:(id)service guid:(id)guid groupID:(id)id chatIdentifier:(id)identifier participants:(id)participants roomName:(id)name displayName:(id)name lastAddressedLocalHandle:(id)handle lastAddressedSIMID:(id)simid properties:(id)properties state:(long long)state style:(unsigned char)style isFiltered:(long long)filtered hasHadSuccessfulQuery:(BOOL)query engramID:(id)id serverChangeToken:(id)token cloudKitSyncState:(long long)state originalGroupID:(id)id lastReadMessageTimeStamp:(long long)stamp lastMessageTimeStampOnLoad:(long long)load cloudKitRecordID:(id)id isBlackholed:(BOOL)blackholed autoDonationBehavior:(long long)behavior autoDonationBehaviorLastModificationDate:(id)date isRecovered:(BOOL)recovered isDeletingIncomingMessages:(BOOL)messages;
- (void)dealloc;
- (void)_setAutoDonationBehavior:(long long)behavior lastModificationDate:(id)date setDirtyFlag:(BOOL)flag;
- (BOOL)setAutoDonationBehavior:(long long)behavior lastModificationDate:(id)date;
- (void)_setUnreadCount:(unsigned long long)count;
- (void)_setRowID:(long long)id;
- (void)_updateCachedParticipants;
- (id)participantHandles;
- (void)addParticipants:(id)participants;
- (void)addParticipant:(id)participant;
- (BOOL)removeParticipants:(id)participants;
- (BOOL)removeParticipant:(id)participant;
- (void)resetParticipants:(id)participants;
- (void)recoverParticipantsIfNeeded;
- (long long)engroupCreationDate;
- (BOOL)isGroupChat;
- (BOOL)isSMS;
- (id)_sortedParticipantIDHashForParticipants:(id)participants;
- (id)_sortedParticipantIDHashForParticipants:(id)participants usesPersonCentricID:(BOOL)id;
- (BOOL)isOlderThan:(id)than;
- (BOOL)isNewerThan:(id)than;
- (long long)compareBySequenceNumberAndDateDescending:(id)descending;
- (id)dictionaryRepresentationIncludingLastMessage;
- (id)copyDictionaryRepresentation:(BOOL)representation;
- (void)_updateLastMessage:(id)message;
- (BOOL)updateProperties:(id)properties;
- (void)storeAndBroadcastChatChanges;
- (id)generateNewGroupID;
- (void)updateGroupID:(id)id;
- (void)updateEngramID:(id)id;
- (void)updateEngroupCreationDate:(long long)date;
- (void)updateLastReadMessageTimeStampIfNeeded:(long long)needed;
- (void)updateServerChangeToken:(id)token;
- (void)updateCloudKitSyncState:(long long)state;
- (void)updateOriginalGroupID:(id)id;
- (void)updateCloudKitRecordID:(id)id;
- (void)resetCKSyncState;
- (void)updateLastAddressedHandle:(id)handle;
- (void)updateLastAddressedHandle:(id)handle forceUpdate:(BOOL)update;
- (void)updateLastAddressedSIMID:(id)simid;
- (void)updateDisplayName:(id)name;
- (void)updateDisplayName:(id)name sender:(id)sender;
- (void)updateIsFiltered:(long long)filtered;
- (void)_indexChatAndMessagesToSpotlight;
- (void)updateIsBlackholed:(BOOL)blackholed;
- (void)_updateIsRecovered:(BOOL)recovered silently:(BOOL)silently;
- (void)updateIsDeletingIncomingMessages:(BOOL)messages;
- (void)updateIsRecovered:(BOOL)recovered;
- (void)updateNumberOfTimesRespondedToThread;
- (void)updateIsiMessageSpam:(BOOL)spam;
- (void)updateSMSCategory:(long long)smscategory subCategory:(long long)category;
- (void)updateShouldForceToSMS:(BOOL)sms;
- (void)updateSMSSpamExtensionNameChatProperty:(id)property;
- (void)setLastSentMessageDate:(id)date;
- (void)updateReceivedBlackholeError:(BOOL)error;
- (void)updateSMSHandshakeState:(int)state;
- (void)updateMessageHandshakeState:(int)state;
- (void)updateLastKnownHybridStateAndRemergeIfAppropriate:(BOOL)appropriate;
- (BOOL)lastKnownHybridState;
- (BOOL)isiMessageSpam;
- (BOOL)isSMSSpam;
- (int)getNumberOfTimesRespondedToThread;
- (id)lastSentMessageDate;
- (BOOL)receivedBlackholeError;
- (int)smsHandshakeState;
- (int)messageHandshakeState;
- (void)updateLastSeenMessageGuidIfNeeded:(id)needed;
- (id)lastTranslatableMessageGUIDWithLanguageCode:(id)code;
- (void)updateLastMessageGUID:(id)guid forLanguageCode:(id)code;
- (BOOL)isEmergencyChat;
- (void)updateIsEmergencyChat:(BOOL)chat;
- (id)associatedBusinessID;
- (void)updateAssociatedBusinessID:(id)id;
- (BOOL)isOscarChat;
- (void)updateHasHadSuccessfulQuery:(BOOL)query;
- (id)groupPhotoGuid;
- (void)updateGroupPhotoGuid:(id)guid;
- (id)groupPhotoUploadFailureCount;
- (void)updateGroupPhotoUploadFailureCount:(id)count;
- (id)_chatRegistry;
- (void)_persistMergedIDMergedChatsIfNeeded:(id)needed;
- (id)_mergeParticipantIDs;
- (id)cloudKitChatID;
- (id)_ckUniqueID;
- (id)cloudKitDebugDescription;
- (BOOL)isBusinessChat;
- (void)updateLastUsedBIAUserID:(id)id;
- (void)updateLastUsedBIAReferenceID:(id)id;
- (id)lastUsedBIAUserID;
- (id)lastUsedBIAReferenceID;
- (BOOL)containsActiveBIASession;
- (void)tearDownToneNotificationSessionIfNeeded;
- (void)updateNicknamesForParticipants:(id)participants;
- (void)meCardHasUpdated;
@end

#endif /* IMDChat_h */
