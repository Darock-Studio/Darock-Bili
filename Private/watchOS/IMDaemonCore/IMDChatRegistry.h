//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1262.300.81.4.10
//
#ifndef IMDChatRegistry_h
#define IMDChatRegistry_h
@import Foundation;

#include "IMDCKUtilities.h"
#include "IMDChatStore.h"
#include "IMDMessageHistorySyncController.h"
#include "IMDMessageProcessingController.h"
#include "IMUnlockMonitorListener-Protocol.h"
#include "TUConversationManagerDelegate-Protocol.h"

@class NSArray, NSData, NSMutableDictionary, NSRecursiveLock, NSString, TUConversationManager;

@interface IMDChatRegistry : NSObject<TUConversationManagerDelegate, IMUnlockMonitorListener> {
  /* instance variables */
  NSMutableDictionary *_chatsByGroupID;
  NSRecursiveLock *_chatsLock;
  NSRecursiveLock *_handlesLock;
  BOOL _isLoading;
  BOOL _firstUnlockTriggered;
  BOOL _doneLoadingAfterMerge;
  BOOL _blackholedChatsExistCache;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSMutableDictionary *idToHandlesMap;
@property (readonly, nonatomic) NSData *historyToken;
@property (retain, nonatomic) IMDCKUtilities *ckUtilities;
@property (retain, nonatomic) IMDChatStore *chatStore;
@property (nonatomic) BOOL hasDumpedLogsForNoExisitingGroup;
@property (readonly, nonatomic) IMDMessageProcessingController *messageProcessingController;
@property (readonly, nonatomic) IMDMessageHistorySyncController *messageHistorySyncController;
@property (retain, nonatomic) NSMutableDictionary *personCentricGroupedChatsCache;
@property (retain, nonatomic) NSMutableDictionary *cachedAliasToCNIDMap;
@property (readonly, nonatomic) TUConversationManager *conversationManager;
@property (readonly, nonatomic) NSArray *chats;
@property (readonly, nonatomic) NSArray *allChats;
@property (readonly, nonatomic) NSArray *cachedChats;
@property (readonly, nonatomic) unsigned long long cachedChatCount;
@property (readonly, nonatomic) unsigned long long persistedChatCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (id)supportedServiceNames;

/* instance methods */
- (void)setUpInitialConversationManager;
- (id)_activeTUConversations;
- (void)updateFaceTimeGroupName:(id)name;
- (void)updateFaceTimeGroupPhoto:(id)photo;
- (id)_oneToOneChatForRemoteHandle:(id)handle;
- (id)_chatForTUGroupID:(id)id participants:(id)participants;
- (id)_chatForTUConversation:(id)tuconversation;
- (id)_tuConversationForChat:(id)chat;
- (id)_initiatorForConversation:(id)conversation chat:(id)chat;
- (id)_conversationItemForChat:(id)chat conversation:(id)conversation;
- (void)conversationManager:(id)manager conversation:(id)conversation addedMembersLocally:(id)locally;
- (id)_upgradeChatToGroupChat:(id)chat forConversation:(id)conversation;
- (id)_findExistingGroupChatForConversation:(id)conversation onSession:(id)session;
- (id)_createGroupChatForConversation:(id)conversation onSession:(id)session;
- (id)_messageStore;
- (void)repairInconsistentMergedChatsIfNecessary:(id)necessary;
- (BOOL)_hasInconsistentGroupPhotoGUIDAcrossMergedChats:(id)chats;
- (id)_preferredFileTransferFromGroupPhotoGUIDs:(id)guids;
- (void)_repairInconsistentGroupPhotoGuidAcrossMergedChatsIfNecessary:(id)necessary;
- (BOOL)_hasInconsistentJoinStateAcrossMergedChats:(id)chats;
- (void)_repairInconsistentJoinStatesAcrossMergedChatsIfNecessary:(id)necessary;
- (id)init;
- (void)dealloc;
- (id)_sharedMessageStore;
- (id)blackholedChats;
- (BOOL)blackholedChatsExist;
- (id)_chatsWithBlackholed:(BOOL)blackholed;
- (id)chatForHandle:(id)handle account:(id)account chatIdentifier:(id)identifier guid:(id)guid lastAddressedHandle:(id)handle lastAddressedSIMID:(id)simid isBlackholed:(BOOL)blackholed;
- (id)chatForHandles:(id)handles account:(id)account chatIdentifier:(id)identifier style:(unsigned char)style groupID:(id)id displayName:(id)name guid:(id)guid lastAddressedHandle:(id)handle lastAddressedSIMID:(id)simid isBlackholed:(BOOL)blackholed;
- (id)chatForRoom:(id)room account:(id)account chatIdentifier:(id)identifier guid:(id)guid;
- (id)generateUnusedChatIdentifierForGroupChatWithAccount:(id)account;
- (id)existingiMessageChatForID:(id)id;
- (id)existingiMessageChatForID:(id)id withChatStyle:(unsigned char)style;
- (id)existingSMSChatForID:(id)id;
- (id)existingSMSChatForID:(id)id withChatStyle:(unsigned char)style;
- (BOOL)hasKnownSenderChatWithChatIdentifier:(id)identifier;
- (id)_cachedChatWithGUID:(id)guid;
- (id)_cachedChatsWithGroupID:(id)id;
- (id)existingChatWithGUID:(id)guid;
- (id)existingChatsFilteredUsingPredicate:(id)predicate;
- (id)existingChatsFilteredUsingPredicate:(id)predicate sortedUsingLastMessageDateAscending:(BOOL)ascending limit:(unsigned long long)limit;
- (id)existingChatsFilteredUsingPredicate:(id)predicate sortedUsingLastMessageDateAscending:(BOOL)ascending olderThan:(id)than limit:(unsigned long long)limit;
- (id)existingChatsWithGroupID:(id)id;
- (id)existingChatWithIdentifier:(id)identifier account:(id)account;
- (id)existingChatsWithPinningIdentifier:(id)identifier;
- (id)existingChatWithEngramID:(id)id;
- (id)existingChatForID:(id)id account:(id)account;
- (id)existingChatForIDs:(id)ids account:(id)account style:(unsigned char)style;
- (id)existingChatForIDs:(id)ids account:(id)account displayName:(id)name groupID:(id)id style:(unsigned char)style;
- (id)existingChatsForIDs:(id)ids onService:(id)service style:(unsigned char)style;
- (id)existingChatsForIDs:(id)ids onService:(id)service displayName:(id)name groupID:(id)id style:(unsigned char)style;
- (id)existingChatsForIDs:(id)ids displayName:(id)name groupID:(id)id style:(unsigned char)style;
- (id)_existingChatsForIDs:(id)ids serviceName:(id)name displayName:(id)name groupID:(id)id style:(unsigned char)style;
- (id)existingChatForRoom:(id)room account:(id)account;
- (id)allChatsWithIdentifier:(id)identifier style:(unsigned char)style serviceNames:(id)names;
- (id)allExistingSupportedServiceChatsWithIdentifier:(id)identifier style:(unsigned char)style;
- (id)allExistingChatsWithIdentifier:(id)identifier style:(unsigned char)style;
- (id)allExistingChatsWithIdentifier:(id)identifier;
- (id)_participantIDSetFromHandles:(id)handles toIdentifier:(id)identifier;
- (id)_exactGroupChatMatchOrNewestMatchingGroupID:(id)id serviceName:(id)name participants:(id)participants toIdentifier:(id)identifier;
- (id)_newestGroupChatMatchingParticipants:(id)participants displayName:(id)name strictDisplayNameMatching:(BOOL)matching serviceName:(id)name toIdentifier:(id)identifier;
- (void)_setGroupID:(id)id forChatAndAllSiblings:(id)siblings;
- (id)bestCandidateGroupChatWithFromIdentifier:(id)identifier toIdentifier:(id)identifier displayName:(id)name participants:(id)participants groupID:(id)id serviceName:(id)name;
- (void)updateLastMessageForChat:(id)chat hintMessage:(id)message;
- (void)updateLastMessageForChat:(id)chat hintMessage:(id)message historyQuery:(BOOL)query;
- (BOOL)updateUnreadCountForChat:(id)chat;
- (void)updateNotificationUnreadCountForChat:(id)chat;
- (void)updateStateForChat:(id)chat fromMessage:(id)message toMessage:(id)message forcePost:(BOOL)post hintMessage:(id)message shouldRebuildFailedMessageDate:(BOOL)date shouldCalculateUnreadCount:(BOOL)count setUnreadCountToZero:(BOOL)zero;
- (void)updateStateForChat:(id)chat hintMessage:(id)message;
- (void)updateStateForChat:(id)chat hintMessage:(id)message shouldRebuildFailedMessageDate:(BOOL)date;
- (void)updateStateForChat:(id)chat hintMessage:(id)message shouldRebuildFailedMessageDate:(BOOL)date shouldCalculateUnreadCount:(BOOL)count;
- (void)updateStateForChat:(id)chat hintMessage:(id)message shouldRebuildFailedMessageDate:(BOOL)date setUnreadCountToZero:(BOOL)zero;
- (void)updateStateForChat:(id)chat forcePost:(BOOL)post;
- (void)updateStateForChat:(id)chat forcePost:(BOOL)post shouldRebuildFailedMessageDate:(BOOL)date;
- (void)updateStateForChat:(id)chat forcePost:(BOOL)post shouldRebuildFailedMessageDate:(BOOL)date shouldCalculateUnreadCount:(BOOL)count;
- (void)updateStateForChat:(id)chat forcePost:(BOOL)post shouldRebuildFailedMessageDate:(BOOL)date setUnreadCountToZero:(BOOL)zero;
- (void)updateGroupIDForChat:(id)chat newGroupID:(id)id;
- (void)checkBlackholedChatsExistAfterUpdatingChatWithAdd:(BOOL)add;
- (BOOL)filterediMessageChatsExist;
- (void)_finalizeIncomingChat:(id)chat;
- (void)_populateLastMessageForChat:(id)chat;
- (id)_addChatFromCacheMiss:(id)miss preferExistingChat:(BOOL)chat;
- (id)_addChatsFromCacheMisses:(id)misses preferExistingChats:(BOOL)chats;
- (void)addChat:(id)chat;
- (void)addChat:(id)chat firstLoad:(BOOL)load store:(BOOL)store;
- (void)_evictCachedChat:(id)chat;
- (void)removeChat:(id)chat;
- (void)addItem:(id)item toChat:(id)chat;
- (void)removeItem:(id)item fromChat:(id)chat;
- (void)addMessage:(id)message toChat:(id)chat;
- (void)addMessage:(id)message toChat:(id)chat deferSpotlightIndexing:(BOOL)indexing;
- (void)removeMessage:(id)message fromChat:(id)chat;
- (id)stringForChatStyle:(unsigned char)style;
- (void)_fixSMSGroupChatAndStoreIfNeeded:(id)needed iMessageChat:(id)chat chatToRegenerate:(id *)regenerate;
- (void)_fixUpChatParticipantsIfNeeded:(id)needed usingChatGUIDToChatMap:(id)map;
- (void)_fixUpChatParticipantsIfNeeded:(id)needed;
- (id)_chatGUIDToChatMapForChats:(id)chats;
- (id)_siblingChatForChat:(id)chat usingChatGUIDToChatMap:(id)map;
- (id)_chatInfoForChats:(id)chats;
- (id)_chatInfoForConnection;
- (id)_allChatInfo;
- (id)_chatInfoForNumberOfChats:(long long)chats;
- (id)_blackholedChatInfoForNumberOfChats:(long long)chats;
- (id)_chatInfoInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range wantsBlackholed:(BOOL)blackholed;
- (void)_setInitialLoadForTesting:(BOOL)testing;
- (void)_forceReloadChats:(BOOL)chats;
- (void)refreshUIWhileSyncing;
- (void)waitForLoadedChatsWithCompletionHandler:(id /* block */)handler;
- (BOOL)loadChatsWithCompletionBlock:(id /* block */)block;
- (void)_persistMergeIDMergedChatsIfNeeded;
- (BOOL)updateProperties:(id)properties chat:(id)chat style:(unsigned char)style;
- (void)addIMDHandleToRegistry:(id)registry;
- (void)removeIMDHandleFromRegistry:(id)registry;
- (id)allHandlesForID:(id)id;
- (void)_reloadChatsForDatabaseMergeOrDatabaseSwitch;
- (void)_performPostUnlockHousekeeping;
- (void)systemDidLeaveFirstDataProtectionLock;
- (void)systemDidUnlock;
- (void)_makeAllAttachmentsClassC;
- (id)findDuplicateUnnamedGroups:(id)groups;
- (BOOL)_chat:(id)_chat isDuplicateOfChat:(id)chat;
- (id)findDuplicateChats:(id)chats;
- (id)_findChatWinnerInDuplicateChatArray:(id)array fixDisplayName:(BOOL *)name;
- (id)_findLosingChatGUIDsInArrayOfChats:(id)chats withWinner:(id)winner;
- (id)_createGroupChatsArray;
- (BOOL)_mergeDuplicateGroupsIfNeeded;
- (BOOL)repairDuplicateChatsIfNeeded;
- (void)_markGroupPhotosAsUnpurgeableIfNecessary;
- (id)_allHandles;
- (id)groupChatsBasedOnIdentity:(id)identity;
- (id)groupChatsBasedOnIdentityUsingCacheIfApplicable:(id)applicable;
- (id)truncatedSortedChatsGroupedByPersonCentricID:(id)id count:(long long)count pinnedChatIdentifiers:(id)identifiers;
- (id)sortPersonCentricChatGroups:(id)groups;
- (void)_enumeratePersonMergedChatsWithMaximumNumberOfChats:(long long)chats usingChats:(id)chats useCachedChatGroups:(BOOL)groups includingPinnedChatIdentifiers:(id)identifiers usingBlock:(id /* block */)block;
- (id)personCentricGroupedChatsArrayWithMaximumNumberOfChats:(long long)chats skipsLastMessageLoading:(BOOL)loading usingChats:(id)chats useCachedChatGroups:(BOOL)groups includingPinnedChatIdentifiers:(id)identifiers repairInconsistentMergedChats:(BOOL)chats;
- (id)_mergedPinningIdentifiersForChats:(id)chats chatGUIDToChatMap:(id)map groupedChatsByPersonCentricIdWithSortedChats:(id)chats;
- (id)chatsToUploadToCloudKitWithLimit:(unsigned long long)limit;
- (void)updateChatWithGUID:(id)guid serverChangeToken:(id)token recordID:(id)id;
- (void)_insertChatUsingSyncData:(id)data;
- (id)_newestExistingChatWithOriginalGroupID:(id)id onService:(id)service;
- (id)_newestExistingChatWithGroupID:(id)id onService:(id)service;
- (id)_existingChatForSyncData:(id)data originalGUID:(id)guid;
- (BOOL)_ensureNoExistingGroupForSyncData:(id)data;
- (void)_markForksAsSyncedForChat:(id)chat;
- (void)_updateChat:(id)chat usingSyncData:(id)data;
- (void)updateChatUsingSyncData:(id)data;
- (void)resolveChatConflictUsingSyncData:(id)data localGUID:(id)guid;
- (void)updateCachedChatsSyncStatusTo:(long long)to forGUIDs:(id)guids;
- (void)markChatAsDeferredForSyncingUsingSyncData:(id)data;
- (void)markDeferredChatsAsNeedingSync;
- (void)__addChatToGroupIDChatIndex:(id)index;
- (void)__removeChatFromGroupIDChatIndex:(id)index;
- (id)messagesToUploadToCloudKitWithLimit:(unsigned long long)limit;
- (id)messagesPendingUpdateT1ToCloudKitWithLimit:(unsigned long long)limit;
- (id)messagesPendingUpdateT2ToCloudKitWithLimit:(unsigned long long)limit;
- (id)_lookupChatUsingParentChatID:(id)id service:(id)service;
- (id)_itemFromCKRecord:(id)ckrecord;
- (id)_parentChatIDFromCKRecord:(id)ckrecord;
- (void)_addItemToParentChatIfNotLocationItem:(id)item parentChat:(id)chat updatedLastMessageCount:(unsigned long long)count;
- (void)_setSortIDOnIncomingMessage:(id)message forChat:(id)chat;
- (void)processMessageUsingCKRecord:(id)ckrecord;
- (BOOL)_existingItemRequiresUpgrade:(id)upgrade itemFromCKRecord:(id)ckrecord;
- (void)_adoptUpdatedStateForExistingItem:(id)item itemFromCKRecord:(id)ckrecord;
- (void)processMessageUsingCKRecord:(id)ckrecord updatedLastMessageCount:(int)count;
- (BOOL)handleMessageUpdate:(id)update;
- (void)handleMessageUpdateConflictType:(id)type serverRecord:(id)record localRowID:(long long)id;
- (BOOL)updateSyncedSyndicationRanges:(id)ranges forGUID:(id)guid;
- (id)copyRecordIDsAndGUIDsPendingCloudKitDelete;
- (void)clearPendingDeleteTable;
- (BOOL)doneLoadingAfterMerge;
- (BOOL)isBeingSetup;
- (id)_existingiMessageChatForChatIdentifier:(id)identifier style:(unsigned char)style;
- (void)simulateMessageReceive:(id)receive serviceName:(id)name groupID:(id)id handles:(id)handles sender:(id)sender date:(id)date associatedMessageType:(long long)type associatedMessageGuid:(id)guid;
- (void)invalidatePersonCentricGroupedChatsCache;
- (BOOL)_contactsBasedMerginEnabled;
- (void)_updateCachedAliasToCNIDMap:(id)cnidmap withHistoryToken:(id)token completionHandler:(id /* block */)handler;
- (id)_aliasToCNIDMapForAliases:(id)aliases;
- (id)aliasToCNIDMap;
- (void)_updateCurrentAliasToCNIDDictionaryAndHistoryTokenWithCompletionHandler:(id /* block */)handler;
- (id)_generateCurrentAliasToCNIDDictionary;
- (void)_populateContactIDOnHandles;
- (void)_updateCachedCNIDMapForHandles:(id)handles;
- (id)_extractHandlesFromMap:(id)map usingCNID:(id)cnid;
- (id)_handlesWithChangedContactsOriginalMap:(id)map newMap:(id)map;
- (id)existingOneOnOneChatsWithIdentifiers:(id)identifiers;
- (id)existingGroupChatsContainingHandles:(id)handles;
- (void)_contactsChanged:(id)changed;
- (void)_checkForContactChanges;
- (void)_chatGUIDsThatNeedRemergingWithCompletionHandler:(id /* block */)handler;
- (void)_chatGUIDsThatNeedRemerging:(id *)remerging chatDictionaryArray:(id *)array aliasMap:(id)map;
- (void)_chatGUIDsThatNeedRemerging:(id *)remerging chatDictionaryArray:(id *)array oldPersonCentricID:(id)id;
- (void)_serializeChatsForRemerge:(id)remerge guidsThatNeedRemerging:(id *)remerging chatDictionaryArray:(id *)array;
- (void)updateMeCardHasUpdatedForAllChats;
- (void)moveMessagesWithGUIDsToRecentlyDeleted:(id)deleted deleteDate:(id)date;
- (void)moveMessagesInChatsWithGUIDsToRecentlyDeleted:(id)deleted deleteDate:(id)date;
- (void)recoverMessagesWithChatGUIDs:(id)guids;
- (id)recoverableMessagesMetadata;
- (void)permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:(id)guids completionHandler:(id /* block */)handler;
- (id)recoverableMessagesMetadataPendingCloudKitSaveWithLimit:(unsigned long long)limit;
- (id)recoverableMessagesMetadataPendingCloudKitDeleteWithLimit:(unsigned long long)limit;
- (void)clearRecoverableMessageTombStones;
- (void)updateRecoverableMessageSyncState:(long long)state forMessageRowID:(long long)id onPartIndex:(long long)index;
- (void)_triggerRemergeForPersonCentricID:(id)id;
@end

#endif /* IMDChatRegistry_h */
