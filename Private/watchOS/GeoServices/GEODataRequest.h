//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEODataRequest_h
#define GEODataRequest_h
@import Foundation;

#include "GEOApplicationAuditToken.h"
#include "GEODataRequestThrottlerToken.h"
#include "GEORequestCounterTicket-Protocol.h"

@class NSData, NSDictionary, NSString, NSURL;

@interface GEODataRequest : NSObject {
  /* instance variables */
  unsigned long long _options;
}

@property (copy, nonatomic) NSData *cachedData;
@property (readonly, nonatomic) NSURL *URL;
@property (readonly, copy, nonatomic) GEOApplicationAuditToken *auditToken;
@property (readonly, copy, nonatomic) NSData *bodyData;
@property (readonly, nonatomic) NSDictionary *additionalHTTPHeaders;
@property (readonly, nonatomic) double timeoutInterval;
@property (readonly, nonatomic) struct { int x0; union { int x0; int x1; int x2; } x1; } kind;
@property (readonly, nonatomic) NSObject<GEORequestCounterTicket> *requestCounterTicket;
@property (readonly, nonatomic) unsigned long long multipathServiceType;
@property (readonly, nonatomic) unsigned long long multipathAlternatePort;
@property (readonly, nonatomic) NSString *backgroundSessionIdentifier;
@property (readonly, nonatomic) GEODataRequestThrottlerToken *throttleToken;
@property (readonly, nonatomic) BOOL useHTTPPost;
@property (readonly, nonatomic) BOOL allowTLSSessionTicketUse;
@property (readonly, nonatomic) BOOL needsProxy;
@property (readonly, nonatomic) BOOL requireInexpensiveNetwork;
@property (readonly, nonatomic) BOOL disallowCellularNetwork;
@property (readonly, nonatomic) BOOL requirePluggedIn;
@property (readonly, nonatomic) BOOL requireUnconstrainedNetwork;

/* instance methods */
- (id)initWithKind:(struct { int x0; union { int x0; int x1; int x2; } x1; })kind protobufRequest:(id)request URL:(id)url additionalHTTPHeaders:(id)httpheaders auditToken:(id)token timeoutInterval:(double)interval traits:(id)traits requestCounterTicket:(id)ticket multipathServiceType:(unsigned long long)type multipathAlternatePort:(unsigned long long)port throttleToken:(id)token options:(unsigned long long)options;
- (id)initForAnalyticsUploadRequest:(id)request toURL:(id)url requiresProxy:(BOOL)proxy backgroundIdentifier:(id)identifier compressRequest:(BOOL)request allowCellular:(BOOL)cellular allowBattery:(BOOL)battery timeToLive:(double)live requestCounterTicket:(id)ticket throttleToken:(id)token;
- (id)updatedRequestWithNewBodyData:(id)data;
- (id)updatedRequestWithNewProtobufRequest:(id)request;
- (id)newURLRequest;
- (id)init;
- (id)initWithKind:(struct { int x0; union { int x0; int x1; int x2; } x1; })kind URL:(id)url auditToken:(id)token timeoutInterval:(double)interval additionalHTTPHeaders:(id)httpheaders bodyData:(id)data userAgent:(id)agent entityTag:(id)tag cachedData:(id)data requestCounterTicket:(id)ticket multipathServiceType:(unsigned long long)type multipathAlternatePort:(unsigned long long)port backgroundSessionIdentifier:(id)identifier throttleToken:(id)token options:(unsigned long long)options;
- (id)initWithKind:(struct { int x0; union { int x0; int x1; int x2; } x1; })kind URL:(id)url auditToken:(id)token timeoutInterval:(double)interval additionalHTTPHeaders:(id)httpheaders bodyData:(id)data userAgent:(id)agent entityTag:(id)tag cachedData:(id)data requestCounterTicket:(id)ticket multipathServiceType:(unsigned long long)type multipathAlternatePort:(unsigned long long)port throttleToken:(id)token options:(unsigned long long)options;
- (id)description;
- (id)publicLogDescription;
@end

#endif /* GEODataRequest_h */
