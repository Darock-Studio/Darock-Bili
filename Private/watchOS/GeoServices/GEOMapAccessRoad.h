//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOMapAccessRoad_h
#define GEOMapAccessRoad_h
@import Foundation;

#include "GEOMapAccessLine.h"
#include "GEOMapRoad-Protocol.h"

@class NSString;
@protocol {shared_ptr<geo::MapEdgeRoad>="__ptr_"^{MapEdgeRoad}"__cntrl_"^{__shared_weak_count}};

@interface GEOMapAccessRoad : GEOMapAccessLine<GEOMapRoad> {
  /* instance variables */
  struct shared_ptr<geo::MapEdgeRoad> { struct MapEdgeRoad *__ptr_; struct __shared_weak_count *__cntrl_; } _roadEdge;
}

@property (readonly, nonatomic) int roadClass;
@property (readonly, nonatomic) int formOfWay;
@property (readonly, nonatomic) int travelDirection;
@property (readonly, nonatomic) double roadWidth;
@property (readonly, nonatomic) unsigned long long speedLimit;
@property (readonly, nonatomic) BOOL speedLimitIsMPH;
@property (readonly, nonatomic) unsigned long long roadID;
@property (readonly, nonatomic) BOOL isTunnel;
@property (readonly, nonatomic) BOOL isBridge;
@property (readonly, nonatomic) BOOL isRail;
@property (readonly, nonatomic) int rampType;
@property (readonly, nonatomic) NSString *internalRoadName;
@property (readonly, nonatomic) unsigned long long coordinateCount;
@property (readonly, nonatomic) struct { double x0; double x1; } * coordinates;
@property (readonly, nonatomic) double length;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (double)estimatedWidthForRoad:(id)road;

/* instance methods */
- (id)initWithMap:(id)map roadEdge:(struct shared_ptr<geo::MapEdgeRoad> { struct MapEdgeRoad * x0; struct __shared_weak_count * x1; })edge;
- (void)roadFeaturesWithHandler:(id /* block */)handler;
- (void)roadEdgesWithHandler:(id /* block */)handler;
- (id)findRoadsFrom:(id /* block */)from completionHandler:(id /* block */)handler;
- (id)findRoadsFromPreviousIntersection:(id /* block */)intersection completionHandler:(id /* block */)handler;
- (id)findRoadsToPreviousIntersection:(id /* block */)intersection completionHandler:(id /* block */)handler;
- (id)findRoadsFromNextIntersection:(id /* block */)intersection completionHandler:(id /* block */)handler;
- (id)findRoadsToNextIntersection:(id /* block */)intersection completionHandler:(id /* block */)handler;
- (id)tileKeys;
@end

#endif /* GEOMapAccessRoad_h */
