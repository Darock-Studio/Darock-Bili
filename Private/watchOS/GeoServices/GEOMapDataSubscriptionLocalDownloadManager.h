//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOMapDataSubscriptionLocalDownloadManager_h
#define GEOMapDataSubscriptionLocalDownloadManager_h
@import Foundation;

#include "GEOMapDataSubscriptionDownloadGroupDelegate-Protocol.h"
#include "GEOMapDataSubscriptionDownloadManager-Protocol.h"
#include "GEOMapDataSubscriptionDownloadManagerDelegate-Protocol.h"
#include "GEOMapDataSubscriptionDownloader.h"
#include "GEOMapDataSubscriptionDownloaderDelegate-Protocol.h"
#include "GEOMapDataSubscriptionUpdateSession.h"
#include "GEOPListStateCapturing-Protocol.h"
#include "GEOResourceManifestManager.h"
#include "GEOTileDB.h"

@class NSMutableArray, NSMutableDictionary, NSString, geo_isolater;
@protocol OS_dispatch_queue;

@interface GEOMapDataSubscriptionLocalDownloadManager : NSObject<GEOMapDataSubscriptionDownloaderDelegate, GEOMapDataSubscriptionDownloadGroupDelegate, GEOPListStateCapturing, GEOMapDataSubscriptionDownloadManager> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_workQueue;
  GEOResourceManifestManager *_manifestManager;
  GEOTileDB *_tileDB;
  GEOMapDataSubscriptionUpdateSession *_currentUpdateSession;
  NSMutableArray *_pendingSubscriptionsToLoad;
  GEOMapDataSubscriptionDownloader *_currentDownloader;
  geo_isolater *_isolation;
  unsigned long long _stateCaptureHandle;
  NSMutableDictionary *_subscriptionStates;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<GEOMapDataSubscriptionDownloadManagerDelegate> *delegate;

/* instance methods */
- (id)initWithTileDB:(id)db;
- (void)dealloc;
- (id)captureStatePlistWithHints:(struct os_state_hints_s { unsigned int x0; char * x1; unsigned int x2; unsigned int x3; } *)hints;
- (void)didAddSubscription:(id)subscription;
- (void)didAddSubscription:(id)subscription completionHandler:(id /* block */)handler;
- (void)didRemoveSubscriptionWithIdentifier:(id)identifier;
- (id)determineEstimatedSizeForSubscriptionWithRegion:(id)region dataTypes:(unsigned long long)types queue:(id)queue completionHandler:(id /* block */)handler;
- (void)fetchStateForSubscriptionWithIdentifier:(id)identifier callbackQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)registerExternallyManagedDownloader:(id)downloader;
- (void)externallyManagedDownloaderDidFinish:(id)finish withError:(id)error;
- (void)startDownloadForSubscriptionIdentifiers:(id)identifiers mode:(unsigned long long)mode;
- (void)forceUpdateForUserInitiatedSubscriptionsForDataType:(unsigned long long)type mode:(unsigned long long)mode;
- (void)cancelDownloadForSubscriptionIdentifiers:(id)identifiers;
- (id)_createDownloaderForSubscription:(id)subscription mode:(unsigned long long)mode;
- (void)subscriptionDownloader:(id)downloader didFinishWithError:(id)error;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)subscriptionDownloadGroupDidDefer:(id)defer;
@end

#endif /* GEOMapDataSubscriptionLocalDownloadManager_h */
