//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOMapFeatureRoad_h
#define GEOMapFeatureRoad_h
@import Foundation;

#include "GEOMapFeatureLine.h"
#include "GEOMapFeatureJunction.h"
#include "GEOMultiSectionFeature.h"
#include "GEOVectorTile.h"
#include "NSCopying-Protocol.h"

@class NSString;

@interface GEOMapFeatureRoad : GEOMapFeatureLine<NSCopying> {
  /* instance variables */
  union { unsigned long long roadID; struct { unsigned int x :1 flipped; unsigned int x :14 featureIndex; unsigned int x :16 tileY; unsigned int x :16 tileX; unsigned int x :17 unused; } x0; } _roadKey;
  GEOMapFeatureJunction *_junctionA;
  GEOMapFeatureJunction *_junctionB;
  BOOL _checkedJunctionA;
  BOOL _checkedJunctionB;
  GEOVectorTile *_tile;
}

@property (readonly, nonatomic) struct { double x0; double x1; } firstCoordinate;
@property (readonly, nonatomic) struct _GEOTileKey { unsigned int x0 :7; unsigned int x1 :1; union { struct _GEOStandardTileKey { unsigned int x0 :40; unsigned int x1 :6; unsigned int x2 :26; unsigned int x3 :26; unsigned int x4 :14; unsigned int x5 :4; unsigned int x6 :4; } x0; struct _GEOGloriaQuadIDTileKey { unsigned int x0 :6; unsigned int x1 :64; unsigned int x2 :14; unsigned int x3 :4; union { struct { unsigned int x0 :10; unsigned int x1 :10; unsigned int x2 :12; } x0; unsigned int x1; } x4; } x1; struct _GEORegionalResourceKey { unsigned int x0 :32; unsigned int x1 :8; unsigned int x2 :6; unsigned int x3 :8; unsigned int x4 :8; unsigned int x5 :1; unsigned int x6 :57; } x2; struct _GEOSputnikMetadataKey { unsigned int x0 :32; unsigned int x1 :24; unsigned int x2 :14; unsigned int x3 :8; unsigned int x4 :42; } x3; struct _GEOFlyoverKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :8; unsigned int x4 :24; unsigned int x5 :14; unsigned int x6 :8; unsigned int x7 :8; } x4; struct _GEOTransitLineSelectionKey { unsigned int x0 :6; unsigned int x1 :25; unsigned int x2 :25; unsigned int x3 :64; } x5; struct _GEOPolygonSelectionKey { unsigned int x0 :6; unsigned int x1 :25; unsigned int x2 :25; unsigned int x3 :64; } x6; struct _GEORoadSelectionKey { unsigned int x0 :6; unsigned int x1 :25; unsigned int x2 :25; unsigned int x3 :64; } x7; struct _GEOContourLinesKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :4; unsigned int x4 :8; unsigned int x5 :50; } x8; struct _GEOTileOverlayKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :8; unsigned int x4 :32; unsigned int x5 :16; unsigned int x6 :6; } x9; struct _GEOIdentifiedResourceKey { unsigned long long x0; unsigned char x1; unsigned char x2; unsigned int x3 :1; unsigned int x4 :39; } x10; struct _GEOS2TileKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :3; unsigned int x4 :14; unsigned int x5 :4; unsigned int x6 :4; unsigned int x7 :37; } x11; struct _GEOLiveTileKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :14; unsigned int x4 :4; unsigned int x5 :4; unsigned int x6 :4; unsigned int x7 :36; } x12; } x2; } tileKey;
@property (readonly, nonatomic) GEOMultiSectionFeature *feature;
@property (readonly, nonatomic) unsigned long long featureIndex;
@property (readonly, nonatomic) BOOL isFlipped;
@property (readonly, nonatomic) GEOMultiSectionFeature *startFeature;
@property (readonly, nonatomic) GEOMultiSectionFeature *endFeature;
@property (readonly, nonatomic) unsigned long long _diagnosticsOnly_forwardSpeedLimit;
@property (readonly, nonatomic) unsigned long long _diagnosticsOnly_reverseSpeedLimit;
@property (readonly, nonatomic) unsigned long long roadID;
@property (readonly, nonatomic) unsigned long long muid;
@property (readonly, nonatomic) long long signedMuid;
@property (readonly, nonatomic) GEOMapFeatureJunction *startJunction;
@property (readonly, nonatomic) GEOMapFeatureJunction *endJunction;
@property (readonly, nonatomic) int roadClass;
@property (readonly, nonatomic) int formOfWay;
@property (readonly, nonatomic) int travelDirection;
@property (readonly, nonatomic) BOOL isValidTravelDirection;
@property (readonly, nonatomic) long long laneCount;
@property (readonly, nonatomic) double roadWidth;
@property (readonly, nonatomic) unsigned long long speedLimit;
@property (readonly, nonatomic) BOOL speedLimitIsMPH;
@property (readonly, nonatomic) BOOL isDrivable;
@property (readonly, nonatomic) BOOL isWalkable;
@property (readonly, nonatomic) BOOL isRoadPedestrianNavigable;
@property (readonly, nonatomic) int walkableSide;
@property (readonly, nonatomic) int sidewalkSide;
@property (readonly, nonatomic) BOOL isTunnel;
@property (readonly, nonatomic) BOOL isBridge;
@property (readonly, nonatomic) BOOL isRail;
@property (readonly, nonatomic) int rampType;
@property (readonly, nonatomic) int bikeableSide;
@property (readonly, nonatomic) int bikeLaneSide;
@property (readonly, nonatomic) NSString *internalRoadName;

/* instance methods */
- (void)updateForDesiredRoadDirectionality:(unsigned long long)directionality isOutboundRoad:(BOOL)road;
- (void)flip;
- (id)flippedCopy;
- (id)localizedRoadName:(out id *)name;
- (id)_junctionA;
- (id)_junctionB;
- (int)_flippedWalkableSideFor:(int)for;
- (int)_flippedSidewalkSideFor:(int)for;
- (int)_flippedBikeableSideFor:(int)for;
- (int)_flippedBikeLaneSideFor:(int)for;
- (id)_containingTile;
- (id)_attributes;
- (struct GeoCodecsVectorTilePoint { float x0; float x1; } *)_tilePointsForSection:(unsigned long long)section outCount:(out unsigned long long *)count;
- (float *)_elevationsForSection:(unsigned long long)section outCount:(out unsigned long long *)count;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithFeature:(id)feature;
- (id)description;
- (id)debugDescription;
@end

#endif /* GEOMapFeatureRoad_h */
