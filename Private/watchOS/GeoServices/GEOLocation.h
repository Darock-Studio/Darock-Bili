//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOLocation_h
#define GEOLocation_h
@import Foundation;

#include "PBCodable.h"
#include "GEOCoarseLocationMetadata.h"
#include "GEOLatLng.h"
#include "NSCopying-Protocol.h"

@class PBDataReader, PBUnknownFields;

@interface GEOLocation : PBCodable<NSCopying> {
  /* instance variables */
  PBDataReader *_reader;
  unsigned int _readerMarkPos;
  unsigned int _readerMarkLength;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _readerLock;
  struct { unsigned int x :1 has_courseAccuracy; unsigned int x :1 has_course; unsigned int x :1 has_heading; unsigned int x :1 has_horizontalAccuracy; unsigned int x :1 has_rawCourse; unsigned int x :1 has_speedAccuracy; unsigned int x :1 has_speed; unsigned int x :1 has_timestamp; unsigned int x :1 has_transitID; unsigned int x :1 has_verticalAccuracy; unsigned int x :1 has_altitude; unsigned int x :1 has_courseType; unsigned int x :1 has_formOfWay; unsigned int x :1 has_levelOrdinal; unsigned int x :1 has_matchQuality; unsigned int x :1 has_referenceFrame; unsigned int x :1 has_roadClass; unsigned int x :1 has_transportType; unsigned int x :1 has_type; unsigned int x :1 has_isMatchedLocation; unsigned int x :1 has_isShifted; unsigned int x :1 read_unknownFields; unsigned int x :1 read_coarseMetadata; unsigned int x :1 read_latLng; unsigned int x :1 read_rawCoordinate; unsigned int x :1 wrote_anyField; } _flags;
}

@property (readonly, nonatomic) struct { double x0; double x1; } coordinate;
@property (readonly, nonatomic) BOOL hasAccurateCourse;
@property (nonatomic) BOOL hasSpeedAccuracy;
@property (nonatomic) double speedAccuracy;
@property (nonatomic) BOOL hasIsMatchedLocation;
@property (nonatomic) BOOL isMatchedLocation;
@property (nonatomic) BOOL hasIsShifted;
@property (nonatomic) BOOL isShifted;
@property (nonatomic) BOOL hasTransitID;
@property (nonatomic) unsigned long long transitID;
@property (nonatomic) BOOL hasReferenceFrame;
@property (nonatomic) int referenceFrame;
@property (readonly, nonatomic) BOOL hasRawCoordinate;
@property (retain, nonatomic) GEOLatLng *rawCoordinate;
@property (nonatomic) BOOL hasRawCourse;
@property (nonatomic) double rawCourse;
@property (nonatomic) BOOL hasMatchQuality;
@property (nonatomic) int matchQuality;
@property (nonatomic) BOOL hasFormOfWay;
@property (nonatomic) int formOfWay;
@property (nonatomic) BOOL hasRoadClass;
@property (nonatomic) int roadClass;
@property (nonatomic) BOOL hasTransportType;
@property (nonatomic) int transportType;
@property (retain, nonatomic) GEOLatLng *latLng;
@property (nonatomic) BOOL hasType;
@property (nonatomic) int type;
@property (nonatomic) BOOL hasTimestamp;
@property (nonatomic) double timestamp;
@property (nonatomic) BOOL hasAltitude;
@property (nonatomic) int altitude;
@property (nonatomic) BOOL hasHorizontalAccuracy;
@property (nonatomic) double horizontalAccuracy;
@property (nonatomic) BOOL hasVerticalAccuracy;
@property (nonatomic) double verticalAccuracy;
@property (nonatomic) BOOL hasSpeed;
@property (nonatomic) double speed;
@property (nonatomic) BOOL hasHeading;
@property (nonatomic) double heading;
@property (nonatomic) BOOL hasCourse;
@property (nonatomic) double course;
@property (nonatomic) BOOL hasCourseAccuracy;
@property (nonatomic) double courseAccuracy;
@property (nonatomic) BOOL hasLevelOrdinal;
@property (nonatomic) int levelOrdinal;
@property (readonly, nonatomic) BOOL hasCoarseMetadata;
@property (retain, nonatomic) GEOCoarseLocationMetadata *coarseMetadata;
@property (nonatomic) BOOL hasCourseType;
@property (nonatomic) int courseType;
@property (readonly, nonatomic) PBUnknownFields *unknownFields;

/* class methods */
+ (BOOL)isValid:(id)valid;

/* instance methods */
- (void)clearSensitiveFieldsForCoarseLocation;
- (void)applyCoarseLocationRandomizationWithMaximumDistance:(double)distance;
- (id)initWithLocation:(id)location;
- (id)initWithLocation:(id)location floorOrdinal:(int)ordinal;
- (id)initWithLocation:(id)location isUserLocation:(BOOL)location floorOrdinal:(int)ordinal;
- (id)initWithLatitude:(double)latitude longitude:(double)longitude;
- (id)initWithLatitude:(double)latitude longitude:(double)longitude floorOrdinal:(int)ordinal;
- (id)initWithLatitude:(double)latitude longitude:(double)longitude isUserLocation:(BOOL)location floorOrdinal:(int)ordinal;
- (id)initWithGEOCoordinate:(struct { double x0; double x1; })geocoordinate;
- (id)initWithGEOCoordinate:(struct { double x0; double x1; })geocoordinate isUserLocation:(BOOL)location;
- (id)initWithGEOCoordinate:(struct { double x0; double x1; })geocoordinate floorOrdinal:(int)ordinal;
- (id)initWithGEOCoordinate:(struct { double x0; double x1; })geocoordinate isUserLocation:(BOOL)location floorOrdinal:(int)ordinal;
- (id)init;
- (id)initWithData:(id)data;
- (id)typeAsString:(int)string;
- (int)StringAsType:(id)type;
- (id)courseTypeAsString:(int)string;
- (int)StringAsCourseType:(id)type;
- (id)description;
- (id)dictionaryRepresentation;
- (id)jsonRepresentation;
- (id)initWithDictionary:(id)dictionary;
- (id)initWithJSON:(id)json;
- (void)readAll:(BOOL)all;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (void)clearSensitiveFields:(unsigned long long)fields;
- (BOOL)hasGreenTeaWithValue:(BOOL)value;
- (void)copyTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)mergeFrom:(id)from;
- (void)clearUnknownFields:(BOOL)fields;
- (id)referenceFrameAsString:(int)string;
- (int)StringAsReferenceFrame:(id)frame;
- (id)matchQualityAsString:(int)string;
- (int)StringAsMatchQuality:(id)quality;
- (id)formOfWayAsString:(int)string;
- (int)StringAsFormOfWay:(id)way;
- (id)roadClassAsString:(int)string;
- (int)StringAsRoadClass:(id)class;
- (id)transportTypeAsString:(int)string;
- (int)StringAsTransportType:(id)type;
@end

#endif /* GEOLocation_h */
