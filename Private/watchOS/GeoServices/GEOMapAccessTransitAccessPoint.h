//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOMapAccessTransitAccessPoint_h
#define GEOMapAccessTransitAccessPoint_h
@import Foundation;

#include "GEOMapAccess.h"
#include "GEOMapTransitAccessPoint-Protocol.h"
#include "GEOMapTransitStation-Protocol.h"

@class NSString;
@protocol {shared_ptr<geo::MapAccessPointFeature>="__ptr_"^{MapAccessPointFeature}"__cntrl_"^{__shared_weak_count}};

@interface GEOMapAccessTransitAccessPoint : NSObject<GEOMapTransitAccessPoint> {
  /* instance variables */
  GEOMapAccess *_map;
  struct shared_ptr<geo::MapAccessPointFeature> { struct MapAccessPointFeature *__ptr_; struct __shared_weak_count *__cntrl_; } _accessPoint;
  NSObject<GEOMapTransitStation> *_station;
}

@property (readonly, nonatomic) unsigned long long stationID;
@property (readonly, nonatomic) double groundRadius;
@property (readonly, nonatomic) unsigned char entranceExitType;
@property (readonly, nonatomic) unsigned short accessType;
@property (readonly, nonatomic) struct { double x0; double x1; } coordinate;
@property (readonly, nonatomic) unsigned long long transitID;
@property (readonly, nonatomic) NSString *internalName;
@property (readonly, nonatomic) double boundingRadius;
@property (readonly, nonatomic) struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; } boundingRect;
@property (readonly, nonatomic) struct { double x0; double x1; } * polygonPoints;
@property (readonly, nonatomic) long long polygonPointsCount;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithMap:(id)map accessPoint:(struct shared_ptr<geo::MapAccessPointFeature> { struct MapAccessPointFeature * x0; struct __shared_weak_count * x1; })point;
- (double)distanceInMetersFrom:(struct { double x0; double x1; })from;
- (id)findGeometryWithCompletionHandler:(id /* block */)handler;
- (id)findStops:(id /* block */)stops completionHandler:(id /* block */)handler;
- (id)findStation:(id /* block */)station completionHandler:(id /* block */)handler;
- (id)findAccessPoints:(id /* block */)points completionHandler:(id /* block */)handler;
@end

#endif /* GEOMapAccessTransitAccessPoint_h */
