//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOMapAccessTransitLink_h
#define GEOMapAccessTransitLink_h
@import Foundation;

#include "GEOMapAccessLine.h"
#include "GEOMapTransitLink-Protocol.h"
#include "GEOMapTransitStop-Protocol.h"

@class NSString;
@protocol {shared_ptr<geo::MapEdgeTransit>="__ptr_"^{MapEdgeTransit}"__cntrl_"^{__shared_weak_count}}, {vector<GEOLocationCoordinate2D, std::allocator<GEOLocationCoordinate2D>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<GEOLocationCoordinate2D *, std::allocator<GEOLocationCoordinate2D>>="__value_"^{?}}};

@interface GEOMapAccessTransitLink : GEOMapAccessLine<GEOMapTransitLink> {
  /* instance variables */
  struct shared_ptr<geo::MapEdgeTransit> { struct MapEdgeTransit *__ptr_; struct __shared_weak_count *__cntrl_; } _transitEdge;
  struct vector<GEOLocationCoordinate2D, std::allocator<GEOLocationCoordinate2D>> { struct  *__begin_; struct  *__end_; struct __compressed_pair<GEOLocationCoordinate2D *, std::allocator<GEOLocationCoordinate2D>> { struct  *__value_; } __end_cap_; } _coords;
}

@property (readonly, nonatomic) unsigned long long transitLineID;
@property (readonly, nonatomic) NSString *internalLineName;
@property (readonly, nonatomic) unsigned int minimumTravelTime;
@property (readonly, nonatomic) NSObject<GEOMapTransitStop> *stopFrom;
@property (readonly, nonatomic) NSObject<GEOMapTransitStop> *stopTo;
@property (readonly, nonatomic) unsigned long long coordinateCount;
@property (readonly, nonatomic) struct { double x0; double x1; } * coordinates;
@property (readonly, nonatomic) double length;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithMap:(id)map transitEdge:(struct shared_ptr<geo::MapEdgeTransit> { struct MapEdgeTransit * x0; struct __shared_weak_count * x1; })edge;
- (double)distanceInMetersFrom:(struct { double x0; double x1; })from outClosestCoordinateOnLine:(struct { double x0; double x1; } *)line;
@end

#endif /* GEOMapAccessTransitLink_h */
