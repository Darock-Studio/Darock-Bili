//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOComposedWaypoint_h
#define GEOComposedWaypoint_h
@import Foundation;

#include "PBCodable.h"
#include "GEOLatLng.h"
#include "GEOLocation.h"
#include "GEOMapItemStorage.h"
#include "GEOWaypointInfo.h"
#include "GEOWaypointTyped.h"
#include "NSCopying-Protocol.h"

@class NSData, NSString, PBDataReader;

@interface GEOComposedWaypoint : PBCodable<NSCopying> {
  /* instance variables */
  PBDataReader *_reader;
  unsigned int _readerMarkPos;
  unsigned int _readerMarkLength;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _readerLock;
  struct { unsigned int x :1 has_type; unsigned int x :1 has_isCurrentLocation; unsigned int x :1 has_isOutsideOfflineDownloadedRegion; unsigned int x :1 read_findMyHandleID; unsigned int x :1 read_latLng; unsigned int x :1 read_location; unsigned int x :1 read_mapItemStorage; unsigned int x :1 read_styleAttributesData; unsigned int x :1 read_uniqueWaypointID; unsigned int x :1 read_waypoint; unsigned int x :1 wrote_anyField; } _flags;
}

@property (readonly, nonatomic) GEOWaypointTyped *geoWaypointTyped;
@property (readonly, nonatomic) GEOWaypointInfo *geoWaypointInfo;
@property (readonly, nonatomic) BOOL hasWaypoint;
@property (retain, nonatomic) GEOWaypointTyped *waypoint;
@property (readonly, nonatomic) BOOL hasLatLng;
@property (retain, nonatomic) GEOLatLng *latLng;
@property (readonly, nonatomic) BOOL hasMapItemStorage;
@property (retain, nonatomic) GEOMapItemStorage *mapItemStorage;
@property (readonly, nonatomic) BOOL hasStyleAttributesData;
@property (retain, nonatomic) NSData *styleAttributesData;
@property (readonly, nonatomic) BOOL hasUniqueWaypointID;
@property (retain, nonatomic) NSData *uniqueWaypointID;
@property (readonly, nonatomic) BOOL hasFindMyHandleID;
@property (retain, nonatomic) NSString *findMyHandleID;
@property (nonatomic) BOOL hasIsOutsideOfflineDownloadedRegion;
@property (nonatomic) BOOL isOutsideOfflineDownloadedRegion;
@property (nonatomic) BOOL hasType;
@property (nonatomic) int type;
@property (readonly, nonatomic) BOOL hasLocation;
@property (retain, nonatomic) GEOLocation *location;
@property (nonatomic) BOOL hasIsCurrentLocation;
@property (nonatomic) BOOL isCurrentLocation;

/* class methods */
+ (id)composedWaypointForIdentifier:(id)identifier traits:(id)traits clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForID:(unsigned long long)id resultsProviderID:(int)id contentProvider:(id)provider traits:(id)traits clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForLocation:(id)location mapItem:(id)item traits:(id)traits completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForLocation:(id)location mapItem:(id)item traits:(id)traits auditToken:(id)token completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForCurrentLocation:(id)location traits:(id)traits completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForCurrentLocation:(id)location traits:(id)traits auditToken:(id)token completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForAddressString:(id)string traits:(id)traits clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForSearchString:(id)string completionItem:(id)item traits:(id)traits clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForSearchString:(id)string completionItem:(id)item traits:(id)traits clientAttributes:(id)attributes clientResolvedCompletionHandler:(id /* block */)handler completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForMapItemToRefine:(id)refine traits:(id)traits clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForMapItemToRefine:(id)refine traits:(id)traits auditToken:(id)token clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForMapItem:(id)item traits:(id)traits clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForMapItem:(id)item traits:(id)traits auditToken:(id)token clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForIncompleteMapItem:(id)item traits:(id)traits clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForTransitID:(unsigned long long)id coordinate:(struct { double x0; double x1; })coordinate isCurrentLocation:(BOOL)location traits:(id)traits clientAttributes:(id)attributes completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (id)composedWaypointForWaypointTyped:(id)typed completionHandler:(id /* block */)handler networkActivityHandler:(id /* block */)handler;
+ (void)composedWaypointForMapServiceResponse:(id)response clientAttributes:(id)attributes error:(id)error handler:(id /* block */)handler;
+ (BOOL)isValid:(id)valid;

/* instance methods */
- (id)initWithMapItem:(id)item;
- (id)initWithLocation:(id)location isCurrentLocation:(BOOL)location;
- (id)initWithLocation:(id)location findMyHandleID:(id)id;
- (void)recomputeGeoWaypointTyped;
- (id)uniqueID;
- (id)name;
- (unsigned long long)muid;
- (void)setStyleAttributes:(id)attributes;
- (id)styleAttributes;
- (struct { double x0; double x1; double x2; })coordinate;
- (id)geoMapItem;
- (id)timezone;
- (int)waypointCategory;
- (id)artwork;
- (BOOL)isLocationWaypointType;
- (BOOL)isServerProvidedWaypoint;
- (id)chargingInfo;
- (id)bestLatLng;
- (id)convertToStaticLocation;
- (BOOL)isSameAs:(id)as;
- (BOOL)isSameAs:(id)as comparisonCriteria:(unsigned long long)criteria;
- (id)_muidCandidatesForComparison;
- (id)_locationCandidatesForComparison;
- (id)_addressCandidatesForComparison;
- (id)_regionCandidatesForContainment;
- (id)initWithCompanionWaypoint:(id)waypoint;
- (id)init;
- (id)initWithData:(id)data;
- (id)typeAsString:(int)string;
- (int)StringAsType:(id)type;
- (id)description;
- (id)dictionaryRepresentation;
- (id)jsonRepresentation;
- (id)initWithDictionary:(id)dictionary;
- (id)initWithJSON:(id)json;
- (void)readAll:(BOOL)all;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (void)clearSensitiveFields:(unsigned long long)fields;
- (BOOL)hasGreenTeaWithValue:(BOOL)value;
- (void)copyTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)mergeFrom:(id)from;
@end

#endif /* GEOComposedWaypoint_h */
