//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOResourceManifestServerLocalProxy_h
#define GEOResourceManifestServerLocalProxy_h
@import Foundation;

#include "GEOActiveTileGroup.h"
#include "GEOConfigChangeListenerDelegate-Protocol.h"
#include "GEOKeyBagProtectedDataDidBecomeAvailableObserver-Protocol.h"
#include "GEOPListStateCapturing-Protocol.h"
#include "GEOResourceFiltersManager.h"
#include "GEOResourceFiltersManagerDelegate-Protocol.h"
#include "GEOResourceManifestConfiguration.h"
#include "GEOResourceManifestDownload.h"
#include "GEOResourceManifestDownloadTask.h"
#include "GEOResourceManifestServerProxy-Protocol.h"
#include "GEOResourceManifestServerProxyDelegate-Protocol.h"
#include "GEOTileGroupActivationSession.h"
#include "GEOTileGroupActivationSessionDelegate-Protocol.h"

@class NSArray, NSError, NSMutableArray, NSOperationQueue, NSProgress, NSString, geo_isolater;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface GEOResourceManifestServerLocalProxy : NSObject<GEOResourceFiltersManagerDelegate, GEOPListStateCapturing, GEOKeyBagProtectedDataDidBecomeAvailableObserver, GEOConfigChangeListenerDelegate, GEOTileGroupActivationSessionDelegate, GEOResourceManifestServerProxy> {
  /* instance variables */
  GEOResourceManifestDownloadTask *_manifestDownloadTask;
  NSObject<OS_dispatch_queue> *_workQueue;
  NSOperationQueue *_workOperationQueue;
  GEOResourceManifestConfiguration *_configuration;
  BOOL _wantsManifestUpdateOnReachabilityChange;
  NSObject<OS_dispatch_source> *_manifestUpdateTimer;
  BOOL _wantsTileGroupUpdateOnReachabilityChange;
  NSObject<OS_dispatch_source> *_tileGroupUpdateTimer;
  GEOResourceManifestDownload *_resourceManifest;
  BOOL _started;
  unsigned long long _manifestRetryCount;
  double _lastManifestRetryTimestamp;
  unsigned long long _tileGroupRetryCount;
  double _lastTileGroupRetryTimestamp;
  NSString *_authToken;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _authTokenLock;
  NSError *_lastResourceManifestLoadError;
  NSMutableArray *_manifestUpdateCompletionHandlers;
  NSMutableArray *_opportunisticManifestUpdateCompletionHandlers;
  long long _currentManifestUpdateType;
  GEOResourceFiltersManager *_filtersManager;
  NSArray *_tileGroupMigrators;
  unsigned long long _stateCaptureHandle;
  NSProgress *_updateProgress;
  NSProgress *_currentUpdateProgress;
  GEOTileGroupActivationSession *_tileGroupActivationSession;
  BOOL _tileGroupActivationSessionHasFinishedFirstTileGroupChange;
  BOOL _tileGroupActivationShouldFlushTileCache;
  geo_isolater *_activeTileGroupIsolater;
}

@property (retain, nonatomic) GEOActiveTileGroup *activeTileGroup;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<GEOResourceManifestServerProxyDelegate> *delegate;

/* instance methods */
- (id)serverQueue;
- (id)serverOperationQueue;
- (id)initWithDelegate:(id)delegate configuration:(id)configuration;
- (void)_createMigrators;
- (void)dealloc;
- (void)openConnection;
- (void)closeConnection;
- (id)authToken;
- (id)configuration;
- (void)_startServer;
- (void)valueChangedForGEOConfigKey:(struct { unsigned int x0; void * x1; })key;
- (void)_loadFromDisk;
- (id)_idealTileGroupToUse;
- (void)_considerChangingActiveTileGroup;
- (void)_scheduleTileGroupUpdateTimerWithTimeInterval:(double)interval;
- (void)_tileGroupTimerFired;
- (void)performOpportunisticResourceLoading;
- (void)_forceChangeActiveTileGroup:(id)group flushTileCache:(BOOL)cache;
- (id)migrationTaskOptions;
- (void)_cancelMigrationTasks;
- (void)_cancelManifestUpdate;
- (void)setActiveTileGroupIdentifier:(id)identifier;
- (void)setActiveTileGroupIdentifier:(id)identifier updateType:(long long)type completionHandler:(id /* block */)handler;
- (void)resetActiveTileGroup;
- (void)_activeTileGroupOverridesChanged:(id)changed;
- (BOOL)_writeActiveTileGroupToDisk:(id)disk error:(id *)error;
- (void)_countryProvidersDidChange:(id)change;
- (void)_networkDefaultsDidChange:(id)change;
- (void)_terminationRequested:(id)requested;
- (void)_reachabilityChanged:(id)changed;
- (void)protectedDataDidBecomeAvailable:(id)available;
- (void)_manifestURLDidChange:(id)change;
- (id)_manifestURL;
- (BOOL)_updateManifestIfNecessary:(id /* block */)necessary;
- (void)_updateManifest:(id /* block */)manifest;
- (void)updateIfNecessary:(id /* block */)necessary;
- (void)_setCurrentUpdateType:(long long)type completionBlock:(id /* block */)block;
- (void)forceUpdate:(long long)update completionHandler:(id /* block */)handler;
- (void)cancelCurrentManifestUpdate;
- (id)updateProgress;
- (void)getResourceManifestWithHandler:(id /* block */)handler;
- (void)activateResourceScale:(int)scale;
- (void)deactivateResourceScale:(int)scale;
- (void)activateResourceScenario:(int)scenario;
- (void)deactivateResourceScenario:(int)scenario;
- (unsigned int)maximumZoomLevelForStyle:(int)style scale:(int)scale outSize:(int *)size;
- (void)_scheduleUpdateTimerWithTimeInterval:(double)interval;
- (void)_updateTimerFired;
- (void)setManifestToken:(id)token completionHandler:(id /* block */)handler;
- (void)_handleManifestUpdateError:(id)error;
- (void)_changeActiveTileGroupIfNeededForManifestURL:(id)url oldURL:(id)url;
- (BOOL)_writeManifestToDiskWithUpdatedMetadataForURL:(id)url eTag:(id)tag error:(id *)error;
- (BOOL)_writeManifestToDisk:(id)disk error:(id *)error;
- (void)filtersManagerDidChangeActiveFilters:(id)filters;
- (id)captureStatePlistWithHints:(struct os_state_hints_s { unsigned int x0; char * x1; unsigned int x2; unsigned int x3; } *)hints;
- (void)_addManifestUpdateCompletionHandler:(id /* block */)handler;
- (void)_notifyImmediateManifestUpdateCompletionHandlers:(id)handlers;
- (void)_resetCurrentUpdateState;
- (void)_notifyManifestUpdateCompletionHandlers:(id)handlers;
- (void)_addOpportunisticManifestUpdateCompletionHandler:(id /* block */)handler;
- (void)_notifyOpportunisticManifestUpdateCompletionHandlers:(id)handlers;
- (void)activationSession:(id)session didChangeActiveTileGroup:(id)group completionHandler:(id /* block */)handler;
- (void)activationSession:(id)session didCompleteWithErrors:(id)errors;
@end

#endif /* GEOResourceManifestServerLocalProxy_h */
