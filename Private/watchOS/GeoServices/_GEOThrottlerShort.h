//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef _GEOThrottlerShort_h
#define _GEOThrottlerShort_h
@import Foundation;

#include "_GEOThrottler-Protocol.h"

@class NSString;
@protocol {vector<(anonymous namespace)::Timestamp, std::allocator<(anonymous namespace)::Timestamp>>="__begin_"^{Timestamp}"__end_"^{Timestamp}"__end_cap_"{__compressed_pair<(anonymous namespace)::Timestamp *, std::allocator<(anonymous namespace)::Timestamp>>="__value_"^{Timestamp}}};

@interface _GEOThrottlerShort : NSObject<_GEOThrottler> {
  /* instance variables */
  struct vector<(anonymous namespace)::Timestamp, std::allocator<(anonymous namespace)::Timestamp>> { struct Timestamp *__begin_; struct Timestamp *__end_; struct __compressed_pair<(anonymous namespace)::Timestamp *, std::allocator<(anonymous namespace)::Timestamp>> { struct Timestamp *__value_; } __end_cap_; } _lastRequestTimes;
  unsigned int _currentIndex;
}

@property (readonly, nonatomic) NSString *keyPath;
@property (readonly, nonatomic) double timeWindow;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)stateIsExpired:(id)expired;

/* instance methods */
- (id)initWithKeyPath:(id)path requestCount:(unsigned long long)count interval:(double)interval savedState:(id)state;
- (BOOL)addRequestTimestamp;
- (unsigned long long)remainingEntries;
- (double)timeUntilReset;
- (unsigned int)maxReqCount;
- (id)userInfoForError;
- (BOOL)isExpired;
- (id)captureState;
@end

#endif /* _GEOThrottlerShort_h */
