//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOVLFFrameDetails_h
#define GEOVLFFrameDetails_h
@import Foundation;

#include "PBCodable.h"
#include "GEOVLFUsageTileID.h"
#include "NSCopying-Protocol.h"

@class PBDataReader;

@interface GEOVLFFrameDetails : PBCodable<NSCopying> {
  /* instance variables */
  PBDataReader *_reader;
  unsigned int _readerMarkPos;
  unsigned int _readerMarkLength;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _readerLock;
  struct { unsigned int x :1 has_resultTranslationX; unsigned int x :1 has_resultTranslationY; unsigned int x :1 has_resultTranslationZ; unsigned int x :1 has_timestamp; unsigned int x :1 has_radialDistortion1; unsigned int x :1 has_radialDistortion2; unsigned int x :1 has_resultStatus; unsigned int x :1 has_vioStatus; unsigned int x :1 read_calibrationMatrixs; unsigned int x :1 read_resultPoseRotations; unsigned int x :1 read_slamPoses; unsigned int x :1 read_vioPoses; unsigned int x :1 read_tileId; unsigned int x :1 wrote_anyField; } _flags;
}

@property (nonatomic) BOOL hasVioStatus;
@property (nonatomic) unsigned int vioStatus;
@property (readonly, nonatomic) unsigned long long vioPosesCount;
@property (readonly, nonatomic) float * vioPoses;
@property (readonly, nonatomic) unsigned long long calibrationMatrixsCount;
@property (readonly, nonatomic) float * calibrationMatrixs;
@property (nonatomic) BOOL hasRadialDistortion1;
@property (nonatomic) float radialDistortion1;
@property (nonatomic) BOOL hasRadialDistortion2;
@property (nonatomic) float radialDistortion2;
@property (nonatomic) BOOL hasTimestamp;
@property (nonatomic) double timestamp;
@property (readonly, nonatomic) unsigned long long slamPosesCount;
@property (readonly, nonatomic) float * slamPoses;
@property (readonly, nonatomic) BOOL hasTileId;
@property (retain, nonatomic) GEOVLFUsageTileID *tileId;
@property (readonly, nonatomic) unsigned long long resultPoseRotationsCount;
@property (readonly, nonatomic) double * resultPoseRotations;
@property (nonatomic) BOOL hasResultTranslationX;
@property (nonatomic) double resultTranslationX;
@property (nonatomic) BOOL hasResultTranslationY;
@property (nonatomic) double resultTranslationY;
@property (nonatomic) BOOL hasResultTranslationZ;
@property (nonatomic) double resultTranslationZ;
@property (nonatomic) BOOL hasResultStatus;
@property (nonatomic) int resultStatus;

/* class methods */
+ (BOOL)isValid:(id)valid;

/* instance methods */
- (id)init;
- (id)initWithData:(id)data;
- (void)dealloc;
- (void)clearVioPoses;
- (void)addVioPose:(float)pose;
- (float)vioPoseAtIndex:(unsigned long long)index;
- (void)setVioPoses:(float *)poses count:(unsigned long long)count;
- (void)clearCalibrationMatrixs;
- (void)addCalibrationMatrix:(float)matrix;
- (float)calibrationMatrixAtIndex:(unsigned long long)index;
- (void)setCalibrationMatrixs:(float *)matrixs count:(unsigned long long)count;
- (void)clearSlamPoses;
- (void)addSlamPose:(float)pose;
- (float)slamPoseAtIndex:(unsigned long long)index;
- (void)setSlamPoses:(float *)poses count:(unsigned long long)count;
- (void)clearResultPoseRotations;
- (void)addResultPoseRotation:(double)rotation;
- (double)resultPoseRotationAtIndex:(unsigned long long)index;
- (void)setResultPoseRotations:(double *)rotations count:(unsigned long long)count;
- (id)description;
- (id)dictionaryRepresentation;
- (id)jsonRepresentation;
- (id)initWithDictionary:(id)dictionary;
- (id)initWithJSON:(id)json;
- (void)readAll:(BOOL)all;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (void)copyTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)mergeFrom:(id)from;
@end

#endif /* GEOVLFFrameDetails_h */
