//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOMapURLBuilder_h
#define GEOMapURLBuilder_h
@import Foundation;

#include "GEOEnrichmentInfo.h"
#include "GEOURLCollectionStorage.h"
#include "GEOURLExtraStorage.h"

@class NSMutableDictionary;

@interface GEOMapURLBuilder : NSObject {
  /* instance variables */
  NSMutableDictionary *_dict;
  id _reserved;
}

@property (retain, nonatomic) GEOURLCollectionStorage *collectionStorage;
@property (retain, nonatomic) GEOURLExtraStorage *extraStorage;
@property (retain, nonatomic) GEOEnrichmentInfo *enrichmentInfo;

/* class methods */
+ (id)URLForSearch:(id)search;
+ (id)URLForSearch:(id)search near:(struct { double x0; double x1; })near;
+ (id)URLForSearch:(id)search at:(struct { double x0; double x1; })at span:(struct { double x0; double x1; })span;
+ (id)URLForSearch:(id)search at:(struct { double x0; double x1; })at zoomLevel:(double)level;
+ (id)URLForAddress:(id)address;
+ (id)URLForAddress:(id)address label:(id)label;
+ (id)URLForCoordinate:(struct { double x0; double x1; })coordinate;
+ (id)URLForCoordinate:(struct { double x0; double x1; })coordinate label:(id)label;
+ (id)URLForCoordinate:(struct { double x0; double x1; })coordinate address:(id)address label:(id)label;
+ (id)URLForCoordinate:(struct { double x0; double x1; })coordinate address:(id)address label:(id)label extraStorage:(id)storage;
+ (id)URLForCoordinate:(struct { double x0; double x1; })coordinate address:(id)address label:(id)label extraStorage:(id)storage useWebPlaceCard:(BOOL)card;
+ (id)URLForDirectionsFrom:(id)from to:(id)to;
+ (id)URLForDirectionsFrom:(id)from toDestinations:(id)destinations;
+ (id)URLForDirectionsFrom:(id)from to:(id)to transport:(int)transport;
+ (id)URLForDirectionsFrom:(id)from toDestinations:(id)destinations transport:(int)transport;
+ (id)URLForDirectionsFromHereTo:(id)to transport:(int)transport;
+ (id)URLForDirectionsFromHereToDestinations:(id)destinations transport:(int)transport;
+ (id)URLForDirectionsFromHereTo:(id)to;
+ (id)URLForDirectionsFromHereToDestinations:(id)destinations;
+ (id)URLForDirectionsFromHereTo:(id)to label:(id)label muid:(unsigned long long)muid provider:(int)provider transport:(int)transport;
+ (id)URLForCameraAt:(struct { double x0; double x1; })at altitude:(double)altitude rotation:(double)rotation tilt:(double)tilt roll:(double)roll;
+ (id)URLForCameraAt:(struct { double x0; double x1; })at zoomLevel:(double)level rotation:(double)rotation tilt:(double)tilt roll:(double)roll;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct { double x0; double x1; })coordinate address:(id)address;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct { double x0; double x1; })coordinate address:(id)address extraStorage:(id)storage;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct { double x0; double x1; })coordinate address:(id)address extraStorage:(id)storage useWebPlaceCard:(BOOL)card;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct { double x0; double x1; })coordinate address:(id)address extraStorage:(id)storage useWebPlaceCard:(BOOL)card enrichmentInfo:(id)info;
+ (id)URLForExternalBusiness:(id)business id:(id)id ofContentProvider:(id)provider;
+ (id)URLForTransitLine:(unsigned long long)line withName:(id)name mapRegion:(id)region;
+ (id)URLForShowFavoritesType:(long long)type;
+ (id)URLForCollectionStorage:(id)storage;
+ (id)URLForCuratedCollection:(unsigned long long)collection provider:(int)provider;
+ (id)URLForPublisher:(unsigned long long)publisher provider:(int)provider;

/* instance methods */
- (id)initForSearch:(id)search;
- (void)setNear:(struct { double x0; double x1; })near;
- (void)setSearchLocation:(struct { double x0; double x1; })location span:(struct { double x0; double x1; })span;
- (void)setSearchLocation:(struct { double x0; double x1; })location zoomLevel:(double)level;
- (id)initForCoordinate:(struct { double x0; double x1; })coordinate address:(id)address label:(id)label;
- (id)initForCoordinate:(struct { double x0; double x1; })coordinate label:(id)label;
- (id)initForAddress:(id)address label:(id)label;
- (void)setDisplayRegion:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })region;
- (id)initForDirectionsTo:(id)to;
- (id)initForDirectionsToAddresses:(id)addresses;
- (void)setStartAddress:(id)address;
- (void)setTransportType:(int)type;
- (void)setDestinationLabel:(id)label;
- (void)setDestinationMUID:(unsigned long long)muid provider:(int)provider;
- (id)initForCameraAt:(struct { double x0; double x1; })at altitude:(double)altitude rotation:(double)rotation tilt:(double)tilt roll:(double)roll;
- (id)initForCameraAt:(struct { double x0; double x1; })at zoomLevel:(double)level rotation:(double)rotation tilt:(double)tilt roll:(double)roll;
- (id)initForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider;
- (id)initForExternalBusiness:(id)business id:(id)id ofContentProvider:(id)provider;
- (void)setBusinessCoordinate:(struct { double x0; double x1; })coordinate;
- (void)setBusinessAddress:(id)address;
- (void)setMapRegion:(id)region;
- (id)initForTransitLine:(unsigned long long)line withName:(id)name mapRegion:(id)region;
- (id)initForShowFavoritesType:(long long)type;
- (id)initForCollectionStorage:(id)storage;
- (id)initForCuratedCollection:(unsigned long long)collection provider:(int)provider;
- (id)initForPublisher:(unsigned long long)publisher provider:(int)provider;
- (id)build;
- (id)buildForWeb;
- (id)buildForCollections;
- (id)buildForWebPlaceCard;
- (void)setMapType:(int)type;
- (void)setContentProvider:(id)provider;
- (void)addCodable:(id)codable key:(id)key compressedKey:(id)key;
- (id)_stringForCoordinate2DPointer:(struct { double x0; double x1; } *)dpointer;
- (id)_stringForCoordinateSpanPointer:(struct { double x0; double x1; } *)pointer;
- (void)_removeParametersAllBut:(id)but;
@end

#endif /* GEOMapURLBuilder_h */
