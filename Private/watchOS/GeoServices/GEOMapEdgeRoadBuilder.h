//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOMapEdgeRoadBuilder_h
#define GEOMapEdgeRoadBuilder_h
@import Foundation;

#include "GEOMapEdgeBuilder.h"
#include "GEOVectorTile.h"

@protocol {deque<GEORoadEdge *, std::allocator<GEORoadEdge *>>="__map_"{__split_buffer<GEORoadEdge *__strong *, std::allocator<GEORoadEdge *__strong *>>="__first_"^^@"__begin_"^^@"__end_"^^@"__end_cap_"{__compressed_pair<GEORoadEdge *__strong **, std::allocator<GEORoadEdge *__strong *>>="__value_"^^@}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<GEORoadEdge *>>="__value_"Q}};

@interface GEOMapEdgeRoadBuilder : GEOMapEdgeBuilder {
  /* instance variables */
  struct deque<GEORoadEdge *, std::allocator<GEORoadEdge *>> { struct __split_buffer<GEORoadEdge *__strong *, std::allocator<GEORoadEdge *__strong *>> { __begin_ * * *__first_; __end_ * * * x0; __end_cap_ * * * x1; struct __compressed_pair<GEORoadEdge *__strong **, std::allocator<GEORoadEdge *__strong *>> { id * *__value_; } x2; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<GEORoadEdge *>> { unsigned long long __value_; } __size_; } _edges;
  GEOVectorTile *_retainedTile;
}

/* instance methods */
- (id)initWithMap:(id)map roadFeature:(id)feature shouldFlip:(BOOL)flip;
- (void)dealloc;
- (unsigned long long)_maxTileCount;
- (void)_buildCompleteEdge;
- (BOOL)_findEdgeAheadInTile:(id)tile;
- (BOOL)_findEdgeBehindInTile:(id)tile;
- (BOOL)_shouldFindEdgeAhead;
- (BOOL)_shouldFindEdgeBehind;
- (unsigned long long)_connectionTypeForEdge:(id)edge points:(struct GeoCodecsVectorTilePoint { float x0; float x1; } *)points connectingTilePoint:(struct Matrix<float, 2, 1> { float x0[2] })point;
- (struct Matrix<float, 2, 1> { float x0[2] })_firstPoint;
- (struct Matrix<float, 2, 1> { float x0[2] })_lastPoint;
- (id)_firstTile;
- (id)_lastTile;
- (id)_tileFinderForMap:(id)map center:(struct { double x0; double x1; })center radius:(double)radius;
@end

#endif /* GEOMapEdgeRoadBuilder_h */
