//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEONavigationServer_h
#define GEONavigationServer_h
@import Foundation;

#include "GEOArrivalTimeAndDistanceInfo.h"
#include "GEOComposedRoute.h"
#include "GEOLocation.h"
#include "GEONavdPeer.h"
#include "GEONavigationServerPushStateXPCInterface-Protocol.h"

@class NSData, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface GEONavigationServer : NSObject<GEONavigationServerPushStateXPCInterface> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  GEONavdPeer *_pushStatePeer;
  NSMutableSet *_listenerPeers;
  NSMutableSet *_unEntitledPeers;
  BOOL _isListenerConnectionOpen;
  int _listenerConnectionOpenToken;
  unsigned long long _state;
  int _transportType;
  GEOLocation *_lastLocation;
  struct { unsigned int index; float offset; } _lastRouteMatchedCoordinate;
  BOOL _isResumingMultipointRoute;
  GEOComposedRoute *_route;
  GEOArrivalTimeAndDistanceInfo *_timeAndDistanceInfo;
  NSData *_routeSummaryData;
  NSData *_transitSummaryData;
  NSData *_guidanceStateData;
  NSData *_activeRouteDetailsData;
  NSData *_stepIndexData;
  NSData *_stepNameInfoData;
  NSData *_rideSelectionsData;
  NSData *_positionFromSignData;
  NSData *_positionFromManeuverData;
  NSData *_positionFromDestinationData;
  NSData *_navigationVoiceVolumeData;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)identifier;

/* instance methods */
- (id)init;
- (BOOL)shouldAcceptNewConnection:(id)connection shouldCreateNavigationPeer:(BOOL)peer;
- (void)setNavigationSessionState:(unsigned long long)state transportType:(int)type isResumingMultipointRoute:(BOOL)route;
- (void)setLocation:(id)location routeMatchedCoordinate:(struct { unsigned int x0; float x1; })coordinate;
- (void)setRoute:(id)route;
- (void)setETAUpdate:(id)etaupdate;
- (void)updateTrafficForCurrentRoute:(id)route;
- (void)setArrivedAtWaypoint:(id)waypoint endOfLegIndex:(unsigned long long)index;
- (void)setResumedNavigatingFromWaypoint:(id)waypoint endOfLegIndex:(unsigned long long)index;
- (void)setRouteSummaryWithNavigationRouteSummaryData:(id)data;
- (void)setRouteSummaryWithTransitSummaryData:(id)data;
- (void)setRouteSummaryWithGuidanceStateData:(id)data;
- (void)setRouteSummaryWithActiveRouteDetailsData:(id)data;
- (void)setRouteSummaryWithStepIndexData:(id)data;
- (void)setRouteSummaryWithStepNameInfoData:(id)data;
- (void)setRouteSummaryWithRideSelectionsData:(id)data;
- (void)setRouteSummaryWithPositionFromSignData:(id)data;
- (void)setRouteSummaryWithPositionFromManeuverData:(id)data;
- (void)setRouteSummaryWithPositionFromDestinationData:(id)data;
- (void)setNavigationVoiceVolumeWithData:(id)data;
- (void)setCurrentRoadName:(id)name;
- (void)_requestRouteWithPeer:(id)peer;
- (void)_requestETAWithPeer:(id)peer;
- (void)_requestRouteSummaryWithPeer:(id)peer;
- (void)_requestTransitSummaryWithPeer:(id)peer;
- (void)_requestGuidanceStateWithPeer:(id)peer;
- (void)_requestActiveRouteDetailsDataWithPeer:(id)peer;
- (void)_requestStepIndexWithPeer:(id)peer;
- (void)_requestStepNameInfoWithPeer:(id)peer;
- (void)_requestRideSelectionsWithPeer:(id)peer;
- (void)_requestPositionFromSignWithPeer:(id)peer;
- (void)_requestPositionFromManeuverWithPeer:(id)peer;
- (void)_requestPositionFromDestinationWithPeer:(id)peer;
- (void)_requestNavigationVoiceVolumeWithPeer:(id)peer;
- (void)_updateAllPeersWithMessage:(long long)message data:(id)data;
- (void)_forEachValidPeer:(id /* block */)peer;
- (void)_forEachValidPeerOnIsolationQueue:(id /* block */)queue;
- (void)_sendMessage:(long long)message data:(id)data toPeer:(id)peer;
- (void)clearAllData;
- (void)_openPushStatePeerConnection:(id)connection;
- (void)_closePushStatePeerConnection;
- (void)_notifyListenersOpenConnection;
@end

#endif /* GEONavigationServer_h */
