//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEODataURLSessionTask_h
#define GEODataURLSessionTask_h
@import Foundation;

#include "GEOClientMetrics.h"
#include "GEODataRequest.h"
#include "GEODataURLSessionTaskDelegate-Protocol.h"
#include "GEORequestCounterTicket-Protocol.h"

@class NSData, NSDate, NSError, NSHTTPURLResponse, NSMutableData, NSString, NSURL, NSURLRequest, NSURLSessionTask, NSURLSessionTaskMetrics;
@protocol OS_dispatch_queue, OS_os_activity, OS_voucher;

@interface GEODataURLSessionTask : NSObject {
  /* instance variables */
  NSError *_nonBackingTaskError;
  double _endTime;
  BOOL _backingTaskNeedsResume;
  unsigned int _qos;
  NSDate *_originalStartDate;
  NSObject<OS_voucher> *_voucher;
  unsigned long long _cachedDownloadFileSize;
}

@property (readonly, nonatomic) double elapsedTime;
@property (readonly, nonatomic) double loadTime;
@property (readonly, nonatomic) NSString *entityTag;
@property (readonly, nonatomic) NSString *contentLengthString;
@property (readonly, nonatomic) unsigned long long contentLength;
@property (readonly, nonatomic) BOOL failedDueToCancel;
@property (readonly, nonatomic) long long HTTPStatusCode;
@property (readonly, nonatomic) NSURL *originalRequestURL;
@property (readonly, nonatomic) NSObject<OS_os_activity> *activity;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *sessionIsolation;
@property (readonly, weak, nonatomic) NSObject<GEODataURLSessionTaskDelegate> *delegate;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (copy, nonatomic) NSData *cachedData;
@property (readonly, nonatomic) GEODataRequest *request;
@property (readonly, nonatomic) double startTime;
@property (readonly, nonatomic) BOOL finished;
@property (readonly, nonatomic) NSURLSessionTask *backingTask;
@property (nonatomic) unsigned int sessionIdentifier;
@property (nonatomic) BOOL receivedRNFNotification;
@property (readonly, nonatomic) NSData *receivedData;
@property (readonly, copy, nonatomic) NSURL *downloadedFileURL;
@property (readonly, nonatomic) unsigned long long receivedDataLength;
@property (readonly, nonatomic) NSHTTPURLResponse *response;
@property (retain, nonatomic) NSError *error;
@property (readonly, nonatomic) NSURLRequest *originalURLRequest;
@property (readonly, nonatomic) NSString *remoteAddressAndPort;
@property (readonly, nonatomic) BOOL protocolBufferHasPreamble;
@property (readonly, nonatomic) struct { int x0; union { int x0; int x1; int x2; } x1; } requestKind;
@property float priority;
@property (readonly, nonatomic) unsigned long long outgoingPayloadSize;
@property (readonly, nonatomic) unsigned long long incomingPayloadSize;
@property (readonly, nonatomic) BOOL failedDueToCancel;
@property (readonly, nonatomic) NSObject<GEORequestCounterTicket> *requestCounterTicket;
@property (readonly, nonatomic) GEOClientMetrics *clientMetrics;
@property (readonly, nonatomic) unsigned long long requestedMultipathServiceType;
@property (readonly, nonatomic) BOOL mptcpNegotiated;
@property (readonly, nonatomic) NSURLSessionTaskMetrics *urlTaskMetrics;

/* instance methods */
- (BOOL)validateTileResponse:(BOOL)response error:(id *)error;
- (BOOL)validateNonEmptyResponseWithError:(id *)error;
- (BOOL)validateContentLengthWithError:(id *)error;
- (double)loadTimeIncludingTask:(id)task;
- (BOOL)didValidateEntityTagForData:(id *)data entityTag:(id *)tag;
- (id)_createBackingTaskWithRequest:(id)request session:(id)session;
- (id)createURLSessionTaskWithSession:(id)session request:(id)request;
- (id)createURLRequest;
- (void)dataURLSession:(id)urlsession willSendRequestForEstablishedConnection:(id)connection completionHandler:(id /* block */)handler;
- (void)updateRequest:(id)request completionHandler:(id /* block */)handler;
- (void)dataURLSession:(id)urlsession didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)didReceiveData:(id)data;
- (void)dataURLSession:(id)urlsession taskDidCompleteWithError:(id)error;
- (void)didCollectMetrics:(id)metrics;
- (void)backingTask:(id)task didBecomeDownloadTask:(id)task;
- (void)didFinishDownloadingToURL:(id)url;
- (id)init;
- (id)initWithSession:(id)session delegate:(id)delegate delegateQueue:(id)queue requestKind:(struct { int x0; union { int x0; int x1; int x2; } x1; })kind priority:(float)priority;
- (void)start;
- (void)_start;
- (void)_prepareForRestart;
- (void)cancel;
- (id)description;
- (id)debugDescription;
- (void)notifyDelegateWithSession:(id)session;
- (void)delegateAsync:(id /* block */)async;
- (BOOL)validateTransportWithError:(id *)error;
@end

#endif /* GEODataURLSessionTask_h */
