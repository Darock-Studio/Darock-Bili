//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOTileLoaderInternal_h
#define GEOTileLoaderInternal_h
@import Foundation;

#include "GEOTilePool.h"

@protocol {deque<ErrorInfo, std::allocator<ErrorInfo>>="__map_"{__split_buffer<ErrorInfo *, std::allocator<ErrorInfo *>>="__first_"^^{ErrorInfo}"__begin_"^^{ErrorInfo}"__end_"^^{ErrorInfo}"__end_cap_"{__compressed_pair<ErrorInfo **, std::allocator<ErrorInfo *>>="__value_"^^{ErrorInfo}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<ErrorInfo>>="__value_"Q}}, {list<LoadItem, std::allocator<LoadItem>>="__end_"{__list_node_base<LoadItem, void *>="__prev_"^v"__next_"^v}"__size_alloc_"{__compressed_pair<unsigned long, std::allocator<std::__list_node<LoadItem, void *>>>="__value_"Q}}, {list<_CacheRequester<void (^)(unsigned long long)>, std::allocator<_CacheRequester<void (^)(unsigned long long)>>>="__end_"{__list_node_base<_CacheRequester<void (^)(unsigned long long)>, void *>="__prev_"^v"__next_"^v}"__size_alloc_"{__compressed_pair<unsigned long, std::allocator<std::__list_node<_CacheRequester<void (^)(unsigned long long)>, void *>>>="__value_"Q}}, {unique_ptr<geo::DispatchTimer, std::default_delete<geo::DispatchTimer>>="__ptr_"{__compressed_pair<geo::DispatchTimer *, std::default_delete<geo::DispatchTimer>>="__value_"^{DispatchTimer}}};

@interface GEOTileLoaderInternal : NSObject {
  /* instance variables */
  struct list<LoadItem, std::allocator<LoadItem>> { struct __list_node_base<LoadItem, void *> { void *__prev_; void *__next_; } __end_; struct __compressed_pair<unsigned long, std::allocator<std::__list_node<LoadItem, void *>>> { unsigned long long __value_; } __size_alloc_; } _loadItems;
  GEOTilePool *_cache;
  GEOTilePool *_expiringCache;
  struct unique_ptr<geo::DispatchTimer, std::default_delete<geo::DispatchTimer>> { struct __compressed_pair<geo::DispatchTimer *, std::default_delete<geo::DispatchTimer>> { struct DispatchTimer *__value_; } __ptr_; } _timer;
  struct list<_CacheRequester<void (^)(unsigned long long)>, std::allocator<_CacheRequester<void (^)(unsigned long long)>>> { struct __list_node_base<_CacheRequester<void (^)(unsigned long long)>, void *> { void *__prev_; void *__next_; } __end_; struct __compressed_pair<unsigned long, std::allocator<std::__list_node<_CacheRequester<void (^)(unsigned long long)>, void *>>> { unsigned long long __value_; } __size_alloc_; } _freeableSizeRequesters;
  atomic int _memoryHits;
  atomic int _diskHits;
  atomic int _networkHits;
  struct deque<ErrorInfo, std::allocator<ErrorInfo>> { struct __split_buffer<ErrorInfo *, std::allocator<ErrorInfo *>> { struct ErrorInfo * *__first_; struct ErrorInfo * *__begin_; struct ErrorInfo * *__end_; struct __compressed_pair<ErrorInfo **, std::allocator<ErrorInfo *>> { struct ErrorInfo * *__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<ErrorInfo>> { unsigned long long __value_; } __size_; } _recentErrors;
}

/* instance methods */
@end

#endif /* GEOTileLoaderInternal_h */
