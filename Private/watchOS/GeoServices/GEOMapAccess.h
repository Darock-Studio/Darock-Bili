//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOMapAccess_h
#define GEOMapAccess_h
@import Foundation;

#include "GEOMapRequestManager.h"
#include "GEOMapAccessRestrictions-Protocol.h"

@protocol OS_dispatch_queue;

@interface GEOMapAccess : GEOMapRequestManager {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_callbackQueue;
}

@property (readonly, nonatomic) unsigned long long roadsZoomLevel;
@property (readonly, nonatomic) unsigned long long transitZoomLevel;
@property (readonly, nonatomic) unsigned long long buildingsZoomLevel;
@property (nonatomic) BOOL useMapMatchingTilesetForRoads;
@property (readonly, nonatomic) BOOL allowsNetworkTileLoad;
@property (weak, nonatomic) NSObject<GEOMapAccessRestrictions> *restrictions;
@property (copy, nonatomic) id /* block */ tileErrorHandler;
@property (nonatomic) unsigned int zoomLevel;
@property (readonly, nonatomic) unsigned int minZoomLevel;
@property (readonly, nonatomic) unsigned int maxZoomLevel;
@property (readonly, nonatomic) unsigned int maxTransitZoomLevel;

/* class methods */
+ (BOOL)supportsRealisticMap;
+ (BOOL)supportsTransitMap;
+ (id)realisticMap;
+ (id)transitMap;
+ (id)map;
+ (BOOL)supportsRoadMapAccess;
+ (BOOL)supportsTransitMapAccess;
+ (BOOL)supportsBuildingMapAccess;

/* instance methods */
- (id)init;
- (id)callbackQueue;
- (void)setCallbackQueue:(id)queue;
- (id)findClosestNamedFeaturesAtCoordinate:(struct { double x0; double x1; })coordinate roadHandler:(id /* block */)handler pointHandler:(id /* block */)handler polygonHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findClosestRoadAtCoordinate:(struct { double x0; double x1; })coordinate roadHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findRoadEdgesWithin:(double)within of:(struct { double x0; double x1; })of edgeHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findRoadsWithin:(double)within of:(struct { double x0; double x1; })of handler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitEdgesWithin:(double)within of:(struct { double x0; double x1; })of edgeHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitLinksWithin:(double)within of:(struct { double x0; double x1; })of linkHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitPointsWithin:(double)within of:(struct { double x0; double x1; })of pointHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitNodesWithin:(double)within of:(struct { double x0; double x1; })of nodeHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitStationsWithin:(double)within of:(struct { double x0; double x1; })of stationHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitStopsWithin:(double)within of:(struct { double x0; double x1; })of stopHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitHallsWithin:(double)within of:(struct { double x0; double x1; })of hallHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitPointWithID:(unsigned long long)id near:(struct { double x0; double x1; })near pointHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitNodeWithID:(unsigned long long)id near:(struct { double x0; double x1; })near nodeHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitStationWithID:(unsigned long long)id near:(struct { double x0; double x1; })near stationHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitStopWithID:(unsigned long long)id near:(struct { double x0; double x1; })near stopHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitHallWithID:(unsigned long long)id near:(struct { double x0; double x1; })near hallHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findTransitPointWithParentID:(unsigned long long)id near:(struct { double x0; double x1; })near type:(unsigned long long)type pointHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)findBuildingsWithin:(double)within of:(struct { double x0; double x1; })of buildingHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)preloadRoadTilesNearCoordinate:(struct { double x0; double x1; })coordinate radius:(double)radius completionHandler:(id /* block */)handler;
- (void)preloadTransitTilesNearCoordinate:(struct { double x0; double x1; })coordinate radius:(double)radius completionHandler:(id /* block */)handler;
- (void)preloadBuildingTilesNearCoordinate:(struct { double x0; double x1; })coordinate radius:(double)radius completionHandler:(id /* block */)handler;
- (BOOL)_hasLoadedTilesNearCoordinate:(struct { double x0; double x1; })coordinate radius:(double)radius zoomLevel:(unsigned long long)level tileStyle:(int)style tileSize:(int)size tileScale:(int)scale;
- (BOOL)hasLoadedRoadTilesNearCoordinate:(struct { double x0; double x1; })coordinate radius:(double)radius;
- (BOOL)hasLoadedTransitTilesNearCoordinate:(struct { double x0; double x1; })coordinate radius:(double)radius;
- (BOOL)hasLoadedBuildingTilesNearCoordinate:(struct { double x0; double x1; })coordinate radius:(double)radius;
- (id)findRoadTilesWithin:(double)within of:(struct { double x0; double x1; })of tileHander:(id /* block */)hander completionHandler:(id /* block */)handler;
- (id)buildMapEdgeTransitFrom:(const struct TransitEdgePiece { id x0; unsigned long long x1; id x2; unsigned int x3; BOOL x4; } *)from edgeHandler:(id /* block */)handler;
- (id)_findTransitPointsWithin:(double)within of:(struct { double x0; double x1; })of type:(unsigned long long)type pointHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)_findTransitPointWithID:(unsigned long long)id near:(struct { double x0; double x1; })near type:(unsigned long long)type pointHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)_transitPointForTransitMapNode:(struct shared_ptr<geo::MapNodeTransit> { struct MapNodeTransit * x0; struct __shared_weak_count * x1; })node;
@end

#endif /* GEOMapAccess_h */
