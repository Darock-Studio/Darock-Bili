//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef PathCodec_h
#define PathCodec_h
@import Foundation;

@interface PathCodec : NSObject
/* class methods */
+ (struct RoutingPathLeg { undefined * * x0; struct InternalMetadata { void * x0; } x1; struct HasBits<1UL> { unsigned int x0[1] } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__cxx_atomic_base_impl<int>> { atomic  x0; int x1; } x0; } x0; } x3; struct RepeatedPtrField<maps::path_codec::geo3::RoutingPathPoint> { struct Arena * x0; int x1; int x2; struct Rep * x3; } x4; struct ArenaStringPtr { struct TaggedPtr<std::string> { void * x0; } x0; } x5; })routingPathLegForData:(id)data;
+ (id)dataForRoutingPathLeg:(const void *)leg;
+ (id)descriptionForRoutingPathLeg:(const void *)leg;
+ (void)compressInPlace:(void *)place;
+ (void)decompressInPlace:(void *)place;
+ (struct RoutingPathLeg { undefined * * x0; struct InternalMetadata { void * x0; } x1; struct HasBits<1UL> { unsigned int x0[1] } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__cxx_atomic_base_impl<int>> { atomic  x0; int x1; } x0; } x0; } x3; struct RepeatedPtrField<maps::path_codec::geo3::RoutingPathPoint> { struct Arena * x0; int x1; int x2; struct Rep * x3; } x4; struct ArenaStringPtr { struct TaggedPtr<std::string> { void * x0; } x0; } x5; })compress:(const void *)compress;
+ (struct RoutingPathLeg { undefined * * x0; struct InternalMetadata { void * x0; } x1; struct HasBits<1UL> { unsigned int x0[1] } x2; struct CachedSize { struct atomic<int> { struct __cxx_atomic_impl<int, std::__cxx_atomic_base_impl<int>> { atomic  x0; int x1; } x0; } x0; } x3; struct RepeatedPtrField<maps::path_codec::geo3::RoutingPathPoint> { struct Arena * x0; int x1; int x2; struct Rep * x3; } x4; struct ArenaStringPtr { struct TaggedPtr<std::string> { void * x0; } x0; } x5; })decompress:(const void *)decompress;
@end

#endif /* PathCodec_h */
