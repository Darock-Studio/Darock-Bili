//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOPDHours_h
#define GEOPDHours_h
@import Foundation;

#include "PBCodable.h"
#include "GEOPDHoursThreshold.h"
#include "NSCopying-Protocol.h"

@class PBDataReader, PBUnknownFields;

@interface GEOPDHours : PBCodable<NSCopying> {
  /* instance variables */
  PBDataReader *_reader;
  unsigned long long _timeRangesSpace;
  unsigned int _readerMarkPos;
  unsigned int _readerMarkLength;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _readerLock;
  struct { unsigned int x :1 read_unknownFields; unsigned int x :1 read_days; unsigned int x :1 read_timeRanges; unsigned int x :1 read_hoursThreshold; unsigned int x :1 wrote_anyField; } _flags;
}

@property (readonly, nonatomic) unsigned long long daysCount;
@property (readonly, nonatomic) int * days;
@property (readonly, nonatomic) unsigned long long timeRangesCount;
@property (readonly, nonatomic) struct GEOPDLocalTimeRange { unsigned int x0; unsigned int x1; struct { unsigned int x0 :1; unsigned int x1 :1; } x2; } * timeRanges;
@property (readonly, nonatomic) BOOL hasHoursThreshold;
@property (retain, nonatomic) GEOPDHoursThreshold *hoursThreshold;
@property (readonly, nonatomic) PBUnknownFields *unknownFields;

/* class methods */
+ (BOOL)operatingHoursAvailableForPlaceData:(id)data;
+ (id)_allHoursForPlaceData:(id)data;
+ (BOOL)currentOperatingHoursAvailableForPlaceData:(id)data withTimeZone:(id)zone;
+ (id)completeOperatingHoursForPlaceData:(id)data date:(id)date withTimeZone:(id)zone;
+ (BOOL)isValid:(id)valid;

/* instance methods */
- (id)init;
- (id)initWithData:(id)data;
- (void)dealloc;
- (void)clearDays;
- (void)addDay:(int)day;
- (int)dayAtIndex:(unsigned long long)index;
- (void)setDays:(int *)days count:(unsigned long long)count;
- (id)daysAsString:(int)string;
- (int)StringAsDays:(id)days;
- (void)clearTimeRanges;
- (void)addTimeRange:(struct GEOPDLocalTimeRange { unsigned int x0; unsigned int x1; struct { unsigned int x0 :1; unsigned int x1 :1; } x2; })range;
- (struct GEOPDLocalTimeRange { unsigned int x0; unsigned int x1; struct { unsigned int x0 :1; unsigned int x1 :1; } x2; })timeRangeAtIndex:(unsigned long long)index;
- (void)setTimeRanges:(struct GEOPDLocalTimeRange { unsigned int x0; unsigned int x1; struct { unsigned int x0 :1; unsigned int x1 :1; } x2; } *)ranges count:(unsigned long long)count;
- (id)description;
- (id)dictionaryRepresentation;
- (id)jsonRepresentation;
- (id)initWithDictionary:(id)dictionary;
- (id)initWithJSON:(id)json;
- (void)readAll:(BOOL)all;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (void)copyTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)mergeFrom:(id)from;
- (void)clearUnknownFields:(BOOL)fields;
@end

#endif /* GEOPDHours_h */
