//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOAlmanac_h
#define GEOAlmanac_h
@import Foundation;

#include "GEOAlmanacRiseTransitSet.h"

@class NSDate;

@interface GEOAlmanac : NSObject {
  /* instance variables */
  struct { double latitude; double longitude; } _location;
  double _altitude;
  GEOAlmanacRiseTransitSet *_previousRiseTransitSet;
  GEOAlmanacRiseTransitSet *_currentRiseTransitSet;
  GEOAlmanacRiseTransitSet *_nextRiseTransitSet;
}

@property (readonly, nonatomic) BOOL isDayLight;
@property (readonly, nonatomic) NSDate *previousSunrise;
@property (readonly, nonatomic) NSDate *previousTransit;
@property (readonly, nonatomic) NSDate *previousSunset;
@property (readonly, nonatomic) NSDate *sunrise;
@property (readonly, nonatomic) NSDate *transit;
@property (readonly, nonatomic) NSDate *sunset;
@property (readonly, nonatomic) NSDate *nextSunrise;
@property (readonly, nonatomic) NSDate *nextTransit;
@property (readonly, nonatomic) NSDate *nextSunset;

/* instance methods */
- (void)calculateAstronomicalTimeForLocation:(struct { double x0; double x1; })location;
- (void)calculateAstronomicalTimeForLocation:(struct { double x0; double x1; })location altitudeInDegrees:(double)degrees;
- (void)calculateAstronomicalTimeForLocation:(struct { double x0; double x1; })location time:(double)time;
- (void)calculateAstronomicalTimeForLocation:(struct { double x0; double x1; })location time:(double)time altitudeInDegrees:(double)degrees;
- (void)calculateAstronomicalTimeForLocation:(struct { double x0; double x1; })location time:(double)time altitudeInDegrees:(double)degrees options:(unsigned long long)options;
- (void)calculateAstronomicalTimeForLocation:(struct { double x0; double x1; })location date:(id)date altitudeInDegrees:(double)degrees options:(unsigned long long)options;
- (void)calculateGeocentricDirectionForSunX:(double *)x Y:(double *)y Z:(double *)z;
- (void)calculateGeocentricDirectionForSunX:(double *)x Y:(double *)y Z:(double *)z date:(id)date;
- (BOOL)isDayLightForTime:(double)time;
- (BOOL)isDayLightForDate:(id)date;
- (id)description;
@end

#endif /* GEOAlmanac_h */
