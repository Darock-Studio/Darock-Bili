//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEOActiveTileSet_h
#define GEOActiveTileSet_h
@import Foundation;

#include "PBCodable.h"
#include "NSCopying-Protocol.h"

@class NSMutableArray, NSString, PBDataReader, PBUnknownFields;

@interface GEOActiveTileSet : PBCodable<NSCopying> {
  /* instance variables */
  PBDataReader *_reader;
  unsigned long long _availableTilesSpace;
  unsigned int _readerMarkPos;
  unsigned int _readerMarkLength;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _readerLock;
  struct { unsigned int x :1 has_checksumType; unsigned int x :1 has_requestStyle; unsigned int x :1 has_timeToLiveSeconds; unsigned int x :1 has_updateBehavior; unsigned int x :1 has_useAuthProxy; unsigned int x :1 read_unknownFields; unsigned int x :1 read_availableTiles; unsigned int x :1 read_baseURL; unsigned int x :1 read_countryRegionAllowlists; unsigned int x :1 read_deviceSKUAllowlists; unsigned int x :1 read_localizationURL; unsigned int x :1 read_sentinelTiles; unsigned int x :1 read_supportedLanguages; unsigned int x :1 wrote_anyField; } _flags;
}

@property (readonly, nonatomic) BOOL hasBaseURL;
@property (retain, nonatomic) NSString *baseURL;
@property (nonatomic) int style;
@property (nonatomic) int scale;
@property (nonatomic) int size;
@property (nonatomic) unsigned int version;
@property (nonatomic) BOOL hasTimeToLiveSeconds;
@property (nonatomic) unsigned int timeToLiveSeconds;
@property (readonly, nonatomic) unsigned long long availableTilesCount;
@property (readonly, nonatomic) struct GEOTileSetRegion { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; } * availableTiles;
@property (retain, nonatomic) NSMutableArray *sentinelTiles;
@property (readonly, nonatomic) BOOL hasLocalizationURL;
@property (retain, nonatomic) NSString *localizationURL;
@property (retain, nonatomic) NSMutableArray *supportedLanguages;
@property (nonatomic) BOOL hasUpdateBehavior;
@property (nonatomic) int updateBehavior;
@property (retain, nonatomic) NSMutableArray *countryRegionAllowlists;
@property (nonatomic) BOOL hasChecksumType;
@property (nonatomic) int checksumType;
@property (nonatomic) BOOL hasRequestStyle;
@property (nonatomic) int requestStyle;
@property (nonatomic) BOOL hasUseAuthProxy;
@property (nonatomic) BOOL useAuthProxy;
@property (retain, nonatomic) NSMutableArray *deviceSKUAllowlists;
@property (readonly, nonatomic) PBUnknownFields *unknownFields;

/* class methods */
+ (id)buildDisputedBordersQueryItemsForCountry:(id)country region:(id)region;
+ (Class)sentinelTileType;
+ (Class)supportedLanguageType;
+ (Class)countryRegionAllowlistType;
+ (Class)deviceSKUAllowlistType;
+ (BOOL)isValid:(id)valid;

/* instance methods */
- (unsigned int)minimumZoomLevelInRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (unsigned int)maximumZoomLevelInRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (unsigned int)minimumZoomLevelForMapPoint:(struct { double x0; double x1; })point;
- (unsigned int)maximumZoomLevelForMapPoint:(struct { double x0; double x1; })point;
- (unsigned int)largestZoomLevelLEQ:(unsigned int)leq inRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (BOOL)isAvailableForTileKey:(const struct _GEOTileKey { unsigned int x0 :7; unsigned int x1 :1; union { struct _GEOStandardTileKey { unsigned int x0 :40; unsigned int x1 :6; unsigned int x2 :26; unsigned int x3 :26; unsigned int x4 :14; unsigned int x5 :4; unsigned int x6 :4; } x0; struct _GEOGloriaQuadIDTileKey { unsigned int x0 :6; unsigned int x1 :64; unsigned int x2 :14; unsigned int x3 :4; union { struct { unsigned int x0 :10; unsigned int x1 :10; unsigned int x2 :12; } x0; unsigned int x1; } x4; } x1; struct _GEORegionalResourceKey { unsigned int x0 :32; unsigned int x1 :8; unsigned int x2 :6; unsigned int x3 :8; unsigned int x4 :8; unsigned int x5 :1; unsigned int x6 :57; } x2; struct _GEOSputnikMetadataKey { unsigned int x0 :32; unsigned int x1 :24; unsigned int x2 :14; unsigned int x3 :8; unsigned int x4 :42; } x3; struct _GEOFlyoverKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :8; unsigned int x4 :24; unsigned int x5 :14; unsigned int x6 :8; unsigned int x7 :8; } x4; struct _GEOTransitLineSelectionKey { unsigned int x0 :6; unsigned int x1 :25; unsigned int x2 :25; unsigned int x3 :64; } x5; struct _GEOPolygonSelectionKey { unsigned int x0 :6; unsigned int x1 :25; unsigned int x2 :25; unsigned int x3 :64; } x6; struct _GEORoadSelectionKey { unsigned int x0 :6; unsigned int x1 :25; unsigned int x2 :25; unsigned int x3 :64; } x7; struct _GEOContourLinesKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :4; unsigned int x4 :8; unsigned int x5 :50; } x8; struct _GEOTileOverlayKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :8; unsigned int x4 :32; unsigned int x5 :16; unsigned int x6 :6; } x9; struct _GEOIdentifiedResourceKey { unsigned long long x0; unsigned char x1; unsigned char x2; unsigned int x3 :1; unsigned int x4 :39; } x10; struct _GEOS2TileKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :3; unsigned int x4 :14; unsigned int x5 :4; unsigned int x6 :4; unsigned int x7 :37; } x11; struct _GEOLiveTileKey { unsigned int x0 :6; unsigned int x1 :26; unsigned int x2 :26; unsigned int x3 :14; unsigned int x4 :4; unsigned int x5 :4; unsigned int x6 :4; unsigned int x7 :36; } x12; } x2; } *)key;
- (id)dataForGenericTileType:(int)type configuration:(id)configuration;
- (id)bestLanguageWithOverrideLocale:(id)locale;
- (id)_bestCountryRegionAllowlistMatchForCountry:(id)country region:(id)region;
- (BOOL)isDisputedBordersAllowlistedForCountry:(id)country region:(id)region;
- (id)disputedBordersQueryItemsForCountry:(id)country region:(id)region;
- (BOOL)isEquivalentTileSet:(id)set;
- (void)_resetBestLanguage;
- (id)init;
- (id)initWithData:(id)data;
- (void)dealloc;
- (id)styleAsString:(int)string;
- (int)StringAsStyle:(id)style;
- (id)scaleAsString:(int)string;
- (int)StringAsScale:(id)scale;
- (id)sizeAsString:(int)string;
- (int)StringAsSize:(id)size;
- (void)clearAvailableTiles;
- (void)addAvailableTiles:(struct GEOTileSetRegion { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; })tiles;
- (struct GEOTileSetRegion { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; })availableTilesAtIndex:(unsigned long long)index;
- (void)setAvailableTiles:(struct GEOTileSetRegion { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; } *)tiles count:(unsigned long long)count;
- (void)clearSentinelTiles;
- (void)addSentinelTile:(id)tile;
- (unsigned long long)sentinelTilesCount;
- (id)sentinelTileAtIndex:(unsigned long long)index;
- (void)clearSupportedLanguages;
- (void)addSupportedLanguage:(id)language;
- (unsigned long long)supportedLanguagesCount;
- (id)supportedLanguageAtIndex:(unsigned long long)index;
- (id)updateBehaviorAsString:(int)string;
- (int)StringAsUpdateBehavior:(id)behavior;
- (void)clearCountryRegionAllowlists;
- (void)addCountryRegionAllowlist:(id)allowlist;
- (unsigned long long)countryRegionAllowlistsCount;
- (id)countryRegionAllowlistAtIndex:(unsigned long long)index;
- (id)checksumTypeAsString:(int)string;
- (int)StringAsChecksumType:(id)type;
- (id)requestStyleAsString:(int)string;
- (int)StringAsRequestStyle:(id)style;
- (void)clearDeviceSKUAllowlists;
- (void)addDeviceSKUAllowlist:(id)skuallowlist;
- (unsigned long long)deviceSKUAllowlistsCount;
- (id)deviceSKUAllowlistAtIndex:(unsigned long long)index;
- (id)description;
- (id)dictionaryRepresentation;
- (id)jsonRepresentation;
- (id)initWithDictionary:(id)dictionary;
- (id)initWithJSON:(id)json;
- (void)readAll:(BOOL)all;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (void)copyTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)mergeFrom:(id)from;
- (void)clearUnknownFields:(BOOL)fields;
@end

#endif /* GEOActiveTileSet_h */
