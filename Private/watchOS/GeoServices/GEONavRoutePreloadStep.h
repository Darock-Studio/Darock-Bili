//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEONavRoutePreloadStep_h
#define GEONavRoutePreloadStep_h
@import Foundation;

#include "GEOApplicationAuditToken.h"
#include "GEOMapAssetMetadataFetcher.h"
#include "GEOSPRMetroAvailabilityFetcher.h"
#include "GEOTileKeyList.h"

@class NSMutableDictionary;

@interface GEONavRoutePreloadStep : NSObject {
  /* instance variables */
  struct { double latitude; double longitude; } coord;
  double routeIdx;
  NSMutableDictionary *wantedTiles;
  GEOTileKeyList *assetMetadataTiles;
  double startTime;
  double endTime;
  unsigned int bytesLoadedFromNetwork;
  unsigned int generation;
  int cellularCoverage;
  unsigned int x :1 nearManeuver;
  unsigned int x :1 loading;
  unsigned int x :1 loaded;
  GEOApplicationAuditToken *_auditToken;
  GEOSPRMetroAvailabilityFetcher *_sprMetrosAvailabilityFetcher;
  GEOMapAssetMetadataFetcher *_assetMetadataFetcher;
  unsigned int _errorCount;
  unsigned int _lifetimeErrorCount;
  unsigned char _metrosSupported;
  unsigned long long _parentSignpostID;
  unsigned long long _signpostID;
}

@property (readonly, nonatomic) BOOL hasError;
@property (readonly, nonatomic) BOOL hasLifetimeError;

/* instance methods */
- (id)init;
- (id)initWithAuditToken:(id)token highZoomMetrosAvailabilityFetcher:(id)fetcher assetMetadataFetcher:(id)fetcher preloaderSignpostID:(unsigned long long)id;
- (id)description;
- (BOOL)okToLoad;
- (void)resetErrors;
- (double)networkDataRateKB;
- (void)encounteredErrors:(id)errors;
- (void)loadWithCallbackQueue:(id)queue requireWiFi:(BOOL)fi willLoadHandler:(id /* block */)handler progressHandler:(id /* block */)handler finishedHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)_loadAssetMetadataRequireWiFi:(BOOL)fi unsuccessfulKeysAccumulator:(id)accumulator errorsAccumulator:(id)accumulator queue:(id)queue willLoadHandler:(id /* block */)handler progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)_loadTiles:(id)tiles requireWiFi:(BOOL)fi unsuccessfulKeysAccumulator:(id)accumulator errorsAccumulator:(id)accumulator queue:(id)queue group:(id)group willLoadHandler:(id /* block */)handler progressHandler:(id /* block */)handler;
- (void)cancel;
@end

#endif /* GEONavRoutePreloadStep_h */
