//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1940.42.9.28.8
//
#ifndef GEORouteHypothesisMonitor_h
#define GEORouteHypothesisMonitor_h
@import Foundation;

#include "GEOCommonOptions.h"
#include "GEOComposedETARoute.h"
#include "GEOComposedRoute.h"
#include "GEOComposedWaypoint.h"
#include "GEODirectionsRequest.h"
#include "GEODirectionsRequestFeedback.h"
#include "GEOETAUpdater.h"
#include "GEOETAUpdaterDelegate-Protocol.h"
#include "GEOLocation.h"
#include "GEOMapRegion.h"
#include "GEOMapServiceTraits.h"
#include "GEONavdClientInfo.h"
#include "GEORouteAttributes.h"
#include "GEORouteHypothesis.h"
#include "GEORouteHypothesizerAnalyticsStore.h"
#include "GEORouteMatch.h"
#include "NSSecureCoding-Protocol.h"

@class NSData, NSDate, NSMutableArray, NSString, geo_isolater;
@protocol OS_dispatch_group;

@interface GEORouteHypothesisMonitor : NSObject<GEOETAUpdaterDelegate, NSSecureCoding> {
  /* instance variables */
  id /* block */ _handler;
  GEOLocation *_originLocation;
  GEOLocation *_lastLocation;
  NSObject<OS_dispatch_group> *_etaUpdaterDispatchGroup;
  GEOETAUpdater *_liveETAUpdater;
  GEOComposedETARoute *_liveETARoute;
  GEOCommonOptions *_commonOptions;
  GEOMapServiceTraits *_traits;
  GEORouteHypothesizerAnalyticsStore *_analyticsStore;
  GEONavdClientInfo *_clientInfo;
  GEOComposedRoute *_route;
  geo_isolater *_requestIsolater;
  GEODirectionsRequest *_currentRequest;
  BOOL _needReroute;
  NSMutableArray *_rerouteEntries;
  GEORouteMatch *_routeMatch;
  GEOLocation *_lastMatchedLocation;
  BOOL _hasArrived;
  BOOL _isTraveling;
  double _travelScore;
  GEOMapRegion *_arrivalMapRegion;
  NSString *_traceName;
  NSData *_sessionState;
}

@property (readonly, nonatomic) NSString *routeName;
@property (retain, nonatomic) GEODirectionsRequestFeedback *feedback;
@property (readonly, nonatomic) BOOL supportsLiveTraffic;
@property (readonly, nonatomic) BOOL supportsDirections;
@property (readonly, nonatomic) GEOComposedWaypoint *source;
@property (readonly, nonatomic) GEOComposedWaypoint *destination;
@property (readonly, nonatomic) int transportType;
@property (readonly, nonatomic) NSDate *arrivalDate;
@property (readonly, nonatomic) GEORouteAttributes *routeAttributes;
@property (readonly, nonatomic) GEORouteHypothesis *hypothesis;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)userPreferencesProvider;
+ (void)setUserPreferencesProvider:(id)provider;
+ (id)serverFormattedStringFormatter;
+ (void)setServerFormattedStringFormatter:(id)formatter;
+ (id)routeAttributesForTransportType:(int)type withArrivalDate:(id)date;
+ (id)monitorWithSource:(id)source toDestination:(id)destination traceName:(id)name traits:(id)traits routeAttributes:(id)attributes clientInfo:(id)info;

/* instance methods */
- (id)initWithSource:(id)source toDestination:(id)destination traceName:(id)name traits:(id)traits routeAttributes:(id)attributes clientInfo:(id)info;
- (id)initWithCoder:(id)coder;
- (void)_commonInit;
- (id)_newETAUpdater;
- (void)dealloc;
- (void)encodeWithCoder:(id)coder;
- (BOOL)_hasInitialRoute;
- (void)updateLocation:(id)location allowServer:(BOOL)server hypothesisHandler:(id /* block */)handler;
- (void)_updateLocation:(id)location allowServer:(BOOL)server;
- (BOOL)_shouldUpdateETAForRouteMatch:(id)match;
- (void)_recalculateETAWithRouteMatch:(id)match;
- (void)_fetchETAWithRouteMatch:(id)match;
- (void)recordETAUpdatesAfterEventStart;
- (void)stopMonitoring;
- (void)clientDisplayedUINotification:(unsigned long long)uinotification;
- (void)callHandlerIvar;
- (void)_showDebugAlert;
- (void)_updateRouteMatchETAAndTravelState;
- (void)etaUpdater:(id)updater willSendETATrafficUpdateRequest:(id)request;
- (void)etaUpdater:(id)updater receivedETATrafficUpdateResponse:(id)response etaRoute:(id)route;
- (void)etaUpdater:(id)updater receivedError:(id)error;
- (void)etaUpdaterUpdatedETA:(id)eta;
- (void)etaUpdaterRequestCompleted:(id)completed;
- (void)etaUpdaterReceivedInvalidRoute:(id)route newRoute:(id)route incidentsOnRoute:(id)route incidentsOffRoute:(id)route;
- (void)_executeBlockAccessingCurrentRequest:(id /* block */)request;
- (void)_requestNewRouteFromLocation:(id)location usualRouteData:(id)data;
- (void)_receivedRouteResponse:(id)response forLocation:(id)location isReroute:(BOOL)reroute;
- (void)_routeRequestFailed:(id)failed;
- (id)navDestination;
- (BOOL)_isNavigating;
- (BOOL)_isNavigatingToDestination;
- (void)_updateScoreForLocation:(id)location;
- (void)cancelCurrentRequest;
- (void)checkRouteForLocation:(id)location;
- (void)travelStateChanged;
- (id)routeMatchForLocation:(id)location;
@end

#endif /* GEORouteHypothesisMonitor_h */
