//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 105.150.0.0.0
//
#ifndef CVNLPCaptionEncoderTransformer_h
#define CVNLPCaptionEncoderTransformer_h
@import Foundation;

#include "CVNLPCaptionEncoder.h"

@protocol {vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}};

@interface CVNLPCaptionEncoderTransformer : CVNLPCaptionEncoder {
  /* instance variables */
  void * encoderPlan;
  void * encoderCtx;
  struct { void *plan; int network_index; } encoderNet;
  struct vector<std::string, std::allocator<std::string>> { void *__begin_; void *__end_; struct __compressed_pair<std::string *, std::allocator<std::string>> { void *__value_; } __end_cap_; } encoderInputNames;
  struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } attFeatsBlob;
}

/* instance methods */
- (id)initWithOptions:(id)options runTimeParams:(id)params;
- (void)dealloc;
- (void)computeCaptionForImage:(struct vImage_Buffer { void * x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)image outputs:(id *)outputs;
- (void)computeCaptionForImageImpl:(struct vImage_Buffer { void * x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)impl outputs:(id *)outputs;
- (void)computeCaptionForPixelBuffer:(struct __CVBuffer *)buffer outputs:(id *)outputs;
- (void)computeCaptionForPixelBufferImpl:(struct __CVBuffer *)impl outputs:(id *)outputs;
- (void)computeCaptionForVideoPixelBuffer:(void *)buffer outputs:(id *)outputs;
- (void)computeCaptionForVideoPixelBufferImpl:(void *)impl outputs:(id *)outputs;
@end

#endif /* CVNLPCaptionEncoderTransformer_h */
