//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 105.150.0.0.0
//
#ifndef CVNLPCaptionDecoderBlock_h
#define CVNLPCaptionDecoderBlock_h
@import Foundation;

#include "CVNLPCaptionModelBase.h"
#include "CVNLPCaptionDecoderBlock.h"

@class NSString;
@protocol OS_dispatch_queue, struct map<std::string, std::vector<float>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<float>>>> { struct __tree<std::__value_type<std::string, std::vector<float>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<float>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::vector<float>>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<float>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<float>>, std::less<std::string>>> { unsigned long long x0; } x2; } x0; }, struct map<std::string, std::vector<unsigned long>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<unsigned long>>>> { struct __tree<std::__value_type<std::string, std::vector<unsigned long>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<unsigned long>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::vector<unsigned long>>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<unsigned long>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<unsigned long>>, std::less<std::string>>> { unsigned long long x0; } x2; } x0; }, struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; }, {map<std::string, std::vector<float>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<float>>>>="__tree_"{__tree<std::__value_type<std::string, std::vector<float>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<float>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::vector<float>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<float>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<float>>, std::less<std::string>>>="__value_"Q}}}, {map<std::string, std::vector<unsigned long>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<unsigned long>>>>="__tree_"{__tree<std::__value_type<std::string, std::vector<unsigned long>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<unsigned long>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::vector<unsigned long>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<unsigned long>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<unsigned long>>, std::less<std::string>>>="__value_"Q}}}, {vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}};

@interface CVNLPCaptionDecoderBlock : CVNLPCaptionModelBase

@property (nonatomic) unsigned long long modelIndex;
@property (nonatomic) void * decoderPlan;
@property (nonatomic) void * decoderCtx;
@property (nonatomic) struct { void * x0; int x1; } decoderNet;
@property (nonatomic) struct { void * x0; void * x1; unsigned long long x2[4] unsigned long long x3[4] unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } attFeatsPlaceholderBlob;
@property (nonatomic) struct { void * x0; void * x1; unsigned long long x2[4] unsigned long long x3[4] unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } scaleInput;
@property (nonatomic) struct { void * x0; void * x1; unsigned long long x2[4] unsigned long long x3[4] unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } positionInput;
@property (nonatomic) struct { void * x0; void * x1; unsigned long long x2[4] unsigned long long x3[4] unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } maskInput;
@property (nonatomic) struct { void * x0; void * x1; unsigned long long x2[4] unsigned long long x3[4] unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } blockInput;
@property (nonatomic) struct { void * x0; void * x1; unsigned long long x2[4] unsigned long long x3[4] unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } blockOutput;
@property (nonatomic) struct map<std::string, std::vector<float>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<float>>>> { struct __tree<std::__value_type<std::string, std::vector<float>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<float>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::vector<float>>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<float>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<float>>, std::less<std::string>>> { unsigned long long x0; } x2; } x0; } stateOutputEspressoBuffers;
@property (nonatomic) struct map<std::string, std::vector<float>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<float>>>> { struct __tree<std::__value_type<std::string, std::vector<float>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<float>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::vector<float>>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<float>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<float>>, std::less<std::string>>> { unsigned long long x0; } x2; } x0; } stateInputEspressoBuffers;
@property (nonatomic) struct map<std::string, std::vector<unsigned long>, std::less<std::string>, std::allocator<std::pair<const std::string, std::vector<unsigned long>>>> { struct __tree<std::__value_type<std::string, std::vector<unsigned long>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<unsigned long>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::vector<unsigned long>>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::vector<unsigned long>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::vector<unsigned long>>, std::less<std::string>>> { unsigned long long x0; } x2; } x0; } stateInputEspressoBuffersShape;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *decoderQueue;
@property (retain, nonatomic) CVNLPCaptionDecoderBlock *nextBlock;
@property (retain, nonatomic) NSString *metricString;
@property (retain, nonatomic) NSString *metricCopyString;
@property (nonatomic) struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; } decoderInputNames;

/* instance methods */
- (id)initWithOptions:(id)options modelIndex:(unsigned long long)index runTimeParams:(id)params;
- (void)dealloc;
- (BOOL)_loadNetwork:(id)network modelIndex:(unsigned long long)index;
- (void)buildNetworkForSequenceLength:(unsigned long long)length imageFeatures:(id)features;
- (void)copyInputState:(id)state;
- (void)copyOutputState:(id)state;
- (void)runBlockWithCopyInputBlock:(id /* block */)block copyOutputBlock:(id /* block */)block;
- (void)runBlockWithCopyInput:(float *)input copyOutputBlock:(id /* block */)block;
- (void)_runBlockWithCopyOutputBlock:(id /* block */)block;
@end

#endif /* CVNLPCaptionDecoderBlock_h */
