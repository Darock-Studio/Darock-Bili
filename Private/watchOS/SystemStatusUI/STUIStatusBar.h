//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 165.19.0.0.0
//
#ifndef STUIStatusBar_h
#define STUIStatusBar_h
@import Foundation;

#include "UIView.h"
#include "BSDebugDescriptionProviding-Protocol.h"
#include "STUIStatusBarAction.h"
#include "STUIStatusBarActionable-Protocol.h"
#include "STUIStatusBarDataAggregator.h"
#include "STUIStatusBarDataBroadcasterListener-Protocol.h"
#include "STUIStatusBarStyleAttributes.h"
#include "STUIStatusBarVisualProvider-Protocol.h"
#include "UIAccessibilityHUDGestureDelegate-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSSet, NSString, STMutableStatusBarData, STStatusBarData, UIAccessibilityHUDGestureManager, UIColor, UIGestureRecognizer, UIScreen, UIView;

@interface STUIStatusBar : UIView<UIGestureRecognizerDelegate, UIAccessibilityHUDGestureDelegate, BSDebugDescriptionProviding, STUIStatusBarDataBroadcasterListener> {
  /* instance variables */
  struct { unsigned int x :1 needsLayoutUpdateForPartFrames; unsigned int x :1 visualProviderClassScalesWithScreenNativeScale; unsigned int x :1 visualProviderClassImplementsReferenceScreenScale; unsigned int x :1 visualProviderClassRequiresIterativeOverflow; unsigned int x :1 visualProviderImplementsModeUpdatedFromMode; unsigned int x :1 visualProviderImplementsOrientationUpdatedFromOrientation; unsigned int x :1 visualProviderImplementsAvoidanceFrameUpdatedFromFrame; unsigned int x :1 visualProviderImplementsStyleUpdatedFromStyle; unsigned int x :1 visualProviderImplementsWillUpdateWithData; unsigned int x :1 visualProviderImplementsDataUpdated; unsigned int x :1 visualProviderImplementsCanFixupDisplayItemAttributes; unsigned int x :1 visualProviderImplementsSizeUpdatedFromSize; unsigned int x :1 visualProviderImplementsRegionWillSetDisplayItems; unsigned int x :1 visualProviderImplementsStatusBarRegionsUpdated; unsigned int x :1 visualProviderImplementsActionableHighlightedInitialPress; unsigned int x :1 visualProviderImplementsDisplayItemIdentifiersForPartWithIdentifier; unsigned int x :1 visualProviderImplementsRegionIdentifiersForPartWithIdentifier; unsigned int x :1 visualProviderImplementsStatusBarEnabledPartsUpdated; unsigned int x :1 visualProviderImplementsItemCreated; unsigned int x :1 visualProviderImplementsUpdateLumaTracking; unsigned int x :1 updatingStates; unsigned int x :1 forcingIterativeOverflow; unsigned int x :1 alwaysAutomaticStyle; unsigned int x :1 statusBarHidden; } _statusBarFlags;
}

@property (nonatomic) long long automaticStyle;
@property (retain, nonatomic) NSDictionary *automaticStyleOutliers;
@property (retain, nonatomic) NSMutableDictionary *items;
@property (retain, nonatomic) NSMutableDictionary *displayItemStates;
@property (copy, nonatomic) id /* block */ updateCompletionHandler;
@property (retain, nonatomic) UIView *foregroundView;
@property (weak, nonatomic) NSObject<STUIStatusBarActionable> *targetActionable;
@property (retain, nonatomic) UIAccessibilityHUDGestureManager *accessibilityHUDGestureManager;
@property (retain, nonatomic) NSString *visualProviderClassName;
@property (retain, nonatomic) Class visualProviderClass;
@property (readonly, nonatomic) NSObject<STUIStatusBarVisualProvider> *visualProvider;
@property (readonly, nonatomic) NSDictionary *regions;
@property (readonly, nonatomic) STUIStatusBarDataAggregator *dataAggregator;
@property (readonly, nonatomic) STStatusBarData *currentAggregatedData;
@property (readonly, nonatomic) UIView *containerView;
@property (readonly, nonatomic) unsigned int animationContextId;
@property (readonly, nonatomic) BOOL animationsEnabled;
@property (retain, nonatomic) STUIStatusBarStyleAttributes *styleAttributes;
@property (retain, nonatomic) STUIStatusBarAction *action;
@property (readonly, nonatomic) BOOL useAutomaticStyle;
@property (readonly, nonatomic) UIScreen *effectiveTargetScreen;
@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } effectiveScaleTransform;
@property (retain, nonatomic) UIScreen *targetScreen;
@property (retain, nonatomic) NSDictionary *visualProviderInfo;
@property (nonatomic) long long style;
@property (copy, nonatomic) UIColor *foregroundColor;
@property (nonatomic) long long mode;
@property (nonatomic) long long orientation;
@property (readonly, nonatomic) STStatusBarData *currentData;
@property (readonly, nonatomic) NSSet *dependentDataEntryKeys;
@property (copy, nonatomic) STStatusBarData *overlayData;
@property (readonly, nonatomic) UIGestureRecognizer *actionGestureRecognizer;
@property (copy, nonatomic) NSArray *enabledPartIdentifiers;
@property (copy, nonatomic) NSArray *disabledPartIdentifiers;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } avoidanceFrame;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)stringForStatusBarStyle:(long long)style;
+ (void)registerSensorActivityIndicator:(id)indicator forScreen:(id)screen;
+ (id)sensorActivityIndicatorForScreen:(id)screen;
+ (double)_effectiveScaleForVisualProviderClass:(Class)class targetScreen:(id)screen;
+ (id)sensorActivityIndicatorPartIdentifier;
+ (struct CGSize { double x0; double x1; })intrinsicContentSizeForTargetScreen:(id)screen orientation:(long long)orientation onLockScreen:(BOOL)screen;
+ (struct CGSize { double x0; double x1; })intrinsicContentSizeForTargetScreen:(id)screen orientation:(long long)orientation onLockScreen:(BOOL)screen isAzulBLinked:(BOOL)blinked;

/* instance methods */
- (BOOL)_forceLayoutEngineSolutionInRationalEdges;
- (id)initWithStyle:(long long)style;
- (void)dealloc;
- (void)updateForDataChange:(id)change;
- (id)_expandedDescription;
- (void)_setVisualProviderClassName:(id)name;
- (id)_visualProviderClassName;
- (id)_effectiveTargetScreen;
- (void)_prepareVisualProviderIfNeeded;
- (void)resetVisualProvider;
- (void)reinitializeStatusBar;
- (void)setAvoidanceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame animationSettings:(id)settings options:(unsigned long long)options;
- (id)_traitCollectionForChildEnvironment:(id)environment;
- (void)_performWithInheritedAnimation:(id /* block */)animation;
- (BOOL)_useAutomaticStyle;
- (void)setHidden:(BOOL)hidden animationParameters:(id)parameters;
- (long long)_effectiveStyleFromStyle:(long long)style;
- (id)styleAttributesForStyle:(long long)style;
- (void)_updateStyleAttributes;
- (void)updateWithData:(id)data;
- (void)_updateWithData:(id)data completionHandler:(id /* block */)handler;
- (void)_updateWithAggregatedData:(id)data;
- (void)_updateDisplayedItemsWithData:(id)data styleAttributes:(id)attributes extraAnimations:(id)animations;
- (void)_prepareAnimations:(id)animations;
- (void)_delayUpdatesWithKeys:(id)keys fromAnimation:(id)animation;
- (void)updateWithAnimations:(id)animations;
- (void)updateForcingIterativeOverflow;
- (void)_performAnimations:(id)animations;
- (void)_fixupDisplayItemAttributes;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })_effectiveScaleTransform;
- (void)resizeSubviewsWithOldSize:(struct CGSize { double x0; double x1; })size;
- (void)updateConstraints;
- (void)layoutSubviews;
- (void)_updateRegionItems;
- (id)_rearrangeOverflowedItems;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForActionable:(id)actionable;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_pressFrameForActionable:(id)actionable;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_frameForActionable:(id)actionable actionInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (BOOL)_gestureRecognizer:(id)recognizer isInsideActionable:(id)actionable;
- (BOOL)_gestureRecognizer:(id)recognizer touchInsideActionable:(id)actionable;
- (BOOL)_gestureRecognizer:(id)recognizer pressInsideActionable:(id)actionable;
- (void)statusBarGesture:(id)gesture;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (id)_actionablesForPartWithIdentifier:(id)identifier includeInternalItems:(BOOL)items onlyVisible:(BOOL)visible;
- (id)_regionsForPartWithIdentifier:(id)identifier includeInternalItems:(BOOL)items;
- (void)setAction:(id)action forPartWithIdentifier:(id)identifier;
- (id)actionForPartWithIdentifier:(id)identifier;
- (void)setOffset:(struct UIOffset { double x0; double x1; })offset forPartWithIdentifier:(id)identifier;
- (struct UIOffset { double x0; double x1; })offsetForPartWithIdentifier:(id)identifier;
- (void)setAlpha:(double)alpha forPartWithIdentifier:(id)identifier;
- (double)alphaForPartWithIdentifier:(id)identifier;
- (void)setStyle:(long long)style forPartWithIdentifier:(id)identifier;
- (void)_setAutomaticStyle:(long long)style additionalStylesForRegionIdentifiers:(id)identifiers;
- (long long)styleForPartWithIdentifier:(id)identifier;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForPartWithIdentifier:(id)identifier includeInternalItems:(BOOL)items;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForPartWithIdentifier:(id)identifier;
- (BOOL)areAnimationsEnabled;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (id)_itemWithIdentifier:(id)identifier createIfNeeded:(BOOL)needed;
- (id)itemWithIdentifier:(id)identifier;
- (id)displayItemWithIdentifier:(id)identifier;
- (id)regionWithIdentifier:(id)identifier;
- (id)stateForDisplayItemWithIdentifier:(id)identifier;
- (id)itemsDependingOnKeys:(id)keys;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForDisplayItemWithIdentifier:(id)identifier;
- (id)displayItemIdentifiersInRegionsWithIdentifiers:(id)identifiers;
- (id)itemIdentifiersInRegionsWithIdentifiers:(id)identifiers;
- (id)dataEntryKeysForItemsWithIdentifiers:(id)identifiers;
- (id)_statusBarWindowForAccessibilityHUD;
- (BOOL)_accessibilityHUDGestureManager:(id)manager shouldBeginAtPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_accessibilityHUDGestureManager:(id)manager HUDItemForPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_accessibilityHUDGestureManager:(id)manager gestureLiftedAtPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)_accessibilityHUDGestureManager:(id)manager shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
- (BOOL)_accessibilityHUDGestureManager:(id)manager shouldTerminateHUDGestureForOtherGestureRecognizer:(id)recognizer;
- (void)_accessibilityHUDGestureManager:(id)manager showHUDItem:(id)huditem;
- (void)_dismissAccessibilityHUDForGestureManager:(id)manager;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)descriptionWithMultilinePrefix:(id)prefix;
- (id)debugDescriptionWithMultilinePrefix:(id)prefix;
- (id)descriptionBuilderWithMultilinePrefix:(id)prefix;
- (id)_descriptionBuilderWithMultilinePrefix:(id)prefix forDebug:(BOOL)debug;
- (id)_expandedDescriptionBuilderWithMultilinePrefix:(id)prefix;
- (Class)_visualProviderClass;
- (void)_setVisualProviderClass:(Class)class;
@end

#endif /* STUIStatusBar_h */
