//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.0, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 57.0.0.0.0
//
#ifndef SCPacketDropDetector_h
#define SCPacketDropDetector_h
@import Foundation;

@protocol {PacketDropDetector="previous_frame_indices_"{unordered_map<unsigned char, unsigned short, std::hash<unsigned char>, std::equal_to<unsigned char>, std::allocator<std::pair<const unsigned char, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<unsigned char, unsigned short>, std::__unordered_map_hasher<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::hash<unsigned char>, std::equal_to<unsigned char>>, std::__unordered_map_equal<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::equal_to<unsigned char>, std::hash<unsigned char>>, std::allocator<std::__hash_value_type<unsigned char, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::hash<unsigned char>, std::equal_to<unsigned char>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::equal_to<unsigned char>, std::hash<unsigned char>>>="__value_"f}}}};

@interface SCPacketDropDetector : NSObject {
  /* instance variables */
  struct PacketDropDetector { struct unordered_map<unsigned char, unsigned short, std::hash<unsigned char>, std::equal_to<unsigned char>, std::allocator<std::pair<const unsigned char, unsigned short>>> { struct __hash_table<std::__hash_value_type<unsigned char, unsigned short>, std::__unordered_map_hasher<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::hash<unsigned char>, std::equal_to<unsigned char>>, std::__unordered_map_equal<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::equal_to<unsigned char>, std::hash<unsigned char>>, std::allocator<std::__hash_value_type<unsigned char, unsigned short>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<unsigned char, unsigned short>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::hash<unsigned char>, std::equal_to<unsigned char>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<unsigned char, std::__hash_value_type<unsigned char, unsigned short>, std::equal_to<unsigned char>, std::hash<unsigned char>>> { float __value_; } __p3_; } __table_; } previous_frame_indices_; } _detector;
}

/* instance methods */
- (void)handlePacketWithReportID:(unsigned char)id frameIndex:(unsigned short)index size:(unsigned long long)size;
@end

#endif /* SCPacketDropDetector_h */
