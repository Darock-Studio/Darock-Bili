//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2253.0.0.0.0
//
#ifndef MCRestrictionManager_h
#define MCRestrictionManager_h
@import Foundation;

@class BOOL *, NSArray, NSDictionary, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface MCRestrictionManager : NSObject

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue;
@property (retain, nonatomic) NSMutableDictionary *memberQueueRestrictions;
@property (retain, nonatomic) NSMutableDictionary *memberQueueSystemProfileRestrictions;
@property (retain, nonatomic) NSMutableDictionary *memberQueueUserProfileRestrictions;
@property (retain, nonatomic) NSMutableDictionary *memberQueueSystemClientRestrictions;
@property (retain, nonatomic) NSMutableDictionary *memberQueueUserClientRestrictions;
@property (retain, nonatomic) NSMutableDictionary *memberQueueSystemUserSettings;
@property (retain, nonatomic) NSMutableDictionary *memberQueueSystemNamespacedUserSettings;
@property (retain, nonatomic) NSMutableDictionary *memberQueueUserUserSettings;
@property (retain, nonatomic) NSMutableDictionary *memberQueueUserNamespacedUserSettings;
@property (retain, nonatomic) NSMutableDictionary *memberQueueEffectiveUserSettings;
@property (retain, nonatomic) NSMutableDictionary *memberQueueSettingsEvents;
@property (readonly, nonatomic) NSMutableDictionary *memberQueueCombinedSystemProfileRestrictions;
@property (readonly, nonatomic) NSMutableDictionary *memberQueueCombinedProfileRestrictions;
@property (retain, nonatomic) NSArray *memberQueueEffectiveWhitelistedAppsAndOptions;
@property (readonly, nonatomic) NSDictionary *currentRestrictions;
@property (readonly, nonatomic) NSDictionary *defaultRestrictions;
@property (readonly, nonatomic) NSDictionary *defaultSettings;
@property (readonly, copy, nonatomic) NSDictionary *userSettings;
@property (readonly, copy, nonatomic) NSDictionary *effectiveUserSettings;
@property (readonly, copy, nonatomic) NSDictionary *systemUserSettings;
@property (readonly, copy, nonatomic) NSDictionary *userUserSettings;
@property (readonly, copy, nonatomic) NSDictionary *systemProfileRestrictions;
@property (readonly, copy, nonatomic) NSDictionary *userProfileRestrictions;
@property (readonly, copy, nonatomic) NSDictionary *combinedProfileRestrictions;

/* class methods */
+ (id)explicitlyRestrictedAppsBySetting;
+ (id)explicitlyRestrictedEphemeralMultiUserApps;
+ (id)defaultRestrictionFilePath;
+ (id)sharedManager;
+ (id)restrictionsAfterApplyingRestrictionsDictionary:(id)dictionary toRestrictionsDictionary:(id)dictionary outChangeDetected:(BOOL *)detected outError:(id *)error;
+ (id)restrictionsWithCurrentRestrictions:(id)restrictions defaultRestrictions:(id)restrictions profileRestrictions:(id)restrictions clientRestrictions:(id)restrictions outRestrictionsChanged:(BOOL *)changed outError:(id *)error;
+ (id)restrictionsWithCurrentRestrictions:(id)restrictions defaultRestrictions:(id)restrictions systemProfileRestrictions:(id)restrictions userProfileRestrictions:(id)restrictions systemClientRestrictions:(id)restrictions userClientRestrictions:(id)restrictions outRestrictionsChanged:(BOOL *)changed outError:(id *)error;
+ (id)filterRestrictionDictionaryForPublicUse:(id)use;
+ (id)filterRestrictionDictionary:(id)dictionary acceptedKeysDict:(id)dict;
+ (id)filterRestrictionDictionary:(id)dictionary toIncludeOnlyRestrictionsThatDifferFromRestrictions:(id)restrictions;
+ (id)filterUserSettingsForPublicUse:(id)use;
+ (id)restrictionKeys;
+ (id)systemMetadataValueForKey:(id)key;
+ (id)filterGrandfatheredRestrictionsIfNeededFromRestrictions:(id)restrictions;
+ (id)allowedGrandfatheredRestrictionPayloadKeysDictionary;
+ (id)effectiveGrandfatheredRestrictionPayloadKeysDictionary;
+ (id)_lockedDownRestrictionPayloadKeysWithPayloadKeysDictionary:(id)dictionary forRestrictionKey:(id)key;
+ (id)_payloadKeysDictionaryAfterAddingFeature:(id)feature toRestrictionPayloadKeysDictionary:(id)dictionary forRestrictionKey:(id)key;
+ (id)grandfatheredRestrictionPayloadKeysDictionary;
+ (id)_filterRestrictionDictionary:(id)dictionary removingPayloadKeysInRestrictionPayloadKeysDictionary:(id)dictionary forRestrictionKey:(id)key;
+ (id)filterRestrictionDictionary:(id)dictionary removingPayloadKeysInRestrictionPayloadKeysDictionary:(id)dictionary;
+ (id)_filterRestrictionPayloadKeysDictionary:(id)dictionary removingPayloadKeysInRestrictionPayloadKeysDictionary:(id)dictionary forRestrictionKey:(id)key;
+ (id)filterRestrictionPayloadKeysDictionary:(id)dictionary removingPayloadKeysInRestrictionPayloadKeysDictionary:(id)dictionary;
+ (id)_addRestrictionPayloadKeysDictionary:(id)dictionary toRestrictionPayloadKeysDictionary:(id)dictionary forRestrictionKey:(id)key;
+ (id)addRestrictionPayloadKeysDictionary:(id)dictionary toRestrictionPayloadKeysDictionary:(id)dictionary;
+ (int)restrictedBoolForFeature:(id)feature withRestrictionsDictionary:(id)dictionary;
+ (id)valueForFeature:(id)feature withRestrictionsDictionary:(id)dictionary;
+ (id)objectForFeature:(id)feature withRestrictionsDictionary:(id)dictionary;
+ (id)intersectedValuesForFeature:(id)feature withRestrictionsDictionary:(id)dictionary;
+ (id)unionValuesForFeature:(id)feature withRestrictionsDictionary:(id)dictionary;
+ (BOOL)restrictedBool:(id)bool changedBetweenOldRestrictions:(id)restrictions andNewRestrictions:(id)restrictions;
+ (BOOL)restrictedValue:(id)value changedBetweenOldRestrictions:(id)restrictions andNewRestrictions:(id)restrictions;
+ (BOOL)intersectedValuesForFeature:(id)feature changedBetweenOldRestrictions:(id)restrictions andNewRestrictions:(id)restrictions;
+ (BOOL)unionValuesForFeature:(id)feature changedBetweenOldRestrictions:(id)restrictions andNewRestrictions:(id)restrictions;
+ (id)defaultSettings;
+ (id)defaultParametersForBoolSetting:(id)setting;
+ (id)defaultParametersForValueSetting:(id)setting;
+ (id)defaultParametersForIntersectedValuesSetting:(id)setting;
+ (id)defaultParametersForUnionValuesSetting:(id)setting;
+ (int)defaultBoolValueForSetting:(id)setting;
+ (int)defaultBoolValueForSetting:(id)setting outAsk:(BOOL *)ask;
+ (id)defaultValueForSetting:(id)setting;
+ (id)maximumValueForSetting:(id)setting;
+ (id)minimumValueForSetting:(id)setting;
+ (id)defaultIntersectedValuesForSetting:(id)setting;
+ (id)defaultUnionValuesForSetting:(id)setting;
+ (id)parametersForBoolSetting:(id)setting withUserSettingDictionary:(id)dictionary;
+ (id)parametersForValueSetting:(id)setting withUserSettingDictionary:(id)dictionary;
+ (id)parametersForIntersectedSetting:(id)setting withUserSettingDictionary:(id)dictionary;
+ (id)parametersForUnionSetting:(id)setting withUserSettingDictionary:(id)dictionary;
+ (id)parametersForSetting:(id)setting ofType:(id)type withUserSettingDictionary:(id)dictionary;
+ (int)boolSettingForFeature:(id)feature withUserSettingDictionary:(id)dictionary;
+ (int)boolSettingForFeature:(id)feature outAsk:(BOOL *)ask withUserSettingDictionary:(id)dictionary;
+ (id)valueSettingForFeature:(id)feature withUserSettingDictionary:(id)dictionary;
+ (id)intersectedValuesSettingForFeature:(id)feature withUserSettingDectionary:(id)dectionary;
+ (id)unionValuesSettingForFeature:(id)feature withUserSettingDictionary:(id)dictionary;
+ (int)boolSettingForFeature:(id)feature withNewUserSetting:(id)setting currentSettings:(id)settings;
+ (id)applyRestrictions:(id)restrictions forFeature:(id)feature toParametersForBoolSetting:(id)setting;
+ (id)newEffectiveSettingsByApplyingRestrictions:(id)restrictions toSettings:(id)settings;
+ (BOOL)boolSetting:(id)setting valueChangedBetweenOldSettings:(id)settings andNewSettings:(id)settings;
+ (BOOL)valueSetting:(id)setting valueChangedBetweenOldSettings:(id)settings andNewSettings:(id)settings;
+ (BOOL)intersectedValuesSetting:(id)setting valueChangedBetweenOldSettings:(id)settings andNewSettings:(id)settings;
+ (BOOL)unionValuesSetting:(id)setting valueChangedBetweenOldSettings:(id)settings andNewSettings:(id)settings;
+ (int)appWhitelistStateWithSettingsDictionary:(id)dictionary restrictionsDictionary:(id)dictionary;
+ (BOOL)isInSingleAppModeWithSettingsDictionary:(id)dictionary;
+ (BOOL)isSingleAppModeLogoutAllowedWithSettingsDictionary:(id)dictionary;
+ (BOOL)isPasscodeRequiredToAccessWhitelistedAppsWithSettingsDictionary:(id)dictionary;
+ (BOOL)mayEnterPasscodeToAccessNonWhitelistedAppsWithSettingsDictionary:(id)dictionary;
+ (BOOL)isWhitelistedAppsRestrictionEnforcedWithRestrictionsDictionary:(id)dictionary;
+ (id)allowedOpenInAppBundleIDsWithOriginalAppBundleIDs:(id)ids managedAppBundleIDs:(id)ids localAppBundleID:(id)id localAccountIsManaged:(BOOL)managed mayOpenFromUnmanagedToManaged:(BOOL)managed mayOpenFromManagedToUnmanaged:(BOOL)unmanaged isAppBundleIDExemptBlock:(id /* block */)block isAppBundleIDAccountBasedBlock:(id /* block */)block;
+ (id)allowedImportFromAppBundleIDsWithOriginalAppBundleIDs:(id)ids managedAppBundleIDs:(id)ids localAppBundleID:(id)id localAccountIsManaged:(BOOL)managed mayOpenFromUnmanagedToManaged:(BOOL)managed mayOpenFromManagedToUnmanaged:(BOOL)unmanaged isAppBundleIDExemptBlock:(id /* block */)block isAppBundleIDAccountBasedBlock:(id /* block */)block;
+ (id)allowedKeyboardBundleIDsAfterApplyingFilterToBundleIDs:(id)ids managedAppBundleIDs:(id)ids hostAppIsManaged:(BOOL)managed mayOpenFromUnmanagedToManaged:(BOOL)managed mayOpenFromManagedToUnmanaged:(BOOL)unmanaged;
+ (BOOL)isWebContentFilterUIActiveWithRestrictionDictionary:(id)dictionary;

/* instance methods */
- (id)restrictedAppBundleIDs;
- (id)restrictedAppBundleIDsExcludingRemovedSystemApps:(BOOL)apps;
- (id)effectiveBlockedAppBundleIDsExcludingRemovedSystemApps:(BOOL)apps;
- (id)restrictionEnforcedBlockedAppBundleIDsExcludingRemovedSystemApps:(BOOL)apps;
- (id)parentalControlsBlockedAppBundleIDs;
- (id)effectiveWhitelistedAppBundleIDs;
- (id)restrictionEnforcedWhitelistedAppBundleIDs;
- (id)parentalControlsWhitelistedAppBundleIDs;
- (id)effectiveWhitelistedAppsAndOptions;
- (void)clearEffectiveWhitelistedAppsAndOptionsCache;
- (BOOL)isInSingleAppMode;
- (id)singleAppModeBundleID;
- (BOOL)isSingleAppModeLogoutAllowed;
- (BOOL)allowedToRunAppWithBundleID:(id)id;
- (id)init;
- (void)invalidateRestrictions;
- (void)invalidateSettings;
- (id)description;
- (id)potentialRestrictionsAfterApplyingRestrictionsDictionary:(id)dictionary outChangeDetected:(BOOL *)detected outError:(id *)error;
- (int)restrictedBoolForFeature:(id)feature;
- (id)valueForFeature:(id)feature;
- (id)objectForFeature:(id)feature;
- (id)intersectedValuesForFeature:(id)feature;
- (id)unionValuesForFeature:(id)feature;
- (id)systemClientRestrictions;
- (id)userClientRestrictions;
- (id)memberQueueClientRestrictionsDictionaryForClientUUID:(id)uuid;
- (id)memberQueueClientRestrictionsForClientUUID:(id)uuid;
- (id)memberQueueClientTypeForClientUUID:(id)uuid;
- (id)clientRestrictionsForClientUUID:(id)uuid;
- (id)memberQueueUserInfoForClientUUID:(id)uuid;
- (id)userInfoForClientUUID:(id)uuid;
- (id)memberQueueAppsAndOptionsForClientUUID:(id)uuid;
- (id)appsAndOptionsForClientUUID:(id)uuid;
- (id)allClientUUIDsForClientType:(id)type;
- (id)exchangeUUIDsRestrictingSettings:(id)settings;
- (BOOL)applyConfiguration:(id)configuration toDomain:(unsigned long long)domain inNamespace:(id)namespace fromSender:(id)sender;
- (id)_updatedDomainSettingsEvents:(id)events fromPreviousSettings:(id)settings toNewSettings:(id)settings sender:(id)sender;
- (id)_settingsEventFromProcess:(id)process withTag:(id)tag;
- (id)effectiveParametersForBoolSetting:(id)setting;
- (id)effectiveParametersForBoolSetting:(id)setting configurationUUID:(id)uuid;
- (id)effectiveParametersForValueSetting:(id)setting;
- (id)effectiveParametersForIntersectedSetting:(id)setting;
- (id)effectiveParametersForUnionSetting:(id)setting;
- (int)boolSettingForFeature:(id)feature;
- (id)valueSettingForFeature:(id)feature;
- (id)intersectedValuesSettingForFeature:(id)feature;
- (id)unionValuesSettingForFeature:(id)feature;
- (int)effectiveRestrictedBoolForSetting:(id)setting;
- (int)effectiveRestrictedBoolForSetting:(id)setting configurationUUID:(id)uuid;
- (id)effectiveValueForSetting:(id)setting;
- (id)effectiveIntersectedValuesForSetting:(id)setting;
- (id)effectiveUnionValuesForSetting:(id)setting;
- (id)_effectiveIntersectedValuesForSetting:(id)setting effectiveUserSettings:(id)settings;
- (id)_effectiveUnionValuesForSetting:(id)setting effectiveUserSettings:(id)settings;
- (id)profileIdentifiersRestrictingSettings:(id)settings;
- (BOOL)isSettingLockedDownByRestrictions:(id)restrictions;
- (BOOL)_isBoolSettingLockedDown:(id)down;
- (BOOL)isBoolSettingLockedDownByRestrictions:(id)restrictions;
- (BOOL)_isValueSettingLockedDown:(id)down effectiveSetting:(id)setting;
- (BOOL)isValueSettingLockedDownByRestrictions:(id)restrictions;
- (BOOL)isIntersectionSettingLockedDownByRestrictions:(id)restrictions;
- (BOOL)isUnionSettingLockedDownByRestrictions:(id)restrictions;
- (int)appWhitelistState;
@end

#endif /* MCRestrictionManager_h */
