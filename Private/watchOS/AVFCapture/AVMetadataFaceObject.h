//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 470.14.3.0.0
//
#ifndef AVMetadataFaceObject_h
#define AVMetadataFaceObject_h
@import Foundation;

#include "AVMetadataObject.h"
#include "AVMetadataFaceObjectInternal.h"
#include "NSCopying-Protocol.h"

@interface AVMetadataFaceObject : AVMetadataObject<NSCopying> {
  /* instance variables */
  AVMetadataFaceObjectInternal *_internal;
}

@property (readonly) long long faceID;
@property (readonly) BOOL hasRollAngle;
@property (readonly) double rollAngle;
@property (readonly) BOOL hasYawAngle;
@property (readonly) double yawAngle;

/* class methods */
+ (id)faceObjectWithFigEmbeddedCaptureDeviceFaceDictionary:(id)dictionary timeStamp:(id)stamp;

/* instance methods */
- (id)initWithType:(id)type time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds optionalInfoDict:(id)dict originalMetadataObject:(id)object;
- (id)initWithFaceID:(long long)id hasRollAngle:(BOOL)angle rollAngle:(double)angle hasYawAngle:(BOOL)angle yawAngle:(double)angle hasPitchAngle:(BOOL)angle pitchAngle:(double)angle time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)initWithFaceID:(long long)id hasRollAngle:(BOOL)angle rollAngle:(double)angle hasYawAngle:(BOOL)angle yawAngle:(double)angle hasPitchAngle:(BOOL)angle pitchAngle:(double)angle time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration bounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds optionalInfoDict:(id)dict originalMetadataObject:(id)object;
- (id)initWithFigEmbeddedCaptureDeviceFaceDictionary:(id)dictionary timeStamp:(id)stamp;
- (id)initDerivedMetadataObjectFromMetadataObject:(id)object withTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform isVideoMirrored:(BOOL)mirrored rollAdjustment:(double)adjustment;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (BOOL)hasLeftEyeClosedConfidence;
- (BOOL)hasRightEyeClosedConfidence;
- (int)leftEyeClosedConfidence;
- (int)rightEyeClosedConfidence;
- (BOOL)hasSmileConfidence;
- (int)smileConfidence;
- (BOOL)hasLeftEyeBounds;
- (BOOL)hasRightEyeBounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })leftEyeBounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rightEyeBounds;
- (BOOL)hasPitchAngle;
- (double)pitchAngle;
@end

#endif /* AVMetadataFaceObject_h */
