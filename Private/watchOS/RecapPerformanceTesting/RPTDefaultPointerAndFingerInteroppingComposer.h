//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 47.1.0.0.0
//
#ifndef RPTDefaultPointerAndFingerInteroppingComposer_h
#define RPTDefaultPointerAndFingerInteroppingComposer_h
@import Foundation;

#include "NSProxy.h"
#include "RCPEventStreamComposer-Protocol.h"
#include "RPTComposer-Protocol.h"
#include "RPTInteractionOptions.h"

@class CAMediaTimingFunction, NSString, RCPEventSenderProperties;

@interface RPTDefaultPointerAndFingerInteroppingComposer : NSProxy<RPTComposer>

@property (readonly, nonatomic) BOOL _usePointer;
@property (nonatomic) struct CGPoint { double x0; double x1; } _currentlySetAbsolutePosition;
@property (retain, nonatomic) NSObject<RCPEventStreamComposer> *forwardingTarget;
@property (readonly, nonatomic) RPTInteractionOptions *interactionOptions;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (@dynamic, nonatomic) long long touchFrequency;
@property (retain, nonatomic) CAMediaTimingFunction *touchCurveFunction;
@property (readonly, @dynamic, nonatomic) double defaultPressure;
@property (readonly, @dynamic, nonatomic) double defaultRadius;
@property (retain, @dynamic, nonatomic) RCPEventSenderProperties *senderProperties;

/* class methods */
+ (id)composerWrapping:(id)wrapping withInteractionOptions:(id)options;

/* instance methods */
- (void)overrideInteractionOptions:(id)options withEventActionsBlock:(id /* block */)block;
- (id)initFromWrapping:(id)wrapping interactionOptions:(id)options;
- (void)pointerOrFingerScrollAt:(struct CGPoint { double x0; double x1; })at byDelta:(struct CGVector { double x0; double x1; })delta duration:(double)duration;
- (void)_pointerOrFingerScrollAt:(struct CGPoint { double x0; double x1; })at byDelta:(struct CGVector { double x0; double x1; })delta duration:(double)duration touchDownAndLift:(BOOL)lift;
- (void)_pointerOrFingerFlickAt:(struct CGPoint { double x0; double x1; })at byDelta:(struct CGVector { double x0; double x1; })delta duration:(double)duration;
- (void)pointerMoveToPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration;
- (void)pointerMoveDelta:(struct CGPoint { double x0; double x1; })delta duration:(double)duration frequency:(long long)frequency;
- (void)pointerMoveToPointIfApplicable:(struct CGPoint { double x0; double x1; })applicable;
- (void)pointerOrFingerTapDown:(struct CGPoint { double x0; double x1; })down;
- (void)pointerOrFingerMoveToPoint:(struct CGPoint { double x0; double x1; })point duration:(double)duration;
- (void)pointerOrFingerTapUp:(struct CGPoint { double x0; double x1; })up;
- (void)pointerOrFingerDragWithStartPoint:(struct CGPoint { double x0; double x1; })point mask:(unsigned long long)mask endPoint:(struct CGPoint { double x0; double x1; })point mask:(unsigned long long)mask duration:(double)duration;
- (void)pointerOrFingerTap:(struct CGPoint { double x0; double x1; })tap;
- (void)pointerOrFingerDoubleTap:(struct CGPoint { double x0; double x1; })tap;
- (BOOL)conformsToProtocol:(id)protocol;
- (BOOL)respondsToSelector:(SEL)selector;
- (id)forwardingTargetForSelector:(SEL)selector;
- (id)methodSignatureForSelector:(SEL)selector;
- (void)forwardInvocation:(id)invocation;
@end

#endif /* RPTDefaultPointerAndFingerInteroppingComposer_h */
