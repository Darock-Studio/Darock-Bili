//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 583.1.13.0.0
//
#ifndef TTSSpeechServer_h
#define TTSSpeechServer_h
@import Foundation;

#include "TTSSpeechServerInstance.h"
#include "TTSSpeechService-Protocol.h"
#include "TTSSpeechServiceUnitTesting-Protocol.h"

@class NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface TTSSpeechServer : NSObject<TTSSpeechService, TTSSpeechServiceUnitTesting> {
  /* instance variables */
  NSMutableDictionary *_serverInstances;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *mobileAssetWorkQueue;
@property (retain, nonatomic) TTSSpeechServerInstance *speechInitializationInstance;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)regexRules;

/* instance methods */
- (id)init;
- (BOOL)isNashvilleService;
- (BOOL)isSiriService;
- (id)getNewSpeechServerInstance;
- (void)initializeSpeechServerInstance:(unsigned long long)instance;
- (void)setServiceQueue:(id)queue forSynthesizerInstanceID:(unsigned long long)id;
- (void)synthesizerInstanceDestroyed:(unsigned long long)destroyed;
- (void)startSpeechRequest:(id)request;
- (void)pauseSpeechRequest:(id)request atMark:(long long)mark;
- (void)continueSpeechRequest:(id)request;
- (void)stopSpeechRequest:(id)request atMark:(long long)mark;
- (void)getSpeechIsActiveForRequest:(id)request reply:(id /* block */)reply;
- (id)_ttsCopyVoiceInfo:(id)info type:(long long)type queryingMobileAssets:(BOOL)assets;
- (id)enclosedStringWithPhonemes:(id)phonemes originalString:(id)string;
- (id)audioFileSettingsForVoice:(id)voice;
- (id)embeddedPitchMarkupForVoice:(id)voice string:(id)string pitch:(double)pitch;
- (id)embeddedVolumeMarkupForVoice:(id)voice string:(id)string volume:(double)volume;
- (id)embeddedRateMarkupForVoice:(id)voice string:(id)string rate:(double)rate;
- (id)genericMarkerMarkupForVoice:(id)voice name:(id)name;
- (id)combinedProsodyMarkupForVoice:(id)voice string:(id)string rate:(id)rate pitch:(id)pitch volume:(id)volume;
- (BOOL)requiresLHPPhonemes;
- (BOOL)employSpeechMarkupForType:(long long)type language:(id)language;
- (id)_behavesBadlyWithSpellMarkupForVoice:(id)voice string:(id)string markupType:(long long)type;
- (id)speechMarkupStringForType:(long long)type voice:(id)voice string:(id)string;
- (BOOL)isVoiceValid:(id)valid;
- (BOOL)isSiriNeuralVoice:(id)voice;
- (id)supportedIPAPhonemeLanguages;
- (id)lhPhonemesFromIPA:(id)ipa language:(id)language;
- (id)phonemesFromIPA:(id)ipa language:(id)language;
- (BOOL)canInitializeSpeech:(id)speech;
- (struct __CFArray *)loadedVoiceResources;
- (id)getVocalizerWithLanguage:(id)language defaultLanguage:(id)language reinitIfNecessary:(BOOL)necessary forceReinit:(BOOL)reinit voiceType:(long long)type gender:(long long)gender footprint:(long long)footprint voiceName:(id)name voiceIdentifier:(id)identifier error:(id *)error;
@end

#endif /* TTSSpeechServer_h */
