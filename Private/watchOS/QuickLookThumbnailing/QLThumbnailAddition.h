//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 186.2.2.0.0
//
#ifndef QLThumbnailAddition_h
#define QLThumbnailAddition_h
@import Foundation;

#include "QLThumbnailVersion.h"

@class GSAddition, NSDictionary, NSURL;

@interface QLThumbnailAddition : NSObject {
  /* instance variables */
  GSAddition *_addition;
}

@property (readonly) GSAddition *genStoreAddition;
@property (retain) NSURL *additionURL;
@property (retain) NSDictionary *thumbnailDataDictionary;
@property (retain) NSDictionary *metadata;
@property long long additionURLSandboxToken;
@property (readonly) QLThumbnailVersion *thumbnailVersion;
@property (readonly) unsigned long long additionSize;

/* class methods */
+ (id)plistInExtendedAttributeNamed:(const char *)named flags:(unsigned long long)flags onFileDescriptor:(int)descriptor error:(id *)error;
+ (BOOL)setPropertyList:(id)list forExtendedAttributeNamed:(const char *)named flags:(unsigned long long)flags onFileDescriptor:(int)descriptor error:(id *)error;
+ (BOOL)removeExtendedAttributeNamed:(const char *)named flags:(unsigned long long)flags onFileDescriptor:(int)descriptor error:(id *)error;
+ (unsigned long long)sizeOfAdditionsPresentOnURL:(id)url;
+ (id)additionCreationInfo;
+ (void)_hitAdditionsOnURL:(id)url size:(unsigned long long)size completionHandler:(id /* block */)handler;
+ (BOOL)storeThumbnailDataDictionary:(id)dictionary metadata:(id)metadata asExtendedAttributeOnURL:(id)url error:(id *)error;
+ (BOOL)removeThumbnailsStoredInExtendedAttributesOnURL:(id)url error:(id *)error;
+ (BOOL)associateThumbnailImagesDictionary:(id)dictionary serializedQuickLookMetadata:(id)metadata withDocumentAtURL:(id)url error:(id *)error;
+ (id)imageNameFor1024ThumbnailInMetadataDictionary:(id)dictionary;
+ (id)imageNameForThumbnailInImageSource:(struct CGImageSource *)source;
+ (id)imageNameFor1024ThumbnailAtURL:(id)url metadataDictionary:(id)dictionary;
+ (id)imageNameFor1024ThumbnailData:(id)data metadataDictionary:(id)dictionary;
+ (BOOL)associateThumbnailImagesDictionary:(id)dictionary serializedQuickLookMetadata:(id)metadata withImmutableDocument:(BOOL)document atURL:(id)url error:(id *)error;
+ (void)adjustFileProtectionForThumbnail:(id)thumbnail fromOriginalDocument:(id)document;
+ (BOOL)hasThumbnailOnImmutableDocumentAtURL:(id)url;
+ (BOOL)makeAdditionFromStagingURL:(id)url metadata:(id)metadata inStorage:(id)storage error:(id *)error;
+ (BOOL)imageContainsAlphaForOtherImages:(struct CGImage *)images;
+ (BOOL)imageContainsAlpha:(struct CGImage *)alpha;
+ (id)metadataForGeneratedThumbnailForURL:(id)url maximumDimension:(double)dimension;
+ (BOOL)associateImage:(struct CGImage *)image metadata:(id)metadata automaticallyGenerated:(BOOL)generated withURL:(id)url error:(id *)error;
+ (BOOL)_removeAdditionsOnURLDirectly:(id)urldirectly error:(id *)error;
+ (BOOL)_removeAdditionsOnURLUsingDaemon:(id)daemon error:(id *)error;
+ (BOOL)_removedAdditionsOnURLUsingDaemon:(id)daemon;
+ (BOOL)_removedAdditionsOnURL:(id)url;
+ (BOOL)removeAdditionsOnURL:(id)url error:(id *)error;
+ (id)thumbnailsDictionaryForURL:(id)url error:(id *)error;
+ (void)generateThumbnailIfPossibleAtLogicalURL:(id)url completionHandler:(id /* block */)handler;
+ (void)downloadOrGenerateThumbnailAtURL:(id)url;
+ (void)downloadOrGenerateThumbnailAtURL:(id)url completionHandler:(id /* block */)handler;
+ (void)downloadOrGenerateThumbnailAtTaggedURL:(id)url completionHandler:(id /* block */)handler;
+ (void)preFPFSDownloadThumbnailAtTaggedURL:(id)url completionHandler:(id /* block */)handler;
+ (void)preFPFSDownloadOrGenerateThumbnailAtTaggedURL:(id)url completionHandler:(id /* block */)handler;
+ (void)fpfsDownloadOrGenerateThumbnailAtTaggedURL:(id)url completionHandler:(id /* block */)handler;
+ (BOOL)setThumbnailsDictionary:(id)dictionary forURL:(id)url error:(id *)error;
+ (BOOL)shouldUseXattrsToStoreThumbnailsOnURL:(id)url;
+ (BOOL)associateThumbnailsForDocumentAtURL:(id)url withDocumentAtURL:(id)url error:(id *)error;
+ (BOOL)associateThumbnailsForDocumentAtURL:(id)url withImmutableDocument:(BOOL)document atURL:(id)url error:(id *)error;
+ (void)noteCloudDocsDownloadedFileAtURL:(id)url completionHandler:(id /* block */)handler;

/* instance methods */
- (void)dealloc;
- (BOOL)shouldBeInvalidatedByThumbnailVersion:(id)version;
- (id)thumbnailURLForKey:(id)key;
- (id)thumbnailDataForKey:(id)key;
- (BOOL)_initWithAdditionsPresentOnURLDirectly:(id)urldirectly error:(id *)error;
- (BOOL)_initWithAdditionsPresentOnURLUsingDaemon:(id)daemon error:(id *)error;
- (BOOL)_initWithXattrsPresentOnURL:(id)url error:(id *)error;
- (id)initWithAdditionsPresentOnURL:(id)url error:(id *)error;
- (id)initWithAdditionsPresentOnURL:(id)url includingExtendedAttributes:(BOOL)attributes error:(id *)error;
- (struct CGImage *)thumbnailWithMaximumDimension:(double)dimension contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect properties:(id *)properties;
- (id)thumbnailsDictionaryWithError:(id *)error;
- (id)allImageURLs;
@end

#endif /* QLThumbnailAddition_h */
