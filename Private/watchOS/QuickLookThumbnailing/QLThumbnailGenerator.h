//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 186.2.2.0.0
//
#ifndef QLThumbnailGenerator_h
#define QLThumbnailGenerator_h
@import Foundation;

#include "QLIncrementalThumbnailGenerationHandler-Protocol.h"
#include "QLThumbnailServiceProxy.h"

@class NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface QLThumbnailGenerator : NSObject<QLIncrementalThumbnailGenerationHandler>

@property (retain, nonatomic) NSMutableDictionary *requests;
@property (retain, nonatomic) NSMutableDictionary *iconsByType;
@property (nonatomic) unsigned long long batchingCount;
@property (retain, nonatomic) NSMutableDictionary *pendingCancelledRequests;
@property (retain, nonatomic) NSMutableDictionary *pendingGenerationRequests;
@property (retain, nonatomic) NSMutableDictionary *preparingGenerationRequests;
@property (retain, nonatomic) QLThumbnailServiceProxy *thumbnailServiceProxy;
@property (retain, nonatomic) QLThumbnailServiceProxy *syncThumbnailServiceProxy;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *requestPreparationQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *serialResponseQueue;
@property (readonly, nonatomic) struct os_unfair_lock_s { unsigned int x0; } iconsLock;

/* class methods */
+ (id)debugDescriptionForErrorCode:(long long)code;
+ (void)initialize;
+ (id)sharedGenerator;
+ (id)errorWithCode:(long long)code request:(id)request additionalUserInfo:(id)info;

/* instance methods */
- (id)init;
- (void)generateBestRepresentationForRequest:(id)request completionHandler:(id /* block */)handler;
- (void)generateRepresentationsForRequest:(id)request updateHandler:(id /* block */)handler;
- (void)generateThumbnailForRequest:(id)request updateHandler:(id /* block */)handler statusHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)synchronousGenerateThumbnailForRequest:(id)request updateHandler:(id /* block */)handler statusHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)saveBestRepresentationForRequest:(id)request toFileAtURL:(id)url withContentType:(id)type completionHandler:(id /* block */)handler;
- (void)saveBestRepresentationForRequest:(id)request toFileAtURL:(id)url withContentType:(id)type allowingThumbnailDownloads:(BOOL)downloads completionHandler:(id /* block */)handler;
- (void)saveBestRepresentationForRequest:(id)request toFileHandle:(id)handle withContentType:(id)type allowingThumbnailDownloads:(BOOL)downloads completionHandler:(id /* block */)handler;
- (void)cancelRequest:(id)request;
- (BOOL)_cancelRequestIfNeeded:(id)needed;
- (void)performInBatch:(id /* block */)batch;
- (void)_performInBatch:(id /* block */)batch;
- (BOOL)_isBuildingBatch;
- (void)_addRequest:(id)request;
- (void)_removeRequest:(id)request;
- (void)__removeRequestWithUUID:(id)uuid;
- (id)_requestWithUUID:(id)uuid;
- (id)__requestWithUUID:(id)uuid;
- (BOOL)__requestWithUUIDIsStillRunning:(id)running;
- (void)_sendPendingBatches;
- (void)_sendSyncGenerationRequest:(id)request;
- (void)_sendPendingGenerationRequests;
- (void)_sendPendingCancelledRequests;
- (void)_prepareThumbnailRequestForQueueOrSending:(id)sending synchronous:(BOOL)synchronous;
- (void)_queueThumbnailRequest:(id)request;
- (void)_prepareSyncThumbnailRequest:(id)request;
- (void)_queueIconGenerationForRequestIfNeeded:(id)needed;
- (BOOL)_queueThumbnailGenerationForRequestIfNeeded:(id)needed;
- (void)_handleThumbnailGenerationCompletionWithUUID:(id)uuid data:(id)data format:(id)format metadata:(id)metadata contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect iconFlavor:(int)flavor thumbnailType:(long long)type clientShouldTakeOwnership:(BOOL)ownership error:(id)error;
- (void)_notifyClientWithNewThumbnailRepresentationForRequestIfNeeded:(id)needed thumbnail:(id)thumbnail type:(long long)type error:(id)error;
- (void)__notifyClientWithNewThumbnailRepresentationForRequestIfNeeded:(id)needed thumbnail:(id)thumbnail type:(long long)type error:(id)error;
- (id)thumbnailIconForRequest:(id)request;
- (void)_callUpdateBlockOfRequestIfRunning:(id)running andUpdateMostRepresentativeThumbnail:(id)thumbnail type:(long long)type error:(id)error;
- (void)_setMostRepresentativeThumbnail:(id)thumbnail forRequest:(id)request;
- (void)_finishAndCallCompletionBlockOfRequest:(id)request withError:(id)error;
- (void)_finishRequest:(id)request withError:(id)error;
- (void)__finishRequest:(id)request withError:(id)error;
- (void)_callCompletionBlockOfRequest:(id)request withError:(id)error;
- (void)__callCompletionBlockOfRequest:(id)request withError:(id)error;
- (void)_finishRequestWithoutError:(id)error;
- (void)__finishRequestWithoutError:(id)error;
- (BOOL)_finishRequestIfInvalid:(id)invalid;
- (BOOL)__finishRequestIfInvalid:(id)invalid;
- (BOOL)_finishRequestIfNeeded:(id)needed;
- (BOOL)__finishRequestIfNeeded:(id)needed;
- (void)_finishAllRequestsWithError:(id)error;
- (void)_logRequestDuration:(id)duration;
- (void)didUpdateStatus:(long long)status ofThumbnailGenerationWithUUID:(id)uuid;
- (void)didGenerateThumbnailForRequestWithUUID:(id)uuid data:(id)data bitmapFormat:(id)format metadata:(id)metadata contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect iconFlavor:(int)flavor thumbnailType:(long long)type clientShouldTakeOwnership:(BOOL)ownership;
- (void)failedToGenerateThumbnailOfType:(long long)type forRequestWithUUID:(id)uuid error:(id)error;
- (void)_createThumbnailServiceProxy;
- (void)_createSyncThumbnailServiceProxy;
- (BOOL)_requestRepresentationTypeIsMoreRepresentative:(id)representative thanType:(long long)type;
@end

#endif /* QLThumbnailGenerator_h */
