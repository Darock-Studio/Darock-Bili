//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 186.2.2.0.0
//
#ifndef QLThumbnailGenerationRequest_h
#define QLThumbnailGenerationRequest_h
@import Foundation;

#include "FPSandboxingURLWrapper.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "QLCacheBasicVersionedFileIdentifier.h"
#include "QLThumbnailRepresentation.h"

@class FPItem, NSData, NSDate, NSDictionary, NSError, NSFileHandle, NSString, NSURL, NSUUID, UTType;

@interface QLThumbnailGenerationRequest : NSObject<NSCopying, NSSecureCoding>

@property (retain, nonatomic) QLThumbnailRepresentation *mostRepresentativeThumbnail;
@property (copy, nonatomic) id /* block */ updateBlock;
@property (copy, nonatomic) id /* block */ completionBlock;
@property (copy, nonatomic) id /* block */ statusBlock;
@property (readonly, nonatomic) long long mostRepresentativeTypeForWhichUpdateBlockHasBeenCalled;
@property (retain, nonatomic) FPSandboxingURLWrapper *quicklookSandboxWrapper;
@property (retain, nonatomic) FPSandboxingURLWrapper *genericSandboxWrapper;
@property (retain, nonatomic) FPSandboxingURLWrapper *parentDirectorySandboxWrapper;
@property (retain, nonatomic) NSURL *fileURL;
@property (retain, nonatomic) FPItem *item;
@property (retain, nonatomic) NSData *data;
@property (retain, nonatomic) NSUUID *uuid;
@property (retain, nonatomic) NSString *contentTypeUTI;
@property (retain, nonatomic) QLCacheBasicVersionedFileIdentifier *basicFileIdentifier;
@property (nonatomic) unsigned long long badgeType;
@property (nonatomic) long long iconVariant;
@property (nonatomic) BOOL wantsBaseline;
@property (nonatomic) long long generationBehavior;
@property (nonatomic) int interpolationQuality;
@property (retain, nonatomic) NSError *requestIsInvalidError;
@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (nonatomic) double scale;
@property (nonatomic) unsigned long long representationTypes;
@property (retain, nonatomic) NSDictionary *externalThumbnailGeneratorData;
@property (nonatomic) unsigned long long externalThumbnailGeneratorDataHash;
@property (nonatomic) BOOL shouldUseRestrictedExtension;
@property (nonatomic) BOOL cancelled;
@property (nonatomic) BOOL finished;
@property (retain, nonatomic) NSDate *beginDate;
@property (retain, nonatomic) QLThumbnailRepresentation *mostRepresentativeThumbnail;
@property (copy, nonatomic) id /* block */ updateBlock;
@property (copy, nonatomic) id /* block */ completionBlock;
@property (copy, nonatomic) id /* block */ statusBlock;
@property (retain, nonatomic) FPSandboxingURLWrapper *saveURLSandboxWrapper;
@property (retain, nonatomic) NSFileHandle *saveFileHandle;
@property (nonatomic) BOOL downloadingAllowed;
@property (copy, nonatomic) NSString *saveURLContentType;
@property (nonatomic) unsigned long long typesForWhichUpdateBlockHasBeenCalled;
@property (retain, nonatomic) UTType *overriddenContentType;
@property (retain, nonatomic) NSString *overriddenContentTypeIdentifier;
@property (nonatomic) BOOL thirdPartyVideoDecodersAllowed;
@property (copy, nonatomic) UTType *contentType;
@property (nonatomic) double minimumDimension;
@property (nonatomic) BOOL iconMode;

/* class methods */
+ (id)requestWithThumbnailRequest:(id)request;
+ (id)_basicFileIdentifierForURL:(id)url error:(id *)error;
+ (BOOL)supportsSecureCoding;
+ (id)customExtensionCommunicationEncodedClasses;

/* instance methods */
- (void)cancel;
- (void)finish;
- (void)markDidBegin;
- (BOOL)thumbnailRepresentationTypeMatchesRequestedMostRepresentativeType:(long long)type;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size scale:(double)scale representationTypes:(unsigned long long)types;
- (id)initWithFileAtURL:(id)url size:(struct CGSize { double x0; double x1; })size scale:(double)scale representationTypes:(unsigned long long)types;
- (id)initWithData:(id)data contentType:(id)type size:(struct CGSize { double x0; double x1; })size scale:(double)scale representationTypes:(unsigned long long)types;
- (void)setSaveURL:(id)url;
- (id)fileIdentifier;
- (id)saveURL;
- (float)maximumPixelSize;
- (BOOL)provideGenericIcon;
- (BOOL)provideLowQualityThumbnail;
- (BOOL)provideFullResolutionThumbnail;
- (BOOL)provideCachedResultsOnly;
- (BOOL)forceGeneration;
- (long long)requestedMostRepresentativeType;
- (BOOL)isUbiquitous;
- (BOOL)isFileBased;
- (BOOL)isDataBased;
- (BOOL)resultShouldBeSavedToDisk;
- (id)equivalentFPItemRequestWithItem:(id)item representationTypes:(unsigned long long)types;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (long long)compare:(id)compare;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copyWithSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)description;
- (id)_stateDescription;
- (BOOL)prepareForSending;
- (BOOL)isValid;
- (void)noteUpdateBlockHasBeenCalledForType:(long long)type;
- (BOOL)isCancelled;
- (BOOL)isFinished;
- (BOOL)isDownloadingAllowed;
@end

#endif /* QLThumbnailGenerationRequest_h */
