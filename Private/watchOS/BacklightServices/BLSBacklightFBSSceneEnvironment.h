//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3.2.4.0.0
//
#ifndef BLSBacklightFBSSceneEnvironment_h
#define BLSBacklightFBSSceneEnvironment_h
@import Foundation;

#include "BLSAlwaysOnFrameSpecifier.h"
#include "BLSAlwaysOnSession.h"
#include "BLSBacklightSceneEnvironmentUpdating-Protocol.h"
#include "BLSBacklightSceneEnvironment_Private-Protocol.h"
#include "BLSBacklightSceneVisualState.h"

@class FBSScene, NSDate, NSString;
@protocol BLSBacklightSceneEnvironmentDelegate;

@interface BLSBacklightFBSSceneEnvironment : NSObject<BLSBacklightSceneEnvironment_Private> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (weak) FBSScene *fbsScene;
@property BOOL optsOutOfProcessAssertions;
@property (readonly) NSDate *presentationDate;
@property (retain) BLSAlwaysOnSession *alwaysOnSession;
@property BOOL animatingVisualState;
@property (retain) NSObject<BLSBacklightSceneEnvironmentUpdating> *updater;
@property (retain) NSObject<BLSBacklightSceneEnvironmentDelegate> *delegate;
@property (readonly, copy) NSString *identifier;
@property (readonly) BOOL delegateActive;
@property (readonly) BOOL displayBlanked;
@property (readonly) BLSBacklightSceneVisualState *visualState;
@property (readonly) BLSAlwaysOnFrameSpecifier *frameSpecifier;
@property (readonly) BOOL liveUpdating;
@property (readonly) BOOL unrestrictedFramerateUpdates;
@property BOOL supportsAlwaysOn;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)createEnvironmentForFBSScene:(id)fbsscene;

/* instance methods */
- (id)initWithFBSScene:(id)fbsscene;
- (BOOL)isDelegateActive;
- (BOOL)isDisplayBlanked;
- (BOOL)isLiveUpdating;
- (BOOL)hasUnrestrictedFramerateUpdates;
- (void)invalidateAllTimelinesForReason:(id)reason;
- (BOOL)isAnimatingVisualState;
- (id)_FBSScene;
- (void)_setFBSScene:(id)fbsscene;
@end

#endif /* BLSBacklightFBSSceneEnvironment_h */
