//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKStackedLeadingTrailingLabelCell_h
#define PKStackedLeadingTrailingLabelCell_h
@import Foundation;

#include "UICollectionViewListCell.h"
#include "PKProgressBar.h"

@class NSString, UIColor, UILabel;

@interface PKStackedLeadingTrailingLabelCell : UICollectionViewListCell {
  /* instance variables */
  UILabel *_leadingPrimaryLabel;
  UILabel *_leadingSecondaryLabel;
  UILabel *_trailingPrimaryLabel;
  UILabel *_trailingSecondaryLabel;
  UILabel *_detailLabel;
  PKProgressBar *_progressBar;
}

@property (copy, nonatomic) NSString *leadingPrimaryText;
@property (copy, nonatomic) NSString *leadingSecondaryText;
@property (copy, nonatomic) NSString *trailingPrimaryText;
@property (copy, nonatomic) NSString *trailingSecondaryText;
@property (copy, nonatomic) NSString *detailText;
@property (nonatomic) BOOL showProgressBar;
@property (nonatomic) double progress;
@property (retain, nonatomic) UIColor *progressBarStartColor;
@property (retain, nonatomic) UIColor *progressBarEndColor;

/* instance methods */
- (void)_updateProgressBar;
- (void)layoutSubviews;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (struct CGSize { double x0; double x1; })_layoutWithBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds isTemplateLayout:(BOOL)layout;
- (double)_layoutLabelsSideBySide:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })side allocated:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)allocated unallocated:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)unallocated isTemplateLayout:(BOOL)layout;
- (double)_layoutLabelsStacked:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })stacked allocated:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)allocated unallocated:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)unallocated isTemplateLayout:(BOOL)layout;
- (void)prepareForReuse;
@end

#endif /* PKStackedLeadingTrailingLabelCell_h */
