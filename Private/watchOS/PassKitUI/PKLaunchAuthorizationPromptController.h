//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKLaunchAuthorizationPromptController_h
#define PKLaunchAuthorizationPromptController_h
@import Foundation;

#include "CLLocationManagerDelegate-Protocol.h"
#include "PKLaunchAuthorizationPromptDelegate-Protocol.h"
#include "PKUserNotificationAuthorizationExplanationViewController.h"

@class CLLocationManager, NSString;
@protocol PKPassLibraryDataProvider;

@interface PKLaunchAuthorizationPromptController : NSObject<CLLocationManagerDelegate> {
  /* instance variables */
  long long _context;
  NSObject<PKPassLibraryDataProvider> *_dataProvider;
  NSObject<PKLaunchAuthorizationPromptDelegate> *_delegate;
  unsigned long long _shouldShowLaunchPrompts;
  PKUserNotificationAuthorizationExplanationViewController *_userNotificationAuthorizationViewController;
  CLLocationManager *_locationManager;
  BOOL _locationAuthorizationQueried;
}

@property (readonly, nonatomic) BOOL isPresentingNotificationAuthorizationPrompt;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithContext:(long long)context dataProvider:(id)provider delegate:(id)delegate;
- (void)presentLaunchPromptsForPassesIfNeeded:(id)needed;
- (void)enableLaunchPromptsForSession;
- (void)disableLaunchPromptsForSession;
- (void)resetLaunchPromptsForNextSession;
- (void)locationManagerDidChangeAuthorization:(id)authorization;
@end

#endif /* PKLaunchAuthorizationPromptController_h */
