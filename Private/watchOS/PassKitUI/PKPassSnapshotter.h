//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKPassSnapshotter_h
#define PKPassSnapshotter_h
@import Foundation;

@class NSMutableArray, PKPassLibrary;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface PKPassSnapshotter : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  PKPassLibrary *_passLibrary;
  NSObject<OS_dispatch_semaphore> *_snapshotSem;
  double _scale;
  NSMutableArray *_currentSnapshotKeys;
}

@property (nonatomic) BOOL runsInBackgroundProcess;

/* class methods */
+ (id)sharedInstance;
+ (void)purgeCache;
+ (void)purgeCacheOfPassSnapshotsWithUinqueID:(id)id;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)passLibrary;
- (void)snapshotWithPass:(id)pass completion:(id /* block */)completion;
- (void)snapshotWithPass:(id)pass size:(struct CGSize { double x0; double x1; })size completion:(id /* block */)completion;
- (void)snapshotWithPass:(id)pass size:(struct CGSize { double x0; double x1; })size suppressedContent:(unsigned long long)content completion:(id /* block */)completion;
- (void)snapshotWithUniqueID:(id)id completion:(id /* block */)completion;
- (void)snapshotWithUniqueID:(id)id size:(struct CGSize { double x0; double x1; })size completion:(id /* block */)completion;
- (void)snapshotWithUniqueID:(id)id size:(struct CGSize { double x0; double x1; })size suppressedContent:(unsigned long long)content completion:(id /* block */)completion;
- (void)snapshotWithUniqueID:(id)id manifestHash:(id)hash size:(struct CGSize { double x0; double x1; })size completion:(id /* block */)completion;
- (void)_snapshotWithPass:(id)pass size:(struct CGSize { double x0; double x1; })size suppressedContent:(unsigned long long)content withCache:(BOOL)cache completion:(id /* block */)completion;
- (void)_prepareSnapshotViewWithPass:(id)pass size:(struct CGSize { double x0; double x1; })size suppressedContent:(unsigned long long)content cacheKey:(id)key completion:(id /* block */)completion;
- (void)_performSnapshot:(id)snapshot size:(struct CGSize { double x0; double x1; })size cacheKey:(id)key completion:(id /* block */)completion;
- (void)_cacheItem:(id)item withKey:(id)key;
- (BOOL)_cachedImageWithKey:(id)key completion:(id /* block */)completion;
@end

#endif /* PKPassSnapshotter_h */
