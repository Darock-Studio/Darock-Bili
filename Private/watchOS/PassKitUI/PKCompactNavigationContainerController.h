//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKCompactNavigationContainerController_h
#define PKCompactNavigationContainerController_h
@import Foundation;

#include "UIViewController.h"
#include "PKCompactNavigationContainedNavigationController.h"
#include "PKCompactNavigationContainedNavigationWrapperViewController.h"
#include "PKCompactNavigationContainerControllerDelegate-Protocol.h"
#include "PKContentContainerObserver-Protocol.h"
#include "PKViewWindowObserver-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "UINavigationControllerDelegate-Protocol.h"
#include "UIViewControllerTransitioningDelegate-Protocol.h"

@class NSString, UITapGestureRecognizer, UIView, UIViewController;
@protocol UICoordinateSpace;

@interface PKCompactNavigationContainerController : UIViewController<UIViewControllerTransitioningDelegate, UINavigationControllerDelegate, UIGestureRecognizerDelegate, PKContentContainerObserver, PKViewWindowObserver> {
  /* instance variables */
  BOOL _centeredCard;
  BOOL _hasExplicitlyDefinedSupportedInterfaceOrientations;
  unsigned long long _explicitlyDefinedSupportedInterfaceOrientations;
  BOOL _requiresMasking;
  UIView *_maskingContainerView;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _maximumModalPresentationFrame;
  PKCompactNavigationContainedNavigationWrapperViewController *_presentationContextVC;
  struct { struct CGSize { double width; double height; } preferredContentSize; double minimumNavigationHeight; BOOL isRoot; } _topVCInfo;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _statusBarFrame;
  unsigned short _layoutGroupCounter;
  unsigned short _contentSizeUpdateDeferralCounter;
  BOOL _deferredContentSizeUpdate;
  BOOL _deferredContentSizeUpdateIsAnimated;
  BOOL _deferredContentSizeUpdateIsForced;
  UIViewController *_topVC;
  BOOL _topVCIsExpectedClass;
  BOOL _topVCIsInInitialLayout;
  UIViewController *_pendingTopVC;
  unsigned long long _pendingTopVCIdentifier;
  unsigned long long _updateChildViewControllerSizeCounter;
  UITapGestureRecognizer *_tapGestureRecognizer;
  unsigned char _visibility;
  BOOL _keyboardVisible;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _keyboardFrame;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastKeyboardFrame;
}

@property (nonatomic) BOOL presentingNavigationController;
@property (nonatomic) BOOL didMoveToWindowDirtiesLayout;
@property (readonly, nonatomic) PKCompactNavigationContainedNavigationController *containedNavigationController;
@property (readonly, nonatomic) unsigned long long style;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } exclusionRect;
@property (readonly, nonatomic) NSObject<UICoordinateSpace> *exclusionCoordinateSpace;
@property (weak, nonatomic) NSObject<PKCompactNavigationContainerControllerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)dimmingColor;

/* instance methods */
- (id)initWithNibName:(id)name bundle:(id)bundle;
- (id)init;
- (id)initWithNavigationController:(id)controller;
- (id)initWithNavigationController:(id)controller style:(unsigned long long)style;
- (void)dealloc;
- (void)loadView;
- (void)viewDidLoad;
- (BOOL)_canShowWhileLocked;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_targetNavigationControllerFrameForInfo:(struct { struct CGSize { double x0; double x1; } x0; double x1; BOOL x2; })info;
- (void)_beginLayoutGroup;
- (void)_endLayoutGroup;
- (void)insertBackgroundLevelView:(id)view;
- (struct CGSize { double x0; double x1; })childViewControllerPreferredContentSizeForSize:(struct CGSize { double x0; double x1; })size isRoot:(BOOL)root;
- (struct CGSize { double x0; double x1; })navigationControllerSizeForChildViewControllerPreferredContentSize:(struct CGSize { double x0; double x1; })size isRoot:(BOOL)root;
- (struct CGSize { double x0; double x1; })childViewControllerSizeForNavigationControllerSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })modalPresentationSize;
- (unsigned long long)supportedInterfaceOrientations;
- (void)setSupportedInterfaceOrientations:(unsigned long long)orientations;
- (void)setExclusionRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect withCoordinateSpace:(id)space;
- (id)_backgroundColor;
- (void)updateChildViewControllerSizeAnimated:(BOOL)animated;
- (void)updateChildViewControllerSizeAnimated:(BOOL)animated forceUpdate:(BOOL)update;
- (void)_updateTopViewControllerAsync:(id)async animated:(BOOL)animated;
- (void)_updateTopViewController:(id)controller animated:(BOOL)animated;
- (struct { struct CGSize { double x0; double x1; } x0; double x1; BOOL x2; })_infoForViewController:(id)controller;
- (struct CGSize { double x0; double x1; })_navigationControllerSizeForChildViewControllerInfo:(struct { struct CGSize { double x0; double x1; } x0; double x1; BOOL x2; })info withCurrentInfo:(struct { struct CGSize { double x0; double x1; } x0; double x1; BOOL x2; })info;
- (void)contentContainer:(id)container preferredContentSizeDidChangeForChildContentContainer:(id)container;
- (void)observedView:(id)view didMoveToWindow:(id)window;
- (void)_updateStatusBarFrame;
- (void)navigationController:(id)controller willShowViewController:(id)controller animated:(BOOL)animated;
- (void)navigationController:(id)controller didShowViewController:(id)controller animated:(BOOL)animated;
- (id)presentationControllerForPresentedViewController:(id)controller presentingViewController:(id)controller sourceViewController:(id)controller;
- (id)animationControllerForPresentedController:(id)controller presentingController:(id)controller sourceController:(id)controller;
- (id)animationControllerForDismissedController:(id)controller;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
- (void)tapGestureRecognized:(id)recognized;
- (void)_updateForKeyboardIfNecessary;
- (void)keyboardWillShow:(id)show;
- (void)keyboardWillChange:(id)change;
- (void)keyboardWillHide:(id)hide;
- (void)_updateLayoutForKeyboardAction:(id /* block */)action;
- (id)childViewControllerForStatusBarStyle;
- (id)childViewControllerForStatusBarHidden;
- (BOOL)isPresentingNavigationController;
@end

#endif /* PKCompactNavigationContainerController_h */
