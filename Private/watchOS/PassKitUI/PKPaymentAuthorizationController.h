//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKPaymentAuthorizationController_h
#define PKPaymentAuthorizationController_h
@import Foundation;

#include "PKPaymentAuthorizationController.h"
#include "PKPaymentAuthorizationCoordinatorDelegate-Protocol.h"
#include "PKPaymentAuthorizationCoordinatorPrivateDelegate-Protocol.h"

@class NSString, PKPaymentAuthorizationCoordinator;
@protocol PKPaymentAuthorizationControllerDelegate, PKPaymentAuthorizationControllerPrivateDelegate;

@interface PKPaymentAuthorizationController : NSObject<PKPaymentAuthorizationCoordinatorDelegate, PKPaymentAuthorizationCoordinatorPrivateDelegate> {
  /* instance variables */
  PKPaymentAuthorizationController *_retainSelf;
}

@property (retain, nonatomic) PKPaymentAuthorizationCoordinator *paymentCoordinator;
@property (weak, nonatomic) NSObject<PKPaymentAuthorizationControllerPrivateDelegate> *privateDelegate;
@property (weak, nonatomic) NSObject<PKPaymentAuthorizationControllerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)isPlatformSupported;
+ (BOOL)canMakePayments;
+ (BOOL)canMakePaymentsUsingNetworks:(id)networks;
+ (BOOL)canMakePaymentsUsingNetworks:(id)networks capabilities:(unsigned long long)capabilities;
+ (BOOL)supportsDisbursements;
+ (BOOL)supportsDisbursementsUsingNetworks:(id)networks;
+ (BOOL)supportsDisbursementsUsingNetworks:(id)networks capabilities:(unsigned long long)capabilities;
+ (void)paymentServicesMerchantURLForAPIType:(long long)apitype completion:(id /* block */)completion;

/* instance methods */
- (id)initWithDisbursementRequest:(id)request;
- (id)initWithCoder:(id)coder;
- (id)init;
- (id)initWithPaymentRequest:(id)request;
- (void)dealloc;
- (void)presentWithCompletion:(id /* block */)completion;
- (void)dismissWithCompletion:(id /* block */)completion;
- (void)paymentAuthorizationCoordinatorWillAuthorizePayment:(id)payment;
- (void)paymentAuthorizationCoordinator:(id)coordinator didAuthorizePayment:(id)payment handler:(id /* block */)handler;
- (void)paymentAuthorizationCoordinatorDidFinish:(id)finish;
- (void)paymentAuthorizationCoordinator:(id)coordinator didSelectShippingMethod:(id)method handler:(id /* block */)handler;
- (void)paymentAuthorizationCoordinator:(id)coordinator didSelectShippingAddress:(id)address handler:(id /* block */)handler;
- (void)paymentAuthorizationCoordinator:(id)coordinator didSelectPaymentMethod:(id)method handler:(id /* block */)handler;
- (void)paymentAuthorizationCoordinator:(id)coordinator didChangeCouponCode:(id)code handler:(id /* block */)handler;
- (id)presentationSceneIdentifierForPaymentAuthorizationCoordinator:(id)coordinator;
- (id)presentationSceneBundleIdentifierForPaymentAuthorizationCoordinator:(id)coordinator;
- (void)paymentAuthorizationCoordinator:(id)coordinator willFinishWithError:(id)error;
- (void)paymentAuthorizationCoordinator:(id)coordinator didRequestMerchantSessionUpdate:(id /* block */)update;
- (void)paymentAuthorizationCoordinator:(id)coordinator didAuthorizeContextWithHandler:(id /* block */)handler;
- (void)paymentAuthorizationCoordinator:(id)coordinator didAuthorizePurchase:(id)purchase completion:(id /* block */)completion;
- (void)paymentAuthorizationCoordinator:(id)coordinator didAuthorizePeerPaymentQuote:(id)quote handler:(id /* block */)handler;
- (void)paymentAuthorizationCoordinator:(id)coordinator didEncounterAuthorizationEvent:(unsigned long long)event;
- (void)paymentAuthorizationCoordinator:(id)coordinator didUpdateAccountServicePaymentMethod:(id)method handler:(id /* block */)handler;
- (void)paymentAuthorizationCoordinator:(id)coordinator didAuthorizeApplePayTrustSignature:(id)signature handler:(id /* block */)handler;
@end

#endif /* PKPaymentAuthorizationController_h */
