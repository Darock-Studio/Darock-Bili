//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKListTextFieldContentView_h
#define PKListTextFieldContentView_h
@import Foundation;

#include "UIView.h"
#include "PKListTextFieldContentConfiguration.h"
#include "PKListTextFieldContentViewDelegate-Protocol.h"
#include "UIContentView-Protocol.h"
#include "UITextFieldDelegate-Protocol.h"

@class NSString, UILabel, UITextField;

@interface PKListTextFieldContentView : UIView<UITextFieldDelegate, UIContentView> {
  /* instance variables */
  UILabel *_textLabel;
  UITextField *_textField;
  UILabel *_secondaryTextLabel;
  BOOL _isTemplateLayout;
}

@property (copy, nonatomic) PKListTextFieldContentConfiguration *configuration;
@property (retain, nonatomic) NSObject<PKListTextFieldContentViewDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithConfiguration:(id)configuration;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_applyConfiguration:(id)configuration;
- (void)setToolbarItems:(id)items;
- (void)_applyTextProperties:(id)properties toLabel:(id)label;
- (void)_applyTextProperties:(id)properties toTextField:(id)field;
- (long long)_textAlignmentForListAlignment:(long long)alignment;
- (id)_transformedText:(id)text forTransform:(long long)transform;
- (long long)_textAutocapTypeForTextTransform:(long long)transform;
- (void)layoutSubviews;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (struct CGSize { double x0; double x1; })_layoutWithBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (id)textFieldText;
- (void)beginEditing;
- (void)endEditing;
- (void)resetTextFieldTextFromLabel;
- (void)_textFieldTextDidChange:(id)change;
- (void)_updateErrorState:(BOOL)state;
- (BOOL)_keepTextFieldVisible;
- (void)prepareForReuse;
- (BOOL)textFieldShouldReturn:(id)return;
- (void)textFieldDidBeginEditing:(id)editing;
- (void)textFieldDidEndEditing:(id)editing;
- (void)textFieldDidChangeSelection:(id)selection;
@end

#endif /* PKListTextFieldContentView_h */
