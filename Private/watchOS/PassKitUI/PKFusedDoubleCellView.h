//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1552.3.6.1.1
//
#ifndef PKFusedDoubleCellView_h
#define PKFusedDoubleCellView_h
@import Foundation;

#include "UIView.h"
#include "PKPaymentDashboardCellActionHandleable-Protocol.h"

@class NSString, PKPaymentPass, UIColor, UIFont, UIImageView, UILabel, UIView;

@interface PKFusedDoubleCellView : UIView<PKPaymentDashboardCellActionHandleable> {
  /* instance variables */
  UIView *_separatorView;
  UIImageView *_disclosureView;
  UILabel *_leftTitleView;
  UILabel *_leftDetailView;
  UILabel *_leftSubDetailView;
  UILabel *_rightTitleView;
  UILabel *_rightDetailView;
  UILabel *_rightSubDetailView;
  unsigned long long _deferUpdateCounter;
}

@property (nonatomic) BOOL enableDisclosure;
@property (copy, nonatomic) PKPaymentPass *pass;
@property (retain, nonatomic) UIFont *titleFont;
@property (copy, nonatomic) UIColor *leftTitleColor;
@property (copy, nonatomic) UIColor *leftDetailColor;
@property (copy, nonatomic) UIColor *leftSubDetailColor;
@property (copy, nonatomic) UIColor *rightTitleColor;
@property (copy, nonatomic) UIColor *rightDetailColor;
@property (copy, nonatomic) UIColor *rightSubDetailColor;
@property (copy, nonatomic) NSString *leftTitle;
@property (copy, nonatomic) NSString *leftDetail;
@property (copy, nonatomic) NSString *leftSubDetail;
@property (copy, nonatomic) NSString *rightTitle;
@property (copy, nonatomic) NSString *rightDetail;
@property (copy, nonatomic) NSString *rightSubDetail;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (long long)viewType;
- (void)prepareForReuse;
- (void)_performInit;
- (void)_setupViews;
- (id)_titleFont;
- (id)_detailFont;
- (id)_subDetailFont;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)layoutSubviews;
- (struct CGSize { double x0; double x1; })_layoutWithBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds isTemplateLayout:(BOOL)layout;
- (double)_layoutLabelsSideBySide:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })side halfSize:(struct CGSize { double x0; double x1; })size leftTitleSize:(struct CGSize { double x0; double x1; })size leftDetailSize:(struct CGSize { double x0; double x1; })size leftSubDetailSize:(struct CGSize { double x0; double x1; })size disclosureSize:(struct CGSize { double x0; double x1; })size disclosurePadding:(double)padding rightSize:(struct CGSize { double x0; double x1; })size rightTitleSize:(struct CGSize { double x0; double x1; })size rightDetailSize:(struct CGSize { double x0; double x1; })size rightSubDetailSize:(struct CGSize { double x0; double x1; })size isTemplateLayout:(BOOL)layout;
- (double)_layoutLabelsStacked:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })stacked disclosureSize:(struct CGSize { double x0; double x1; })size disclosurePadding:(double)padding isTemplateLayout:(BOOL)layout;
- (void)beginUpdates;
- (void)endUpdates:(BOOL)updates;
- (void)_updateContent:(BOOL)content;
- (void)traitCollectionDidChange:(id)change;
@end

#endif /* PKFusedDoubleCellView_h */
