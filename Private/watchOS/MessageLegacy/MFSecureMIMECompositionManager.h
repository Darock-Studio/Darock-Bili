//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 22.0.0.0.0
//
#ifndef MFSecureMIMECompositionManager_h
#define MFSecureMIMECompositionManager_h
@import Foundation;

#include "MFError.h"
#include "MailAccount.h"

@class NSLock, NSMutableDictionary, NSMutableSet, NSSet, NSString;
@protocol MFSecureMIMECompositionManagerDelegate, OS_dispatch_queue;

@interface MFSecureMIMECompositionManager : NSObject {
  /* instance variables */
  NSLock *_lock;
  NSObject<OS_dispatch_queue> *_queue;
  struct __SecIdentity * _signingIdentity;
  MFError *_signingIdentityError;
  struct __SecIdentity * _encryptionIdentity;
  MFError *_encryptionIdentityError;
  NSMutableDictionary *_errorsByRecipient;
  NSMutableDictionary *_certificatesByRecipient;
  unsigned long long _encryptionStatusSemaphore;
  unsigned long long _signingStatusSemaphore;
  BOOL _invalidated;
}

@property NSObject<MFSecureMIMECompositionManagerDelegate> *delegate;
@property (copy) NSString *sendingAddress;
@property (readonly) MailAccount *sendingAccount;
@property (readonly) int signingPolicy;
@property (readonly) int encryptionPolicy;
@property (readonly) int signingStatus;
@property (readonly) int encryptionStatus;
@property (readonly) NSSet *recipients;

/* class methods */
+ (struct __SecIdentity *)copySigningIdentityForAccount:(id)account sendingAddress:(id)address error:(id *)error;
+ (struct __SecIdentity *)copyEncryptionIdentityForAccount:(id)account sendingAddress:(id)address error:(id *)error;
+ (id)copyEncryptionCertificatesForAccount:(id)account recipientAddress:(id)address error:(id *)error;
+ (BOOL)isRevokedCertificate:(struct __SecCertificate *)certificate sendingAddress:(id)address;

/* instance methods */
- (id)init;
- (id)initWithSigningPolicy:(int)policy encryptionPolicy:(int)policy;
- (id)initWithSendingAccount:(id)account signingPolicy:(int)policy encryptionPolicy:(int)policy;
- (void)dealloc;
- (void)addRecipients:(id)recipients;
- (void)removeRecipients:(id)recipients;
- (void)invalidate;
- (void)_determineIdentitiesWithSendingAddress:(id)address forSigning:(BOOL)signing encryption:(BOOL)encryption;
- (void)_determineRevocationStatusWithIdentity:(struct __SecIdentity *)identity sendingAddress:(id)address;
- (void)_determineSigningStatusWithSendingAddress:(id)address;
- (void)_notifyDelegateSigningStatusDidChange:(int)change identity:(struct __SecIdentity *)identity error:(id)error;
- (BOOL)_updateSigningStatus_nts;
- (void)_nts_setSigningIdentity:(struct __SecIdentity *)identity error:(id)error;
- (void)_nts_copySigningIdentity:(struct __SecIdentity * *)identity error:(id *)error;
- (void)_determineEncryptionStatusWithSendingAddress:(id)address;
- (void)_determineEncryptionStatusWithNewRecipients:(id)recipients;
- (BOOL)_updateEncryptionStatus_nts;
- (void)_nts_setEncryptionIdentity:(struct __SecIdentity *)identity error:(id)error;
- (void)_nts_copyEncryptionIdentity:(struct __SecIdentity * *)identity error:(id *)error certificatesByRecipient:(id *)recipient errorsByRecipient:(id *)recipient;
- (void)_notifyDelegateEncryptionStatusDidChange:(int)change certsByRecipient:(id)recipient errorsByRecipient:(id)recipient identity:(struct __SecIdentity *)identity error:(id)error;
- (id)compositionSpecification;
- (BOOL)shouldAllowSend;
- (BOOL)_shouldSign_nts;
- (BOOL)_shouldEncrypt_nts;
- (BOOL)_shouldAllowSend_nts;
@end

#endif /* MFSecureMIMECompositionManager_h */
