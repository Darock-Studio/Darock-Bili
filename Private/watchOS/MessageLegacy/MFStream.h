//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 22.0.0.0.0
//
#ifndef MFStream_h
#define MFStream_h
@import Foundation;

#include "NSStreamDelegate-Protocol.h"
#include "NSURLSessionDelegate-Protocol.h"

@class NSCondition, NSError, NSInputStream, NSMutableDictionary, NSOutputStream, NSString, NSURLSession, NSURLSessionStreamTask;
@protocol OS_dispatch_queue;

@interface MFStream : NSObject<NSStreamDelegate, NSURLSessionDelegate> {
  /* instance variables */
  NSURLSession *_session;
  NSURLSessionStreamTask *_streamTask;
  NSInputStream *_rStream;
  NSOutputStream *_wStream;
  NSMutableDictionary *_properties;
  id /* block */ _callback;
  NSObject<OS_dispatch_queue> *_location;
  unsigned long long _capacity;
  unsigned long long _length;
  char * _buffer;
  NSError *_error;
  BOOL _streamCanRead;
  BOOL _streamCanWrite;
  BOOL _dispatchedBytesAvailable;
  unsigned long long _bytesRead;
  unsigned long long _bytesWritten;
  NSCondition *_condition;
}

@property (readonly, nonatomic) NSError *streamError;
@property (readonly, nonatomic) BOOL isOpen;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)networkThread;
+ (void)setNetworkThread:(id)thread;
+ (id)_networkDispatchQueue;

/* instance methods */
- (id)initCallBack:(id /* block */)back onDispatchQueue:(id)queue;
- (void)dealloc;
- (id)_copyPropertyForKey:(id)key;
- (id)propertyForKey:(id)key;
- (BOOL)setProperty:(id)property forKey:(id)key;
- (void)openToHostName:(id)name port:(long long)port;
- (void)_createPairWithSocketToHostName:(id)name port:(long long)port;
- (void)_closeAndReleaseStream:(id)stream logMessage:(id)message;
- (long long)read:(char *)read maxLength:(unsigned long long)length;
- (long long)write:(const char *)write maxLength:(unsigned long long)length;
- (void)close;
- (void)_readBytesFromStream;
- (void)stream:(id)stream handleEvent:(unsigned long long)event;
@end

#endif /* MFStream_h */
