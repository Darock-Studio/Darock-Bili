//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3431.206.0.0.0
//
#ifndef TIKeyboardInputManagerChinese_h
#define TIKeyboardInputManagerChinese_h
@import Foundation;

#include "TIKeyboardInputManager_zh_ja.h"
#include "CIMCandidateData.h"

@class NSOperationQueue, NSString, TIMathSymbolPunctuationController, TIWordSearch;

@interface TIKeyboardInputManagerChinese : TIKeyboardInputManager_zh_ja {
  /* instance variables */
  TIWordSearch *_wordSearch;
}

@property (readonly) CIMCandidateData *candidateData;
@property (readonly) NSOperationQueue *operationQueue;
@property (readonly) TIMathSymbolPunctuationController *mathSymbolPunctuationController;
@property BOOL duringDeleteFromInputWithContext;
@property (nonatomic) BOOL isAlphabeticPlane;
@property (copy, nonatomic) NSString *pairedPunctuationOpenQuote;
@property (copy, nonatomic) NSString *pairedPunctuationSelectedText;
@property (readonly, nonatomic) unsigned long long predictionOptions;
@property (copy, nonatomic) NSString *language;
@property (copy, nonatomic) NSString *modeName;
@property (nonatomic) BOOL isInCompletionMode;
@property (nonatomic) BOOL shouldLearnAcceptedCandidate;
@property (copy, nonatomic) NSString *currentKeyHint;

/* class methods */
+ (id)punctuationPredictionsForString:(id)string;
+ (id)GB18030CandidateFromString:(id)string;
+ (id)unicodeCandidateFromString:(id)string;
+ (BOOL)shouldEnableHalfWidthPunctuationForDocumentContext:(id)context composedText:(id)text;
+ (Class)wordSearchClass;
+ (id)pairedPunctuationDictionary;

/* instance methods */
- (id)initWithConfig:(id)config keyboardState:(id)state;
- (void)resetCommitHistory;
- (void *)initImplementationWithMode:(id)mode andLanguage:(id)language;
- (void)syncToLayoutState:(id)state;
- (void)syncToKeyboardState:(id)state from:(id)from afterContextChange:(BOOL)change;
- (void)loadFavoniusTypingModel;
- (id)didAcceptCandidate:(id)candidate;
- (void)inputLocationChanged;
- (void)clearInput;
- (void)setInput:(id)input;
- (id)deleteFromInput:(unsigned long long *)input;
- (void)deleteFromInputWithContext:(id)context;
- (id)replacementForDoubleSpace;
- (id)wordCharacters;
- (BOOL)shouldEnableHalfWidthPunctuationForCurrentInputContext;
- (void)willExitCompletionMode;
- (id)candidateResultSetUsedForCompletionQuery;
- (BOOL)isFacemarkInput:(id)input;
- (BOOL)showingFacemarkCandidates;
- (BOOL)hasIdeographicCandidates;
- (void *)mecabraCandidateRefFromPointerValue:(id)value;
- (id)generateCompletions;
- (BOOL)updateCompletionCandidatesIfAppropriate;
- (void)wordSearchEngineDidFindPredictionCandidates:(id)candidates;
- (id)completionCandidateResultSetForKeyHint:(id)hint;
- (unsigned long long)initialSelectedIndex;
- (id)sortingMethods;
- (BOOL)alwaysShowExtensionCandidatesForSortingMethod:(id)method;
- (id)titleForSortingMethod:(id)method;
- (id)candidateResultSetFromCandidates:(id)candidates proactiveTriggers:(id)triggers;
- (id)sortMethodsGroupsForCandidates:(id)candidates;
- (id)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method;
- (void)groupedCandidatesFromCandidates:(id)candidates usingSortingMethod:(id)method completion:(id /* block */)completion;
- (BOOL)shouldSearchCompletionForSubstrings;
- (id)outputByConvertingDecimalPointForInput:(id)input;
- (void)setLearnsCorrection:(BOOL)correction;
- (id)firstCandidate;
- (void)acceptFirstCandidateWithContext:(id)context;
- (BOOL)supportsPairedPunctutationInput;
- (BOOL)handlePairedPunctuationInput:(id)input context:(id)context;
- (id)searchStringForMarkedText;
- (id)wordSearch;
@end

#endif /* TIKeyboardInputManagerChinese_h */
