//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBSTouchIconCache_h
#define WBSTouchIconCache_h
@import Foundation;

#include "WBSSiteMetadataImageCache.h"
#include "WBSSiteMetadataImageCacheDelegate-Protocol.h"
#include "WBSSiteMetadataProvider-Protocol.h"
#include "WBSSiteMetadataProviderDelegate-Protocol.h"
#include "WBSTouchIconCacheSettingsSQLiteStore.h"
#include "WBSWebViewMetadataFetchOperationDelegate-Protocol.h"

@class NSCache, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL;
@protocol OS_dispatch_queue, {atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}};

@interface WBSTouchIconCache : NSObject<WBSSiteMetadataImageCacheDelegate, WBSWebViewMetadataFetchOperationDelegate, WBSSiteMetadataProvider> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_internalQueue;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _didLoadSettings;
  WBSSiteMetadataImageCache *_imageCache;
  NSMutableDictionary *_hostsToRequestSets;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _touchIconsDataForHostsAccessLock;
  NSMutableDictionary *_touchIconsDataForHosts;
  NSCache *_requestsToResponses;
  NSMutableDictionary *_requestsToDelayedResponses;
  NSMutableArray *_pendingSaveTouchIconToDiskBlocks;
  NSMutableSet *_pendingTouchIconRequestHosts;
  WBSTouchIconCacheSettingsSQLiteStore *_cacheSettingsStore;
}

@property (readonly, nonatomic) NSURL *imageDirectoryURL;
@property (readonly, nonatomic) NSURL *cacheDirectoryURL;
@property (readonly, nonatomic) BOOL readOnly;
@property (readonly, nonatomic) long long protectionType;
@property (readonly, nonatomic) long long fileMappingStyle;
@property (readonly, nonatomic) BOOL allowFetchingOverCellularNetwork;
@property (readonly, copy, nonatomic) NSDictionary *uuidStringToHost;
@property (readonly, nonatomic) BOOL canFetchOutsideOfUserLoadedWebpage;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak) NSObject<WBSSiteMetadataProviderDelegate> *providerDelegate;
@property (readonly, nonatomic) BOOL providesFavicons;

/* class methods */
+ (id)defaultBackgroundColor;
+ (id)defaultGlyphColor;
+ (id)_generateFavoritesIconForRequest:(id)request withBackgroundColor:(id)color;
+ (id)generateFavoritesIconForTitle:(id)title url:(id)url backgroundColor:(id)color;
+ (id)generateFavoritesIconForTitle:(id)title url:(id)url backgroundColor:(id)color shouldRemoveGrammaticalArticles:(BOOL)articles;
+ (id)generateFavoritesIconForTitle:(id)title url:(id)url backgroundColor:(id)color shouldRemoveGrammaticalArticles:(BOOL)articles fontWeight:(long long)weight fontDesign:(long long)design fontSize:(double)size;
+ (id)_generateDefaultFavoritesIcon;
+ (id)_monogramConfiguration;

/* instance methods */
- (id)init;
- (id)initWithCacheDirectoryURL:(id)url;
- (id)initWithCacheDirectoryURL:(id)url isReadOnly:(BOOL)only;
- (id)initWithCacheDirectoryURL:(id)url isReadOnly:(BOOL)only protectionType:(long long)type allowFetchingOverCellularNetwork:(BOOL)network fileMappingStyle:(long long)style canFetchOutsideOfUserLoadedWebpage:(BOOL)webpage;
- (void)dealloc;
- (void)_openCacheSettingsDatabaseIfNeeded;
- (void)_setUpImageCacheSettingsSQLiteStore;
- (void)_ensureCacheDirectory;
- (id)_touchIconForURL:(id)url getImageState:(long long *)state;
- (void)_saveTouchIconToDisk:(id)disk forHost:(id)host requestDidSucceed:(BOOL)succeed statusCode:(long long)code isUserLoadedWebpageRequest:(BOOL)request higherPriorityIconDownloadFailedDueToNetworkError:(BOOL)error;
- (void)cacheFirstAvailableTouchIcon:(id)icon forURL:(id)url;
- (void)retainTouchIconForURLString:(id)urlstring;
- (void)retainTouchIconForHost:(id)host;
- (void)retainTouchIconsForHosts:(id)hosts;
- (void)releaseTouchIconForURLString:(id)urlstring;
- (void)releaseTouchIconForHost:(id)host;
- (void)releaseTouchIconsForHosts:(id)hosts;
- (BOOL)hasDeterminedIconAvailabilityForURL:(id)url;
- (BOOL)shouldRequestTouchIconForWebPageNavigationFromBookmarkInteractionForURL:(id)url;
- (BOOL)shouldRequestTouchIconForURL:(id)url inUserLoadedWebpage:(BOOL)webpage;
- (BOOL)_shouldRequestTouchIconWithTimeoutForURL:(id)url inUserLoadedWebpage:(BOOL)webpage initiatedFromBookmarkInteraction:(BOOL)interaction;
- (BOOL)_canFetchTouchIconForURL:(id)url inUserLoadedWebpage:(BOOL)webpage;
- (BOOL)_shouldRequestTouchIconForURL:(id)url inUserLoadedWebpage:(BOOL)webpage initiatedFromBookmarkInteraction:(BOOL)interaction shouldCheckImageState:(BOOL *)state;
- (BOOL)_shouldRequestTouchIconForURL:(id)url inUserLoadedWebpage:(BOOL)webpage initiatedFromBookmarkInteraction:(BOOL)interaction;
- (BOOL)_shouldRequestTouchIconForURL:(id)url inUserLoadedWebpage:(BOOL)webpage initiatedFromBookmarkInteraction:(BOOL)interaction knownImageState:(long long)state;
- (BOOL)canHandleRequest:(id)request;
- (id)responseForRequest:(id)request willProvideUpdates:(BOOL *)updates;
- (void)prepareResponseForRequest:(id)request allowDelayedResponse:(BOOL)response;
- (id)_responseForTouchIconRequestWithNoHost:(id)host;
- (void)_setUpAndReturnDelayedResponseForRequest:(id)request;
- (void)_setUpAndReturnPreparedResponseForRequest:(id)request withImage:(id)image imageState:(long long)state didReceiveNewData:(BOOL)data;
- (void)stopWatchingUpdatesForRequest:(id)request;
- (id /* block */)_blockOperationForRequest:(id)request knownImageState:(long long)state;
- (void)emptyCaches;
- (void)purgeUnneededCacheEntries;
- (void)savePendingChangesBeforeTermination;
- (double)_maximumScreenScale;
- (id)_resizedImage:(id)image forHost:(id)host;
- (void)_enumerateRequestsForHost:(id)host usingBlock:(id /* block */)block;
- (void)_saveTouchIconToDiskWithResult:(id)result forRequest:(id)request knownImageState:(long long)state;
- (void)_updateTouchIconsDataForHost:(id)host image:(id)image requestDidSucceed:(BOOL)succeed statusCode:(long long)code isUserLoadedWebpageRequest:(BOOL)request higherPriorityIconDownloadFailedDueToNetworkError:(BOOL)error UUIDString:(id)uuidstring;
- (void)saveTouchIconSettings:(id)settings touchIcon:(id)icon;
- (void)removeTouchIconMetadataForHosts:(id)hosts completionHandler:(id /* block */)handler;
- (void)_removeTouchIconsDataForHost:(id)host;
- (void)_removeTouchIconsDataForHost:(id)host ifIconIsInCache:(BOOL)cache;
- (BOOL)_shouldGenerateTouchIconFromTouchIcon:(id)icon forRequest:(id)request;
- (id)_responseForRequest:(id)request withTouchIcon:(id)icon;
- (void)_notifyImageWasLoaded:(id)loaded forHost:(id)host;
- (id)_imageCacheSettingsDatabaseURL;
- (void)siteMetadataImageCacheDidFinishLoadingSettings:(id)settings;
- (void)siteMetadataImageCache:(id)cache didFinishLoadingImage:(id)image forKeyString:(id)string;
- (void)siteMetadataImageCache:(id)cache didRemoveImageFromCacheForKeyString:(id)string;
- (void)siteMetadataImageCacheDidEmptyCache:(id)cache;
- (id)siteMetadataImageCache:(id)cache customFileNameForKeyString:(id)string;
- (void)webViewMetadataFetchOperation:(id)operation getWebViewOfSize:(struct CGSize { double x0; double x1; })size withConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)webViewMetadataFetchOperation:(id)operation didFinishUsingWebView:(id)view;
- (id)_didGenerateResponse:(id)response forRequest:(id)request;
- (id)_operationWithRequest:(id)request completionHandler:(id /* block */)handler;
- (void)_didLoadTouchIcon:(id)icon withCacheSettingsEntry:(id)entry;
- (void)_willSaveTouchIcon:(id)icon withCacheSettingsEntry:(id)entry;
- (long long)_transparencyAnalysisResultForImage:(id)image;
- (BOOL)isReadOnly;
@end

#endif /* WBSTouchIconCache_h */
