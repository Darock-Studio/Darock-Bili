//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 206.40.2.0.0
//
#ifndef StreamingUnzipper_h
#define StreamingUnzipper_h
@import Foundation;

#include "StreamingUnzipDelegateProtocol-Protocol.h"
#include "StreamingUnzipProtocol-Protocol.h"
#include "StreamingUnzipState.h"

@class NSXPCConnection;
@protocol OS_dispatch_queue, OS_os_transaction;

@interface StreamingUnzipper : NSObject<StreamingUnzipProtocol> {
  /* instance variables */
  BOOL _hasConnection;
  struct { unsigned int x[8] val; } _auditToken;
  long long _sandboxToken;
  void * _decompressionOutputBuffer;
  StreamingUnzipState *_currentState;
  NSObject<OS_os_transaction> *_sessionTransaction;
  int _activeDelegateMethods;
  double _lastExtractionProgressSent;
}

@property (weak, nonatomic) NSXPCConnection *xpcConnection;
@property (weak, nonatomic) NSObject<StreamingUnzipDelegateProtocol> *inProcessExtractorDelegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *inProcessDelegateQueue;

/* instance methods */
- (id)initForClient:(id)client connection:(id)connection;
- (void)setupUnzipperWithOutputPath:(id)path sandboxExtensionToken:(char *)token options:(id)options withReply:(id /* block */)reply;
- (void)setActiveDelegateMethods:(int)methods;
- (void)dealloc;
- (void)_setErrorState;
- (id)_beginNonStreamablePassthroughWithRemainingBytes:(const void *)bytes length:(unsigned long long)length;
- (void)_sendExtractionProgress:(double)progress;
- (void)_sendExtractionCompleteAtArchivePath:(id)path;
- (void)_extractionEnteredPassThroughMode;
- (void)_supplyBytes:(const char *)bytes length:(unsigned long long)length withReply:(id /* block */)reply;
- (void)supplyBytes:(id)bytes withReply:(id /* block */)reply;
- (void)suspendStreamWithReply:(id /* block */)reply;
- (void)finishStreamWithReply:(id /* block */)reply;
- (void)terminateStreamWithReply:(id /* block */)reply;
- (void)getPidForTestingWithReply:(id /* block */)reply;
@end

#endif /* StreamingUnzipper_h */
