//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 206.40.2.0.0
//
#ifndef StreamingUnzipState_h
#define StreamingUnzipState_h
@import Foundation;

@class NSArray, NSDictionary, NSMutableData, NSNumber, NSSet, NSString;

@interface StreamingUnzipState : NSObject {
  /* instance variables */
  unsigned long long _lastResumptionSavedOffset;
  NSArray *_hashes;
}

@property (readonly, nonatomic) NSSet *cachedGIDs;
@property (readonly, nonatomic) struct { char * x0; unsigned long long x1; char * x2; unsigned long long x3; void * x4; } * cmpState;
@property (readonly, nonatomic) NSString *unzipPath;
@property (readonly, nonatomic) struct { int x0; union { struct CC_MD5state_st { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6[16] int x7; } x0; struct CC_SHA1state_st { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7[16] int x8; } x1; struct CC_SHA256state_st { unsigned int x0[2] unsigned int x1[8] unsigned int x2[16] } x2; struct CC_SHA256state_st { unsigned int x0[2] unsigned int x1[8] unsigned int x2[16] } x3; struct CC_SHA512state_st { unsigned long long x0[2] unsigned long long x1[8] unsigned long long x2[16] } x4; struct CC_SHA512state_st { unsigned long long x0[2] unsigned long long x1[8] unsigned long long x2[16] } x5; } x1; } hashContext;
@property (retain, nonatomic) NSDictionary *streamInfoDict;
@property (retain, nonatomic) NSString *lastChunkPartialHash;
@property (retain, nonatomic) NSMutableData *unsureData;
@property (retain, nonatomic) NSMutableData *inMemoryFileData;
@property (nonatomic) struct { unsigned char x0[4] struct { unsigned short x0; } x1; struct { unsigned short x0; } x2; struct { unsigned short x0; } x3; union { struct { struct { unsigned short x0; } x0; struct { unsigned short x0; } x1; } x0; struct { unsigned int x0; } x1; } x4; struct { unsigned int x0; } x5; struct { unsigned int x0; } x6; struct { unsigned int x0; } x7; struct { unsigned short x0; } x8; struct { unsigned short x0; } x9; unsigned char x10[0] } * currentLFRecord;
@property (nonatomic) unsigned long long currentLFRecordAllocationSize;
@property (nonatomic) unsigned long long thisStageBytesComplete;
@property (nonatomic) unsigned long long currentOffset;
@property (readonly, nonatomic) unsigned long long hashedChunkSize;
@property (readonly, nonatomic) unsigned long long bytesHashedInChunk;
@property (nonatomic) unsigned long long currentCRC32;
@property (nonatomic) int currentOutputFD;
@property (nonatomic) unsigned long long recordsProcessed;
@property (nonatomic) unsigned long long totalRecordCount;
@property (nonatomic) unsigned long long totalUncompressedBytes;
@property (nonatomic) unsigned long long uncompressedBytesOutput;
@property (nonatomic) unsigned long long totalFileSizeWritten;
@property (nonatomic) unsigned short currentLFMode;
@property (nonatomic) unsigned char streamState;
@property (nonatomic) BOOL storeCurrentFileInMemory;
@property (nonatomic) BOOL currentLFRequiresDataDescriptor;
@property (nonatomic) struct { unsigned char x0[4] union { struct { struct { unsigned int x0; } x0; struct { unsigned long long x0; } x1; struct { unsigned long long x0; } x2; } x0; struct { struct { unsigned int x0; } x0; struct { unsigned int x0; } x1; struct { unsigned int x0; } x2; } x1; } x1; } * dataDescriptor;
@property (nonatomic) BOOL denyInvalidSymlinks;
@property (nonatomic) BOOL performCachedWrites;
@property (nonatomic) BOOL performingExtraction;
@property (readonly, nonatomic) NSNumber *overrideUID;
@property (readonly, nonatomic) NSNumber *overrideGID;

/* class methods */
+ (id)unzipStateWithPath:(id)path options:(id)options error:(id *)error;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)_internalSetStreamState:(unsigned char)state;
- (void)clearSavedState;
- (void)markResumptionPoint;
- (id)serializeState;
- (id)_checkHashForOffset:(unsigned long long)offset;
- (id)checkLastChunkPartialHash;
- (id)updateHashFromOffset:(unsigned long long)offset withBytes:(const void *)bytes length:(unsigned long long)length onlyFinishCurrentChunk:(BOOL)chunk;
- (id)updateHashFromOffset:(unsigned long long)offset withBytes:(const void *)bytes length:(unsigned long long)length;
- (id)finishStream;
- (BOOL)openCurrentOutputFDForPath:(id)path withOpenFlags:(int)flags mode:(unsigned short)mode error:(id *)error;
- (BOOL)resolveOwnershipWithExtraField:(struct { unsigned char x0[2] struct { unsigned short x0; } x1; struct { unsigned int x0; } x2; struct { unsigned int x0; } x3; struct { unsigned short x0; } x4; struct { unsigned short x0; } x5; } *)field outUID:(unsigned int *)uid outGID:(unsigned int *)gid;
- (id)initWithPath:(id)path options:(id)options error:(id *)error;
@end

#endif /* StreamingUnzipState_h */
