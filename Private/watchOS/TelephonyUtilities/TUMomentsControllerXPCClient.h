//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1431.300.81.0.0
//
#ifndef TUMomentsControllerXPCClient_h
#define TUMomentsControllerXPCClient_h
@import Foundation;

#include "TUMomentsControllerDataSource-Protocol.h"
#include "TUMomentsControllerDataSourceDelegate-Protocol.h"
#include "TUMomentsControllerXPCClient-Protocol.h"

@class NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface TUMomentsControllerXPCClient : NSObject<TUMomentsControllerXPCClient, TUMomentsControllerDataSource>

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (readonly, nonatomic) int token;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<TUMomentsControllerDataSourceDelegate> *delegate;
@property (readonly, nonatomic) int processIdentifier;
@property (readonly, copy, nonatomic) NSString *processName;

/* class methods */
+ (id)asynchronousServer;
+ (void)setAsynchronousServer:(id)server;
+ (id)synchronousServer;
+ (void)setSynchronousServer:(id)server;
+ (id)momentsControllerClientXPCInterface;
+ (id)momentsControllerServerXPCInterface;

/* instance methods */
- (id)processBundleIdentifier;
- (id)init;
- (void)dealloc;
- (void)registerStreamToken:(long long)token requesterID:(id)id remoteIDSDestinations:(id)idsdestinations remoteMomentsAvailable:(BOOL)available completion:(id /* block */)completion;
- (void)unregisterStreamToken:(long long)token completion:(id /* block */)completion;
- (void)startRequestWithMediaType:(int)type forStreamToken:(long long)token requesteeID:(id)id destinationID:(id)id completion:(id /* block */)completion;
- (void)endRequestWithTransactionID:(id)id completion:(id /* block */)completion;
- (void)invalidate;
- (void)prewarmAudioClientWithCompletion:(id /* block */)completion;
- (void)startRecordingMessageWithMediaType:(int)type completion:(id /* block */)completion;
- (void)endRecordingMessageWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)discardVideoMessageWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)sendVideoMessageWithRequest:(id)request completion:(id /* block */)completion;
- (void)saveVideoMessageWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)resetVideoMessagingWithSessionUUID:(id)uuid completion:(id /* block */)completion;
- (void)_registerConnection;
- (id)serverWithErrorHandler:(id /* block */)handler;
- (id)synchronousServerWithErrorHandler:(id /* block */)handler;
- (void)didUpdateCapabilities:(id)capabilities forVideoStreamToken:(long long)token;
- (void)willCaptureRemoteRequestFromRequesterID:(id)id;
- (void)didReceiveLocallyRequestedMomentDescriptor:(id)descriptor;
- (void)requestSandboxExtensionForURL:(id)url reply:(id /* block */)reply;
- (void)didFinishProcessingRawVideoMessage:(id)message;
- (void)didReceiveMessageRecordingError:(id)error;
@end

#endif /* TUMomentsControllerXPCClient_h */
