//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1431.300.81.0.0
//
#ifndef TUConversationManager_h
#define TUConversationManager_h
@import Foundation;

#include "TUConversation.h"
#include "TUConversationManagerDataSource-Protocol.h"
#include "TUConversationManagerDataSourceDelegate-Protocol.h"
#include "TUConversationMediaController.h"
#include "TUConversationReactionsController.h"

@class NSDictionary, NSMapTable, NSMutableSet, NSNotificationCenter, NSSet, NSString, TUScreenSharingRemoteController;
@protocol OS_dispatch_queue, TUConversationMessagesGroupProviding;

@interface TUConversationManager : NSObject<TUConversationManagerDataSourceDelegate>

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) NSObject<TUConversationManagerDataSource> *dataSource;
@property (readonly, nonatomic) NSMapTable *delegateToQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *nonSessionBackedConversationCreationQueue;
@property (retain, nonatomic) NSMutableSet *callsNotBackedByGroupSessionsPendingUpgrade;
@property (retain, nonatomic) NSMutableSet *conversationsNotBackedByGroupSessions;
@property (nonatomic) BOOL shouldCreateConversationsForCallsNotBackedByGroupSessions;
@property (nonatomic) unsigned long long nonSessionBackedConversationCreationMode;
@property (readonly, nonatomic) TUConversationMediaController *mediaController;
@property (readonly, nonatomic) TUConversationReactionsController *reactionsController;
@property (weak, nonatomic) NSObject<TUConversationMessagesGroupProviding> *messagesGroupProvider;
@property (readonly, nonatomic) NSNotificationCenter *notificationCenter;
@property (readonly, copy, nonatomic) NSSet *activeConversations;
@property (readonly, copy, nonatomic) NSSet *incomingPendingConversations;
@property (readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers;
@property (nonatomic) BOOL autoSharePlayEnabled;
@property (readonly, nonatomic) BOOL sharePlayAvailable;
@property (readonly, nonatomic) BOOL screenSharingAvailable;
@property (readonly, copy, nonatomic) TUConversation *handoffEligibleConversation;
@property (readonly, copy, nonatomic) TUConversation *avLessConversation;
@property (readonly, nonatomic) TUScreenSharingRemoteController *screenSharingRemoteController;
@property (readonly, copy, nonatomic) NSSet *activatedConversationLinks;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)conversationWithRemoteMembers:(id)members andLink:(id)link fromConversations:(id)conversations;
+ (id)conversationWithRemoteMembers:(id)members andLink:(id)link fromConversations:(id)conversations matchingVideo:(BOOL)video backedByGroupSession:(BOOL)session;
+ (id)conversationsWithRemoteMembers:(id)members andLink:(id)link fromConversations:(id)conversations;
+ (id)conversationWithPseudonym:(id)pseudonym fromConversations:(id)conversations;
+ (id)pendingConversationWithLink:(id)link fromConversations:(id)conversations;
+ (id)remoteMembersForCall:(id)call;
+ (BOOL)supportsConversations;
+ (BOOL)isAddPersonEnabled;
+ (unsigned long long)maximumNumberOfInvitedMembers;
+ (BOOL)allowsVideo;
+ (BOOL)allowsScreenSharing;
+ (BOOL)allowsScreenSharingWithVideo;
+ (BOOL)allowsPortraitBlurWhenCaptionsEnabled;
+ (BOOL)supportsEffects;
+ (long long)memorySize;
+ (long long)conversationStateForCall:(id)call;
+ (id)activeRemoteParticipantsForCall:(id)call remoteMembers:(id)members;
+ (id)conversationWithUUID:(id)uuid fromConversations:(id)conversations;

/* instance methods */
- (id)initWithDataSource:(id)source;
- (id)initWithDataSource:(id)source notificationCenter:(id)center;
- (id)init;
- (void)dealloc;
- (void)addDelegate:(id)delegate queue:(id)queue;
- (void)removeDelegate:(id)delegate;
- (BOOL)isSharePlayAvailable;
- (BOOL)isScreenSharingAvailable;
- (id)activeConversationWithUUID:(id)uuid;
- (id)activeConversationWithGroupUUID:(id)uuid;
- (id)activeConversationWithRemoteMembers:(id)members andLink:(id)link;
- (id)activeConversationWithRemoteMembers:(id)members andLink:(id)link matchingVideo:(BOOL)video backedByGroupSession:(BOOL)session;
- (id)activeConversationWithLinkForCall:(id)call;
- (id)pendingConversationWithLink:(id)link;
- (void)registerWithCompletionHandler:(id /* block */)handler;
- (void)addRemoteMembers:(id)members toConversation:(id)conversation;
- (void)updateMessagesGroupName:(id)name onConversation:(id)conversation;
- (void)setGridDisplayMode:(unsigned long long)mode conversation:(id)conversation;
- (void)conversationUpdateMessagesGroupPhoto:(id)photo;
- (void)addRemoteMembers:(id)members otherInvitedHandles:(id)handles toConversation:(id)conversation;
- (void)prepareConversationWithUUID:(id)uuid withHandoffContext:(id)context;
- (void)setSharePlayHandedOff:(BOOL)off onConversationWithUUID:(id)uuid;
- (void)createActivitySession:(id)session onConversation:(id)conversation;
- (void)leaveActivitySession:(id)session onConversation:(id)conversation;
- (void)endActivitySession:(id)session onConversation:(id)conversation;
- (void)presentDismissalAlertForActivitySession:(id)session onConversation:(id)conversation;
- (void)setActivityAuthorization:(BOOL)authorization forBundleIdentifier:(id)identifier;
- (void)joinConversationWithRequest:(id)request;
- (void)leaveConversationWithUUID:(id)uuid;
- (void)launchApplicationForActivitySession:(id)session completionHandler:(id /* block */)handler;
- (void)launchApplicationForActivitySession:(id)session authorizedExternally:(BOOL)externally completionHandler:(id /* block */)handler;
- (void)launchApplicationForActivitySessionUUID:(id)uuid completionHandler:(id /* block */)handler;
- (void)launchApplicationForActivitySessionUUID:(id)uuid forceBackground:(BOOL)background completionHandler:(id /* block */)handler;
- (void)setUsingAirplay:(BOOL)airplay onActivitySession:(id)session onConversation:(id)conversation;
- (void)buzzMember:(id)member conversation:(id)conversation;
- (void)refreshActiveConversations;
- (void)requestScreenShareFromMember:(id)member conversation:(id)conversation;
- (void)kickMember:(id)member conversation:(id)conversation;
- (void)setDownlinkMuted:(BOOL)muted forRemoteParticipantsInConversation:(id)conversation;
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(id /* block */)handler;
- (void)getActiveLinksWithCreatedOnly:(BOOL)only completionHandler:(id /* block */)handler;
- (void)generateLinkForConversation:(id)conversation completionHandler:(id /* block */)handler;
- (void)generateLinkWithInvitedMemberHandles:(id)handles completionHandler:(id /* block */)handler;
- (void)generateLinkWithInvitedMemberHandles:(id)handles linkLifetimeScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)addInvitedMemberHandles:(id)handles toConversationLink:(id)link completionHandler:(id /* block */)handler;
- (void)invalidateLink:(id)link completionHandler:(id /* block */)handler;
- (void)renewLink:(id)link expirationDate:(id)date reason:(unsigned long long)reason completionHandler:(id /* block */)handler;
- (void)checkLinkValidity:(id)validity completionHandler:(id /* block */)handler;
- (void)getInactiveLinkWithCompletionHandler:(id /* block */)handler;
- (void)activateLink:(id)link completionHandler:(id /* block */)handler;
- (void)setLinkName:(id)name forConversationLink:(id)link completionHandler:(id /* block */)handler;
- (void)scheduleConversationLinkCheckInInitial:(BOOL)initial;
- (void)linkSyncStateIncludeLinks:(BOOL)links WithCompletion:(id /* block */)completion;
- (void)approvePendingMember:(id)member forConversation:(id)conversation;
- (void)rejectPendingMember:(id)member forConversation:(id)conversation;
- (void)setIgnoreLMIRequests:(BOOL)lmirequests forConversation:(id)conversation;
- (void)setScreenEnabled:(BOOL)enabled withScreenShareAttributes:(id)attributes forConversationWithUUID:(id)uuid;
- (void)getMessagesGroupDetailsForConversationUUID:(id)uuid completionHandler:(id /* block */)handler;
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)mode forConversationUUID:(id)uuid;
- (void)updateLocalParticipantToAVLessWithPresentationMode:(unsigned long long)mode forConversationUUID:(id)uuid;
- (void)registerMessagesGroupUUIDForConversationUUID:(id)uuid;
- (void)conversationsChangedForDataSource:(id)source conversationsByGroupUUID:(id)uuid oldConversationsByGroupUUID:(id)uuid;
- (void)conversationsChangedForDataSource:(id)source oldConversationsByGroupUUID:(id)uuid newConversationsByGroupUUID:(id)uuid creationQueue:(id)queue;
- (void)conversationsChangedFromOldConversationsByGroupUUID:(id)uuid newConversationsByGroupUUID:(id)uuid;
- (void)serverDisconnectedForDataSource:(id)source oldConversationsByGroupUUID:(id)uuid;
- (void)conversation:(id)conversation participant:(id)participant addedNotice:(id)notice;
- (void)conversation:(id)conversation addedMembersLocally:(id)locally;
- (void)conversation:(id)conversation buzzedMember:(id)member;
- (void)conversationsChangedForDataSource:(id)source updatedIncomingPendingConversationsByGroupUUID:(id)uuid;
- (void)conversationUpdatedMessagesGroupPhoto:(id)photo;
- (void)conversation:(id)conversation didChangeStateForActivitySession:(id)session;
- (void)conversation:(id)conversation didChangeSceneAssociationForActivitySession:(id)session;
- (void)conversation:(id)conversation receivedActivitySessionEvent:(id)event;
- (void)conversationManagerDataSource:(id)source didChangeActivatedConversationLinks:(id)links;
- (void)conversationManagerDataSource:(id)source messagesGroupDetailsForMessagesGroupId:(id)id completionHandler:(id /* block */)handler;
- (void)fetchUpcomingNoticeWithCompletionHandler:(id /* block */)handler;
- (void)activateConversationNoticeWithActionURL:(id)url bundleIdentifier:(id)identifier;
- (void)removeConversationNoticeWithUUID:(id)uuid;
- (void)conversationManagerDataSource:(id)source conversation:(id)conversation appLaunchState:(unsigned long long)state forActivitySession:(id)session;
- (void)receivedTrackedPendingMember:(id)member forConversationLink:(id)link;
- (void)conversation:(id)conversation screenSharingChangedForParticipant:(id)participant;
- (void)sharePlayAvailableChanged:(BOOL)changed;
- (void)screenSharingAvailableChanged:(BOOL)changed;
- (void)activityAuthorizationsChangedForDataSource:(id)source oldActivityAuthorizedBundleIdentifiers:(id)identifiers;
- (void)callPropertiesChanged:(id)changed;
- (void)updateConversationsNotBackedByGroupSessionWithCall:(id)call;
- (void)updateConversationsNotBackedByGroupSessionWithCall:(id)call conversationsByGroupUUID:(id)uuid creationQueue:(id)queue;
- (void)pruneConversationsPendingUpgradeInConversationsWithGroupUUID:(id)uuid;
- (id)callPendingUpgradeInConversationsWithGroupUUID:(id)uuid;
- (id)createConversationForCallNotBackedByGroupSession:(id)session;
- (id)handoffEligibleConversationForEligibility:(id)eligibility;
- (id)joinRequestForApplicableConversationWithHandoffEligibility:(id)eligibility;
- (BOOL)currentProcessCanAccessCollaborations;
@end

#endif /* TUConversationManager_h */
