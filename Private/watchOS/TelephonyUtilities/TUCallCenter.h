//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1431.300.81.0.0
//
#ifndef TUCallCenter_h
#define TUCallCenter_h
@import Foundation;

#include "TUAudioDeviceController.h"
#include "TUCall.h"
#include "TUCallContainer-Protocol.h"
#include "TUCallFilterController.h"
#include "TUCallProviderManager.h"
#include "TUCallServicesInterface.h"
#include "TUConversationManager.h"
#include "TUFeatureFlags-Protocol.h"
#include "TURouteController.h"
#include "TUUIDataSource-Protocol.h"
#include "TUVideoDeviceController.h"

@class CNContactStore, NSArray, NSString;
@protocol OS_dispatch_queue, TUCallContainerPrivate;

@interface TUCallCenter : NSObject<TUCallContainer>

@property (readonly, nonatomic) NSObject<TUFeatureFlags> *featureFlags;
@property (retain, nonatomic) TUCallServicesInterface *callServicesInterface;
@property (retain, nonatomic) TUAudioDeviceController *audioDeviceController;
@property (retain, nonatomic) TUVideoDeviceController *videoDeviceController;
@property (retain, nonatomic) TURouteController *routeController;
@property (retain, nonatomic) TURouteController *pairedHostDeviceRouteController;
@property (retain, nonatomic) TUCallFilterController *callFilterController;
@property (retain, nonatomic) CNContactStore *contactStore;
@property (retain, nonatomic) TUCallProviderManager *providerManager;
@property (nonatomic) struct CGSize { double x0; double x1; } localLandscapeAspectRatio;
@property (nonatomic) struct CGSize { double x0; double x1; } localPortraitAspectRatio;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) struct os_unfair_lock_s { unsigned int x0; } accessorLock;
@property (readonly, nonatomic) BOOL shouldPullRelayingCalls;
@property (copy, nonatomic) id /* block */ disconnectCallPreflight;
@property (readonly, nonatomic) NSObject<TUCallContainerPrivate> *callContainer;
@property (copy, nonatomic) id /* block */ launchAppForJoinRequestBlock;
@property (retain, nonatomic) TUConversationManager *conversationManager;
@property (retain, nonatomic) NSObject<TUUIDataSource> *uiDataSource;
@property (readonly, nonatomic) BOOL canMergeCalls;
@property (readonly, nonatomic) BOOL addCallAllowed;
@property (readonly, nonatomic) BOOL ambiguous;
@property (readonly, nonatomic) BOOL endAndAnswerAllowed;
@property (readonly, nonatomic) BOOL holdAndAnswerAllowed;
@property (readonly, copy, nonatomic) NSArray *currentCalls;
@property (readonly, copy, nonatomic) NSArray *currentVideoCalls;
@property (readonly, copy, nonatomic) NSArray *currentAudioAndVideoCalls;
@property (readonly, copy, nonatomic) NSArray *incomingCalls;
@property (readonly, copy, nonatomic) NSArray *displayedCalls;
@property (readonly, copy, nonatomic) NSArray *displayedAudioAndVideoCalls;
@property (readonly, copy, nonatomic) NSArray *conferenceParticipantCalls;
@property (readonly, copy, nonatomic) NSArray *callsHostedElsewhere;
@property (readonly, copy, nonatomic) NSArray *callsWithAnEndpointElsewhere;
@property (readonly, copy, nonatomic) NSArray *callsHostedOrAnEndpointElsewhere;
@property (readonly, copy, nonatomic) NSArray *callsOnDefaultPairedDevice;
@property (readonly, nonatomic) TUCall *incomingCall;
@property (readonly, nonatomic) TUCall *incomingVideoCall;
@property (readonly, nonatomic) TUCall *activeVideoCall;
@property (readonly, nonatomic) TUCall *currentVideoCall;
@property (readonly, nonatomic) TUCall *screeningCall;
@property (readonly, nonatomic) unsigned long long currentCallCount;
@property (readonly, nonatomic) unsigned long long currentVideoCallCount;
@property (readonly, nonatomic) unsigned long long currentAudioAndVideoCallCount;
@property (readonly, nonatomic) unsigned long long callCountOnDefaultPairedDevice;
@property (readonly, nonatomic) BOOL hasCurrentCalls;
@property (readonly, nonatomic) BOOL hasCurrentAudioCalls;
@property (readonly, nonatomic) BOOL hasCurrentVideoCalls;
@property (readonly, nonatomic) BOOL anyCallIsHostedOnCurrentDevice;
@property (readonly, nonatomic) BOOL anyCallIsEndpointOnCurrentDevice;
@property (readonly, copy, nonatomic) NSArray *currentCallGroups;
@property (readonly, copy, nonatomic) NSArray *currentAudioAndVideoCallGroups;
@property (readonly, copy, nonatomic) NSArray *callGroupsOnDefaultPairedDevice;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedContactStore;
+ (id)sharedInstance;
+ (id)sharedInstanceWithQueue:(id)queue server:(id)server shouldRegister:(BOOL)register;
+ (id)callCenterWithQueue:(id)queue;
+ (id)callCenterWithQueue:(id)queue server:(id)server shouldRegister:(BOOL)register;
+ (BOOL)supportsJoiningConversationWithRequest:(id)request;

/* instance methods */
- (void)fetchTUUIXPCDataSource;
- (id)init;
- (id)initWithQueue:(id)queue;
- (id)initWithQueue:(id)queue featureFlags:(id)flags;
- (void)registerWithCompletionHandler:(id /* block */)handler;
- (void)dealloc;
- (void)fetchCurrentCalls;
- (id)fetchCurrentCallUpdates;
- (void)screenWithRequest:(id)request;
- (void)saveCustomGreeting:(id)greeting forAccountUUID:(id)uuid;
- (id)customGreetingForAccountUUID:(id)uuid;
- (void)deleteCustomGreetingForAccountUUID:(id)uuid;
- (id)defaultGreeting;
- (id)callServicesClientCapabilities;
- (id)lastDaemonConnectTime;
- (BOOL)isRelayCallingSupportedForProvider:(id)provider isVideo:(BOOL)video;
- (BOOL)isDirectCallingCurrentlyAvailableForProvider:(id)provider isVideo:(BOOL)video;
- (BOOL)shouldPreferRelayOverDirectSecondaryCallingForProvider:(id)provider isVideo:(BOOL)video;
- (BOOL)_shouldPreferRelayOverDirectSecondaryCallingForRelayingCallingAvailability:(int)availability isRelayCallingSupported:(BOOL)supported isEmergencyCallbackPossible:(BOOL)possible;
- (id)_allCalls;
- (id)callsPassingTest:(id /* block */)test;
- (id)callsWithStatus:(int)status;
- (id)audioAndVideoCallsWithStatus:(int)status;
- (id)callsWithGroupUUID:(id)uuid;
- (id)displayedCall;
- (id)conferenceCall;
- (id)frontmostCall;
- (id)frontmostAudioOrVideoCall;
- (id)callPassingTest:(id /* block */)test;
- (id)callPassingTest:(id /* block */)test sortedUsingComparator:(id /* block */)comparator;
- (id)callWithStatus:(int)status;
- (id)videoCallWithStatus:(int)status;
- (id)audioOrVideoCallWithStatus:(int)status;
- (id)callWithUniqueProxyIdentifier:(id)identifier;
- (id)callWithCallUUID:(id)uuid;
- (id)displayedCallFromCalls:(id)calls;
- (unsigned long long)countOfCallsPassingTest:(id /* block */)test;
- (BOOL)existingCallsHaveMultipleProviders;
- (BOOL)anyCallPassesTest:(id /* block */)test;
- (BOOL)allCallsPassTest:(id /* block */)test;
- (BOOL)allCallsAreOfService:(int)service;
- (BOOL)_existingCallsAllowDialRequest:(id)request allowVoiceWithData:(BOOL)data;
- (BOOL)_isCallingAvailableOnSecondaryDeviceWithRelayCallingAvailability:(int)availability isProviderAvailable:(BOOL)available isRelayAllowed:(BOOL)allowed isEmergency:(BOOL)emergency supportsBasebandCalling:(BOOL)calling shouldUseRelay:(BOOL *)relay;
- (BOOL)_shouldRelayJoinConversationRequest:(id)request;
- (BOOL)_canDialWithRequest:(id)request shouldUseRelay:(BOOL *)relay;
- (BOOL)_isEmergencyDialRequest:(id)request;
- (BOOL)canDialWithRequest:(id)request;
- (id)dialWithRequest:(id)request;
- (void)dialWithRequest:(id)request completion:(id /* block */)completion;
- (id)_dialWithRequest:(id)request completion:(id /* block */)completion;
- (void)applicationWillLaunchForStartCallInteraction:(id)interaction;
- (void)launchAppForDialRequest:(id)request completion:(id /* block */)completion;
- (void)sendFieldModeDigits:(id)digits forProvider:(id)provider;
- (void)answerCall:(id)call;
- (void)holdAndAnswerIfNeeded:(id)needed;
- (void)answerOrJoinCall:(id)call;
- (void)answerCall:(id)call withSourceIdentifier:(id)identifier;
- (void)answerCallWithHoldMusic:(id)music;
- (void)answerCall:(id)call withSourceIdentifier:(id)identifier wantsHoldMusic:(BOOL)music;
- (void)holdActiveAndAnswerCall:(id)call;
- (void)holdActiveAndAnswerWithRequest:(id)request;
- (void)endActiveAndAnswerCall:(id)call;
- (void)endActiveAndAnswerWithRequest:(id)request;
- (void)endHeldAndAnswerCall:(id)call;
- (void)endHeldAndAnswerWithRequest:(id)request;
- (void)endActiveOrHeldAndAnswerCall:(id)call;
- (void)endActiveOrHeldAndAnswerWithRequest:(id)request;
- (void)reportLocalPreviewStoppedForCall:(id)call;
- (void)answerWithRequest:(id)request;
- (void)updateCall:(id)call withAnswerRequest:(id)request;
- (void)holdCall:(id)call;
- (void)requestVideoUpgradeForCall:(id)call originatingUIType:(int)uitype;
- (void)requestVideoUpgradeForCall:(id)call;
- (void)unholdCall:(id)call;
- (void)resumeCall:(id)call;
- (void)swapCalls;
- (void)groupCall:(id)call withOtherCall:(id)call;
- (void)ungroupCall:(id)call;
- (void)_preflightDisconnectForCalls:(id)calls withCompletion:(id /* block */)completion;
- (void)disconnectCall:(id)call;
- (void)disconnectCall:(id)call withReason:(int)reason;
- (void)disconnectCurrentCallAndActivateHeld;
- (void)disconnectAllCalls;
- (void)disconnectAllCallsWithNoPreflight;
- (void)handleActionForWiredHeadsetMiddleButtonPress;
- (void)handleActionForWiredHeadsetMiddleButtonPressWithSourceIdentifier:(id)identifier allowBluetoothAnswerWithoutDowngrade:(BOOL)downgrade shouldForceDowngradeToAudio:(BOOL)audio;
- (void)handleHeadsetButtonPressForActiveCalls;
- (void)handleActionForWiredHeadsetMiddleButtonLongPress;
- (void)activateInCallUIWithActivityContinuationIdentifier:(id)identifier;
- (void)setTTYType:(int)ttytype forCall:(id)call;
- (void)pullCallFromClientUsingHandoffActivityUserInfo:(id)info completion:(id /* block */)completion;
- (void)pushRelayingCallsToHost;
- (void)pushRelayingCallsToHostWithSourceIdentifier:(id)identifier;
- (void)pullRelayingCallsFromClient;
- (void)pullRelayingGFTCallsFromClientIfNecessary;
- (void)pushHostedCallsToDestination:(id)destination;
- (void)pullHostedCallsFromPairedHostDevice;
- (void)pickRouteForRapportDeviceWithMediaSystemIdentifier:(id)identifier effectiveIdentifier:(id)identifier;
- (void)joinConversationWithRequest:(id)request;
- (BOOL)launchAppForJoinRequest:(id)request;
- (BOOL)autoPunchOutBehaviorRequiredForFrontmostCall;
- (void)continueHandoffEligibleConversation;
- (BOOL)continueHandoffForConversationWithEligibility:(id)eligibility;
- (id)joinConversationWithConversationRequest:(id)request;
- (id)callMatchingConversationRequest:(id)request;
- (void)enteredForegroundForCall:(id)call;
- (void)willEnterBackgroundForAllCalls;
- (void)enteredBackgroundForAllCalls;
- (id)callForConversationWithGroupUUID:(id)uuid;
- (id)activeConversationForCall:(id)call;
- (id)activeConversationForCall:(id)call backedByGroupSession:(BOOL)session;
- (void)shouldSuppressInCallStatusBar:(BOOL)bar;
- (void)shouldAllowRingingCallStatusIndicator:(BOOL)indicator;
- (void)sendUserScoreToRTCReporting:(id)rtcreporting withScore:(int)score;
- (void)handleMediaRemoteCommand:(unsigned int)command completion:(id /* block */)completion;
- (void)handleMediaRemoteCommand:(unsigned int)command sourceIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)handleRedialCommandWhileScreening:(id)screening;
- (BOOL)isSwappable;
- (BOOL)isMergeable;
- (BOOL)isHoldAllowed;
- (BOOL)isTakingCallsPrivateAllowed;
- (BOOL)isHardPauseAvailable;
- (BOOL)isSendToVoicemailAllowed;
- (BOOL)isAddCallAllowed;
- (BOOL)isAmbiguous;
- (BOOL)isEndAndAnswerAllowed;
- (BOOL)isHoldAndAnswerAllowed;
- (BOOL)canGroupCall:(id)call withCall:(id)call;
- (unsigned long long)_callGroupCountForCall:(id)call withCall:(id)call;
- (void)createSplitSessionWithDeviceMediaRouteIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)disconnectDeviceFromSplitSessionUsingMediaRouteIdentifier:(id)identifier completion:(id /* block */)completion;
- (id)_splitSessionErrorWithCode:(long long)code underlyingError:(id)error;
- (void)registerAnonymousXPCEndpoint:(id)xpcendpoint;
- (void)fetchAnonymousXPCEndpoint:(id /* block */)xpcendpoint;
@end

#endif /* TUCallCenter_h */
