//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1431.300.81.0.0
//
#ifndef TUConversationProviderManagerXPCClient_h
#define TUConversationProviderManagerXPCClient_h
@import Foundation;

#include "TUConversationProviderManagerDataSource-Protocol.h"
#include "TUConversationProviderManagerXPCClient-Protocol.h"

@class NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface TUConversationProviderManagerXPCClient : NSObject<TUConversationProviderManagerXPCClient, TUConversationProviderManagerDataSource>

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain, nonatomic) NSXPCConnection *xpcConnection;
@property (nonatomic) BOOL hasRequestedInitialState;
@property (nonatomic) BOOL hasInitialState;
@property (nonatomic) int shouldConnectToken;
@property (nonatomic) BOOL shouldConnectToHost;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)asynchronousServer;
+ (void)setAsynchronousServer:(id)server;
+ (id)synchronousServer;
+ (void)setSynchronousServer:(id)server;
+ (id)conversationProviderManagerAllowedClasses;
+ (id)conversationProviderManagerClientXPCInterface;
+ (id)conversationProviderManagerServerXPCInterface;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)registerWithCompletionHandler:(id /* block */)handler;
- (void)conversationProviderForIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)registerForCallbacksForProvider:(id)provider completionHandler:(id /* block */)handler;
- (void)registerConversationProvider:(id)provider completionHandler:(id /* block */)handler;
- (void)generatePseudonymHandleForConversationProvider:(id)provider expiryDuration:(double)duration URI:(id)uri completionHandler:(id /* block */)handler;
- (void)renewPseudonymHandle:(id)handle forConversationProvider:(id)provider expirationDate:(id)date completionHandler:(id /* block */)handler;
- (void)revokePseudonymHandle:(id)handle forConversationProvider:(id)provider completionHandler:(id /* block */)handler;
- (void)doesHandle:(id)handle correspondToConversationProvider:(id)provider completionHandler:(id /* block */)handler;
- (void)invalidate;
- (void)_requestInitialStateIfNecessary;
- (void)_requestInitialStateWithCompletionHandler:(id /* block */)handler;
- (void)_invokeCompletionHandler:(id /* block */)handler;
- (id)asynchronousServerWithErrorHandler:(id /* block */)handler;
- (id)synchronousServerWithErrorHandler:(id /* block */)handler;
- (void)updateConversationProviders:(id)providers;
@end

#endif /* TUConversationProviderManagerXPCClient_h */
