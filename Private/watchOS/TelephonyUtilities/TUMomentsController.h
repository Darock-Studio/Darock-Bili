//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1431.300.81.0.0
//
#ifndef TUMomentsController_h
#define TUMomentsController_h
@import Foundation;

#include "TUMomentsControllerDataSource-Protocol.h"
#include "TUMomentsControllerDataSourceDelegate-Protocol.h"

@class NSHashTable, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface TUMomentsController : NSObject<TUMomentsControllerDataSourceDelegate>

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) NSObject<TUMomentsControllerDataSource> *dataSource;
@property (readonly, nonatomic) NSMutableDictionary *capabilitiesByVideoStreamToken;
@property (readonly, nonatomic) NSMutableDictionary *providerByVideoStreamToken;
@property (retain, nonatomic) NSHashTable *delegates;
@property (copy, nonatomic) id /* block */ lockdownModeEnabled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (BOOL)isFaceTimePhotosEnabledByDefault;
+ (id /* block */)faceTimePhotosEnabledDeterminer;
+ (void)setFaceTimePhotosEnabledDeterminer:(id /* block */)determiner;
+ (BOOL)isFaceTimePhotosEnabled;
+ (BOOL)isInternalInstall;
+ (BOOL)isFaceTimePhotosXPCServiceEnabled;
+ (void)setFaceTimePhotosEnabled:(BOOL)enabled;
+ (BOOL)isFaceTimePhotosRestricted;

/* instance methods */
- (id)init;
- (id)initWithDataSource:(id)source;
- (void)dealloc;
- (void)addDelegate:(id)delegate;
- (void)removeDelegate:(id)delegate;
- (void)prewarmAudioClientWithCompletion:(id /* block */)completion;
- (void)startRecordingMessageWithMediaType:(int)type completion:(id /* block */)completion;
- (void)endRecordingMessageWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)discardVideoMessageWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)sendVideoMessageWithRequest:(id)request completion:(id /* block */)completion;
- (void)saveVideoMessageWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)resetVideoMessagingWithSessionUUID:(id)uuid completion:(id /* block */)completion;
- (void)startRequestWithMediaType:(int)type forProvider:(id)provider requesteeID:(id)id completion:(id /* block */)completion;
- (void)endRequestWithTransactionID:(id)id completion:(id /* block */)completion;
- (void)registerProvider:(id)provider completion:(id /* block */)completion;
- (void)unregisterProvider:(id)provider completion:(id /* block */)completion;
- (id)capabilitiesForProvider:(id)provider;
- (void)dataSource:(id)source didUpdateCapabilities:(id)capabilities forVideoStreamToken:(long long)token;
- (void)dataSource:(id)source willCaptureRemoteRequestFromRequesterID:(id)id;
- (void)dataSource:(id)source didReceiveLocallyRequestedMomentDescriptor:(id)descriptor;
- (void)dataSource:(id)source requestSandboxExtensionForURL:(id)url reply:(id /* block */)reply;
- (void)serverDiedForDataSource:(id)source;
- (void)dataSource:(id)source didFinishProcessingRawVideoMessage:(id)message;
- (void)dataSource:(id)source didReceiveMessageRecordingError:(id)error;
@end

#endif /* TUMomentsController_h */
