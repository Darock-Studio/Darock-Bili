//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 359.4.1.2.1
//
#ifndef CDPDSecureBackupController_h
#define CDPDSecureBackupController_h
@import Foundation;

#include "CDPDOctagonTrustProxy-Protocol.h"
#include "CDPDSecureBackupConfiguration.h"
#include "CDPDSecureBackupControl-Protocol.h"
#include "CDPDSecureBackupDelegate-Protocol.h"
#include "CDPDSecureBackupDisableCapable-Protocol.h"
#include "CDPDSecureBackupEnableCapable-Protocol.h"
#include "CDPDSecureBackupOctagonCapable-Protocol.h"
#include "CDPDSecureBackupProxy-Protocol.h"

@class CDPContext, NSDictionary, NSString;
@protocol CDPStateUIProviderInternal;

@interface CDPDSecureBackupController : NSObject<CDPDSecureBackupControl, CDPDSecureBackupOctagonCapable, CDPDSecureBackupDisableCapable, CDPDSecureBackupEnableCapable>

@property (retain, nonatomic) NSDictionary *cachedAccountInfo;
@property (weak, nonatomic) NSObject<CDPDSecureBackupDelegate> *delegate;
@property (retain, nonatomic) CDPDSecureBackupConfiguration *configuration;
@property (nonatomic) long long icscRepairTotalRetries;
@property (nonatomic) long long icscRepairRetryDelay;
@property (nonatomic) BOOL isSimulateNonViableEscrowRecordEnabled;
@property (nonatomic) BOOL simulateEPThrottle;
@property (readonly, nonatomic) CDPContext *context;
@property (readonly, nonatomic) NSObject<CDPStateUIProviderInternal> *uiProvider;
@property (retain, nonatomic) NSObject<CDPDSecureBackupProxy> *secureBackupProxy;
@property (nonatomic) BOOL fakeNearlyDepletedRecords;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSObject<CDPDOctagonTrustProxy> *octagonTrustProxy;

/* class methods */
+ (id)_dateWithSecureBackupDateString:(id)string;
+ (id)_sanitizedInfoDictionary:(id)dictionary;
+ (id)_printableAccountInfo:(id)info;

/* instance methods */
- (id)initWithContext:(id)context secureBackupProxy:(id)proxy octagonTrustProxy:(id)proxy;
- (id)initWithContext:(id)context uiProvider:(id)provider delegate:(id)delegate;
- (void)synchronizeKeyValueStoreWithCompletion:(id /* block */)completion;
- (void)fetchEscrowRecordsWithOptionForceFetch:(BOOL)fetch completion:(id /* block */)completion;
- (void)fetchAllEscrowRecordsWithOptionForceFetch:(BOOL)fetch completion:(id /* block */)completion;
- (void)accountInfoWithCompletion:(id /* block */)completion;
- (void)clearAccountInfoCache;
- (id)_accountInfo:(id *)info;
- (void)isEligibleForCDPWithCompletion:(id /* block */)completion;
- (void)backupRecordsArePresentWithCompletion:(id /* block */)completion;
- (void)getBackupRecordDevicesWithOptionForceFetch:(BOOL)fetch completion:(id /* block */)completion;
- (id)handleCDPDevices:(id)cdpdevices;
- (void)_getOctagonEscrowBackupRecordDevicesWithOptionForceFetch:(BOOL)fetch completion:(id /* block */)completion;
- (void)_updateContext:(id)context withDevices:(id)devices;
- (void)_getBackupRecordDevicesIncludingUnrecoverableRecords:(id /* block */)records;
- (void)enableSecureBackupWithContext:(id)context completion:(id /* block */)completion;
- (void)upgradeICSCRecordsThenEnableSecureBackupWithContext:(id)context completion:(id /* block */)completion;
- (void)checkAndRemoveExistingThenEnableSecureBackupRecordWithContext:(id)context completion:(id /* block */)completion;
- (void)checkForAnyOctagonRecord:(id /* block */)record;
- (void)checkForExistingRecord:(id /* block */)record;
- (void)checkForExistingRecordWithPeerId:(id)id completion:(id /* block */)completion;
- (void)checkForExistingRecordMatchingPredicate:(id)predicate forceFetch:(BOOL)fetch completion:(id /* block */)completion;
- (BOOL)supportsRecoveryKeyWithError:(id *)error;
- (BOOL)supportsWalrusRecoveryKeyWithError:(id *)error;
- (void)_enableSecureBackupWithContext:(id)context completion:(id /* block */)completion;
- (void)_retryRepairWithContext:(id)context retryCount:(long long)count completion:(id /* block */)completion;
- (void)enableSecureBackupWithRecoveryKey:(id)key completion:(id /* block */)completion;
- (BOOL)authenticatedEnableSecureBackupWithRecoveryKey:(id)key error:(id *)error;
- (void)_authenticatedEnableSecureBackupWithContext:(id)context completion:(id /* block */)completion;
- (void)_handleSecureBackupEnablementError:(id)error context:(id)context delegate:(id)delegate completion:(id /* block */)completion;
- (BOOL)_disableThenEnableWithInfo:(id)info error:(id *)error;
- (id)_currentAnisetteData;
- (id)_clientMetadataWithSecretType:(unsigned long long)type length:(unsigned long long)length;
- (id)performEscrowRecoveryWithData:(id)data error:(id *)error;
- (id)performSilentEscrowRecoveryWithCDPContext:(id)cdpcontext error:(id *)error;
- (BOOL)recordIsEmpty:(id)empty;
- (id)performEscrowRecoveryWithRecoveryContext:(id)context error:(id *)error;
- (void)performEscrowRecoveryWithRecoveryContext:(id)context completion:(id /* block */)completion;
- (void)recoverSecureBackupWithContext:(id)context completion:(id /* block */)completion;
- (id)_makeRecoveryKeyVerifyEventWithError:(id)error result:(BOOL)result;
- (void)validateRecoveryKeyWithContext:(id)context completion:(id /* block */)completion;
- (void)validateAndRepairRecoveryKeyMismatchWithContext:(id)context authProvider:(id)provider circleProxy:(id)proxy completion:(id /* block */)completion;
- (BOOL)_isRecoveryKeySetInOctagonWithConfig:(id)config;
- (BOOL)_validateOctagonRecoveryKeyWithConfig:(id)config recoveryKey:(id)key;
- (void)_setRecoveryKeyInOctagonIfRequiredWithConfig:(id)config recoveryKey:(id)key error:(id *)error;
- (BOOL)_isRecoveryKeySetInSOSWithConfig:(id)config;
- (BOOL)_isSOSEnabled;
- (BOOL)_isInSOSCircle;
- (BOOL)_validateSOSRecoveryKey:(id)key config:(id)config;
- (void)_setRecoveryKeyInSOSIfRequiredWithConfig:(id)config recoveryKey:(id)key error:(id *)error;
- (void)_validateRecoveryKeyInIDMSWithContext:(id)context authProvider:(id)provider completion:(id /* block */)completion;
- (void)_setRecoveryKeyInIDMSWithContext:(id)context circleProxy:(id)proxy authProvider:(id)provider completion:(id /* block */)completion;
- (id)_recoverBackupDictionaryWithContext:(id)context error:(id *)error;
- (id)_recoveryInfoDictionaryFromContext:(id)context;
- (void)deleteAllBackupRecordsWithCompletion:(id /* block */)completion;
- (void)_deleteAllBackupRecordsWithCompletion:(id /* block */)completion;
- (void)deleteSingleICSCBackupWithCompletion:(id /* block */)completion;
- (void)_deleteSingleICSCBackupWithCompletion:(id /* block */)completion;
- (void)disableSecureBackupWithCompletion:(id /* block */)completion;
- (BOOL)_disableSecureBackup:(id *)backup;
- (BOOL)_disableSecureBackupWithEnableInfo:(id)info error:(id *)error;
- (void)disableRecoveryKeyWithCompletion:(id /* block */)completion;
- (BOOL)disableRecoveryKey:(id *)key;
- (void)disableRecoveryKeyFromAllSystemsWithCompletion:(id /* block */)completion;
- (void)_disableRecoveryKeyFromSOS:(id *)sos;
@end

#endif /* CDPDSecureBackupController_h */
