//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 359.4.1.2.1
//
#ifndef CDPDDeviceSecretValidator_h
#define CDPDDeviceSecretValidator_h
@import Foundation;

#include "CDPDDeviceSecretValidatorDelegate-Protocol.h"
#include "CDPRemoteDeviceSecretValidatorProtocolInternal-Protocol.h"

@class CDPContext, CDPDevice, NSMutableDictionary, NSMutableSet, NSString;

@interface CDPDDeviceSecretValidator : NSObject<CDPRemoteDeviceSecretValidatorProtocolInternal> {
  /* instance variables */
  BOOL _isAttemptingRecovery;
  unsigned long long _failedAttempts;
  NSMutableDictionary *_failedSecrets;
  NSMutableSet *_failedRecoveryKeys;
  NSMutableSet *_failedSingleICSCs;
  NSMutableDictionary *_recoveryErrors;
  BOOL _depletedRemainingAttempts;
  CDPContext *_context;
  CDPDevice *_currentDevice;
}

@property (nonatomic) BOOL isUsingMultipleICSC;
@property (copy, nonatomic) id /* block */ validSecretHandler;
@property (weak, nonatomic) NSObject<CDPDDeviceSecretValidatorDelegate> *delegate;
@property (nonatomic) unsigned long long supportedEscapeOfferMask;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithContext:(id)context delegate:(id)delegate;
- (void)_attemptToRecoverDevice:(id)device withSecret:(id)secret completion:(id /* block */)completion;
- (void)_attemptToRecoverWithRecoveryKey:(id)key completion:(id /* block */)completion;
- (void)validateRecoveryKey:(id)key withCompletion:(id /* block */)completion;
- (void)validateSecret:(id)secret devices:(id)devices type:(unsigned long long)type withCompletion:(id /* block */)completion;
- (void)_handleRecoveryFailureForFinalDevice:(id)device completion:(id /* block */)completion;
- (void)cancelValidationWithError:(id)error;
- (void)_handleDelegateValidationError:(id)error;
- (id)_handleMultiCSCRecoveryFailureForDevice:(id)device recoveryError:(id)error secret:(id)secret;
- (id)_failedSecretsForDevice:(id)device;
- (id)_failedSingleICSCs;
- (BOOL)_isFailedSecret:(id)secret forDevice:(id)device;
- (void)_handleMultiCSCRecoveryResults:(id)results clique:(id)clique type:(unsigned long long)type secret:(id)secret device:(id)device completion:(id /* block */)completion;
- (void)_performSingleiCSCRecoveryWithSecret:(id)secret type:(unsigned long long)type completion:(id /* block */)completion;
- (void)resetAccountCDPState;
- (void)resetAccountCDPStateAndSetSecret:(id)secret;
- (void)cancelApproveFromAnotherDevice;
- (void)supportedEscapeOfferMaskCompletion:(id /* block */)completion;
- (void)approveFromAnotherDeviceWithCompletion:(id /* block */)completion;
- (void)validateCustodianRecoveryInfo:(id)info withCompletion:(id /* block */)completion;
- (BOOL)_isInvalidICSCError:(id)icscerror;
- (BOOL)isAttemptingRecovery;
- (unsigned long long)failedAttempts;
@end

#endif /* CDPDDeviceSecretValidator_h */
