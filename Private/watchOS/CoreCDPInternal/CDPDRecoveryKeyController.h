//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 359.4.1.2.1
//
#ifndef CDPDRecoveryKeyController_h
#define CDPDRecoveryKeyController_h
@import Foundation;

#include "CDPDAuthProviderInternal-Protocol.h"
#include "CDPDDeviceSecretValidatorDelegate-Protocol.h"
#include "CDPDOctagonTrustProxy-Protocol.h"
#include "CDPDPCSController.h"
#include "CDPDRecoveryKeyValidatorInternalDelegate-Protocol.h"
#include "CDPDSecureBackupController.h"
#include "CDPDSecureBackupProxy-Protocol.h"

@class CDPContext, NSString;
@protocol CDPAuthProviderInternal, CDPDCircleProxy, CDPStateUIProviderInternal;

@interface CDPDRecoveryKeyController : NSObject<CDPDRecoveryKeyValidatorInternalDelegate, CDPDDeviceSecretValidatorDelegate> {
  /* instance variables */
  CDPContext *_context;
  CDPDPCSController *_pcsController;
  CDPDSecureBackupController *_secureBackupController;
}

@property (retain, nonatomic) NSObject<CDPStateUIProviderInternal> *uiProvider;
@property (retain, nonatomic) NSObject<CDPDCircleProxy> *circleProxy;
@property (retain, nonatomic) NSObject<CDPDSecureBackupProxy> *sbProxy;
@property (retain, nonatomic) NSObject<CDPDOctagonTrustProxy> *otProxy;
@property (retain, nonatomic) NSObject<CDPAuthProviderInternal> *recoveryAuthProvider;
@property (retain, nonatomic) NSObject<CDPDAuthProviderInternal> *internalAuthProvider;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithContext:(id)context;
- (id)initWithContext:(id)context uiProvider:(id)provider;
- (id)initWithContext:(id)context uiProvider:(id)provider authProvider:(id)provider;
- (id)initWithContext:(id)context uiProvider:(id)provider authProvider:(id)provider circleProxy:(id)proxy secureBackupProxy:(id)proxy octagonTrustProxy:(id)proxy pcsProxy:(id)proxy;
- (void)recoverState:(id /* block */)state;
- (void)recoverAndSynchronizeStateWithServer:(id /* block */)server;
- (BOOL)isRecoveryKeyAvailableWithError:(id *)error;
- (BOOL)isWalrusRecoveryKeyAvailableWithError:(id *)error;
- (void)verifyRecoveryKey:(id /* block */)key;
- (void)generateNewRecoveryKey:(id /* block */)key;
- (void)authenticateAndGenerateNewRecoveryKeyWithCompletion:(id /* block */)completion;
- (void)authenticateAndDeleteRecoveryKeyWithCompletion:(id /* block */)completion;
- (void)_authenticateAndPerformRecoveryKeyOperation:(id /* block */)operation completion:(id /* block */)completion;
- (void)deleteRecoveryKeyWithCompletion:(id /* block */)completion;
- (void)generateRandomRecoveryKey:(id /* block */)key;
- (void)recoverDataUsingMasterKeyWithCompletion:(id /* block */)completion;
- (id)generateRecoveryKeyWithInfo:(id)info error:(id *)error;
- (void)secretValidator:(id)validator validateRecoveryKeyWithContext:(id)context completion:(id /* block */)completion;
- (void)secretValidator:(id)validator recoverSecureBackupWithContext:(id)context completion:(id /* block */)completion;
- (BOOL)secretValidator:(id)validator shouldContinueValidationAfterError:(id)error;
- (void)dealloc;
@end

#endif /* CDPDRecoveryKeyController_h */
