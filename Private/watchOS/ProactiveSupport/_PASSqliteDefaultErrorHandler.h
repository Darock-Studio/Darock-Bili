//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 388.0.0.0.0
//
#ifndef _PASSqliteDefaultErrorHandler_h
#define _PASSqliteDefaultErrorHandler_h
@import Foundation;

#include "_PASSqliteErrorHandlerProtocol-Protocol.h"

@class NSString;

@interface _PASSqliteDefaultErrorHandler : NSObject<_PASSqliteErrorHandlerProtocol>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (BOOL)handleSqliteError:(int)error error:(id)error onError:(id /* block */)error db:(id)db;
- (BOOL)_abortDueToSqliteError:(id)error onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_UNKNOWN_ERROR:(id)error onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_FULL:(id)full onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CORRUPT:(id)corrupt onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_NOTADB:(id)notadb onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_SHORT_READ:(id)read onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CANTOPEN:(id)cantopen onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CANTOPEN_NOTEMPDIR:(id)notempdir onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CANTOPEN_ISDIR:(id)isdir onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CANTOPEN_FULLPATH:(id)fullpath onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CANTOPEN_CONVPATH:(id)convpath onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR:(id)ioerr onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_SHMSIZE:(id)shmsize onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_READ:(id)read onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_WRITE:(id)write onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_FSYNC:(id)fsync onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_DIR_FSYNC:(id)fsync onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_TRUNCATE:(id)truncate onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_FSTAT:(id)fstat onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_UNLOCK:(id)unlock onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_RDLOCK:(id)rdlock onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_DELETE:(id)delete onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_BLOCKED:(id)blocked onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_NOMEM:(id)nomem onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_ACCESS:(id)access onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_CHECKRESERVEDLOCK:(id)checkreservedlock onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_LOCK:(id)lock onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_CLOSE:(id)close onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_DIR_CLOSE:(id)close onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_SHMOPEN:(id)shmopen onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_SHMLOCK:(id)shmlock onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_SHMMAP:(id)shmmap onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_SEEK:(id)seek onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_DELETE_NOENT:(id)noent onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_MMAP:(id)mmap onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_GETTEMPPATH:(id)gettemppath onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_CONVPATH:(id)convpath onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_VNODE:(id)vnode onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_IOERR_AUTH:(id)auth onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_ERROR:(id)error onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_INTERNAL:(id)internal onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_PERM:(id)perm onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_ABORT:(id)abort onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_BUSY:(id)busy onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_LOCKED:(id)locked onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_NOMEM:(id)nomem onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_READONLY:(id)readonly onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_INTERRUPT:(id)interrupt onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_NOTFOUND:(id)notfound onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_PROTOCOL:(id)protocol onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_EMPTY:(id)empty onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_SCHEMA:(id)schema onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_TOOBIG:(id)toobig onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT:(id)constraint onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_MISMATCH:(id)mismatch onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_MISUSE:(id)misuse onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_NOLFS:(id)nolfs onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_AUTH:(id)auth onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_FORMAT:(id)format onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_RANGE:(id)range onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_NOTICE:(id)notice onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_WARNING:(id)warning onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_LOCKED_SHAREDCACHE:(id)sharedcache onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_BUSY_RECOVERY:(id)recovery onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_BUSY_SNAPSHOT:(id)snapshot onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CORRUPT_VTAB:(id)vtab onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_READONLY_RECOVERY:(id)recovery onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_READONLY_CANTLOCK:(id)cantlock onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_READONLY_ROLLBACK:(id)rollback onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_READONLY_DBMOVED:(id)dbmoved onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_ABORT_ROLLBACK:(id)rollback onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_CHECK:(id)check onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_COMMITHOOK:(id)commithook onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_FOREIGNKEY:(id)foreignkey onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_FUNCTION:(id)function onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_NOTNULL:(id)notnull onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_PRIMARYKEY:(id)primarykey onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_TRIGGER:(id)trigger onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_UNIQUE:(id)unique onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_VTAB:(id)vtab onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_CONSTRAINT_ROWID:(id)rowid onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_NOTICE_RECOVER_WAL:(id)wal onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_NOTICE_RECOVER_ROLLBACK:(id)rollback onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_WARNING_AUTOINDEX:(id)autoindex onError:(id /* block */)error db:(id)db;
- (BOOL)_handle_SQLITE_AUTH_USER:(id)user onError:(id /* block */)error db:(id)db;
@end

#endif /* _PASSqliteDefaultErrorHandler_h */
