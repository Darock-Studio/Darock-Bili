//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1226.2.2.1.0
//
#ifndef HVPowerBudgetThrottlingState_h
#define HVPowerBudgetThrottlingState_h
@import Foundation;

@protocol OS_os_log;

@interface HVPowerBudgetThrottlingState : NSObject {
  /* instance variables */
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _lock;
  NSObject<OS_os_log> *_log;
  struct { unsigned int magic; int opsLeft; long long nsecLeft; int extraOpsLeft; int budgetState; long long timeOfLastChange; } _state;
  unsigned long long _absTimeAtOpStart;
  unsigned long long _timeSinceOpStart;
  int _fd;
  BOOL _opInProgress;
  BOOL _dirty;
  BOOL _wasOnBattery;
  BOOL _wasEnabled;
  BOOL _hasClassCUnlock;
}

/* instance methods */
- (id)initWithPath:(id)path log:(id)log;
- (void)dealloc;
- (unsigned char)canDoDiscretionaryWork;
- (unsigned char)canDoDiscretionaryWork:(unsigned int *)work;
- (unsigned char)canDoExtraDiscretionaryWork;
- (id)state;
- (void)checkBatteryStateForRefill;
- (void)refillState;
- (void)startWork;
- (void)endWork;
- (void)didConsumeAnExtraBudgetedOperation;
- (void)updateState:(unsigned int)state;
@end

#endif /* HVPowerBudgetThrottlingState_h */
