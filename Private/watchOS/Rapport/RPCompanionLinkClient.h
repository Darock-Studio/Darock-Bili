//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 524.1.0.0.0
//
#ifndef RPCompanionLinkClient_h
#define RPCompanionLinkClient_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "RPAuthenticatable-Protocol.h"
#include "RPCompanionLinkDevice.h"
#include "RPCompanionLinkXPCClientInterface-Protocol.h"
#include "RPDaemonConnection-Protocol.h"
#include "RPMessageable-Protocol.h"
#include "RPSignedInUserProvider-Protocol.h"

@class NSArray, NSData, NSDictionary, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface RPCompanionLinkClient : NSObject<NSSecureCoding, RPCompanionLinkXPCClientInterface, RPAuthenticatable, RPMessageable> {
  /* instance variables */
  BOOL _activateCalled;
  NSMutableSet *_assertions;
  NSObject<RPDaemonConnection> *_daemonCnx;
  NSMutableDictionary *_deviceDictionary;
  NSMutableDictionary *_eventRegistrations;
  BOOL _invalidateCalled;
  BOOL _invalidateDone;
  NSMutableOrderedSet *_registeredProfileIDs;
  NSMutableDictionary *_requestRegistrations;
  NSObject<RPSignedInUserProvider> *_userProvider;
}

@property (nonatomic) unsigned int clientID;
@property (readonly, nonatomic) unsigned int internalAuthFlags;
@property (retain) RPCompanionLinkDevice *localDevice;
@property (nonatomic) BOOL usingOnDemandConnection;
@property (copy, nonatomic) NSString *appID;
@property (nonatomic) double awdlGuestDiscoveryTimeout;
@property (nonatomic) long long bleClientUseCase;
@property (nonatomic) long long bleScreenOffRescanInterval;
@property (nonatomic) unsigned int bleScreenOffScanRate;
@property (copy, nonatomic) NSString *cloudServiceID;
@property (nonatomic) unsigned long long controlFlags;
@property (copy, nonatomic) id /* block */ disconnectHandler;
@property (retain, nonatomic) RPCompanionLinkDevice *destinationDevice;
@property (retain, nonatomic) NSArray *deviceFilter;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic) unsigned long long errorFlags;
@property (copy, nonatomic) id /* block */ errorFlagsChangedHandler;
@property (nonatomic) unsigned int flags;
@property (copy, nonatomic) id /* block */ interruptionHandler;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (nonatomic) long long rssiThreshold;
@property (nonatomic) BOOL targetUserSession;
@property (nonatomic) unsigned int useCase;
@property (readonly, copy) NSArray *activeDevices;
@property (readonly) RPCompanionLinkDevice *activePersonalCompanion;
@property (copy, nonatomic) id /* block */ deviceFoundHandler;
@property (copy, nonatomic) id /* block */ deviceLostHandler;
@property (copy, nonatomic) id /* block */ deviceChangedHandler;
@property (copy, nonatomic) id /* block */ localDeviceUpdatedHandler;
@property (copy, nonatomic) NSDictionary *siriInfo;
@property (copy, nonatomic) id /* block */ stateUpdatedHandler;
@property (copy, nonatomic) id /* block */ requestIDRegistrationCompletion;
@property (copy, nonatomic) id /* block */ eventIDRegistrationCompletion;
@property (retain, nonatomic) NSArray *allowedMACAddresses;
@property (copy, nonatomic) NSData *pairingInfo;
@property (retain, nonatomic) NSArray *pairSetupACL;
@property (nonatomic) unsigned int pairSetupFlags;
@property (nonatomic) unsigned int pairVerifyFlags;
@property (copy, nonatomic) NSString *password;
@property (nonatomic) int passwordType;
@property (readonly, nonatomic) int passwordTypeActual;
@property (copy, nonatomic) id /* block */ authCompletionHandler;
@property (copy, nonatomic) id /* block */ showPasswordHandler;
@property (copy, nonatomic) id /* block */ hidePasswordHandler;
@property (copy, nonatomic) id /* block */ promptForPasswordHandler;
@property (retain, nonatomic) NSString *serviceType;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithUserProvider:(id)provider;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)description;
- (void)activateWithCompletion:(id /* block */)completion;
- (void)_activateWithCompletion:(id /* block */)completion reactivate:(BOOL)reactivate;
- (id)_XPCConnectionWithMachServiceName:(id)name options:(unsigned long long)options;
- (id)_clientError:(id)error;
- (id)_connectionWithClient:(id)client queue:(id)queue userProvider:(id)provider interruptionHandler:(id /* block */)handler invalidationHandler:(id /* block */)handler;
- (id)_ensureXPCStarted;
- (void)_invokeBlockActivateSafe:(id /* block */)safe;
- (void)_interrupted;
- (void)invalidate;
- (void)_invalidated;
- (id)activateAssertionID:(id)id destinationID:(id)id options:(id)options completion:(id /* block */)completion;
- (void)_invalidateAssertion:(id)assertion;
- (void)_reregisterAssertions;
- (void)tryPassword:(id)password;
- (void)companionLinkPromptForPasswordType:(int)type flags:(unsigned int)flags throttleSeconds:(int)seconds;
- (void)companionLinkAuthCompleted:(id)completed;
- (void)companionLinkFoundDevice:(id)device;
- (void)companionLinkLostDevice:(id)device;
- (void)companionLinkChangedDevice:(id)device changes:(unsigned int)changes;
- (void)companionLinkLocalDeviceUpdated:(id)updated;
- (void)_lostAllDevices;
- (BOOL)shouldReportDevice:(id)device toXPCConnectionWithLaunchInstanceID:(id)id outReason:(id *)reason;
- (void)companionLinkUpdateErrorFlags:(unsigned long long)flags;
- (void)companionLinkUpdateClientState:(id)state;
- (void)registerEventID:(id)id options:(id)options handler:(id /* block */)handler;
- (void)_registerEventID:(id)id options:(id)options reregister:(BOOL)reregister;
- (void)_reregisterEvents;
- (void)deregisterEventID:(id)id;
- (void)sendEventID:(id)id event:(id)event options:(id)options completion:(id /* block */)completion;
- (void)sendEventID:(id)id event:(id)event destinationID:(id)id options:(id)options completion:(id /* block */)completion;
- (void)companionLinkReceivedEventID:(id)id event:(id)event options:(id)options;
- (void)registerRequestID:(id)id options:(id)options handler:(id /* block */)handler;
- (void)_registerRequestIDOnQueue:(id)queue options:(id)options handler:(id /* block */)handler;
- (void)_registerRequestID:(id)id options:(id)options reregister:(BOOL)reregister;
- (void)_reregisterRequests;
- (void)deregisterRequestID:(id)id;
- (void)sendRequestID:(id)id request:(id)request options:(id)options responseHandler:(id /* block */)handler;
- (void)sendRequestID:(id)id request:(id)request destinationID:(id)id options:(id)options responseHandler:(id /* block */)handler;
- (void)companionLinkReceivedRequestID:(id)id request:(id)request options:(id)options responseHandler:(id /* block */)handler;
- (void)companionLinkHandleDisconnect;
- (void)launchAppWithBundleID:(id)id destinationID:(id)id completion:(id /* block */)completion;
- (void)launchAppWithURL:(id)url destinationID:(id)id completion:(id /* block */)completion;
- (void)triggerEnhancedDiscoveryForReason:(id)reason completion:(id /* block */)completion;
- (void)triggerEnhancedDiscoveryForReason:(id)reason useCase:(unsigned int)case completion:(id /* block */)completion;
- (void)createDeviceToEndpointMappingForDevice:(id)device completion:(id /* block */)completion;
- (void)setLocalDeviceAsContextCollectorWithCompletion:(id /* block */)completion;
- (void)removeLocalDeviceAsContextCollectorWithCompletion:(id /* block */)completion;
- (void)registerProfileID:(id)id completion:(id /* block */)completion;
- (void)_registerProfileID:(id)id reregister:(BOOL)reregister completion:(id /* block */)completion;
- (void)_reregisterProfileIDs;
- (void)deregisterProfileID:(id)id completion:(id /* block */)completion;
@end

#endif /* RPCompanionLinkClient_h */
