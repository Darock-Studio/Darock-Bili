//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 252.9.0.0.0
//
#ifndef _LTTranslationServer_h
#define _LTTranslationServer_h
@import Foundation;

#include "_LTActivityLogger.h"
#include "_LTDSELFLoggingManager.h"
#include "_LTDTranslationOperationScheduler.h"
#include "_LTLoggingRequestHandler.h"
#include "_LTServerSpeakSession.h"
#include "_LTServerSpeechSession.h"
#include "_LTTextToSpeechCache.h"
#include "_LTTranslationEngine-Protocol.h"

@protocol OS_dispatch_queue;

@interface _LTTranslationServer : NSObject {
  /* instance variables */
  NSObject<_LTTranslationEngine> *_offlineCachedEngine;
  NSObject<_LTTranslationEngine> *_onlineCachedEngine;
  _LTDTranslationOperationScheduler *_translationEngineScheduler;
  _LTTextToSpeechCache *_ttsCache;
  _LTServerSpeechSession *_speechSession;
  _LTServerSpeakSession *_speakSession;
  _LTLoggingRequestHandler *_logger;
  _LTActivityLogger *_activityLogger;
  _LTDSELFLoggingManager *_selfLoggingManager;
  NSObject<OS_dispatch_queue> *_queue;
}

/* instance methods */
- (id)init;
- (id)_offlineEngineForContext:(id)context error:(id *)error;
- (id)_onlineEngineForContext:(id)context error:(id *)error;
- (id)_engineForContext:(id)context error:(id *)error;
- (void)preheatWithContext:(id)context completion:(id /* block */)completion;
- (void)cancelExistingSessions;
- (void)translateSentence:(id)sentence withContext:(id)context completion:(id /* block */)completion;
- (void)translateParagraphs:(id)paragraphs withContext:(id)context paragraphResult:(id /* block */)result completion:(id /* block */)completion;
- (void)textStreamingConfigurationWithCompletion:(id /* block */)completion;
- (id)startTextToSpeechTranslationWithContext:(id)context text:(id)text delegate:(id)delegate;
- (void)speak:(id)speak withContext:(id)context delegate:(id)delegate completion:(id /* block */)completion;
- (id)startSpeechTranslationWithContext:(id)context delegate:(id)delegate;
- (void)cancelSpeechSession;
- (void)cancelSpeechSessionWithID:(id)id;
- (void)_speechSessionCompleted;
- (void)addSpeechAudioData:(id)data;
- (void)endAudio;
- (void)autoDetectSpeechUnsupportedPairsWithCompletion:(id /* block */)completion;
- (void)registerActivity:(long long)activity;
- (void)_logStateSoon;
- (void)startLoggingRequest:(id)request;
- (void)clearCaches;
- (void)notifyOfMemoryPressure;
- (void)cleanupOfflineEngine;
- (void)cleanup;
- (void)shouldPresentSystemFirstUseConsent:(id /* block */)consent;
- (void)languageForText:(id)text completion:(id /* block */)completion;
- (void)languagesForText:(id)text completion:(id /* block */)completion;
- (void)languagesForText:(id)text usingModel:(unsigned long long)model completion:(id /* block */)completion;
- (void)languagesForText:(id)text usingModel:(unsigned long long)model strategy:(unsigned long long)strategy completion:(id /* block */)completion;
- (void)languageAssetsWithOptions:(unsigned long long)options completion:(id /* block */)completion;
- (void)setLanguageAssets:(id)assets options:(unsigned long long)options progress:(id /* block */)progress completion:(id /* block */)completion;
- (void)_offlineLanguageStatus:(id /* block */)status;
- (void)_downloadAssetForLanguagePair:(id)pair userInitiated:(BOOL)initiated completion:(id /* block */)completion;
- (void)_purgeAssetForLanguagePair:(id)pair userInitiated:(BOOL)initiated completion:(id /* block */)completion;
- (void)_purgeAllAssets:(id /* block */)assets;
- (void)_updateAllAssets:(id /* block */)assets;
- (void)installedLocales:(id /* block */)locales;
- (void)startInstallRequest:(id)request delegate:(id)delegate;
- (void)_getAssetSize:(id /* block */)size;
- (void)availableLocalePairsForTask:(long long)task completion:(id /* block */)completion;
- (void)additionalLikelyPreferredLocalesForLocale:(id)locale completion:(id /* block */)completion;
- (void)configInfoForLocale:(id)locale otherLocale:(id)locale completion:(id /* block */)completion;
- (void)task:(long long)task isSupportedInCountry:(id)country completion:(id /* block */)completion;
- (void)_updateHotfix:(id /* block */)hotfix;
- (void)_deleteHotfix:(id /* block */)hotfix;
- (void)onDeviceModeEnabled:(id /* block */)enabled;
- (void)selfLoggingEventWithData:(id)data;
@end

#endif /* _LTTranslationServer_h */
