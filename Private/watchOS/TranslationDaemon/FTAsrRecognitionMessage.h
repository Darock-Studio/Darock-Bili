//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 252.9.0.0.0
//
#ifndef FTAsrRecognitionMessage_h
#define FTAsrRecognitionMessage_h
@import Foundation;

#include "FLTBFBufferAccessor-Protocol.h"
#include "FTAudioLimitExceeded.h"
#include "FTAudioPacket.h"
#include "FTCheckForSpeechRequest.h"
#include "FTCheckForSpeechResponse.h"
#include "FTClientSetupInfo.h"
#include "FTEndPointCandidate.h"
#include "FTEndPointLikelihood.h"
#include "FTFinalSpeechRecognitionResponse.h"
#include "FTFinishAudio.h"
#include "FTMultiUserFinalSpeechRecognitionResponse.h"
#include "FTMultiUserRecognitionCandidate.h"
#include "FTPartialSpeechRecognitionResponse.h"
#include "FTRecognitionCandidate.h"
#include "FTRecognitionProgress.h"
#include "FTRequestStatsResponse.h"
#include "FTResetServerEndpointer.h"
#include "FTServerEndpointFeatures.h"
#include "FTSetAlternateRecognitionSausage.h"
#include "FTSetEndpointerState.h"
#include "FTSetRequestOrigin.h"
#include "FTSetSpeechContext.h"
#include "FTSetSpeechProfile.h"
#include "FTStartSpeechRequest.h"
#include "FTUpdateAudioInfo.h"
#include "FTUpdatedAcousticProfile.h"
#include "NSCopying-Protocol.h"

@class NSData, NSMutableDictionary;
@protocol FLTBFBufferAccessor><NSCopying;

@interface FTAsrRecognitionMessage : NSObject<FLTBFBufferAccessor, NSCopying> {
  /* instance variables */
  NSMutableDictionary *_storage;
  NSData *_data;
  const struct AsrRecognitionMessage { unsigned char x0[1] } * _root;
}

@property (readonly, nonatomic) long long session_message_type;
@property (readonly, nonatomic) FTStartSpeechRequest *session_messageAsFTStartSpeechRequest;
@property (readonly, nonatomic) FTUpdateAudioInfo *session_messageAsFTUpdateAudioInfo;
@property (readonly, nonatomic) FTSetRequestOrigin *session_messageAsFTSetRequestOrigin;
@property (readonly, nonatomic) FTSetSpeechContext *session_messageAsFTSetSpeechContext;
@property (readonly, nonatomic) FTSetSpeechProfile *session_messageAsFTSetSpeechProfile;
@property (readonly, nonatomic) FTSetEndpointerState *session_messageAsFTSetEndpointerState;
@property (readonly, nonatomic) FTAudioPacket *session_messageAsFTAudioPacket;
@property (readonly, nonatomic) FTFinishAudio *session_messageAsFTFinishAudio;
@property (readonly, nonatomic) FTResetServerEndpointer *session_messageAsFTResetServerEndpointer;
@property (readonly, nonatomic) FTCheckForSpeechRequest *session_messageAsFTCheckForSpeechRequest;
@property (readonly, nonatomic) FTSetAlternateRecognitionSausage *session_messageAsFTSetAlternateRecognitionSausage;
@property (readonly, nonatomic) FTFinalSpeechRecognitionResponse *session_messageAsFTFinalSpeechRecognitionResponse;
@property (readonly, nonatomic) FTMultiUserFinalSpeechRecognitionResponse *session_messageAsFTMultiUserFinalSpeechRecognitionResponse;
@property (readonly, nonatomic) FTPartialSpeechRecognitionResponse *session_messageAsFTPartialSpeechRecognitionResponse;
@property (readonly, nonatomic) FTUpdatedAcousticProfile *session_messageAsFTUpdatedAcousticProfile;
@property (readonly, nonatomic) FTEndPointLikelihood *session_messageAsFTEndPointLikelihood;
@property (readonly, nonatomic) FTEndPointCandidate *session_messageAsFTEndPointCandidate;
@property (readonly, nonatomic) FTRecognitionProgress *session_messageAsFTRecognitionProgress;
@property (readonly, nonatomic) FTCheckForSpeechResponse *session_messageAsFTCheckForSpeechResponse;
@property (readonly, nonatomic) FTRecognitionCandidate *session_messageAsFTRecognitionCandidate;
@property (readonly, nonatomic) FTMultiUserRecognitionCandidate *session_messageAsFTMultiUserRecognitionCandidate;
@property (readonly, nonatomic) FTRequestStatsResponse *session_messageAsFTRequestStatsResponse;
@property (readonly, nonatomic) FTServerEndpointFeatures *session_messageAsFTServerEndpointFeatures;
@property (readonly, nonatomic) FTClientSetupInfo *session_messageAsFTClientSetupInfo;
@property (readonly, nonatomic) FTAudioLimitExceeded *session_messageAsFTAudioLimitExceeded;
@property (readonly, nonatomic) NSObject<FLTBFBufferAccessor><NSCopying> *session_message;

/* class methods */
+ (Class)session_message_immutableClassForType:(long long)type;
+ (long long)session_message_typeForImmutableObject:(id)object;

/* instance methods */
- (id)initWithFlatbuffData:(id)data;
- (id)initAndVerifyWithFlatbuffData:(id)data;
- (id)initWithFlatbuffData:(id)data root:(const struct AsrRecognitionMessage { unsigned char x0[1] } *)root;
- (id)initWithFlatbuffData:(id)data root:(const struct AsrRecognitionMessage { unsigned char x0[1] } *)root verify:(BOOL)verify;
- (id)copyWithZone:(struct _NSZone *)zone;
- (struct Offset<siri::speech::qss_fb::AsrRecognitionMessage> { unsigned int x0; })addObjectToBuffer:(void *)buffer;
- (id)flatbuffData;
@end

#endif /* FTAsrRecognitionMessage_h */
