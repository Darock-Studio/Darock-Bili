//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 198.0.0.0.0
//
#ifndef RCConfigurationManager_h
#define RCConfigurationManager_h
@import Foundation;

#include "RCAsyncSerialQueue.h"
#include "RCConfigurationSettings.h"
#include "RCDeviceInfo.h"
#include "RCKeyValueStore.h"
#include "RCUnfairLock.h"

@class NSMutableArray, NSMutableDictionary, NSURL;

@interface RCConfigurationManager : NSObject

@property (retain, nonatomic) RCConfigurationSettings *configurationSettings;
@property (retain, nonatomic) RCDeviceInfo *deviceInfo;
@property (retain, nonatomic) NSURL *contentDirectoryURL;
@property (retain, nonatomic) RCAsyncSerialQueue *configRequestSerialQueue;
@property (retain, nonatomic) RCKeyValueStore *localStore;
@property (retain, nonatomic) NSMutableDictionary *configResourceByRequestKey;
@property (retain, nonatomic) NSMutableArray *runningOperations;
@property (retain, nonatomic) RCUnfairLock *runningOperationsLock;
@property (retain, nonatomic) NSMutableDictionary *backgroundURLSessionHandlers;
@property (retain, nonatomic) RCUnfairLock *backgroundURLSessionHandlersLock;
@property (copy, nonatomic) id /* block */ networkEventHandler;

/* instance methods */
- (id)initWithContentDirectoryURL:(id)url;
- (void)fetchSingleConfigurationWithSettings:(id)settings completionQueue:(id)queue completion:(id /* block */)completion;
- (void)fetchConfigurationWithSettings:(id)settings completionQueue:(id)queue completion:(id /* block */)completion;
- (void)fetchMultiConfigurationWithSettings:(id)settings completionQueue:(id)queue completion:(id /* block */)completion;
- (void)reestablishBackgroundSessionWithSettings:(id)settings sessionCompletionHandler:(id /* block */)handler;
- (void)cancelAllTasksOnBackgroundSessionWithSettings:(id)settings completion:(id /* block */)completion;
- (void)_processConfigurationCompletionWithResources:(id)resources configurationSettings:(id)settings processedConfigurationDataByRequestKey:(id *)key processedTreatmentIDs:(id *)ids processedSegmentSetIDs:(id *)ids error:(id *)error;
- (BOOL)_areAllConfigurationResourcesAvailable:(id)available requestKeys:(id)keys;
- (BOOL)_areAllConfigurationResourcesInvalid:(id)invalid allowedToReachEndpoint:(BOOL)endpoint configurationSettings:(id)settings requestKeys:(id)keys;
- (BOOL)_isValidConfigurationResource:(id)resource allowedToReachEndpoint:(BOOL)endpoint useBackgroundRefreshRate:(BOOL)rate userID:(id)id;
- (BOOL)_isAllowedToReachEndpointWithSettings:(id)settings configurationResource:(id)resource endpointURL:(id)url;
- (void)_fetchMultiConfigurationFromEndpointURL:(id)url settings:(id)settings changeTagsByRequestKey:(id)key completion:(id /* block */)completion;
- (id)_endpointURLForEnvironment:(unsigned long long)environment requestKey:(id)key;
- (void)_fetchConfigurationFromFallbackURLWithSettings:(id)settings completion:(id /* block */)completion;
- (void)_loadConfigurationResourcesFromStore;
- (void)_saveConfigurationResource:(id)resource;
- (void)_removeConfigurationResourceForRequestKey:(id)key;
- (id)_encodeConfigurationResource:(id)resource;
- (id)_decodeConfigurationResource:(id)resource;
@end

#endif /* RCConfigurationManager_h */
