//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2622.0.0.0.0
//
#ifndef CPDistributedMessagingCenter_h
#define CPDistributedMessagingCenter_h
@import Foundation;

#include "CPDistributedMessagingCallout.h"

@class NSLock, NSMutableDictionary, NSOperationQueue, NSString;

@interface CPDistributedMessagingCenter : NSObject {
  /* instance variables */
  NSString *_centerName;
  NSLock *_lock;
  unsigned int _sendPort;
  NSOperationQueue *_asyncQueue;
  struct __CFRunLoopSource * _serverSource;
  NSString *_requiredEntitlement;
  NSMutableDictionary *_callouts;
  unsigned int _parkedServerPort;
  CPDistributedMessagingCallout *_currentCallout;
  unsigned int _replyPort;
  BOOL _portPassing;
  BOOL _delayedReply;
  BOOL _requireLookupByPID;
  int _targetPID;
}

/* class methods */
+ (id)centerNamed:(id)named;
+ (id)pidRestrictedCenterNamed:(id)named;
+ (id)_centerNamed:(id)named requireLookupByPID:(BOOL)pid;

/* instance methods */
- (id)_initWithServerName:(id)name requireLookupByPID:(BOOL)pid;
- (id)_initWithServerName:(id)name;
- (id)_initAnonymousServer;
- (id)_initClientWithPort:(unsigned int)port;
- (void)dealloc;
- (id)name;
- (void)setTargetPID:(int)pid;
- (void)_setupInvalidationSource;
- (unsigned int)_sendPort;
- (void)_setSendPort:(unsigned int)port;
- (BOOL)sendMessageName:(id)name userInfo:(id)info;
- (BOOL)sendNonBlockingMessageName:(id)name userInfo:(id)info;
- (id)sendMessageAndReceiveReplyName:(id)name userInfo:(id)info;
- (id)sendMessageAndReceiveReplyName:(id)name userInfo:(id)info error:(id *)error;
- (void)sendMessageAndReceiveReplyName:(id)name userInfo:(id)info toTarget:(id)target selector:(SEL)selector context:(void *)context;
- (BOOL)_sendMessage:(id)message userInfo:(id)info receiveReply:(id *)reply error:(id *)error toTarget:(id)target selector:(SEL)selector context:(void *)context;
- (BOOL)_sendMessage:(id)message userInfo:(id)info receiveReply:(id *)reply error:(id *)error toTarget:(id)target selector:(SEL)selector context:(void *)context nonBlocking:(BOOL)blocking;
- (BOOL)_sendMessage:(id)message userInfoData:(id)data oolKey:(id)key oolData:(id)data makeServer:(BOOL)server receiveReply:(id *)reply nonBlocking:(BOOL)blocking error:(id *)error;
- (unsigned int)_serverPort;
- (void)runServerOnCurrentThread;
- (void)runServerOnCurrentThreadProtectedByEntitlement:(id)entitlement;
- (void)stopServer;
- (void)registerForMessageName:(id)name target:(id)target selector:(SEL)selector;
- (id)delayReply;
- (void)sendDelayedReply:(id)reply dictionary:(id)dictionary;
- (void)unregisterForMessageName:(id)name;
- (BOOL)doesServerExist;
- (void)_dispatchMessageNamed:(id)named userInfo:(id)info reply:(id *)reply auditToken:(struct { unsigned int x0[8] } *)token;
- (void)_sendReplyMessage:(id)message portPassing:(BOOL)passing onMachPort:(unsigned int)port;
- (BOOL)_isTaskEntitled:(struct { unsigned int x0[8] } *)entitled;
- (id)_requiredEntitlement;
@end

#endif /* CPDistributedMessagingCenter_h */
