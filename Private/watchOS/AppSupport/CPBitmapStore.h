//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2622.0.0.0.0
//
#ifndef CPBitmapStore_h
#define CPBitmapStore_h
@import Foundation;

@class NSCache, NSString;
@protocol OS_dispatch_queue;

@interface CPBitmapStore : NSObject {
  /* instance variables */
  NSString *_path;
  NSString *_imagePath;
  NSCache *_cache;
  NSString *_versionPath;
  NSObject<OS_dispatch_queue> *_serialQueueRemoveImagesBackground;
  NSObject<OS_dispatch_queue> *_serialQueueRemoveImagesDefault;
}

@property (readonly, nonatomic) int version;
@property (nonatomic) BOOL lockOnRead;
@property (nonatomic) unsigned long long cacheItemLimit;

/* instance methods */
- (id)initWithPath:(id)path version:(int)version;
- (void)dealloc;
- (id)imageNameForKey:(id)key inGroup:(id)group;
- (id)cacheNumberForKey:(id)key;
- (BOOL)findImageWithKey:(id)key inGroup:(id)group andInfo:(struct _img { id x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned char x5; unsigned char x6[4] } *)info;
- (BOOL)saveImageWithKey:(id)key inGroup:(id)group andInfo:(struct _img { id x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned char x5; unsigned char x6[4] } *)info;
- (void *)openAndMmap:(id)mmap withInfo:(struct _img { id x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned char x5; unsigned char x6[4] } *)info;
- (unsigned int)memContentOffset;
- (struct CGImage *)copyImageForKey:(id)key;
- (id)allGroups;
- (void)commitTxn;
- (struct CGImage *)copyImageForKey:(id)key inGroup:(id)group;
- (struct CGImage *)_copyAndStoreImageForKey:(id)key inGroup:(id)group withSize:(struct CGSize { double x0; double x1; })size format:(unsigned char)format scale:(double)scale fillMem:(id /* block */)mem alternateCompletion:(id /* block */)completion;
- (struct CGImage *)copyAndStoreImageForKey:(id)key inGroup:(id)group withSize:(struct CGSize { double x0; double x1; })size opaque:(BOOL)opaque scale:(double)scale draw:(id /* block */)draw;
- (void)storeImageForKey:(id)key inGroup:(id)group opaque:(BOOL)opaque image:(struct CGImage *)image;
- (void)storeImageDataForKey:(id)key inGroup:(id)group withSize:(struct CGSize { double x0; double x1; })size opaque:(BOOL)opaque scale:(double)scale data:(id)data;
- (void)storeGrayscaleImageDataForKey:(id)key inGroup:(id)group withSize:(struct CGSize { double x0; double x1; })size opaque:(BOOL)opaque scale:(double)scale data:(id)data;
- (void)storeImageDataForKey:(id)key inGroup:(id)group withSize:(struct CGSize { double x0; double x1; })size format:(unsigned char)format scale:(double)scale data:(id)data;
- (void)storeImageDataForKey:(id)key inGroup:(id)group withSize:(struct CGSize { double x0; double x1; })size format:(unsigned char)format formatColor:(struct CGColor *)color scale:(double)scale data:(id)data;
- (void)commitTransaction;
- (void)removeImagesInGroups:(id)groups;
- (void)removeImagesInGroups:(id)groups completion:(id /* block */)completion;
- (id)imagePath;
- (unsigned long long)imageCount;
- (void)purge;
- (id)_versionPath;
@end

#endif /* CPBitmapStore_h */
