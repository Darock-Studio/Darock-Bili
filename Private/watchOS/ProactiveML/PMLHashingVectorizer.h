//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1226.2.2.1.0
//
#ifndef PMLHashingVectorizer_h
#define PMLHashingVectorizer_h
@import Foundation;

#include "PMLTransformerProtocol-Protocol.h"
#include "PMLWordPieceVocabProtocol-Protocol.h"

@class NSLocale, NSString;

@interface PMLHashingVectorizer : NSObject<PMLTransformerProtocol> {
  /* instance variables */
  int _buckets;
  struct _NSRange { unsigned long long location; unsigned long long length; } _characterNGramRange;
  struct _NSRange { unsigned long long location; unsigned long long length; } _tokenNGramRange;
  BOOL _shouldNormalizeTokens;
  BOOL _shouldNormalizeCharacters;
  NSLocale *_localeForNonwordTokens;
  BOOL _tokenizeNewlines;
  unsigned long long _idVectorLength;
  unsigned long long _extraIdOptions;
  unsigned long long _vectorizerStrategy;
  long long _vectorNormalization;
  long long _paddingId;
  long long _endId;
  long long _startId;
  NSObject<PMLWordPieceVocabProtocol> *_vocab;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)withBucketSize:(int)size andNgramOrder:(int)order;
+ (id)withBucketSize:(int)size andCharNgramOrder:(int)order;
+ (id)withBucketSize:(int)size andNgrams:(int)ngrams;
+ (id)withBucketSize:(int)size ngrams:(int)ngrams localeForNonwordTokens:(id)tokens tokenizeNewlines:(BOOL)newlines;
+ (id)withBucketSize:(int)size characterNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range tokenNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range shouldNormalizeTokens:(BOOL)tokens shouldNormalizeCharacters:(BOOL)characters localeForNonwordTokens:(id)tokens tokenizeNewlines:(BOOL)newlines idVectorLength:(unsigned long long)length extraIdOptions:(unsigned long long)options vectorizerStrategy:(unsigned long long)strategy vectorNormalization:(long long)normalization;
+ (id)withBucketSize:(int)size characterNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range tokenNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range shouldNormalizeTokens:(BOOL)tokens shouldNormalizeCharacters:(BOOL)characters localeForNonwordTokens:(id)tokens tokenizeNewlines:(BOOL)newlines idVectorLength:(unsigned long long)length extraIdOptions:(unsigned long long)options vectorizerStrategy:(unsigned long long)strategy vectorNormalization:(long long)normalization vocab:(id)vocab;
+ (id)withBucketSize:(int)size characterNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range tokenNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range shouldNormalizeTokens:(BOOL)tokens shouldNormalizeCharacters:(BOOL)characters localeForNonwordTokens:(id)tokens tokenizeNewlines:(BOOL)newlines;
+ (id)withBucketSize:(int)size characterNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range tokenNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range shouldNormalizeTokens:(BOOL)tokens shouldNormalizeCharacters:(BOOL)characters;

/* instance methods */
- (id)initWithBucketSize:(int)size ngrams:(int)ngrams localeForNonwordTokens:(id)tokens tokenizeNewlines:(BOOL)newlines;
- (id)initWithBucketSize:(int)size characterNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range tokenNGramRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range shouldNormalizeTokens:(BOOL)tokens shouldNormalizeCharacters:(BOOL)characters localeForNonwordTokens:(id)tokens tokenizeNewlines:(BOOL)newlines idVectorLength:(unsigned long long)length extraIdOptions:(unsigned long long)options vectorizerStrategy:(unsigned long long)strategy vectorNormalization:(long long)normalization vocab:(id)vocab;
- (id)init;
- (void)setVectorizerNormalization:(long long)normalization;
- (id)transform:(id)transform;
- (id)transformWithFrequency:(id)frequency shouldDecrement:(BOOL)decrement;
- (id)transformSequentialNGrams:(id)ngrams;
- (id)transformBagOfIds:(id)ids shouldDecrement:(BOOL)decrement;
- (id)transformBatch:(id)batch;
- (id)transformWithWordPiece:(id)piece;
- (id)toPlistWithChunks:(id)chunks;
- (id)initWithPlist:(id)plist chunks:(id)chunks context:(id)context;
- (BOOL)isEqualToHashingVectorizer:(id)vectorizer;
- (BOOL)isEqual:(id)equal;
@end

#endif /* PMLHashingVectorizer_h */
