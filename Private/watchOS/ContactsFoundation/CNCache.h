//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1235.0.0.0.0
//
#ifndef CNCache_h
#define CNCache_h
@import Foundation;

#include "CNScheduler-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary;

@interface CNCache : NSObject

@property (readonly, copy, nonatomic) NSArray *boundingStrategies;
@property (readonly, nonatomic) NSObject<CNScheduler> *resourceScheduler;
@property (readonly, nonatomic) NSMutableDictionary *storage;
@property (readonly, nonatomic) NSMutableArray *didEvictHandlers;
@property (copy, nonatomic) NSArray *evictedKeysAndValues;
@property (readonly) unsigned long long overestimatedCount;
@property (readonly, copy) NSArray *allKeys;
@property (readonly, copy) NSArray *allObjects;

/* class methods */
+ (id)cache;
+ (id)atomicCache;
+ (id)atomicCacheScheduler;
+ (id)nonatomicCacheScheduler;
+ (id)boundingStrategyWithCapacity:(unsigned long long)capacity;
+ (id)boundingStrategyWithTTL:(double)ttl;
+ (id)boundingStrategyWithTTL:(double)ttl renewalOptions:(unsigned long long)options timeProvider:(id)provider;

/* instance methods */
- (id)init;
- (id)initWithResourceScheduler:(id)scheduler;
- (id)initWithBoundingStrategies:(id)strategies resourceScheduler:(id)scheduler;
- (id)description;
- (void)performWithResourceLock:(id /* block */)lock;
- (id)resultWithResourceLock:(id /* block */)lock;
- (id)objectForKey:(id)key;
- (id)objectForKey:(id)key onCacheMiss:(id /* block */)miss;
- (id)objectForKeyedSubscript:(id)subscript;
- (void)setObject:(id)object forKey:(id)key;
- (void)resourceLock_setObject:(id)object forKey:(id)key;
- (void)setObject:(id)object forKeyedSubscript:(id)subscript;
- (void)removeAllObjects;
- (void)addDidEvictHandler:(id /* block */)handler;
- (void)resourceLock_willSetObject:(id)object forKey:(id)key;
- (void)resourceLock_willAccessKey:(id)key;
- (void)resourceLock_validateKey:(id)key;
- (void)resourceLock_validateAllKeys;
- (void)resourceLock_validateKeys:(id)keys;
- (void)resourceLock_evictObjectsForKeys:(id)keys;
- (void)callDidEvictHandlersIfNecessary;
@end

#endif /* CNCache_h */
