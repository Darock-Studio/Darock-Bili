//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.4.1.0.0
//
#ifndef UAFSubscriptionStoreManager_h
#define UAFSubscriptionStoreManager_h
@import Foundation;

@class NSString;

@interface UAFSubscriptionStoreManager : NSObject {
  /* instance variables */
  struct sqlite3 * _store;
  struct sqlite3_stmt * _writeSubscription;
  struct sqlite3_stmt * _readSubscriptionsForSubscriber;
  struct sqlite3_stmt * _readSubscription;
  struct sqlite3_stmt * _readAllSubscriptions;
  struct sqlite3_stmt * _readAllSubscribers;
  struct sqlite3_stmt * _removeSubscription;
  struct sqlite3_stmt * _removeAllSubscriptions;
  struct sqlite3_stmt * _fetchExpiredSubscriptions;
  struct sqlite3_stmt * _setSystemAssetSetUsages;
  struct sqlite3_stmt * _fetchSystemAssetSetUsages;
  struct sqlite3_stmt * _fetchAllSystemAssetSetUsages;
  struct sqlite3_stmt * _clearSystemAssetSetUsages;
  struct sqlite3_stmt * _removeAllSystemAssetSetUsages;
  struct sqlite3_stmt * _setDbVersion;
  struct sqlite3_stmt * _readDbVersion;
  struct sqlite3_stmt * _readConfigurationKey;
  struct sqlite3_stmt * _writeConfigurationKey;
  struct sqlite3_stmt * _fetchAllConfiguration;
  NSString *_databaseName;
  NSString *_oldDatabaseName;
  BOOL _dbUpToDate;
  BOOL _readOnly;
  BOOL _allowCreate;
}

@property (readonly) unsigned long long updateCount;

/* class methods */
+ (id)getSerialQueue;
+ (id)getDefaultDBPath;
+ (id)_getManagerReadOnly:(BOOL)only;
+ (id)defaultManager;
+ (id)writeManager;

/* instance methods */
- (id)initWithDbDirPath:(id)path dbName:(id)name;
- (id)initWithDbDirPath:(id)path dbName:(id)name readOnly:(BOOL)only allowCreate:(BOOL)create;
- (void)dealloc;
- (void)_closeDatabase;
- (BOOL)_openDatabase:(id)database;
- (int)_beginDatabaseTransaction;
- (int)_endDatabaseTransaction;
- (int)_rollbackDatabaseTransaction;
- (BOOL)_isUsageLimitExceeded:(id)exceeded;
- (BOOL)_createDbVersionTable;
- (BOOL)_checkDbVersion;
- (BOOL)subscribe:(id)subscribe subscriptions:(id)subscriptions expires:(id)expires;
- (BOOL)_subscribeSubscription:(id)subscription subscriptionName:(id)name assetSetSubscription:(id)subscription expires:(id)expires;
- (id)_getSubscription:(struct sqlite3_stmt *)subscription;
- (id)_getSubscriptions:(struct sqlite3_stmt *)subscriptions subscriptionsFor:(id)for;
- (id)getSubscriptions:(id)subscriptions;
- (id)_getSubscriptions:(id)subscriptions;
- (id)getSubscription:(id)subscription subscriber:(id)subscriber;
- (id)_getSubscription:(id)subscription subscription:(id)subscription;
- (id)getSubscribers;
- (BOOL)unsubscribe:(id)unsubscribe subscriptions:(id)subscriptions;
- (BOOL)_unsubscribeSubscription:(id)subscription subscription:(id)subscription;
- (BOOL)_removeAllSubscriptions;
- (BOOL)removeAllSubscriptions;
- (BOOL)_setSystemAssetSetUsages:(id)usages;
- (int)doDatabaseOperation:(id /* block */)operation useTransaction:(BOOL)transaction logDescription:(id)description;
- (id)_subscriptionTime:(id)time;
- (void)expireSubscriptions;
- (id)updateSystemAssetSetUsages:(id *)usages configurationManager:(id)manager;
- (id)updateSystemAssetSetUsages:(id *)usages;
- (BOOL)_setSystemAssetSetUsages:(id)usages usages:(id)usages;
- (id)getSystemAssetSetUsages:(id)usages;
- (id)getAllSystemAssetSetUsages;
- (BOOL)clearSystemAssetSetUsages:(id)usages;
- (BOOL)_removeAllSystemAssetSetUsages;
- (BOOL)removeAllSystemAssetSetUsages;
- (int)_setDbVersion:(int)version;
- (BOOL)_moveDatabase;
- (int)_performDbUpgrade:(int)upgrade;
- (BOOL)performDbUpgradeToVersion:(int)version;
- (id)_dataFromUAFAssetSubscription:(id)subscription;
- (id)_uafAssetSetSubscriptionFromData:(id)data;
- (id)_dataFromSystemAssetSetUsages:(id)usages;
- (id)_systemAssetSetUsagesFromData:(id)data;
- (id)getSystemConfigurationForKey:(id)key;
- (void)setSystemConfigurationForKey:(id)key withValue:(id)value;
- (id)getAllSystemConfiguration;
- (int)executeSQL:(const char *)sql;
- (int)bindString:(struct sqlite3_stmt *)string col:(int)col string:(id)string;
- (int)bindData:(struct sqlite3_stmt *)data col:(int)col data:(id)data;
- (int)bindDate:(struct sqlite3_stmt *)date col:(int)col date:(id)date;
- (id)readData:(struct sqlite3_stmt *)data col:(int)col;
- (id)readString:(struct sqlite3_stmt *)string col:(int)col;
@end

#endif /* UAFSubscriptionStoreManager_h */
