//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef NMSSHSession_h
#define NMSSHSession_h
@import Foundation;

#include "NMSFTP.h"
#include "NMSSHChannel.h"
#include "NMSSHHostConfig.h"
#include "NMSSHSessionDelegate-Protocol.h"

@class NSError, NSNumber, NSString;

@interface NMSSHSession : NSObject

@property (nonatomic) struct _LIBSSH2_AGENT * agent;
@property (nonatomic) struct _LIBSSH2_SESSION * session;
@property (nonatomic) BOOL connected;
@property (retain, nonatomic) NSString *host;
@property (retain, nonatomic) NSString *username;
@property (copy, nonatomic) id /* block */ kbAuthenticationBlock;
@property (retain, nonatomic) NMSSHChannel *channel;
@property (retain, nonatomic) NMSFTP *sftp;
@property (retain, nonatomic) NSNumber *port;
@property (retain, nonatomic) NMSSHHostConfig *hostConfig;
@property (weak, nonatomic) NSObject<NMSSHSessionDelegate> *delegate;
@property (retain, nonatomic) NSNumber *timeout;
@property (readonly, nonatomic) NSError *lastError;
@property (nonatomic) long long fingerprintHash;
@property (retain, nonatomic) NSString *banner;
@property (readonly, nonatomic) NSString *remoteBanner;
@property (readonly, nonatomic) struct __CFSocket * socket;
@property (readonly, nonatomic) BOOL authorized;

/* class methods */
+ (id)connectToHost:(id)host port:(long long)port withUsername:(id)username;
+ (id)connectToHost:(id)host withUsername:(id)username;
+ (id)URLForHost:(id)host;

/* instance methods */
- (id)initWithHost:(id)host port:(long long)port andUsername:(id)username;
- (id)initWithHost:(id)host configs:(id)configs withDefaultPort:(long long)port defaultUsername:(id)username;
- (id)initWithHost:(id)host andUsername:(id)username;
- (id)hostIPAddresses;
- (BOOL)connect;
- (BOOL)connectWithTimeout:(id)timeout;
- (void)disconnect;
- (BOOL)isAuthorized;
- (BOOL)authenticateByPassword:(id)password;
- (BOOL)authenticateByPublicKey:(id)key privateKey:(id)key andPassword:(id)password;
- (BOOL)authenticateByInMemoryPublicKey:(id)key privateKey:(id)key andPassword:(id)password;
- (BOOL)authenticateByKeyboardInteractive;
- (BOOL)authenticateByKeyboardInteractiveUsingBlock:(id /* block */)block;
- (BOOL)connectToAgent;
- (id)supportedAuthenticationMethods;
- (BOOL)supportsAuthenticationMethod:(id)method;
- (id)fingerprint:(long long)fingerprint;
- (id)applicationSupportDirectory;
- (id)userKnownHostsFileName;
- (long long)knownHostStatusInFiles:(id)files;
- (long long)knownHostStatusWithFile:(id)file;
- (BOOL)addKnownHostName:(id)name port:(long long)port toFile:(id)file withSalt:(id)salt;
- (id)keyboardInteractiveRequest:(id)request;
- (struct _LIBSSH2_SESSION *)rawSession;
- (BOOL)isConnected;
@end

#endif /* NMSSHSession_h */
