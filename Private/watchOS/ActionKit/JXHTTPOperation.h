//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef JXHTTPOperation_h
#define JXHTTPOperation_h
@import Foundation;

#include "JXURLConnectionOperation.h"
#include "JXHTTPOperationDelegate-Protocol.h"
#include "JXHTTPRequestBody-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSNumber, NSString, NSURL, NSURLAuthenticationChallenge, NSURLCredential;
@protocol OS_dispatch_queue;

@interface JXHTTPOperation : JXURLConnectionOperation

@property (nonatomic) unsigned long long requestCachePolicy;
@property (nonatomic) BOOL requestShouldUsePipelining;
@property (retain, nonatomic) NSURL *requestMainDocumentURL;
@property (nonatomic) double requestTimeoutInterval;
@property (nonatomic) unsigned long long requestNetworkServiceType;
@property (retain, nonatomic) NSURL *requestURL;
@property (retain, nonatomic) NSDictionary *requestHeaders;
@property (retain, nonatomic) NSString *requestMethod;
@property (nonatomic) BOOL requestShouldHandleCookies;
@property (retain) NSURLAuthenticationChallenge *authenticationChallenge;
@property (retain) NSNumber *downloadProgress;
@property (retain) NSNumber *uploadProgress;
@property (retain) NSString *uniqueString;
@property (retain) NSDate *startDate;
@property (retain) NSDate *finishDate;
@property (retain) NSObject<OS_dispatch_queue> *blockQueue;
@property (weak) NSObject<JXHTTPOperationDelegate> *delegate;
@property (retain) NSObject<JXHTTPRequestBody> *requestBody;
@property (copy, nonatomic) NSString *responseDataFilePath;
@property (retain) id userObject;
@property (retain) NSURLCredential *credential;
@property BOOL useCredentialStorage;
@property BOOL trustAllHosts;
@property (copy) NSArray *trustedHosts;
@property (copy) NSString *username;
@property (copy) NSString *password;
@property BOOL updatesNetworkActivityIndicator;
@property (readonly) double elapsedSeconds;
@property BOOL performsBlocksOnMainQueue;
@property (copy) id /* block */ willStartBlock;
@property (copy) id /* block */ willNeedNewBodyStreamBlock;
@property (copy) id /* block */ willSendRequestForAuthenticationChallengeBlock;
@property (copy) id /* block */ didStartBlock;
@property (copy) id /* block */ didReceiveResponseBlock;
@property (copy) id /* block */ didReceiveDataBlock;
@property (copy) id /* block */ didSendDataBlock;
@property (copy) id /* block */ didFinishLoadingBlock;
@property (copy) id /* block */ didFailBlock;
@property (copy) id /* block */ willCacheResponseBlock;
@property (copy) id /* block */ willSendRequestRedirectBlock;

/* class methods */
+ (id)withURLString:(id)urlstring;
+ (id)withURLString:(id)urlstring queryParameters:(id)parameters;

/* instance methods */
- (void)addValue:(id)value forRequestHeader:(id)header;
- (void)setValue:(id)value forRequestHeader:(id)header;
- (id)responseData;
- (id)responseString;
- (id)responseJSON;
- (id)responseHeaders;
- (long long)responseStatusCode;
- (id)responseStatusString;
- (long long)responseExpectedContentLength;
- (id)responseExpectedFileName;
- (id)responseMIMEType;
- (id)responseTextEncodingName;
- (id)responseURL;
- (void)dealloc;
- (id)init;
- (void)performDelegateMethod:(SEL)method;
- (void)finalizeRequestBody;
- (id /* block */)blockForSelector:(SEL)selector;
- (void)main;
- (void)willFinish;
- (void)connection:(id)connection didFailWithError:(id)error;
- (BOOL)connectionShouldUseCredentialStorage:(id)storage;
- (void)connection:(id)connection willSendRequestForAuthenticationChallenge:(id)challenge;
- (void)connection:(id)connection didReceiveResponse:(id)response;
- (void)connection:(id)connection didReceiveData:(id)data;
- (void)connectionDidFinishLoading:(id)loading;
- (void)connection:(id)connection didSendBodyData:(long long)data totalBytesWritten:(long long)written totalBytesExpectedToWrite:(long long)write;
- (id)connection:(id)connection needNewBodyStream:(id)stream;
- (id)connection:(id)connection willCacheResponse:(id)response;
- (id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;
@end

#endif /* JXHTTPOperation_h */
