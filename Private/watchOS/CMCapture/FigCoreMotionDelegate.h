//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 470.14.3.0.0
//
#ifndef FigCoreMotionDelegate_h
#define FigCoreMotionDelegate_h
@import Foundation;

@interface FigCoreMotionDelegate : NSObject {
  /* instance variables */
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } ringMutex;
  BOOL manageFusedMotion;
  BOOL manageAccel;
  BOOL manageGravity;
  int accelRingIndex;
  float accelRingX[256];
  float accelRingY[256];
  float accelRingZ[256];
  double accelRingTime[256];
  int fusedRingIndex;
  double fusedRingTime[256];
  BOOL fusedRingDoingBiasEstimation[256];
  struct { float x; float y; float z; } fusedRingAccel[256];
  struct { double w; double x; double y; double z; } fusedRingQuaternion[256];
  struct { float x; float y; float z; } fusedRingPosition[256];
  struct OpaqueFigSemaphore * dataSemaphore;
  double latestMotionDataTime;
  double latestGravityDataTime;
  BOOL copyingAllData;
  double dLatestFusedMotionCopied;
  double dLatestTimestamp;
  double dGyroUpdateInterval;
  double dStartOfLogging;
  struct { double w; double x; double y; double z; } previousQuaternion;
  struct { double w; double x; double y; double z; } currentQuaternion;
  BOOL computingPosition;
  struct { double timestamp; float x; float y; float z; } position;
  struct { double timestamp; float x; float y; float z; } velocity;
}

/* instance methods */
- (id)initWithAccelerometer:(BOOL)accelerometer gravityZ:(BOOL)z fusedMotion:(BOOL)motion accelUpdateInterval:(float)interval fusedMotionUpdateInterval:(float)interval motionCallbackThreadPriority:(id)priority;
- (void)updateDeviceCallback:(BOOL)callback fusedMotionUpdateInterval:(float)interval;
- (void)updateGyroInterval:(float)interval;
- (id)init;
- (void)dealloc;
- (void)didUpdateAcceleration:(struct { float x0; float x1; float x2; })acceleration time:(double)time;
- (void)didUpdateGravity:(struct { float x0; float x1; float x2; })gravity time:(double)time;
- (int)getVectorX:(float *)x y:(float *)y z:(float *)z forTimeStamp:(double)stamp;
- (int)getGravityX:(float *)x y:(float *)y z:(float *)z forTimeStamp:(double)stamp;
- (int)getFusedVectorX:(float *)x y:(float *)y z:(float *)z forTimeStamp:(double)stamp;
- (void)didUpdateFusedMotionWithDeviceMotion:(struct { struct { double x0; double x1; double x2; double x3; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; struct { float x0; float x1; float x2; } x3; int x4; BOOL x5; BOOL x6; BOOL x7; float x8; BOOL x9; BOOL x10; int x11; })motion time:(double)time ifsync:(BOOL)ifsync;
- (void)didUpdatePositionWithAcceleration:(struct { float x0; float x1; float x2; } *)acceleration forTimeStamp:(double)stamp;
- (void)didUpdateVelocityWithAcceleration:(struct { float x0; float x1; float x2; } *)acceleration forTimeStamp:(double)stamp;
- (void)didUpdatePositionWithTimeStamp:(double)stamp;
- (id)copyAllFusedMotionData;
- (id)copyNewFusedMotionData;
- (id)copyFusedMotionData:(double)data endTime:(double)time timeoutValue:(double)value errOut:(int *)out;
- (int)updateCurrentQuaternionForTimeStamp:(double)stamp;
- (int)updateCurrentQuaternionForTimeStamps:(double)stamps withEnd:(double)end;
- (void)getCurrentQuaternion:(struct { double x0; double x1; double x2; double x3; } *)quaternion;
- (void)getCurrentDeltaQuaternion:(struct { double x0; double x1; double x2; double x3; } *)quaternion;
- (void)getCurrentAttitudeRoll:(double *)roll pitch:(double *)pitch yaw:(double *)yaw;
- (void)getCurrentDeltaAttitudeRoll:(double *)roll pitch:(double *)pitch yaw:(double *)yaw;
- (void)getPositionX:(float *)x y:(float *)y z:(float *)z forTimeStamp:(double)stamp;
- (int)getLatestMotionDataTime:(double *)time;
- (BOOL)managingFusedMotion;
- (BOOL)managingAccel;
- (BOOL)managingGravity;
- (BOOL)isCopyingAllData;
@end

#endif /* FigCoreMotionDelegate_h */
