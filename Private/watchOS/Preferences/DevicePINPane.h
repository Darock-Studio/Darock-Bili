//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 5215.3.9.0.0
//
#ifndef DevicePINPane_h
#define DevicePINPane_h
@import Foundation;

#include "PSEditingPane.h"
#include "DevicePINKeypadContainerView.h"
#include "PSPINEntryViewDelegate-Protocol.h"
#include "UIKeyInput-Protocol.h"
#include "UITextInputTraits-Protocol.h"

@class NSString, UIKeyboard, UITextInputPasswordRules, UITransitionView;
@protocol UIView<PINEntryView;

@interface DevicePINPane : PSEditingPane<UIKeyInput, UITextInputTraits, PSPINEntryViewDelegate> {
  /* instance variables */
  BOOL _transitioning;
  BOOL _keypadActive;
  BOOL _playSound;
  BOOL _isBlocked;
  BOOL _simplePIN;
  UITransitionView *_transitionView;
  UIKeyboard *_keypad;
}

@property BOOL numericKeyboard;
@property (retain) DevicePINKeypadContainerView *keypadContainerView;
@property (copy, nonatomic) NSString *passcodeOptionsTitle;
@property (nonatomic) unsigned int PINLength;
@property (retain, nonatomic) UIView<PINEntryView> *pinView;
@property (copy, nonatomic) id /* block */ passcodeOptionsHandler;
@property (readonly, nonatomic) BOOL hasText;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (nonatomic) long long spellCheckingType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long inlinePredictionType;
@property (nonatomic) long long keyboardType;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long returnKeyType;
@property (nonatomic) BOOL enablesReturnKeyAutomatically;
@property (nonatomic) BOOL secureTextEntry;
@property (copy, nonatomic) NSString *textContentType;
@property (copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)specifierLabel;
- (void)_setPlaysKeyboardClicks:(BOOL)clicks;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)dealloc;
- (void)setKeyboardIsNumeric:(BOOL)numeric;
- (void)activateKeypadView;
- (void)deactivateKeypadView;
- (void)showFailedAttempts:(long long)attempts;
- (void)hideFailedAttempts;
- (void)transitionToSimplePIN:(BOOL)pin requiresKeyboard:(BOOL)keyboard numericOnly:(BOOL)only showsOptions:(BOOL)options;
- (void)setSimplePIN:(BOOL)pin requiresKeyboard:(BOOL)keyboard;
- (void)setSimplePIN:(BOOL)pin requiresKeyboard:(BOOL)keyboard numericOnly:(BOOL)only;
- (void)setSimplePIN:(BOOL)pin requiresKeyboard:(BOOL)keyboard numericOnly:(BOOL)only showsOptions:(BOOL)options;
- (BOOL)simplePIN;
- (BOOL)requiresKeyboard;
- (void)_setKeypadState:(BOOL)state animated:(BOOL)animated;
- (void)dismissKeypad;
- (BOOL)canBecomeFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)setKeyboardUserInteractionEnabled:(BOOL)enabled;
- (void)showError:(id)error error:(id)error isBlocked:(BOOL)blocked animate:(BOOL)animate;
- (void)setPINPolicyString:(id)string visible:(BOOL)visible;
- (void)okButtonPressed;
- (void)hideError;
- (void)setTitle:(id)title;
- (void)slideToNewPasscodeField:(BOOL)field withKeyboard:(BOOL)keyboard;
- (void)slideToNewPasscodeField:(BOOL)field requiresKeyboard:(BOOL)keyboard numericOnly:(BOOL)only;
- (void)slideToNewPasscodeField:(BOOL)field requiresKeyboard:(BOOL)keyboard numericOnly:(BOOL)only transition:(int)transition showsOptionsButton:(BOOL)button;
- (void)transitionViewDidComplete:(id)complete;
- (id)password;
- (void)clearPassword;
- (id)text;
- (void)setText:(id)text;
- (void)insertText:(id)text;
- (void)deleteBackward;
- (void)delayForTextEntryAnimationsWithCompletion:(id /* block */)completion;
- (void)pinView:(id)view pinValueChanged:(id)changed;
- (void)pinView:(id)view pinEntered:(id)entered;
- (BOOL)isSecureTextEntry;
- (void)layoutSubviews;
- (void)keyboardWillChangeFrame:(id)frame;
@end

#endif /* DevicePINPane_h */
