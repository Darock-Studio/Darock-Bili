//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 127.1.3.0.0
//
#ifndef AXMVisionFeature_h
#define AXMVisionFeature_h
@import Foundation;

#include "AXMJSONSerializable-Protocol.h"
#include "AXMTranslatedText.h"
#include "AXMVisionFeatureAestheticsResult.h"
#include "AXMVisionFeatureAssetMetadata.h"
#include "AXMVisionFeatureColorInfo.h"
#include "AXMVisionFeatureFaceDetectionResult.h"
#include "NSSecureCoding-Protocol.h"

@class CMDeviceMotion, NSArray, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface AXMVisionFeature : NSObject<AXMJSONSerializable, NSSecureCoding> {
  /* instance variables */
  NSArray *_effectiveTextDetectionLocales;
  NSString *_modelID;
}

@property (retain, nonatomic) NSObject<NSSecureCoding> *userContext;
@property (retain, nonatomic) NSDictionary *debugRectangles;
@property (readonly, nonatomic) unsigned long long featureType;
@property (readonly, nonatomic) BOOL isBarcode;
@property (readonly, nonatomic) BOOL isFace;
@property (readonly, nonatomic) BOOL isRealtimeFace;
@property (readonly, nonatomic) BOOL isPerson;
@property (readonly, nonatomic) BOOL isSceneClassification;
@property (readonly, nonatomic) BOOL isObjectClassification;
@property (readonly, nonatomic) BOOL isNSFWClassification;
@property (readonly, nonatomic) BOOL isSignificantEventClassification;
@property (readonly, nonatomic) BOOL isBrightness;
@property (readonly, nonatomic) BOOL isBlur;
@property (readonly, nonatomic) BOOL isHorizon;
@property (readonly, nonatomic) BOOL isColor;
@property (readonly, nonatomic) BOOL isMediaLegibility;
@property (readonly, nonatomic) BOOL isAssetMetadata;
@property (readonly, nonatomic) BOOL isRectangle;
@property (readonly, nonatomic) BOOL isModelClassification;
@property (readonly, nonatomic) BOOL isCaption;
@property (readonly, nonatomic) BOOL isMotion;
@property (readonly, nonatomic) BOOL isCameraMetadata;
@property (readonly, nonatomic) BOOL isProminentObject;
@property (readonly, nonatomic) BOOL isIconClass;
@property (readonly, nonatomic) BOOL isImageAesthetics;
@property (readonly, nonatomic) BOOL isOCR;
@property (readonly, nonatomic) BOOL isTextDocument;
@property (readonly, nonatomic) BOOL isTextRegion;
@property (readonly, nonatomic) BOOL isTextLine;
@property (readonly, nonatomic) BOOL isTextSequence;
@property (readonly, nonatomic) BOOL isTable;
@property (readonly, nonatomic) BOOL isTableRow;
@property (readonly, nonatomic) BOOL isTableColumn;
@property (readonly, nonatomic) BOOL isTableCell;
@property (readonly, nonatomic) BOOL isNutritionLabel;
@property (readonly, nonatomic) BOOL isTextCharacter;
@property (readonly, nonatomic) BOOL isTextDiacritic;
@property (readonly, nonatomic) BOOL isEnvelope;
@property (readonly, nonatomic) BOOL isReceipt;
@property (readonly, nonatomic) NSArray *recognizedTextFeatures;
@property (readonly, nonatomic) NSArray *subfeatures;
@property (readonly, nonatomic) double creationDate;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } canvasSize;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } frame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } normalizedFrame;
@property (readonly, nonatomic) double confidence;
@property (readonly, nonatomic) BOOL isLowConfidence;
@property (readonly, nonatomic) NSString *value;
@property (readonly, nonatomic) NSArray *values;
@property (readonly, nonatomic) BOOL isValueSpeakable;
@property (readonly, nonatomic) NSString *classificationLabel;
@property (readonly, nonatomic) NSString *classificationLocalizedValue;
@property (nonatomic) long long uiClass;
@property (readonly, nonatomic) NSString *caption;
@property (readonly, nonatomic) AXMTranslatedText *translatedCaption;
@property (readonly, nonatomic) NSString *barcodeType;
@property (readonly, nonatomic) long long ocrFeatureType;
@property (readonly, nonatomic) AXMVisionFeatureColorInfo *colorInfo;
@property (readonly, nonatomic) AXMVisionFeatureAssetMetadata *assetMetadata;
@property (readonly, nonatomic) double blur;
@property (readonly, nonatomic) double brightness;
@property (readonly, nonatomic) AXMVisionFeatureFaceDetectionResult *faceDetectionResult;
@property (readonly, nonatomic) unsigned long long faceId;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } unpaddedDetectedFaceRect;
@property (readonly, nonatomic) struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } horizonTransform;
@property (readonly, nonatomic) float horizonAngle;
@property (readonly, nonatomic) AXMVisionFeatureAestheticsResult *aestheticsResult;
@property (readonly, nonatomic) CMDeviceMotion *deviceMotion;
@property (readonly, nonatomic) long long deviceOrientation;
@property (readonly, nonatomic) NSDictionary *featureGates;
@property (readonly, nonatomic) NSSet *detectorSceneClassIds;
@property (readonly, nonatomic) NSString *sceneClassId;
@property (nonatomic) BOOL captionMayContainSensitiveContent;
@property (nonatomic) struct CGPoint { double x0; double x1; } activationPoint;
@property (readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)unitTestingFeatureWithType:(unsigned long long)type canvasSize:(struct CGSize { double x0; double x1; })size frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame value:(id)value barcodeType:(id)type ocrFeatureType:(long long)type subFeatures:(id)features;
+ (id)unitTestingTeatureWithType:(unsigned long long)type axElementRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect confidence:(double)confidence uiClass:(long long)class label:(id)label canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)unitTestingFeatureWithType:(unsigned long long)type canvasSize:(struct CGSize { double x0; double x1; })size frame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame value:(id)value valueIsSpeakable:(BOOL)speakable barcodeType:(id)type ocrFeatureType:(long long)type subFeatures:(id)features;
+ (id)unitTestingFeature;
+ (id)unitTestingFaceFeature;
+ (id)unitTestingProminentObjectFeature;
+ (id)unitTestingFaceFeatureWithSize:(struct CGSize { double x0; double x1; })size faceFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
+ (id)unitTestingHorizonFeature;
+ (id)groupedFeatureWithElementRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect uiClass:(long long)class confidence:(double)confidence label:(id)label canvasSize:(struct CGSize { double x0; double x1; })size subElements:(id)elements;
+ (id)textDocumentWithText:(id)text isSpeakable:(BOOL)speakable boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box regions:(id)regions canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)textRegionWithText:(id)text isSpeakable:(BOOL)speakable boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box lines:(id)lines canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)textLineWithText:(id)text boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box recognizedTextFeatures:(id)features canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)textSequence:(id)sequence boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box recognizedTextFeatures:(id)features confidence:(double)confidence canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)nutritionLabelWithText:(id)text isSpeakable:(BOOL)speakable boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box rows:(id)rows canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)envelopeWithText:(id)text isSpeakable:(BOOL)speakable boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box regions:(id)regions canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)envelopeRegion:(id)region boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box confidence:(double)confidence canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)receiptWithText:(id)text isSpeakable:(BOOL)speakable boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box regions:(id)regions canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)tableWithText:(id)text isSpeakable:(BOOL)speakable boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box rows:(id)rows columns:(id)columns canvasSize:(struct CGSize { double x0; double x1; })size isIncomplete:(BOOL)incomplete;
+ (id)tableRowWithText:(id)text boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box cells:(id)cells canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)tableColumnWithText:(id)text boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box cells:(id)cells canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)tableCellWithText:(id)text boundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })box confidence:(double)confidence recognizedTextFeatures:(id)features canvasSize:(struct CGSize { double x0; double x1; })size isHeader:(BOOL)header;
+ (id)featureWithIconClass:(id)class confidence:(double)confidence;
+ (id)featureWithMediaLegibility:(id)legibility;
+ (id)featureWithColorInfo:(id)info canvasSize:(struct CGSize { double x0; double x1; })size;
+ (id)featureWithAssetMetadata:(id)metadata;
+ (id)featureWithDeviceMotion:(id)motion orientation:(long long)orientation;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_aspectFaceRectFromSquareFaceRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect sizeInPixels:(struct CGSize { double x0; double x1; })pixels;
+ (BOOL)supportsSecureCoding;
+ (id)nameForLocation:(long long)location;
+ (id)localizedStringForLocation:(long long)location isSubjectImplicit:(BOOL)implicit;
+ (long long)locationForNormalizedFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame previousLocation:(long long)location usingThirds:(BOOL)thirds;
+ (id)nameForFeatureType:(unsigned long long)type;
+ (id)nameForOCRType:(long long)ocrtype;
+ (void)_append:(id)_append toList:(id)list;
+ (id)flattenedFeatureList:(id)list;
+ (id)filterFeatureList:(id)list basedOnSceneClassIdsForFeature:(id)feature;

/* instance methods */
- (id)_init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)_serializeWithCoder:(id)coder orDictionary:(id)dictionary;
- (id)effectiveTextDetectionLocales;
- (long long)locationUsingThirds:(BOOL)thirds withFlippedYAxis:(BOOL)yaxis;
- (BOOL)isEnvelopeRegion;
- (id)_nameForOCRFeatureType:(long long)type;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundingBoxForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)addFeatureGate:(id)gate userInfo:(id)info;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEqualToAXMVisionFeature:(id)feature;
@end

#endif /* AXMVisionFeature_h */
