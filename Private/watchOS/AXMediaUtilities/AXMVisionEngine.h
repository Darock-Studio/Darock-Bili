//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 127.1.3.0.0
//
#ifndef AXMVisionEngine_h
#define AXMVisionEngine_h
@import Foundation;

#include "AXMDescribing-Protocol.h"
#include "AXMImageRegistrationNode.h"
#include "AXMSequenceRequestManager.h"
#include "AXMService.h"
#include "AXMServiceDelegate-Protocol.h"
#include "AXMTaskDispatcher.h"
#include "AXMTaskDispatcherDelegate-Protocol.h"
#include "AXMVisionEngineCache.h"
#include "AXMVisionEngineNodeConnectionDelegate-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "_AXMVisionEngineAnalysisTask.h"

@class NSArray, NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface AXMVisionEngine : NSObject<AXMVisionEngineNodeConnectionDelegate, AXMTaskDispatcherDelegate, AXMServiceDelegate, NSCopying, NSSecureCoding, AXMDescribing> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSMutableArray *_queue_sourceNodes;
  NSMutableArray *_queue_evaluationNodes;
  AXMImageRegistrationNode *_queue_imageRegistrationNode;
  NSMutableArray *_queue_resultHandlers;
  BOOL _queue_shouldNotifyServiceOfEngineConfigChange;
  _AXMVisionEngineAnalysisTask *_queue_currentTask;
}

@property (copy) NSString *identifier;
@property (retain, nonatomic) AXMService *axMediaUtilsService;
@property (retain, nonatomic) AXMVisionEngineCache *cache;
@property (retain, nonatomic) AXMTaskDispatcher *taskDispatcher;
@property (retain, nonatomic) AXMSequenceRequestManager *sequenceRequestManager;
@property (readonly, nonatomic) NSArray *sourceNodes;
@property (readonly, nonatomic) NSArray *evaluationNodes;
@property long long maximumQueueSize;
@property BOOL prioritySchedulingEnabled;
@property BOOL prioritySchedulingAllowMultipleNodeExecution;
@property unsigned long long thresholdPriority;
@property (nonatomic) BOOL imageRegistrationFilteringEnabled;
@property (nonatomic) long long minimumImageRegistrationSignalLevel;
@property (readonly, nonatomic) BOOL isCachingEnabled;
@property (readonly, nonatomic) long long cacheSize;
@property (nonatomic) BOOL diagnosticsEnabled;
@property (nonatomic) BOOL disableResultLogging;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithIdentifier:(id)identifier;
- (void)_commonInit;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEqualToEngine:(id)engine;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)_queue_shouldContinueWithoutResultHandlers:(id)handlers;
- (void)_queue_remotelyEvaluateWithSource:(id)source context:(id)context;
- (BOOL)_queue_shouldEvaluateNode:(id)node withOptions:(id)options;
- (id)_queue_activeEvaluationNodesForOptions:(id)options applyPriorityScheduling:(BOOL)scheduling prioritySchedulingAllowMultipleNodeExecution:(BOOL)execution;
- (void)_queue_logEvaluatedResult:(id)result;
- (BOOL)_queue_activeEvaluationNodesExclusivelyUseVisionFramework:(id)framework;
- (void)_queue_evaluateWithSource:(id)source context:(id)context;
- (void)_queue_handleEvaluatedContext:(id)context result:(id)result error:(id)error;
- (BOOL)canAddSourceNode:(id)node;
- (BOOL)canAddSourceNodeClass:(Class)class;
- (void)addSourceNode:(id)node;
- (void)insertSourceNode:(id)node atIndex:(long long)index;
- (void)removeSourceNode:(id)node;
- (void)removeAllSourceNodes;
- (BOOL)canAddEvaluationNode:(id)node;
- (BOOL)canAddEvaluationNodeClass:(Class)class;
- (void)addEvaluationNode:(id)node;
- (void)insertEvaluationNode:(id)node atIndex:(long long)index;
- (void)removeEvaluationNode:(id)node;
- (void)removeAllEvaluationNodes;
- (void)addSourceNodes:(id)nodes evaluationNodes:(id)nodes;
- (id)sourceNodeWithIdentifier:(id)identifier;
- (id)evaluationNodeWithIdentifier:(id)identifier;
- (id)_queue_sourceNodeWithIdentifier:(id)identifier;
- (id)_queue_evaluationNodeWithIdentifier:(id)identifier;
- (id)makeUniqueIdentifierForNode:(Class)node;
- (id)_queue_makeUniqueIdentifierForNode:(Class)node;
- (BOOL)nodeIdentifierExists:(id)exists;
- (BOOL)_queue_nodeIdentifierExists:(id)exists;
- (id)resultHandlers;
- (void)addResultHandler:(id /* block */)handler;
- (void)_queue_addResultHandler:(id /* block */)handler;
- (void)removeResultHandler:(id /* block */)handler;
- (void)_queue_removeResultHandler:(id /* block */)handler;
- (void)removeAllResultHandlers;
- (void)_queue_removeAllResultHandlers;
- (void)_invokeResultHandlers:(id)handlers withError:(id)error;
- (void)_invokeResultHandlers:(id)handlers withResult:(id)result;
- (void)enableResultCachingWithCacheSize:(long long)size;
- (void)disableResultCaching;
- (void)updateEngineConfiguration:(id /* block */)configuration;
- (void)prewarmEngine;
- (void)purgeResources:(id /* block */)resources;
- (id)axmDescription;
- (void)axmAppendRecursiveDescription:(id)description withIndentation:(long long)indentation;
- (void)dispatcher:(id)dispatcher handleTask:(id)task;
- (void)axMediaUtilitiesService:(id)service eventOccurred:(long long)occurred;
- (void)triggerWithSource:(id)source context:(id)context;
- (void)_invokeFullQueueResultHandlersForContext:(id)context;
- (BOOL)engineWillAcceptTiggerWithSource:(id)source;
- (BOOL)diagnosticsEnabled:(id)enabled;
- (void)captureSessionNodeDidBeginProcessingFrames:(id)frames;
- (void)captureSessionNodeDidEndProcessingFrames:(id)frames;
- (void)captureSessionNodeWillProcessFrame:(id)frame;
- (void)captureSessionNodeDidDropFrame:(id)frame;
- (BOOL)areDiagnosticsEnabled;
@end

#endif /* AXMVisionEngine_h */
