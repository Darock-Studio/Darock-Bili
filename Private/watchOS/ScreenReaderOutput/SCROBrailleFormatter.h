//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 346.2.9.0.0
//
#ifndef SCROBrailleFormatter_h
#define SCROBrailleFormatter_h
@import Foundation;

#include "BRLTBrailleStateManagerDelegate-Protocol.h"
#include "BRLTBrailleTranslationDelegateProtocol-Protocol.h"
#include "NSCopying-Protocol.h"

@class BRLTBrailleStateManager, BRLTScriptString, NSAttributedString, NSPointerArray, NSString;

@interface SCROBrailleFormatter : NSObject<BRLTBrailleTranslationDelegateProtocol, BRLTBrailleStateManagerDelegate, NSCopying>

@property (retain, nonatomic) BRLTScriptString *emptyEditingScriptString;
@property (nonatomic) int lineFocus;
@property (readonly, nonatomic) int outputContractionMode;
@property (readonly, nonatomic) int inputContractionMode;
@property (readonly, nonatomic) BOOL outputShowEightDot;
@property (readonly, nonatomic) BOOL inputShowEightDot;
@property (readonly, nonatomic) BOOL showDotsSevenAndEight;
@property (nonatomic) int displayMode;
@property (nonatomic) BOOL currentUnread;
@property (nonatomic) BOOL anyUnread;
@property (retain, nonatomic) id appToken;
@property (nonatomic) long long lineOffset;
@property (retain, nonatomic) NSAttributedString *statusText;
@property (readonly, nonatomic) BRLTBrailleStateManager *stateManager;
@property (readonly, nonatomic) long long firstToken;
@property (readonly, nonatomic) long long lastToken;
@property (readonly, nonatomic) unsigned long long generationID;
@property (readonly, nonatomic) NSPointerArray *outputDelegates;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)resetEditingManager;

/* instance methods */
- (id)initWithOutputContractionMode:(int)mode inputContractionMode:(int)mode outputShowEightDot:(BOOL)dot inputShowEightDot:(BOOL)dot showDotsSevenAndEight:(BOOL)eight;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)deepCopyWithZone:(struct _NSZone *)zone;
- (void)addText:(id)text selection:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)selection token:(long long)token focus:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)focus isEditableText:(BOOL)text isAlert:(BOOL)alert isTerminalOutput:(BOOL)output;
- (void)addText:(id)text language:(id)language selection:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)selection token:(long long)token focus:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)focus isEditableText:(BOOL)text isAlert:(BOOL)alert isTerminalOutput:(BOOL)output;
- (void)addText:(id)text selection:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)selection token:(long long)token focus:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)focus technical:(BOOL)technical isEditableText:(BOOL)text isAlert:(BOOL)alert isTerminalOutput:(BOOL)output;
- (void)addText:(id)text overrideText:(id)text language:(id)language selection:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)selection token:(long long)token focus:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)focus technical:(BOOL)technical isEditableText:(BOOL)text isAlert:(BOOL)alert isTerminalOutput:(BOOL)output;
- (void)addText:(id)text overrideText:(id)text language:(id)language selection:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)selection token:(long long)token focus:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)focus technical:(BOOL)technical isEditableText:(BOOL)text isAlert:(BOOL)alert isTerminalOutput:(BOOL)output paddingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range suggestionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range editingString:(id)string textFormattingRanges:(id)ranges;
- (void)addTextJa:(id)ja overrideText:(id)text language:(id)language selection:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)selection token:(long long)token focus:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)focus technical:(BOOL)technical isEditableText:(BOOL)text isAlert:(BOOL)alert isTerminalOutput:(BOOL)output paddingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range suggestionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range editingString:(id)string textFormattingRanges:(id)ranges;
- (void)jaAppendTextTo:(id)to text:(id)text selection:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)selection token:(long long)token focus:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)focus isEditableText:(BOOL)text isAlert:(BOOL)alert isTerminalOutput:(BOOL)output paddingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range suggestionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)jaFlushText:(id)text;
- (void)addTextNonJa:(id)ja overrideText:(id)text language:(id)language selection:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)selection token:(long long)token focus:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)focus technical:(BOOL)technical isEditableText:(BOOL)text isTerminalOutput:(BOOL)output paddingRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range suggestionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range editingString:(id)string textFormattingRanges:(id)ranges;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfBrailleCellRepresentingCharacterAtIndex:(unsigned long long)index;
- (BOOL)hasPlaceholderText;
- (void)clearPlaceholderForEditing;
- (void)translate;
- (void)translate:(BOOL)translate;
- (id)printBrailleForText:(id)text language:(id)language mode:(unsigned long long)mode textPositionsRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range locations:(id *)locations textFormattingRanges:(id)ranges;
- (id)textForPrintBraille:(id)braille language:(id)language mode:(unsigned long long)mode locations:(id *)locations;
- (void)addOutputDelegate:(id)delegate;
- (void)brailleDisplayStringDidChange:(id)change brailleSelection:(struct _NSRange { unsigned long long x0; unsigned long long x1; })selection modifiers:(id)modifiers;
- (void)replaceScriptStringRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withScriptString:(id)string cursorLocation:(unsigned long long)location;
- (void)scriptSelectionDidChange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })change;
- (void)didInsertScriptString:(id)string;
- (void)brailleDisplayInsertedCharacter:(id)character modifiers:(id)modifiers;
- (void)brailleDisplayDeletedCharacter:(id)character;
- (void)requestSpeech:(id)speech language:(id)language;
@end

#endif /* SCROBrailleFormatter_h */
