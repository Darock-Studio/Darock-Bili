//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 402.2.3.0.0
//
#ifndef ETImagePreprocessor_h
#define ETImagePreprocessor_h
@import Foundation;

@class NSArray;
@protocol {shared_ptr<Espresso::abstract_context>="__ptr_"^{abstract_context}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<Espresso::blob_cpu>="__ptr_"^{blob_cpu}"__cntrl_"^{__shared_weak_count}};

@interface ETImagePreprocessor : NSObject {
  /* instance variables */
  struct vimage2espresso_param { float scale; int center_mean; int is_image_bgr; int is_network_bgr; float bias_r; float bias_g; float bias_b; float bias_a; int metal_output_plane; unsigned int width; unsigned int height; unsigned int rowbytes; " scaleXY; int128 x0; const a x1; in short x2; long x3; a x4; int128 x5; e x6; X x7; Y x8; const out int128 x9; a x10; int128 x11; e x12; _ x13; double x14; e x15; g x16; u i; short x17; e x18; _ x19; double x20; int x21; const e x22; char x23; int128 x24; _ x25; char x26; void x27; p x28; int x29; x x30; e x31; long x32; unsigned int x33 :0; u x34; float x35; float x36; e x37; const " x38; int x39; int no_alpha_premultiply; } param;
  struct shared_ptr<Espresso::blob_cpu> { struct blob_cpu *__ptr_; struct __shared_weak_count *__cntrl_; } imageBlob;
  struct shared_ptr<Espresso::abstract_context> { struct abstract_context *__ptr_; struct __shared_weak_count *__cntrl_; } ctx;
  unsigned long long nChannels;
  NSArray *imageShape;
  unsigned long long bytesPerPixel;
  unsigned long long bitsPerComponent;
  struct CGColorSpace * colorSpace;
  struct vImage_Buffer { void *data; unsigned long long height; unsigned long long width; unsigned long long rowBytes; } targetBuffer;
  struct vImage_Buffer { void *data; unsigned long long height; unsigned long long width; unsigned long long rowBytes; } srcBuffer;
  unsigned long long currentSrcBufferSize;
}

/* instance methods */
- (id)initWithImagePreprocessParams:(id)params;
- (id)tensorWithCGImage:(struct CGImage *)cgimage;
- (id)tensorWithPath:(id)path;
- (void)dealloc;
- (void)preprocess;
- (void)loadSrcBufferWithCGImage:(struct CGImage *)cgimage;
@end

#endif /* ETImagePreprocessor_h */
