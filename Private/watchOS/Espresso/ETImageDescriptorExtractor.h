//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 402.2.3.0.0
//
#ifndef ETImageDescriptorExtractor_h
#define ETImageDescriptorExtractor_h
@import Foundation;

@protocol {basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}};

@interface ETImageDescriptorExtractor : NSObject {
  /* instance variables */
  void * _plan;
  struct { void *plan; int network_index; } _net;
  void * _ctx;
  struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } _inputBlob;
  struct { void *data; void *reserved; unsigned long long x[4] dim; unsigned long long x[4] stride; unsigned long long width; unsigned long long height; unsigned long long channels; unsigned long long batch_number; unsigned long long sequence_length; unsigned long long stride_width; unsigned long long stride_height; unsigned long long stride_channels; unsigned long long stride_batch_number; unsigned long long stride_sequence_length; int storage_type; } _outputBlob;
  unsigned long long _targetWidth;
  unsigned long long _targetHeight;
  struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char *__data_; unsigned long long __size_; unsigned int x :63 __cap_; unsigned int x :1 __is_long_; } __l; struct __short { char x[23] __data_; unsigned char x[0] __padding_; unsigned int x :7 __size_; unsigned int x :1 __is_long_; } __s; struct __raw { unsigned long long x[3] __words; } __r; } x0; } __value_; } __r_; } _inputName;
  unsigned long long * _inputShape;
}

@property float rotation_range;
@property float horizontal_flip;
@property float zoom_range;
@property float shear_range;
@property float contrast_range;
@property float brightness_range;
@property int nAugmentations;
@property int doBatchnormTuning;
@property unsigned long long descriptors_mem_cache_size;
@property unsigned long long descriptors_file_cache_size;

/* class methods */
+ (id)VisionSceneNet_iOS10_Extractor;
+ (id)inception_v3_Extractor;
+ (id)passthroughExtractor;
+ (id)VisionSmartCamNet_iOS11_Extractor;

/* instance methods */
- (id)initWithNetwork:(id)network;
- (void)extractForDataPoint:(id)point;
- (struct vImage_Buffer { void * x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })cropResizeInputImage:(struct vImage_Buffer { void * x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })image;
- (float *)extractDescriptorForDataPoint:(struct vImage_Buffer { void * x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })point freeWhenDone:(BOOL)done;
- (int)numberOfChannels;
@end

#endif /* ETImageDescriptorExtractor_h */
