//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 402.2.3.0.0
//
#ifndef ETTask_h
#define ETTask_h
@import Foundation;

#include "ETImageDescriptorExtractor.h"
#include "ETModelDef.h"
#include "ETOptimizerDef.h"

@protocol {shared_ptr<Espresso::net>="__ptr_"^{net}"__cntrl_"^{__shared_weak_count}};

@interface ETTask : NSObject {
  /* instance variables */
  struct shared_ptr<Espresso::net> { struct net *__ptr_; struct __shared_weak_count *__cntrl_; } network;
}

@property (retain, nonatomic) ETModelDef *model;
@property (retain, nonatomic) ETOptimizerDef *optimizer;
@property (retain, nonatomic) ETImageDescriptorExtractor *extractor;
@property (nonatomic) BOOL dumpData;

/* instance methods */
- (id)init;
- (id)initWithModelDef:(id)def optimizerDef:(id)def extractor:(id)extractor;
- (id)initWithModelDef:(id)def optimizerDef:(id)def extractor:(id)extractor needWeightsInitialization:(BOOL)initialization;
- (struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; })reinitializeVariables;
- (id)initWithModelDef:(id)def optimizerDef:(id)def lossConfig:(id)config;
- (id)initWithModelDef:(id)def optimizerDef:(id)def lossConfig:(id)config extractor:(id)extractor;
- (float)fit:(id)fit numberOfEpochs:(int)epochs withProgress:(id /* block */)progress;
- (float)fit:(id)fit numberOfBatches:(unsigned int)batches withProgress:(id /* block */)progress;
- (id)evaluate:(id)evaluate;
- (BOOL)runBatches:(id)batches numberOfBatches:(unsigned int)batches outputNames:(id)names batchCallback:(id /* block */)callback;
- (BOOL)fit:(id)fit numberOfBatches:(unsigned int)batches outputNames:(id)names batchCallback:(id /* block */)callback;
- (BOOL)fit:(id)fit numberOfEpochs:(int)epochs outputNames:(id)names batchCallback:(id /* block */)callback;
- (BOOL)runInference:(id)inference outputNames:(id)names batchCallback:(id /* block */)callback;
- (void)saveNetwork:(id)network;
- (void)saveNetwork:(id)network revertToInferenceMode:(BOOL)mode;
- (BOOL)moveToGPU:(int)gpu error:(id *)error;
@end

#endif /* ETTask_h */
