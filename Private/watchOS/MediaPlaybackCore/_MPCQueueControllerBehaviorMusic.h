//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef _MPCQueueControllerBehaviorMusic_h
#define _MPCQueueControllerBehaviorMusic_h
@import Foundation;

#include "MPArtworkDataSource-Protocol.h"
#include "MPCContinueListeningRadioQueueProviding-Protocol.h"
#include "MPCQueueControllerBehaviorDynamicLoadingImplementation-Protocol.h"
#include "MPCQueueControllerBehaviorHost-Protocol.h"
#include "MPCQueueControllerBehaviorMusic-Protocol.h"
#include "MPCQueueControllerBehaviorMusicDelegate-Protocol.h"
#include "MPCQueueControllerBehaviorRestorableImplementation-Protocol.h"
#include "MPCQueueControllerBehaviorTransportableImplementation-Protocol.h"
#include "MPCQueueControllerBehaviorUpNextImplementation-Protocol.h"
#include "MPSectionedIdentifierListAnnotationDelegate-Protocol.h"
#include "MPShuffleableSectionedIdentifierListDelegate-Protocol.h"

@class MPSectionedIdentifierList, MPSectionedIdentifierListPosition, MPShuffleableSectionedIdentifierList, NSDictionary, NSMutableDictionary, NSString;

@interface _MPCQueueControllerBehaviorMusic : NSObject<MPArtworkDataSource, MPShuffleableSectionedIdentifierListDelegate, MPSectionedIdentifierListAnnotationDelegate, MPCContinueListeningRadioQueueProviding, MPCQueueControllerBehaviorMusic, MPCQueueControllerBehaviorDynamicLoadingImplementation, MPCQueueControllerBehaviorTransportableImplementation, MPCQueueControllerBehaviorRestorableImplementation, MPCQueueControllerBehaviorUpNextImplementation> {
  /* instance variables */
  BOOL _wasDecoded;
  unsigned short _activeItemFlags;
  id /* block */ _loadAdditionalItemsCompletion;
  NSDictionary *_lastEmittedBehaviorMetadata;
  NSString *_activeHostingSharedSessionID;
}

@property (retain, nonatomic) MPShuffleableSectionedIdentifierList *identifierList;
@property (retain, nonatomic) MPSectionedIdentifierList *autoPlayIdentifierList;
@property (nonatomic) long long autoPlayState;
@property (retain, nonatomic) MPSectionedIdentifierListPosition *autoPlayEndPosition;
@property (nonatomic) BOOL autoPlayIsTriggered;
@property (retain, nonatomic) NSMutableDictionary *dataSources;
@property (readonly, nonatomic) long long state;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<MPCQueueControllerBehaviorMusicDelegate> *musicBehaviorDelegate;
@property (readonly, nonatomic) long long repeatType;
@property (readonly, nonatomic) long long shuffleType;
@property (readonly, nonatomic) BOOL autoPlayEnabled;
@property (readonly, nonatomic) BOOL hasUserMutations;
@property (nonatomic) BOOL allowsQueueModifications;
@property (readonly, nonatomic) long long preferredUpcomingItemCount;
@property (readonly, copy, nonatomic) NSString *sessionID;
@property (readonly, weak, nonatomic) NSObject<MPCQueueControllerBehaviorHost> *host;
@property (readonly, nonatomic) BOOL containsRestorableContent;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (BOOL)canLoadQueue:(id)queue reason:(id *)reason;
+ (id)makeExtensionWithInvalidatable:(id)invalidatable;

/* instance methods */
- (void)setShuffleType:(long long)type startingContentItemID:(id)id randomSource:(id)source;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)restoreWithSharedCoder:(id)coder block:(id /* block */)block;
- (id)initWithSessionID:(id)id;
- (void)dealloc;
- (void)connectToHost:(id)host;
- (void)didConnectToHost:(id)host;
- (void)disconnectFromHost:(id)host;
- (id)performLoadCommand:(id)command completion:(id /* block */)completion;
- (void)activeItemFlagsDidChange:(unsigned short)change;
- (id)componentsForContentItemID:(id)id;
- (BOOL)itemExistsForContentItemID:(id)id;
- (BOOL)canJumpToContentItemID:(id)id reason:(id *)reason;
- (BOOL)canPreviousItemFromContentItemID:(id)id reason:(id *)reason;
- (BOOL)canNextItemFromContentItemID:(id)id reason:(id *)reason;
- (id)contentItemIDEnumeratorStartingAfterContentItemID:(id)id mode:(long long)mode options:(unsigned long long)options;
- (id)_stateDictionaryIncludingQueue:(BOOL)queue;
- (void)currentItemDidChangeFromContentItemID:(id)id toContentItemID:(id)id;
- (id)_itemForContentItemID:(id)id;
- (void)loadAdditionalUpcomingItems:(long long)items completion:(id /* block */)completion;
- (id)finalizeStateRestorationWithTargetContentItemID:(id)id completion:(id /* block */)completion;
- (BOOL)isExportableSessionType:(id)type forContentItemID:(id)id extension:(id)extension reason:(id *)reason;
- (void)didReachEndOfQueueWithReason:(id)reason;
- (BOOL)canUserChangeRepeatTypeWithReason:(id *)reason;
- (void)setRepeatType:(long long)type completion:(id /* block */)completion;
- (BOOL)canUserChangeShuffleModeWithReason:(id *)reason;
- (void)setShuffleType:(long long)type targetContentItemID:(id)id completion:(id /* block */)completion;
- (void)reshuffleWithTargetContentItemID:(id)id completion:(id /* block */)completion;
- (BOOL)canUserEnableAutoPlayWithReason:(id *)reason;
- (void)setAutoPlayEnabled:(BOOL)enabled targetContentItemID:(id)id completion:(id /* block */)completion;
- (BOOL)isAutoPlayContentItemID:(id)id;
- (void)getSharedQueueTracklistWithStartingContentItemID:(id)id completion:(id /* block */)completion;
- (void)findFirstContentItemIDForItemIntersectingIdentifierSet:(id)set completion:(id /* block */)completion;
- (id)contentItemIDWithoutRepeatIteration:(id)iteration;
- (id)copyContentItemID:(id)id repeatIteration:(long long)iteration;
- (void)setHostingSharedSessionID:(id)id reason:(id)reason;
- (void)canReuseQueue:(id)queue completion:(id /* block */)completion;
- (BOOL)isSupportedInsertionPosition:(long long)position fromContentItemID:(id)id reason:(id *)reason;
- (void)performInsertCommand:(id)command targetContentItemID:(id)id completion:(id /* block */)completion;
- (void)moveContentItemID:(id)id afterContentItemID:(id)id completion:(id /* block */)completion;
- (void)moveContentItemID:(id)id beforeContentItemID:(id)id completion:(id /* block */)completion;
- (BOOL)canRemoveContentItemID:(id)id reason:(id *)reason;
- (void)removeContentItemID:(id)id completion:(id /* block */)completion;
- (void)clearAllItemsAfterContentItemID:(id)id;
- (long long)displayItemCount;
- (BOOL)areRepresentationsAvailableForCatalog:(id)catalog;
- (void)cancelLoadingRepresentationForArtworkCatalog:(id)catalog;
- (id)existingRepresentationForArtworkCatalog:(id)catalog;
- (BOOL)isRepresentation:(id)representation bestRepresentationForArtworkCatalog:(id)catalog;
- (void)loadRepresentationForArtworkCatalog:(id)catalog completionHandler:(id /* block */)handler;
- (id)visualIdenticalityIdentifierForCatalog:(id)catalog;
- (id)debugDescriptionForSection:(id)section;
- (id)debugDescriptionForItem:(id)item inSection:(id)section;
- (void)sectionedIdentifierList:(id)list dataSourceDidEndTransactionForSection:(id)section;
- (void)sectionedIdentifierList:(id)list dataSourceDidMoveItems:(id)items inSection:(id)section;
- (void)sectionedIdentifierList:(id)list dataSourceDidRemoveItems:(id)items fromSection:(id)section;
- (void)sectionedIdentifierList:(id)list dataSourceDidAddItems:(id)items toSection:(id)section;
- (void)sectionedIdentifierList:(id)list dataSourceDidUpdateItems:(id)items inSection:(id)section;
- (void)sectionedIdentifierList:(id)list dataSourceDidUpdateSection:(id)section;
- (void)didDequeueShuffledItemsInSectionedIdentifierList:(id)list;
- (id)queueReferencesWithMaxCount:(long long)count;
- (id)_mpcParticipantForGroupSessionParticipant:(id)participant;
- (void)_updateGroupSessionParticipants:(id)participants localParticipant:(id)participant;
- (id)_accountForAutoPlay;
- (void)_addPlaybackContext:(id)context atPosition:(long long)position afterContentItemID:(id)id sectionIdentifier:(id)identifier actions:(unsigned long long)actions completion:(id /* block */)completion;
- (void)_addAutoPlayPlaybackContext:(id)context atPosition:(long long)position afterContentItemID:(id)id sectionIdentifier:(id)identifier actions:(unsigned long long)actions completion:(id /* block */)completion;
- (BOOL)_allDataSourcesSupportInsertionPositionLast;
- (long long)_autoplayMode;
- (id)_componentsForContentItemID:(id)id;
- (long long)_countOfItemsWithinSection:(id)section maxCount:(long long)count;
- (void)_emitEventsForAddingPlaybackContext:(id)context sectionIdentifier:(id)identifier;
- (void)_emitEventsForPlaybackBehaviorChangeIfNeeded;
- (void)_evaluateLoadingDataSourceItemThresholds;
- (id)_identifierListForSection:(id)section;
- (void)_initializeWithCoder:(id)coder;
- (id)_itemForComponents:(id)components;
- (unsigned long long)_playbackContextOptions;
- (long long)_privateListeningSourceForContext:(id)context;
- (void)_setRepeatType:(long long)type;
- (void)_setShuffleType:(long long)type startingContentItemID:(id)id randomSource:(id)source;
- (void)_transitionToAutoPlayState:(long long)state;
@end

#endif /* _MPCQueueControllerBehaviorMusic_h */
