//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPCPlaybackEngine_h
#define MPCPlaybackEngine_h
@import Foundation;

#include "MPAVRoutingControllerDelegate-Protocol.h"
#include "MPCAudioSpectrumAnalyzer.h"
#include "MPCContentAgeRequirementDelegate-Protocol.h"
#include "MPCPlaybackEngineEventStream.h"
#include "MPCPlaybackEngineInitializationParameters-Protocol.h"
#include "MPCPlaybackIntent.h"
#include "MPCQueueController.h"
#include "MPCQueueControllerBehaviorMusicDelegate-Protocol.h"
#include "MPCQueueControllerBehaviorMusicSharePlayDelegate-Protocol.h"
#include "MPCQueueControllerDelegate-Protocol.h"
#include "MPCQueueControllerPlaybackEngine-Protocol.h"
#include "MPCWhiskyController.h"
#include "_MPCLeaseManager.h"
#include "_MPCMediaRemotePublisher.h"
#include "_MPCMusicPlayerControllerServer.h"
#include "_MPCPlaybackEnginePlayer.h"
#include "_MPCPlaybackEngineSessionManager.h"
#include "_MPCReportingController.h"

@class MPAVRoute, MPAVRoutingController, NSError *, NSString, NSString *, NSXPCListenerEndpoint;
@protocol MPCPlaybackEngineActiveItem, MPCPlaybackEngineDelegate, MPCVideoOutput, MPProtocolProxy<_MPCPlaybackEngineEventObserving;

@interface MPCPlaybackEngine : NSObject<MPCQueueControllerDelegate, MPCQueueControllerBehaviorMusicDelegate, MPCQueueControllerBehaviorMusicSharePlayDelegate, MPCContentAgeRequirementDelegate, MPAVRoutingControllerDelegate, MPCQueueControllerPlaybackEngine>

@property (nonatomic) BOOL scheduledPlaybackStatePreservation;
@property (nonatomic) BOOL needsUISnapshot;
@property (readonly, nonatomic) MPProtocolProxy<_MPCPlaybackEngineEventObserving> *eventObserver;
@property (readonly, nonatomic) _MPCPlaybackEnginePlayer *player;
@property (readonly, nonatomic) _MPCMediaRemotePublisher *mediaRemotePublisher;
@property (readonly, nonatomic) _MPCMusicPlayerControllerServer *musicPlayerControllerServer;
@property (readonly, nonatomic) _MPCPlaybackEngineSessionManager *sessionManager;
@property (retain, nonatomic) MPCQueueController *queueController;
@property (readonly, nonatomic) MPCPlaybackEngineEventStream *eventStream;
@property (readonly, nonatomic) _MPCReportingController *reportingController;
@property (readonly, nonatomic) _MPCLeaseManager *leaseManager;
@property (readonly, nonatomic) NSObject<MPCVideoOutput> *videoOutput;
@property (readonly, copy, nonatomic) NSString *targetContentItemID;
@property (readonly, copy, nonatomic) NSObject<MPCPlaybackEngineActiveItem> *activeItem;
@property (retain, nonatomic) id swiftStorage;
@property (readonly, nonatomic) NSObject<MPCPlaybackEngineInitializationParameters> *initializationParameters;
@property (nonatomic) BOOL systemMusicApplication;
@property (nonatomic) BOOL systemPodcastsApplication;
@property (copy, nonatomic) NSString *audioSessionCategory;
@property (nonatomic) unsigned long long audioSessionOptions;
@property (nonatomic) BOOL audioAnalyzerEnabled;
@property (readonly, nonatomic) MPCAudioSpectrumAnalyzer *audioAnalyzer;
@property (readonly, nonatomic) MPAVRoutingController *routingController;
@property (readonly, nonatomic) MPAVRoute *pickedRoute;
@property (nonatomic) BOOL vocalAttenuationEnabled;
@property (nonatomic) float vocalLevel;
@property (readonly, nonatomic) MPCWhiskyController *vocalAttenuationController;
@property (readonly, nonatomic) BOOL vocalAttenuationAvailable;
@property (readonly, nonatomic) double currentAudioProcessingDelay;
@property (readonly, nonatomic) NSXPCListenerEndpoint *serverEndpoint;
@property (readonly, copy, nonatomic) NSString *playerID;
@property (readonly, copy, nonatomic) NSString *engineID;
@property (weak, nonatomic) NSObject<MPCPlaybackEngineDelegate> *delegate;
@property (readonly, nonatomic) BOOL started;
@property (nonatomic) BOOL pictureInPictureSupported;
@property (nonatomic) BOOL videoSupported;
@property (nonatomic) BOOL disableAutoPlay;
@property (nonatomic) BOOL disableRepeat;
@property (nonatomic) BOOL disableShuffle;
@property (retain, nonatomic) MPCPlaybackIntent *fallbackPlaybackIntent;
@property (nonatomic) BOOL stateRestorationSupported;
@property (nonatomic) BOOL queueHandoffSupported;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *hostingSharedSessionID;

/* class methods */
+ (void)preheatPlayback;

/* instance methods */
- (void)initializeSwiftStack;
- (void)loadSessionWithIdentifier:(NSString *)identifier completion:(id /* block */)completion;
- (void)reloadQueueForReason:(long long)reason completion:(id /* block */)completion;
- (void)beginScanningWithDirection:(long long)direction identifier:(NSString *)identifier completion:(id /* block */)completion;
- (BOOL)skipWithDirectionShouldJumpToItemStart:(long long)start;
- (id)initWithPlayerID:(id)id;
- (id)initWithParameters:(id)parameters;
- (void)dealloc;
- (void)start;
- (void)becomeActive;
- (void)restoreStateWithCompletion:(id /* block */)completion;
- (void)invalidate;
- (void)addEngineObserver:(id)observer;
- (void)removeEngineObserver:(id)observer;
- (void)reportUserBackgroundedApplication;
- (void)reportUserSeekFromTime:(double)time toTime:(double)time;
- (BOOL)isStateRestorationSupported;
- (void)schedulePlaybackStatePreservation;
- (BOOL)isVocalAttenuationAvailable;
- (double)mapUserTimeToPlaybackTime:(double)time;
- (double)mapPlaybackTimeToUserTime:(double)time;
- (void)queueControllerDidChangeContents:(id)contents;
- (void)queueController:(id)controller didChangeTargetContentItemID:(id)id;
- (void)queueController:(id)controller didIncrementVersionForSegment:(id)segment;
- (void)queueController:(id)controller didDetectMismatchForActiveContentItemID:(id)id targetContentItemID:(id)id;
- (void)queueControllerDidReachUnexpectedEndOfQueue:(id)queue;
- (void)behavior:(id)behavior didChangeRepeatType:(long long)type;
- (void)behavior:(id)behavior didChangeShuffleType:(long long)type;
- (void)behavior:(id)behavior didChangeActionAtQueueEnd:(long long)end;
- (void)behavior:(id)behavior didEndSharePlaySessionWithReason:(long long)reason;
- (void)behavior:(id)behavior didChangeExplicitContentState:(long long)state;
- (void)behavior:(id)behavior didReceiveSharedListeningEvent:(id)event;
- (void)_detectCrashLoopForSessionIdentifier:(id)identifier block:(id /* block */)block;
- (void)_initializePlaybackStack;
- (BOOL)_shouldIgnorePlaybackSessionError:(id)error;
- (void)requestAuthorizationForExplicitItem:(id)item reason:(long long)reason completion:(id /* block */)completion;
- (void)routingController:(id)controller pickedRouteDidChange:(id)change;
- (BOOL)isVocalAttenuationEnabled;
- (BOOL)isStarted;
- (BOOL)isPictureInPictureSupported;
- (BOOL)isVideoSupported;
- (BOOL)isQueueHandoffSupported;
- (BOOL)hasScheduledPlaybackStatePreservation;
- (BOOL)isSystemMusicApplication;
- (BOOL)isSystemPodcastsApplication;
- (BOOL)isAudioAnalyzerEnabled;
@end

#endif /* MPCPlaybackEngine_h */
