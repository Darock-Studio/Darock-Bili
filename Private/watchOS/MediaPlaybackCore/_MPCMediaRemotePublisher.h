//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef _MPCMediaRemotePublisher_h
#define _MPCMediaRemotePublisher_h
@import Foundation;

#include "MPCPlaybackAccountManagerObserver-Protocol.h"
#include "MPCPlaybackEngine.h"
#include "MPCPlaybackEngineEventObserving-Protocol.h"
#include "MPCQueueControllerPublisher-Protocol.h"
#include "MPNowPlayingPlaybackQueueDataSourcePrivate-Protocol.h"
#include "OS_dispatch_source-Protocol.h"

@class MPNowPlayingInfoCenter, MPRemoteCommandCenter, MSVBlockGuard, NSArray, NSDictionary, NSString, _MPCMediaRemotePublisher_Swift;

@interface _MPCMediaRemotePublisher : NSObject<MPNowPlayingPlaybackQueueDataSourcePrivate, MPCPlaybackEngineEventObserving, MPCPlaybackAccountManagerObserver, MPCQueueControllerPublisher> {
  /* instance variables */
  NSArray *_accounts;
  BOOL _activeAccountAllowsSubscriptionPlayback;
  BOOL _activeAccountRequiresAuthorizationTokensForPlayback;
  NSString *_activeAccountStoreFrontIdentifier;
  BOOL _hasBeganFastForward;
  BOOL _hasBeganRewind;
  NSObject<OS_dispatch_source> *_nextPreviousTrackCooldownTimer;
  long long _deferredTrackChangeDelta;
  NSArray *_lastCommandDescriptions;
  MSVBlockGuard *_setPlaybackQueueExtendedTimeGuard;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) _MPCMediaRemotePublisher_Swift *swift;
@property (nonatomic) BOOL initializedSupportedCommands;
@property (nonatomic) BOOL engineRestoringState;
@property (nonatomic) BOOL mediaServerAvailable;
@property (retain, nonatomic) NSDictionary *lastPerformanceMetrics;
@property (readonly, weak, nonatomic) MPCPlaybackEngine *playbackEngine;
@property (readonly, nonatomic) MPNowPlayingInfoCenter *infoCenter;
@property (readonly, nonatomic) MPRemoteCommandCenter *commandCenter;
@property (readonly, copy, nonatomic) NSString *hostingSharedSessionID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)playbackQueueIdentifierForNowPlayingInfoCenter:(id)center;
- (id)nowPlayingInfoCenter:(id)center contentItemIDForOffset:(long long)offset;
- (id)nowPlayingInfoCenter:(id)center contentItemIDsFromOffset:(long long)offset toOffset:(long long)offset nowPlayingIndex:(long long *)index;
- (id)nowPlayingInfoCenter:(id)center contentItemForID:(id)id;
- (id)nowPlayingInfoCenter:(id)center artworkForContentItem:(id)item size:(struct CGSize { double x0; double x1; })size completion:(id /* block */)completion;
- (id)nowPlayingInfoCenter:(id)center remoteArtworkForContentItem:(id)item format:(id)format size:(struct CGSize { double x0; double x1; })size completion:(id /* block */)completion;
- (id)nowPlayingInfoCenter:(id)center infoForContentItem:(id)item completion:(id /* block */)completion;
- (id)nowPlayingInfoCenter:(id)center artworkCatalogForContentItem:(id)item;
- (id)nowPlayingInfoCenter:(id)center lyricsForContentItem:(id)item completion:(id /* block */)completion;
- (void)nowPlayingInfoCenter:(id)center getTransportablePlaybackSessionRepresentationForRequest:(id)request completion:(id /* block */)completion;
- (void)nowPlayingInfoCenter:(id)center willBeginSessionMigrationWithIdentifier:(id)identifier;
- (void)nowPlayingInfoCenter:(id)center didEndMigrationWithIdentifier:(id)identifier error:(id)error;
- (id)initWithPlaybackEngine:(id)engine;
- (void)dealloc;
- (void)becomeActive;
- (void)publishIfNeeded;
- (void)reportUserBackgroundedApplication;
- (void)getShouldRestoreStateWithCompletion:(id /* block */)completion;
- (void)leaveSharedSessionWithCommandID:(id)id remoteControlInterface:(id)interface completion:(id /* block */)completion;
- (void)_leaveSharedSessionWithCommandID:(id)id completion:(id /* block */)completion;
- (void)updatePlaybackMetrics:(id)metrics;
- (void)accountManager:(id)manager didChangeAccounts:(id)accounts;
- (void)engine:(id)engine didChangeToItem:(id)item;
- (void)engine:(id)engine didAchieveLikelyToKeepUpWithItem:(id)item;
- (void)engine:(id)engine didChangeToState:(unsigned long long)state;
- (void)engine:(id)engine didChangeQueueWithReason:(id)reason;
- (void)engine:(id)engine didChangeRepeatType:(long long)type;
- (void)engine:(id)engine didChangeShuffleType:(long long)type;
- (void)engine:(id)engine didChangeActionAtQueueEnd:(long long)end;
- (void)engine:(id)engine didChangeCurrentItemVariantID:(id)id;
- (void)engineWillBeginStateRestoration:(id)restoration;
- (void)engineDidEndStateRestoration:(id)restoration;
- (void)engineDidLoseMediaServices:(id)services;
- (void)engineDidResetMediaServices:(id)services;
- (void)engineDidChangeVocalAttenuationState:(id)state;
- (void)engineDidChangeVocalAttenuationLevel:(id)level;
- (void)engineDidBlockVocalAttenuation:(id)attenuation;
- (void)engineDidUnblockVocalAttenuation:(id)attenuation;
- (void)engine:(id)engine didReceivePickedRouteChange:(id)change;
- (void)engine:(id)engine didChangeQueueController:(id)controller;
- (void)invalidateQueueTypesWithReason:(id)reason;
- (void)invalidateSessionTypesWithReason:(id)reason;
- (void)nowPlayingInfoCenter:(id)center didBeginLyricsEvent:(id)event;
- (void)nowPlayingInfoCenter:(id)center didEndLyricsEvent:(id)event;
- (void)_commandEventDidTimeoutNotification:(id)notification;
- (void)_durationAvailableNotification:(id)notification;
- (void)_likedStateChangedNotification:(id)notification;
- (void)_hostingSharedSessionDidChange:(id)change;
- (void)becomeActiveIfNeededWithCompletion:(id /* block */)completion;
- (void)deactivateAudioSessionIfIdle:(long long)idle;
- (void)_enqueueFallbackIntentIfNeededForCommandEvent:(id)event play:(BOOL)play completion:(id /* block */)completion;
- (id)_exportableSessionTypes;
- (id)_supportedSessionTypes;
- (void)_updateLaunchCommands;
- (void)_updateSupportedCommands;
- (void)_performDebugEvent:(id)event completion:(id /* block */)completion;
- (void)_beginBackgroundTaskUntilPlayCommandWithCommand:(id)command timeout:(double)timeout;
- (void)_performCommandEvent:(id)event completion:(id /* block */)completion;
- (void)performSetQueueWithIntent:(id)intent completion:(id /* block */)completion;
- (void)performSetQueue:(id)queue completion:(id /* block */)completion;
- (unsigned long long)vocalAttenuationUnavailabilityReasons;
- (BOOL)hasInitializedSupportedCommands;
- (BOOL)isEngineRestoringState;
- (BOOL)isMediaServerAvailable;
@end

#endif /* _MPCMediaRemotePublisher_h */
