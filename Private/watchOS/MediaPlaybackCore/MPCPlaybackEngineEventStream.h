//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPCPlaybackEngineEventStream_h
#define MPCPlaybackEngineEventStream_h
@import Foundation;

#include "MPCPlaybackEngineEvent.h"

@class MSVSQLDatabase, MSVSQLDatabaseTransaction, NSCountedSet, NSDate, NSHashTable, NSMutableArray, NSString;
@protocol MPCPlabackEngineEventStreamTestingDelegate, OS_dispatch_queue;

@interface MPCPlaybackEngineEventStream : NSObject {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _deferralAssertionsLock;
  int _deferralDebugToken;
  BOOL _ignorePerformanceDeferralAssertions;
  BOOL _invalidated;
  NSMutableArray *_subscriptions;
  NSHashTable *_deferralAssertions;
  NSMutableArray *_cachedEvents;
  NSCountedSet *_cacheMisses;
  NSCountedSet *_cacheHits;
  MSVSQLDatabase *_database;
  MSVSQLDatabaseTransaction *_activeTransaction;
  NSObject<OS_dispatch_queue> *_queue;
  long long _scheduledFlushes;
  NSDate *_nextScheduledFlush;
}

@property (weak, nonatomic) NSObject<MPCPlabackEngineEventStreamTestingDelegate> *testingDelegate;
@property (readonly, nonatomic) MPCPlaybackEngineEvent *lastEvent;
@property (readonly, nonatomic) NSString *engineID;

/* instance methods */
- (id)initWithDatabaseCreationBlock:(id /* block */)block;
- (id)initWithParameters:(id)parameters;
- (void)dealloc;
- (void)invalidate;
- (void)scheduleInvalidation;
- (id)debugDescription;
- (void)addConsumer:(id)consumer;
- (void)removeConsumer:(id)consumer;
- (id)eventDeliveryDeferralAssertionOfType:(long long)type forReason:(id)reason withTimeout:(double)timeout;
- (id)eventDeliveryDeferralAssertionOfType:(long long)type forReason:(id)reason;
- (void)emitEventType:(id)type payload:(id)payload;
- (void)emitEventType:(id)type payload:(id)payload atTime:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; double x4; })time;
- (void)flushEvents;
- (void)flushEventsWithConsumer:(id)consumer fromTimestamp:(unsigned long long)timestamp untilTimestamp:(unsigned long long)timestamp;
- (id)lastEventsWithCount:(long long)count;
- (void)setMaximumEventDeliveryTimestamp:(unsigned long long)timestamp;
- (void)resetConsumerEventDeliveryToTimestamp:(unsigned long long)timestamp;
@end

#endif /* MPCPlaybackEngineEventStream_h */
