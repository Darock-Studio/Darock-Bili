//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPCWhiskyController_h
#define MPCWhiskyController_h
@import Foundation;

#include "MPCSingleTrackAudioProcessor.h"
#include "MPCPlaybackEngineEventObserving-Protocol.h"
#include "MPCRecordingSession.h"
#include "MPCVocalAttenuationPolicyController.h"
#include "MPCVocalAttenuationPolicyControllerDelegate-Protocol.h"
#include "MPCWhiskyControllerDisabledState.h"

@class MSVTimer, NSDate, NSString;
@protocol MPCVocalAttenuationModelProvider, MPCVocalAttenuationProcessor, OS_dispatch_queue;

@interface MPCWhiskyController : MPCSingleTrackAudioProcessor<MPCPlaybackEngineEventObserving, MPCVocalAttenuationPolicyControllerDelegate> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_setupQueue;
  float _vocalLevel;
  BOOL _processIsBackgrounded;
  NSDate *_shutdownSequenceStartDate;
  float _minVocalLevel;
  float _maxVocalLevel;
  float _defaultVocalLevel;
  MPCWhiskyControllerDisabledState *_disabledState;
}

@property (readonly, nonatomic) MPCRecordingSession *recordingSession;
@property (readonly, copy, nonatomic) NSString *modelID;
@property (readonly, nonatomic) NSObject<MPCVocalAttenuationModelProvider> *modelProvider;
@property (readonly, nonatomic) NSObject<MPCVocalAttenuationProcessor> *processor;
@property (readonly, nonatomic) MPCVocalAttenuationPolicyController *policyController;
@property (nonatomic) long long state;
@property (retain, nonatomic) MSVTimer *shutdownTimer;
@property (readonly, nonatomic) double renderingTimeLimit;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithPlaybackEngine:(id)engine;
- (id)initWithPlaybackEngine:(id)engine modelProvider:(id)provider processor:(id)processor;
- (void)dealloc;
- (BOOL)shouldAttachAudioTapToItem:(id)item;
- (unsigned int)creationFlags;
- (void)prepareTap:(struct opaqueMTAudioProcessingTap *)tap maxFrames:(long long)frames processingFormat:(const struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)format;
- (void)unprepareTap:(struct opaqueMTAudioProcessingTap *)tap;
- (void)processTap:(struct opaqueMTAudioProcessingTap *)tap sampleIndex:(long long)index numberFrames:(long long)frames flags:(unsigned int)flags audioBufferList:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x10; unsigned int x1; void * x2; } x[1] } *)list numberFramesOut:(long long *)out flagsOut:(unsigned int *)out;
- (void)finalizeTap:(struct opaqueMTAudioProcessingTap *)tap;
- (id)blockingPolicy;
- (void)_updateState:(long long)state;
- (void)_loadModel;
- (void)_tearDownTapData;
- (float)_processorLevelForVocalLevel:(float)level;
- (float)_vocalLevelForProcessorLevel:(float)level;
- (void)_startShutdownSequenceIfRelevant;
- (void)_stopShutdownSequenceIfRelevant;
- (void)vocalAttenuationPolicyControllerDidChange:(id)change;
- (void)engine:(id)engine didChangeToState:(unsigned long long)state;
- (void)engine:(id)engine willChangeToItem:(id)item fromItem:(id)item;
- (void)engineDidResetMediaServices:(id)services;
- (void)_emitStatisticsEvent;
@end

#endif /* MPCWhiskyController_h */
