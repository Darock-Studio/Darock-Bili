//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 104.0.1.0.0
//
#ifndef TAVisitState_h
#define TAVisitState_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "TACircularBuffer.h"
#include "TAInterVisitMetricsSnapshot.h"
#include "TAScanRequest.h"
#include "TAVisitStateSettings.h"

@class NSHashTable, NSMutableArray, NSMutableDictionary;

@interface TAVisitState : NSObject<NSSecureCoding>

@property (retain, nonatomic) TAVisitStateSettings *settings;
@property (retain, nonatomic) NSHashTable *observers;
@property (retain, nonatomic) TAScanRequest *scanRequest;
@property (retain, nonatomic) TAInterVisitMetricsSnapshot *interVisitMetricsSnapshotBackup;
@property (retain, nonatomic) NSMutableArray *nextPredictedLOIs;
@property (readonly, nonatomic) unsigned long long state;
@property (readonly, nonatomic) unsigned long long lastStateTransition;
@property (readonly, nonatomic) TACircularBuffer *visitSnapshotBuffer;
@property (readonly, nonatomic) TACircularBuffer *interVisitMetricSnapshotBuffer;
@property (readonly, nonatomic) NSMutableDictionary *importantLois;
@property (readonly, nonatomic) BOOL isInSensitiveVisit;

/* class methods */
+ (id)visitStateTypeToString:(unsigned long long)string;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithSettings:(id)settings scanRequestSettings:(id)settings;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)notifyObserversOfStateChangeFromState:(unsigned long long)state toState:(unsigned long long)state;
- (void)notifyObserversOfMetricsHint:(unsigned long long)hint;
- (void)ingestTAEvent:(id)taevent store:(id)store appendOutgoingRequestsTo:(id)to;
- (void)purgeWithClock:(id)clock;
- (unsigned long long)stateTransitionDecisionGivenTACLVisit:(id)taclvisit;
- (void)performStateTransitionDecision:(unsigned long long)decision store:(id)store visit:(id)visit andAppendOutgoingRequestsTo:(id)to;
- (void)openVisitSnapshotWithStore:(id)store visit:(id)visit andAppendOutgoingRequestsTo:(id)to;
- (void)closeVisitSnapshotWithStore:(id)store visit:(id)visit;
- (void)updateImportantLOIs:(id)lois currentDate:(id)date;
- (void)labelLoiTypeForLastVisitSnapshot:(id)snapshot;
- (void)issueVisitEntryScanRequestIfNecessaryWithOpenSnapshot:(id)snapshot clock:(id)clock andAppendOutgoingRequestsTo:(id)to;
- (void)issueInterVisitScanRequestIfNecessaryWithClosedSnapshot:(id)snapshot store:(id)store andAppendOutgoingRequestsTo:(id)to;
- (void)openInterVisitSnapshotWithStore:(id)store departureVisit:(id)visit;
- (void)closeLatestInterVisitSnapshotWithStore:(id)store arrivalVisit:(id)visit;
- (void)updateInterVisitSnapshotWithStore:(id)store;
- (void)openInterVisitBackupSnapshotWithArrivalVisit:(id)visit;
- (void)resetInterVisitBackupSnapshot;
- (void)updateInterVisitBackupSnapshotWithStore:(id)store;
- (unsigned long long)evaluateLatestVisitSnapshotAndRecoverIfNecessaryWithStore:(id)store andAppendOutgoingRequestsTo:(id)to;
- (id)getDisplayEventsWithFirstPrecedingInInterval:(id)interval store:(id)store;
- (void)updateInterVisitSnapshot:(id)snapshot store:(id)store;
- (void)purgeVisitSnapshotBufferWithCurrentDate:(id)date;
- (void)purgeInterVisitSnapshotBufferWithCurrentDate:(id)date;
- (id)getLatestValidVisitDepartureDate;
- (id)getLatestValidVisitArrivalDate;
- (id)getLatestValidVisit;
- (void)mergeWithAnotherTAVisitState:(id)state;
- (BOOL)shouldCreateNewVisitSnapshotFromUnknownState:(id)state;
- (void)recoverInterVisitSnapshotWithArrivalVisit:(id)visit store:(id)store;
- (id)description;
- (BOOL)isEqual:(id)equal;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* TAVisitState_h */
