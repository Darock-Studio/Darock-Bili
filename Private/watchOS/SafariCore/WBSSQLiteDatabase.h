//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBSSQLiteDatabase_h
#define WBSSQLiteDatabase_h
@import Foundation;

@class NSString, NSURL;
@protocol OS_dispatch_queue, WBSSQLiteDatabaseDelegate;

@interface WBSSQLiteDatabase : NSObject {
  /* instance variables */
  NSString *_lastSQLQuery;
}

@property (weak, nonatomic) NSObject<WBSSQLiteDatabaseDelegate> *delegate;
@property (readonly, nonatomic) struct sqlite3 * handle;
@property (readonly, nonatomic) NSURL *url;
@property (readonly, nonatomic) int lastErrorCode;
@property (readonly, nonatomic) NSString *lastErrorMessage;
@property (readonly, nonatomic) long long lastInsertRowID;
@property (readonly, nonatomic) long long changedRowCount;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;

/* class methods */
+ (void)initialize;
+ (id)inMemoryDatabaseURL;
+ (id)privateOnDiskDatabaseURL;
+ (id)_errorWithErrorCode:(int)code userInfo:(id)info;
+ (id)writeAheadLogURLForDatabaseURL:(id)url;
+ (id)writeAheadLogSharedMemoryURLForDatabaseURL:(id)url;

/* instance methods */
- (BOOL)tryToPerformTransactionInBlock:(id /* block */)block;
- (BOOL)enableWAL:(id *)wal;
- (id)checkIntegrity;
- (id)initWithURL:(id)url queue:(id)queue;
- (void)dealloc;
- (BOOL)openWithAccessType:(long long)type error:(id *)error;
- (BOOL)openWithAccessType:(long long)type vfs:(id)vfs error:(id *)error;
- (BOOL)openWithAccessType:(long long)type protectionType:(long long)type vfs:(id)vfs error:(id *)error;
- (int)close;
- (void)_reportSevereError:(id)error;
- (BOOL)reportErrorWithCode:(int)code statement:(struct sqlite3_stmt *)statement error:(id *)error;
- (BOOL)reportErrorWithCode:(int)code query:(id)query error:(id *)error;
- (BOOL)executeQuery:(id)query error:(id *)error;
- (id)fetchQuery:(id)query;
- (id)fetchQuery:(id)query stringArguments:(id)arguments;
- (int)checkpointWriteAheadLogWithLogFrameCount:(int *)count checkpointedFrameCount:(int *)count;
- (id)lastErrorWithMethodName:(const char *)name;
- (BOOL)_openWithFlags:(int)flags vfs:(id)vfs error:(id *)error;
- (void)setBusyTimeout:(double)timeout;
@end

#endif /* WBSSQLiteDatabase_h */
