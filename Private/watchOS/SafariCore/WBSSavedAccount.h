//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WBSSavedAccount_h
#define WBSSavedAccount_h
@import Foundation;

#include "WBSPasswordWarningHideMarker.h"

@class NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL;

@interface WBSSavedAccount : NSObject {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableDictionary *_siteToProtectionSpaces;
  NSMutableSet *_sitesForWhichSelfIsDefault;
  NSDate *_earliestPasswordCredentialModificationDate;
  NSDate *_earliestCreationDate;
  NSMutableDictionary *_sitesToSidecars;
}

@property (readonly, copy, nonatomic) NSMutableArray *_allPasswordSidecarsAsMutableArray;
@property (copy, nonatomic) NSString *password;
@property (copy, nonatomic) NSString *passkeyUserHandle;
@property (copy, nonatomic) NSString *passkeyCredentialID;
@property (copy, nonatomic) NSString *passkeyRelyingPartyID;
@property (copy, nonatomic) NSDate *creationDateForPasskey;
@property (copy, nonatomic) NSDate *lastModifiedDateForPasskey;
@property (copy, nonatomic) NSDate *lastUsedDateForPasskey;
@property (readonly, nonatomic) BOOL hasPasskeySidecars;
@property (copy, nonatomic) NSDictionary *passkeyCredentialSidecarsDictionary;
@property (retain, nonatomic) NSArray *persistentIdentifiersForWarningManager;
@property (readonly, nonatomic) NSArray *allSidecars;
@property (readonly, nonatomic) NSArray *allPasswordSidecars;
@property (readonly, nonatomic) BOOL hasSidecarData;
@property (readonly, nonatomic) BOOL hasPasswordSidecars;
@property (copy, nonatomic) NSString *notesEntry;
@property (nonatomic) BOOL shouldShowSpecificSubdomainForUserVisibleDomain;
@property (readonly, nonatomic) BOOL canBeExportedToPasswordsCSVFile;
@property (readonly, nonatomic) NSString *highLevelDomain;
@property (readonly, nonatomic) NSString *user;
@property (readonly, nonatomic) long long credentialTypes;
@property (readonly, copy, nonatomic) NSString *effectiveTitle;
@property (readonly, copy, nonatomic) NSString *effectiveTitleForSorting;
@property (readonly, copy, nonatomic) NSString *customTitle;
@property (readonly, nonatomic) NSArray *protectionSpaces;
@property (readonly, nonatomic) BOOL userIsNeverSaveMarker;
@property (readonly, copy, nonatomic) NSDate *lastModifiedDate;
@property (readonly, copy, nonatomic) NSDate *creationDate;
@property (readonly, nonatomic) NSArray *totpGenerators;
@property (readonly, nonatomic) NSString *currentOneTimeCode;
@property (readonly, nonatomic) NSArray *sites;
@property (readonly, nonatomic) NSString *userVisibleDomain;
@property (readonly, nonatomic) NSArray *userVisibleSites;
@property (readonly, copy, nonatomic) NSString *monogramCharacter;
@property (readonly, nonatomic) WBSPasswordWarningHideMarker *hideWarningMarker;
@property (readonly, nonatomic) BOOL isAppleIDPasskey;
@property (readonly, copy, nonatomic) NSString *uniqueIdentifierForPasswordManager;
@property (readonly, nonatomic) BOOL isOneTimeSharable;
@property (readonly, copy, nonatomic) NSURL *wellKnownChangePasswordURL;

/* class methods */
+ (void)enumerateRangesMatchingPatternWithTokenizer:(struct __CFStringTokenizer *)tokenizer string:(id)string pattern:(id)pattern matchingType:(long long)type withBlock:(id /* block */)block;
+ (BOOL)stringMatchesPatternWithTokenizer:(struct __CFStringTokenizer *)tokenizer string:(id)string pattern:(id)pattern matchingType:(long long)type;
+ (id)searchPatternForWebsiteComparisonFromSearchPattern:(id)pattern;

/* instance methods */
- (id)_initWithHighLevelDomain:(id)domain passkeyRelyingPartyID:(id)id user:(id)user password:(id)password passkeyUserHandle:(id)handle passkeyCredentialID:(id)id siteToProtectionSpaces:(id)spaces sitesToSidecars:(id)sidecars;
- (id)_initWithHighLevelDomain:(id)domain user:(id)user password:(id)password;
- (id)_initWithPasskeyRelyingPartyID:(id)id user:(id)user passkeyUserHandle:(id)handle passkeyCredentialID:(id)id;
- (id)description;
- (void)_addProtectionSpace:(id)space forSite:(id)site isDefaultCredentialForSite:(BOOL)site;
- (void)_addPasswordCredentialModificationDate:(id)date;
- (void)_addCreationDate:(id)date;
- (id)totpGeneratorForSite:(id)site;
- (void)setTOTPGenerator:(id)totpgenerator;
- (void)setCustomTitle:(id)title performSidecarUpdate:(BOOL)update;
- (id)lastUsedDateForContext:(id)context;
- (void)setLastUsedDate:(id)date forContext:(id)context;
- (BOOL)isDefaultCredentialForFullyQualifiedHostname:(id)hostname;
- (BOOL)hasSidecarDataToConsiderForCredentialMerging;
- (BOOL)_canMergeWithSavedAccount:(id)account requiresDataCopying:(BOOL *)copying;
- (BOOL)_isSidecarDataForCredentialMergingEqual:(id)equal;
- (BOOL)_isSidecarDataForCredentialMergingCompatible:(id)compatible;
- (id)_firstSidecarForAnySiteOfType:(long long)type;
- (id)_firstSidecarForAnySiteOfType:(long long)type inSitesToSidecars:(id)sidecars passkeySidecars:(id)sidecars;
- (id)_sidecarForSite:(id)site ofType:(long long)type;
- (id)_passkeySidecarOfType:(long long)type;
- (void)_addPasskeySidecar:(id)sidecar;
- (void)_mergePasskeySidecarsFromSavedAccount:(id)account;
- (void)enumeratePasswordSidecarsWithBlock:(id /* block */)block;
- (void)enumeratePasskeySidecarsWithBlock:(id /* block */)block;
- (void)_addSidecar:(id)sidecar forSite:(id)site;
- (id)_allSidecarsForSite:(id)site;
- (void)_updatePasswordSidecarsIfNecessaryWithBlock:(id /* block */)block;
- (void)_updatePasskeySidecarsIfNecessaryWithBlock:(id /* block */)block;
- (void)_createSidecarsForProtectionSpaceIfNecessary:(id)necessary;
- (BOOL)_containsProtectionSpace:(id)space;
- (void)_deleteCredentialForProtectionSpace:(id)space fromStorage:(id)storage;
- (void)_deleteCredentialTypes:(long long)types;
- (void)_deletePasswordCredentialsRemovingCachedCredentialData:(BOOL)data;
- (void)_removePasswordCredentialAndSidecars;
- (void)_deletePasswordCredentialsForSite:(id)site;
- (void)_deletePasskeyCredentialRemovingCachedCredentialData:(BOOL)data;
- (void)_removePasskeyCredentialAndSidecars;
- (void)_deleteSidecarsForPasskey;
- (void)_deleteSidecarForProtectionSpace:(id)space fromStorage:(id)storage;
- (void)_deleteTOTPGeneratorIfNecessary;
- (long long)compare:(id)compare;
- (BOOL)isDuplicateWithoutUserNameOfSavedAccount:(id)account;
- (BOOL)isEqualForSuggestingDuplicatesCleanup:(id)cleanup;
- (void)_setUser:(id)user password:(id)password;
- (void)_adoptSitesFromSavedAccount:(id)account;
- (BOOL)_allSitesHaveSameNonDefaultPort:(long long *)port;
- (id)_highLevelDomainWithPortIncluded;
- (BOOL)matchesUserTypedSearchPattern:(id)pattern associatedDomains:(id)domains;
- (BOOL)matchesServiceNameHintString:(id)string;
- (BOOL)matchesDomain:(id)domain associatedDomains:(id)domains;
- (BOOL)_matchesSearchPattern:(id)pattern matchAgainstUser:(BOOL)user associatedDomains:(id)domains;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (BOOL)hasProtectionSpace:(id)space;
- (BOOL)hasProtectionSpaceWithHighLevelDomainMatchingProtectionSpace:(id)space;
@end

#endif /* WBSSavedAccount_h */
