//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1814.300.81.4.2
//
#ifndef FTMessageDelivery_APS_h
#define FTMessageDelivery_APS_h
@import Foundation;

#include "FTMessageDelivery.h"
#include "APSConnectionDelegate-Protocol.h"
#include "FTMessageDeliveryAPSMobileNetworkManager-Protocol.h"
#include "FTMessageQueueDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol FTMessageDeliveryAPSConnection;

@interface FTMessageDelivery_APS : FTMessageDelivery<FTMessageQueueDelegate, APSConnectionDelegate> {
  /* instance variables */
  NSObject<FTMessageDeliveryAPSConnection> *_connection;
  NSObject<FTMessageDeliveryAPSMobileNetworkManager> *_mobileNetworkManager;
  Class _APSOutgoingMessageClass;
  NSMutableArray *_enabledTopics;
  NSMutableDictionary *_ftMessageMap;
  NSMutableDictionary *_startDateMap;
  NSMutableDictionary *_bodyMap;
  NSMutableDictionary *_apsMessageMap;
  NSMutableDictionary *_timerMap;
  NSMutableDictionary *_deathTimerMap;
  NSMutableDictionary *_retriesMap;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;

/* instance methods */
- (id)initWithAPSConnection:(id)apsconnection mobileNetworkManager:(id)manager;
- (id)init;
- (void)dealloc;
- (void)_setEnabledTopics:(id)topics;
- (void)_invalidateTimerForMessageID:(id)id;
- (void)_invalidateDeathTimerForMessageID:(id)id;
- (void)_setMapForMessage:(id)message apsMessage:(id)message messageBody:(id)body timeoutTime:(double)time timeoutSelector:(SEL)selector handlerBlock:(id /* block */)block retries:(id)retries;
- (void)_clearMapForMessageID:(id)id;
- (BOOL)_isBusyWithMessage:(id)message;
- (id)_currentAPSMessages;
- (id)_currentMessages;
- (id)allMessages;
- (id)_currentTimers;
- (long long)_retryCountForMessage:(id)message;
- (id)_bodyForMessage:(id)message;
- (id)_messageForAPSOutgoingMessage:(id)message;
- (id)_apsOutgoingMessageForFTMessage:(id)ftmessage;
- (BOOL)_fillMessageParameters:(id *)parameters ftMessage:(id *)message;
- (BOOL)_shouldSendSOSForFailure:(id)failure;
- (void)_noteMessageFailed:(id)failed ftMessage:(id)message retryBehavior:(int)behavior error:(id)error;
- (void)_noteMessageSucceeded:(id)succeeded ftMessage:(id)message error:(id)error result:(id)result resultCode:(long long)code;
- (void)_noteMessageACKd:(id)ackd ftMessage:(id)message;
- (void)_noteMessageSent:(id)sent ftMessage:(id)message body:(id)body;
- (void)_sendMessage:(id)message ftMessage:(id)message;
- (void)_messageACKTimedOut:(id)out;
- (void)_messageSendTimedOut:(id)out;
- (void)_messageCompletelyTimedOut:(id)out;
- (void)_messageNeedsRetry:(id)retry;
- (void)_messageAckGracePeriodTimedOut:(id)out;
- (id)_requiredTopics;
- (void)_updateTopics;
- (id)_apsMessageBodyForMessage:(id)message;
- (id)_apsMessageForMessage:(id)message body:(id)body;
- (void)_powerLogEvent:(id)event dictionary:(id)dictionary;
- (id)connection;
- (void)_notifyDelegateAboutError:(id)error resultCode:(long long)code forMessage:(id)message;
- (void)invalidate;
- (BOOL)_sendMessageAsynchronously:(id)asynchronously error:(id *)error;
- (void)_dequeueIfNeeded;
- (BOOL)busy;
- (void)queue:(id)queue hitTimeoutForMessage:(id)message;
- (void)cancelMessage:(id)message;
- (BOOL)sendMessage:(id)message;
- (void)_serverBagLoaded:(id)loaded;
- (void)connection:(id)connection didReceivePublicToken:(id)token;
- (void)connection:(id)connection didChangeConnectedStatus:(BOOL)status;
- (void)connection:(id)connection didReceiveMessageForTopic:(id)topic userInfo:(id)info;
- (void)connection:(id)connection didSendOutgoingMessage:(id)message;
- (void)connection:(id)connection didFailToSendOutgoingMessage:(id)message error:(id)error;
- (long long)maxMessageSize;
- (long long)maxLargeMessageSize;
@end

#endif /* FTMessageDelivery_APS_h */
