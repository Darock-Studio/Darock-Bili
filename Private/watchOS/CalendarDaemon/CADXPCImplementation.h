//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1163.2.1.0.0
//
#ifndef CADXPCImplementation_h
#define CADXPCImplementation_h
@import Foundation;

#include "CADAccessInterface-Protocol.h"
#include "CADAlarmEngineInterface-Protocol.h"
#include "CADBackupRestoreInterface-Protocol.h"
#include "CADCalendarInterface-Protocol.h"
#include "CADCalendarItemInterface-Protocol.h"
#include "CADCalendarToolInterface-Protocol.h"
#include "CADDatabaseInterface-Protocol.h"
#include "CADDatabaseStorageManagementInterface-Protocol.h"
#include "CADDiagnosticInterface-Protocol.h"
#include "CADErrorInterface-Protocol.h"
#include "CADEventInterface-Protocol.h"
#include "CADInternalInterface-Protocol.h"
#include "CADMigrationInterface-Protocol.h"
#include "CADNotificationCountInterface-Protocol.h"
#include "CADNotificationMonitorInterface-Protocol.h"
#include "CADObjectInterface-Protocol.h"
#include "CADSourceInterface-Protocol.h"
#include "CADSyncInterface-Protocol.h"
#include "CADTestingInterface-Protocol.h"
#include "ClientConnection.h"

@class NSString;

@interface CADXPCImplementation : NSObject<CADBackupRestoreInterface, CADAlarmEngineInterface, CADObjectInterface, CADErrorInterface, CADNotificationMonitorInterface, CADDatabaseInterface, CADDatabaseStorageManagementInterface, CADCalendarItemInterface, CADSyncInterface, CADMigrationInterface, CADNotificationCountInterface, CADDiagnosticInterface, CADAccessInterface, CADCalendarInterface, CADSourceInterface, CADInternalInterface, CADTestingInterface, CADCalendarToolInterface, CADEventInterface> {
  /* instance variables */
  unsigned long long _allowedAccess;
  unsigned long long _checkedAccess;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _accessLock;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) ClientConnection *conn;

/* class methods */
+ (void)monitorLocationAuthorizationStatusChanges:(unsigned long long)changes;

/* instance methods */
- (void)CADDatabaseGetDefaultLocalCalendarWithReply:(id /* block */)reply;
- (void)CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:(id)source withReply:(id /* block */)reply;
- (void)CADDatabaseSetDefaultCalendarForNewEvents:(id)events delegateSource:(id)source reply:(id /* block */)reply;
- (void)CADDatabaseGetOrCreateSubscribedCalendarsSource:(id /* block */)source;
- (void)CADDatabaseGetOrCreateBirthdayCalendar:(id /* block */)calendar;
- (void)CADDatabaseGetBirthdayCalendarEnabledWithReply:(id /* block */)reply;
- (void)CADDatabaseSetBirthdayCalendarEnabled:(BOOL)enabled withReply:(id /* block */)reply;
- (void)CADDatabaseGetBirthdayCalendarVersionWithReply:(id /* block */)reply;
- (void)CADDatabaseSetBirthdayCalendarVersion:(int)version withReply:(id /* block */)reply;
- (void)CADDatabaseGetSuggestedEventCalendarWithReply:(id /* block */)reply;
- (void)CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:(id /* block */)reply;
- (void)CADDatabaseInsertSuggestedEventCalendarWithReply:(id /* block */)reply;
- (void)CADDatabaseRemoveSuggestedEventCalendarWithReply:(id /* block */)reply;
- (void)CADDatabaseGetCreatorTeamIdentifierForEventWithObjectID:(id)id reply:(id /* block */)reply;
- (void)CADDatabaseIsCurrentProcessCreatorOfEventWithObjectID:(id)id reply:(id /* block */)reply;
- (void)CADDatabaseGetEventWithEventIdentifier:(id)identifier reply:(id /* block */)reply;
- (void)CADDatabaseGetEventWithUniqueID:(id)id reply:(id /* block */)reply;
- (void)CADDatabaseGetAllEventsWithUniqueID:(id)id reply:(id /* block */)reply;
- (void)CADDatabaseCanModifySuggestedEventCalendar:(id /* block */)calendar;
- (BOOL)_CADDatabaseCanModifySuggestedEventCalendar;
- (void)CADDatabaseGetSourceIdentifierForEventWithObjectID:(id)id reply:(id /* block */)reply;
- (id)_mergeDaysAndOccurrenceCounts:(id)counts withCounts:(id)counts;
- (void)CADOccurrenceCacheGetOccurrenceCountsForCalendars:(id)calendars reply:(id /* block */)reply;
- (void)CADOccurrenceCacheGetOccurrencesForCalendars:(id)calendars onDay:(id)day reply:(id /* block */)reply;
- (void)CADOccurrenceCacheGetOccurrenceDateOfEventWithObjectID:(id)id nearestDate:(id)date prefersForwardSearch:(BOOL)search reply:(id /* block */)reply;
- (void)CADOccurrenceCacheGetOccurrenceCountWithStartDate:(id)date endDate:(id)date reply:(id /* block */)reply;
- (void)CADOccurrenceCacheDoEvents:(id)events haveOccurrencesAfterDate:(id)date reply:(id /* block */)reply;
- (void)CADOccurrenceCacheSearchWithTerm:(id)term inCalendars:(id)calendars responseToken:(int)token reply:(id /* block */)reply;
- (void)CADOccurrenceCacheSearchLocationsWithTerm:(id)term inCalendars:(id)calendars responseToken:(int)token reply:(id /* block */)reply;
- (void)CADOccurrenceCacheCancelSearchWithReplyID:(int)id;
- (void)CADOccurrencesExistInRangeForEvent:(id)event startDate:(id)date endDate:(id)date mustStartInInterval:(BOOL)interval timezone:(id)timezone reply:(id /* block */)reply;
- (void)CADDatabaseShouldPermitOrganizerEmailFromJunkChecks:(id)checks reply:(id /* block */)reply;
- (void)CADDatabaseShouldPermitOrganizerPhoneNumberFromJunkChecks:(id)checks reply:(id /* block */)reply;
- (void)CADDatabaseGetAttachmentWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)CADDatabaseGetTTLLocationAuthorizationStatus:(id /* block */)status;
- (void)CADPurgeChangeTrackingReply:(id /* block */)reply;
- (void)CADPostSyntheticRouteHypothesis:(id)hypothesis forEventWithExternalURL:(id)url reply:(id /* block */)reply;
- (void)CADTestingSimulateDaemonCrash;
- (void)CADTestingCloseDatabase:(id /* block */)database;
- (void)CADInternalForceStatCollection:(id /* block */)collection;
- (void)CADInternalSetNextConferenceLinkRenewalToNow:(id /* block */)now;
- (void)CADInternalRemoveConferenceLinkRenewalDate:(id /* block */)date;
- (void)CADDatabaseGetSourcesWithFaultedProperties:(id)properties reply:(id /* block */)reply;
- (void)CADDatabaseGetLocalSourceWithEnableIfNeeded:(BOOL)needed reply:(id /* block */)reply;
- (void)CADDatabaseGetLocalBirthdaySource:(id /* block */)source;
- (id)constraintsData:(id)data error:(int *)error;
- (void)CADObjectGetConstraints:(id)constraints reply:(id /* block */)reply;
- (void)CADSourceGetNotificationCollection:(id)collection reply:(id /* block */)reply;
- (void)CADSourceRefresh:(id)refresh isUserRequested:(BOOL)requested reply:(id /* block */)reply;
- (void)CADCountCalendarItemsOfType:(int)type inSource:(id)source reply:(id /* block */)reply;
- (void)CADRemoveCalendarItemsOlderThanDate:(id)date ofType:(int)type inSource:(id)source reply:(id /* block */)reply;
- (void)CADSourceGetGrantedDelegatesList:(id)list reply:(id /* block */)reply;
- (void)CADSourceUpdateGrantedDelegate:(id)delegate action:(long long)action sourceID:(id)id reply:(id /* block */)reply;
- (void)CADSourceAddExchangeDelegateWithName:(id)name emailAddress:(id)address toSourceWithID:(id)id reply:(id /* block */)reply;
- (void)CADSourceRemoveExchangeDelegateWithID:(id)id reply:(id /* block */)reply;
- (int)_tryPerformBlockWithSourceID:(id)id forAction:(unsigned long long)action entityType:(int)type withBlock:(id /* block */)block;
- (int)_tryPerformBlockWithSourceID:(id)id forAction:(unsigned long long)action withBlock:(id /* block */)block;
- (void)CADDatabaseGetCalendarsWithFaultedProperties:(id)properties reply:(id /* block */)reply;
- (void)CADCalendar:(id)cadcalendar hasEvents:(id /* block */)events;
- (void)CADCalendar:(id)cadcalendar hasEventsWithRoomAsAttendee:(id /* block */)attendee;
- (int)_tryPerformBlockWithCalendarID:(id)id forAction:(unsigned long long)action withBlock:(id /* block */)block;
- (void)CADDatabaseSetInitializationOptions:(id)options reply:(id /* block */)reply;
- (void)CADDatabaseGetAccess:(id /* block */)access;
- (id)_hangAssertionForBlockingTCCCall;
- (id)_TCCPromptReasonStringForReason:(long long)reason;
- (void)CADDatabaseRequestAccessForEntityType:(unsigned long long)type desiredFullAccess:(BOOL)access isBlockingUIThread:(BOOL)uithread reason:(long long)reason reply:(id /* block */)reply;
- (void)CADDatabaseResetWithReply:(id /* block */)reply;
- (void)CADDiagnosticsCollectWithToken:(unsigned int)token options:(long long)options reply:(id /* block */)reply;
- (void)CADDiagnosticsCancelCollectionWithToken:(unsigned int)token reply:(id /* block */)reply;
- (void)CADDatabaseGetNotificationCountExcludingUncheckedCalendars:(BOOL)calendars expanded:(BOOL)expanded reply:(id /* block */)reply;
- (void)CADMigrateDatabaseIfNeeded:(id /* block */)needed;
- (void)CADDatabaseGetDeletableCalendars:(id /* block */)calendars;
- (void)CADDatabaseGetDeletableSources:(id /* block */)sources;
- (void)CADDatabaseGetCalendarItemWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)CADDatabaseGetCalendarItemsWithUUIDs:(id)uuids inCalendars:(id)calendars propertiesToLoad:(id)load reply:(id /* block */)reply;
- (void)CADDatabaseGetCalendarItemsWithUniqueIdentifier:(id)identifier inCalendar:(id)calendar reply:(id /* block */)reply;
- (void)CADDatabaseGetAlarmWithExternalID:(id)id reply:(id /* block */)reply;
- (void)CADDatabaseFetchCalendarItemsWithPredicate:(id)predicate entityType:(int)type fetchIdentifier:(int)identifier synchronous:(BOOL)synchronous reply:(id /* block */)reply;
- (void)CADDatabaseCancelFetchRequestWithIdentifier:(unsigned int)identifier;
- (void)CADDatabaseExportICSForCalendarItemWithID:(id)id occurrenceDate:(id)date options:(unsigned long long)options reply:(id /* block */)reply;
- (void)CADDatabaseGetStorageUsage:(id /* block */)usage;
- (unsigned long long)sizeCalendarDirectoryForDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database;
- (unsigned long long)sizeAttachmentsForDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database;
- (unsigned long long)sizeDirectoryAtPath:(id)path excludingDirectory:(id)directory;
- (void)CADDatabaseGetUUID:(id /* block */)uuid;
- (void)CADDatabaseRegisterForDetailedChangeTrackingInSource:(id)source reply:(id /* block */)reply;
- (void)CADDatabaseUnregisterForDetailedChangeTracking:(id /* block */)tracking;
- (void)CADDatabaseFetchChangedObjectIDs:(id /* block */)ids;
- (void)CADDatabaseFetchObjectChangesForEntityTypes:(id)types insideObject:(id)object reply:(id /* block */)reply;
- (void)CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceToken:(id)token reply:(id /* block */)reply;
- (void)CADDatabaseConsumeAllChangesUpToToken:(id)token except:(id)except reply:(id /* block */)reply;
- (void)CADDatabaseMarkIndividualChangesConsumed:(id)consumed reply:(id /* block */)reply;
- (struct __CFArray *)_copyToIntCFArrayRef:(id)ref;
- (struct __CFSet *)_copyToIntCFSetRef:(id)ref;
- (void)CADDatabaseGetSequenceToken:(id /* block */)token;
- (void)CADDatabaseGetChangesSinceSequenceToken:(id)token reply:(id /* block */)reply;
- (void)CADDatabaseGetChangedEntityIDsSinceTimestamp:(id)timestamp reply:(id /* block */)reply;
- (void)CADDatabaseCanModifyCalendarDatabase:(id /* block */)database;
- (BOOL)_CADDatabaseCanModifyCalendarDatabase;
- (void)CADDatabaseLastConfirmedSplashScreenVersion:(id /* block */)version;
- (void)CADDatabaseImportEvents:(id)events fromICSData:(id)icsdata intoCalendarsWithIDs:(id)ids optionsMask:(unsigned long long)mask batchSize:(int)size reply:(id /* block */)reply;
- (id)_importEvents:(id)events data:(id)data intoCalendarWithID:(id)id inDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database optionsMask:(unsigned long long)mask batchSize:(int)size outCalendarObjectID:(id *)id outError:(int *)error;
- (void *)_handleiTIPMesssageAndCopyEventFromDocument:(id)document data:(id)data database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database store:(void *)store accountInfo:(id)info options:(unsigned long long)options;
- (void)CADDatabaseExportICSDataForCalendarItems:(id)items options:(unsigned long long)options reply:(id /* block */)reply;
- (void)CADDatabaseExportICSDataForCalendar:(id)calendar options:(unsigned long long)options reply:(id /* block */)reply;
- (void)CADDatabaseSetShowsDeclinedEvents:(BOOL)events reply:(id /* block */)reply;
- (void)CADDatabaseRebuildOccurrenceCacheWithReply:(id /* block */)reply;
- (void)CADDatabaseCommitDeletes:(id)deletes updatesAndInserts:(id)inserts options:(long long)options andFetchChangesSinceTimestamp:(id)timestamp withReply:(id /* block */)reply;
- (int)findDatabaseForObject:(id)object withUpdates:(id)updates personas:(id *)personas accounts:(id *)accounts nextTempDBID:(int *)dbid;
- (int)insert:(id)insert deletes:(id)deletes updates:(id)updates insertedObjectIDMap:(id)idmap inDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database;
- (int)preflightAccessForDeletes:(id)deletes updates:(id)updates inDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database;
- (BOOL)_verifyClientAllowedToWriteValue:(id)value forKey:(id)key;
- (int)preflightObjectID:(id)id inDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database;
- (id)_insert:(id)_insert delete:(id)delete update:(id)update database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database error:(int *)error;
- (id)_insertObjectsWithTemporaryObjectIDs:(id)ids updates:(id)updates database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database error:(int *)error;
- (int)_deleteObjects:(id)objects database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database;
- (int)_updatePropertiesAndRelations:(id)relations database:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database insertedObjectMap:(id)map;
- (id)removeDuplicateEvents:(id)events;
- (BOOL)isDuplicateEvent:(id)event updates:(id)updates;
- (BOOL)shouldBlockSaveOfEvent:(id)event updates:(id)updates becauseOfExistingEvent:(void *)event;
- (BOOL)recurrenceRule:(void *)rule matchesProperties:(id)properties;
- (BOOL)location:(void *)location matchesProperties:(id)properties;
- (BOOL)object:(void *)object matchesProperties:(id)properties forKeys:(id)keys;
- (id)updatedOrInsertedObjectIDs:(id)ids relatedToEvent:(id)event;
- (id)owningEventForObject:(id)object withUpdates:(id)updates;
- (id)owningObjectForObject:(id)object withProperties:(id)properties;
- (void)CADDatabaseMigrateSubscribedCalendar:(id)calendar toSource:(id)source reply:(id /* block */)reply;
- (void)CADDatabaseGetDefaultAlarmOffsetForAllDay:(BOOL)day reply:(id /* block */)reply;
- (void)CADAnalyticsSendEvent:(id)event appendingClientBundleIDToPayload:(id)payload;
- (void)CADDatabaseStatsBySource:(id /* block */)source;
- (void)CADDatabaseGetSharedCalendarInvitationsWithReply:(id /* block */)reply;
- (void)CADCalendarSetClearedFromNotificationCenter:(id)center error:(id /* block */)error;
- (void)CADDatabaseGetResourceChanges:(id /* block */)changes;
- (void)CADDatabaseGetInviteReplyNotifications:(id /* block */)notifications;
- (void)CADDatabaseGetEventNotificationItemsAfterDate:(id)date excludingUncheckedCalendars:(BOOL)calendars filteredByShowsNotificationsFlag:(BOOL)flag reply:(id /* block */)reply;
- (void)CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:(id)identifier excludingDelegateSources:(BOOL)sources filteredByShowsNotificationsFlag:(BOOL)flag expanded:(BOOL)expanded reply:(id /* block */)reply;
- (void)CADDatabaseGetInboxRepliedSectionItems:(id /* block */)items;
- (void)CADResourceChange:(id)change setAlertedWithError:(id /* block */)error;
- (void)CADEventSetInvitationStatus:(int)status forEvents:(id)events error:(id /* block */)error;
- (void)CADDatabaseGetErrorCount:(id /* block */)count;
- (void)CADDatabaseGetEventsWithErrorsPerSource:(id /* block */)source;
- (void)CADObjectExists:(id)exists reply:(id /* block */)reply;
- (void)CADObjectsExist:(id)exist reply:(id /* block */)reply;
- (void)CADObject:(id)cadobject getPropertiesWithNames:(id)names reply:(id /* block */)reply;
- (void)CADObjects:(id)cadobjects getPropertiesWithNames:(id)names reply:(id /* block */)reply;
- (void)CADObject:(id)cadobject getPropertyWithName:(id)name reply:(id /* block */)reply;
- (void)CADObject:(id)cadobject getStringPropertyWithName:(id)name reply:(id /* block */)reply;
- (void)CADObject:(id)cadobject getNumberPropertyWithName:(id)name reply:(id /* block */)reply;
- (void)CADObject:(id)cadobject getDatePropertyWithName:(id)name reply:(id /* block */)reply;
- (void)CADObject:(id)cadobject getDataPropertyWithName:(id)name reply:(id /* block */)reply;
- (BOOL)_requiresSpecialEntitlementToReadSecurityScopedURLWrapperForProperty:(id)property;
- (void)CADObject:(id)cadobject getSecurityScopedURLWrapperPropertyWithName:(id)name reply:(id /* block */)reply;
- (void)CADObject:(id)cadobject getRelatedObjectWithRelationName:(id)name reply:(id /* block */)reply;
- (void)CADObject:(id)cadobject getRelatedObjectsWithRelationName:(id)name reply:(id /* block */)reply;
- (void)CADObjectIsManaged:(id)managed reply:(id /* block */)reply;
- (void)CADDatabaseGetAlarmWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)CADDatabaseGetAlarmOccurrencesInRangeFromStart:(id)start toEnd:(id)end inCalendars:(id)calendars reply:(id /* block */)reply;
- (id)_getAlarmOccurrencesInRangeFromStart:(id)start toEnd:(id)end inCalendars:(id)calendars forDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; struct CPRecordStore * x2; struct CalEventOccurrenceCache * x3; struct CalScheduledTaskCache * x4; void * x5; void * x6; struct __CFDictionary * x7; struct __CFDictionary * x8; struct os_unfair_lock_s { unsigned int x0; } x9; unsigned int x10; unsigned int x11; struct __CFArray * x12; struct __CFString * x13; struct __CFArray * x14; int x15; int x16; struct __CFString * x17; struct __CFURL * x18; struct __CFString * x19; struct __CFString * x20; unsigned long long x21; int x22; int x23; int x24; id /* block */ x25; struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x26; BOOL x27; struct __CFArray * x28; BOOL x29; struct __CFSet * x30; id x31; id x32; id x33; int x34; id x35; id x36; id x37; char * x38; unsigned int x39; unsigned int x40; int x41; unsigned long long x42; BOOL x43; BOOL x44; BOOL x45; BOOL x46; BOOL x47; BOOL x48; BOOL x49; } *)database databaseID:(int)id calendarIDsForThisDatabase:(id)database accessLogger:(id /* block */)logger;
- (id)_accountStoreForBackupRestore;
- (void)CADBackupToICBU:(id)icbu reply:(id /* block */)reply;
- (void)CADBackupDatabaseToFileNamed:(id)named inDirectory:(id)directory includeAttachments:(BOOL)attachments reply:(id /* block */)reply;
- (BOOL)_performRestoreOperation:(id /* block */)operation;
- (void)CADRestoreFromDatabaseBackupFileNamed:(id)named inDirectory:(id)directory includeAttachments:(BOOL)attachments reply:(id /* block */)reply;
- (void)CADRestoreFromICBU:(id)icbu reply:(id /* block */)reply;
- (id)initWithClientConnection:(id)connection;
- (BOOL)accessGrantedToPerformSelector:(SEL)selector;
- (BOOL)hasAccess:(unsigned long long)access;
- (BOOL)_hasAccess:(unsigned long long)access;
- (BOOL)_checkAccess:(unsigned long long)access;
- (void)clearCachedAuthorizationStatus;
@end

#endif /* CADXPCImplementation_h */
