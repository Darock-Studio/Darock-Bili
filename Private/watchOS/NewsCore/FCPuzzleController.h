//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.0.0.0.0
//
#ifndef FCPuzzleController_h
#define FCPuzzleController_h
@import Foundation;

#include "FCAssetManager.h"
#include "FCCoreConfigurationManager-Protocol.h"
#include "FCJSONEncodableObjectProviding-Protocol.h"
#include "FCPuzzleFetchOperationDelegate-Protocol.h"
#include "FCPuzzleRecordSource.h"
#include "FCPuzzleTypeController.h"

@class NSCache, NSString;

@interface FCPuzzleController : NSObject<FCPuzzleFetchOperationDelegate, FCJSONEncodableObjectProviding>

@property (retain, nonatomic) FCAssetManager *assetManager;
@property (retain, nonatomic) FCPuzzleRecordSource *puzzleRecordSource;
@property (retain, nonatomic) FCPuzzleTypeController *puzzleTypeController;
@property (retain, nonatomic) NSCache *fastCache;
@property (retain, nonatomic) NSObject<FCCoreConfigurationManager> *configurationManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithContentDatabase:(id)database assetManager:(id)manager puzzleTypeController:(id)controller puzzleRecordSource:(id)source configurationManager:(id)manager;
- (void)fetchPuzzlesForPuzzleIDs:(id)ids cachePolicy:(id)policy qualityOfService:(long long)service callbackQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)fetchPuzzleForPuzzleID:(id)id cachePolicy:(id)policy qualityOfService:(long long)service callbackQueue:(id)queue completionHandler:(id /* block */)handler;
- (id)createPuzzleForPuzzleType:(id)type identifier:(id)identifier title:(id)title subtitle:(id)subtitle puzzleDescription:(id)description dataResourceID:(id)id authors:(id)authors behaviorFlags:(long long)flags publishDate:(id)date isPaid:(BOOL)paid difficulty:(long long)difficulty difficultyDescription:(id)description thumbnailLargeURL:(id)url loadDate:(id)date teaserClue:(id)clue teaserAnswer:(id)answer teaserInfo:(id)info teaserDirection:(id)direction teaserNumber:(id)number language:(id)language blockedStorefrontIDs:(id)ids allowedStorefrontIDs:(id)ids minimumNewsVersion:(id)version isDeprecated:(BOOL)deprecated isDraft:(BOOL)draft lastModifiedDate:(id)date;
- (id)fastCachedPuzzleForID:(id)id;
- (id)slowCachedPuzzleForID:(id)id;
- (void)savePuzzleToCache:(id)cache;
- (void)_fetchPuzzleForPuzzleID:(id)id cachePolicy:(id)policy qualityOfService:(long long)service callbackQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_fetchPuzzlesForPuzzleIDs:(id)ids cachePolicy:(id)policy qualityOfService:(long long)service callbackQueue:(id)queue completionHandler:(id /* block */)handler;
- (id)_cachedPuzzleForPuzzleID:(id)id fastCacheOnly:(BOOL)only;
- (id)_cachedPuzzlesForPuzzleIDs:(id)ids fastCacheOnly:(BOOL)only;
- (void)_refreshPuzzlesBasedOnAgeForPuzzles:(id)puzzles;
- (void)_savePuzzlesToCache:(id)cache;
- (id)jsonEncodableObject;
- (id)_fetchOperationForPuzzleWithIDs:(id)ids;
- (void)puzzleFetchOperation:(id)operation didFetchPuzzles:(id)puzzles;
@end

#endif /* FCPuzzleController_h */
