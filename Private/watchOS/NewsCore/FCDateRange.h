//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.0.0.0.0
//
#ifndef FCDateRange_h
#define FCDateRange_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDate;

@interface FCDateRange : NSObject<NSCopying, NSSecureCoding>

@property (readonly, nonatomic) NSDate *startDate;
@property (readonly, nonatomic) NSDate *endDate;
@property (readonly, nonatomic) NSDate *earlierDate;
@property (readonly, nonatomic) NSDate *laterDate;
@property (readonly, nonatomic) BOOL isFinite;
@property (readonly, nonatomic) BOOL isFromInfinity;
@property (readonly, nonatomic) BOOL isToInfinity;
@property (readonly, nonatomic) double timeInterval;
@property (readonly, nonatomic) double absoluteTimeInterval;
@property (readonly, nonatomic) unsigned long long minMillisecondsTimeIntervalSince1970;
@property (readonly, nonatomic) unsigned long long maxMillisecondsTimeIntervalSince1970;

/* class methods */
+ (id)dateRangeWithStartDate:(id)date endDate:(id)date;
+ (id)dateRangeWithEarlierDate:(id)date laterDate:(id)date;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithStartDate:(id)date endDate:(id)date;
- (id)initWithEarlierDate:(id)date laterDate:(id)date;
- (id)initWithStartDate:(id)date timeInterval:(double)interval;
- (BOOL)containsDate:(id)date;
- (long long)compare:(id)compare;
- (BOOL)isWithinTimeInterval:(double)interval ofDateRange:(id)range;
- (BOOL)startsLaterThanDateRange:(id)range;
- (id)slicesWithTimeInterval:(double)interval;
- (id)sliceForDate:(id)date withInterval:(double)interval;
- (long long)sliceIndexForDate:(id)date withInterval:(double)interval;
- (id)intersectionWithDateRange:(id)range;
- (id)description;
- (id)timestampDescription;
- (id)copyWithZone:(struct _NSZone *)zone;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* FCDateRange_h */
