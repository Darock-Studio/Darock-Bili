//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.0.0.0.0
//
#ifndef FCTagController_h
#define FCTagController_h
@import Foundation;

#include "FCAssetManager.h"
#include "FCCKContentDatabase.h"
#include "FCCoreConfigurationManager-Protocol.h"
#include "FCCoreConfigurationObserving-Protocol.h"
#include "FCJSONEncodableObjectProviding-Protocol.h"
#include "FCOperationThrottler.h"
#include "FCOperationThrottlerDelegate-Protocol.h"
#include "FCTagRecordSource.h"
#include "FCTagsFetchOperationDelegate-Protocol.h"
#include "FCThreadSafeMutableDictionary.h"
#include "FCThreadSafeMutableSet.h"

@class NSMutableDictionary, NSString;

@interface FCTagController : NSObject<FCTagsFetchOperationDelegate, FCCoreConfigurationObserving, FCOperationThrottlerDelegate, FCJSONEncodableObjectProviding> {
  /* instance variables */
  FCCKContentDatabase *_contentDatabase;
  FCAssetManager *_assetManager;
  FCTagRecordSource *_tagRecordSource;
  NSObject<FCCoreConfigurationManager> *_configurationManager;
  FCThreadSafeMutableDictionary *_fastCache;
  FCOperationThrottler *_tagPrefetchThrottler;
  NSMutableDictionary *_prefetchedTags;
  FCOperationThrottler *_tagRefreshThrottler;
  FCThreadSafeMutableSet *_tagIDsNeedingRefresh;
}

@property (nonatomic) BOOL shouldPrefetchGlobalTags;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)isTagAllowed:(id)allowed;
+ (BOOL)isTagAllowedInContentStoreFront:(id)front;
+ (BOOL)isTagAllowedForNewsVersion:(id)version;

/* instance methods */
- (id)init;
- (id)initWithContentDatabase:(id)database assetManager:(id)manager tagRecordSource:(id)source configurationManager:(id)manager;
- (void)dealloc;
- (id)fastCachedTagForID:(id)id;
- (id)fastCachedTagsForIDs:(id)ids;
- (id)slowCachedTagForID:(id)id;
- (id)slowCachedTagsForIDs:(id)ids;
- (id)expectedFastCachedTagForID:(id)id;
- (id)fetchOperationForTagsWithIDs:(id)ids;
- (id)fetchOperationForTagsWithIDs:(id)ids includeParents:(BOOL)parents;
- (id)fetchOperationForTagsWithIDs:(id)ids includeChildren:(BOOL)children;
- (id)fetchOperationForTagsIncludingChildrenWithIDs:(id)ids softMaxAge:(double)age;
- (void)fetchTagsForTagIDs:(id)ids maximumCachedAge:(double)age qualityOfService:(long long)service completionHandler:(id /* block */)handler;
- (void)fetchTagsForTagIDs:(id)ids cachePolicy:(id)policy qualityOfService:(long long)service completionHandler:(id /* block */)handler;
- (void)fetchTagsForTagIDs:(id)ids qualityOfService:(long long)service callbackQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)fetchTagsForTagIDs:(id)ids includeParents:(BOOL)parents includeChildren:(BOOL)children qualityOfService:(long long)service callbackQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)fetchTagForTagID:(id)id qualityOfService:(long long)service callbackQueue:(id)queue completionHandler:(id /* block */)handler;
- (id)tagsForTagIDs:(id)ids predicate:(id /* block */)predicate;
- (id)tagsForTagIDs:(id)ids;
- (void)saveTagsToCache:(id)cache;
- (id)tagsForTagRecords:(id)records;
- (id)channelsForTagRecords:(id)records;
- (void)tagsFetchOperation:(id)operation didFetchTags:(id)tags;
- (void)configurationManager:(id)manager configurationDidChange:(id)change;
- (void)operationThrottler:(id)throttler performAsyncOperationWithCompletion:(id /* block */)completion;
- (id)jsonEncodableObject;
@end

#endif /* FCTagController_h */
