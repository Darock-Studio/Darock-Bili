//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.0.0.0.0
//
#ifndef FCCloudContext_h
#define FCCloudContext_h
@import Foundation;

#include "FCAVAssetFactoryType-Protocol.h"
#include "FCAVAssetPrewarming-Protocol.h"
#include "FCAccessChecker.h"
#include "FCAppActivityMonitor-Protocol.h"
#include "FCArticleController.h"
#include "FCAssetKeyManagerDelegate-Protocol.h"
#include "FCAssetManager.h"
#include "FCAudioPlaylist.h"
#include "FCBundleSubscriptionChangeObserver-Protocol.h"
#include "FCBundleSubscriptionManagerType-Protocol.h"
#include "FCCKDatabaseEncryptionDelegate-Protocol.h"
#include "FCCacheFlushing-Protocol.h"
#include "FCClientEndpointConnection.h"
#include "FCCommandQueue.h"
#include "FCContentContext-Protocol.h"
#include "FCContentContextInternal-Protocol.h"
#include "FCCoreConfigurationManager-Protocol.h"
#include "FCCurrentIssuesChecker-Protocol.h"
#include "FCESLInventory.h"
#include "FCEntitlementService.h"
#include "FCFeedDatabaseProtocol-Protocol.h"
#include "FCFeedPersonalizing-Protocol.h"
#include "FCFlintResourceManager.h"
#include "FCIssueReadingHistory.h"
#include "FCLocalAreasManager.h"
#include "FCNetworkBehaviorMonitor.h"
#include "FCNewsAppConfigurationManager-Protocol.h"
#include "FCNewsletterEndpointConnection.h"
#include "FCNewsletterManager-Protocol.h"
#include "FCNotificationController.h"
#include "FCNotificationsEndpointConnection.h"
#include "FCPaidAccessCheckerType-Protocol.h"
#include "FCPersonalizationData.h"
#include "FCPrivateChannelMembershipController.h"
#include "FCPrivateDataContext-Protocol.h"
#include "FCPrivateDataContextInternal-Protocol.h"
#include "FCPurchaseController.h"
#include "FCPurchaseManagerType-Protocol.h"
#include "FCPurchaseProviderType-Protocol.h"
#include "FCPushNotificationHandling-Protocol.h"
#include "FCPuzzleController.h"
#include "FCPuzzleHistory.h"
#include "FCPuzzleTypeController.h"
#include "FCPuzzleTypeSettings.h"
#include "FCReadingHistory.h"
#include "FCReadingList.h"
#include "FCShortcutList.h"
#include "FCSportsEventController.h"
#include "FCSubscriptionController.h"
#include "FCSubscriptionList.h"
#include "FCTagController.h"
#include "FCTagSettings.h"
#include "FCTestingContext-Protocol.h"
#include "FCTranslationManager.h"
#include "FCUserEventHistory.h"
#include "FCUserInfo.h"
#include "FCUserVectorManager.h"

@class NSString, NSURL;
@protocol FCBackgroundTaskable, FCLocalChannelsProvider, FCLocalRegionManager, FCOfflineArticleManagerType, FCPPTContext, FCWebURLResolutionEndpointConnection;

@interface FCCloudContext : NSObject<FCTestingContext, FCCKDatabaseEncryptionDelegate, FCAssetKeyManagerDelegate, FCBundleSubscriptionChangeObserver, FCContentContext, FCPrivateDataContext, FCCacheFlushing>

@property (retain, nonatomic) NSObject<FCContentContext> *contentContext;
@property (retain, nonatomic) NSObject<FCAppActivityMonitor> *appActivityMonitor;
@property (retain, nonatomic) NSObject<FCPrivateDataContext> *privateDataContext;
@property (retain, nonatomic) FCTranslationManager *translationManager;
@property (retain, nonatomic) FCLocalAreasManager *localAreasManager;
@property (retain, nonatomic) FCUserVectorManager *userVectorManager;
@property (retain, nonatomic) NSObject<FCCurrentIssuesChecker> *currentIssuesChecker;
@property (retain, nonatomic) NSObject<FCPaidAccessCheckerType> *paidAccessChecker;
@property (retain, nonatomic) FCAccessChecker *issueAccessChecker;
@property (retain, nonatomic) FCAccessChecker *articleAccessChecker;
@property (nonatomic) long long options;
@property (retain, nonatomic) FCEntitlementService *entitlementService;
@property (readonly, nonatomic) NSObject<FCFeedPersonalizing> *feedPersonalizer;
@property (readonly, nonatomic) FCNotificationsEndpointConnection *notificationsEndpointConnection;
@property (readonly, nonatomic) FCNewsletterEndpointConnection *newsletterEndpointConnection;
@property (readonly, nonatomic) FCCommandQueue *notificationsEndpointCommandQueue;
@property (readonly, nonatomic) FCCommandQueue *newsletterEndpointCommandQueue;
@property (readonly, nonatomic) FCSubscriptionController *subscriptionController;
@property (readonly, nonatomic) FCNotificationController *notificationController;
@property (readonly, nonatomic) FCSportsEventController *sportsEventController;
@property (readonly, nonatomic) FCPurchaseController *purchaseController;
@property (readonly, nonatomic) NSObject<FCPurchaseProviderType> *purchaseProvider;
@property (readonly, nonatomic) NSObject<FCPurchaseManagerType> *purchaseManager;
@property (readonly, nonatomic) NSObject<FCBundleSubscriptionManagerType> *bundleSubscriptionManager;
@property (readonly, nonatomic) FCNetworkBehaviorMonitor *networkBehaviorMonitor;
@property (retain, nonatomic) NSObject<FCLocalRegionManager> *localRegionProvider;
@property (retain, nonatomic) NSObject<FCLocalChannelsProvider> *localChannelsProvider;
@property (weak, nonatomic) NSObject<FCBackgroundTaskable> *backgroundTaskable;
@property (copy, nonatomic) id /* block */ offlineArticleManagerProvider;
@property (readonly, nonatomic) NSObject<FCOfflineArticleManagerType> *offlineArticleManager;
@property (readonly, nonatomic) FCESLInventory *eslInventory;
@property (readonly, nonatomic) FCCommandQueue *endpointCommandQueue;
@property (readonly, nonatomic) FCClientEndpointConnection *endpointConnection;
@property (readonly, nonatomic) NSObject<FCNewsletterManager> *newsletterManager;
@property (readonly, nonatomic) NSObject<FCWebURLResolutionEndpointConnection> *webURLResolutionEndpointConnection;
@property (readonly, nonatomic) BOOL deviceIsiPad;
@property (readonly, nonatomic) NSObject<FCPPTContext> *pptContext;
@property (readonly, nonatomic) BOOL isPrivateDataEncryptionEnabled;
@property (readonly, nonatomic) BOOL isPrivateDatabaseStartingUp;
@property (readonly, nonatomic) BOOL isPrivateDatabaseOnline;
@property (readonly, nonatomic) BOOL isPrivateDatabaseTemporarilySuspended;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *contentStoreFrontID;
@property (readonly, copy, nonatomic) NSString *supportedContentStoreFrontID;
@property (readonly, copy, nonatomic) NSString *contentEnvironment;
@property (readonly, nonatomic) NSObject<FCCoreConfigurationManager> *configurationManager;
@property (readonly, nonatomic) NSObject<FCNewsAppConfigurationManager> *appConfigurationManager;
@property (readonly, nonatomic) FCAssetManager *assetManager;
@property (readonly, nonatomic) NSObject<FCAVAssetPrewarming> *avAssetPrewarmer;
@property (readonly, nonatomic) NSObject<FCAVAssetFactoryType> *avAssetFactory;
@property (readonly, nonatomic) FCArticleController *articleController;
@property (readonly, nonatomic) FCTagController *tagController;
@property (readonly, nonatomic) FCPuzzleController *puzzleController;
@property (readonly, nonatomic) FCPuzzleTypeController *puzzleTypeController;
@property (readonly, nonatomic) FCFlintResourceManager *flintResourceManager;
@property (readonly, copy, nonatomic) NSString *contentDirectory;
@property (readonly, nonatomic) NSURL *assetCacheDirectoryURL;
@property (readonly, copy, nonatomic) NSString *tabiResourcesContentDirectory;
@property (readonly, copy, nonatomic) NSString *tabiModelsContentDirectory;
@property (readonly, nonatomic) NSObject<FCContentContextInternal> *internalContentContext;
@property (readonly, nonatomic) NSObject<FCFeedDatabaseProtocol> *feedDatabase;
@property (readonly, copy, nonatomic) NSString *contentEnvironmentToken;
@property (readonly, nonatomic) FCIssueReadingHistory *issueReadingHistory;
@property (readonly, nonatomic) FCPersonalizationData *personalizationData;
@property (readonly, nonatomic) FCPrivateChannelMembershipController *privateChannelMembershipController;
@property (readonly, nonatomic) FCReadingHistory *readingHistory;
@property (readonly, nonatomic) FCReadingList *readingList;
@property (readonly, nonatomic) FCPuzzleHistory *puzzleHistory;
@property (readonly, nonatomic) FCPuzzleTypeSettings *puzzleTypeSettings;
@property (readonly, nonatomic) FCShortcutList *shortcutList;
@property (readonly, nonatomic) FCAudioPlaylist *audioPlaylist;
@property (readonly, nonatomic) FCUserEventHistory *userEventHistory;
@property (readonly, nonatomic) FCSubscriptionList *subscriptionList;
@property (readonly, nonatomic) FCUserInfo *userInfo;
@property (readonly, nonatomic) FCTagSettings *tagSettings;
@property (readonly, nonatomic) NSObject<FCPushNotificationHandling> *privatePushNotificationHandler;
@property (readonly, nonatomic) BOOL privateDataSyncingEnabled;
@property (readonly, copy, nonatomic) NSString *privateDataDirectory;
@property (readonly, nonatomic) NSObject<FCPrivateDataContextInternal> *internalPrivateDataContext;

/* class methods */
+ (void)initialize;
+ (id)testingContext;
+ (id)testingContextWithDesiredHeadlineFieldOptions:(unsigned long long)options;

/* instance methods */
- (id)init;
- (id)initWithConfiguration:(id)configuration configurationManager:(id)manager contentHostDirectory:(id)directory privateDataHostDirectory:(id)directory privateDataActionProvider:(id)provider networkBehaviorMonitor:(id)monitor appActivityMonitor:(id)monitor desiredHeadlineFieldOptions:(unsigned long long)options feedUsage:(long long)usage lockStoreFrontIfNeeded:(BOOL)needed deviceIsiPad:(BOOL)pad backgroundTaskable:(id)taskable privateDataSyncAvailability:(id)availability pptContext:(id)context;
- (id)initWithConfiguration:(id)configuration configurationManager:(id)manager contentHostDirectory:(id)directory privateDataHostDirectory:(id)directory privateDataActionProvider:(id)provider networkBehaviorMonitor:(id)monitor appActivityMonitor:(id)monitor desiredHeadlineFieldOptions:(unsigned long long)options feedUsage:(long long)usage deviceIsiPad:(BOOL)pad backgroundTaskable:(id)taskable privateDataSyncAvailability:(id)availability pptContext:(id)context options:(long long)options;
- (id)initForTesting;
- (id)initForTestingWithDesiredHeadlineFieldOptions:(unsigned long long)options;
- (id)initWithContentContext:(id)context privateDataContext:(id)context networkBehaviorMonitor:(id)monitor options:(long long)options;
- (id)notificationsController;
- (void)ppt_overrideFeedEndpoint:(long long)endpoint;
- (void)ppt_prewarmFeedDatabase;
- (void)enableFlushingWithFlushingThreshold:(unsigned long long)threshold exceptForFlusher:(id)flusher;
- (void)enableFlushingWithFlushingThreshold:(unsigned long long)threshold;
- (void)setAggregateStoreProvider:(id)provider;
- (id)news_core_ConfigurationManager;
- (id)magazinesConfigurationManager;
- (id)recordSourceWithSchema:(id)schema;
- (id)recordTreeSourceWithRecordSources:(id)sources;
- (id)interestTokenForContentManifest:(id)manifest;
- (id)convertRecords:(id)records;
- (BOOL)isPrivateDataSyncingEnabled;
- (id)privateStoreWithName:(id)name version:(unsigned long long)version options:(unsigned long long)options;
- (id)insertTestArticle;
- (id)insertTestArticlesWithCount:(unsigned long long)count;
- (void)fetchPrivateDataEncryptionIsAllowedForDatabase:(id)database completion:(id /* block */)completion;
- (void)fetchPrivateDataEncryptionMigrationIsDesiredForDatabase:(id)database completion:(id /* block */)completion;
- (void)fetchPrivateDataEncryptionIsRequiredForDatabase:(id)database completion:(id /* block */)completion;
- (void)fetchOriginalDataShouldBeDeletedAfterMigrationForDatabase:(id)database completion:(id /* block */)completion;
- (void)fetchShouldSecureSubscriptionsForDatabase:(id)database completion:(id /* block */)completion;
- (BOOL)shouldAssetKeyManagerSimulateUnauthorizedAssetKeys:(id)keys;
- (void)bundleSubscriptionDidSubscribe:(id)subscribe;
- (void)_purchaseControllerDidAddALaCarteSubscription;
- (id)_createESLInventory;
@end

#endif /* FCCloudContext_h */
