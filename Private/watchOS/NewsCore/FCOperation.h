//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.0.0.0.0
//
#ifndef FCOperation_h
#define FCOperation_h
@import Foundation;

#include "NSOperation.h"
#include "FCOnce.h"
#include "FCOperation.h"
#include "FCOperationCanceling-Protocol.h"
#include "FCOperationIdentifying-Protocol.h"
#include "FCOperationPrioritizing-Protocol.h"

@class NFUnfairLock, NSDictionary, NSMutableArray, NSString;
@protocol OS_dispatch_group;

@interface FCOperation : NSOperation<FCOperationCanceling, FCOperationIdentifying, FCOperationPrioritizing> {
  /* instance variables */
  atomic BOOL _executing;
  atomic BOOL _finished;
  BOOL _childOperationsCancelled;
  id /* block */ _timedOutTest;
  NSMutableArray *_childOperations;
  NFUnfairLock *_childOperationsLock;
  FCOnce *_startOnce;
  NSObject<OS_dispatch_group> *_finishedGroup;
  id _retentionToken;
}

@property (nonatomic) double operationStartTime;
@property (nonatomic) unsigned long long retryCount;
@property (nonatomic) double timeoutDuration;
@property (nonatomic) BOOL isBackgroundDownloadOperation;
@property (copy, nonatomic) NSString *purpose;
@property (readonly, nonatomic) FCOperation *proxyOperation;
@property (readonly, copy, nonatomic) NSString *operationID;
@property (readonly, nonatomic) BOOL hasOperationStarted;
@property (readonly, copy, nonatomic) NSDictionary *errorUserInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *shortOperationDescription;
@property (readonly, nonatomic) NSString *longOperationDescription;
@property (nonatomic) long long relativePriority;

/* instance methods */
- (id)init;
- (void)dealloc;
- (BOOL)isExecuting;
- (BOOL)isFinished;
- (BOOL)isAsynchronous;
- (void)cancel;
- (void)setQualityOfService:(long long)service;
- (BOOL)validateOperation;
- (void)prepareOperation;
- (void)startIfNeeded;
- (void)start;
- (void)performOperation;
- (void)finishedPerformingOperationWithError:(id)error;
- (void)operationWillFinishWithError:(id)error;
- (void)operationDidFinishWithError:(id)error;
- (void)finishFromEarlyCancellation;
- (void)associateChildOperation:(id)operation;
- (void)associateChildOperations:(id)operations;
- (void)cancelChildOperations;
- (unsigned long long)propertiesInheritedByChildOperations;
- (unsigned long long)maxRetries;
- (BOOL)canRetryWithError:(id)error retryAfter:(id *)after;
- (void)resetForRetry;
- (id)throttleGroup;
- (BOOL)shouldStartThrottlingWithError:(id)error retryAfter:(double *)after;
- (BOOL)waitUntilFinishedWithTimeout:(double)timeout;
- (void)addCompletionHandler:(id /* block */)handler;
@end

#endif /* FCOperation_h */
