//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.0.0.0.0
//
#ifndef FCNewsletterManager_h
#define FCNewsletterManager_h
@import Foundation;

#include "FCAppActivityObserving-Protocol.h"
#include "FCAppleAccount-Protocol.h"
#include "FCAppleAccountObserver-Protocol.h"
#include "FCBundleSubscriptionManagerType-Protocol.h"
#include "FCCKPrivateDatabase.h"
#include "FCCommandQueue.h"
#include "FCNewsAppConfigurationManager-Protocol.h"
#include "FCNewsletterEndpointConnection.h"
#include "FCNewsletterManager-Protocol.h"
#include "FCUserInfo.h"

@class NFPromise, NSDate, NSHashTable, NSString;

@interface FCNewsletterManager : NSObject<FCNewsletterManager, FCAppActivityObserving, FCAppleAccountObserver>

@property (nonatomic) long long subscription;
@property (nonatomic) long long includeOptions;
@property (readonly, nonatomic) FCNewsletterEndpointConnection *endpointConnection;
@property (readonly, nonatomic) FCCommandQueue *endpointCommandQueue;
@property (readonly, nonatomic) NSObject<FCAppleAccount> *appleAccount;
@property (readonly, nonatomic) NSObject<FCNewsAppConfigurationManager> *appConfig;
@property (readonly, nonatomic) FCUserInfo *userInfo;
@property (copy, nonatomic) NSString *activeiTunesAccountName;
@property (readonly, nonatomic) NSObject<FCBundleSubscriptionManagerType> *bundleSubscriptionManager;
@property (readonly, nonatomic) FCCKPrivateDatabase *database;
@property (readonly, nonatomic) NSHashTable *observers;
@property (retain, nonatomic) NSDate *cacheExpiration;
@property (retain, nonatomic) NFPromise *updateSubscriptionPromise;
@property (retain, nonatomic) NFPromise *getWebTokenPromise;
@property (retain, nonatomic) NSString *cachedVector;
@property (copy) NSString *cachedWebToken;
@property (copy) NSDate *webTokenExpiration;
@property (readonly, nonatomic) BOOL enabled;
@property (readonly, nonatomic) long long activeNewsletter;
@property (readonly, nonatomic) BOOL isSubscribed;
@property (readonly, nonatomic) BOOL canSubscribe;
@property (readonly, nonatomic) BOOL canUnsubscribe;
@property (readonly, nonatomic) BOOL includeUserVector;
@property (readonly, nonatomic) BOOL includeBundleSubscribedVector;
@property (readonly, nonatomic) BOOL includeSportsVector;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithEndpointConnection:(id)connection endpointCommandQueue:(id)queue appleAccount:(id)account appConfig:(id)config userInfo:(id)info bundleSubscriptionManager:(id)manager privateDataContext:(id)context;
- (long long)subscriptionStatusForNewsletter:(long long)newsletter;
- (BOOL)canSubscribeToNewsletter:(long long)newsletter;
- (BOOL)isEligibleForIssues;
- (BOOL)isSignedIntoEmailAccount;
- (long long)issueOptinStatus;
- (BOOL)canOptIntoIssues;
- (BOOL)isOptedIntoIssues;
- (long long)updatedIncludeOptionsWithNewsletter:(long long)newsletter includeOptions:(long long)options;
- (void)subscribeTo:(long long)to includeOptions:(long long)options;
- (void)subscribeTo:(long long)to includeOptions:(long long)options completion:(id /* block */)completion;
- (long long)includeOptionsForNewsletter:(long long)newsletter;
- (void)subscribeTo:(long long)to;
- (void)subscribeTo:(long long)to completion:(id /* block */)completion;
- (void)subscribeFromPrivacyModalCTA;
- (void)subscribeFromPrivacyModalCTAWithCompletion:(id /* block */)completion;
- (void)unsubscribe;
- (void)optOutOfIssues;
- (id)forceSubscriptionThen:(id /* block */)then;
- (void)optIntoSports;
- (void)optOutOfSports;
- (id)updateSubscription;
- (id)forceUpdateSubscription;
- (id)getWebToken;
- (void)updateCacheWithNewsletterString:(id)string includeArray:(id)array;
- (BOOL)shouldSubmitPersonalizationVector;
- (void)submitPersonalizationVector:(id)vector subscribedBundleChannelIDs:(id)ids;
- (void)saveToCloudKitSubscribedChannels:(id)channels;
- (void)deletePersonalizationVector;
- (void)appleAccountChanged;
- (void)resetCaches;
- (void)activityObservingApplicationDidBecomeActive;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)notifyObservers;
- (double)cacheTimeout;
- (void)notifyObserversWithPreviousSubscription:(long long)subscription;
@end

#endif /* FCNewsletterManager_h */
