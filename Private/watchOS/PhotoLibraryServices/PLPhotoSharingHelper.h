//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLPhotoSharingHelper_h
#define PLPhotoSharingHelper_h
@import Foundation;

@interface PLPhotoSharingHelper : NSObject
/* class methods */
+ (void)accountSettingsChanged;
+ (void)photosPreferencesChanged;
+ (void)clearCachedAccountState;
+ (BOOL)_sharedStreamsEnabled;
+ (BOOL)sharedStreamsEnabledForPhotoLibraryURL:(id)url;
+ (BOOL)_sharedStreamsExplicitlyDisabled;
+ (BOOL)sharedStreamsExplictlyDisabledForPhotoLibraryURL:(id)url;
+ (id)sharingPersonID;
+ (id)sharingUsername;
+ (id)sharingFirstName;
+ (id)sharingLastName;
+ (id)sharingDisplayNameIncludingEmail:(BOOL)email allowsEmail:(BOOL)email;
+ (BOOL)accountMatchesEmail:(id)email;
+ (void)pollForAlbumListUpdates;
+ (void)pollForAlbumListUpdatesIfNecessary;
+ (void)retryOutstandingActivities;
+ (void)forgetSharingPersonID:(id)id;
+ (void)initializeMSPlatform;
+ (id)_pathToServerConfigurationCache;
+ (id)streamdVideoCache;
+ (void)updateSharedAlbumsCachedServerConfigurationLimits;
+ (void)_resetServerSideConfigurationDictionary;
+ (id)serverSideConfigurationDictionary;
+ (long long)_serverLimitValueForKey:(id)key withDefaultResult:(long long)result;
+ (struct CGSize { double x0; double x1; })videoPosterFrameDimension;
+ (long long)maxOwnedStreams;
+ (long long)maxSubscribedStreams;
+ (long long)maxAssetsPerStream;
+ (long long)maxSubscribersPerStream;
+ (long long)maxCommentsPerAsset;
+ (long long)maxCharactersPerComment;
+ (long long)maxNumDerivativesToDownloadPerPush;
+ (long long)maxNumDerivativesToPrefetchPerDay;
+ (long long)maxNumThumbnailsToPrefetchPerDay;
+ (long long)maxVideoLengthForPublishing;
+ (long long)maxGIFSizeForPublishing;
+ (BOOL)hasReachedLimitOfOwnedStreamsInLibrary:(id)library;
+ (BOOL)hasReachedLimitOfSubscribedStreamsInLibrary:(id)library;
+ (BOOL)canCreateStreamInPhotoLibrary:(id)library error:(id *)error;
+ (BOOL)canAcceptPendingInvitationForAlbum:(id)album error:(id *)error;
+ (BOOL)canSetUserCloudSharedLiked:(BOOL)liked forAssets:(id)assets error:(id *)error;
+ (id)_localizationKeyForAssets:(id)assets;
+ (void)updateLocalAlbumMetadataForMSASAlbum:(id)msasalbum info:(id)info;
+ (void)resetAllLocalState;
+ (void)deleteLocalAlbumsForMSASAlbumsWithGUIDs:(id)guids;
+ (void)deleteLocalAlbumsForMSASAlbumsWithGUID:(id)guid inviterAddress:(id)address;
+ (void)publishCloudSharedAlbumToServer:(id)server;
+ (void)_userDidDeleteSharedAlbum:(id)album;
+ (void)deleteCloudSharedAlbumFromServer:(id)server;
+ (void)updateCloudSharedAlbumMetadataOnServer:(id)server;
+ (void)updateCloudSharedAlbumPublicURLStateOnServer:(id)server;
+ (void)updateCloudSharedAlbumMultipleContributorsStateOnServer:(id)server;
+ (id)photoSharingOriginalFilenameForAsset:(id)asset;
+ (void)enqueueCloudSharedAssetsForPublishToServer:(id)server inSharedAlbum:(id)album;
+ (void)_userDidDeleteSharedAssets:(id)assets;
+ (void)deleteCloudSharedAssetsFromServer:(id)server inSharedAlbum:(id)album;
+ (BOOL)isCellularConnection;
+ (void)requestVideoPlaybackURLForAsset:(id)asset videoType:(unsigned long long)type completion:(id /* block */)completion;
+ (BOOL)removeCloudSharingDirectories:(id *)directories;
+ (void)sendPendingInvitationsForNewlyCreatedAlbum:(id)album;
+ (void)removeSubscribers:(id)subscribers fromOwnedAlbum:(id)album;
+ (void)unsubscribeFromAlbum:(id)album;
+ (void)acceptPendingInvitationForAlbum:(id)album completionHandler:(id /* block */)handler;
+ (void)declinePendingInvitationForAlbum:(id)album;
+ (void)markPendingInvitationAsSpamForAlbum:(id)album completionHandler:(id /* block */)handler;
+ (void)refreshSubscriberListForAlbumGUID:(id)guid;
+ (BOOL)hasPhoneInvitationForAlbum:(id)album;
+ (id)_phoneInvitationFailureFile;
+ (void)savePhoneInvitationFailuresForPhoneNumber:(id)number inAlbum:(id)album;
+ (id)_processPhoneFailuresQueue;
+ (id)_transactionWithName:(const char *)name;
+ (void)handlePhoneInvitationFailuresWithCompletionBlock:(id /* block */)block;
+ (void)publishCloudSharedCommentToServer:(id)server;
+ (void)deleteCommentWithGUIDFromServer:(id)server;
+ (id)videoDerivativesForAssetCollection:(id)collection withSpecifications:(id)specifications;
+ (id)_videoDerivativeForVideoAtURL:(id)url outputURL:(id)url withPreset:(id)preset reason:(id)reason outputFileType:(id)type;
+ (id)derivativesForMasterAsset:(id)asset withSpecifications:(id)specifications;
+ (double)derivedAssetSmallDimensionLimitForType:(int)type;
+ (id)temporaryUploadDerivativesPathForCollectionGUID:(id)guid pathExtension:(id)extension;
+ (id)temporaryDerivativePathForCollectionGUID:(id)guid uti:(id)uti;
+ (id)temporaryThumbnailPathForCollectionGUID:(id)guid;
+ (id)temporaryVideoPathForCollectionGUID:(id)guid;
+ (id)temporaryVideoPosterFramePathForCollectionGUID:(id)guid;
+ (id)temporarySmallVideoDerivativePathForCollectionGUID:(id)guid;
+ (id)temporaryLargeVideoDerivativePathForCollectionGUID:(id)guid;
+ (struct CGSize { double x0; double x1; })derivedAssetSizeForMasterSizeWidth:(double)width height:(double)height derivativeType:(int)type withSpecificationInfo:(id)info;
+ (void)markAlbumGUIDAsViewed:(id)viewed clearUnseenAssetsCount:(BOOL)count;
+ (void)markCommentsForAssetCollectionWithGUID:(id)guid asViewedWithLastViewedDate:(id)date;
+ (void)checkServerModelForAlbum:(id)album photoLibrary:(id)library;
+ (void)prioritizeDownloadsForAlbumGUID:(id)guid;
+ (BOOL)_recentlyRequestedDownloadAsset:(id)asset cloudPlaceholderKind:(short)kind;
+ (id)_downloadRequestQueue;
+ (BOOL)_derivativeExistsForAsset:(id)asset cloudPlaceholderKind:(short)kind;
+ (id)downloadNotificationForAssetwithUUID:(id)uuid cloudPlaceholderKind:(short)kind;
+ (void)downloadAsset:(id)asset cloudPlaceholderKind:(short)kind shouldPrioritize:(BOOL)prioritize shouldExtendTimer:(BOOL)timer;
+ (double)intervalBetweenPolls;
+ (double)intervalBetweenAlbumPolls;
+ (void)applicationIsInForeground:(BOOL)foreground photoLibraryURL:(id)url;
+ (void)pruneCloudSharingContentIfNecessaryInLibrary:(id)library;
+ (id)customSharedAlbumsExportsOutputDirectoryParent;
+ (id)_customSharedAlbumExportsOutputDirectoryForAssetWithUUID:(id)uuid;
+ (BOOL)processExportedFileURL:(id)url assetUUID:(id)uuid customExportsInfo:(id)info;
+ (void)_markStreamVideosAsPurgeable;
+ (unsigned long long)purgeableSpace;
+ (unsigned long long)purgeSpace:(unsigned long long)space;
+ (BOOL)isBreadcrumbDebugEnabled;
+ (id)directoryPathForUploadActivityForAlbumGUID:(id)guid create:(BOOL)create;
+ (id)directoryPathForDownloadActivityForAlbumGUID:(id)guid create:(BOOL)create;
+ (void)writeAlbumNameBreadCrumb:(id)crumb forAlbumGUID:(id)guid isUpload:(BOOL)upload;
+ (id)prefixForBreadcrumbState:(int)state;
+ (void)writeUploadDebugBreadcrumbForAssetCollections:(id)collections state:(int)state error:(id)error;
+ (void)writeDownloadDebugBreadcrumbForAsset:(id)asset albumGUID:(id)guid content:(id)content state:(int)state error:(id)error;
+ (void)deleteDebugBreadcrumbsForAlbumGUID:(id)guid;
+ (BOOL)debugAlwaysStreamSharedVideos;
+ (BOOL)debugDownloadThumbnailsOnly;
+ (BOOL)debugDownloadMetadataOnly;
+ (BOOL)debugDownloadAllDerivatives;
+ (BOOL)debugAutoAcceptInvitation;
@end

#endif /* PLPhotoSharingHelper_h */
