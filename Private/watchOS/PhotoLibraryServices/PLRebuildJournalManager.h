//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLRebuildJournalManager_h
#define PLRebuildJournalManager_h
@import Foundation;

#include "PLChangeHandlingNotificationObserver.h"
#include "PLJournalManager-Protocol.h"
#include "PLJournalManager.h"
#include "PLLibraryServicesManager.h"

@protocol OS_dispatch_group, OS_dispatch_queue;

@interface PLRebuildJournalManager : NSObject<PLJournalManager> {
  /* instance variables */
  PLLibraryServicesManager *_lsm;
  PLJournalManager *_journalManager;
  PLChangeHandlingNotificationObserver *_changeHandlingNotificationObserver;
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<OS_dispatch_group> *_startupWaitGroup;
  unsigned short _state;
}

/* class methods */
+ (id)name;
+ (id)baseURLFromPathManager:(id)manager;
+ (id)payloadClasses;
+ (BOOL)isEnabledWithPathManager:(id)manager error:(id *)error;
+ (BOOL)assetJournalExists:(id)exists error:(id *)error;
+ (BOOL)existingJournalsCompatibleForRebuild:(id)rebuild error:(id *)error;

/* instance methods */
- (id)initWithLibraryServicesManager:(id)manager;
- (void)start;
- (void)stop;
- (void)notifyWillRebuild;
- (void)notifyRebuildComplete;
- (void)_startAfterRebuild;
- (void)_start;
- (void)_retrySnapshot;
- (void)_registerForChangeHandlingNotifications;
- (void)_handleChangeHandlingNotificationWithTransaction:(id)transaction;
- (void)_unregisterForChangeHandlingNotifications;
- (void)snapshotJournalsForPayloadClassIDs:(id)ids withCompletionHandler:(id /* block */)handler;
- (BOOL)snapshotJournalsForPayloadClassIDs:(id)ids error:(id *)error;
- (void)_snapshotJournalsIgnoreHistoreIfNecessaryForPayloadClassIDs:(id)ids;
- (BOOL)_snapshotJournalsForPayloadClassIDs:(id)ids error:(id *)error;
- (BOOL)_performSnapshotIfNecessaryWithError:(id *)error;
- (BOOL)_performSnapshotForPayloadClassIDs:(id)ids error:(id *)error;
- (void)coalesceJournalsForPayloadClassIDs:(id)ids withChangeJournalOverThreshold:(float)threshold completionHandler:(id /* block */)handler;
- (BOOL)coalesceJournalsForPayloadClassIDs:(id)ids withChangeJournalOverThreshold:(float)threshold error:(id *)error;
- (BOOL)_coalesceJournalsForPayloadClassIDs:(id)ids withChangeJournalOverThreshold:(float)threshold error:(id *)error;
- (id)_newTransientContext;
- (BOOL)_replayFromCurrentHistoryToken;
- (void)recreateAllObjectsInManagedObjectContext:(id)context options:(unsigned char)options;
- (void)recreateAssetsInManagedObjectContext:(id)context options:(unsigned char)options progress:(id)progress;
- (void)recreateNonAssetsInManagedObjectContext:(id)context progress:(id)progress;
- (BOOL)_recreateResourcesForAsset:(id)asset withPayload:(id)payload resources:(id)resources recreateOptions:(unsigned char)options storeOptions:(id)options libraryID:(id)id isCPLEnabled:(BOOL)cplenabled;
- (void)_recreateAssetsInManagedObjectContext:(id)context options:(unsigned char)options progress:(id)progress;
- (void)_recreateNonAssetsInManagedObjectContext:(id)context progress:(id)progress;
- (id)assetsToImportFromAssetJournalInManagedObjectContext:(id)context outOnDiskURLs:(id)urls;
- (id)_assetsToImportFromAssetJournalInManagedObjectContext:(id)context outOnDiskURLs:(id)urls;
- (void)_removeLegacyPersistedMetadataIfNecessary;
@end

#endif /* PLRebuildJournalManager_h */
