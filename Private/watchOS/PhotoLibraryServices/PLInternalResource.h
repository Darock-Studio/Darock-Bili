//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLInternalResource_h
#define PLInternalResource_h
@import Foundation;

#include "PLManagedObject.h"
#include "PLAssetID-Protocol.h"
#include "PLCloudDeletable-Protocol.h"
#include "PLCloudMaster.h"
#include "PLFileSystemBookmark.h"
#include "PLFileSystemVolume.h"
#include "PLInternalResourceSidecarRepresentation.h"
#include "PLManagedAsset.h"
#include "PLResource-Protocol.h"
#include "PLResourceAvailabilityMarking-Protocol.h"
#include "PLResourceDataStore-Protocol.h"
#include "PLResourceDataStoreKey-Protocol.h"
#include "PLUniformTypeIdentifier.h"
#include "PLValidatesResourceModel-Protocol.h"

@class NSData, NSDate, NSNumber, NSString;

@interface PLInternalResource : PLManagedObject<PLResource, PLValidatesResourceModel, PLResourceAvailabilityMarking, PLCloudDeletable>

@property (retain, @dynamic, nonatomic) NSString *compactUTI;
@property (@dynamic, nonatomic) short utiConformanceHint;
@property (@dynamic, nonatomic) unsigned int resourceType;
@property (@dynamic, nonatomic) unsigned int version;
@property (@dynamic, nonatomic) unsigned int recipeID;
@property (retain, nonatomic) PLUniformTypeIdentifier *uniformTypeIdentifier;
@property (readonly, nonatomic) unsigned int orientation;
@property (@dynamic, nonatomic) long long unorientedWidth;
@property (@dynamic, nonatomic) long long unorientedHeight;
@property (retain, @dynamic, nonatomic) NSString *codecFourCharCodeName;
@property (readonly, nonatomic) long long orientedWidth;
@property (readonly, nonatomic) long long orientedHeight;
@property (retain, @dynamic, nonatomic) PLManagedAsset *asset;
@property (readonly, @dynamic, nonatomic) BOOL isDerivative;
@property (@dynamic, nonatomic) short localAvailability;
@property (@dynamic, nonatomic) short localAvailabilityTarget;
@property (@dynamic, nonatomic) short remoteAvailability;
@property (@dynamic, nonatomic) short remoteAvailabilityTarget;
@property (@dynamic, nonatomic) short dataStoreClassID;
@property (@dynamic, nonatomic) long long dataStoreSubtype;
@property (copy, @dynamic, nonatomic) NSData *dataStoreKeyData;
@property (@dynamic, nonatomic) long long dataLength;
@property (@dynamic, nonatomic) long long fileID;
@property (retain, @dynamic, nonatomic) NSString *fingerprint;
@property (@dynamic, nonatomic) short trashedState;
@property (retain, @dynamic, nonatomic) NSDate *trashedDate;
@property (retain, @dynamic, nonatomic) NSString *cloudDeleteAssetUUIDWithResourceType;
@property (readonly, nonatomic) int qualitySortValue;
@property (retain, @dynamic, nonatomic) PLFileSystemBookmark *fileSystemBookmark;
@property (retain, @dynamic, nonatomic) PLFileSystemVolume *fileSystemVolume;
@property (retain, @dynamic, nonatomic) NSNumber *sidecarIndex;
@property (@dynamic, nonatomic) long long ptpTrashedState;
@property (readonly, nonatomic) PLInternalResourceSidecarRepresentation *sidecarRepresentation;
@property (@dynamic, nonatomic) short cloudLocalState;
@property (retain, @dynamic, nonatomic) NSDate *cloudMasterDateCreated;
@property (retain, @dynamic, nonatomic) NSDate *cloudLastOnDemandDownloadDate;
@property (retain, @dynamic, nonatomic) NSDate *cloudLastPrefetchDate;
@property (@dynamic, nonatomic) short cloudPrefetchCount;
@property (retain, @dynamic, nonatomic) NSDate *cloudPrunedAt;
@property (@dynamic, nonatomic) int cloudSourceType;
@property (retain, @dynamic, nonatomic) PLCloudMaster *transientCloudMaster;
@property (readonly, @dynamic, nonatomic) unsigned long long cplType;
@property (readonly, nonatomic) float scale;
@property (readonly, copy, nonatomic) NSObject<PLAssetID> *assetID;
@property (readonly, nonatomic) NSObject<PLResourceDataStore> *dataStore;
@property (readonly, nonatomic) NSObject<PLResourceDataStoreKey> *dataStoreKey;
@property (readonly, @dynamic, nonatomic) long long estimatedDataLength;
@property (readonly, nonatomic) BOOL isOriginalResource;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (@dynamic, nonatomic) short cloudDeleteState;
@property (readonly) long long cloudDeletionType;
@property (readonly, copy) NSString *cloudUUIDForDeletion;

/* class methods */
+ (id)resourceForManagedAsset:(id)asset sharedStreamsType:(unsigned int)type managedObjectContext:(id)context error:(id *)error;
+ (id)insertResourceForMasterObjectID:(id)id withExternalCPLResource:(id)cplresource inManagedObjectContext:(id)context;
+ (BOOL)isCPLJPEGThumbnailResource:(id)resource;
+ (id)originalCPLResourceTypesForMaster;
+ (id)originalCPLResourceTypesForAsset;
+ (id)originalCPLResourceTypes;
+ (id)nonOriginalCPLResourceTypes;
+ (unsigned long long)cplExpungedStateForTrashedState:(short)state;
+ (short)plTrashedStateForCPLExpungedState:(unsigned long long)state;
+ (void)resetCloudResourcesStateForCloudInManagedObjectContext:(id)context hardReset:(BOOL)reset;
+ (void)resetPrefetchStateForResourcesWithVersion:(unsigned int)version cplType:(unsigned long long)type assetUuids:(id)uuids inLibrary:(id)library;
+ (unsigned long long)bytesForAllResourcesInLibrary:(id)library;
+ (unsigned long long)bytesNeededToDownloadOriginalResourcesInLibrary:(id)library;
+ (id)predicateForAllOriginalResourcesLocallyAvailable;
+ (id)predicateForAllFullSizeResourcesLocallyAvailable;
+ (id)prefetchResourcePredicateForCPLResourceType:(unsigned long long)type isAssetResource:(BOOL)resource maxRetry:(unsigned long long)retry excludeDynamicResources:(BOOL)resources additionalResourcePredicates:(id)predicates;
+ (id)predicateForImageResourcePixelsLessOrEqual:(long long)equal;
+ (id)predicateForResourceCreatedAfterDate:(id)date;
+ (id)predicateForMaxFilesize:(unsigned long long)filesize;
+ (id)predicateForResourceIsNotLocallyAvailableWithCPLResourceType:(unsigned long long)type version:(unsigned int)version;
+ (id)prunePredicateForCPLResourceTypes:(id)types;
+ (id)predicateForOriginalsToDownload;
+ (id)predicateForAvailableResources;
+ (id)predicateForPurgeableOriginalResources;
+ (id)purgeablePushedPredicateForCPLResourceTypes:(id)types urgency:(long long)urgency;
+ (void)triggerBackgroundDownloadFailureForResources:(id)resources cloudPhotoLibraryManager:(id)manager;
+ (id)predicateForSyndicationResourcesRequiringSanitization;
+ (id)predicateForSyndicationResourcesRequiringBackgroundDownload;
+ (id)entityName;
+ (id)listOfSyncedProperties;
+ (BOOL)supportsTrashedStateForResourceIdentity:(id)identity;
+ (long long)cloudDeletionTypeForTombstone:(id)tombstone;
+ (id)cloudUUIDKeyForDeletion;
+ (id)insertResourceForAssetObjectID:(id)id resourceIdentity:(id)identity inManagedObjectContext:(id)context;
+ (id)_obsoleteResourceRecipesWithCPLOff;
+ (BOOL)deleteObsoleteResourcesInManagedObjectContext:(id)context error:(id *)error;
+ (BOOL)batchResetFileIDInManagedObjectContext:(id)context error:(id *)error;

/* instance methods */
- (BOOL)isValidForJournalPersistence;
- (id)payloadID;
- (id)payloadForChangedKeys:(id)keys;
- (void)updateResourceForMasterExternalCPLResource:(id)cplresource inManagedObjectContext:(id)context;
- (void)setCloudAttributesWithExternalResource:(id)resource;
- (BOOL)isCPLResource;
- (BOOL)isCPLMasterResource;
- (BOOL)isCPLAssetResource;
- (BOOL)isCPLJPEGThumbnail;
- (BOOL)isCPLOriginalResource;
- (BOOL)isCPLOriginalResourceAssetHasAdjustments:(BOOL)adjustments;
- (id)expungeableResourceStateRepresentation;
- (id)cplResourceForTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
- (id)cplResourceIncludeFile:(BOOL)file;
- (id)cplResourceIncludeFile:(BOOL)file createDirectoryIfNeeded:(BOOL)needed;
- (id)cplResourceForFileURL:(id)url createDirectoryIfNeeded:(BOOL)needed;
- (void)transitional_reconsiderLocalAvailabilityBasedOnExistingLocationOfCPLResourceAtFilePath:(id)path;
- (id)cplFileURL;
- (void)resetPrefetchState;
- (BOOL)copyPurgeabilityFromFileURL:(id)url;
- (id)scopedIdentifier;
- (BOOL)canRepresentAsSidecar;
- (id)referenceMediaFileURL;
- (void)ensureInitialValuesForSyndication;
- (void)setSyndicationLocalAvailabilityWithAvailable:(BOOL)available additionalFlags:(unsigned short)flags;
- (void)setSyndicationLocalAvailabilityWithAvailable:(BOOL)available;
- (void)clearRequiresSanitizationFlag;
- (id)_libraryID;
- (BOOL)_colorSpaceIsNativeForDisplay;
- (id)_avAssetProxyIfTypeIsFullSizeOrOriginal;
- (BOOL)supportsCloudUpload;
- (BOOL)isSyncableChange;
- (BOOL)supportsTrashedState;
- (BOOL)isTrashedOrExpunged;
- (void)applyTrashedState:(short)state;
- (void)applyTrashedState:(short)state trashedDate:(id)date;
- (BOOL)shouldPersistTrashedState;
- (void)persistTrashedStateToFilesystem;
- (void)prepareForDeletion;
- (void)willSave;
- (id)validateForAssetID:(id)id resourceIdentity:(id)identity;
- (BOOL)isVirtual;
- (float)scaleGivenAssetHasAdjustments:(BOOL)adjustments currentWidth:(long long)width currentHeight:(long long)height;
- (BOOL)isPlayableVideo;
- (BOOL)isInCloud;
- (id)validatedExternalResourceRepresentationUsingFileURL:(id)url;
- (BOOL)repairResourceValidationErrors:(id)errors managedObjectContext:(id)context;
- (void)setResourceIdentity:(id)identity managedObjectContext:(id)context;
- (id)fileURL;
- (id)expectedFileURL;
- (BOOL)isDefaultOrientation;
- (BOOL)isAdjustedResource;
- (BOOL)isAdjustedFullSizeRenderResource;
- (void)markAsLocallyAvailableWithFilePath:(id)path;
- (void)markAsNotLocallyAvailable;
- (void)markAsNotLocallyAvailableAfterPurge;
- (void)deleteResource;
- (BOOL)isLocallyAvailable;
- (BOOL)isRemotelyAvailable;
- (id)purgeIfPossibleReturningError:(id *)error;
- (BOOL)hasInvalidFileID;
- (void)makeResourceLocallyAvailableWithCompletion:(id /* block */)completion;
- (id)photosCTLDescription;
- (id)photosCTLJSONDict;
- (id)singleLineDescription;
- (id)redactedDescription;
@end

#endif /* PLInternalResource_h */
