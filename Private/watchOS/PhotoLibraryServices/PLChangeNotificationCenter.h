//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLChangeNotificationCenter_h
#define PLChangeNotificationCenter_h
@import Foundation;

#include "PLChangeList.h"
#include "PLContentChanges.h"
#include "PLManagedObjectContext.h"

@class NSDictionary, NSMutableArray, NSMutableSet, NSNotificationCenter, NSNumber;
@protocol OS_dispatch_queue;

@interface PLChangeNotificationCenter : NSObject {
  /* instance variables */
  BOOL _isProcessingRemoteDidSave;
  int _cameraPreviewChangeListenerCount;
  NSNumber *_cameraPreviewChangedToken;
  NSObject<OS_dispatch_queue> *_notificationHandlingQueue;
  NSMutableArray *_snapshots;
  PLChangeList *_changedAlbumLists;
  PLContentChanges *_albumListsContent;
  PLChangeList *_changedAlbums;
  PLContentChanges *_albumsContent;
  PLChangeList *_changedAssets;
  NSMutableSet *_assetsWithCloudCommentChanges;
  PLContentChanges *_momentsContent;
  PLChangeList *_changedMoments;
  PLChangeList *_changedCloudFeedEntries;
  PLManagedObjectContext *_moc;
  NSMutableArray *_enqueuedNotifications;
  NSDictionary *_remoteNotificationData;
  BOOL _isOverloaded;
  NSMutableSet *_overloadedObjects;
}

@property (readonly, retain, nonatomic) NSNotificationCenter *backingCenter;
@property (readonly, nonatomic) BOOL _shouldForceFetchingAlbumsToReload;

/* class methods */
+ (id)defaultCenter;
+ (id)allManagedObjectKeysStrategyWithContext:(id)context;
+ (void)getInsertedAssetCount:(unsigned long long *)count deletedAssetCount:(unsigned long long *)count updatedAssets:(id)assets fromContextDidChangeNotification:(id)notification;
+ (void)forceFetchingAlbumReload;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)enqueueNotification:(id)notification;
- (void)addAssetContainerChangeObserver:(id)observer container:(id)container;
- (void)removeAssetContainerChangeObserver:(id)observer container:(id)container;
- (void)addAssetContainerListChangeObserver:(id)observer containerList:(id)list;
- (void)removeAssetContainerListChangeObserver:(id)observer containerList:(id)list;
- (void)addCloudCommentsChangeObserver:(id)observer asset:(id)asset;
- (void)removeCloudCommentsChangeObserver:(id)observer asset:(id)asset;
- (void)addInvitationRecordsObserver:(id)observer;
- (void)removeInvitationRecordsObserver:(id)observer;
- (void)addCloudFeedEntriesObserver:(id)observer;
- (void)removeCloudFeedEntriesObserver:(id)observer;
- (void)addAssetChangeObserver:(id)observer;
- (void)removeAssetChangeObserver:(id)observer;
- (void)addShouldReloadObserver:(id)observer;
- (void)removeShouldReloadObserver:(id)observer;
- (void)addObserver:(id)observer selector:(SEL)selector name:(id)name object:(id)object;
- (id)addObserverForName:(id)name object:(id)object queue:(id)queue usingBlock:(id /* block */)block;
- (void)removeObserver:(id)observer;
- (void)removeObserver:(id)observer name:(id)name object:(id)object;
- (void)processContextDidChangeNotification:(id)notification;
- (void)processContextDidSaveObjectIDsNotification:(id)notification;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (id)_orderedRelationshipsOfInterestForObject:(id)object;
- (id)_attributesOfInterestForObject:(id)object;
- (id)_toOneRelationshipsOfInterestForObject:(id)object;
- (void)enumerateIndexMappingCachesForObject:(id)object withBlock:(id /* block */)block;
- (void)postShouldReloadNotificationWithPhotoLibrary:(id)library;
- (void)_sendNotificationsForSplitChanges;
- (void)_enqueuePhotoLibraryNotifications;
- (void)_enqueueAlbumListNotifications;
- (void)_enqueueAlbumNotifications;
- (void)_enqueueCloudCommentsNotifications;
- (void)_enqueueCloudFeedEntriesChangeNotifications;
- (void)_enqueueMomentChangeNotifications;
- (void)_enqueueAssetChangeNotification;
- (void)_cleanupState;
- (void)_splitContextDidChangeNotification:(id)notification;
- (void)_evaluateContainersWithUpdatedContent;
- (void)_evaluateUpdatedAssets;
- (void)_enqueueAssetContainerChangeNotification:(id)notification;
- (void)_enqueueInvitationRecordsChangeNotification:(id)notification;
- (void)_enqueueAlbumChangeNotification:(id)notification;
- (void)_enqueueAssetContainerListChangeNotification:(id)notification;
- (void)_enqueueNotification:(id)notification object:(id)object userInfo:(id)info;
- (void)_enqueueNotification:(id)notification object:(id)object userInfoWithObjects:(const id *)objects forKeys:(const id *)keys count:(unsigned long long)count;
- (void)_postEnqueuedNotifications;
- (BOOL)_isInterestedInUpdatesOfObject:(id)object;
- (id)_keysOfInterestForObject:(id)object;
- (id)descriptionOfSplitChanges;
- (id)_snapshotForObject:(id)object;
- (void)_takeSnapshotsFromContext:(id)context forRemoteContextSaveNotification:(id)notification usingObjectIDs:(BOOL)ids;
- (id)_takeSnapshotOfObject:(id)object;
- (id)_takeSnapshotFromCommittedValuesOfObject:(id)object;
- (id)_takeSnapshotOfObject:(id)object useCommitedValues:(BOOL)values;
- (void)managedObjectContextWillBeOverloaded:(id)overloaded withNotificationData:(id)data usingObjectIDs:(BOOL)ids;
- (void)managedObjectContextWasOverloaded:(id)overloaded withNotificationData:(id)data usingObjectIDs:(BOOL)ids;
- (void)managedObjectContext:(id)context willProcessRemoteContextSave:(id)save usingObjectIDs:(BOOL)ids isCoalescedEvent:(BOOL)event;
- (void)managedObjectContext:(id)context didProcessRemoteContextSave:(id)save usingObjectIDs:(BOOL)ids;
- (void)_registerForCameraPreviewWellChanges;
- (void)_unregisterForCameraPreviewWellChanges;
- (void)addCameraPreviewWellImageChangeObserver:(id)observer;
- (id)observeCameraPreviewWellImageChangeOnQueue:(id)queue block:(id /* block */)block;
- (void)removeCameraPreviewWellImageChangeObserver:(id)observer;
@end

#endif /* PLChangeNotificationCenter_h */
