//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLRelationshipOrderKeyManager_h
#define PLRelationshipOrderKeyManager_h
@import Foundation;

@class NSMutableDictionary;

@interface PLRelationshipOrderKeyManager : NSObject {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableDictionary *_locationsCache;
  NSMutableDictionary *_enqueuedFolderAlbumsOrderValueUpdates;
  NSMutableDictionary *_enqueuedAlbumAssetsOrderValueUpdates;
}

@property BOOL inWriteStashedLocationMode;
@property (copy, nonatomic) id /* block */ generateContextBlock;
@property (readonly, nonatomic) BOOL hasStashedLocationValues;
@property (readonly, nonatomic) BOOL conflictDetected;

/* class methods */
+ (id)new;
+ (long long)compareOrderKeyObject:(id)object withObject:(id)object;

/* instance methods */
- (void)migration_ensureValidOrderKey:(id)key usingOrderValuePropertyKey:(id)key;
- (void)migration_fixupOrderKeys:(id)keys usingOrderValuePropertyKey:(id)key enforceSingletonAlbumReservedKeySpace:(BOOL)space;
- (id)migration_sortedOrderKeysForAssetsInAlbum:(id)album usingMap:(id)map;
- (void)_migration_updateOrderKeysForAssetsInParentAlbum:(id)album childToOrderKeyMap:(id)map;
- (void)_migration_updateOrderValuesForAssetsInAlbum:(id)album managedObjectContext:(id)context;
- (void)migration_updateLegacyOrderValuesForAssetsInAlbums:(id)albums managedObjectContext:(id)context;
- (void)migration_updateLegacyChildCollectionOrderKeysInFolder:(id)folder;
- (void)updateKeyAssetsForAlbums:(id)albums inLibrary:(id)library completionHandler:(id /* block */)handler;
- (id)init;
- (id)initWithGenerateContextBlock:(id /* block */)block;
- (id)_locked_locationsCache;
- (id)_locked_enqueuedFolderAlbumsOrderValueUpdates;
- (id)_locked_enqueuedAlbumAssetsOrderValueUpdates;
- (void)_updateOrderOfChildrenInParent:(id)parent usingTransientOrders:(id)orders;
- (void)updateAlbumAssetsUsingTransientOrdersByAlbumOID:(id)oid inLibrary:(id)library;
- (id)_orderingStateForRelationship:(id)relationship onObjectWithID:(id)id usingSPISafeContext:(id)context;
- (id)_orderingStateForRelationship:(id)relationship onObjectWithID:(id)id invalidateCache:(BOOL)cache usingSPISafeContext:(id)context;
- (void)getConflictResolutionOrderValuesForRelationship:(id)relationship onObjectWithID:(id)id atIndex:(unsigned long long)index intoLower:(long long *)lower higher:(long long *)higher inContext:(id)context;
- (unsigned long long)findIndexForAlbumWithID:(id)id newOrderValue:(long long)value inFolderWithID:(id)id hasOrderValueConflictWithAlbumID:(id *)id inContext:(id)context;
- (unsigned long long)findIndexForAssetWithID:(id)id newOrderValue:(long long)value inAlbumWithID:(id)id hasOrderValueConflictWithAssetID:(id *)id inContext:(id)context;
- (id)objectIDsAndOrderValuesForRelationship:(id)relationship onObjectWithID:(id)id invalidateCache:(BOOL)cache inContext:(id)context;
- (void)_stashLocationValue:(long long)value forOrderedObjectWithID:(id)id inSourceObjectID:(id)id relationship:(id)relationship atIndex:(unsigned long long)index usingStashDictionary:(id)dictionary usingSPISafeContext:(id)context;
- (void)stashFolderAlbumsLocationValue:(long long)value forAlbumWithID:(id)id inFolderWithID:(id)id atIndex:(unsigned long long)index;
- (void)stashAlbumAssetsLocationValue:(long long)value forAssetWithID:(id)id inAlbumWithID:(id)id atIndex:(unsigned long long)index;
- (void)_setConflictDetected:(BOOL)detected;
- (void)_getAndResetEnqueuedOrderValueUpdatesForFolders:(id *)folders albums:(id *)albums conflictDetected:(BOOL *)detected;
- (BOOL)writeStashedLocationValuesInContext:(id)context error:(id *)error;
- (id)albumsAndOrderValuesForAsset:(id)asset inManagedObjectContext:(id)context;
- (id)parentFolderOrderValueForAlbum:(id)album inManagedObjectContext:(id)context;
@end

#endif /* PLRelationshipOrderKeyManager_h */
