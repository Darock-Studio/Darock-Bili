//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PSIDatabase_h
#define PSIDatabase_h
@import Foundation;

#include "PLSearchMetadataStore.h"
#include "PSIGroupCacheDelegate-Protocol.h"
#include "PSIIntArray.h"
#include "PSIQueryDelegate-Protocol.h"
#include "PSIStatement.h"
#include "PSITableDelegate-Protocol.h"
#include "PSITokenizer.h"
#include "PSIWordEmbeddingTable.h"

@class NSDictionary, NSMutableArray, NSMutableString, NSString;
@protocol OS_dispatch_queue;

@interface PSIDatabase : NSObject<PSITableDelegate, PSIQueryDelegate, PSIGroupCacheDelegate> {
  /* instance variables */
  struct sqlite3 * _inqDatabase;
  BOOL _databaseIsValid;
  struct __CFDictionary * _inqPreparedStatements;
  PSIIntArray *_matchingIds;
  PSIWordEmbeddingTable *_inqWordEmbeddingTable;
  PSIStatement *_assetUUIDByAssetIdWithAssetIdsStatement;
  PSIStatement *_collectionResultByCollectionIdWithCollectionIdsStatement;
  PSIStatement *_inqAssetIdsByGroupIdForAssetIdsStatement;
  PSIStatement *_inqCollectionIdsByGroupIdForCollectionIdsStatement;
  PSIStatement *_inqNumberOfAssetsMatchingGroupWithIdStatement;
  PSIStatement *_inqNumberOfAssetsByGroupIdMatchingGroupsWithIdsStatement;
  PSIStatement *_inqNumberOfCollectionsMatchingGroupWithIdStatement;
  PSIStatement *_inqNumberOfCollectionsByGroupIdMatchingGroupsWithIdsStatement;
  PSIStatement *_inqIdsOfAllGroupsStatement;
  PSIStatement *_inqIdsOfAllGroupsInPrefixStatement;
  struct __CFDictionary * _inqGroupObjectsById;
  NSObject<OS_dispatch_queue> *_serialQueue;
  NSObject<OS_dispatch_queue> *_searchQueue;
  PLSearchMetadataStore *_inqSearchMetadataStore;
  NSDictionary *_inqSearchMetadata;
  NSMutableString *_tokenizerOutputString;
  NSMutableArray *_tokenizerOutputTokens;
  NSMutableArray *_tokenizerOutputNormalizedTokens;
  struct { long long location; long long length; } _tokenizerOutputRanges[8];
}

@property (readonly) PSITokenizer *tokenizer;
@property (readonly) NSObject<OS_dispatch_queue> *groupResultsQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *path;
@property (readonly, nonatomic) long long options;

/* class methods */
+ (void)dropDatabaseAtPath:(id)path withCompletion:(id /* block */)completion;
+ (void)_dropDatabase:(struct sqlite3 *)database withCompletion:(id /* block */)completion;
+ (BOOL)_integrityCheckDatabase:(struct sqlite3 *)database;
+ (struct sqlite3 *)_openDatabaseAtPath:(id)path options:(long long)options;
+ (id)searchDatabaseLog;

/* instance methods */
- (id)initForTestingWithOptions:(long long)options;
- (long long)insertAsset:(id)asset;
- (long long)insertCollection:(id)collection;
- (long long)insertGroup:(id)group;
- (void)removeUnusedGroups;
- (void)linkAssetWithId:(long long)id toGroupWithId:(long long)id;
- (void)linkCollectionWithId:(long long)id toGroupWithId:(long long)id;
- (id)allGroupIds;
- (id)groupIdsInPrefixTable;
- (unsigned long long)updateGroupForText:(id)text identifier:(id)identifier category:(short)category owningGroupId:(unsigned long long)id;
- (void)executeQueryV2:(id)v2 resultsHandler:(id /* block */)handler;
- (void)_executeQueryV2:(id)v2 resultsHandler:(id /* block */)handler;
- (void)executeQueryV2:(id)v2 userQuery:(id)query resultsHandler:(id /* block */)handler;
- (void)_executeQueryV2:(id)v2 userQuery:(id)query resultsHandler:(id /* block */)handler;
- (void)executeQuery:(id)query disableWildcardMatchesForUserControlledCategories:(BOOL)categories resultsHandler:(id /* block */)handler;
- (void)_executeQuery:(id)query disableWildcardMatchesForUserControlledCategories:(BOOL)categories resultsHandler:(id /* block */)handler;
- (id)groupArraysFromGroupIdSets:(id)sets dateFilter:(id)filter searchResultTypes:(unsigned long long)types progressBlock:(id /* block */)block;
- (struct __CFSet *)groupIdsMatchingString:(id)string categories:(id)categories textIsSearchable:(BOOL)searchable;
- (id)groupWithMatchingGroupId:(unsigned long long)id dateFilter:(id)filter searchResultTypes:(unsigned long long)types;
- (id)groupForLookupIdentifier:(id)identifier searchResultTypes:(unsigned long long)types;
- (id)groupResultWithDateFilter:(id)filter datedTokens:(id)tokens;
- (id)wordEmbeddingMatchesForToken:(id)token;
- (id)meNodeIdentifier;
- (id)suggestionWhitelistedScenes;
- (void)group:(id)group fetchOwningContentString:(BOOL)string assetIdRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range collectionIdRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range completionHandler:(id /* block */)handler;
- (void)fetchAssetUUIDsForAssetIDs:(struct __CFArray *)ids creationDateSorted:(BOOL)sorted completionHandler:(id /* block */)handler;
- (void)groupsForAssetIds:(struct __CFArray *)ids completion:(id /* block */)completion;
- (void)groupsForCollectionIds:(struct __CFArray *)ids completion:(id /* block */)completion;
- (void)assetIdsFromUUIDs:(id)uuids completion:(id /* block */)completion;
- (void)collectionIdsFromUUIDs:(id)uuids completion:(id /* block */)completion;
- (void)_inqNewGroupIdsForAssetIdsV2:(struct __CFArray *)v2 completion:(id /* block */)completion;
- (void)_inqNewGroupIdsForCollectionIdsV2:(struct __CFArray *)v2 completion:(id /* block */)completion;
- (id)searchResultV2WithDateFilter:(id)filter scopedSearchIdentifiers:(id)identifiers searchResultTypes:(unsigned long long)types suggestionType:(unsigned long long)type;
- (id)assetUUIDsForAssetIDs:(struct __CFArray *)ids;
- (id)collectionUUIDsForCollectionIDs:(struct __CFArray *)ids;
- (id)statementFromString:(id)string;
- (void)executeStatementFromString:(id)string;
- (void)executeStatementFromString:(id)string withResultEnumerationBlock:(id /* block */)block;
- (void)executeStatement:(id)statement;
- (void)executeStatement:(id)statement withResultEnumerationBlock:(id /* block */)block;
- (void)prepareForNumberOfMatchingIds:(unsigned long long)ids;
- (void)unprepareMatchingIds;
- (void)bindMatchingIds:(struct __CFSet *)ids;
- (void)bindMatchingIds:(struct __CFArray *)ids range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)bindMatchingIds:(const long long *)ids numberOfMatchingIds:(unsigned long long)ids;
- (void)unbindMatchingIds;
- (long long)lastInsertedRowID;
- (BOOL)_inqVerifyTablesExistInDatabase;
- (id)initWithPathManager:(id)manager options:(long long)options;
- (BOOL)_prepareSearchIndexAtPath:(id)path options:(long long)options;
- (struct __CFDictionary *)_inqPrepareStatementsForOptions:(long long)options tokenizerName:(id)name;
- (void)_finalizeEverything;
- (void)dealloc;
- (void)_inqAsync:(id /* block */)async;
- (void)_inqSync:(id /* block */)sync;
- (void)_inSearchQueueAsync:(id /* block */)async;
- (void)updateSearchMetadata;
- (void)dropDatabaseWithCompletion:(id /* block */)completion;
- (BOOL)isDatabaseCorrupted;
- (void)performSyncOnDBQueue:(id /* block */)dbqueue;
- (void)_ingRebuildPrefixTableIfNeeded;
- (void)addAsset:(id)asset withCompletion:(id /* block */)completion;
- (void)addAssets:(id)assets withCompletion:(id /* block */)completion;
- (void)addCollection:(id)collection withCompletion:(id /* block */)completion;
- (void)addCollections:(id)collections withCompletion:(id /* block */)completion;
- (void)removeAssetWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)removeAssetsWithUUIDs:(id)uuids completion:(id /* block */)completion;
- (void)removeCollectionWithUUID:(id)uuid completion:(id /* block */)completion;
- (void)removeCollectionsWithUUIDs:(id)uuids completion:(id /* block */)completion;
- (void)_removeUUIDs:(id)uuids objectType:(unsigned long long)type completion:(id /* block */)completion;
- (void)deleteGroupsWithGraphCollectionsForPersonUUIDs:(id)uuids withCompletion:(id /* block */)completion;
- (id)allCollectionUUIDsWithCollectionType:(unsigned long long)type;
- (id)allAssetUUIDsForGroupsWithCategories:(id)categories;
- (id)newQueryWithSearchTextV2:(id)v2 queryTokens:(id)tokens scopedSearchIdentifiers:(id)identifiers searchResultTypes:(unsigned long long)types searchSuggestionType:(unsigned long long)type useWildcardSearchText:(BOOL)text enableExactMatchPrioritization:(BOOL)prioritization libraryScope:(unsigned long long)scope suggestionLimit:(unsigned long long)limit;
- (id)newQueryWithSearchText:(id)text queryTokens:(id)tokens useWildcardSearchText:(BOOL)text libraryScope:(unsigned long long)scope;
- (id)_inqOwningContentStringForGroupResult:(id)result;
- (id)_inqAssetUUIDsForAssetIds:(struct __CFArray *)ids range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range creationDateSorted:(BOOL)sorted;
- (id)_inqAssetUUIDsForAssetIds:(struct __CFSet *)ids;
- (id)_inqCollectionResultsForCollectionIds:(struct __CFArray *)ids range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)allCollections;
- (id)allGroupsForEntityDonation;
- (id)_inqContentStringForGroupId:(unsigned long long)id;
- (id)_inqGroupResultWithDateFilter:(id)filter datedTokens:(id)tokens;
- (struct __CFSet *)_inqNewGroupIdsMatchingString:(id)string textIsSearchable:(BOOL)searchable;
- (struct __CFSet *)_inqNewGroupIdsMatchingString:(id)string categories:(id)categories textIsSearchable:(BOOL)searchable;
- (struct __CFSet *)_inqNewGroupIdsWithCategories:(id)categories;
- (id)_inqGroupWithFilenameStatement:(struct sqlite3_stmt *)statement dateFilter:(id)filter excludingGroupId:(unsigned long long)id searchResultTypes:(unsigned long long)types;
- (id)_inqGroupWithStatement:(struct sqlite3_stmt *)statement dateFilter:(id)filter includeObjects:(BOOL)objects searchResultTypes:(unsigned long long)types;
- (id)_inqGroupWithStatement:(struct sqlite3_stmt *)statement dateFilter:(id)filter includeObjects:(BOOL)objects isFilenameStatement:(BOOL)statement excludingGroupId:(unsigned long long)id searchResultTypes:(unsigned long long)types;
- (id)_inqGroupArraysFromGroupIdSets:(id)sets dateFilter:(id)filter searchResultTypes:(unsigned long long)types progressBlock:(id /* block */)block;
- (id)_inqAssetUUIDByAssetIdWithAssetIds:(id)ids;
- (id)assetUUIDByAssetIdWithAssetIds:(id)ids;
- (id)_inqCollectionResultByCollectionIdWithCollectionIds:(id)ids;
- (id)collectionResultByCollectionIdWithCollectionIds:(id)ids;
- (void)_processNextKeywordSuggestionsForQuery:(id)query groupResults:(id)results allowIdentifiers:(BOOL)identifiers;
- (unsigned long long)_inqNumberOfAssetsMatchingGroupWithId:(unsigned long long)id;
- (id)_inqNumberOfAssetsByGroupIdMatchingGroupsWithIds:(id)ids;
- (unsigned long long)_inqNumberOfCollectionsMatchingGroupWithId:(unsigned long long)id;
- (id)_inqNumberOfCollectionsByGroupIdMatchingGroupsWithIds:(id)ids;
- (double)_scoreForUserCategory:(unsigned long long)category;
- (id)dumpGroupsInfoWithIndexCategories:(id)categories;
- (id)dumpGroupsInfoForAssetUUID:(id)uuid indexCategories:(id)categories;
- (id)dumpLookupStringsWithIndexCategories:(id)categories;
- (unsigned long long)assetCountForLookupIdentifier:(id)identifier;
- (id)_generateGroupsInfoDictionaryFromText:(const char *)text identifier:(const char *)identifier category:(short)category groupId:(unsigned long long)id;
- (void)_sortedSearchIndexRowIdsFromUUIDs:(id)uuids searchResultType:(unsigned long long)type completion:(id /* block */)completion;
- (BOOL)assetExistsWithUUID:(id)uuid;
- (id)_inqDequeueGroupObjectWithId:(unsigned long long)id isCachedGroup:(BOOL *)group;
- (void)_inqRecycleGroups;
- (void)_prepareTokenOutput:(struct tokenOutput_t { id x0; id x1; id x2; struct  * x3; long long x4; long long x5; struct  * x6; long long x7; long long x8; } *)output forIndexing:(BOOL)indexing;
- (void)_inqGetTokensFromString:(id)string category:(short)category tokenOutput:(struct tokenOutput_t { id x0; id x1; id x2; struct  * x3; long long x4; long long x5; struct  * x6; long long x7; long long x8; } *)output;
- (unsigned long long)_inqUpdateGroupForText:(id)text identifier:(id)identifier category:(short)category owningGroupId:(unsigned long long)id;
- (unsigned long long)_inqUpdateGroupForText:(id)text normalizedText:(id)text identifier:(id)identifier category:(short)category owningGroupId:(unsigned long long)id shouldUpdateOwningGroupId:(BOOL)id;
- (void)_inqRemoveUUID:(id)uuid objectType:(unsigned long long)type isInBatch:(BOOL)batch;
- (void)_inqRemoveUnusedGroups;
- (void)_inqDeleteGroupsWithGraphCollectionsForPersonUUID:(id)uuid;
- (unsigned long long)_inqAssetIdForUUID:(id)uuid uuid_0:(unsigned long long *)uuid_0 uuid_1:(unsigned long long *)uuid_1;
- (unsigned long long)_inqAssetIdForUUID:(id)uuid;
- (unsigned long long)_inqAssetIdWithAsset:(id)asset;
- (unsigned long long)_inqCollectionIdForUUID:(id)uuid uuid_0:(unsigned long long *)uuid_0 uuid_1:(unsigned long long *)uuid_1;
- (unsigned long long)_inqCollectionIdForUUID:(id)uuid;
- (unsigned long long)_inqCollectionIdWithCollection:(id)collection;
- (unsigned long long)_inqGroupIdForCategory:(short)category owningGroupId:(unsigned long long)id contentString:(id)string normalizedString:(id)string identifier:(id)identifier insertIfNeeded:(BOOL)needed tokenOutput:(const struct tokenOutput_t { id x0; id x1; id x2; struct  * x3; long long x4; long long x5; struct  * x6; long long x7; long long x8; } *)output shouldUpdateOwningGroupId:(BOOL)id;
- (void)_inqUpdateGATableWithGroupId:(unsigned long long)id assetId:(unsigned long long)id;
- (void)_inqUpdateGCTableWithGroupId:(unsigned long long)id collectionId:(unsigned long long)id;
- (id)_inqGroupWithMatchingGroupId:(unsigned long long)id dateFilter:(id)filter searchResultTypes:(unsigned long long)types;
- (id)_inqFilenameGroupsWithMatchingGroupIds:(struct __CFSet *)ids dateFilter:(id)filter searchResultTypes:(unsigned long long)types matchingPredicateBlock:(id /* block */)block;
- (id)_inqNonFilenameGroupsWithMatchingGroupIds:(struct __CFSet *)ids dateFilter:(id)filter includeObjects:(BOOL)objects searchResultTypes:(unsigned long long)types matchingPredicateBlock:(id /* block */)block;
- (id)_inqGroupsWithMatchingGroupIds:(struct __CFSet *)ids dateFilter:(id)filter includeObjects:(BOOL)objects searchResultTypes:(unsigned long long)types matchingPredicateBlock:(id /* block */)block;
- (id)_inqNewSynonymTextsByOwningGroupIdWithGroupIds:(struct __CFSet *)ids;
- (struct __CFArray *)_inqNewAssetIdsWithDateFilter:(id)filter;
- (struct __CFArray *)_inqNewAssetIdsForGroupId:(unsigned long long)id dateFilter:(id)filter;
- (struct __CFArray *)_inqNewCollectionIdsWithDateFilter:(id)filter;
- (struct __CFArray *)_inqNewCollectionIdsForGroupId:(unsigned long long)id dateFilter:(id)filter;
- (struct __CFSet *)_inqNewGroupIdsForAssetId:(unsigned long long)id;
- (struct __CFSet *)_inqNewGroupIdsForAssetIds:(struct __CFSet *)ids;
- (id)_inqAssetIdsByGroupIdForAssetIds:(id)ids;
- (struct __CFSet *)_inqNewGroupIdsForCollectionId:(unsigned long long)id;
- (struct __CFSet *)_inqNewGroupIdsForCollectionIds:(struct __CFSet *)ids;
- (id)_inqCollectionIdsByGroupIdForCollectionIds:(id)ids;
- (id)_inqSelectAllGroupsForEntityDonation;
- (struct sqlite3_stmt *)_inqPrepareStatement:(const char *)statement;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt *)statement allowError:(int)error withStatementBlock:(id /* block */)block;
- (void)_inqExecutePreparedStatement:(struct sqlite3_stmt *)statement withStatementBlock:(id /* block */)block;
- (void)_inqPrepareAndExecuteStatement:(const char *)statement;
- (void)_inqPerformBatch:(id /* block */)batch;
- (struct sqlite3 *)databaseConnection;
@end

#endif /* PSIDatabase_h */
