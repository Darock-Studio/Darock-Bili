//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLFaceCrop_h
#define PLFaceCrop_h
@import Foundation;

#include "PLManagedObject.h"
#include "PLCloudDeletable-Protocol.h"
#include "PLDetectedFace.h"
#include "PLManagedAsset.h"
#include "PLPerson.h"
#include "PLSyncableObject-Protocol.h"

@class NSData, NSString;

@interface PLFaceCrop : PLManagedObject<PLSyncableObject, PLCloudDeletable>

@property (nonatomic) BOOL needsPersistenceUpdate;
@property (@dynamic, nonatomic) short cloudLocalState;
@property (@dynamic, nonatomic) short cloudDeleteState;
@property (@dynamic, nonatomic) short type;
@property (@dynamic, nonatomic) unsigned short cloudType;
@property (@dynamic, nonatomic) short state;
@property (copy, @dynamic, nonatomic) NSString *uuid;
@property (retain, @dynamic, nonatomic) NSData *resourceData;
@property (retain, @dynamic, nonatomic) PLPerson *person;
@property (retain, @dynamic, nonatomic) PLDetectedFace *face;
@property (retain, @dynamic, nonatomic) NSString *invalidMergeCandidatePersonUUID;
@property (retain, @dynamic, nonatomic) PLManagedAsset *asset;
@property (readonly, retain, nonatomic) id localID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) long long cloudDeletionType;
@property (readonly, copy) NSString *cloudUUIDForDeletion;

/* class methods */
+ (id)insertIntoPhotoLibrary:(id)library withUUID:(id)uuid resourceData:(id)data type:(short)type;
+ (id)insertIntoManagedObjectContext:(id)context withUUID:(id)uuid resourceData:(id)data type:(short)type;
+ (id)entityName;
+ (long long)cloudDeletionTypeForTombstone:(id)tombstone;
+ (id)cloudUUIDKeyForDeletion;
+ (id)_faceCropsMatchingPredicate:(id)predicate limit:(unsigned long long)limit inManagedObjectContext:(id)context;
+ (id)allFaceCropsInPhotoLibrary:(id)library;
+ (id)faceCropsWithUUIDs:(id)uuids inPhotoLibrary:(id)library;
+ (id)faceCropsWithUUIDs:(id)uuids inManagedObjectContext:(id)context;
+ (id)faceCropsToUploadInPhotoLibrary:(id)library limit:(unsigned long long)limit;
+ (id)batchFetchFaceCropByFaceObjectIDWithFaceObjectIDs:(id)ids library:(id)library;
+ (int)_trainingFaceTypeForFaceFromFaceCrop:(id)crop;
+ (int)_nameSourceForFaceFromFaceCrop:(id)crop;
+ (id)listOfSyncedProperties;
+ (long long)_cloudTypeToPushFromLocalType:(short)type cachedCloudType:(unsigned short)type;
+ (short)_localTypeFromCloudType:(long long)type;
+ (id)insertOrUpdateWithCPLFaceCrop:(id)crop inPhotoLibrary:(id)library;
+ (void)resetCloudStateInPhotoLibrary:(id)library;

/* instance methods */
- (void)willSave;
- (void)prepareForDeletion;
- (void)applyPropertiesToTrainingFace;
- (BOOL)supportsCloudUpload;
- (BOOL)isSyncableChange;
- (id)cplFullRecord;
- (id)cplFaceCropChange;
@end

#endif /* PLFaceCrop_h */
