//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLBackgroundJobWorker_h
#define PLBackgroundJobWorker_h
@import Foundation;

#include "PLBackgroundJobStatusCenter.h"
#include "PLBackgroundJobWorkerProtocol-Protocol.h"
#include "PLPhotoLibraryBundle.h"

@class NSMutableArray, NSString;

@interface PLBackgroundJobWorker : NSObject<PLBackgroundJobWorkerProtocol> {
  /* instance variables */
  id /* block */ _workerCompleteCompletionHandler;
  id /* block */ _currentManagedObjectCompletionHandler;
  atomic long long _workerAtomicCounter;
  atomic long long _completionHandlerAtomicCounter;
  id /* block */ _workerForcefullyStopHandler;
  NSMutableArray *_pendingJobs;
  unsigned long long _totalJobsCount;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  BOOL _shouldStop;
  atomic BOOL _shouldDeferActivity;
}

@property (readonly, nonatomic) NSString *workerName;
@property (readonly, nonatomic) NSString *workerDetailedName;
@property (weak, nonatomic) PLBackgroundJobStatusCenter *statusCenter;
@property (readonly, nonatomic) PLPhotoLibraryBundle *libraryBundle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)usesMultipleLibrariesConcurrently;
+ (long long)availableDiskSpaceForVolumeURL:(id)url;
+ (BOOL)supportsWellKnownPhotoLibraryIdentifier:(long long)identifier;

/* instance methods */
- (id)init;
- (id)initWithLibraryBundle:(id)bundle;
- (id)redactedDescription;
- (BOOL)shouldDeferActivity;
- (void)_processNextManagedObjectInLibrary:(id)library continueRunning:(BOOL)running allowOutsideLimiter:(BOOL)limiter;
- (void)_handleAllJobsCompleteInLibrary:(id)library allowOutsideLimiter:(BOOL)limiter;
- (id)pendingJobsInLibrary:(id)library;
- (void)startWorkInLibrary:(id)library withWorkItemsNeedingProcessing:(id)processing withCompletion:(id /* block */)completion;
- (void)stopAllWork;
- (BOOL)isInterruptible;
- (BOOL)avoidCheckingOtherWorkersIfThisWorkerHasPendingWork;
- (BOOL)hasEnoughDiskSpaceToContinue:(id /* block */)continue;
- (id)photoLibraryWithDatabaseContext:(id)context;
- (void)workerDidFinishWithDatabaseContext:(id)context;
- (id)workItemsNeedingProcessingInLibrary:(id)library;
- (void)performWorkOnItem:(id)item inLibrary:(id)library completion:(id /* block */)completion;
- (void)stopWorkingOnItem:(id)item;
@end

#endif /* PLBackgroundJobWorker_h */
