//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PSIQuery_h
#define PSIQuery_h
@import Foundation;

#include "PSIParse.h"
#include "PSIQueryDelegate-Protocol.h"
#include "PSITokenizer.h"

@class NSArray, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface PSIQuery : NSObject {
  /* instance variables */
  PSIParse *_baseParse;
  BOOL _baseParseCouldHaveResults;
  NSArray *_implicitelyTokenizedParses;
  BOOL _implicitlyTokenizedParsesCouldHaveResults;
  NSArray *_datedParses;
  NSArray *_implicitlyTokenizedDatedParses;
  NSArray *_wordEmbeddingParses;
  NSArray *_identifierTokens;
  NSMutableDictionary *_groupIdsByTokenKey;
  NSDictionary *_substitutionsByStringToken;
  NSArray *_socialGroupPersonIdentifiers;
  atomic BOOL _didStart;
  atomic BOOL _isCanceled;
}

@property (nonatomic) unsigned long long mergeFilterTokenAssetIDsIntervalID;
@property (weak, nonatomic) NSObject<PSIQueryDelegate> *delegate;
@property (readonly, nonatomic) BOOL useWildcardText;
@property (retain, nonatomic) NSDictionary *substitutions;
@property (retain, nonatomic) NSArray *nextKeywordSuggestions;
@property (copy, nonatomic) NSSet *sceneIdentifiers;
@property (copy, nonatomic) NSSet *audioIdentifiers;
@property (copy, nonatomic) NSSet *humanActionIdentifiers;
@property (copy, nonatomic) NSSet *personIdentifiers;
@property (copy, nonatomic) NSArray *dedupedGroupResults;
@property (copy, nonatomic) NSSet *socialGroupExtendedAssetIds;
@property (copy, nonatomic) NSSet *socialGroupExtendedCollectionIds;
@property (readonly, nonatomic) PSITokenizer *tokenizer;
@property (readonly, copy, nonatomic) NSArray *queryTokens;
@property (readonly, copy, nonatomic) NSString *searchText;
@property (readonly) BOOL canceled;
@property (nonatomic) BOOL legacyDisableTopAssetsAndTopCollections;
@property (nonatomic) unsigned long long wordEmbeddingMode;
@property (nonatomic) unsigned long long numberOfNextKeywordSuggestionToProcess;
@property (readonly, nonatomic) BOOL implicitTokenizationIncludeBaseParseResults;
@property (nonatomic) unsigned long long libraryScope;
@property (readonly, copy, nonatomic) NSSet *scopedSearchIdentifiers;
@property (readonly, nonatomic) unsigned long long searchResultTypes;
@property (readonly, nonatomic) unsigned long long searchSuggestionType;
@property (readonly, nonatomic) unsigned long long suggestionLimit;
@property (readonly, nonatomic) BOOL enableExactMatchPrioritization;
@property (nonatomic) BOOL includeAllFruitfulMatchedGroups;
@property (nonatomic) BOOL includeAllQueryMatchedGroups;
@property (retain, nonatomic) NSDate *queryBeginParsingTime;
@property (nonatomic) double elapsedTimeQueryParsing;
@property (retain, nonatomic) NSDate *queryBeginResultGenerationAndIntersectionsTime;
@property (nonatomic) double elapsedTimeResultGenerationAndIntersections;

/* class methods */
+ (id)dateFilterWithAttributes:(id)attributes;
+ (id)dateFilterByCombiningDateFilter:(id)filter withDateFilter:(id)filter;
+ (id)dateFilterWithAttributes:(id)attributes andAttributes:(id)attributes;
+ (id)parsedDatesFromText:(id)text;
+ (id)dateAttributesFromToken:(id)token;
+ (BOOL)tokenIsEligibleForDateParsing:(id)parsing;
+ (BOOL)enumerateDatedParsesWithParse:(id)parse currentTokenIndex:(unsigned long long)index potentialComboAttributes:(id)attributes usingBlock:(id /* block */)block;
+ (id)datedParsesWithParses:(id)parses;
+ (struct _NSRange { unsigned long long x0; unsigned long long x1; })searchTextExtendedRangeForParse:(id)parse;
+ (void)bootstrap;
+ (BOOL)_shouldApplyFilterTokensForGroupArrays:(id)arrays searchTokens:(id)tokens filterGroupIds:(id)ids;
+ (void)_aggregateAssetIdsOnFilterGroupsInGroupArrays:(id)arrays searchTokens:(id)tokens groupIdToOriginalAssetIdsMap:(id *)map;
+ (id)_indexesToRemoveForDuplicatedFilterGroupsinGroupArrays:(id)arrays searchTokens:(id)tokens;
+ (id)_indexesOfFilterTokensInSearchTokens:(id)tokens;
+ (void)_restoreAssetIdsForGroupsInGroupArrays:(id)arrays atRemovalIndexes:(id)indexes groupIdToOriginalAssetIdsMap:(id)map searchTokens:(id)tokens;
+ (id)searchResultFromArrayOfGroupArrays:(id)arrays searchTokens:(id)tokens searchResultTypes:(unsigned long long)types suggestionType:(unsigned long long)type scopedSearchIdentifiers:(id)identifiers normalizedSearchText:(id)text enableExactMatchPrioritization:(BOOL)prioritization includeAllQueryMatchedGroups:(BOOL)groups includeAllFruitfulMatchedGroups:(BOOL)groups suggestionLimit:(unsigned long long)limit query:(id)query delegate:(id)delegate;

/* instance methods */
- (BOOL)_enumerateImplicitlyTokenizedParsesWithBaseParse:(id)parse usingBlock:(id /* block */)block;
- (id)implicitlyTokenizedParsesWithBaseParse:(id)parse;
- (id)initWithQueryTokens:(id)tokens searchText:(id)text useWildcardText:(BOOL)text delegate:(id)delegate libraryScope:(unsigned long long)scope;
- (void)runWithResultsHandler:(id /* block */)handler disableWildcardMatchesForUserControlledCategories:(BOOL)categories;
- (void)cancel;
- (BOOL)isCanceled;
- (struct __CFSet *)_idsOfGroupsMatchingString:(id)string categories:(id)categories textIsSearchable:(BOOL)searchable isFilterTypeToken:(BOOL)token;
- (struct __CFSet *)_idsOfGroupsMatchingToken:(id)token;
- (void)bootstrap;
- (void)processImplicitTokenization;
- (void)processDates;
- (void)processWordEmbeddings;
- (BOOL)recursiveAddToGroupResults:(id)results aggregate:(id)aggregate atIndex:(unsigned long long)index outOf:(unsigned long long)of inGroupArrays:(id)arrays dateFilter:(id)filter datedTokens:(id)tokens disableWildcardMatchesForUserControlledCategories:(BOOL)categories;
- (id)processParse:(id)parse disableWildcardMatchesForUserControlledCategories:(BOOL)categories;
- (void)computeSuggestions;
- (void)enumerateParsesWithMode:(unsigned long long)mode usingBlock:(id /* block */)block;
- (id)suggestionWhitelistedScenes;
- (void)_postProcessPersonGroupsInGroupArrays:(id)arrays;
- (id)description;
- (id)initWithQueryTokensV2:(id)v2 searchText:(id)text scopedSearchIdentifiers:(id)identifiers searchResultTypes:(unsigned long long)types searchSuggestionType:(unsigned long long)type useWildcardText:(BOOL)text enableExactMatchPrioritization:(BOOL)prioritization delegate:(id)delegate libraryScope:(unsigned long long)scope suggestionLimit:(unsigned long long)limit;
- (void)runWithResultsHandlerV2:(id /* block */)v2;
- (void)runUserQuery:(id)query resultsHandlerV2:(id /* block */)v2;
- (id)runLookupIdentifierQuery;
- (id)processParseV2:(id)v2;
@end

#endif /* PSIQuery_h */
