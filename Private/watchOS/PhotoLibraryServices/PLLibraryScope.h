//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLLibraryScope_h
#define PLLibraryScope_h
@import Foundation;

#include "PLShare.h"
#include "PLCloudDeletable-Protocol.h"
#include "PLSyncableObject-Protocol.h"

@class NSData, NSDate, NSSet, NSString;

@interface PLLibraryScope : PLShare<PLSyncableObject, PLCloudDeletable> {
  /* instance variables */
  BOOL _needsResetShareStateAfterSave;
  BOOL _didPrepareAssetsForScopeDelete;
}

@property (@dynamic, nonatomic) short scopeSyncingState;
@property (@dynamic, nonatomic) short previewState;
@property (retain, @dynamic, nonatomic) NSData *rulesData;
@property (@dynamic, nonatomic) short participantCloudUpdateState;
@property (@dynamic, nonatomic) short autoSharePolicy;
@property (@dynamic, nonatomic) short exitState;
@property (@dynamic, nonatomic) short exitType;
@property (@dynamic, nonatomic) unsigned short exitSource;
@property (@dynamic, nonatomic) short cloudLocalState;
@property (copy, @dynamic, nonatomic) NSDate *lastParticipantAssetTrashNotificationDate;
@property (copy, @dynamic, nonatomic) NSDate *lastParticipantAssetTrashNotificationViewedDate;
@property (@dynamic, nonatomic) int cloudPhotoCount;
@property (@dynamic, nonatomic) int cloudVideoCount;
@property (@dynamic, nonatomic) int cloudItemCount;
@property (@dynamic, nonatomic) int countOfAssetsAddedByCameraSmartSharing;
@property (retain, @dynamic, nonatomic) NSSet *libraryScopeAssets;
@property (readonly, retain, nonatomic) id localID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) short cloudDeleteState;
@property (readonly) long long cloudDeletionType;
@property (readonly, copy) NSString *cloudUUIDForDeletion;

/* class methods */
+ (id)_libraryForEnumerationFromBundle:(id)bundle withName:(const char *)name;
+ (id)createOwnedShareWithUUID:(id)uuid creationDate:(id)date title:(id)title unitTestMode:(BOOL)mode inPhotoLibrary:(id)library;
+ (id)activeLibraryScopeInManagedObjectContext:(id)context;
+ (short)activeSyncingStateToUse;
+ (BOOL)libraryScopeScopeIdentifierWasCreatedInLocalOnlyMode:(id)mode;
+ (short)participationStateFromLibraryScope:(id)scope;
+ (id)localOnlySharedSyncScopeIdentifierPrefix;
+ (id)scopeIdentifierPrefix;
+ (id)entityName;
+ (void)updateLibraryScopeActiveDefaultsWithManagedObjectContext:(id)context;
+ (BOOL)libraryScopeIsActiveWithScopeSyncingState:(short)state;
+ (id)predicateForActiveLibraryScope;
+ (id)predicateForPreviewLibraryScope;
+ (id)predicateToExcludeExitingLibraryScopes;
+ (unsigned long long)_immediateNotificationAssetThresholdToUseWithPhotoLibrary:(id)library;
+ (BOOL)_preflightChecksForFiringParticipantAssetTrashNotificationWithPhotoLibrary:(id)library;
+ (id)_computeCountOfContributedAssetsTrashedByOtherParticipantsSinceLastNotificationDateInLibraryScope:(id)scope outPhotoCount:(unsigned long long *)count outVideoCount:(unsigned long long *)count outItemCount:(unsigned long long *)count;
+ (id)fireParticipantAssetTrashNotificationIfNeededWithPhotoLibrary:(id)library forceNotification:(BOOL)notification;
+ (id)_nearestDateSetToHour:(long long)hour minute:(long long)minute;
+ (BOOL)supportsCPLScopeType:(long long)type;
+ (BOOL)shouldAllowFetchURLWithScopeChange:(id)change photoLibrary:(id)library error:(id *)error;
+ (id)insertOrUpdateShareWithCPLScopeChange:(id)change inPhotoLibrary:(id)library;
+ (id)compoundPredicateForMarkingOnboardingPreviewAssetsWithRulePredicate:(id)predicate;
+ (void)_cleanupLocalPreviewLibraryScopesInManagedObjectContext:(id)context;
+ (id)resetLocalOnlyLibraryScopesAndAllLibraryScopeAssetStatesWithManagedObjectContext:(id)context;
+ (id)resetLibraryScopeAssetStatesWithManagedObjectContext:(id)context;
+ (id)_shareEverythingInternalQuery;
+ (BOOL)_queryIsShareEverythingInternalQuery:(id)query;
+ (void)informRapportToAddShareParticipantUUIDs:(id)uuids photoLibrary:(id)library;
+ (void)informRapportToRemoveShareParticipantUUIDs:(id)uuids photoLibraryBundle:(id)bundle;

/* instance methods */
- (BOOL)_libraryScopeWasCreatedInLocalOnlyMode;
- (void)willSave;
- (void)didSave;
- (void)_verifyCurrentUserParticipantExists;
- (void)prepareForDeletion;
- (BOOL)libraryScopeIsActive;
- (BOOL)shouldEnableRulesChangeTracker;
- (void)_insertOwnedParticipantInLibrary:(id)library unitTestMode:(BOOL)mode;
- (void)startTrackingParticipantAssetTrashStateIfNeeded;
- (void)stopTrackingParticipantAssetTrashedStateIfNeeded;
- (void)userViewedAssetTrashNotificationWithManagedObjectContext:(id)context;
- (id)cplFullRecord;
- (BOOL)isSyncableChange;
- (BOOL)supportsCloudUpload;
- (id)cplScopeChange;
- (id)_cplShare;
- (void)acceptWithCompletionHandler:(id /* block */)handler;
- (void)publishWithCompletionHandler:(id /* block */)handler;
- (id)activateScopeWithCompletionHandler:(id /* block */)handler;
- (void)deactivateScopeWithCompletionHandler:(id /* block */)handler;
- (id)markOnboardingPreviewAssetsByProcessingRulesWithExcludePersonUUIDs:(id)uuids completionHandler:(id /* block */)handler;
- (void)_confirmAllRemainingOnboardingPreviewAssetsWithProgress:(id)progress photoLibrary:(id)library;
- (BOOL)confirmAllRemainingOnboardingPreviewAssetsWithProgress:(id)progress databaseContext:(id)context withError:(id *)error;
- (void)startExitWithRetentionPolicy:(long long)policy exitSource:(unsigned short)source completionHandler:(id /* block */)handler;
- (void)removeParticipantsWithParticipantUUIDs:(id)uuids fromLibraryScopeWithIdentifier:(id)identifier retentionPolicy:(long long)policy exitSource:(unsigned short)source completionHandler:(id /* block */)handler;
- (BOOL)incrementallyDeleteAndSaveWithError:(id *)error;
- (void)updateRulesDataWithCloudSyncableRulesData:(id)data;
- (id)cloudSyncableRulesData;
- (BOOL)updatePeopleRulesForTombstonePersonUUID:(id)uuid replaceWithPersonUUID:(id)uuid;
- (BOOL)updatePeopleRulesForAllTombstonedPersons;
- (BOOL)removePeopleRulesForPersonUUID:(id)uuid;
@end

#endif /* PLLibraryScope_h */
