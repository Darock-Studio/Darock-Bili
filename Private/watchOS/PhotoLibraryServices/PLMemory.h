//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLMemory_h
#define PLMemory_h
@import Foundation;

#include "PLManagedObject.h"
#include "PLBackgroundUpdatesSharingComposition-Protocol.h"
#include "PLCloudDeletable-Protocol.h"
#include "PLFileSystemMetadataPersistence-Protocol.h"
#include "PLManagedAsset.h"
#include "PLSearchableAssetCollection-Protocol.h"
#include "PLUserFeedbackSupporting-Protocol.h"

@class NSData, NSDate, NSDictionary, NSOrderedSet, NSSet, NSString;

@interface PLMemory : PLManagedObject<PLSearchableAssetCollection, PLCloudDeletable, PLFileSystemMetadataPersistence, PLUserFeedbackSupporting, PLBackgroundUpdatesSharingComposition>

@property (readonly, nonatomic) NSString *title;
@property (readonly, nonatomic) NSString *subtitle;
@property (readonly, nonatomic) NSDate *searchableStartDate;
@property (readonly, nonatomic) NSDate *searchableEndDate;
@property (readonly, nonatomic) unsigned long long assetsCountPrivate;
@property (readonly, nonatomic) unsigned long long assetsCountShared;
@property (readonly, nonatomic) NSString *keyAssetUUIDPrivate;
@property (readonly, nonatomic) NSDate *keyAssetCreationDatePrivate;
@property (readonly, nonatomic) NSString *keyAssetUUIDShared;
@property (readonly, nonatomic) NSDate *keyAssetCreationDateShared;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL needsPersistenceUpdate;
@property (retain, @dynamic, nonatomic) NSString *uuid;
@property (retain, @dynamic, nonatomic) NSString *title;
@property (retain, @dynamic, nonatomic) NSString *subtitle;
@property (retain, @dynamic, nonatomic) NSString *graphMemoryIdentifier;
@property (@dynamic, nonatomic) short storyColorGradeKind;
@property (@dynamic, nonatomic) short storySerializedTitleCategory;
@property (retain, @dynamic, nonatomic) NSDate *creationDate;
@property (@dynamic, nonatomic) short category;
@property (@dynamic, nonatomic) short subcategory;
@property (@dynamic, nonatomic) BOOL rejected;
@property (@dynamic, nonatomic) BOOL favorite;
@property (@dynamic, nonatomic) unsigned short pendingState;
@property (@dynamic, nonatomic) unsigned short syndicatedContentState;
@property (@dynamic, nonatomic) unsigned short userActionOptions;
@property (retain, @dynamic, nonatomic) NSDictionary *movieAssetState;
@property (retain, @dynamic, nonatomic) NSData *movieData;
@property (@dynamic, nonatomic) long long photosGraphVersion;
@property (retain, @dynamic, nonatomic) NSData *photosGraphData;
@property (@dynamic, nonatomic) double score;
@property (@dynamic, nonatomic) short cloudLocalState;
@property (@dynamic, nonatomic) short cloudDeleteState;
@property (retain, @dynamic, nonatomic) NSDate *lastViewedDate;
@property (retain, @dynamic, nonatomic) NSDate *lastMoviePlayedDate;
@property (retain, @dynamic, nonatomic) NSDate *lastEnrichmentDate;
@property (retain, @dynamic, nonatomic) NSData *assetListPredicate;
@property (retain, @dynamic, nonatomic) PLManagedAsset *keyAsset;
@property (retain, @dynamic, nonatomic) NSSet *curatedAssets;
@property (retain, @dynamic, nonatomic) NSSet *extendedCuratedAssets;
@property (retain, @dynamic, nonatomic) NSSet *representativeAssets;
@property (retain, @dynamic, nonatomic) NSOrderedSet *customUserAssets;
@property (retain, @dynamic, nonatomic) NSSet *movieCuratedAssets;
@property (retain, @dynamic, nonatomic) NSSet *userCuratedAssets;
@property (@dynamic, nonatomic) short notificationState;
@property (retain, @dynamic, nonatomic) NSData *blacklistedFeature;
@property (@dynamic, nonatomic) long long playCount;
@property (@dynamic, nonatomic) long long shareCount;
@property (@dynamic, nonatomic) long long viewCount;
@property (@dynamic, nonatomic) long long pendingPlayCount;
@property (@dynamic, nonatomic) long long pendingShareCount;
@property (@dynamic, nonatomic) long long pendingViewCount;
@property (@dynamic, nonatomic) short featuredState;
@property (retain, @dynamic, nonatomic) NSSet *userFeedbacks;
@property (@dynamic, nonatomic) short searchIndexRebuildState;
@property (readonly) long long cloudDeletionType;
@property (readonly, copy) NSString *cloudUUIDForDeletion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (@dynamic, nonatomic) short sharingComposition;

/* class methods */
+ (id)isEligibleForSearchIndexingPredicate;
+ (id)needsSearchIndexingForRebuildPredicate;
+ (id)baseSearchIndexPredicate;
+ (BOOL)indexTitleForMemoryCategory:(unsigned long long)category;
+ (id)insertIntoPhotoLibrary:(id)library withUUID:(id)uuid title:(id)title subtitle:(id)subtitle creationDate:(id)date;
+ (id)entityName;
+ (BOOL)isUserCreatedMemoryWithUserActionOptions:(unsigned short)options;
+ (long long)cloudDeletionTypeForTombstone:(id)tombstone;
+ (id)cloudUUIDKeyForDeletion;
+ (id)memoriesToUploadInPhotoLibrary:(id)library limit:(long long)limit;
+ (BOOL)_shouldPrefetchMemoryMovieCuratedAssetsInPhotoLibrary:(id)library prefetchConfiguration:(id)configuration;
+ (id)memoriesToPrefetchInPhotoLibrary:(id)library prefetchConfiguration:(id)configuration;
+ (id)memoriesToPrefetchForWidgetInManagedObjectContext:(id)context;
+ (id)memoryWithUUID:(id)uuid inPhotoLibrary:(id)library;
+ (id)memoriesWithUUIDs:(id)uuids inPhotoLibrary:(id)library;
+ (unsigned long long)countOfMemoriesCreatedTodayWithNotificationStateRequestedOrSeenInPhotoLibrary:(id)library excludingMemory:(id)memory error:(id *)error;
+ (id)_memoriesMatchingPredicate:(id)predicate sortDescriptors:(id)descriptors limit:(long long)limit inPhotoLibrary:(id)library;
+ (void)resetCloudStateInPhotoLibrary:(id)library;
+ (unsigned long long)_deleteMemoriesMatchingPredicate:(id)predicate inManagedObjectContext:(id)context;
+ (void)deletePendingMemoriesCreatedBefore:(id)before inPhotoLibrary:(id)library;
+ (void)deleteMemoriesWithObjectIDs:(id)ids inManagedObjectContext:(id)context;
+ (void)deleteAllMemoriesInPhotoLibrary:(id)library;
+ (id)memoryObjectIDsContainingAsset:(id)asset;
+ (id)keyPathsForMemoriesBeingAssets;
+ (id)memoriesContainingAsset:(id)asset;
+ (short)_calculateSharingCompositionForMemory:(id)memory;
+ (id)predicateForPrivateOnlyCollectionsWithinSubset:(id)subset;
+ (id)predicateForSharedOnlyCollectionsWithinSubset:(id)subset;

/* instance methods */
- (BOOL)isEligibleForSearchIndexing;
- (id)payloadID;
- (id)payloadForChangedKeys:(id)keys;
- (id)payloadIDForTombstone:(id)tombstone;
- (BOOL)validForPersistenceChangedForChangedKeys:(id)keys;
- (id)searchIndexContents;
- (void)addSearchIndexContentsToCollection:(id)collection;
- (BOOL)supportsCloudUpload;
- (BOOL)isSyncableChange;
- (void)willSave;
- (void)delete;
- (void)didSave;
- (void)prepareForDeletion;
- (BOOL)isUserCreatedMemory;
- (void)_updateUserFeedbackSetByUserState;
- (void)_cacheMemoryPropertiesForUIPerformanceWithPhotosGraphData:(id)data;
- (BOOL)updateWithCPLMemoryChange:(id)change inPhotoLibrary:(id)library;
- (BOOL)hasAnyAssets;
- (id)allAvailableAssets;
- (void)calculateSyndicatedContentState;
- (id)calculateKeyAsset;
- (id)cplFullRecord;
- (id)cplMemoryChange;
- (BOOL)isValidForPersistence;
- (void)persistMetadataToFileSystemWithPathManager:(id)manager;
- (void)removePersistedFileSystemDataWithPathManager:(id)manager;
- (BOOL)_sharingCompositionNeedsUpdate;
- (void)_recalculateSharingCompositionIfNeeded;
@end

#endif /* PLMemory_h */
