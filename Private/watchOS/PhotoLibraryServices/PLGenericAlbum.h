//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PLGenericAlbum_h
#define PLGenericAlbum_h
@import Foundation;

#include "_PLGenericAlbum.h"
#include "PLAlbumProtocol-Protocol.h"
#include "PLDerivedAlbumOrigin-Protocol.h"
#include "PLIndexMappersDataOrigin-Protocol.h"
#include "PLManagedAsset.h"
#include "PLPhotoLibrary.h"
#include "PLSearchableAssetCollection-Protocol.h"
#include "PLSyncableObject-Protocol.h"

@class NSArray, NSData, NSDate, NSMutableOrderedSet, NSNumber, NSObject, NSOrderedSet, NSString, NSURL;
@protocol [5@"NSObject<PLIndexMappingCache>"];

@interface PLGenericAlbum : _PLGenericAlbum<PLSearchableAssetCollection, PLSyncableObject, PLAlbumProtocol, PLDerivedAlbumOrigin, PLIndexMappersDataOrigin> {
  /* instance variables */
  NSObject<PLIndexMappingCache> * _derivedAlbums[5];
  BOOL _didAutomaticallyAssignParentFolder;
}

@property (readonly, nonatomic) NSString *title;
@property (readonly, nonatomic) NSString *subtitle;
@property (readonly, nonatomic) NSDate *searchableStartDate;
@property (readonly, nonatomic) NSDate *searchableEndDate;
@property (readonly, nonatomic) unsigned long long assetsCountPrivate;
@property (readonly, nonatomic) unsigned long long assetsCountShared;
@property (readonly, nonatomic) NSString *keyAssetUUIDPrivate;
@property (readonly, nonatomic) NSDate *keyAssetCreationDatePrivate;
@property (readonly, nonatomic) NSString *keyAssetUUIDShared;
@property (readonly, nonatomic) NSDate *keyAssetCreationDateShared;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, retain, nonatomic) id localID;
@property (nonatomic) short cloudLocalState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) PLPhotoLibrary *photoLibrary;
@property (@dynamic, nonatomic) short trashedState;
@property (retain, @dynamic, nonatomic) NSDate *trashedDate;
@property (retain, @dynamic, nonatomic) NSDate *startDate;
@property (retain, @dynamic, nonatomic) NSDate *endDate;
@property (retain, @dynamic, nonatomic) NSDate *creationDate;
@property (retain, @dynamic, nonatomic) NSString *uuid;
@property (nonatomic) int kindValue;
@property (retain, @dynamic, nonatomic) NSString *title;
@property (retain, @dynamic, nonatomic) NSString *cloudGUID;
@property (retain, @dynamic, nonatomic) NSString *importedByBundleIdentifier;
@property (@dynamic, nonatomic) BOOL isPinned;
@property (@dynamic, nonatomic) BOOL isPrototype;
@property (@dynamic, nonatomic) short privacyState;
@property (@dynamic, nonatomic) short cloudLocalState;
@property (@dynamic, nonatomic) short cloudDeleteState;
@property (retain, @dynamic, nonatomic) NSData *userQueryData;
@property (readonly, nonatomic) BOOL isLibrary;
@property (readonly, nonatomic) BOOL isCameraAlbum;
@property (readonly, nonatomic) BOOL isSmartAlbum;
@property (readonly, nonatomic) BOOL isUserCreated;
@property (readonly, nonatomic) BOOL isOwnPhotoStreamAlbum;
@property (readonly, nonatomic) BOOL isProjectAlbumRootFolder;
@property (readonly, nonatomic) BOOL isRegularRootFolder;
@property (readonly, nonatomic) BOOL isRecentlyAddedAlbum;
@property (readonly, nonatomic) BOOL isUserLibraryAlbum;
@property (readonly, nonatomic) BOOL isProjectAlbum;
@property (readonly, nonatomic) BOOL isDuplicateAlbum;
@property (readonly, nonatomic) BOOL shouldDeleteWhenEmpty;
@property (nonatomic) BOOL isRegisteredForChanges;
@property (nonatomic) BOOL didRegisteredWithUserInterfaceContext;
@property (readonly, retain, @dynamic, nonatomic) NSMutableOrderedSet *mutableAssets;
@property (readonly, retain, nonatomic) NSNumber *kind;
@property (nonatomic) BOOL hasUnseenContentBoolValue;
@property (readonly, copy, nonatomic) NSString *name;
@property (readonly, retain, nonatomic) NSObject *posterImage;
@property (readonly, nonatomic) BOOL isPanoramasAlbum;
@property (readonly, nonatomic) BOOL isPhotoStreamAlbum;
@property (readonly, nonatomic) BOOL isCloudSharedAlbum;
@property (readonly, nonatomic) BOOL isPendingPhotoStreamAlbum;
@property (readonly, nonatomic) BOOL isStandInAlbum;
@property (readonly, nonatomic) BOOL isFolder;
@property (readonly, nonatomic) BOOL isInTrash;
@property (readonly, nonatomic) BOOL isOwnedCloudSharedAlbum;
@property (readonly, nonatomic) BOOL isFamilyCloudSharedAlbum;
@property (readonly, nonatomic) BOOL isMultipleContributorCloudSharedAlbum;
@property (readonly, nonatomic) BOOL canContributeToCloudSharedAlbum;
@property (retain, @dynamic, nonatomic) NSString *importSessionID;
@property (readonly, retain, nonatomic) NSURL *groupURL;
@property (readonly, copy, nonatomic) id /* block */ sortingComparator;
@property (@dynamic, nonatomic) int pendingItemsCount;
@property (@dynamic, nonatomic) int pendingItemsType;
@property (nonatomic) unsigned long long batchSize;
@property (readonly, copy, nonatomic) NSString *localizedTitle;
@property (readonly, retain, @dynamic, nonatomic) NSOrderedSet *assets;
@property (readonly, nonatomic) unsigned long long approximateCount;
@property (readonly, nonatomic) unsigned long long assetsCount;
@property (readonly, nonatomic) unsigned long long photosCount;
@property (readonly, nonatomic) unsigned long long videosCount;
@property (readonly, nonatomic) BOOL isEmpty;
@property (retain, @dynamic, nonatomic) PLManagedAsset *keyAsset;
@property (retain, @dynamic, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property (retain, @dynamic, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property (readonly, nonatomic) BOOL canShowComments;
@property (readonly, nonatomic) BOOL canShowAvalancheStacks;
@property (readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_predicateForSupportedAlbumTypes;
+ (id)albumWithCloudGUID:(id)guid inLibrary:(id)library;
+ (id)albumsWithCloudGUIDs:(id)guids inLibrary:(id)library;
+ (id)baseSearchIndexPredicate;
+ (id)searchIndexAllowedPredicate;
+ (id)isEligibleForSearchIndexingPredicate;
+ (id)needsSearchIndexingForRebuildPredicate:(id)predicate;
+ (id)childKeyForOrdering;
+ (id)defaultAlbumKindsForFetchingWithCPLEnabled:(BOOL)cplenabled;
+ (id)localizedRecoveredTitle;
+ (id)keyPathsForValuesAffectingName;
+ (id)localizedTitleForAlbumKind:(int)kind cplEnabled:(BOOL)enabled;
+ (id)keyPathsForValuesAffectingKindValue;
+ (BOOL)isSmartAlbumForKind:(int)kind;
+ (BOOL)isUserCreatedForKind:(int)kind;
+ (BOOL)isFolder:(int)folder;
+ (id)uuidFromGroupURL:(id)url;
+ (id)_singletonFetchingAlbumWithKind:(int)kind library:(id)library;
+ (id)_singletonManagedAlbumWithKind:(int)kind library:(id)library;
+ (id)rootFolderInLibrary:(id)library;
+ (id)projectAlbumRootFolderInLibrary:(id)library;
+ (id)userLibraryAlbumInLibrary:(id)library;
+ (id)allAssetsAlbumInLibrary:(id)library;
+ (id)allPanoramasAlbumInLibrary:(id)library;
+ (id)allVerticalPanoramasAlbumInLibrary:(id)library;
+ (id)allHorizontalPanoramasAlbumInLibrary:(id)library;
+ (id)allVideosAlbumInLibrary:(id)library;
+ (id)allFavoritesAlbumInLibrary:(id)library;
+ (id)allPhotoStreamAssetsAlbumInLibrary:(id)library;
+ (id)iTunesLibraryAlbumInLibrary:(id)library;
+ (id)trashBinAlbumInLibrary:(id)library;
+ (id)unableToUploadAlbumInLibrary:(id)library;
+ (id)syncProgressAlbumInLibrary:(id)library;
+ (id)otaRestoreProgressAlbumInLibrary:(id)library;
+ (id)filesystemImportProgressAlbumInLibrary:(id)library;
+ (id)allAlbumsInLibrary:(id)library;
+ (id)albumWithUUID:(id)uuid inLibrary:(id)library;
+ (id)albumWithObjectID:(id)id inLibrary:(id)library;
+ (id)albumWithName:(id)name inLibrary:(id)library;
+ (id)albumsForStreamID:(id)id inLibrary:(id)library;
+ (id)_unpushedParentsOfAlbums:(id)albums;
+ (id)includeUnpushedParentsForAlbums:(id)albums limit:(unsigned long long)limit;
+ (id)albumsToUploadInitiallyInLibrary:(id)library limit:(unsigned long long)limit;
+ (void)resetAlbumStateForCloudInLibrary:(id)library;
+ (void)_removeAlbumsAndFolders:(id)folders inManagedObjectContext:(id)context;
+ (void)removeAllUserAlbumsAndFoldersInLibrary:(id)library;
+ (void)removeEmptyAlbumsAndFoldersForCloudResetInManagedObjectContext:(id)context;
+ (void)removeTrashedAlbumsAndFoldersForCloudResetInManagedObjectContext:(id)context;
+ (void)removeInvalidAlbumsAndFoldersInManagedObjectContext:(id)context;
+ (id)albumsMatchingPredicate:(id)predicate expectedResultCount:(id)count inLibrary:(id)library;
+ (id)_insertNewAlbumWithKind:(int)kind title:(id)title lastInterestingDate:(id)date intoLibrary:(id)library;
+ (id)insertNewAlbumWithKind:(int)kind title:(id)title intoLibrary:(id)library;
+ (id)insertNewAlbumWithTitle:(id)title intoLibrary:(id)library;
+ (id)insertNewSmartAlbumIntoLibrary:(id)library;
+ (id)insertNewProjectAlbumWithTitle:(id)title documentType:(id)type intoLibrary:(id)library;
+ (id)insertNewAlbumIntoLibrary:(id)library;
+ (id)insertNewSyncedEventWithTitle:(id)title intoLibrary:(id)library;
+ (id)insertNewSyncedEventIntoLibrary:(id)library;
+ (id)insertNewCloudSharedAlbumWithTitle:(id)title lastInterestingDate:(id)date intoLibrary:(id)library;
+ (id)insertNewLegacyFaceAlbumIntoLibrary:(id)library;
+ (id)albumFromGroupURL:(id)url photoLibrary:(id)library;
+ (id)allAlbumsInManagedObjectContext:(id)context;
+ (id)allSyncedAlbumsInManagedObjectContext:(id)context;
+ (id)allAlbumsRegisteredWithManagedObjectContext:(id)context;
+ (id)albumsWithKind:(int)kind inManagedObjectContext:(id)context;
+ (id)eventsWithName:(id)name andImportSessionIdentifier:(id)identifier inManagedObjectContext:(id)context;
+ (id)insertAlbumWithKind:(int)kind title:(id)title uuid:(id)uuid inManagedObjectContext:(id)context;
+ (id)albumWithKind:(int)kind inManagedObjectContext:(id)context;
+ (id)_albumsMatchingPredicate:(id)predicate expectedResultCount:(id)count inManagedObjectContext:(id)context;
+ (void)addSingletonObjectsToContext:(id)context;
+ (BOOL)is1WaySyncKind:(int)kind;

/* instance methods */
- (id)_scopedIdentifier;
- (id)cplAlbumChangeInPhotoLibrary:(id)library;
- (void)applyPropertiesFromAlbumChange:(id)change;
- (BOOL)isProjectAlbumSupportingCloudUpload;
- (id)cplFullRecord;
- (id)payloadID;
- (id)payloadForChangedKeys:(id)keys;
- (id)payloadIDForTombstone:(id)tombstone;
- (BOOL)validForPersistenceChangedForChangedKeys:(id)keys;
- (id)_searchableExtremityDateFromStart:(BOOL)start;
- (id)keyAssetUUID;
- (id)keyAssetCreationDate;
- (id)searchIndexContents;
- (void)addSearchIndexContentsToCollection:(id)collection;
- (BOOL)isEligibleForSearchIndexing;
- (void)dealloc;
- (id)childManagedObject;
- (id)childKeyForOrdering;
- (void)delete;
- (BOOL)canMoveToTrash;
- (void)_applyTrashedState:(short)state date:(BOOL)date;
- (void)applyTrashedState:(short)state cascade:(BOOL)cascade;
- (BOOL)supportsCloudUpload;
- (BOOL)isSyncableChange;
- (void)awakeFromInsert;
- (void)awakeFromFetch;
- (void)willTurnIntoFault;
- (void)willSave;
- (void)didSave;
- (void)repairUuidAndTitleWithRecoveryReason:(const char *)reason;
- (void)_repairTitleIfEmpty;
- (unsigned long long)count;
- (BOOL)canPerformEditOperation:(unsigned long long)operation;
- (id)assetsByObjectIDAtIndexes:(id)indexes;
- (void)batchFetchAssets:(id)assets;
- (void)reducePendingItemsCountBy:(unsigned long long)by;
- (void)registerForChanges;
- (void)unregisterForChanges;
- (unsigned long long)countForAssetsOfKind:(short)kind;
- (void)updateAlbumFolderRelation:(id)relation inLibrary:(id)library;
- (id)_kindDescription;
- (id)_compactDebugDescription;
- (id)_prettyDescription;
- (void)registerDerivedAlbum:(id)album;
- (void)unregisterAllDerivedAlbums;
- (void)enumerateDerivedAlbums:(id /* block */)albums;
- (BOOL)hasDerivedIndexMappers;
- (void)enumerateDerivedIndexMappers:(id /* block */)mappers;
@end

#endif /* PLGenericAlbum_h */
