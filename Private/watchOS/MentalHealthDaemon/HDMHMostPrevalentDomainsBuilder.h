//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HDMHMostPrevalentDomainsBuilder_h
#define HDMHMostPrevalentDomainsBuilder_h
@import Foundation;

@protocol {unordered_map<long, _HDMHDomainCount *, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<const long, _HDMHDomainCount *>>>="__table_"{__hash_table<std::__hash_value_type<long, _HDMHDomainCount *>, std::__unordered_map_hasher<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::hash<long>, std::equal_to<long>>, std::__unordered_map_equal<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::equal_to<long>, std::hash<long>>, std::allocator<std::__hash_value_type<long, _HDMHDomainCount *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::hash<long>, std::equal_to<long>>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::equal_to<long>, std::hash<long>>>="__value_"f}}};

@interface HDMHMostPrevalentDomainsBuilder : NSObject {
  /* instance variables */
  struct unordered_map<long, _HDMHDomainCount *, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<const long, _HDMHDomainCount *>>> { struct __hash_table<std::__hash_value_type<long, _HDMHDomainCount *>, std::__unordered_map_hasher<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::hash<long>, std::equal_to<long>>, std::__unordered_map_equal<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::equal_to<long>, std::hash<long>>, std::allocator<std::__hash_value_type<long, _HDMHDomainCount *>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::hash<long>, std::equal_to<long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::equal_to<long>, std::hash<long>>> { float __value_; } __p3_; } __table_; } _pleasantCountsByDomain;
  struct unordered_map<long, _HDMHDomainCount *, std::hash<long>, std::equal_to<long>, std::allocator<std::pair<const long, _HDMHDomainCount *>>> { struct __hash_table<std::__hash_value_type<long, _HDMHDomainCount *>, std::__unordered_map_hasher<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::hash<long>, std::equal_to<long>>, std::__unordered_map_equal<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::equal_to<long>, std::hash<long>>, std::allocator<std::__hash_value_type<long, _HDMHDomainCount *>>> { struct unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>>> { struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>>> { void * *__value_; struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>> { struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> *>> { unsigned long long __value_; } __data_; } __value_; } __ptr_; } __bucket_list_; struct __compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *>>> { struct __hash_node_base<std::__hash_node<std::__hash_value_type<long, _HDMHDomainCount *>, void *> *> { void *__next_; } __value_; } __p1_; struct __compressed_pair<unsigned long, std::__unordered_map_hasher<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::hash<long>, std::equal_to<long>>> { unsigned long long __value_; } __p2_; struct __compressed_pair<float, std::__unordered_map_equal<long, std::__hash_value_type<long, _HDMHDomainCount *>, std::equal_to<long>, std::hash<long>>> { float __value_; } __p3_; } __table_; } _unpleasantCountsByDomain;
  long long _totalCountPleasant;
  long long _totalCountUnpleasant;
}

/* instance methods */
- (void)addStateOfMind:(id)mind;
- (id)mostPrevalentPleasantDomains;
- (id)mostPrevalentUnpleasantDomains;
- (void)_addStateOfMind:(id)mind toMap:(void *)map;
- (id)_winningSummaryForPleasant:(BOOL)pleasant;
@end

#endif /* HDMHMostPrevalentDomainsBuilder_h */
