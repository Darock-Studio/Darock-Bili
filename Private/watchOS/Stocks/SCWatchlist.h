//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 101.0.0.0.0
//
#ifndef SCWatchlist_h
#define SCWatchlist_h
@import Foundation;

#include "SCKDatabase.h"
#include "SCKDatabaseObserver-Protocol.h"
#include "SCKStartupQueue.h"
#include "SCWatchlistDefaultsProviding-Protocol.h"

@class NSHashTable;
@protocol OS_dispatch_queue, SCWatchlistMetadataProviding;

@interface SCWatchlist : NSObject<SCKDatabaseObserver>

@property (retain, nonatomic) SCKDatabase *database;
@property (retain, nonatomic) NSObject<SCWatchlistMetadataProviding> *metadataProvider;
@property (retain, nonatomic) NSObject<SCWatchlistDefaultsProviding> *defaultsProvider;
@property (retain, nonatomic) NSHashTable *observers;
@property (retain, nonatomic) SCKStartupQueue *startupQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;

/* class methods */
+ (id)zoneSchema;
+ (id)zoneMergeHandler;

/* instance methods */
- (id)initWithDatabase:(id)database metadataProvider:(id)provider defaultsProvider:(id)provider;
- (id)initWithDatabase:(id)database metadataProvider:(id)provider defaults:(id)defaults;
- (void)fetchStocksWithCompletion:(id /* block */)completion;
- (void)addStock:(id)stock completion:(id /* block */)completion;
- (void)removeSymbol:(id)symbol completion:(id /* block */)completion;
- (void)reorderSymbol:(id)symbol afterSymbol:(id)symbol completion:(id /* block */)completion;
- (void)replaceSymbol:(id)symbol withSymbol:(id)symbol completion:(id /* block */)completion;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)removeStock:(id)stock completion:(id /* block */)completion;
- (void)reorderStock:(id)stock toIndex:(unsigned long long)index completion:(id /* block */)completion;
- (void)database:(id)database didChangeZone:(id)zone from:(id)from to:(id)to;
- (id)_sortedStocks:(id)stocks withSymbolOrder:(id)order;
- (void)_enqueueStartupSequence;
@end

#endif /* SCWatchlist_h */
