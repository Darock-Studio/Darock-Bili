//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 36.0.0.0.0
//
#ifndef CTCategory_h
#define CTCategory_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"

@class NSArray, NSString;

@interface CTCategory : NSObject<NSSecureCoding>

@property (copy, nonatomic) NSString *identifier;
@property (copy, nonatomic) NSString *bundleIdentifier;
@property (copy, nonatomic) NSArray *webDomains;
@property (copy, nonatomic) NSString *primaryWebDomain;
@property (copy, nonatomic) NSString *canonicalBundleIdentifier;
@property (readonly, copy, nonatomic) NSString *localizedName;
@property (readonly, copy, nonatomic) NSArray *equivalentBundleIdentifiers;

/* class methods */
+ (id)_xpcConnection;
+ (id)_newXpcConnection;
+ (BOOL)supportsSecureCoding;
+ (id)localizedNameForIdentifier:(id)identifier;
+ (id)shortLocalizedNameForIdentifier:(id)identifier;
+ (void)categoryForBundleID:(id)id platform:(id)platform withCompletionHandler:(id /* block */)handler;
+ (void)categoryForBundleIdentifiers:(id)identifiers platform:(id)platform withCompletionHandler:(id /* block */)handler;
+ (void)categoryForBundleID:(id)id withCompletionHandler:(id /* block */)handler;
+ (void)categoryForDomainURL:(id)url withCompletionHandler:(id /* block */)handler;
+ (void)categoryForDomainURLs:(id)urls withCompletionHandler:(id /* block */)handler;
+ (void)categoryForDomainName:(id)name withCompletionHandler:(id /* block */)handler;
+ (void)categoryForDomainNames:(id)names withCompletionHandler:(id /* block */)handler;
+ (id)systemAppCategoryIdentifierForBundleIdentifier:(id)identifier;
+ (id)_overrideEquivalentIdentifiers:(id)identifiers forBundleID:(id)id;
+ (id)systemCategoryIDWithPatternMatching:(id)matching;
+ (void)_getCategoryTypeForDomainName:(id)name withCompletionHandler:(id /* block */)handler;
+ (id)_DHIDtoCategoryDisplayNameMap;
+ (id)schemeStringForPlatform:(id)platform;
+ (id)bundleIDForPlatform:(id)platform fromBundleID:(id)id platform:(id)platform;
+ (id)_DHToAppStoreCategoriesMap;
+ (void)_lookupAppStoreUsing:(id)using platform:(id)platform withCompletionHandler:(id /* block */)handler;
+ (id)_getEquivalentBundleIdentifiers:(id)identifiers;
+ (id)_schemeRemovedEquivalentBundleIDsMapping:(id)mapping;
+ (id)equivalentIdentifiersForBundleID:(id)id;
+ (id)itemWith:(id)with platform:(id)platform array:(id)array;
+ (id)_equivalentBundleIDsMappingForWatchOSBundleID:(id)id;
+ (id)_equivalentBundleIDsMapping;
+ (id)_getAssociatedDomainsForHostNames:(id)names;
+ (id)parentAppBundleIdentifierForAppRecord:(id)record;
+ (id)_urlStringsForHostNames:(id)names;
+ (id)_urlComponentsForHostName:(id)name;
+ (id)_appBundleIdentifierStringFor:(id)for categoryIdentifier:(id)identifier;

/* instance methods */
- (id)initWithIdentifier:(id)identifier webDomains:(id)domains bundleIdentifier:(id)identifier;
- (id)initWithIdentifier:(id)identifier equivalentBundleIdentifiers:(id)identifiers webDomains:(id)domains bundleIdentifier:(id)identifier;
- (id)initWithIdentifier:(id)identifier webDomains:(id)domains bundleIdentifier:(id)identifier primaryWebDomain:(id)domain;
- (id)initWithIdentifier:(id)identifier equivalentBundleIdentifiers:(id)identifiers webDomains:(id)domains bundleIdentifier:(id)identifier primaryWebDomain:(id)domain;
- (id)initWithIdentifier:(id)identifier equivalentBundleIdentifiers:(id)identifiers webDomains:(id)domains bundleIdentifier:(id)identifier primaryWebDomain:(id)domain canonicalBundleIdentifier:(id)identifier;
- (void)_ctCategoryCommonInitWithIdentifier:(id)identifier equivalentBundleIdentifiers:(id)identifiers webDomains:(id)domains bundleIdentifier:(id)identifier primaryWebDomain:(id)domain canonicalBundleIdentifier:(id)identifier;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)equivalentBundleIdentifers;
- (id)description;
- (BOOL)isEqualToCategory:(id)category;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (BOOL)isSystemBundleIdentifier;
@end

#endif /* CTCategory_h */
