//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.0.0.0.0
//
#ifndef C2SessionTask_h
#define C2SessionTask_h
@import Foundation;

#include "C2RequestDelegate-Protocol.h"
#include "C2RequestOptions.h"
#include "C2SessionTaskDelegate-Protocol.h"

@class NSMutableSet, NSString, NSURLSessionDataTask, NSURLSessionTaskMetrics;
@protocol OS_os_activity;

@interface C2SessionTask : NSObject<C2SessionTaskDelegate>

@property (retain, nonatomic) NSURLSessionDataTask *task;
@property (retain, nonatomic) NSURLSessionTaskMetrics *taskMetrics;
@property (nonatomic) BOOL isComplete;
@property (retain, nonatomic) NSObject<C2SessionTaskDelegate> *sessionTaskDelegate;
@property (nonatomic) double initTime;
@property (nonatomic) double resetTime;
@property (nonatomic) unsigned int attemptCount;
@property (retain, nonatomic) NSMutableSet *outstandingCallbacks;
@property (readonly, nonatomic) NSObject<OS_os_activity> *activity;
@property (readonly, copy, nonatomic) C2RequestOptions *options;
@property (readonly, nonatomic) NSObject<C2RequestDelegate> *delegate;
@property (readonly, nonatomic) BOOL callbackHung;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)callbackHealthQueue;
+ (double)captureMetricsForTimingData:(id)data withKey:(id)key;
+ (double)captureMetricDurationBetweenStart:(double)start andEnd:(double)end;

/* instance methods */
- (id)initWithOptions:(id)options delegate:(id)delegate sessionTaskDelegate:(id)delegate;
- (void)handleCallbackForTask:(id)task callback:(id /* block */)callback;
- (id)taskDescription;
- (id)taskIdentifier;
- (void)invalidate;
- (void)dealloc;
- (void)testBehavior_triggerCallbackHang;
- (void)captureMetricsWithError:(id)error eventType:(long long)type;
- (void)didFinishCollectingMetrics:(id)metrics;
- (void)C2Session:(id)session task:(id)task didCompleteWithError:(id)error;
@end

#endif /* C2SessionTask_h */
