//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.5.0.0
//
#ifndef ICMusicSubscriptionStatusController_h
#define ICMusicSubscriptionStatusController_h
@import Foundation;

#include "ICMusicSubscriptionStatusRemoteRequestingClient-Protocol.h"
#include "NSCopying-Protocol.h"

@class NSMutableDictionary, NSOperationQueue, NSString, NSUUID, NSXPCConnection;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface ICMusicSubscriptionStatusController : NSObject<ICMusicSubscriptionStatusRemoteRequestingClient> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_accessQueue;
  NSObject<OS_dispatch_queue> *_callbackQueue;
  unsigned long long _numberOfActiveRemoteRequests;
  NSOperationQueue *_operationQueue;
  NSObject<NSCopying> *_privacyAcknowledgementObservationToken;
  NSXPCConnection *_remoteRequestingClientConnection;
  NSUUID *_remoteRequestingClientConnectionIdentifier;
  NSObject<OS_dispatch_source> *_remoteRequestingClientConnectionInvalidationTimer;
  NSMutableDictionary *_statusHandlersForPendingIdenticalRequests;
  NSMutableDictionary *_pendingRequests;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedStatusController;
+ (BOOL)_isEntitledForMusicSubscriptionStatusService;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)getSubscriptionStatusWithCompletionHandler:(id /* block */)handler;
- (void)getSubscriptionStatusForUserIdentity:(id)identity withCompletionHandler:(id /* block */)handler;
- (void)getSubscriptionStatusForUserIdentity:(id)identity bypassingCache:(BOOL)cache withCompletionHandler:(id /* block */)handler;
- (void)performSubscriptionStatusRequest:(id)request withCompletionHandler:(id /* block */)handler;
- (void)performSubscriptionStatusRequest:(id)request withStatusHandler:(id /* block */)handler;
- (void)enableSubscriptionWithCompletionHandler:(id /* block */)handler;
- (void)enableSubscriptionForUserIdentity:(id)identity withCompletionHandler:(id /* block */)handler;
- (void)disableSubscriptionWithCompletionHandler:(id /* block */)handler;
- (void)disableSubscriptionForUserIdentity:(id)identity withCompletionHandler:(id /* block */)handler;
- (void)refreshSubscriptionWithCompletionHandler:(id /* block */)handler;
- (void)refreshSubscriptionForUserIdentity:(id)identity withCompletionHandler:(id /* block */)handler;
- (void)refreshSubscriptionUsingRequestContext:(id)context withCompletionHandler:(id /* block */)handler;
- (void)invalidateCachedSubscriptionStatusWithCompletionHandler:(id /* block */)handler;
- (void)invalidateCachedSubscriptionStatusForUserIdentity:(id)identity withCompletionHandler:(id /* block */)handler;
- (void)deliverSubscriptionStatusResponse:(id)response forRemoteRequestWithUniqueIdentifier:(id)identifier error:(id)error;
- (void)_cancelRemoteRequestingClientConnectionInvalidationTimer;
- (void)_deliverSubscriptionStatusResponse:(id)response forRequest:(id)request error:(id)error;
- (void)_didEndRemoteRequestWithUniqueIdentifier:(id)identifier;
- (void)_invalidateRemoteRequestingClientConnection;
- (id)_remoteRequestingClientConnection;
- (void)_handleSeveredRemoteClientConnectionWithIdentifier:(id)identifier;
- (void)_remoteRequestingClientConnectionInvalidationTimerDidExpire;
- (void)_scheduleInvalidationOfRemoteRequestingClientConnection;
- (void)_willBeginRemoteRequestWithUniqueIdentifier:(id)identifier statusHandler:(id /* block */)handler;
- (BOOL)_willPerformSubscriptionStatusRequest:(id)request withStatusHandler:(id /* block */)handler;
- (void)_cancelPendingRequests;
- (void)_handlePrivacyAcknowledgementRequirementChanged:(BOOL)changed;
- (void)_handleSubscriptionStatusDidChangeFollowingPrivacyAcknowledgementNotification:(id)notification;
- (void)_handleSubscriptionStatusCacheDidChangeNotification:(id)notification;
- (void)_handleSubscriptionStatusCacheUnderlyingCachingPropertiesDidChangeNotification:(id)notification;
- (void)_handleSubscriptionStatusDidChangeDistributedNotification:(id)notification;
@end

#endif /* ICMusicSubscriptionStatusController_h */
