//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.6.0.0
//
#ifndef ML3Query_h
#define ML3Query_h
@import Foundation;

#include "ML3AggregateQuery.h"
#include "ML3MusicLibrary.h"
#include "ML3Predicate.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSString;

@interface ML3Query : NSObject<NSSecureCoding, NSCopying>

@property (readonly, nonatomic) NSString *selectPersistentIDsSQL;
@property (readonly, nonatomic) NSString *selectCountSQL;
@property (readonly, nonatomic) NSString *persistentIDProperty;
@property (readonly, nonatomic) ML3MusicLibrary *library;
@property (readonly, nonatomic) Class entityClass;
@property (readonly, nonatomic) ML3Predicate *predicate;
@property (readonly, nonatomic) ML3Predicate *predicateIncludingSystemwidePredicates;
@property (readonly, nonatomic) NSArray *orderingTerms;
@property (readonly, nonatomic) NSString *propertyToCount;
@property (readonly, nonatomic) BOOL hasEntities;
@property (readonly, nonatomic) long long anyEntityPersistentID;
@property (readonly, nonatomic) unsigned long long countOfEntities;
@property (readonly, nonatomic) ML3AggregateQuery *nonDirectAggregateQuery;
@property (readonly, nonatomic) NSString *sectionProperty;
@property (readonly, nonatomic) BOOL usingSections;
@property (nonatomic) unsigned long long limit;
@property (nonatomic) BOOL ignoreSystemFilterPredicates;
@property (nonatomic) BOOL ignoreRestrictionsPredicates;
@property (readonly, nonatomic) long long options;
@property (readonly, nonatomic) BOOL filtersOnDynamicProperties;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)loadNamesFromLibrary:(id)library onConnection:(id)connection forPredicate:(id)predicate loadAllNames:(BOOL)names cancelHandler:(id /* block */)handler;
- (id)nameOrderPropertyForProperty:(id)property;
- (id)initWithLibrary:(id)library entityClass:(Class)class predicate:(id)predicate orderingTerms:(id)terms usingSections:(BOOL)sections nonDirectAggregateQuery:(id)query propertyToCount:(id)count options:(long long)options;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEqual:(id)equal;
- (id)reverseQuery;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)description;
- (BOOL)hasRowForColumn:(id)column;
- (unsigned long long)countOfDistinctRowsForColumn:(id)column;
- (id)sections;
- (BOOL)deleteAllEntitiesFromLibrary;
- (BOOL)deleteAllEntitiesFromLibraryWithDeletionType:(int)type;
- (BOOL)deleteAllEntitiesFromLibraryWithDeletionType:(int)type usingConnection:(id)connection;
- (void)enumerateSectionsUsingBlock:(id /* block */)block;
- (id)enumerationDatabaseResultForSQL:(id)sql onConnection:(id)connection withParameters:(id)parameters;
- (void)enumeratePersistentIDsUsingBlock:(id /* block */)block;
- (void)enumeratePersistentIDsAndProperties:(id)properties usingBlock:(id /* block */)block;
- (void)enumeratePersistentIDsAndSectionsWithProperty:(id)property usingBlock:(id /* block */)block;
- (void)enumeratePersistentIDsAndProperties:(id)properties ordered:(BOOL)ordered usingBlock:(id /* block */)block;
- (void)enumeratePersistentIDsAndProperties:(id)properties ordered:(BOOL)ordered cancelBlock:(id /* block */)block usingBlock:(id /* block */)block;
- (void)enumeratePersistentIDsAndProperties:(id)properties ordered:(BOOL)ordered sectionProperty:(id)property cancelBlock:(id /* block */)block usingBlock:(id /* block */)block;
- (id)valueForAggregateFunction:(id)function onEntitiesForProperty:(id)property;
- (id)selectSQLWithColumns:(id)columns groupBy:(id)by;
- (id)selectSQLWithColumns:(id)columns groupBy:(id)by distinct:(BOOL)distinct;
- (id)selectSQLWithColumns:(id)columns orderingTerms:(id)terms directionality:(id)directionality;
- (id)selectSQLWithColumns:(id)columns orderingTerms:(id)terms;
- (id)selectSQLWithColumns:(id)columns orderingTerms:(id)terms limit:(unsigned long long)limit;
- (id)selectSQLWithColumns:(id)columns orderingTerms:(id)terms distinct:(BOOL)distinct;
- (id)selectSQLWithColumns:(id)columns groupBy:(id)by orderingTerms:(id)terms;
- (id)selectSQLWithColumns:(id)columns groupBy:(id)by orderingTerms:(id)terms limit:(unsigned long long)limit;
- (id)selectSQLWithColumns:(id)columns groupBy:(id)by orderingTerms:(id)terms directionality:(id)directionality usingLowerBound:(BOOL)bound;
- (id)lowerBoundParametersForOrderingTerms:(id)terms lowerBoundPersistentID:(long long)id;
- (id)selectSQLWithColumns:(id)columns groupBy:(id)by orderingTerms:(id)terms directionality:(id)directionality usingLowerBound:(BOOL)bound distinct:(BOOL)distinct limit:(unsigned long long)limit;
- (id)selectSectionsSQL;
- (id)sectionsParameters;
- (id)selectUnorderedPersistentIDsSQL;
- (id)selectPersistentIDsSQLAndProperties:(id)properties ordered:(BOOL)ordered;
- (id)selectPersistentIDsSQLAndProperties:(id)properties ordered:(BOOL)ordered distinct:(BOOL)distinct;
- (id)persistentIDParameters;
- (id)countStatementParameters;
- (BOOL)sectionsPersistentIDColumnIsDistinct;
@end

#endif /* ML3Query_h */
