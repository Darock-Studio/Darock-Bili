//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.6.0.0
//
#ifndef ML3HomeSharingImportOperation_h
#define ML3HomeSharingImportOperation_h
@import Foundation;

#include "ML3DAAPImportOperation.h"

@interface ML3HomeSharingImportOperation : ML3DAAPImportOperation {
  /* instance variables */
  int _playlistNameOrder;
}

/* instance methods */
- (unsigned long long)importSource;
- (void)main;
- (BOOL)_performHomeSharingImportWithTransaction:(id)transaction;
- (struct shared_ptr<ML3DAAPImportItem> { struct ML3DAAPImportItem * x0; struct __shared_weak_count * x1; })importItemFromDAAPElement:(struct shared_ptr<ML3CPP::Element> { struct Element * x0; struct __shared_weak_count * x1; })daapelement;
- (struct shared_ptr<ML3DAAPImportItem> { struct ML3DAAPImportItem * x0; struct __shared_weak_count * x1; })containerImportItemFromDAAPElement:(struct shared_ptr<ML3CPP::Element> { struct Element * x0; struct __shared_weak_count * x1; })daapelement withTrackIds:(struct vector<long long, std::allocator<long long>> { long long * x0; long long * x1; struct __compressed_pair<long long *, std::allocator<long long>> { long long * x0; } x2; })ids trackPersonIdentifiers:(struct vector<std::unordered_set<std::string>, std::allocator<std::unordered_set<std::string>>> { void * x0; void * x1; struct __compressed_pair<std::unordered_set<std::string> *, std::allocator<std::unordered_set<std::string>>> { void * x0; } x2; })identifiers;
- (void)updateImportProgress:(float)progress;
@end

#endif /* ML3HomeSharingImportOperation_h */
