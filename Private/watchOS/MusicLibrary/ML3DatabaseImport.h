//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.6.0.0
//
#ifndef ML3DatabaseImport_h
#define ML3DatabaseImport_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSMutableCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSData, NSFileHandle, NSString;
@protocol OS_tcc_identity;

@interface ML3DatabaseImport : NSObject<NSCopying, NSMutableCopying, NSSecureCoding>

@property (readonly, nonatomic) NSString *libraryPath;
@property (readonly, nonatomic) NSData *trackData;
@property (readonly, nonatomic) NSData *playlistData;
@property (readonly, nonatomic) NSData *albumArtistData;
@property (readonly, nonatomic) NSData *albumData;
@property (readonly, nonatomic) NSFileHandle *fileHandle;
@property (readonly, nonatomic) NSString *syncAnchor;
@property (readonly, nonatomic) BOOL resetSync;
@property (readonly, nonatomic) BOOL sagaEnabled;
@property (readonly, nonatomic) long long storeAccountID;
@property (readonly, nonatomic) long long preferredVideoQuality;
@property (readonly, nonatomic) unsigned int homeSharingBasePlaylistID;
@property (readonly, nonatomic) BOOL tracksAreLibraryOwnedContent;
@property (readonly, nonatomic) BOOL playlistsAreLibraryOwnedContent;
@property (readonly, nonatomic) BOOL pendingMatch;
@property (readonly, nonatomic) BOOL isServerImport;
@property (readonly, nonatomic) BOOL pairedDeviceCanProcessStandaloneCollections;
@property (readonly, nonatomic) NSString *syncLibraryID;
@property (readonly, nonatomic) BOOL suspendable;
@property (readonly, nonatomic) NSObject<OS_tcc_identity> *clientIdentity;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithLibraryPath:(id)path trackData:(id)data playlistData:(id)data;
- (id)initWithLibraryPath:(id)path trackData:(id)data playlistData:(id)data clientIdentity:(id)identity;
- (id)initWithLibraryPath:(id)path trackData:(id)data playlistData:(id)data albumArtistData:(id)data albumData:(id)data clientIdentity:(id)identity;
- (id)init;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)_copyWithZone:(struct _NSZone *)zone usingConcreteClass:(Class)class;
- (BOOL)isResetSync;
- (BOOL)isSagaEnabled;
- (BOOL)isPendingMatch;
- (BOOL)isSuspendable;
@end

#endif /* ML3DatabaseImport_h */
