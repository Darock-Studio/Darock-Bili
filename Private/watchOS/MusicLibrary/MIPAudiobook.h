//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.6.0.0
//
#ifndef MIPAudiobook_h
#define MIPAudiobook_h
@import Foundation;

#include "PBCodable.h"
#include "MIPAlbum.h"
#include "MIPArtist.h"
#include "MIPGenre.h"
#include "MIPPlaybackInfo.h"
#include "NSCopying-Protocol.h"

@class NSString;

@interface MIPAudiobook : PBCodable<NSCopying> {
  /* instance variables */
  struct { unsigned int x :1 audioFormat; unsigned int x :1 discNumber; unsigned int x :1 trackNumber; unsigned int x :1 userRating; unsigned int x :1 excludeFromShuffle; unsigned int x :1 hasVideo; } _has;
}

@property (readonly, nonatomic) BOOL hasAlbum;
@property (retain, nonatomic) MIPAlbum *album;
@property (readonly, nonatomic) BOOL hasArtist;
@property (retain, nonatomic) MIPArtist *artist;
@property (readonly, nonatomic) BOOL hasComposer;
@property (retain, nonatomic) MIPArtist *composer;
@property (readonly, nonatomic) BOOL hasGenre;
@property (retain, nonatomic) MIPGenre *genre;
@property (nonatomic) BOOL hasDiscNumber;
@property (nonatomic) int discNumber;
@property (nonatomic) BOOL hasTrackNumber;
@property (nonatomic) int trackNumber;
@property (nonatomic) BOOL hasUserRating;
@property (nonatomic) int userRating;
@property (nonatomic) BOOL hasExcludeFromShuffle;
@property (nonatomic) BOOL excludeFromShuffle;
@property (nonatomic) BOOL hasAudioFormat;
@property (nonatomic) int audioFormat;
@property (nonatomic) BOOL hasHasVideo;
@property (nonatomic) BOOL hasVideo;
@property (readonly, nonatomic) BOOL hasPlaybackInfo;
@property (retain, nonatomic) MIPPlaybackInfo *playbackInfo;
@property (readonly, nonatomic) BOOL hasHlsPlaylistURL;
@property (retain, nonatomic) NSString *hlsPlaylistURL;

/* instance methods */
- (id)description;
- (id)dictionaryRepresentation;
- (BOOL)readFrom:(id)from;
- (void)writeTo:(id)to;
- (void)copyTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)mergeFrom:(id)from;
@end

#endif /* MIPAudiobook_h */
