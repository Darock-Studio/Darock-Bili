//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 581.0.0.0.0
//
#ifndef TDVectorGlyphReader_h
#define TDVectorGlyphReader_h
@import Foundation;

#include "CUIVectorGlyhLayerDelegate-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSURL;

@interface TDVectorGlyphReader : NSObject<CUIVectorGlyhLayerDelegate> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  struct CGSVGDocument * _svgDocument;
  NSURL *_fileURL;
  NSDictionary *_guideNodes;
  NSDictionary *_vectorGlyphNodes;
  NSMutableDictionary *_vectorGlyphWithWeightSize;
  long long _platform;
  BOOL _isInterpolatable;
  double _sourcePointSize;
  double _defaultPointSize;
  struct CGSVGNode * _layerTreeNode;
  double _drawingPointSize;
  double _drawingScale;
  struct CGSVGDocument * _drawingSymbol;
}

@property (readonly) float templateVersion;

/* class methods */
+ (id)vectorGlyphReaderWithURL:(id)url error:(id *)error;
+ (id)vectorGlyphReaderWithURL:(id)url platform:(long long)platform error:(id *)error;
+ (void)clearInstanceCache;

/* instance methods */
- (void)dealloc;
- (id)initWithURL:(id)url error:(id *)error;
- (id)initWithURL:(id)url platform:(long long)platform error:(id *)error;
- (id)initWithData:(id)data error:(id *)error;
- (id)initWithData:(id)data platform:(long long)platform error:(id *)error;
- (BOOL)_commonInitWithData:(id)data platform:(long long)platform error:(id *)error;
- (BOOL)_readSVGNodesError:(id *)error;
- (BOOL)_validateVectorGlyphsWithError:(id *)error;
- (unsigned long long)numberOfVectorGlyphs;
- (double)_sourcePointSize;
- (double)defaultPointSize;
- (id)_glyphNodeIDForWeight:(long long)weight size:(long long)size;
- (id)_baselineNodeIDForGlyphSize:(long long)size;
- (id)_caplineNodeIDForGlyphSize:(long long)size;
- (id)_marginNodeIDForWeight:(long long)weight size:(long long)size direction:(long long)direction;
- (struct CGSVGDocument *)vectorGlyphWithWeight:(long long)weight size:(long long)size error:(id *)error;
- (BOOL)vectorGlyphExistsWithWeight:(long long)weight size:(long long)size error:(id *)error;
- (double)baselineForVectorGlyphWithWeight:(long long)weight size:(long long)size;
- (double)capHeightForVectorGlyphWithWeight:(long long)weight size:(long long)size;
- (struct { double x0; double x1; double x2; double x3; })alignmentRectInsetsForVectorGlyphWithWeight:(long long)weight size:(long long)size;
- (struct { double x0; double x1; double x2; double x3; })_interpolatedAlignmentRectInsetsForVectorGlyphWithWeight:(long long)weight size:(long long)size;
- (struct { double x0; double x1; double x2; double x3; })_fixedAlignmentRectInsetsForVectorGlyphWithWeight:(long long)weight size:(long long)size foundExactMargins:(BOOL *)margins;
- (void)_calcInterpolatability;
- (BOOL)isInterpolatableForWeight:(long long)weight size:(long long)size;
- (struct CGSVGNode *)interpolatedSymbolForWeight:(long long)weight size:(long long)size;
- (struct CGSize { double x0; double x1; })canvasSizeForWeight:(long long)weight size:(long long)size;
- (BOOL)containsWideGamutContent;
- (id)_layerNamesForRenderingMode:(id)mode;
- (id)monochromeLayerNodeNames;
- (id)multicolorLayerNodeNames;
- (id)hierarchicalLayerNodeNames;
- (BOOL)containsHierarchicalLayers;
- (BOOL)containsMulticolorLayers;
- (struct CGPath *)_pathForLayerNamed:(id)named inDocument:(struct CGSVGDocument *)document;
- (id)createMonochromeLayerGroupForSymbol:(struct CGSVGDocument *)symbol layerNames:(id)names;
- (void)drawInContext:(struct CGContext *)context atPointSize:(double)size scaleFactor:(double)factor weight:(long long)weight size:(long long)size;
- (BOOL)canDrawWithWeight:(long long)weight size:(long long)size;
- (double)scale;
- (double)_requestedPointSizeRatio;
- (struct CGSize { double x0; double x1; })referenceCanvasSize;
- (struct CGPath *)pathForLayerNamed:(id)named;
- (struct CGSVGAttributeMap *)styleForLayerName:(id)name;
- (void)_legacy_drawMonochromeLayerNamed:(id)named inContext:(struct CGContext *)context scaleFactor:(double)factor targetSize:(struct CGSize { double x0; double x1; })size onFillColor:(struct CGColor *)color offFillColor:(struct CGColor *)color;
- (void)_legacy_drawMulticolorLayerNamed:(id)named inContext:(struct CGContext *)context scaleFactor:(double)factor targetSize:(struct CGSize { double x0; double x1; })size colorResolver:(id /* block */)resolver;
- (void)_legacy_drawHierarchicalLayerNamed:(id)named inContext:(struct CGContext *)context scaleFactor:(double)factor targetSize:(struct CGSize { double x0; double x1; })size colorResolver:(id /* block */)resolver;
@end

#endif /* TDVectorGlyphReader_h */
