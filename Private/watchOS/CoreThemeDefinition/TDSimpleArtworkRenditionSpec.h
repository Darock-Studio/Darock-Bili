//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 581.0.0.0.0
//
#ifndef TDSimpleArtworkRenditionSpec_h
#define TDSimpleArtworkRenditionSpec_h
@import Foundation;

#include "TDRenditionSpec.h"
#include "TDImageColorHistogram.h"
#include "TDPNGAsset.h"
#include "TDThemeCompressionType.h"

@class BOOL *, NSOrderedSet, NSString;

@interface TDSimpleArtworkRenditionSpec : TDRenditionSpec

@property (@dynamic, nonatomic) BOOL allowsMultiPassEncoding;
@property (@dynamic, nonatomic) BOOL allowsOptimalRowbytesPacking;
@property (@dynamic, nonatomic) BOOL allowsCompactCompression;
@property (@dynamic, nonatomic) BOOL allowsPaletteImageCompression;
@property (@dynamic, nonatomic) BOOL allowsHevcCompression;
@property (@dynamic, nonatomic) BOOL allowsDeepmapCompression;
@property (@dynamic, nonatomic) BOOL allowsDeepmap2Compression;
@property (retain, @dynamic, nonatomic) TDPNGAsset *asset;
@property (retain, @dynamic, nonatomic) NSOrderedSet *slices;
@property (retain, @dynamic, nonatomic) TDThemeCompressionType *compressionType;
@property (retain, nonatomic) TDImageColorHistogram *histogram;
@property (@dynamic, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } alignmentRect;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } primitiveAlignmentRect;
@property (retain, @dynamic, nonatomic) NSString *alignmentRectString;
@property (retain, @dynamic, nonatomic) NSString *originalImageSizeString;
@property (retain, @dynamic, nonatomic) NSString *nonAlphaImageAreaString;
@property (retain, @dynamic, nonatomic) NSString *physicalSizeInMetersString;
@property (nonatomic) struct CGSize { double x0; double x1; } physicalSizeInMeters;
@property (@dynamic, nonatomic) BOOL isTintable;
@property (nonatomic) BOOL isBackstop;
@property (@dynamic, nonatomic) double postScaleFactor;

/* class methods */
+ (void)initialize;

/* instance methods */
- (void)dealloc;
- (void)awakeFromFetch;
- (void)copyAttributesInto:(id)into;
- (id)associatedFileModificationDateWithDocument:(id)document;
- (void)_logError:(id)error;
- (void)_logWarning:(id)warning;
- (void)_logExtra:(id)extra;
- (id)_slicesToUseForCSI;
- (id)_sliceRectanglesForRenditionSize:(struct { int x0; int x1; })size unadjustedSliceRectangles:(id *)rectangles imageSlicesNeedAdjustment:(BOOL *)adjustment newRenditionSize:(struct { int x0; int x1; } *)size;
- (struct { struct CGSize { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; struct CGSize { double x0; double x1; } x2; })_edgeMetricsForAlignmentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect originalRenditionSize:(struct { int x0; int x1; })size newRenditionSize:(struct { int x0; int x1; })size;
- (BOOL)canBePackedWithDocument:(id)document;
- (int)_rawPixelFormatOfCGImage:(struct CGImage *)cgimage;
- (struct CGImage *)_createImageRefWithURL:(id)url andDocument:(id)document format:(unsigned int *)format vectorBased:(BOOL *)based;
- (id)createCSIRepresentationWithCompression:(BOOL)compression colorSpaceID:(unsigned long long)id document:(id)document;
- (struct CGSize { double x0; double x1; })_scaleRecognitionImageFromSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)updatePackingPropertiesWithDocument:(id)document;
- (void)drawPackableRenditionInContext:(struct CGContext *)context withDocument:(id)document;
@end

#endif /* TDSimpleArtworkRenditionSpec_h */
