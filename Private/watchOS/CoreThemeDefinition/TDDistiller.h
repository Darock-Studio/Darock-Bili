//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 581.0.0.0.0
//
#ifndef TDDistiller_h
#define TDDistiller_h
@import Foundation;

#include "CoreThemeDocument.h"
#include "TDLogger.h"

@class CUIMutableCommonAssetStorage, NSArray, NSMutableArray, NSString, NSThread, NSUUID;

@interface TDDistiller : NSObject {
  /* instance variables */
  CoreThemeDocument *_document;
  CUIMutableCommonAssetStorage *_assetStore;
  NSMutableArray *_renditionEntries;
  NSArray *_changedProductions;
  NSArray *_mainThreadPerformRunLoopModes;
}

@property BOOL incremental;
@property BOOL cancelled;
@property BOOL finished;
@property BOOL successful;
@property (retain, nonatomic) NSString *accumulatedErrorDescription;
@property (retain) NSThread *callbackThread;
@property (copy) id /* block */ completionHandler;
@property (readonly, nonatomic) NSUUID *uuid;
@property int fileCompression;
@property (copy) NSString *assetStoreVersionString;
@property long long assetStoreVersionNumber;
@property (retain) TDLogger *logger;
@property (nonatomic) BOOL dontPackRenditionsBeforeDistilling;

/* instance methods */
- (void)_logError:(id)error;
- (void)_logWarning:(id)warning;
- (void)_logInfo:(id)info;
- (void)_logExtra:(id)extra;
- (void)_accumulateErrorDescription:(id)description;
- (void)_logErrorAndAccumulateDescription:(id)description;
- (BOOL)_setupWithOutputPath:(id)path attemptIncremental:(BOOL)incremental;
- (id)_keySpecsToRemoveFromKeySpecs:(id)specs;
- (id)initWithDocument:(id)document outputPath:(id)path;
- (id)initWithDocument:(id)document outputPath:(id)path versionString:(id)string;
- (id)initWithDocument:(id)document outputPath:(id)path attemptIncremental:(BOOL)incremental;
- (id)initWithDocument:(id)document outputPath:(id)path attemptIncremental:(BOOL)incremental versionString:(id)string;
- (id)documentPath;
- (void)dealloc;
- (id)keyFormatData;
- (id)_keyDataFromKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key;
- (id)_filterRenditions:(id)renditions;
- (id)_textureFaceExclusionPredicate;
- (id)_renditionsWithError:(id *)error;
- (id)_renditionsFromProductions:(id)productions error:(id *)error;
- (BOOL)setAsset:(id)asset withKey:(const struct _renditionkeytoken { unsigned short x0; unsigned short x1; } *)key fromRenditionSpec:(id)spec;
- (unsigned long long)_removeRenditionsWithKeySpecs:(id)specs;
- (id)_productionForRenditionSpec:(id)spec;
- (BOOL)distillRenditions;
- (BOOL)distillThemeAppearances;
- (BOOL)distillLocalizationss;
- (BOOL)distillCatalogGlobals;
- (BOOL)_distillColorDefinitions:(id)definitions;
- (BOOL)distillCustomColors;
- (BOOL)_distillFonts:(id)fonts;
- (BOOL)distillCustomFonts;
- (BOOL)distillCustomFontSizes;
- (id)_copyStandardEffectDefinitions;
- (BOOL)_distillNamedElements:(id)elements;
- (BOOL)distillNamedElements;
- (BOOL)_distillCursorFacetDefinitions:(id)definitions;
- (BOOL)distillCursorFacetDefinitions;
- (void)finishDistillationWithSuccess:(BOOL)success;
- (void)markDistillationAsFinished;
- (void)_resetDocumentUuid:(id)uuid;
- (id)dateOfLastDistill;
- (void)_distillChanges:(id)changes;
- (void)removeRenditionsFromAssetStoreWithKey:(id)key;
- (void)setAssetStoreRenditionCount:(unsigned int)count;
- (void)setAssetStoreUuid:(id)uuid;
- (void)setAssetStoreAssociatedChecksum:(unsigned int)checksum;
- (void)setAssetStoreKeyFormatData:(id)data;
- (void)setAssetStoreKeySemantics:(int)semantics;
- (void)setAssetStorageVersion:(unsigned int)version;
- (void)setAssetStorageVersionString:(const char *)string;
- (void)setAssetSchemaVersion:(unsigned int)version;
- (void)setAssetColorSpaceID:(unsigned int)id;
- (BOOL)assetStoreWriteToDisk;
- (void)_distill:(id)_distill;
- (void)saveAndDistillWithCompletionHandler:(id /* block */)handler;
- (void)waitUntilFinished;
- (void)waitTimerDidFire:(id)fire;
- (void)cancelDistill;
- (void)performSelectorOnCallbackThread:(SEL)thread withObject:(id)object waitUntilDone:(BOOL)done;
- (BOOL)isIncremental;
- (BOOL)isCancelled;
- (BOOL)isSuccessful;
- (BOOL)isFinished;
@end

#endif /* TDDistiller_h */
