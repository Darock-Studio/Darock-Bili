//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1062.0.0.0.0
//
#ifndef BLAudiobookSync_h
#define BLAudiobookSync_h
@import Foundation;

#include "BLAudiobookCache.h"
#include "BLAudiobookCacheDirectoryUtils.h"
#include "BLAudiobookInfo.h"
#include "BLFileFetcher.h"
#include "BLHLSPlaylist.h"
#include "BLHLSStreamInf.h"

@class MPMediaItem, NSMutableArray, NSMutableSet, NSProgress, NSURL;

@interface BLAudiobookSync : NSObject {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _stateLock;
}

@property (retain, nonatomic) BLAudiobookInfo *audiobookInfo;
@property (copy, nonatomic) id /* block */ completion;
@property (retain, nonatomic) NSProgress *parentProgress;
@property (retain, nonatomic) NSProgress *downloadHLSPlaylistsProgress;
@property (retain, nonatomic) NSProgress *parentKeyRequestProgress;
@property (nonatomic) unsigned long long mediaPlaylistCount;
@property (retain, nonatomic) MPMediaItem *mediaItem;
@property (retain, nonatomic) BLFileFetcher *fileFetcher;
@property (retain, nonatomic) BLAudiobookCache *audiobookCache;
@property (nonatomic) BOOL downloadingAudiobook;
@property (retain, nonatomic) BLHLSPlaylist *mediaPlaylist;
@property (nonatomic) unsigned long long bitrate;
@property (retain, nonatomic) BLHLSStreamInf *preferredStreamInf;
@property (readonly, nonatomic) NSURL *preferredMediaPlaylistURL;
@property (retain, nonatomic) NSMutableArray *pendingMediaPlaylistURLs;
@property (retain, nonatomic) NSMutableSet *pendingMediaPlaylistKeys;
@property (nonatomic) BOOL trimMasterPlaylist;
@property (retain, nonatomic) BLAudiobookCacheDirectoryUtils *cacheDirectoryUtils;
@property (nonatomic) BOOL skipActiveStoreAccountCheck;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)downloadAudiobook:(id)audiobook parentProgress:(id)progress completion:(id /* block */)completion;
- (void)downloadAudiobook:(id)audiobook progress:(id)progress completion:(id /* block */)completion;
- (void)cancel;
- (void)_downloadMasterPlaylist;
- (id)_setupTaskForFetchingMasterPlaylistForMediaItem:(id)item completion:(id /* block */)completion;
- (void)_cleanupExistingCacheWithExistingURL:(id)url;
- (void)_downloadMediaPlaylistFromURL:(id)url;
- (void)_downloadNextMediaPlaylist;
- (void)_fetchKeys;
- (void)_fetchNextKey;
- (void)_downloadSegments;
- (void)_completeWithError:(id)error;
- (void)_completeWithError:(id)error description:(id)description;
- (BOOL)_trimMasterPlaylist:(id)playlist pickingSteamInf:(id)inf error:(id *)error;
- (BOOL)_selectPreferredMediaPlaylistFromMasterPlaylistURL:(id)url cachedBitrate:(unsigned long long)bitrate error:(id *)error;
- (id)_streamInfoFromPlaylist:(id)playlist cachedBitRate:(unsigned long long)rate;
@end

#endif /* BLAudiobookSync_h */
