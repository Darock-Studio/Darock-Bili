//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1502.1.1.3.0
//
#ifndef CALNTriggeredEventNotificationSource_h
#define CALNTriggeredEventNotificationSource_h
@import Foundation;

#include "CALNCalendarIconIdentifierProvider-Protocol.h"
#include "CALNNotificationManager-Protocol.h"
#include "CALNNotificationSource-Protocol.h"
#include "CALNSnoozeUpdateTimer-Protocol.h"
#include "CALNSnoozeUpdateTimerDelegate-Protocol.h"
#include "CALNSourceEventRepresentationProvider-Protocol.h"
#include "CALNTimeToLeaveRefreshStorage-Protocol.h"
#include "CALNTravelAdvisoryTimelinessAuthority-Protocol.h"
#include "CALNTriggeredEventNotificationBodyDescriptionProvider-Protocol.h"
#include "CALNTriggeredEventNotificationDataSource-Protocol.h"
#include "CALNTriggeredEventNotificationDataSourceDelegate-Protocol.h"
#include "CALNTriggeredEventNotificationDataStorage-Protocol.h"
#include "CALNTriggeredEventNotificationMapItemURLProvider-Protocol.h"
#include "CALNTriggeredEventNotificationTransitionProvider-Protocol.h"
#include "CALNTriggeredEventNotificationTriggerHelper-Protocol.h"
#include "CALNURLHandler-Protocol.h"

@class NSArray, NSMutableDictionary, NSString;
@protocol CalDateProvider, OS_dispatch_queue;

@interface CALNTriggeredEventNotificationSource : NSObject<CALNTriggeredEventNotificationDataSourceDelegate, CALNSnoozeUpdateTimerDelegate, CALNNotificationSource>

@property (readonly, nonatomic) NSObject<CALNTriggeredEventNotificationDataSource> *dataSource;
@property (readonly, weak, nonatomic) NSObject<CALNNotificationManager> *notificationManager;
@property (readonly, nonatomic) NSObject<CALNCalendarIconIdentifierProvider> *iconIdentifierProvider;
@property (readonly, nonatomic) NSObject<CALNSourceEventRepresentationProvider> *sourceEventRepresentationProvider;
@property (readonly, nonatomic) NSObject<CALNTriggeredEventNotificationTriggerHelper> *triggerHelper;
@property (readonly, nonatomic) NSObject<CALNTriggeredEventNotificationTransitionProvider> *transitionProvider;
@property (readonly, nonatomic) NSObject<CALNTriggeredEventNotificationBodyDescriptionProvider> *bodyDescriptionProvider;
@property (readonly, nonatomic) NSObject<CALNTravelAdvisoryTimelinessAuthority> *travelAdvisoryTimelinessAuthority;
@property (readonly, nonatomic) NSObject<CalDateProvider> *dateProvider;
@property (readonly, nonatomic) NSObject<CALNTriggeredEventNotificationDataStorage> *notificationDataStorage;
@property (readonly, nonatomic) NSObject<CALNTimeToLeaveRefreshStorage> *timeToLeaveRefreshStorage;
@property (readonly, nonatomic) NSObject<CALNSnoozeUpdateTimer> *snoozeUpdateTimer;
@property (readonly, nonatomic) NSMutableDictionary *eventURLToObjectIDMap;
@property (readonly, nonatomic) NSObject<CALNURLHandler> *urlHandler;
@property (readonly, nonatomic) NSObject<CALNTriggeredEventNotificationMapItemURLProvider> *mapItemURLProvider;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *sourceIdentifier;
@property (readonly, nonatomic) NSArray *categories;

/* class methods */
+ (id)snoozeActionIdentifier;
+ (id)directionsActionIdentifier;
+ (id)conferenceCallActionIdentifier;
+ (id)mailOrganizerActionIdentifier;
+ (id)mapItemURLUserInfoKey;
+ (id)conferenceURLUserInfoKey;
+ (id)mailToURLUserInfoKey;
+ (id)_mergeDataFromUnprotectedStore:(id)store withDataInProtectedStore:(id)store;
+ (id)_mapItemURLForNotification:(id)notification;
+ (id)_conferenceURLForNotification:(id)notification;
+ (id)_mailtoURLForNotification:(id)notification;

/* instance methods */
- (BOOL)sourceClientIdentifier:(id)identifier matchesEventForSourceClientIdentifier:(id)identifier;
- (id)initWithDataSource:(id)source notificationManager:(id)manager iconIdentifierProvider:(id)provider sourceEventRepresentationProvider:(id)provider triggerHelper:(id)helper transitionProvider:(id)provider bodyDescriptionProvider:(id)provider travelAdvisoryTimelinessAuthority:(id)authority dateProvider:(id)provider notificationDataStorage:(id)storage urlHandler:(id)handler mapItemURLProvider:(id)urlprovider timeToLeaveRefreshStorage:(id)storage snoozeUpdateTimer:(id)timer;
- (id)contentForNotificationWithSourceClientIdentifier:(id)identifier;
- (id)contentForSourceClientIdentifier:(id)identifier sourceNotificationInfo:(id)info isProtectedDataAvailable:(BOOL)available;
- (void)willPostNotification:(id)notification;
- (void)refreshNotifications:(id)notifications;
- (void)didReceiveResponse:(id)response;
- (void)_didReceiveResponse:(id)response;
- (void)dataSource:(id)source triggeredWithSourceClientIdentifier:(id)identifier triggerData:(id)data;
- (void)dataSource:(id)source travelAdvisoryAuthorizationChanged:(BOOL)changed;
- (void)dataSource:(id)source travelEngineEventSignificantlyChangedWithSourceClientIdentifier:(id)identifier;
- (void)snoozeTimerFiredForEvents:(id)events;
- (void)_triggeredWithSourceClientIdentifier:(id)identifier triggerData:(id)data;
- (void)_travelEngineEventSignificantlyChangedWithSourceClientIdentifier:(id)identifier;
- (void)_travelAdvisoryAuthorizationChanged:(BOOL)changed;
- (void)_clearTravelAdvisoryHypotheses;
- (BOOL)_shouldCeaseRouteMonitoringEventForSourceClientIdentifier:(id)identifier;
- (BOOL)_mayCeaseRouteMonitoringForExistingNotificationData:(id)data;
- (unsigned long long)_travelAdvisoryTimelinessPeriodForHypothesis:(id)hypothesis;
- (unsigned long long)_calnTravelAdvisoryTimelinessPeriodFromEKTravelAvisoryTimelinessPeriod:(unsigned long long)period;
- (void)_updateTimeToLeaveRefreshTimerForSourceClientIdentifier:(id)identifier;
- (void)_updateTimeToLeaveRefreshTimerForSourceClientIdentifier:(id)identifier hypothesis:(id)hypothesis allowsLocationAlerts:(BOOL)alerts;
- (void)_updateSnoozeOptionsForEvents:(id)events;
- (void)updateSnoozeOptionsForPostedNotifications;
- (void)_refreshNotifications:(id)notifications;
- (void)_refreshNotificationRecordsWithObjectIDs:(id)ids;
- (void)_refreshNotification:(id)notification;
- (void)_refreshNotificationMetaDataWithObjectIDs:(id)ids;
- (void)_refreshNotificationMetaData:(id)data eventID:(id)id;
- (BOOL)_shouldRemoveNotificationMetaData:(id)data eventID:(id)id;
- (BOOL)_isNotificationMetaDataExpired:(id)expired eventID:(id)id;
- (void)_refreshTimeToLeaveRefreshTimersWithObjectIDs:(id)ids;
- (void)_refreshTimeToLeaveRefreshTimerWithRefreshDate:(id)date eventID:(id)id;
- (BOOL)_shouldRemoveTimeToLeaveRefreshTimerWithRefreshDate:(id)date eventID:(id)id;
- (BOOL)_notificationWithSourceClientIdentifier:(id)identifier affectedByChangesToObjects:(id)objects;
- (BOOL)_itemWithEventID:(id)id affectedByChangesToObjects:(id)objects;
- (id)_contentForNotificationWithSourceClientIdentifier:(id)identifier;
- (id)_contentForNotificationWithSourceClientIdentifier:(id)identifier shouldClearHypothesis:(BOOL)hypothesis;
- (id)_sourceNotificationInfoForSourceClientIdentifier:(id)identifier shouldClearHypothesis:(BOOL)hypothesis isForContentCreation:(BOOL)creation;
- (id)_sourceNotificationInfoForSourceClientIdentifier:(id)identifier notificationInfo:(id)info existingNotificationData:(id)data hypothesis:(id)hypothesis shouldClearHypothesis:(BOOL)hypothesis isOffsetFromTravelTimeStart:(BOOL)start isForContentCreation:(BOOL)creation;
- (id)_updatedSourceNotificationInfoForContentCreation:(id)creation;
- (id)_existingRecordMatchingEventForSourceClientIdentifier:(id)identifier;
- (id)_existingRecordMatchingEventForSourceClientIdentifier:(id)identifier existingRecords:(id)records;
- (void)_addRecord:(id)record sourceNotificationInfo:(id)info existingNotificationData:(id)data trigger:(unsigned long long)trigger transition:(unsigned long long)transition now:(id)now;
- (void)_notificationAddedWithSourceClientIdentifier:(id)identifier sourceNotificationInfo:(id)info trigger:(unsigned long long)trigger;
- (void)_updateNotification:(id)notification shouldClearHypothesis:(BOOL)hypothesis;
- (void)_addEventURL:(id)url mappingToEventObjectID:(id)id;
- (void)_commonHandleResponse:(id)response;
- (void)_handleDirectionsActionWithResponse:(id)response;
- (void)_handleConferenceCallActionWithResponse:(id)response;
- (void)_handleMailOrganizerActionWithResponse:(id)response;
- (id)_existingNotificationDataMatchingEventForSourceClientIdentifier:(id)identifier;
- (id)_notificationDataForSourceNotificationInfo:(id)info existingNotificationData:(id)data transition:(unsigned long long)transition now:(id)now;
- (void)_removeStoredNotificationDataForEventWithEventID:(id)id;
- (void)_updateStoredNotificationDataForSourceClientIdentifier:(id)identifier sourceNotificationInfo:(id)info existingNotificationData:(id)data transition:(unsigned long long)transition now:(id)now;
- (void)_addNotificationDataForSourceClientIdentifier:(id)identifier sourceNotificationInfo:(id)info existingNotificationData:(id)data transition:(unsigned long long)transition now:(id)now;
- (void)_addNotificationData:(id)data forSourceClientIdentifier:(id)identifier;
- (BOOL)_shouldRemoveStoredNotificationDataGivenShouldWithdrawNotification:(BOOL)notification hasExistingTravelInformation:(BOOL)information mayCeaseRouteMonitoring:(BOOL)monitoring;
- (BOOL)_shouldUpdateStoredNotificationDataGivenTransition:(unsigned long long)transition;
- (void)_resetStoredNotificationDataTimeToLeaveDisplayStateForSourceClientIdentifier:(id)identifier;
- (void)_clearTravelAdvisoryFromNotificationMetaDataForSourceClientIdentifier:(id)identifier;
- (id)_updatedNotificationDataResettingTimeToLeaveDisplayState:(id)state;
- (BOOL)migrateToStorage:(id)storage;
- (id)_notificationResponseDataForRecord:(id)record;
- (id)_notificationResponseDataForSourceNotificationInfo:(id)info;
- (void)_setNotificationResponseData:(id)data onNotificationContent:(id)content;
- (id)_eventRepresentationDictionaryWithSourceNotificationInfo:(id)info hypothesisMessage:(id)message;
- (id)_resolvedSourceClientIdentifierForNewSourceClientIdentifier:(id)identifier oldSourceClientIdentifier:(id)identifier;
- (BOOL)_sourceClientIdentifier:(id)identifier matchesEventForSourceClientIdentifier:(id)identifier;
- (id)_launchURLForResponse:(id)response;
- (id)_updatedLastFireTimeOfAlertOffsetFromTravelTimeGivenIsOffsetFromTravelTime:(BOOL)time;
@end

#endif /* CALNTriggeredEventNotificationSource_h */
