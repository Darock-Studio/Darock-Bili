//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1502.1.1.3.0
//
#ifndef EKTravelEngineAgendaEntry_h
#define EKTravelEngineAgendaEntry_h
@import Foundation;

#include "CALNRouteHypothesizer-Protocol.h"
#include "CALNRouteHypothesizerProvider-Protocol.h"
#include "EKTravelEngineOriginalEvent.h"
#include "EKTravelEngineThrottle.h"

@class CLLocation, CalGeocoder, EKTravelEngineHypothesis, NSData;
@protocol OS_dispatch_queue;

@interface EKTravelEngineAgendaEntry : NSObject

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;
@property (retain, nonatomic) EKTravelEngineOriginalEvent *originalEventInternal;
@property (retain, nonatomic) EKTravelEngineThrottle *throttle;
@property (retain, nonatomic) CalGeocoder *geocoder;
@property (readonly, nonatomic) NSObject<CALNRouteHypothesizerProvider> *hypothesizerProvider;
@property (retain, nonatomic) NSObject<CALNRouteHypothesizer> *hypothesizer;
@property (retain, nonatomic) EKTravelEngineHypothesis *latestHypothesis;
@property (retain, nonatomic) CLLocation *geoLocation;
@property (retain, nonatomic) NSData *mapKitHandle;
@property (nonatomic) BOOL geocodedEventEncountered;
@property (nonatomic) BOOL hypothesizerSentAtLeastOneHypothesis;
@property (nonatomic) long long travelTimeThresholdExceededState;
@property (nonatomic) double maximumTravelDurationEncountered;
@property (readonly, nonatomic) EKTravelEngineOriginalEvent *originalEvent;
@property (copy, nonatomic) id /* block */ updateBlock;
@property (copy, nonatomic) id /* block */ entrySignificantlyChangedBlock;
@property (nonatomic) BOOL dismissed;

/* class methods */
+ (double)fuzzyMaximumInitialUpdateIntervalBeforeStartDate;

/* instance methods */
- (id)initWithRouteHypothesizerProvider:(id)provider;
- (void)dealloc;
- (void)updateHypothesizerIfNecessaryWithOriginalEvent:(id)event;
- (void)_hypothesisRefreshTimerFired;
- (void)_requestHypothesisRefreshTimerFired;
- (void)_emissionHypothesisRefreshTimerFired;
- (void)requestHypothesisRefreshAtDate:(id)date;
- (void)cancelHypothesisRefreshRequest;
- (void)cancelEmissionHypothesisRefresh;
- (void)createAlarmWithName:(id)name atDate:(id)date;
- (void)removeAlarmWithName:(id)name;
- (void)_createHypothesisRequestRefreshTimerWithDate:(id)date;
- (void)_uninstallRequestHypothesisRefreshTimer;
- (void)_createEmissionHypothesisRefreshTimerWithDate:(id)date;
- (void)_uninstallEmissionHypothesisRefreshTimer;
- (void)reset;
- (void)sendFeedbackForPostingLeaveByNotification;
- (void)sendFeedbackForPostingLeaveNowNotification;
- (void)_accountForGeocodedEventEncounter;
- (void)_trackTTLCandidateEvent:(id)event;
- (void)_updateTravelTimeExceededThresholdStateUsingExceededValue:(BOOL)value;
- (void)_performAnalyticsPostProcessing;
- (id)requestHypothesisRefreshAlarmName;
- (id)emissionHypothesisRefreshAlarmName;
- (BOOL)receivedAlarmNamed:(id)named;
- (void)_sendFeedbackToHypothesizerForPostingNotification:(unsigned long long)notification;
- (void)_clearEverything;
- (void)_enhanceLocation;
- (void)_setUpRouteMonitoring;
- (id)_generateDestination;
- (id)_createSyntheticHypothesis;
- (void)_createHypothesizerForDestination:(id)destination;
- (void)_updateWithHypothesis:(id)hypothesis;
@end

#endif /* EKTravelEngineAgendaEntry_h */
