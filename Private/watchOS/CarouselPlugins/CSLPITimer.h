//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1112.2.15.0.0
//
#ifndef CSLPITimer_h
#define CSLPITimer_h
@import Foundation;

#include "CSLSTimer-Protocol.h"

@class BSContinuousMachTimer, NSString, SWWakingTimer;
@protocol BSTimerScheduleQuerying><BSCancellable><BSInvalidatable, OS_dispatch_queue;

@interface CSLPITimer : NSObject<CSLSTimer> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  id /* block */ _handler;
  SWWakingTimer *_wakingTimer;
  BSContinuousMachTimer *_nonWakingTimer;
  NSObject<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable> *_timer;
}

@property (readonly, nonatomic) double fireInterval;
@property (readonly, nonatomic) double leewayInterval;
@property (readonly, nonatomic) BOOL scheduled;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (readonly, nonatomic) double timeRemaining;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)scheduledTimerWithFireInterval:(double)interval leewayInterval:(double)interval serviceIdentifier:(id)identifier queue:(id)queue handler:(id /* block */)handler;

/* instance methods */
- (id)initWithFireInterval:(double)interval leewayInterval:(double)interval serviceIdentifier:(id)identifier queue:(id)queue handler:(id /* block */)handler;
- (id)initWithFireInterval:(double)interval leewayInterval:(double)interval shouldWakeDevice:(BOOL)device serviceIdentifier:(id)identifier queue:(id)queue handler:(id /* block */)handler;
- (void)dealloc;
- (void)scheduleWithFireInterval:(double)interval leewayInterval:(double)interval queue:(id)queue handler:(id /* block */)handler;
- (void)schedule;
- (void)scheduleInSeconds:(double)seconds;
- (void)scheduleWithDate:(id)date;
- (void)cancel;
- (void)invalidate;
- (void)fireImmediately;
- (BOOL)isScheduled;
@end

#endif /* CSLPITimer_h */
