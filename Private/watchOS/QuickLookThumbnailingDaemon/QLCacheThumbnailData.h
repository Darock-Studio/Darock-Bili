//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 186.2.2.0.0
//
#ifndef QLCacheThumbnailData_h
#define QLCacheThumbnailData_h
@import Foundation;

#include "QLCacheBlobInfo.h"

@class NSData, NSDate, QLCacheFileIdentifier, QLTBitmapFormat, QLThumbnailVersion;
@protocol OS_dispatch_queue;

@interface QLCacheThumbnailData : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  unsigned long long _state;
}

@property (readonly, nonatomic) unsigned long long totalBufferSize;
@property (readonly, nonatomic) BOOL hasData;
@property (readonly, nonatomic) QLCacheFileIdentifier *fileIdentifier;
@property (readonly, nonatomic) QLThumbnailVersion *version;
@property (readonly, nonatomic) unsigned long long cacheId;
@property (readonly, nonatomic) float size;
@property (readonly, nonatomic) BOOL iconMode;
@property (readonly, nonatomic) long long iconVariant;
@property (readonly, nonatomic) int interpolationQuality;
@property (readonly, nonatomic) unsigned long long badgeType;
@property (readonly, nonatomic) QLTBitmapFormat *bitmapFormat;
@property (readonly, nonatomic) NSData *bitmapData;
@property (readonly, nonatomic) NSData *metadata;
@property (retain, nonatomic) QLCacheBlobInfo *bitmapDataToValidate;
@property (retain, nonatomic) QLCacheBlobInfo *metadataToValidate;
@property (readonly, nonatomic) int flavor;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentRect;
@property (readonly, nonatomic) unsigned long long externalGeneratorDataHash;
@property (readonly, nonatomic) unsigned long long hitCount;
@property (readonly, copy, nonatomic) NSDate *lastHitDate;

/* instance methods */
- (id)initWithCacheId:(unsigned long long)id fileIdentifier:(id)identifier version:(id)version size:(float)size iconMode:(BOOL)mode iconVariant:(long long)variant interpolationQuality:(int)quality badgeType:(unsigned long long)type externalGeneratorDataHash:(unsigned long long)hash hitCount:(unsigned long long)count lastHitDate:(id)date;
- (id)initWithCacheId:(unsigned long long)id fileIdentifier:(id)identifier version:(id)version size:(float)size iconMode:(BOOL)mode iconVariant:(long long)variant interpolationQuality:(int)quality hitCount:(unsigned long long)count lastHitDate:(id)date bitmapFormat:(id)format bitmapData:(id)data metadata:(id)metadata flavor:(int)flavor contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect badgeType:(unsigned long long)type externalGeneratorDataHash:(unsigned long long)hash;
- (id)initWithCacheId:(unsigned long long)id thumbnailRequest:(id)request size:(float)size bitmapFormat:(id)format bitmapData:(id)data metadata:(id)metadata flavor:(int)flavor contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect badgeType:(unsigned long long)type;
- (id)initWithCacheId:(unsigned long long)id thumbnailRequest:(id)request size:(float)size badgeType:(unsigned long long)type;
- (id)initWithUnsavedDataForThumbnailRequest:(id)request size:(float)size bitmapFormat:(id)format bitmapData:(id)data reservationInfo:(id)info metadata:(id)metadata reservationInfo:(id)info flavor:(int)flavor contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect badgeType:(unsigned long long)type;
- (void)dealloc;
- (BOOL)setState:(unsigned long long)state;
- (BOOL)setState:(unsigned long long)state changedState:(BOOL *)state;
- (unsigned long long)state;
@end

#endif /* QLCacheThumbnailData_h */
