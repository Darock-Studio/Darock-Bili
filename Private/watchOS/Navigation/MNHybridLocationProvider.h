//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef MNHybridLocationProvider_h
#define MNHybridLocationProvider_h
@import Foundation;

#include "MNCoreLocationProvider.h"
#include "MNLocationProvider-Protocol.h"
#include "MNLocationProviderDelegate-Protocol.h"

@class NSBundle, NSString;

@interface MNHybridLocationProvider : NSObject<MNLocationProviderDelegate, MNLocationProvider> {
  /* instance variables */
  double _nonLeechedDesiredAccuracy;
  double _effectiveAccuracy;
  MNCoreLocationProvider *_coreLocationProvider;
}

@property (nonatomic) unsigned long long mode;
@property (nonatomic) double distanceFilter;
@property (nonatomic) double desiredAccuracy;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<MNLocationProviderDelegate> *delegate;
@property (retain, nonatomic) NSBundle *effectiveBundle;
@property (copy, nonatomic) NSString *effectiveBundleIdentifier;
@property (readonly, nonatomic) BOOL isAuthorized;
@property (nonatomic) int headingOrientation;
@property (readonly, nonatomic) double expectedGpsUpdateInterval;
@property (readonly, nonatomic) BOOL coarseModeEnabled;
@property (readonly, nonatomic) BOOL isTracePlayer;
@property (readonly, nonatomic) unsigned long long traceVersion;
@property (readonly, nonatomic) double timeScale;

/* instance methods */
- (id)init;
- (id)initWithEffectiveBundle:(id)bundle;
- (id)initWithEffectiveBundleIdentifier:(id)identifier;
- (void)_sharedInit;
- (void)_setEffectiveAccuracy:(double)accuracy;
- (id)coreLocationProvider;
- (id)leechedLocationProvider;
- (void)startUpdatingLocation;
- (void)stopUpdatingLocation;
- (void)startUpdatingHeading;
- (void)stopUpdatingHeading;
- (void)startUpdatingVehicleSpeed;
- (void)stopUpdatingVehicleSpeed;
- (void)startUpdatingVehicleHeading;
- (void)stopUpdatingVehicleHeading;
- (void)resetForActiveTileGroupChanged;
- (void)startMonitoringForRegion:(id)region;
- (void)stopMonitoringForRegion:(id)region;
- (void)locationProvider:(id)provider didUpdateLocation:(id)location;
- (void)locationProvider:(id)provider didUpdateHeading:(id)heading;
- (void)locationProvider:(id)provider didReceiveError:(id)error;
- (void)locationProviderDidChangeAuthorizationStatus:(id)status;
- (void)locationProvider:(id)provider didChangeCoarseMode:(BOOL)mode;
- (BOOL)locationProviderShouldPauseLocationUpdates:(id)updates;
- (void)locationProviderDidPauseLocationUpdates:(id)updates;
- (void)locationProviderDidResumeLocationUpdates:(id)updates;
- (void)locationProvider:(id)provider didUpdateVehicleSpeed:(double)speed timestamp:(id)timestamp;
- (void)locationProvider:(id)provider didUpdateVehicleHeading:(double)heading timestamp:(id)timestamp;
- (void)locationProvider:(id)provider didEnterRegion:(id)region;
- (void)locationProvider:(id)provider didExitRegion:(id)region;
- (void)locationProvider:(id)provider monitoringDidFailForRegion:(id)region withError:(id)error;
@end

#endif /* MNHybridLocationProvider_h */
