//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef MNTurnByTurnLocationTracker_h
#define MNTurnByTurnLocationTracker_h
@import Foundation;

#include "MNLocationTracker.h"
#include "GEOPListStateCapturing-Protocol.h"
#include "MNArrivalUpdater.h"
#include "MNArrivalUpdaterDelegate-Protocol.h"
#include "MNLocation.h"

@class GEODirectionsServiceRequest, GEONavigationMapMatcher, GEOPathMatcher, NSDate, NSMutableArray, NSString;

@interface MNTurnByTurnLocationTracker : MNLocationTracker<GEOPListStateCapturing, MNArrivalUpdaterDelegate> {
  /* instance variables */
  GEONavigationMapMatcher *_mapMatcher;
  MNArrivalUpdater *_arrivalUpdater;
  unsigned long long _lastArrivalLegIndex;
  NSDate *_startDate;
  struct { double latitude; double longitude; } _originCoordinate;
  GEODirectionsServiceRequest *_pendingRequest;
  unsigned long long _rerouteReason;
  MNLocation *_previousRerouteLocation;
  NSMutableArray *_rerouteDates;
  unsigned long long _consecutiveOffRouteCount;
  MNLocation *_lastKnownGoodLocationOnRoute;
  BOOL _isNavigatingInLowGuidance;
  GEOPathMatcher *_pathMatcher;
  unsigned long long _stateCaptureHandle;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initForTestingWithRoute:(id)route;
- (id)initWithNavigationSession:(id)session;
- (void)dealloc;
- (void)rerouteWithWaypoints:(id)waypoints completionHandler:(id /* block */)handler;
- (void)insertWaypoint:(id)waypoint completionHandler:(id /* block */)handler;
- (void)removeWaypointAtIndex:(unsigned long long)index completionHandler:(id /* block */)handler;
- (void)advanceToNextLeg;
- (void)updateDestination:(id)destination completionHandler:(id /* block */)handler;
- (void)forceRerouteWithReason:(unsigned long long)reason;
- (void)reroute:(id)reroute reason:(unsigned long long)reason;
- (void)changeTransportType:(int)type route:(id)route;
- (void)updateForETAUResponse:(id)etauresponse;
- (BOOL)_isLocation:(id)location nearOrigin:(id)origin;
- (void)_updateStateForLocation:(id)location;
- (void)_updateSwitchTransportTypeForLocation:(id)location;
- (BOOL)_shouldAdvanceGuidanceToRouteMatch:(id)match;
- (unsigned long long)_modifiedStepIndexForMatchResult:(id)result matchType:(unsigned long long)type;
- (id)_matchedLocationForMatchResult:(id)result originalLocation:(id)location;
- (BOOL)hasArrivedAtFinalDestination;
- (BOOL)_isRoadFeatureInOppositeDirection:(id)direction ofCoordinate:(struct { double x0; double x1; })coordinate course:(double)course;
- (int)_routeHintTypeForTransportType:(int)type;
- (void)_sendRouteHintForLocation:(id)location;
- (void)_requestRerouteWithReason:(unsigned long long)reason requestHandler:(id /* block */)handler completionHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (id)_routeAttributesFromRouteCoordinate:(struct PolylineCoordinate { unsigned int x0; float x1; })coordinate;
- (id)_rerouteRequestParametersForLocation:(id)location transportType:(int)type;
- (void)_handleSuccessfulRerouteRequest:(id)request response:(id)response waypoints:(id)waypoints;
- (void)_updateForNewRoute:(id)route rerouteReason:(unsigned long long)reason request:(id)request response:(id)response;
- (void)_cancelPendingRerouteRequest;
- (void)_handleWaypointRerouteForLocation:(id)location;
- (void)_handleOffRouteForLocation:(id)location;
- (BOOL)_allowRerouteForLocation:(id)location outError:(out id *)error;
- (void)setNavigationSessionState:(id)state;
- (BOOL)isRerouting;
- (void)startTrackingWithInitialLocation:(id)location targetLegIndex:(unsigned long long)index;
- (void)stopTracking;
- (void)updateLocation:(id)location;
- (id)_matchedLocationForLocation:(id)location;
- (void)traceJumpedInTime;
- (id)_newMapMatcherForRoute:(id)route;
- (id)_overrideLocationForLocation:(id)location;
- (void)_updateForLocation:(id)location;
- (void)_updateForReroute:(id)reroute rerouteReason:(unsigned long long)reason request:(id)request response:(id)response;
- (void)_updateForArrivalAtLegIndex:(unsigned long long)index;
- (void)_updateForDepartureFromLegIndex:(unsigned long long)index withReason:(unsigned long long)reason;
- (int)_detectedMotionForLocation:(id)location;
- (BOOL)_allowSwitchToTransportType:(int)type forLocation:(id)location;
- (void)_setIsNavigatingInLowGuidance:(BOOL)guidance;
- (void)forceOnRoute:(id)route atLocation:(id)location;
- (void)arrivalUpdater:(id)updater didUpdateArrivalInfo:(id)info;
- (void)arrivalUpdater:(id)updater isApproachingEndOfLeg:(unsigned long long)leg;
- (void)arrivalUpdater:(id)updater didArriveAtEndOfLegIndex:(unsigned long long)index;
- (void)arrivalUpdater:(id)updater didEnterPreArrivalStateForLegIndex:(unsigned long long)index;
- (void)arrivalUpdater:(id)updater didDepartFromLegIndex:(unsigned long long)index withReason:(unsigned long long)reason;
- (void)arrivalUpdater:(id)updater didTimeoutAtLegIndex:(unsigned long long)index withReason:(unsigned long long)reason;
- (void)arrivalUpdater:(id)updater shouldShowChargingInfoForWaypoint:(id)waypoint;
- (id)captureStatePlistWithHints:(struct os_state_hints_s { unsigned int x0; char * x1; unsigned int x2; unsigned int x3; } *)hints;
@end

#endif /* MNTurnByTurnLocationTracker_h */
