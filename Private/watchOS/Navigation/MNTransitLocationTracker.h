//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef MNTransitLocationTracker_h
#define MNTransitLocationTracker_h
@import Foundation;

#include "MNSteppingLocationTracker.h"
#include "MNLocation.h"
#include "MNLocationManagerObserver-Protocol.h"

@class GEORoadMatcher, GEOTransitRouteMatcher, NSDate, NSMutableDictionary, NSString;

@interface MNTransitLocationTracker : MNSteppingLocationTracker<MNLocationManagerObserver> {
  /* instance variables */
  GEOTransitRouteMatcher *_transitRouteMatcher;
  GEORoadMatcher *_roadMatcher;
  NSDate *_lastLocationTimestamp;
  NSDate *_lastAccurateLocationDate;
  MNLocation *_lastMatchedLocation;
  NSDate *_startDate;
  BOOL _hasArrived;
  NSMutableDictionary *_monitoredRegions;
  NSMutableDictionary *_transitRegions;
  NSMutableDictionary *_transitAlerts;
}

@property (nonatomic) BOOL debugSnapToTransitLines;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithNavigationSession:(id)session;
- (int)transportType;
- (void)startTrackingWithInitialLocation:(id)location targetLegIndex:(unsigned long long)index;
- (void)stopTracking;
- (void)reroute:(id)reroute reason:(unsigned long long)reason;
- (void)_initRegionAlertsForRoute:(id)route;
- (id)_matchedLocationForLocation:(id)location;
- (id)_correctedLocationForLocation:(id)location;
- (id)_locationForInaccurateLocation:(id)location;
- (id)_roadMatchForOffRouteLocation:(id)location routeMatch:(id)match;
- (double)_timeToDisplayStaleGPSLocation;
- (BOOL)_isInaccurateLocation:(id)location;
- (void)_startMonitoringTransitAlerts;
- (id)_clRegionWithCenter:(id)center identifier:(id)identifier signalStrength:(int)strength;
- (void)_stopMonitoringAllRegions;
- (void)_stopMonitoringForRegionWithIdentifier:(id)identifier;
- (id)_stepForRegionAlert:(id)alert;
- (void)_triggerAlertForRegionId:(id)id;
- (void)locationManagerUpdatedLocation:(id)location;
- (void)locationManagerFailedToUpdateLocation:(id)location withError:(id)error;
- (void)locationManagerDidReset:(id)reset;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)updates;
- (void)locationManagerDidPauseLocationUpdates:(id)updates;
- (void)locationManagerDidResumeLocationUpdates:(id)updates;
- (void)locationManager:(id)manager didUpdateVehicleSpeed:(double)speed timestamp:(id)timestamp;
- (void)locationManager:(id)manager didUpdateVehicleHeading:(double)heading timestamp:(id)timestamp;
- (void)locationManager:(id)manager didExitRegion:(id)region;
- (void)locationManager:(id)manager didEnterRegion:(id)region;
- (void)locationManager:(id)manager monitoringDidFailForRegion:(id)region withError:(id)error;
@end

#endif /* MNTransitLocationTracker_h */
