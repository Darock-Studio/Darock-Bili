//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef MNNavigationStateManager_h
#define MNNavigationStateManager_h
@import Foundation;

#include "MNNavigationSessionManagerDelegate-Protocol.h"
#include "MNNavigationState.h"
#include "MNNavigationStateInterface-Protocol.h"
#include "MNObserverHashTable.h"

@class GEOApplicationAuditToken, NSString, geo_isolater;

@interface MNNavigationStateManager : NSObject<MNNavigationStateInterface> {
  /* instance variables */
  MNObserverHashTable *_navigationStateObservers;
  geo_isolater *_isolater;
}

@property (readonly, nonatomic) GEOApplicationAuditToken *auditToken;
@property (weak, nonatomic) NSObject<MNNavigationSessionManagerDelegate> *navigationDelegate;
@property (readonly, nonatomic) BOOL isStarted;
@property (readonly, nonatomic) MNNavigationState *currentState;
@property (readonly, nonatomic) unsigned long long currentStateType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedManager;

/* instance methods */
- (void)transitionToState:(id)state;
- (void)_changeToDesiredLocationProviderTypeForState:(id)state;
- (unsigned long long)_stateTypeForState:(id)state;
- (id)navSessionDestination;
- (id)init;
- (void)dealloc;
- (void)start;
- (void)reset;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (void)_replayStateForNewObserver:(id)observer;
- (id)_initialState;
- (void)locationManager:(id)manager didUpdateVehicleSpeed:(double)speed timestamp:(id)timestamp;
- (void)locationManager:(id)manager didUpdateVehicleHeading:(double)heading timestamp:(id)timestamp;
- (void)setRoutesForPreview:(id)preview selectedRouteIndex:(unsigned long long)index;
- (void)startNavigationWithDetails:(id)details activeBlock:(id /* block */)block;
- (void)stopNavigationWithReason:(unsigned long long)reason;
- (void)rerouteWithWaypoints:(id)waypoints;
- (void)insertWaypoint:(id)waypoint;
- (void)removeWaypointAtIndex:(unsigned long long)index;
- (void)advanceToNextLeg;
- (void)updateDestination:(id)destination;
- (void)resumeOriginalDestination;
- (void)forceReroute;
- (void)switchToRoute:(id)route;
- (void)changeTransportType:(int)type route:(id)route;
- (void)setGuidanceType:(unsigned long long)type;
- (void)changeUserOptions:(id)options;
- (void)repeatCurrentGuidanceWithReply:(id /* block */)reply;
- (void)repeatCurrentTrafficAlertWithReply:(id /* block */)reply;
- (void)vibrateForPrompt:(unsigned long long)prompt withReply:(id /* block */)reply;
- (void)stopCurrentGuidancePrompt;
- (void)setHeadingOrientation:(int)orientation;
- (void)setGuidancePromptsEnabled:(BOOL)enabled;
- (void)setIsConnectedToCarplay:(BOOL)carplay;
- (void)setDisplayedStepIndex:(unsigned long long)index;
- (void)setRideIndex:(unsigned long long)index forSegmentIndex:(unsigned long long)index;
- (void)setJunctionViewImageWidth:(double)width height:(double)height;
- (void)disableNavigationCapability:(unsigned long long)capability;
- (void)enableNavigationCapability:(unsigned long long)capability;
- (void)acceptReroute:(BOOL)reroute forTrafficIncidentAlert:(id)alert;
- (void)setTraceIsPlaying:(BOOL)playing;
- (void)setTracePlaybackSpeed:(double)speed;
- (void)setTracePosition:(double)position;
- (void)recordTraceBookmarkAtCurrentPositionWthScreenshotData:(id)data;
- (void)recordPedestrianTracePath:(id)path;
- (void)setSimulationSpeedOverride:(double)override;
- (void)setSimulationSpeedMultiplier:(double)multiplier;
- (void)setSimulationPosition:(double)position;
- (void)interfaceHashesWithHandler:(id /* block */)handler;
- (void)checkinForNavigationService:(id /* block */)service;
- (void)pauseRealtimeUpdatesForSubscriber:(id)subscriber;
- (void)resumeRealtimeUpdatesForSubscriber:(id)subscriber;
@end

#endif /* MNNavigationStateManager_h */
