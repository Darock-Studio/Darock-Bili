//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef MNLocation_h
#define MNLocation_h
@import Foundation;

#include "CLLocation.h"
#include "NSSecureCoding-Protocol.h"

@class CLLocation, GEONavigationMatchInfo, GEORoadMatch, GEORouteMatch, NSDate, NSString, NSUUID;

@interface MNLocation : CLLocation<NSSecureCoding>

@property (nonatomic) unsigned long long traceIndex;
@property (nonatomic) unsigned long long state;
@property (retain, nonatomic) GEORoadMatch *roadMatch;
@property (retain, nonatomic) CLLocation *rawLocation;
@property (copy, nonatomic) NSUUID *uuid;
@property (readonly, nonatomic) NSUUID *routeID;
@property (retain, nonatomic) GEORouteMatch *routeMatch;
@property (retain, nonatomic) GEONavigationMatchInfo *detailedMatchInfo;
@property (copy, nonatomic) NSString *roadName;
@property (copy, nonatomic) NSString *shieldText;
@property (nonatomic) long long shieldType;
@property (nonatomic) unsigned int roadLineType;
@property (nonatomic) int rampType;
@property (nonatomic) unsigned long long speedLimit;
@property (nonatomic) BOOL speedLimitIsMPH;
@property (nonatomic) long long speedLimitShieldType;
@property (nonatomic) BOOL isDirectional;
@property (nonatomic) BOOL locationUnreliable;
@property (readonly, nonatomic) unsigned long long stepIndex;
@property (readonly, nonatomic) BOOL isProjected;
@property (retain, nonatomic) NSDate *expirationDate;
@property (retain, nonatomic) NSDate *originalDate;
@property (nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } rawShiftedCoordinate;
@property (nonatomic) BOOL isLeeched;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithCLLocation:(id)cllocation;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location;
- (id)initWithRouteMatch:(id)match rawLocation:(id)location locationMatchType:(unsigned long long)type;
- (id)initWithRoadMatch:(id)match rawLocation:(id)location locationMatchType:(unsigned long long)type;
- (id)initWithRawLocation:(id)location locationMatchType:(unsigned long long)type;
- (id)initWithRawLocation:(id)location;
- (id)propagatedLocationForTimeInterval:(double)interval shouldProjectAlongRoute:(BOOL)route;
- (BOOL)isEqualToLocation:(id)location;
- (double)distanceToEndOfRoute;
- (double)distanceToEndOfCurrentLeg;
- (id)matchInfo;
- (id)_roadFeature;
- (void)_readFromRoadFeature:(id)feature;
- (BOOL)_navigation_isStale;
- (BOOL)_navigation_hasValidCourse;
- (id)_navigation_routeMatch;
- (struct CLLocationCoordinate2D { double x0; double x1; })_navigation_rawShiftedCoordinate;
- (id)_navigation_detailedMatchInfo;
- (id)description;
- (id)_referenceFrameAsString:(int)string;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* MNLocation_h */
