//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef MNTraceRecorder_h
#define MNTraceRecorder_h
@import Foundation;

#include "MNLocationRecorder-Protocol.h"
#include "MNTrace.h"
#include "MNTracePreparedStatement.h"

@class NSDate, NSMapTable, NSString;

@interface MNTraceRecorder : NSObject<MNLocationRecorder> {
  /* instance variables */
  NSDate *_recordingCompassHeadingLastDate;
  BOOL _corrupted;
  BOOL _closed;
  BOOL _created;
  MNTracePreparedStatement *_updateRecordingStartTimeStatement;
  MNTracePreparedStatement *_updateDirectionsStartTimeStatement;
  MNTracePreparedStatement *_updateNavigationStartTimeStatement;
  MNTracePreparedStatement *_updateNavigationEndTimeStatement;
  MNTracePreparedStatement *_recordEnvironmentInfoStatement;
  MNTracePreparedStatement *_recordDebugSettingStatement;
  MNTracePreparedStatement *_recordAudioSettingStatement;
  MNTracePreparedStatement *_recordStylesheetStatement;
  MNTracePreparedStatement *_recordLocationStatement;
  MNTracePreparedStatement *_recordLocationErrorStatement;
  MNTracePreparedStatement *_recordMatchInfoStatement;
  MNTracePreparedStatement *_recordDirectionsStatement;
  MNTracePreparedStatement *_recordETAUStatement;
  MNTracePreparedStatement *_recordRealtimeTransitUpdateRequest;
  MNTracePreparedStatement *_recordRealtimeTransitUpdateResponse;
  MNTracePreparedStatement *_recordRealtimeTransitUpdateResponseError;
  MNTracePreparedStatement *_recordVehicleSpeed;
  MNTracePreparedStatement *_recordVehicleHeading;
  MNTracePreparedStatement *_recordMotionData;
  MNTracePreparedStatement *_recordCompassHeading;
  MNTracePreparedStatement *_recordVirtualGarageVehicleState;
  MNTracePreparedStatement *_recordNavigationEvent;
  MNTracePreparedStatement *_recordNavigationUpdate;
  MNTracePreparedStatement *_updateNavigationEventLocationID;
  unsigned long long _routeRequestCount;
  unsigned long long _etaTrafficUpdateCount;
  NSMapTable *_eventsPendingLocationReference;
  id /* block */ _errorHandler;
  BOOL _lastPauseSpokenAudio;
  long long _lastVoiceGuidanceSetting;
  unsigned long long _lastLaneEventHash;
}

@property (readonly, nonatomic) NSString *tracePath;
@property (readonly, nonatomic) MNTrace *trace;
@property (retain, nonatomic) NSDate *recordingStartDate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)startWritingTraceToPath:(id)path withErrorHandler:(id /* block */)handler;
- (void)saveTraceWithCompletionHandler:(id /* block */)handler;
- (void)saveTraceSynchronously;
- (void)_dispatchWrite:(id /* block */)write;
- (void)_logSqliteErrorWithResult:(int)result file:(const char *)file line:(int)line;
- (BOOL)_isTracePathValid:(id)valid;
- (void)_initializeTraceDB;
- (void)_updateForExistingTrace;
- (void)_prepareStatements;
- (void)_closeTraceDB;
- (double)timeSinceRecordingBegan;
- (void)recordEnvironmentInfo:(id)info value:(id)value;
- (void)recordDebugSetting:(id)setting settingValue:(id)value;
- (void)recordAudioSetting:(BOOL)setting voiceGuidance:(long long)guidance;
- (void)recordStylesheet:(id)stylesheet data:(id)data;
- (void)recordMiscInfo:(id)info value:(id)value;
- (void)recordNavigationEvent:(long long)event forLocation:(id)location description:(id)description;
- (void)_recordLocationMatchInfoOnWriteQueue:(id)queue forLocationID:(int)id;
- (void)recordLocation:(id)location rawLocation:(id)location;
- (void)recordLocation:(id)location rawLocation:(id)location timestamp:(double)timestamp;
- (void)_recordLocationEvent:(long long)event recordingTimestamp:(double)timestamp coordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate rawCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate timestamp:(double)timestamp horizontalAccuracy:(double)accuracy verticalAccuracy:(double)accuracy altitude:(double)altitude speed:(double)speed speedAccuracy:(double)accuracy course:(double)course rawCourse:(double)course type:(int)type courseAccuracy:(double)accuracy correctedCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate correctedCourse:(double)course matchType:(int)type activeTransportType:(int)type matchInfo:(id)info correctedLocation:(id)location speedLimit:(int)limit shieldText:(id)text shieldType:(int)type;
- (void)_recordLocationEvent:(long long)event recordingTimestamp:(double)timestamp location:(id)location correctedLocation:(id)location;
- (void)recordLocation:(id)location timestamp:(double)timestamp;
- (void)recordSimulatedCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate course:(double)course altitude:(double)altitude speed:(double)speed timestamp:(double)timestamp activeTransportType:(int)type;
- (void)recordLocation:(id)location correctedLocation:(id)location;
- (void)recordLocationUpdatePause;
- (void)recordLocationUpdateResume;
- (void)recordError:(id)error;
- (void)setIsSimulation:(BOOL)simulation;
- (void)setRouteGenius:(BOOL)genius;
- (void)resetLocationsForSimulation;
- (void)beginTransaction;
- (void)endTransaction;
- (void)setNavigationStartDate:(id)date;
- (void)setNavigationEndDate:(id)date;
- (void)recordRouteChangeWithIndex:(unsigned long long)index directionsResponseID:(id)id etauResponseID:(id)id rerouteReason:(unsigned long long)reason;
- (void)recordDepartWaypoint:(id)waypoint legIndex:(unsigned long long)index departureReason:(unsigned long long)reason;
- (void)recordDirectionsRequest:(id)request response:(id)response error:(id)error waypoints:(id)waypoints selectedRouteIndex:(unsigned long long)index requestTimestamp:(double)timestamp responseTimestamp:(double)timestamp;
- (void)recordInitialCourse:(double)course;
- (void)recordETAURequest:(id)etaurequest response:(id)response error:(id)error destinationName:(id)name requestTimestamp:(double)timestamp responseTimestamp:(double)timestamp;
- (void)recordTransitUpdateRequest:(id)request withTimestamp:(double)timestamp;
- (void)recordTransitUpdateResponse:(id)response;
- (void)recordTransitUpdateError:(id)error;
- (void)recordVehicleSpeed:(double)speed timestamp:(id)timestamp;
- (void)recordVehicleHeading:(double)heading timestamp:(id)timestamp;
- (void)recordMotionUpdate:(unsigned long long)update exitType:(unsigned long long)type confidence:(unsigned long long)confidence;
- (void)recordCompassHeading:(double)heading magneticHeading:(double)heading accuracy:(double)accuracy timestamp:(id)timestamp;
- (void)recordVirtualGarageVehicleState:(id)state isDifferentVehicle:(BOOL)vehicle;
- (void)_logError:(id)error resultCode:(int)code;
- (void)_recordNavigationUpdate:(long long)update parameters:(id)parameters;
- (void)_updateNavigationEventsWithLocationReference:(id)reference;
- (void)_executeStatementForQuery:(id)query handler:(id /* block */)handler;
@end

#endif /* MNTraceRecorder_h */
