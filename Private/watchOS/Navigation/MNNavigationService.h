//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2298.42.9.28.5
//
#ifndef MNNavigationService_h
#define MNNavigationService_h
@import Foundation;

#include "GEOPListStateCapturing-Protocol.h"
#include "MNArrivalInfo.h"
#include "MNBatteryChargeInfo.h"
#include "MNDisplayETAInfo.h"
#include "MNGuidanceLaneInfo.h"
#include "MNLocation.h"
#include "MNNavigationClientProxy.h"
#include "MNNavigationDetails.h"
#include "MNNavigationServiceClientInterface-Protocol.h"
#include "MNNavigationServiceProxy-Protocol.h"
#include "MNNavigationServiceRemoteProxy.h"
#include "MNObserverHashTable.h"
#include "MNRouteDistanceInfo.h"
#include "MNUserOptions.h"
#include "MNVehicleParkingInfo.h"

@class GEOComposedRoute, GEOComposedWaypoint, GEODirectionsRequest, GEODirectionsResponse, GEOResumeRouteHandle, NSArray, NSMutableDictionary, NSSet, NSString, NSUUID;

@interface MNNavigationService : NSObject<GEOPListStateCapturing, MNNavigationServiceClientInterface> {
  /* instance variables */
  NSObject<MNNavigationServiceProxy> *_proxy;
  MNNavigationServiceRemoteProxy *_remoteProxy;
  MNNavigationClientProxy *_clientProxy;
  NSSet *_realtimeUpdates;
  NSUUID *_uuid;
  NSMutableDictionary *_disabledCapabilities;
  unsigned long long _stateCaptureHandle;
}

@property (readonly) MNNavigationDetails *details;
@property (readonly, nonatomic) MNObserverHashTable *navigationObservers;
@property (retain) MNNavigationDetails *details;
@property (retain, nonatomic) MNObserverHashTable *navigationObservers;
@property (retain) MNUserOptions *cachedUserOptions;
@property (nonatomic) int headingOrientation;
@property (nonatomic) BOOL guidancePromptsEnabled;
@property (readonly, nonatomic) unsigned long long state;
@property (readonly, nonatomic) BOOL isInNavigatingState;
@property (readonly, nonatomic) long long navigationType;
@property (readonly, nonatomic) int navigationState;
@property (readonly, nonatomic) int navigationTransportType;
@property (readonly, nonatomic) BOOL isTrackingCurrentLocation;
@property (readonly, nonatomic) BOOL isInPreArrivalState;
@property (readonly, nonatomic) NSString *currentVoiceLanguage;
@property (readonly, nonatomic) BOOL isApproachingWaypoint;
@property (readonly, nonatomic) MNArrivalInfo *arrivalInfo;
@property (readonly, nonatomic) long long desiredNavigationType;
@property (readonly, nonatomic) int desiredTransportType;
@property (readonly, nonatomic) BOOL isResumingMultipointRoute;
@property (readonly, nonatomic) GEOComposedRoute *route;
@property (readonly, nonatomic) GEODirectionsRequest *currentRequest;
@property (readonly, nonatomic) GEODirectionsResponse *currentResponse;
@property (readonly, nonatomic) unsigned long long routeIndex;
@property (readonly, nonatomic) unsigned long long reconnectionRouteIndex;
@property (readonly, nonatomic) NSArray *alternateRoutes;
@property (readonly, nonatomic) unsigned long long stepIndex;
@property (readonly, nonatomic) unsigned long long displayedStepIndex;
@property (readonly, nonatomic) MNLocation *lastLocation;
@property (readonly, nonatomic) MNDisplayETAInfo *displayEtaInfo;
@property (readonly, nonatomic) MNRouteDistanceInfo *remainingDistanceInfo;
@property (readonly, nonatomic) MNBatteryChargeInfo *batteryChargeInfo;
@property (readonly, nonatomic) double distanceUntilSign;
@property (readonly, nonatomic) double timeUntilSign;
@property (readonly, nonatomic) double distanceUntilManeuver;
@property (readonly, nonatomic) double timeUntilManeuver;
@property (readonly, nonatomic) unsigned long long targetLegIndex;
@property (readonly, nonatomic) GEOComposedWaypoint *nextWaypoint;
@property (readonly, nonatomic) GEOComposedWaypoint *origin;
@property (readonly, nonatomic) GEOComposedWaypoint *originalOrigin;
@property (readonly, nonatomic) GEOComposedWaypoint *destination;
@property (readonly, nonatomic) NSString *destinationName;
@property (readonly, nonatomic) GEOComposedWaypoint *originalDestination;
@property (readonly, nonatomic) NSString *originalDestinationName;
@property (readonly, nonatomic) BOOL isDetour;
@property (readonly, nonatomic) MNGuidanceLaneInfo *activeLaneInfo;
@property (readonly, nonatomic) GEOComposedRoute *alternateWalkingRoute;
@property (readonly, nonatomic) MNDisplayETAInfo *alternateWalkingRouteDisplayETAInfo;
@property (readonly, nonatomic) MNVehicleParkingInfo *vehicleParkingInfo;
@property (readonly, nonatomic) GEOResumeRouteHandle *resumeRouteHandle;
@property (readonly, nonatomic) NSString *tracePath;
@property (readonly, nonatomic) double traceDuration;
@property (readonly, nonatomic) NSArray *traceBookmarks;
@property (readonly, nonatomic) BOOL navigatingFromTrace;
@property (nonatomic) BOOL traceIsPlaying;
@property (nonatomic) double tracePosition;
@property (readonly, nonatomic) long long simulationType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (unsigned long long)clientInterfaceHash;
+ (unsigned long long)daemonInterfaceHash;
+ (unsigned long long)_hashForProtocol:(id)protocol;
+ (id)sharedService;
+ (BOOL)supportsNavigation;

/* instance methods */
- (void)_navigationServiceCallback_DidReceiveRoutingServiceError:(id)error;
- (void)_navigationServiceCallback_DidUpdateArrivalInfo:(id)info;
- (void)_navigationServiceCallback_DidUpdateBackgroundWalkingRoute:(id)route;
- (void)_navigationServiceCallback_DidUpdateDisplayETA:(id)eta;
- (void)_navigationServiceCallback_DidUpdateMatchedLocation:(id)location;
- (void)_navigationServiceCallback_DidUpdateStepIndex:(id)index;
- (void)_navigationServiceCallback_DidUpdateVehicleParkingInfo:(id)info;
- (void)_navigationServiceCallback_ShouldEnableIdleTimer:(id)timer;
- (void)_updateWithCallback:(id)callback;
- (id)initPrivate;
- (void)dealloc;
- (void)openForClient:(id)client;
- (void)closeForClient:(id)client;
- (BOOL)isOpenForClient:(id)client;
- (void)registerObserver:(id)observer;
- (void)unregisterObserver:(id)observer;
- (id)ticketForDirectionsRequest:(id)request;
- (void)setRoutesForPreview:(id)preview selectedRouteIndex:(unsigned long long)index;
- (BOOL)startNavigationWithDetails:(id)details error:(out id *)error;
- (void)stopNavigationWithReason:(unsigned long long)reason;
- (void)rerouteWithWaypoints:(id)waypoints;
- (void)insertWaypoint:(id)waypoint;
- (void)removeWaypointAtIndex:(unsigned long long)index;
- (void)advanceToNextLeg;
- (void)updateDestination:(id)destination;
- (void)resumeOriginalDestination;
- (void)forceReroute;
- (void)switchToRoute:(id)route;
- (void)changeTransportType:(int)type route:(id)route;
- (void)setGuidanceType:(unsigned long long)type;
- (id)userOptions;
- (void)changeUserOptions:(id)options;
- (void)repeatCurrentGuidance:(id /* block */)guidance;
- (void)repeatCurrentTrafficAlert:(id /* block */)alert;
- (void)vibrateForPrompt:(unsigned long long)prompt completion:(id /* block */)completion;
- (void)stopCurrentGuidancePrompt;
- (void)setIsConnectedToCarplay:(BOOL)carplay;
- (void)setRideIndex:(unsigned long long)index forSegmentIndex:(unsigned long long)index;
- (void)setJunctionViewImageWidth:(double)width height:(double)height;
- (void)disableNavigationCapability:(unsigned long long)capability reason:(unsigned long long)reason;
- (void)enableNavigationCapability:(unsigned long long)capability reason:(unsigned long long)reason;
- (id)displayETAInfoForRoute:(id)route;
- (id)remainingDistanceInfoForRoute:(id)route;
- (id)batteryChargeInfoForRoute:(id)route;
- (unsigned long long)alternateRouteIndexForRoute:(id)route;
- (id)etaRouteForRoute:(id)route;
- (id)realtimeUpdatesForRoutes:(id)routes;
- (id)realtimeUpdatesForAllRoutes;
- (void)pauseRealtimeUpdates;
- (void)resumeRealtimeUpdates;
- (BOOL)isNavigatingFromTrace;
- (void)setTracePlaybackSpeed:(double)speed;
- (void)recordTraceBookmarkAtCurrentPositionWthScreenshotData:(id)data;
- (void)recordPedestrianTracePath:(id)path;
- (void)setSimulationSpeedOverride:(double)override;
- (void)setSimulationSpeedMultiplier:(double)multiplier;
- (void)setSimulationPosition:(double)position;
- (id)_clientProxy;
- (void)_resetDetails;
- (void)navigationServiceProxy:(id)proxy willChangeFromState:(unsigned long long)state toState:(unsigned long long)state;
- (void)navigationServiceProxy:(id)proxy didChangeFromState:(unsigned long long)state toState:(unsigned long long)state;
- (void)navigationServiceProxy:(id)proxy willStartNavigationWithRoute:(id)route navigationType:(long long)type request:(id)request response:(id)response simulationType:(long long)type isResumingMultipointRoute:(BOOL)route;
- (void)navigationServiceProxy:(id)proxy willEndWithReason:(unsigned long long)reason;
- (void)navigationServiceProxy:(id)proxy didEndWithReason:(unsigned long long)reason;
- (void)navigationServiceProxy:(id)proxy didUpdateResumeRouteHandle:(id)handle;
- (void)navigationServiceProxy:(id)proxy didUpdateNavigationDetails:(id)details;
- (void)navigationServiceProxyWillPauseNavigation:(id)navigation;
- (void)navigationServiceProxyWillResumeFromPauseNavigation:(id)navigation;
- (void)navigationServiceProxy:(id)proxy didFailWithError:(id)error;
- (void)navigationServiceProxy:(id)proxy didChangeNavigationState:(int)state;
- (void)navigationServiceProxy:(id)proxy didUpdateDisplayedStepIndex:(unsigned long long)index segmentIndex:(unsigned long long)index;
- (void)navigationServiceProxy:(id)proxy didUpdateDistanceUntilManeuver:(double)maneuver timeUntilManeuver:(double)maneuver forStepIndex:(unsigned long long)index;
- (void)navigationServiceProxyDidFinishLocationUpdate:(id)update;
- (void)navigationServiceProxy:(id)proxy isApproachingEndOfLeg:(unsigned long long)leg;
- (void)navigationServiceProxy:(id)proxy didEnterPreArrivalStateForWaypoint:(id)waypoint endOfLegIndex:(unsigned long long)index;
- (void)navigationServiceProxy:(id)proxy didArriveAtWaypoint:(id)waypoint endOfLegIndex:(unsigned long long)index;
- (void)navigationServiceProxy:(id)proxy didResumeNavigatingFromWaypoint:(id)waypoint endOfLegIndex:(unsigned long long)index reason:(unsigned long long)reason;
- (void)navigationServiceProxy:(id)proxy didUpdateTargetLegIndex:(unsigned long long)index;
- (void)navigationServiceProxyDidEnterPreArrivalState:(id)state;
- (void)navigationServiceProxyDidArrive:(id)arrive;
- (void)navigationServiceProxy:(id)proxy didUpdateProceedToRouteDistance:(double)distance displayString:(id)string closestStepIndex:(unsigned long long)index;
- (void)navigationServiceProxy:(id)proxy didUpdateDistanceUntilSign:(double)sign timeUntilSign:(double)sign forStepIndex:(unsigned long long)index;
- (void)navigationServiceProxy:(id)proxy willAnnounce:(unsigned long long)announce inSeconds:(double)seconds;
- (void)navigationServiceProxy:(id)proxy displayPrimaryStep:(id)step instructions:(id)instructions shieldType:(int)type shieldText:(id)text drivingSide:(int)side maneuverStepIndex:(unsigned long long)index isSynthetic:(BOOL)synthetic;
- (void)navigationServiceProxy:(id)proxy displayManeuverAlertForAnnouncementStage:(unsigned long long)stage;
- (void)navigationServiceProxy:(id)proxy displaySecondaryStep:(id)step instructions:(id)instructions shieldType:(int)type shieldText:(id)text drivingSide:(int)side;
- (void)navigationServiceProxyHideSecondaryStep:(id)step;
- (void)navigationServiceProxyBeginGuidanceUpdate:(id)update;
- (void)navigationServiceProxyEndGuidanceUpdate:(id)update;
- (void)navigationServiceProxy:(id)proxy updateSignsWithInfo:(id)info;
- (void)navigationServiceProxy:(id)proxy updateSignsWithARInfo:(id)arinfo;
- (void)navigationServiceProxy:(id)proxy usePersistentDisplay:(BOOL)display;
- (void)navigationServiceProxy:(id)proxy showLaneDirections:(id)directions;
- (void)navigationServiceProxy:(id)proxy hideLaneDirectionsForId:(id)id;
- (void)navigationServiceProxy:(id)proxy showJunctionView:(id)view;
- (void)navigationServiceProxy:(id)proxy hideJunctionViewForId:(id)id;
- (void)navigationServiceProxy:(id)proxy didEnableGuidancePrompts:(BOOL)prompts;
- (void)navigationServiceProxy:(id)proxy newGuidanceEventFeedback:(id)feedback;
- (void)navigationServiceProxy:(id)proxy updatedGuidanceEventFeedback:(id)feedback;
- (void)navigationServiceProxy:(id)proxy didReceiveRouteSignalStrength:(unsigned long long)strength;
- (void)navigationServiceProxy:(id)proxy didUpdateETAResponseForRoute:(id)route;
- (void)navigationServiceProxy:(id)proxy didUpdateHeading:(double)heading accuracy:(double)accuracy;
- (void)navigationServiceProxy:(id)proxy didUpdateMotionType:(unsigned long long)type confidence:(unsigned long long)confidence;
- (void)navigationServiceProxy:(id)proxy didUpdatePreviewRoutes:(id)routes withSelectedRouteIndex:(unsigned long long)index;
- (void)navigationServiceProxyWillReroute:(id)reroute;
- (void)navigationServiceProxy:(id)proxy didRerouteWithRoute:(id)route withLocation:(id)location withAlternateRoutes:(id)routes rerouteReason:(unsigned long long)reason;
- (void)navigationServiceProxyDidCancelReroute:(id)reroute;
- (void)navigationServiceProxy:(id)proxy didUpdateRouteWithNewRideSelection:(id)selection;
- (void)navigationServiceProxy:(id)proxy didSwitchToNewTransportType:(int)type newRoute:(id)route;
- (void)navigationServiceProxy:(id)proxy didFailRerouteWithError:(id)error;
- (void)navigationServiceProxy:(id)proxy didUpdateAlternateRoutes:(id)routes;
- (void)navigationServiceProxy:(id)proxy didReceiveTrafficIncidentAlert:(id)alert;
- (void)navigationServiceProxy:(id)proxy didUpdateTrafficIncidentAlert:(id)alert;
- (void)navigationServiceProxy:(id)proxy didInvalidateTrafficIncidentAlert:(id)alert;
- (void)navigationServiceProxy:(id)proxy didDismissTrafficIncidentAlert:(id)alert;
- (void)navigationServiceProxy:(id)proxy didUpdateTracePlaybackDetails:(id)details;
- (void)navigationServiceProxy:(id)proxy didActivateAudioSession:(BOOL)session;
- (void)navigationServiceProxy:(id)proxy didStartSpeakingPrompt:(id)prompt;
- (void)navigationServiceProxy:(id)proxy didStartUsingVoiceLanguage:(id)language;
- (void)navigationServiceProxy:(id)proxy didChangeVoiceGuidanceLevel:(unsigned long long)level;
- (void)navigationServiceProxy:(id)proxy willProcessSpeechEvent:(id)event;
- (void)navigationServiceProxy:(id)proxy didProcessSpeechEvent:(id)event;
- (void)navigationServiceProxy:(id)proxy triggerHaptics:(int)haptics;
- (void)navigationServiceProxy:(id)proxy willRequestRealtimeUpdatesForRouteIDs:(id)ids;
- (void)navigationServiceProxy:(id)proxy didReceiveRealtimeUpdates:(id)updates;
- (void)navigationServiceProxy:(id)proxy didReceiveTransitAlert:(id)alert;
- (void)navigationServiceProxy:(id)proxy didSendNavigationServiceCallback:(id)callback;
- (id)captureStatePlistWithHints:(struct os_state_hints_s { unsigned int x0; char * x1; unsigned int x2; unsigned int x3; } *)hints;
@end

#endif /* MNNavigationService_h */
