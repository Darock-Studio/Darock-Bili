//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 263.3.7.0.0
//
#ifndef AVAudioSession_h
#define AVAudioSession_h
@import Foundation;

#include "AVAudioSessionPortDescription.h"

@class NSArray, NSString;

@interface AVAudioSession : NSObject {
  /* instance variables */
  void * _impl;
}

@property (readonly) BOOL isPrimary;
@property (readonly, nonatomic) NSArray *availableCategories;
@property (readonly) NSString *category;
@property (readonly) unsigned long long categoryOptions;
@property (readonly) unsigned long long routeSharingPolicy;
@property (readonly) NSArray *availableModes;
@property (readonly) NSString *mode;
@property (readonly) BOOL allowHapticsAndSystemSoundsDuringRecording;
@property (readonly) unsigned long long recordPermission;
@property (readonly) AVAudioSessionPortDescription *preferredInput;
@property (readonly, nonatomic) BOOL prefersNoInterruptionsFromSystemAlerts;
@property (readonly) long long renderingMode;

/* class methods */
+ (id)sharedInstance;
+ (id)retrieveSessionWithID:(unsigned int)id;
+ (id)primarySession;
+ (id)auxiliarySession;
+ (BOOL)categoryEnablesInput:(id)input;

/* instance methods */
- (id)retain;
- (unsigned long long)retainCount;
- (void)release;
- (id)autorelease;
- (int)privateSetProperty:(id)property value:(id)value isMXProperty:(BOOL)mxproperty;
- (int)privateSetBatchProperties:(id)properties areMXProperties:(BOOL)mxproperties;
- (int)privateSetBatchPropertiesOnMXSession:(id)mxsession outPropertiesErrors:(id *)errors;
- (id)privateGetBatchPropertiesFromMXSession:(id)mxsession propertyErrors:(id *)errors;
- (void)privateDispatchPing;
- (void)privateHandlePing;
- (BOOL)privateAllowsLongFormRoutingToSpeaker;
- (void)privateSetAllowsLongFormRoutingToSpeaker:(BOOL)speaker;
- (BOOL)privateRequiresWatchOSRoutePicker:(unsigned long long)picker;
- (id)init;
- (id)initWithSessionType:(unsigned int)type;
- (BOOL)privateCreateSessionInServerUsingXPC;
- (BOOL)privateRecreateSessionInServerUsingXPC;
- (id)initWithSpecification:(id)specification;
- (id)initWithSessionID:(unsigned int)id;
- (id)initSiblingSession:(unsigned int)session auditToken:(struct { unsigned int x0[8] })token clientIdentifier:(id)identifier;
- (id)initAuxiliarySession;
- (id)initWithSiriEndpointIdentifier:(id)identifier;
- (void)dealloc;
- (void)addCategoryOptionsToDictionary:(id)dictionary category:(id)category options:(unsigned long long)options;
- (int)privateSetCategoryWithOptions:(id)options modes:(id)modes routeSharingPolicy:(unsigned long long)policy options:(unsigned long long)options;
- (BOOL)setCategory:(id)category error:(id *)error;
- (BOOL)setCategory:(id)category withOptions:(unsigned long long)options error:(id *)error;
- (BOOL)setCategory:(id)category mode:(id)mode options:(unsigned long long)options error:(id *)error;
- (BOOL)setCategory:(id)category mode:(id)mode routeSharingPolicy:(unsigned long long)policy options:(unsigned long long)options error:(id *)error;
- (BOOL)setCategoryOptions:(unsigned long long)options error:(id *)error;
- (BOOL)setActive:(BOOL)active error:(id *)error;
- (BOOL)setActive:(BOOL)active withOptions:(unsigned long long)options error:(id *)error;
- (void)activateWithOptions:(unsigned long long)options completionHandler:(id /* block */)handler;
- (BOOL)deactivateAndSetInterruptionPriority:(long long)priority error:(id *)error;
- (BOOL)setActive:(BOOL)active withFlags:(long long)flags error:(id *)error;
- (void)requestRecordPermission:(id /* block */)permission;
- (BOOL)setPreferredSampleRate:(double)rate error:(id *)error;
- (BOOL)setPreferredIOBufferDuration:(double)duration error:(id *)error;
- (BOOL)setPreferredIOBufferFrameSize:(unsigned long long)size error:(id *)error;
- (BOOL)setInterruptionPriority:(long long)priority error:(id *)error;
- (BOOL)setPreferredInputNumberOfChannels:(long long)channels error:(id *)error;
- (BOOL)setPreferredOutputNumberOfChannels:(long long)channels error:(id *)error;
- (BOOL)setInputGain:(float)gain error:(id *)error;
- (BOOL)setInputDataSource:(id)source error:(id *)error;
- (BOOL)setOutputDataSource:(id)source error:(id *)error;
- (BOOL)setPreferredInputOrientation:(long long)orientation error:(id *)error;
- (long long)preferredInputOrientation;
- (long long)inputOrientation;
- (float)outputVolume;
- (unsigned long long)promptStyle;
- (BOOL)setAllowHapticsAndSystemSoundsDuringRecording:(BOOL)recording error:(id *)error;
- (BOOL)isActive;
- (id)audioFormats;
- (id)consolidatedSourceContentInfo;
- (unsigned char)privateRegisterMXNotificationWithServer:(id)server;
- (void)privatePostNotificationForType:(unsigned long long)type name:(id)name userInfo:(id)info;
- (void)handleMediaDaemonTerminationEvent:(int)event daemonName:(id)name;
- (id)addObserverForType:(unsigned long long)type name:(id)name block:(id /* block */)block;
- (void)removeObserverForType:(unsigned long long)type observer:(id)observer name:(id)name;
- (long long)audioFormat;
- (BOOL)isDolbyDigitalEncoderAvailable;
- (BOOL)isEarpieceActiveNoiseCancelationEnabled;
- (BOOL)isPiPAvailable;
- (BOOL)forceSoundCheck;
- (BOOL)setForceSoundCheck:(BOOL)check error:(id *)error;
- (BOOL)lastActivationStoppedNowPlayingApp;
- (BOOL)usingLongFormAudio;
- (BOOL)setUsingLongFormAudio:(BOOL)audio error:(id *)error;
- (BOOL)requiresNoAudioResources;
- (BOOL)setRequiresNoAudioResources:(BOOL)resources error:(id *)error;
- (BOOL)allowMixableAudioWhileRecording;
- (BOOL)setAllowMixableAudioWhileRecording:(BOOL)recording error:(id *)error;
- (BOOL)participatesInNowPlayingAppPolicy;
- (BOOL)setParticipatesInNowPlayingAppPolicy:(BOOL)policy error:(id *)error;
- (BOOL)isNowPlayingCandidate;
- (BOOL)setIsNowPlayingCandidate:(BOOL)candidate error:(id *)error;
- (BOOL)eligibleForBTSmartRoutingConsideration;
- (BOOL)setEligibleForBTSmartRoutingConsideration:(BOOL)consideration error:(id *)error;
- (BOOL)eligibleForBTTriangleConsideration;
- (BOOL)setEligibleForBTTriangleConsideration:(BOOL)consideration error:(id *)error;
- (BOOL)prefersToAcquireHWControlFromOtherSessions;
- (BOOL)setPrefersToAcquireHWControlFromOtherSessions:(BOOL)sessions error:(id *)error;
- (BOOL)inhibitSpeechDetection;
- (BOOL)setInhibitSpeechDetection:(BOOL)detection error:(id *)error;
- (BOOL)prefersNoMicrophoneUsageIndicator;
- (BOOL)setPrefersNoMicrophoneUsageIndicator:(BOOL)indicator error:(id *)error;
- (BOOL)participatesInMutePriority;
- (BOOL)setParticipatesInMutePriority:(BOOL)priority error:(id *)error;
- (BOOL)recordingFromRemoteInput;
- (BOOL)setRecordingFromRemoteInput:(BOOL)input error:(id *)error;
- (BOOL)allowAllBuiltInDataSources;
- (void)setAllowAllBuiltInDataSources:(BOOL)sources;
- (BOOL)setBypassRingerSwitchPolicy:(BOOL)policy error:(id *)error;
- (BOOL)setAudioHardwareControlFlags:(unsigned long long)flags error:(id *)error;
- (BOOL)setInterruptionFadeDuration:(id)duration error:(id *)error;
- (BOOL)setDuckingFadeOutDuration:(id)duration fadeInDuration:(id)duration error:(id *)error;
- (BOOL)setDuckToLevelScalar:(id)scalar unduckToLevelScalar:(id)scalar error:(id *)error;
- (BOOL)setDuckToLevelDB:(id)db error:(id *)error;
- (BOOL)setDuckToLevelScalar:(id)scalar error:(id *)error;
- (BOOL)isExpanseMediaSession;
- (BOOL)setIsExpanseMediaSession:(BOOL)session error:(id *)error;
- (BOOL)prefersAggressiveCaching;
- (BOOL)setPrefersAggressiveCaching:(BOOL)caching error:(id *)error;
- (BOOL)prefersConcurrentAirPlayAudio;
- (BOOL)setPrefersConcurrentAirPlayAudio:(BOOL)audio error:(id *)error;
- (BOOL)isHardwareFormatFixedToMultiChannel;
- (BOOL)fixHardwareFormatToMultiChannel:(BOOL)channel error:(id *)error;
- (float)inputGain;
- (void *)privateGetImplementation;
- (id)privateGetDataSources:(BOOL)sources;
- (struct shared_ptr<AVAudioSessionNotificationState> { struct AVAudioSessionNotificationState * x0; struct __shared_weak_count * x1; })privateGetNotificationStateForType:(unsigned long long)type create:(BOOL)create;
- (id)privateGetSelectedDataSource:(BOOL)source;
- (id)inputDataSources;
- (id)inputDataSource;
- (id)outputDataSources;
- (id)outputDataSource;
- (BOOL)isInputGainSettable;
- (BOOL)getInputAvailable;
- (BOOL)isInputAvailable;
- (BOOL)isOtherAudioPlaying;
- (BOOL)secondaryAudioShouldBeSilencedHint;
- (double)sampleRate;
- (double)inputLatency;
- (double)outputLatency;
- (double)inputSafetyOffset;
- (double)outputSafetyOffset;
- (id)activeSessionDisplayIDs;
- (double)IOBufferDuration;
- (unsigned long long)IOBufferFrameSize;
- (id)supportedOutputChannelLayouts;
- (unsigned long long)speechDetectionStyle;
- (long long)interruptionPriority;
- (double)preferredSampleRate;
- (double)preferredIOBufferDuration;
- (unsigned long long)preferredIOBufferFrameSize;
- (long long)preferredInputNumberOfChannels;
- (long long)preferredOutputNumberOfChannels;
- (long long)inputNumberOfChannels;
- (long long)outputNumberOfChannels;
- (long long)maximumInputNumberOfChannels;
- (long long)maximumOutputNumberOfChannels;
- (BOOL)setMode:(id)mode error:(id *)error;
- (BOOL)privateSetRouteSharingPolicy:(unsigned long long)policy error:(id *)error;
- (BOOL)privateNeedsTranslationForNoSpeakerCategory:(id)category;
- (id)auditTokensForProcessAssertion;
- (BOOL)setAuditTokensForProcessAssertion:(id)assertion error:(id *)error;
- (id)powerBudget;
- (id)powerProfile;
- (BOOL)setPowerProfile:(id)profile error:(id *)error;
- (BOOL)subscribeToNotifications:(id)notifications error:(id *)error;
- (id)routingContextUID;
- (BOOL)setRoutingContextUID:(id)uid error:(id *)error;
- (id)hostProcessAttribution;
- (BOOL)setHostProcessAttribution:(id)attribution error:(id *)error;
- (BOOL)selectIndependentRoutingContext:(id *)context;
- (BOOL)overrideOutputAudioPort:(unsigned long long)port error:(id *)error;
- (BOOL)setPreferredInput:(id)input error:(id *)error;
- (id)currentRoute;
- (id)pickedRoute;
- (BOOL)setMXProperties:(id)mxproperties propertyErrors:(id *)errors;
- (id)getMXProperties:(id)mxproperties propertyErrors:(id *)errors;
- (id)activeAudioRoute;
- (BOOL)setSupportsMultichannelContent:(BOOL)content error:(id *)error;
- (BOOL)supportsMultichannelContent;
- (BOOL)setPrefersInterruptionOnRouteDisconnect:(BOOL)disconnect error:(id *)error;
- (BOOL)prefersInterruptionOnRouteDisconnect;
- (BOOL)setAudioClockDevice:(id)device error:(id *)error;
- (id)audioClockDevice;
- (unsigned int)opaqueSessionID;
- (unsigned long long)sessionType;
- (double)speechDetectionDeviceSampleRate;
- (double)siriSpeechDetectionDeviceSampleRate;
- (id)availableInputs;
- (id)privateRefreshAvailableInputs;
- (id)availableOutputs;
- (BOOL)setPreferredPersistentInputUID:(id)uid outputUIDs:(id)uids error:(id *)error;
- (id)preferredPersistentInputUIDs;
- (id)preferredPersistentOutputUIDs;
- (long long)privateGetCachedReporterID;
- (id)delegate;
- (void)setDelegate:(id)delegate;
- (BOOL)setPreferredHardwareSampleRate:(double)rate error:(id *)error;
- (BOOL)setActivationContext:(id)context error:(id *)error;
- (BOOL)setDisallowedPorts:(id)ports error:(id *)error;
- (BOOL)silenceOutput:(unsigned long long)output error:(id *)error;
- (BOOL)isSessionInputMuted;
- (BOOL)muteSessionInput:(BOOL)input error:(id *)error;
- (id)defaultChatMode;
- (BOOL)setDefaultChatMode:(id)mode error:(id *)error;
- (BOOL)iAmTheAssistant;
- (BOOL)setIAmTheAssistant:(BOOL)assistant error:(id *)error;
- (BOOL)prefersNoInterruptionsByRingtonesAndAlerts;
- (BOOL)setPrefersNoInterruptionsByRingtonesAndAlerts:(BOOL)alerts error:(id *)error;
- (BOOL)setPrefersNoInterruptionsFromSystemAlerts:(BOOL)alerts error:(id *)error;
- (BOOL)prefersNoDucking;
- (BOOL)setPrefersNoDucking:(BOOL)ducking error:(id *)error;
- (BOOL)needsHighPowerBudgeting;
- (BOOL)setNeedsHighPowerBudgeting:(BOOL)budgeting error:(id *)error;
- (BOOL)participatesInVolumePolicy;
- (BOOL)setParticipatesInVolumePolicy:(BOOL)policy error:(id *)error;
- (BOOL)prefersToVibeWhenVibrationsAreDisabled;
- (BOOL)setPrefersToVibeWhenVibrationsAreDisabled:(BOOL)disabled error:(id *)error;
- (float)defaultCalibratedOutputSPL;
- (BOOL)clearInputPreferences:(id *)preferences;
- (BOOL)inputIsAvailable;
- (double)currentHardwareSampleRate;
- (long long)currentHardwareInputNumberOfChannels;
- (long long)currentHardwareOutputNumberOfChannels;
- (double)preferredHardwareSampleRate;
- (BOOL)preferDecoupledIO:(BOOL)io error:(id *)error;
- (BOOL)setAggregatedIOPreference:(unsigned long long)iopreference error:(id *)error;
- (BOOL)decoupledIO;
- (BOOL)setPreferredInputSampleRate:(double)rate error:(id *)error;
- (double)preferredInputSampleRate;
- (BOOL)setPreferredOutputSampleRate:(double)rate error:(id *)error;
- (double)preferredOutputSampleRate;
- (double)inputSampleRate;
- (double)outputSampleRate;
- (BOOL)setSpeakerThermalGain:(float)gain error:(id *)error;
- (BOOL)setHapticThermalGain:(float)gain error:(id *)error;
- (float)speakerThermalGain;
- (float)hapticThermalGain;
- (void)privateInputIsAvailableChanged:(BOOL)changed;
- (void)privateInterruptionWithInfo:(id)info;
- (void)privateResetCachedPropertyValues;
- (void)privateMarkKVOPropertiesDirty:(unsigned long long)dirty;
- (void)privateHandleAvailableSampleRatesChange;
- (void)privateHandleBeaconBudgetChange:(id)change;
- (void)privateHandlePrefersConcurrentAirPlayAudioChange:(id)change;
- (void)privateHandlePickableRoutesChange;
- (void)privateHandleSecondaryAudioHintChange:(id)change;
- (void)privateHandleOtherPrimaryAudioPlayStateChange;
- (void)privateUpdatePiPAvailabilityChange:(id)change;
- (void)privateHandleRoutingContextChange;
- (void)privateHandleBadgeTypeChange:(id)change;
- (void)privateHandleRenderingCapabilitiesChange;
- (BOOL)enableNotifications:(BOOL)notifications error:(id *)error;
- (BOOL)setPrefersMultichannelAudio:(BOOL)audio error:(id *)error;
- (BOOL)prefersMultichannelAudio;
- (void)privateUpdateOutputVolume:(id)volume forVolumeCategory:(id)category volumeMode:(id)mode;
- (void)privateUpdatePromptStyle:(id)style;
- (void)privateUpdateInputGain:(id)gain;
- (void)privateUpdateReporterIDs:(id)ids;
- (void)privateUpdateSpeechDetectionStyle:(id)style;
- (void)privateUpdateInputAvailable;
- (void)privateUpdateDataSources:(id)sources forInput:(BOOL)input;
- (void)privateUpdateAudioFormats:(id)formats;
- (void)privateUpdateAudioFormat:(id)format;
- (void)privateUpdateInputChannelCount:(id)count;
- (void)privateUpdateOutputChannelCount:(id)count;
- (BOOL)isDolbyAtmosAvailable;
- (id)getMXSessionProperty:(id)property error:(id *)error;
- (BOOL)setMXSessionProperty:(id)property value:(id)value error:(id *)error;
- (id)IOController;
- (id)decoupledInputIOController;
- (id)inputTimeObserver;
- (id)outputTimeObserver;
- (id)spatialPreferences;
- (id)spatialPreferences:(long long)preferences;
- (BOOL)handleRemoteInterruption:(id)interruption postInterruptionNotification:(BOOL)notification error:(id *)error;
- (unsigned int)sourceSessionID;
- (BOOL)isRelatedSession:(id)session;
- (BOOL)isRelatedSessionID:(unsigned int)id;
@end

#endif /* AVAudioSession_h */
