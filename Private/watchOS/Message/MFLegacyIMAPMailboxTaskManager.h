//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef MFLegacyIMAPMailboxTaskManager_h
#define MFLegacyIMAPMailboxTaskManager_h
@import Foundation;

#include "ECIMAPLocalActionReplayerDelegate-Protocol.h"
#include "EFLoggable-Protocol.h"
#include "IMAPAccount.h"
#include "MFIMAPConnection.h"
#include "MFIMAPConnectionDelegate-Protocol.h"
#include "MFIMAPMailboxTaskManager-Protocol.h"
#include "MFIMAPSequenceIdentifierProvider-Protocol.h"
#include "MFMailMessageLibrary.h"
#include "MFMailboxUid.h"

@class BOOL *, EFCancelationToken, NSLock, NSString;

@interface MFLegacyIMAPMailboxTaskManager : NSObject<MFIMAPConnectionDelegate, MFIMAPSequenceIdentifierProvider, ECIMAPLocalActionReplayerDelegate, EFLoggable, MFIMAPMailboxTaskManager> {
  /* instance variables */
  BOOL _supportsForwardedFlag;
  BOOL _supportsDollarForwardedFlag;
  BOOL _supportsFlagColorBitFlags;
  BOOL _settingServerCount;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _activeFetchVsReplayLock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _serverCountLock;
  unsigned long long _serverMessageCount;
  unsigned long long _serverDeletedCount;
  unsigned long long _lastHighestModSequence;
  unsigned long long _highestModSequence;
  MFIMAPConnection *_cachedConnection;
  NSLock *_cachedConnectionLock;
  NSString *_loggingPrefix;
}

@property (readonly, nonatomic) MFMailboxUid *mailbox;
@property (readonly, copy, nonatomic) NSString *mailboxName;
@property BOOL shouldUseIDLE;
@property (retain, nonatomic) EFCancelationToken *cancelationToken;
@property (readonly, nonatomic) IMAPAccount *account;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) MFMailMessageLibrary *library;
@property (readonly, nonatomic) BOOL canFetchMessageIDs;

/* class methods */
+ (id)log;

/* instance methods */
- (id)initWithMailbox:(id)mailbox;
- (void)dealloc;
- (unsigned long long)_fetchMessagesWithUIDs:(id)uids connection:(id)connection newCount:(unsigned long long)count flagsToSet:(unsigned long long)set queueClass:(Class)class;
- (unsigned long long)syncMessagesWithUIDs:(id)uids connection:(id)connection serverMessages:(id)messages flagSearchResults:(id)results;
- (void)_performActionsOnConnection:(id)connection uidsToFetch:(id *)fetch uidsToSync:(id *)sync messagesToCompact:(id *)compact serverMessages:(id)messages flagSearchResults:(id)results shouldForce:(BOOL)force newUIDsToFetch:(unsigned int *)fetch;
- (id)_searchFlagsForUIDs:(id)uids usingConnection:(id)connection;
- (unsigned long long)_fetchMessagesWithArguments:(id)arguments idRange:(id)range onConnection:(id)connection synchronize:(BOOL)synchronize limit:(unsigned long long)limit topUIDToCompact:(unsigned long long)compact topKnownUID:(unsigned long long)uid success:(BOOL *)success examinedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range fetchableUIDsFound:(unsigned long long *)found preserveUID:(unsigned long long *)uid numFetchedUIDs:(unsigned long long *)uids;
- (void)updateDeletedCountWithNotDeletedCount:(unsigned long long)count;
- (void)updateDeletedCount;
- (BOOL)_shouldContinueToPreservedUID:(unsigned long long)uid;
- (void)growFetchWindow;
- (long long)fetchNumMessages:(unsigned long long)messages preservingUID:(id)uid options:(unsigned long long)options;
- (void)updateServerUnreadCountClosingConnection:(BOOL)connection;
- (void)_fetchServerUnreadCountWithConnection:(id)connection;
- (void)_updateServerUnreadCount:(unsigned long long)count;
- (id)_newSearchResponseQueueForConnection:(id)connection limit:(unsigned int)limit;
- (void)_fetchMessagesMatchingCriterion:(id)criterion limit:(unsigned int)limit withOptions:(int)options handler:(id /* block */)handler;
- (id)messageIdRollCall:(id)call;
- (id)storeSearchResultMatchingCriterion:(id)criterion limit:(unsigned int)limit offset:(id)offset error:(id *)error;
- (long long)fetchMessagesWithMessageIDs:(id)ids andSetFlags:(unsigned long long)flags;
- (void)compact;
- (void)deleteMessagesOlderThanNumberOfDays:(int)days compact:(BOOL)compact;
- (id)replayAction:(id)action;
- (id)messageDataForMessage:(id)message;
- (BOOL)moveSupportedFromMailboxURL:(id)url toURL:(id)url;
- (BOOL)checkUIDValidity:(unsigned int)uidvalidity mailboxURL:(id)url;
- (BOOL)errorIsIMAPError:(id)imaperror;
- (id)flagsForIMAPUIDs:(id)imapuids mailboxURL:(id)url;
- (id)imapMailboxNameForMailboxURL:(id)url;
- (id)messageDataForRemoteID:(id)id mailboxURL:(id)url;
- (BOOL)fetchDataForMimePart:(id)part range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range isComplete:(BOOL *)complete consumer:(id)consumer;
- (BOOL)downloadMimePartNumber:(id)number message:(id)message withProgressBlock:(id /* block */)block;
- (id)fetchDataForMessage:(id)message didDownload:(BOOL *)download;
- (id)_fetchFullMessageDataForMessage:(id)message download:(id *)download;
- (BOOL)_waitForDataFromDownload:(id)download uid:(unsigned int)uid downloadCache:(id)cache connection:(id)connection;
- (id)_downloadForMessageBodyData:(id)data usingDownloadCache:(id)cache;
- (id)_performBodyDataDownload:(id)download usingConnection:(id)connection downloadCache:(id)cache isPartial:(BOOL *)partial;
- (id)fetchDataForMessage:(id)message partial:(BOOL *)partial;
- (id)fetchHeadersForMessage:(id)message;
- (BOOL)performOperationRequiringConnection:(BOOL)connection withOptions:(int)options failedToSelectMailbox:(BOOL *)mailbox operation:(id /* block */)operation;
- (BOOL)_selectMailbox:(id)mailbox withConnection:(id)connection;
- (void)reselectMailbox;
- (void)willRemoveDelegation:(id)delegation;
- (void)connection:(id)connection didReceiveResponse:(id)response forCommand:(id)command;
- (id)_idleConditionsObservable;
- (id)_observeChangesInIdleConditions;
- (void)_scheduleIdleTransition:(BOOL)transition;
- (BOOL)shouldStartIdleForConnection:(id)connection;
- (BOOL)connection:(id)connection shouldHandleUntaggedResponse:(id)response forCommand:(id)command;
- (id)deletedMessages;
- (void)handleFlagsChangedForMessages:(id)messages flags:(id)flags oldFlagsByMessage:(id)message;
- (id)offlineCache;
- (id)offlineCacheIfOffline;
- (void)close;
- (void)setServerMessageCount:(unsigned long long)count;
- (unsigned long long)serverMessageCount;
- (void)setHighestModSequence:(unsigned long long)sequence;
- (id)sequenceIdentifierForUIDs:(id)uids;
- (void)setSequenceIdentifier:(id)identifier forUIDs:(id)uids;
@end

#endif /* MFLegacyIMAPMailboxTaskManager_h */
