//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef MFMessageKeychainManager_h
#define MFMessageKeychainManager_h
@import Foundation;

@interface MFMessageKeychainManager : NSObject
/* class methods */
+ (void)initialize;
+ (id)_passwordForHost:(id)host username:(id)username port:(int)port keychainProtocol:(struct __CFString *)protocol;
+ (id)passwordForHost:(id)host username:(id)username port:(int)port keychainProtocol:(void *)protocol;
+ (void)setPassword:(id)password forHost:(id)host username:(id)username port:(int)port keychainProtocol:(void *)protocol keychainAccessibility:(void *)accessibility;
+ (void)removePasswordForHost:(id)host username:(id)username port:(int)port keychainProtocol:(void *)protocol;
+ (id)_passwordForGenericAccount:(id)account service:(id)service error:(id *)error;
+ (id)passwordForServiceName:(id)name accountName:(id)name synchronizable:(BOOL)synchronizable error:(id *)error;
+ (id)passwordForServiceName:(id)name accountName:(id)name error:(id *)error;
+ (id)passwordForServiceName:(id)name accountName:(id)name;
+ (BOOL)addPassword:(id)password forServiceName:(id)name accountName:(id)name keychainAccessibility:(void *)accessibility synchronizable:(BOOL)synchronizable error:(id *)error;
+ (void)setPassword:(id)password forServiceName:(id)name accountName:(id)name keychainAccessibility:(void *)accessibility;
+ (void)removePasswordForServiceName:(id)name accountName:(id)name;
+ (struct __SecPolicy *)copySMIMESigningPolicyForAddress:(id)address;
+ (struct __SecPolicy *)copySMIMEEncryptionPolicyForAddress:(id)address;
+ (struct __SecIdentity *)copyIdentityForPersistentReference:(id)reference error:(id *)error;
+ (id)persistentReferenceForIdentity:(struct __SecIdentity *)identity error:(id *)error;
+ (BOOL)_matchSSLClientIdentity:(struct __SecIdentity *)identity withHostname:(id)hostname;
+ (struct __SecIdentity *)copyClientSSLIdentityForHostName:(id)name error:(id *)error;
+ (id)copyAllSigningIdentitiesForAddress:(id)address error:(id *)error;
+ (id)copyAllEncryptionIdentitiesForAddress:(id)address error:(id *)error;
+ (id)_copyAllIdentitiesWithError:(id *)error usingBlock:(id /* block */)block;
+ (BOOL)_addAllIdentitiesToArray:(id *)array fromSyncableKeychain:(BOOL)keychain withError:(id *)error usingBlock:(id /* block */)block;
+ (BOOL)validateSigningIdentity:(struct __SecIdentity *)identity forAddress:(id)address error:(id *)error;
+ (BOOL)validateEncryptionIdentity:(struct __SecIdentity *)identity forAddress:(id)address error:(id *)error;
+ (BOOL)_validateIdentity:(struct __SecIdentity *)identity forAddress:(id)address policy:(struct __SecPolicy *)policy usage:(unsigned int)usage error:(id *)error;
+ (struct __SecCertificate *)copyEncryptionCertificateForAddress:(id)address error:(id *)error;
+ (id)_addCertificate:(struct __SecCertificate *)certificate persistent:(id *)persistent;
+ (struct __SecCertificate *)_copyCertificateForPersistent:(id)persistent error:(id *)error;
+ (id)_addPersistentMapping:(id)mapping forAddress:(id)address;
+ (id)_removeCertificateForPersistent:(id)persistent;
+ (id)saveEncryptionCertificate:(struct __SecCertificate *)certificate forAddress:(id)address;
+ (id)newTrustManager;
@end

#endif /* MFMessageKeychainManager_h */
