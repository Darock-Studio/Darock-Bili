//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef MFIMAPResponse_h
#define MFIMAPResponse_h
@import Foundation;

#include "EFPubliclyDescribable-Protocol.h"
#include "MFIMAPResponseConsumer.h"

@class NSArray, NSDictionary, NSString;

@interface MFIMAPResponse : NSObject<EFPubliclyDescribable> {
  /* instance variables */
  unsigned int x :8 _responseType;
  NSString *_tag;
  NSDictionary *_keyValuePairs;
  union _IMAPResponseData { struct { int responseCode; id responseInfoAndOrUserData; } basic; NSArray *capabilities; unsigned long long number; NSArray *flags; struct { NSString *mailboxName; NSDictionary *entries; } status; NSArray *searchResults; struct { unsigned long long mailboxAttributes; extraAttributes *separatorAndOrMboxName; NSArray * x0; } list; struct { unsigned long long number; NSArray *items; unsigned long long modSeqNumber; } fetch; struct { NSString *mailboxName; NSArray *quotaRootNames; } quotaRoot; struct { NSString *quotaRootName; NSArray *quotas; } quota; struct { NSString *uids; MFIMAPFetchResult *flagsFetchResult; unsigned int x :1 change; } uidFlags; NSDictionary *serverInfo; struct { NSArray *private; NSArray *public; NSArray *shared; } namespace; struct { NSString *name; NSArray *parameters; } other; } _data;
}

@property (retain, nonatomic) MFIMAPResponseConsumer *responseConsumer;
@property (copy, nonatomic) NSArray *privateNamespaces;
@property (copy, nonatomic) NSArray *publicNamespaces;
@property (copy, nonatomic) NSArray *sharedNamespaces;
@property (readonly, copy, nonatomic) NSString *ef_publicDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (int)responseType;
- (void)setResponseType:(int)type;
- (BOOL)isUntagged;
- (BOOL)isAlertResponse;
- (BOOL)isResponseWithCode:(int)code;
- (id)tag;
- (void)setTag:(id)tag;
- (void)dealloc;
- (int)responseCode;
- (id)responseInfo;
- (id)userData;
- (id)userString;
- (void)setUserData:(id)data responseCode:(int)code responseInfo:(id)info;
- (id)capabilities;
- (void)setCapabilities:(id)capabilities;
- (id)serverInfo;
- (void)setServerInfo:(id)info;
- (unsigned long long)number;
- (void)setNumber:(unsigned long long)number;
- (id)flags;
- (void)setFlags:(id)flags;
- (id)mailboxName;
- (id)statusEntries;
- (void)setMailboxName:(id)name statusEntries:(id)entries;
- (id)searchResults;
- (void)setSearchResults:(id)results;
- (unsigned long long)mailboxAttributes;
- (id)separator;
- (void)setMailboxAttributes:(unsigned long long)attributes separator:(id)separator mailboxName:(id)name extraAttributes:(id)attributes;
- (id)extraAttributes;
- (id)fetchResultWithType:(int)type;
- (id)fetchResults;
- (void)setFetchResults:(id)results;
- (id)quotaRootNames;
- (void)setMailboxName:(id)name quotaRootNames:(id)names;
- (id)quotaRootName;
- (id)quotas;
- (void)setQuotaRootName:(id)name quotas:(id)quotas;
- (int)uidFlagsChange;
- (void)setUidFlagsChange:(int)change;
- (id)uids;
- (void)setUids:(id)uids;
- (id)flagsFetchResult;
- (void)setFlagsFetchResult:(id)result;
- (id)responseName;
- (id)parameters;
- (void)setValue:(id)value forKey:(id)key;
- (id)keyValuePairs;
- (void)setResponseName:(id)name parameters:(id)parameters;
- (id)_descriptionWithFullData:(BOOL)data;
- (id)initWithConnection:(id)connection responseConsumer:(id)consumer;
- (id)initWithString:(id)string;
- (id)initWithResponseType:(int)type;
@end

#endif /* MFIMAPResponse_h */
