//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef MFLibraryIMAPStore_h
#define MFLibraryIMAPStore_h
@import Foundation;

#include "MFLibraryStore.h"
#include "IMAPAccount.h"
#include "MFIMAPMailboxTaskManager-Protocol.h"

@class BOOL *, EDServerMessagePersistence, EFFuture;

@interface MFLibraryIMAPStore : MFLibraryStore {
  /* instance variables */
  EFFuture *_serverMessagePersistenceFuture;
}

@property (readonly, nonatomic) NSObject<MFIMAPMailboxTaskManager> *taskManager;
@property (readonly, nonatomic) EDServerMessagePersistence *serverMessagePersistence;
@property (readonly, @dynamic, nonatomic) IMAPAccount *account;
@property (nonatomic) BOOL allowsAppend;
@property (nonatomic) unsigned int uidNext;
@property (nonatomic) unsigned int uidValidity;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } fetchedWindow;
@property (nonatomic) unsigned long long newHighestModSequence;

/* class methods */
+ (id)copyRemoteIDForTemporaryUid:(unsigned int)uid;

/* instance methods */
- (id)initWithMailbox:(id)mailbox readOnly:(BOOL)only;
- (void)close;
- (void)setLibrary:(id)library;
- (BOOL)bodyFetchRequiresNetworkActivity;
- (BOOL)canCompact;
- (BOOL)canFetchMessageIDs;
- (BOOL)canFetchSearchResults;
- (unsigned long long)growFetchWindow;
- (long long)fetchMessagesWithMessageIDs:(id)ids andSetFlags:(unsigned long long)flags;
- (long long)fetchNumMessages:(unsigned long long)messages preservingUID:(id)uid options:(unsigned long long)options;
- (void)updateServerUnreadCountClosingConnection:(BOOL)connection;
- (id)messageIdRollCall:(id)call;
- (id)storeSearchResultMatchingCriterion:(id)criterion limit:(unsigned int)limit offset:(id)offset error:(id *)error;
- (void)doCompact;
- (void)deleteMessagesOlderThanNumberOfDays:(int)days compact:(BOOL)compact;
- (id)_dataForMessage:(id)message readHeadersOnly:(BOOL)only;
- (BOOL)_fetchDataForMimePart:(id)part range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range isComplete:(BOOL *)complete consumer:(id)consumer;
- (BOOL)downloadMimePartNumber:(id)number message:(id)message withProgressBlock:(id /* block */)block;
- (id)_fetchFullBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available downloadIfNecessary:(BOOL)necessary didDownload:(BOOL *)download;
- (id)_fetchBodyDataForMessage:(id)message andHeaderDataIfReadilyAvailable:(id *)available downloadIfNecessary:(BOOL)necessary partial:(BOOL *)partial;
- (id)_fetchHeaderDataForMessage:(id)message downloadIfNecessary:(BOOL)necessary;
- (void)_handleFlagsChangedForMessages:(id)messages flags:(id)flags oldFlagsByMessage:(id)message;
- (id)messageForRemoteID:(id)id;
- (id)messagesWithRemoteIDs:(id)ids;
- (id)flagsForRemoteIDs:(id)ids;
- (BOOL)hasValidCacheFileForMessage:(id)message;
- (id)replayAction:(id)action;
- (void)reselectMailbox;
@end

#endif /* MFLibraryIMAPStore_h */
