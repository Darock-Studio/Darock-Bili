//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMEMessageDatagramClient_h
#define HMEMessageDatagramClient_h
@import Foundation;

#include "HMERouterClient.h"
#include "HMEPendingTopicsCombiner.h"

@class NSUUID;
@protocol HMEMessageDatagramClientDataSource, HMEMessageDatagramClientDelegate, HMETimer, HMETimerIntervalProvider, HMETimerProvider, OS_os_log;

@interface HMEMessageDatagramClient : HMERouterClient {
  /* instance variables */
  NSObject<OS_os_log> *_logger;
}

@property (readonly) NSObject<HMETimerIntervalProvider> *connectionRetryIntervalProvider;
@property (readonly) NSObject<HMETimerProvider> *timerProvider;
@property (readonly) HMEPendingTopicsCombiner *pendingTopicsCombiner;
@property (nonatomic) BOOL isConnected;
@property (nonatomic) BOOL hasPendingRequest;
@property (nonatomic) BOOL hasPendingServerChangeRequest;
@property (readonly) double keepAliveInterval;
@property (retain, nonatomic) NSObject<HMETimer> *keepAliveTimer;
@property (retain, nonatomic) NSObject<HMETimer> *connectionRetryTimer;
@property (retain, nonatomic) NSUUID *connectedServerIdentifier;
@property (nonatomic) long long connectionMode;
@property (readonly) double dormatFetchTimerInterval;
@property (retain, nonatomic) NSObject<HMETimer> *dormantFetchTimer;
@property (nonatomic) BOOL dormantFetchConditionsMet;
@property (nonatomic) BOOL isWaitingForFetchConditionsWhenDormant;
@property (weak) NSObject<HMEMessageDatagramClientDelegate> *delegate;
@property (weak, nonatomic) NSObject<HMEMessageDatagramClientDataSource> *dataSource;

/* instance methods */
- (id)initWithQueue:(id)queue timerProvider:(id)provider keepAliveInterval:(double)interval dormantFetchTimerInterval:(double)interval retryIntervalProvider:(id)provider;
- (id)initWithQueue:(id)queue timerProvider:(id)provider keepAliveInterval:(double)interval dormantFetchTimerInterval:(double)interval retryIntervalProvider:(id)provider storeReadHandle:(id)handle storeWriteHandle:(id)handle logCategory:(const char *)category;
- (void)didReceiveMessageWithEvents:(id)events serverIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)didReceiveMessageWithCachedEvents:(id)events serverIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)serverDidChangeWithServerIdentifier:(id)identifier;
- (void)connectionCapabilityDidChange;
- (void)updateConnectionMode:(long long)mode completion:(id /* block */)completion;
- (void)updateDormantFetchCondition:(long long)condition completion:(id /* block */)completion;
- (void)resetReconnectTimerToInitialState;
- (BOOL)handleChangeRegistrationsWithTopicFilterAdditions:(id)additions removals:(id)removals;
- (id)upstreamTopicsForTopic:(id)topic;
- (id)forwardingTopicsForTopics:(id)topics;
- (id)dumpStateDescription;
@end

#endif /* HMEMessageDatagramClient_h */
