//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMEMemoryEventBus_h
#define HMEMemoryEventBus_h
@import Foundation;

#include "HMEEventConsumer-Protocol.h"
#include "HMEEventForwarder-Protocol.h"
#include "HMELastEventStoreReadHandle-Protocol.h"
#include "HMELastEventStoreWriteHandle-Protocol.h"
#include "HMELastEventStoreWriter-Protocol.h"
#include "HMESubscriptionProviding-Protocol.h"
#include "HMESynchronousSubscriptionProviding-Protocol.h"
#include "HMETopicRouter.h"
#include "HMETopicRouterDelegate-Protocol.h"

@class NSString;
@protocol HMEMemoryEventBusDataSource, HMEMemoryEventBusDelegate, OS_dispatch_queue, OS_os_log;

@interface HMEMemoryEventBus : NSObject<HMELastEventStoreWriter, HMETopicRouterDelegate, HMESynchronousSubscriptionProviding, HMEEventForwarder, HMESubscriptionProviding, HMEEventConsumer> {
  /* instance variables */
  NSObject<OS_os_log> *_logger;
}

@property (readonly) HMETopicRouter *topicRouter;
@property (readonly) NSObject<OS_dispatch_queue> *queue;
@property (readonly) NSObject<HMELastEventStoreReadHandle> *eventStoreReadHandle;
@property (readonly) NSObject<HMELastEventStoreWriteHandle> *eventStoreWriteHandle;
@property (weak) NSObject<HMEMemoryEventBusDelegate> *delegate;
@property (weak) NSObject<HMEMemoryEventBusDataSource> *dataSource;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithQueue:(id)queue;
- (id)initWithQueue:(id)queue storeReadHandle:(id)handle storeWriteHandle:(id)handle logCategory:(const char *)category;
- (void)changeRegistrationsForConsumer:(id)consumer topicFilterAdditions:(id)additions topicFilterRemovals:(id)removals completion:(id /* block */)completion;
- (void)registerConsumer:(id)consumer topicFilters:(id)filters completion:(id /* block */)completion;
- (void)unregisterConsumer:(id)consumer completion:(id /* block */)completion;
- (void)unregisterConsumer:(id)consumer topicFilters:(id)filters completion:(id /* block */)completion;
- (id)synchronousSubscriptionProvider;
- (void)changeRegistrationsSyncForConsumer:(id)consumer topicFilterAdditions:(id)additions topicFilterRemovals:(id)removals completion:(id /* block */)completion;
- (void)unregisterConsumerSync:(id)sync completion:(id /* block */)completion;
- (void)forwardEvent:(id)event topic:(id)topic completion:(id /* block */)completion;
- (void)didReceiveEvent:(id)event topic:(id)topic;
- (void)didReceiveCachedEvent:(id)event topic:(id)topic source:(id)source;
- (void)didChangeRegistrationsWithTopicFilterAdditions:(id)additions removals:(id)removals;
- (id)upstreamTopicsForTopic:(id)topic;
@end

#endif /* HMEMemoryEventBus_h */
