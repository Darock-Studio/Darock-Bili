//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 730.8.0.0.0
//
#ifndef CUMFiSession_h
#define CUMFiSession_h
@import Foundation;

#include "CUMFiReadRequest.h"
#include "CUMFiWriteRequest.h"
#include "NSStreamDelegate-Protocol.h"

@class EAAccessory, EASession, NSInputStream, NSOutputStream, NSString;
@protocol OS_dispatch_queue;

@interface CUMFiSession : NSObject<NSStreamDelegate> {
  /* instance variables */
  EASession *_eaSession;
  NSInputStream *_eaInputStream;
  NSOutputStream *_eaOutputStream;
  CUMFiReadRequest *_readRequestList;
  id * _readRequestNext;
  CUMFiReadRequest *_readRequestCurr;
  char * _readBuffer;
  unsigned long long _readLen;
  CUMFiWriteRequest *_writeRequestList;
  id * _writeRequestNext;
  CUMFiWriteRequest *_writeRequestCurr;
  const char * _writeBase;
  const char * _writePtr;
  const char * _writeEnd;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucat;
}

@property (retain, nonatomic) EAAccessory *device;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (copy, nonatomic) id /* block */ interruptionHandler;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (copy, nonatomic) NSString *label;
@property (copy, nonatomic) NSString *protocolString;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)activate;
- (void)_activate;
- (void)invalidate;
- (void)_invalidate;
- (void)_handleError:(id)error;
- (void)readMinLength:(unsigned long long)length maxLength:(unsigned long long)length completion:(id /* block */)completion;
- (void)_processReadRequests;
- (void)_completeReadRequest:(id)request error:(id)error;
- (void)writeData:(id)data completion:(id /* block */)completion;
- (void)_processWriteRequests;
- (void)stream:(id)stream handleEvent:(unsigned long long)event;
@end

#endif /* CUMFiSession_h */
