//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 730.8.0.0.0
//
#ifndef CUBluetoothScalablePipe_h
#define CUBluetoothScalablePipe_h
@import Foundation;

#include "CBScalablePipeManagerDelegate-Protocol.h"
#include "CUReadRequest.h"
#include "CUReadWriteRequestable-Protocol.h"
#include "CUWriteRequest.h"

@class CBScalablePipe, CBScalablePipeManager, NSMutableArray, NSString, NSUUID;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface CUBluetoothScalablePipe : NSObject<CBScalablePipeManagerDelegate, CUReadWriteRequestable> {
  /* instance variables */
  BOOL _invalidateCalled;
  BOOL _invalidateDone;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucat;
  struct channel * _btChannel;
  BOOL _btEndpointRegistering;
  BOOL _btEndpointRegistered;
  int _btPeerHostState;
  BOOL _btPeerKVORegistered;
  CBScalablePipe *_btPipe;
  CBScalablePipeManager *_btPipeManager;
  struct channel_ring_desc * _btReadRing;
  char * _btReadLeftoverBuf;
  unsigned long long _btReadLeftoverMaxLen;
  char * _btReadLeftoverPtr;
  char * _btReadLeftoverEnd;
  struct channel_ring_desc * _btWriteRing;
  int _channelFD;
  CUReadRequest *_readRequestCurrent;
  NSMutableArray *_readRequests;
  NSObject<OS_dispatch_source> *_readSource;
  BOOL _readSuspended;
  CUWriteRequest *_writeRequestCurrent;
  NSMutableArray *_writeRequests;
  NSObject<OS_dispatch_source> *_writeSource;
  BOOL _writeSuspended;
}

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (copy, nonatomic) NSString *identifier;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (copy, nonatomic) NSString *label;
@property (copy, nonatomic) NSUUID *peerIdentifier;
@property (readonly, nonatomic) int peerHostState;
@property (copy, nonatomic) id /* block */ peerHostStateChangedHandler;
@property (nonatomic) int priority;
@property (readonly, nonatomic) int state;
@property (copy, nonatomic) id /* block */ stateChangedHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)activateWithCompletion:(id /* block */)completion;
- (void)invalidate;
- (void)_invalidate;
- (void)_ensureStarted;
- (void)_ensureStopped:(id)stopped;
- (void)_setupPipe;
- (void)_tearDownPipe;
- (void)_handleBTPeerHostStateChanged;
- (void)readWithRequest:(id)request;
- (void)_processReads;
- (void)_prepareReadRequest:(id)request;
- (int)_readBytes:(char *)bytes minLen:(unsigned long long)len maxLen:(unsigned long long)len offset:(unsigned long long *)offset;
- (void)_abortReadsWithError:(id)error;
- (void)_completeReadRequest:(id)request error:(id)error;
- (void)writeWithRequest:(id)request;
- (void)_processWrites;
- (BOOL)_prepareWriteRequest:(id)request error:(id *)error;
- (int)_writeIOArray:(struct iovec * *)ioarray ioCount:(int *)count;
- (unsigned long long)_writeBytes:(const char *)bytes length:(unsigned long long)length;
- (void)_abortWritesWithError:(id)error;
- (void)_completeWriteRequest:(id)request error:(id)error;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)scalablePipeManagerDidUpdateState:(id)state;
- (void)scalablePipeManager:(id)manager didRegisterEndpoint:(id)endpoint error:(id)error;
- (void)scalablePipeManager:(id)manager didUnregisterEndpoint:(id)endpoint;
- (void)scalablePipeManager:(id)manager pipeDidConnect:(id)connect;
- (void)scalablePipeManager:(id)manager pipeDidDisconnect:(id)disconnect error:(id)error;
@end

#endif /* CUBluetoothScalablePipe_h */
