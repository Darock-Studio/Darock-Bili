//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 417.0.4.0.0
//
#ifndef PRSharingChoice_h
#define PRSharingChoice_h
@import Foundation;

@class NSArray, NSData, NSMutableDictionary, NSSortDescriptor;
@protocol OS_dispatch_queue, OS_os_log, {SharingImportanceMeasurements="userSharingInput"{vector<NeighborMeasurements, std::allocator<NeighborMeasurements>>="__begin_"^{NeighborMeasurements}"__end_"^{NeighborMeasurements}"__end_cap_"{__compressed_pair<NeighborMeasurements *, std::allocator<NeighborMeasurements>>="__value_"^{NeighborMeasurements}}}}, {unique_ptr<SharingImportanceManager, std::default_delete<SharingImportanceManager>>="__ptr_"{__compressed_pair<SharingImportanceManager *, std::default_delete<SharingImportanceManager>>="__value_"^{SharingImportanceManager}}};

@interface PRSharingChoice : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSMutableDictionary *_scores;
  double _lastScoreReportMachContinuousTime;
  double _lastBigHeadFirstReportTime;
  NSData *_lastBigHeadMacAddress;
  NSArray *_lastReportedScores;
  struct SharingImportanceMeasurements { struct vector<NeighborMeasurements, std::allocator<NeighborMeasurements>> { struct NeighborMeasurements *__begin_; struct NeighborMeasurements *__end_; struct __compressed_pair<NeighborMeasurements *, std::allocator<NeighborMeasurements>> { struct NeighborMeasurements *__value_; } __end_cap_; } userSharingInput; } _measurements;
  NSSortDescriptor *_scoreSortDescriptor;
  struct unique_ptr<SharingImportanceManager, std::default_delete<SharingImportanceManager>> { struct __compressed_pair<SharingImportanceManager *, std::default_delete<SharingImportanceManager>> { struct SharingImportanceManager *__value_; } __ptr_; } _estimatorRangeOnly;
}

@property (copy) id /* block */ newScoresHandler;
@property BOOL useRegionBasedEstimator;
@property BOOL currentlyInitiating;
@property (retain, nonatomic) NSObject<OS_os_log> *logger;

/* instance methods */
- (id)init;
- (id)initWithQueue:(id)queue;
- (void)createEstimators;
- (void)addRoseSolutions:(id)solutions currentMachContTime:(double)time;
- (void)addBluetoothProximityEstimate:(struct NeighborMeasurements { struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; } x0; double x1; BOOL x2; BOOL x3; double x4; double x5; BOOL x6; int x7; BOOL x8; double x9; BOOL x10; BOOL x11; })estimate currentMachContTime:(double)time;
- (void)heartbeatTimeout:(double)timeout currentMachContTime:(double)time useUpdatedScores:(BOOL)scores;
- (void)reportScoresToClientAlways:(BOOL)always useUpdatedScoreList:(BOOL)list currentMachContTime:(double)time;
- (void)updateScoresForTime:(double)time;
- (void)updateScoresWithNewMeasurement:(const void *)measurement;
@end

#endif /* PRSharingChoice_h */
