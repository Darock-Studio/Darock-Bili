//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 818.2.23.4.1
//
#ifndef GKGame_h
#define GKGame_h
@import Foundation;

#include "GKGameDescriptor.h"
#include "GKGameInternal.h"
#include "GKUtilityService-Protocol.h"
#include "NSCoding-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDictionary, NSNumber, NSString, NSURL;

@interface GKGame : NSObject<NSCoding, NSSecureCoding>

@property (readonly) NSObject<GKUtilityService> *utilityService;
@property (retain) GKGameInternal *internal;
@property (readonly) NSURL *storeURL;
@property long long environment;
@property (@dynamic, nonatomic) BOOL prerendered;
@property (readonly, nonatomic) NSDictionary *gameDescriptorDictionary;
@property (readonly, nonatomic) GKGameDescriptor *gameDescriptor;
@property (readonly, @dynamic, nonatomic) NSNumber *adamID;
@property (readonly, @dynamic, nonatomic) NSNumber *externalVersion;
@property (readonly, @dynamic, nonatomic) NSString *bundleIdentifier;
@property (readonly, @dynamic, nonatomic) NSString *bundleVersion;
@property (readonly, @dynamic, nonatomic) NSString *shortBundleVersion;
@property (readonly, nonatomic) NSString *cacheKey;
@property (@dynamic, nonatomic) long long platform;
@property (readonly, @dynamic, nonatomic) NSString *name;
@property (readonly, @dynamic, nonatomic) NSString *defaultCategory;
@property (readonly, nonatomic) struct GKGameInfo { BOOL x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; } gameInfo;
@property (readonly, @dynamic, nonatomic) BOOL supportsMultiplayer;
@property (readonly, @dynamic, nonatomic) BOOL supportsTurnBasedMultiplayer;

/* class methods */
+ (BOOL)isPreferences;
+ (BOOL)isFirstParty;
+ (BOOL)isGameCenter;
+ (id)currentGame;
+ (id)createNonStaticCurrentGame;
+ (id)currentGameIncludingGameCenter:(BOOL)center;
+ (void)setCurrentGameFromInternal:(id)internal serverEnvironment:(long long)environment;
+ (BOOL)supportsSecureCoding;
+ (void)loadGamesWithBundleIDs:(id)ids withCompletionHandler:(id /* block */)handler;
+ (void)loadTopGamesWithCompletionHandler:(id /* block */)handler;
+ (void)updateGames:(id)games withCompletionHandler:(id /* block */)handler;
+ (id)instanceMethodSignatureForSelector:(SEL)selector;
+ (BOOL)instancesRespondToSelector:(SEL)selector;

/* instance methods */
- (void)getGameMatchesIncludingCompatibleGames:(BOOL)games handler:(id /* block */)handler;
- (void)getGameMatchesForLeaderboard:(id)leaderboard handler:(id /* block */)handler;
- (void)getGameMatchesForAchievement:(id)achievement handler:(id /* block */)handler;
- (BOOL)isSpringBoard;
- (BOOL)isGameControllerDaemon;
- (BOOL)isDaemon;
- (BOOL)isGameCenter;
- (BOOL)isAppStore;
- (BOOL)isGameCenterHostingContainer;
- (BOOL)isContacts;
- (BOOL)isInternalTestApp;
- (id)initWithInternalRepresentation:(id)representation;
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)description;
- (id)forwardingTargetForSelector:(SEL)selector;
- (id)methodSignatureForSelector:(SEL)selector;
- (BOOL)respondsToSelector:(SEL)selector;
- (id)valueForUndefinedKey:(id)key;
- (void)setValue:(id)value forUndefinedKey:(id)key;
@end

#endif /* GKGame_h */
