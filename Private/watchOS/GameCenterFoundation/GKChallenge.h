//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 818.2.23.4.1
//
#ifndef GKChallenge_h
#define GKChallenge_h
@import Foundation;

#include "GKChallengeInternal.h"
#include "GKGame.h"
#include "GKPlayer.h"
#include "NSCoding-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDate, NSOrderedSet, NSString;

@interface GKChallenge : NSObject<NSCoding, NSSecureCoding>

@property (retain) GKChallengeInternal *internal;
@property (readonly, copy, @dynamic, nonatomic) NSString *challengeID;
@property (readonly, copy, @dynamic, nonatomic) NSString *bundleID;
@property (readonly, copy, @dynamic, nonatomic) NSOrderedSet *compatibleBundleIDs;
@property (readonly, @dynamic, nonatomic) GKGame *game;
@property (readonly, nonatomic) BOOL detailsLoaded;
@property (retain) GKChallengeInternal *internal;
@property (readonly, copy, nonatomic) NSString *challengeID;
@property (readonly, copy, nonatomic) NSString *bundleID;
@property (readonly, copy, nonatomic) NSOrderedSet *compatibleBundleIDs;
@property (readonly, nonatomic) GKGame *game;
@property (readonly, nonatomic) BOOL detailsLoaded;
@property (readonly, copy, @dynamic, nonatomic) GKPlayer *issuingPlayer;
@property (readonly, copy, @dynamic, nonatomic) GKPlayer *receivingPlayer;
@property (readonly, @dynamic, nonatomic) long long state;
@property (readonly, retain, @dynamic, nonatomic) NSDate *issueDate;
@property (readonly, retain, @dynamic, nonatomic) NSDate *completionDate;
@property (readonly, copy, @dynamic, nonatomic) NSString *message;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)stringForState:(long long)state;
+ (id)challengeForInternalRepresentation:(id)representation;
+ (id)challengeForGame:(id)game andPlayer:(id)player withScore:(id)score;
+ (id)challengeForGame:(id)game andPlayer:(id)player withAchievement:(id)achievement;
+ (void)getCountOfChallenges:(id /* block */)challenges;
+ (void)loadChallengesForGame:(id)game receivingPlayer:(id)player withCompletionHandler:(id /* block */)handler;
+ (void)loadChallengesForReceivingPlayer:(id)player withCompletionHandler:(id /* block */)handler;
+ (void)loadReceivedPendingChallengesWithCompletionHandler:(id /* block */)handler;
+ (void)loadReceivedChallengesWithCompletionHandler:(id /* block */)handler;
+ (id)instanceMethodSignatureForSelector:(SEL)selector;
+ (BOOL)instancesRespondToSelector:(SEL)selector;

/* instance methods */
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)initWithInternalRepresentation:(id)representation;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)issueToPlayers:(id)players message:(id)message;
- (void)declineWithCompletionHandler:(id /* block */)handler;
- (void)decline;
- (id)issuingPlayerID;
- (id)receivingPlayerID;
- (id)forwardingTargetForSelector:(SEL)selector;
- (id)methodSignatureForSelector:(SEL)selector;
- (BOOL)respondsToSelector:(SEL)selector;
- (id)valueForUndefinedKey:(id)key;
- (void)setValue:(id)value forUndefinedKey:(id)key;
- (BOOL)hasLoadedUIDetails;
- (void)loadUIDetailsWithHandler:(id /* block */)handler;
- (id)infoTextForIssuingPlayer:(id)player;
- (void)loadDetailsWithCompletionHandler:(id /* block */)handler;
@end

#endif /* GKChallenge_h */
