//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 818.2.23.4.1
//
#ifndef GKLeaderboard_h
#define GKLeaderboard_h
@import Foundation;

#include "GKLeaderboardInternal.h"
#include "GKScore.h"

@class NSArray, NSDate, NSString;
@protocol GKLeaderboardDelegate;

@interface GKLeaderboard : NSObject

@property (retain, nonatomic) NSArray *players;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x0; } lock;
@property (copy, @dynamic, nonatomic) NSString *category;
@property (retain, nonatomic) NSArray *scores;
@property (nonatomic) long long timeScope;
@property (nonatomic) long long playerScope;
@property (copy, @dynamic, nonatomic) NSString *identifier;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } range;
@property (readonly, @dynamic, nonatomic) unsigned long long maxRange;
@property (readonly) BOOL loading;
@property (retain) GKLeaderboardInternal *internal;
@property (weak, nonatomic) NSObject<GKLeaderboardDelegate> *delegate;
@property (retain, nonatomic) GKScore *localPlayerScore;
@property (nonatomic) int loadingCount;
@property (readonly, @dynamic, nonatomic) unsigned long long releaseState;
@property (readonly, @dynamic, nonatomic) NSString *localizedTitle;
@property (readonly, @dynamic, nonatomic) long long overallRank;
@property (readonly, @dynamic, nonatomic) long long overallRankCount;
@property (readonly, @dynamic, nonatomic) long long friendRank;
@property (readonly, @dynamic, nonatomic) long long friendRankCount;
@property (retain) GKLeaderboardInternal *internal;
@property (weak, nonatomic) NSObject<GKLeaderboardDelegate> *delegate;
@property (retain, nonatomic) GKScore *localPlayerScore;
@property (nonatomic) int loadingCount;
@property (readonly, nonatomic) unsigned long long releaseState;
@property (readonly, nonatomic) NSString *localizedTitle;
@property (readonly, nonatomic) long long overallRank;
@property (readonly, nonatomic) long long overallRankCount;
@property (readonly, nonatomic) long long friendRank;
@property (readonly, nonatomic) long long friendRankCount;
@property (readonly, copy, @dynamic, nonatomic) NSString *title;
@property (readonly, @dynamic, nonatomic) NSString *groupIdentifier;
@property (readonly, @dynamic, nonatomic) NSString *baseLeaderboardID;
@property (readonly, @dynamic, nonatomic) long long type;
@property (readonly, @dynamic, nonatomic) NSDate *startDate;
@property (readonly, @dynamic, nonatomic) NSDate *nextStartDate;
@property (readonly, nonatomic) double duration;

/* class methods */
+ (void)loadCategoriesWithCompletionHandler:(id /* block */)handler;
+ (void)loadLeaderboardsWithCompletionHandler:(id /* block */)handler;
+ (void)loadLeaderboardsForGame:(id)game forSet:(id)set withPlayer:(id)player withCompletionHandler:(id /* block */)handler;
+ (void)loadLeaderboardWithIdentifier:(id)identifier forGame:(id)game withPlayer:(id)player withCompletionHandler:(id /* block */)handler;
+ (void)loadLeaderboardsForGame:(id)game withPlayer:(id)player withCompletionHandler:(id /* block */)handler;
+ (void)loadLeaderboardsForGame:(id)game withCompletionHandler:(id /* block */)handler;
+ (void)setDefaultLeaderboard:(id)leaderboard withCompletionHandler:(id /* block */)handler;
+ (void)loadLeaderboardsWithIDs:(id)ids completionHandler:(id /* block */)handler;
+ (void)loadLeaderboardsWithIDs:(id)ids game:(id)game completionHandler:(id /* block */)handler;
+ (void)loadLeaderboardsWithIDs:(id)ids setIdentifier:(id)identifier completionHandler:(id /* block */)handler;
+ (void)loadLeaderboardsWithIDs:(id)ids setIdentifier:(id)identifier game:(id)game completionHandler:(id /* block */)handler;
+ (void)submitScore:(long long)score context:(unsigned long long)context player:(id)player leaderboardIDs:(id)ids completionHandler:(id /* block */)handler;
+ (id /* block */)leaderboardEntriesHandlerForGroup:(id)group gameBundleID:(id)id proxy:(id)proxy done:(id /* block */)done;
+ (void)loadHighlightsWithPlayerScope:(long long)scope timeScope:(long long)scope handler:(id /* block */)handler;
+ (void)loadHighlightsWithPlayerScope:(long long)scope timeScope:(long long)scope game:(id)game handler:(id /* block */)handler;
+ (id)instanceMethodSignatureForSelector:(SEL)selector;
+ (BOOL)instancesRespondToSelector:(SEL)selector;

/* instance methods */
- (id)initWithInternalRepresentation:(id)representation;
- (id)init;
- (id)initWithPlayers:(id)players;
- (id)initWithPlayerIDs:(id)ids;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)description;
- (BOOL)isLoading;
- (void)loadScoresWithCompletionHandler:(id /* block */)handler;
- (id)scoreRequestForGame:(id)game;
- (void)loadScoresForRequest:(id)request handler:(id /* block */)handler;
- (void)loadScoresForGame:(id)game withCompletionHandler:(id /* block */)handler;
- (void)incrementLoadingCountAtomically;
- (void)decrementLoadingCountAtomically;
- (void)loadPreviousOccurrenceWithCompletionHandler:(id /* block */)handler;
- (void)submitScore:(long long)score context:(unsigned long long)context player:(id)player completionHandler:(id /* block */)handler;
- (void)loadEntriesForPlayerScope:(long long)scope timeScope:(long long)scope range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range completionHandler:(id /* block */)handler;
- (void)loadEntriesForPlayerScope:(long long)scope timeScope:(long long)scope range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range locale:(id)locale completionHandler:(id /* block */)handler;
- (void)loadEntriesWithGameDescriptor:(id)descriptor playerScope:(long long)scope timeScope:(long long)scope range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range completionHandler:(id /* block */)handler;
- (void)loadEntriesWithGameDescriptor:(id)descriptor playerScope:(long long)scope timeScope:(long long)scope range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range locale:(id)locale completionHandler:(id /* block */)handler;
- (void)loadEntriesWithGameDescriptor:(id)descriptor fetchOptions:(unsigned long long)options playerScope:(long long)scope timeScope:(long long)scope range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range completionHandler:(id /* block */)handler;
- (void)loadEntriesForPlayers:(id)players timeScope:(long long)scope completionHandler:(id /* block */)handler;
- (void)loadEntriesForPlayers:(id)players timeScope:(long long)scope locale:(id)locale completionHandler:(id /* block */)handler;
- (void)loadSummaryWithTimeScope:(long long)scope completionHandler:(id /* block */)handler;
- (id)creator;
- (void)startWithHandler:(id /* block */)handler;
- (void)endWithHandler:(id /* block */)handler;
- (void)deleteWithHandler:(id /* block */)handler;
- (id)forwardingTargetForSelector:(SEL)selector;
- (id)methodSignatureForSelector:(SEL)selector;
- (BOOL)respondsToSelector:(SEL)selector;
- (id)valueForUndefinedKey:(id)key;
- (void)setValue:(id)value forUndefinedKey:(id)key;
@end

#endif /* GKLeaderboard_h */
