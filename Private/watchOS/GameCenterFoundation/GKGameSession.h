//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 818.2.23.4.1
//
#ifndef GKGameSession_h
#define GKGameSession_h
@import Foundation;

#include "GKCloudPlayer.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSDate, NSMutableDictionary, NSString;

@interface GKGameSession : NSObject<NSSecureCoding>

@property (retain, nonatomic) NSString *identifier;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) GKCloudPlayer *owner;
@property (retain, nonatomic) NSArray *players;
@property (retain, nonatomic) NSDate *lastModifiedDate;
@property (retain, nonatomic) GKCloudPlayer *lastModifiedPlayer;
@property (retain, nonatomic) NSString *serverChangeTag;
@property (nonatomic) long long maxNumberOfConnectedPlayers;
@property (retain, nonatomic) NSMutableDictionary *playerStates;
@property (retain, nonatomic) NSString *identifier;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) GKCloudPlayer *owner;
@property (retain, nonatomic) NSArray *players;
@property (retain, nonatomic) NSDate *lastModifiedDate;
@property (retain, nonatomic) GKCloudPlayer *lastModifiedPlayer;
@property (retain, nonatomic) NSString *serverChangeTag;
@property (nonatomic) long long maxNumberOfConnectedPlayers;
@property (retain, nonatomic) NSMutableDictionary *playerStates;
@property (readonly, nonatomic) NSArray *badgedPlayers;

/* class methods */
+ (void)getZonesWithCompletionHandler:(id /* block */)handler;
+ (void)getSessionsForZone:(id)zone completionHandler:(id /* block */)handler;
+ (id)gk_sessionEventListeners;
+ (void)addEventListener:(id)listener;
+ (void)removeEventListener:(id)listener;
+ (void)postSession:(id)session didAddPlayer:(id)player;
+ (void)postSession:(id)session didRemovePlayer:(id)player;
+ (void)postSession:(id)session player:(id)player didChangeConnectionState:(long long)state;
+ (void)postSession:(id)session player:(id)player didSaveData:(id)data;
+ (void)postSession:(id)session didReceiveData:(id)data fromPlayer:(id)player;
+ (void)postSession:(id)session didReceiveMessage:(id)message withData:(id)data fromPlayer:(id)player;
+ (void)createSessionInContainer:(id)container withTitle:(id)title maxConnectedPlayers:(long long)players completionHandler:(id /* block */)handler;
+ (void)loadSessionsInContainer:(id)container completionHandler:(id /* block */)handler;
+ (void)loadSessionWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
+ (void)removeSessionWithIdentifier:(id)identifier completionHandler:(id /* block */)handler;
+ (id)daemonProxy;
+ (id)gameSessionService;
+ (id)gameSessionServicePrivate;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)daemonProxy;
- (id)gameSessionService;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)descriptionSubstitutionMap;
- (id)_gkDescriptionWithChildren:(long long)children;
- (id)description;
- (void)updateWithSession:(id)session;
- (void)getShareURLWithCompletionHandler:(id /* block */)handler;
- (void)loadDataWithCompletionHandler:(id /* block */)handler;
- (void)saveData:(id)data completionHandler:(id /* block */)handler;
- (void)setConnectionState:(long long)state completionHandler:(id /* block */)handler;
- (id)playersWithConnectionState:(long long)state;
- (void)sendData:(id)data withTransportType:(long long)type completionHandler:(id /* block */)handler;
- (void)sendMessageWithLocalizedFormatKey:(id)key arguments:(id)arguments data:(id)data toPlayers:(id)players badgePlayers:(BOOL)players completionHandler:(id /* block */)handler;
- (void)clearBadgeForPlayers:(id)players completionHandler:(id /* block */)handler;
@end

#endif /* GKGameSession_h */
