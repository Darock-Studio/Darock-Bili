//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 818.2.23.4.1
//
#ifndef GKTurnBasedMatch_h
#define GKTurnBasedMatch_h
@import Foundation;

#include "GKGame.h"
#include "GKPlayer.h"
#include "GKSessionDelegate-Protocol.h"
#include "GKTurnBasedMatchInternal.h"
#include "GKTurnBasedParticipant.h"

@class NSArray, NSData, NSDate, NSString;

@interface GKTurnBasedMatch : NSObject<GKSessionDelegate>

@property (copy, @dynamic, nonatomic) NSDate *lastTurnDate;
@property (readonly, @dynamic, nonatomic) long long turnNumber;
@property (readonly, nonatomic) NSDate *dateSortKey;
@property (retain, nonatomic) GKTurnBasedParticipant *currentParticipant;
@property (readonly, nonatomic) GKTurnBasedParticipant *previousParticipant;
@property (readonly, nonatomic) GKTurnBasedParticipant *previousParticipantOrFirstKnownPlayer;
@property (readonly, nonatomic) GKTurnBasedParticipant *playingWithParticipantOrFirstKnownPlayer;
@property (readonly, nonatomic) GKTurnBasedParticipant *localPlayerParticipant;
@property (readonly, nonatomic) GKPlayer *showcasePlayer;
@property (readonly, nonatomic) GKTurnBasedParticipant *firstWinnerOrTiedOrLastLoser;
@property (@dynamic, nonatomic) unsigned long long matchDataMaximumSize;
@property (readonly, @dynamic, nonatomic) GKPlayer *currentPlayer;
@property (retain, @dynamic, nonatomic) NSString *bundleID;
@property (retain, @dynamic, nonatomic) NSString *bundleVersion;
@property (retain, @dynamic, nonatomic) NSString *shortBundleVersion;
@property (readonly, @dynamic, nonatomic) long long platform;
@property (nonatomic) unsigned int state;
@property (readonly, @dynamic, nonatomic) BOOL isMyTurn;
@property (readonly, nonatomic) BOOL localPlayerHasRecentTurn;
@property (readonly, @dynamic, nonatomic) GKGame *game;
@property (retain) GKTurnBasedMatchInternal *internal;
@property (copy, nonatomic) NSDate *lastTurnDate;
@property (readonly, nonatomic) long long turnNumber;
@property (readonly, nonatomic) NSDate *dateSortKey;
@property (retain, nonatomic) GKTurnBasedParticipant *currentParticipant;
@property (readonly, nonatomic) GKTurnBasedParticipant *previousParticipant;
@property (readonly, nonatomic) GKTurnBasedParticipant *previousParticipantOrFirstKnownPlayer;
@property (readonly, nonatomic) GKTurnBasedParticipant *playingWithParticipantOrFirstKnownPlayer;
@property (readonly, nonatomic) GKTurnBasedParticipant *localPlayerParticipant;
@property (readonly, nonatomic) GKPlayer *showcasePlayer;
@property (readonly, nonatomic) GKTurnBasedParticipant *firstWinnerOrTiedOrLastLoser;
@property (nonatomic) unsigned long long matchDataMaximumSize;
@property (readonly, nonatomic) GKPlayer *currentPlayer;
@property (retain, nonatomic) NSString *bundleID;
@property (retain, nonatomic) NSString *bundleVersion;
@property (retain, nonatomic) NSString *shortBundleVersion;
@property (readonly, nonatomic) long long platform;
@property (nonatomic) unsigned int state;
@property (readonly, nonatomic) BOOL isMyTurn;
@property (readonly, nonatomic) BOOL localPlayerHasRecentTurn;
@property (readonly, nonatomic) GKGame *game;
@property (retain) GKTurnBasedMatchInternal *internal;
@property (readonly, @dynamic, nonatomic) NSString *matchID;
@property (readonly, @dynamic, nonatomic) NSDate *creationDate;
@property (readonly, nonatomic) NSArray *participants;
@property (readonly, @dynamic, nonatomic) long long status;
@property (readonly, @dynamic, nonatomic) NSData *matchData;
@property (copy, nonatomic) NSString *message;
@property (readonly, nonatomic) NSArray *exchanges;
@property (readonly, nonatomic) NSArray *activeExchanges;
@property (readonly, nonatomic) NSArray *completedExchanges;
@property (readonly, @dynamic, nonatomic) unsigned long long exchangeDataMaximumSize;
@property (readonly, @dynamic, nonatomic) unsigned long long exchangeMaxInitiatedExchangesPerPlayer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)getTurnBasedBadgeCountWithHandler:(id /* block */)handler;
+ (id)matchesWithInternalRepresentations:(id)representations;
+ (void)findMatchForRequest:(id)request withCompletionHandler:(id /* block */)handler;
+ (void)loadMatchesWithCompletionHandler:(id /* block */)handler;
+ (void)loadMatchesIncludingCompatibleBundleID:(BOOL)id withCompletionHandler:(id /* block */)handler;
+ (void)loadTurnBasedMatchSummaries:(id /* block */)summaries;
+ (void)loadTurnBasedMatchSummariesIncludingCompatibleBundleID:(BOOL)id withCompletionHandler:(id /* block */)handler;
+ (void)loadTurnBasedMatchDetailsForMatchIDs:(id)ids loadGameData:(BOOL)data withCompletionHandler:(id /* block */)handler;
+ (void)loadMatchWithID:(id)id withCompletionHandler:(id /* block */)handler;
+ (id)instanceMethodSignatureForSelector:(SEL)selector;
+ (BOOL)instancesRespondToSelector:(SEL)selector;
+ (id)_localizableMessageWithKey:(id)key arguments:(id)arguments defaultMessage:(id)message;
+ (id)keyPathsForValuesAffectingStatus;
+ (void)loadTurnBasedMatchWithDetailsForMatchID:(id)id withCompletionHandler:(id /* block */)handler;

/* instance methods */
- (id)initWithInternalRepresentation:(id)representation;
- (id)init;
- (BOOL)isEqual:(id)equal;
- (void)_updateWithInternal:(id)internal;
- (id)_participantsForInternalRepresentation:(id)representation;
- (id)daemonProxy;
- (id)_exchangesForInternalRepresentation:(id)representation participants:(id)participants;
- (id)forwardingTargetForSelector:(SEL)selector;
- (id)methodSignatureForSelector:(SEL)selector;
- (BOOL)respondsToSelector:(SEL)selector;
- (id)valueForUndefinedKey:(id)key;
- (void)setValue:(id)value forUndefinedKey:(id)key;
- (void)setLocalizableMessageWithKey:(id)key arguments:(id)arguments;
- (long long)compare:(id)compare;
- (void)rematchWithCompletionHandler:(id /* block */)handler;
- (void)acceptInviteWithCompletionHandler:(id /* block */)handler;
- (void)declineInviteWithCompletionHandler:(id /* block */)handler;
- (void)removeWithCompletionHandler:(id /* block */)handler;
- (void)loadMatchDataWithCompletionHandler:(id /* block */)handler;
- (void)loadURLWithMatchRequest:(id)request completionHandler:(id /* block */)handler;
- (void)reserveShareParticipantSlots:(long long)slots minPlayerCount:(long long)count maxPlayerCount:(long long)count andInvitePlayers:(id)players withMessage:(id)message handler:(id /* block */)handler;
- (void)endTurnWithNextParticipant:(id)participant matchData:(id)data completionHandler:(id /* block */)handler;
- (id)indexesForParticipants:(id)participants;
- (void)endTurnWithNextParticipants:(id)participants turnTimeout:(double)timeout matchData:(id)data completionHandler:(id /* block */)handler;
- (void)participantQuitInTurnWithOutcome:(long long)outcome nextParticipant:(id)participant matchData:(id)data completionHandler:(id /* block */)handler;
- (void)participantQuitInTurnWithOutcome:(long long)outcome nextParticipants:(id)participants turnTimeout:(double)timeout matchData:(id)data completionHandler:(id /* block */)handler;
- (void)participantQuitOutOfTurnWithOutcome:(long long)outcome withCompletionHandler:(id /* block */)handler;
- (void)endMatchInTurnWithMatchData:(id)data completionHandler:(id /* block */)handler;
- (void)endMatchInTurnWithMatchData:(id)data scores:(id)scores achievements:(id)achievements completionHandler:(id /* block */)handler;
- (void)endMatchInTurnWithMatchData:(id)data leaderboardScores:(id)scores achievements:(id)achievements completionHandler:(id /* block */)handler;
- (void)saveCurrentTurnWithMatchData:(id)data completionHandler:(id /* block */)handler;
- (id)exchangeForID:(id)id;
- (void)saveMergedMatchData:(id)data withResolvedExchanges:(id)exchanges completionHandler:(id /* block */)handler;
- (void)sendExchangeToParticipants:(id)participants data:(id)data localizableMessageKey:(id)key arguments:(id)arguments timeout:(double)timeout completionHandler:(id /* block */)handler;
- (void)sendReminderToParticipants:(id)participants localizableMessageKey:(id)key arguments:(id)arguments completionHandler:(id /* block */)handler;
@end

#endif /* GKTurnBasedMatch_h */
