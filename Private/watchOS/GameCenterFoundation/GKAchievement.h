//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 818.2.23.4.1
//
#ifndef GKAchievement_h
#define GKAchievement_h
@import Foundation;

#include "GKAchievementInternal.h"
#include "GKGame.h"
#include "GKPlayer.h"
#include "NSCoding-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSDate, NSString;

@interface GKAchievement : NSObject<NSCopying, NSCoding, NSSecureCoding>

@property (copy, @dynamic, nonatomic) NSString *playerID;
@property (retain) GKAchievementInternal *internal;
@property (copy, @dynamic, nonatomic) NSDate *lastReportedDate;
@property (@dynamic, nonatomic) BOOL hidden;
@property (readonly, copy, @dynamic, nonatomic) NSString *groupIdentifier;
@property (retain, nonatomic) GKGame *game;
@property (retain, @dynamic, nonatomic) NSArray *friendsWhoHaveThis;
@property (retain) GKAchievementInternal *internal;
@property (copy, nonatomic) NSDate *lastReportedDate;
@property (nonatomic) BOOL hidden;
@property (readonly, copy, nonatomic) NSString *groupIdentifier;
@property (retain, nonatomic) GKGame *game;
@property (retain, nonatomic) NSArray *friendsWhoHaveThis;
@property (copy, @dynamic, nonatomic) NSString *identifier;
@property (@dynamic, nonatomic) double percentComplete;
@property (readonly, nonatomic) BOOL completed;
@property (nonatomic) BOOL showsCompletionBanner;
@property (readonly, nonatomic) GKPlayer *player;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (void)loadAchievementsWithCompletionHandler:(id /* block */)handler;
+ (void)loadAchievementsForGameV2:(id)v2 player:(id)player includeUnreported:(BOOL)unreported includeHidden:(BOOL)hidden withCompletionHandler:(id /* block */)handler;
+ (void)loadAchievementsForGameV2:(id)v2 players:(id)players includeUnreported:(BOOL)unreported includeHidden:(BOOL)hidden withCompletionHandler:(id /* block */)handler;
+ (void)loadAchievementWithID:(id)id forGame:(id)game players:(id)players complete:(id /* block */)complete;
+ (void)resetAchievementsWithCompletionHandler:(id /* block */)handler;
+ (void)reportAchievements:(id)achievements withCompletionHandler:(id /* block */)handler;
+ (void)reportAchievements:(id)achievements whileScreeningChallenges:(BOOL)challenges withEligibleChallenges:(id)challenges withCompletionHandler:(id /* block */)handler;
+ (id)descriptionForAchievement:(id)achievement achievementDescriptions:(id)descriptions;
+ (BOOL)shouldShowBannerOnReport:(id)report reportedAchievements:(id)achievements;
+ (id)instanceMethodSignatureForSelector:(SEL)selector;
+ (BOOL)instancesRespondToSelector:(SEL)selector;

/* instance methods */
- (id)_achievementDescription;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)initWithInternalRepresentation:(id)representation;
- (id)initWithInternalRepresentation:(id)representation playerID:(id)id;
- (id)initWithIdentifier:(id)identifier;
- (id)initWithIdentifier:(id)identifier player:(id)player;
- (id)initWithIdentifier:(id)identifier forPlayer:(id)player;
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isCompleted;
- (id)description;
- (void)reportAchievementWithCompletionHandler:(id /* block */)handler;
- (id)forwardingTargetForSelector:(SEL)selector;
- (id)methodSignatureForSelector:(SEL)selector;
- (BOOL)respondsToSelector:(SEL)selector;
- (id)valueForUndefinedKey:(id)key;
- (void)setValue:(id)value forUndefinedKey:(id)key;
@end

#endif /* GKAchievement_h */
