//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 818.2.23.4.1
//
#ifndef GKViceroyTransport_h
#define GKViceroyTransport_h
@import Foundation;

#include "GKSessionPrivateDelegate-Protocol.h"
#include "GKTransportClientDelegate-Protocol.h"
#include "GKTransportProtocol-Protocol.h"
#include "GKViceroyLeaderElector.h"
#include "GKViceroyRelay.h"
#include "GKViceroySession.h"

@class GKConnection, NSData, NSMutableDictionary, NSString;

@interface GKViceroyTransport : NSObject<GKSessionPrivateDelegate, GKTransportProtocol> {
  /* instance variables */
  NSObject<GKTransportClientDelegate> *_weakClientDelegate;
}

@property (weak, nonatomic) NSObject<GKTransportClientDelegate> *clientDelegate;
@property (retain, nonatomic) GKConnection *connection;
@property (retain, nonatomic) NSMutableDictionary *guestConnections;
@property (retain, nonatomic) NSMutableDictionary *guestSessions;
@property (retain, nonatomic) GKViceroyLeaderElector *leaderElector;
@property (retain, nonatomic) GKViceroyRelay *relay;
@property (retain, nonatomic) NSData *selfBlob;
@property (retain, nonatomic) GKViceroySession *session;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSData *nearbyConnectionData;

/* instance methods */
- (id)initWithClientDelegate:(id)delegate transportSupport:(id)support;
- (void)initSessionIfNeeded;
- (void)dealloc;
- (void)connectToNearbyPlayer:(id)player withConnectionData:(id)data;
- (void)connectToPlayersWithTransportContext:(id)context completionHandler:(id /* block */)handler;
- (BOOL)connectToGuestPlayer:(id)player withHostPlayer:(id)player;
- (void)disconnectAllWithTransportContext:(id)context completionHandler:(id /* block */)handler;
- (id)enrichPeerDictionariesForPlayersConnection:(id)connection;
- (void)localConnectionDataWithCompletionHandler:(id /* block */)handler;
- (id)peerIdFromPlayer:(id)player;
- (id)playerIDFromPeerID:(id)id;
- (id)playerIDFromSession:(id)session;
- (BOOL)sendScopedData:(id)data toPlayers:(id)players dataMode:(long long)mode dataScope:(long long)scope transportContext:(id)context error:(id *)error;
- (BOOL)sendScopedDataToAll:(id)all dataMode:(long long)mode dataScope:(long long)scope transportContext:(id)context error:(id *)error;
- (void)receiveData:(id)data fromPeer:(id)peer inSession:(id)session context:(void *)context;
- (void)acceptRelayResponse:(id)response playerID:(id)id;
- (void)handleRelayPushData:(id)data onlyIfPreemptive:(BOOL)preemptive;
- (void)preemptRelay:(id)relay;
- (void)session:(id)session peer:(id)peer didChangeState:(int)state;
- (void)session:(id)session connectionWithPeerFailed:(id)failed withError:(id)error;
- (void)session:(id)session didFailWithError:(id)error;
- (void)session:(id)session initiateRelay:(id)relay forPeer:(id)peer;
- (void)session:(id)session updateRelay:(id)relay forPeer:(id)peer;
- (void)session:(id)session networkStatisticsChanged:(id)changed;
- (void)chooseBestHostingPlayerWithTransportContext:(id)context completionHandler:(id /* block */)handler;
- (id)voiceChatWithName:(id)name players:(id)players transportContext:(id)context;
@end

#endif /* GKViceroyTransport_h */
