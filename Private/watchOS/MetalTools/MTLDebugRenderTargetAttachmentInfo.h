//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLDebugRenderTargetAttachmentInfo_h
#define MTLDebugRenderTargetAttachmentInfo_h
@import Foundation;

#include "MTLTexture-Protocol.h"

@interface MTLDebugRenderTargetAttachmentInfo : NSObject

@property (readonly, nonatomic) NSObject<MTLTexture> *attachmentTexture;
@property (readonly, nonatomic) NSObject<MTLTexture> *baseResolveTexture;
@property (readonly, nonatomic) NSObject<MTLTexture> *baseTexture;
@property (readonly, nonatomic) unsigned long long renderTargetArrayLength;
@property (readonly, nonatomic) unsigned long long baseLevelOffset;
@property (readonly, nonatomic) unsigned long long resolveLevelOffset;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } baseSliceRangeOffset;
@property (readonly, nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } resolveSliceRangeOffset;

/* instance methods */
- (id)initWithDesc:(const struct MTLRenderPassAttachmentDescriptorPrivate { id x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct { double x0; double x1; double x2; double x3; } x7; double x8; unsigned int x9; unsigned long long x10; id x11; unsigned long long x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; unsigned long long x16; unsigned long long x17; BOOL x18; } *)desc renderTargetArrayLength:(unsigned long long)length;
- (unsigned long long)intersectsTexture:(id)texture;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
@end

#endif /* MTLDebugRenderTargetAttachmentInfo_h */
