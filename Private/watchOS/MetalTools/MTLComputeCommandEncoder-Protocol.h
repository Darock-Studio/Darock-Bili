//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLComputeCommandEncoder_Protocol_h
#define MTLComputeCommandEncoder_Protocol_h
@import Foundation;

@protocol MTLComputeCommandEncoder <MTLCommandEncoder>

@property (readonly) unsigned long long dispatchType;

/* instance methods */
- (void)setComputePipelineState:(id)state;
- (void)setBytes:(const void *)bytes length:(unsigned long long)length atIndex:(unsigned long long)index;
- (void)setBuffer:(id)buffer offset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setBufferOffset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setBuffer:(id)buffer offset:(unsigned long long)offset attributeStride:(unsigned long long)stride atIndex:(unsigned long long)index;
- (void)setBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets attributeStrides:(const unsigned long long *)strides withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setBufferOffset:(unsigned long long)offset attributeStride:(unsigned long long)stride atIndex:(unsigned long long)index;
- (void)setBytes:(const void *)bytes length:(unsigned long long)length attributeStride:(unsigned long long)stride atIndex:(unsigned long long)index;
- (void)setVisibleFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setVisibleFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setIntersectionFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setIntersectionFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setAccelerationStructure:(id)structure atBufferIndex:(unsigned long long)index;
- (void)setTexture:(id)texture atIndex:(unsigned long long)index;
- (void)setTextures:(const id *)textures withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setSamplerState:(id)state atIndex:(unsigned long long)index;
- (void)setSamplerStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setSamplerState:(id)state lodMinClamp:(float)clamp lodMaxClamp:(float)clamp atIndex:(unsigned long long)index;
- (void)setSamplerStates:(const id *)states lodMinClamps:(const float *)clamps lodMaxClamps:(const float *)clamps withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setThreadgroupMemoryLength:(unsigned long long)length atIndex:(unsigned long long)index;
- (void)setImageblockWidth:(unsigned long long)width height:(unsigned long long)height;
- (void)setStageInRegion:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })region;
- (void)setStageInRegionWithIndirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset;
- (void)dispatchThreadgroups:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroups threadsPerThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup;
- (void)dispatchThreadgroupsWithIndirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset threadsPerThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup;
- (void)dispatchThreads:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threads threadsPerThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup;
- (void)updateFence:(id)fence;
- (void)waitForFence:(id)fence;
- (void)useResource:(id)resource usage:(unsigned long long)usage;
- (void)useResources:(const id *)resources count:(unsigned long long)count usage:(unsigned long long)usage;
- (void)useHeap:(id)heap;
- (void)useHeaps:(const id *)heaps count:(unsigned long long)count;
- (void)executeCommandsInBuffer:(id)buffer withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)executeCommandsInBuffer:(id)buffer indirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset;
- (void)memoryBarrierWithScope:(unsigned long long)scope;
- (void)memoryBarrierWithResources:(const id *)resources count:(unsigned long long)count;
- (void)sampleCountersInBuffer:(id)buffer atSampleIndex:(unsigned long long)index withBarrier:(BOOL)barrier;
@end

#endif /* MTLComputeCommandEncoder_Protocol_h */
