//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLCommandBuffer_Protocol_h
#define MTLCommandBuffer_Protocol_h
@import Foundation;

@protocol MTLCommandBuffer <NSObject>

@property (readonly) NSObject<MTLDevice> *device;
@property (readonly) NSObject<MTLCommandQueue> *commandQueue;
@property (readonly) BOOL retainedReferences;
@property (readonly) unsigned long long errorOptions;
@property (copy) NSString *label;
@property (readonly) double kernelStartTime;
@property (readonly) double kernelEndTime;
@property (readonly) NSObject<MTLLogContainer> *logs;
@property (readonly) double GPUStartTime;
@property (readonly) double GPUEndTime;
@property (readonly) unsigned long long status;
@property (readonly) NSError *error;

/* instance methods */
- (void)enqueue;
- (void)commit;
- (void)addScheduledHandler:(id /* block */)handler;
- (void)presentDrawable:(id)drawable;
- (void)presentDrawable:(id)drawable atTime:(double)time;
- (void)waitUntilScheduled;
- (void)addCompletedHandler:(id /* block */)handler;
- (void)waitUntilCompleted;
- (id)blitCommandEncoder;
- (id)renderCommandEncoderWithDescriptor:(id)descriptor;
- (id)computeCommandEncoderWithDescriptor:(id)descriptor;
- (id)blitCommandEncoderWithDescriptor:(id)descriptor;
- (id)computeCommandEncoder;
- (id)computeCommandEncoderWithDispatchType:(unsigned long long)type;
- (void)encodeWaitForEvent:(id)event value:(unsigned long long)value;
- (void)encodeSignalEvent:(id)event value:(unsigned long long)value;
- (id)parallelRenderCommandEncoderWithDescriptor:(id)descriptor;
- (id)resourceStateCommandEncoder;
- (id)resourceStateCommandEncoderWithDescriptor:(id)descriptor;
- (id)accelerationStructureCommandEncoder;
- (id)accelerationStructureCommandEncoderWithDescriptor:(id)descriptor;
- (void)pushDebugGroup:(id)group;
- (void)popDebugGroup;
@end

#endif /* MTLCommandBuffer_Protocol_h */
