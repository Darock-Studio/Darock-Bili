//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLRenderCommandEncoder_Protocol_h
#define MTLRenderCommandEncoder_Protocol_h
@import Foundation;

@protocol MTLRenderCommandEncoder <MTLCommandEncoder>

@property (readonly) unsigned long long tileWidth;
@property (readonly) unsigned long long tileHeight;

/* instance methods */
- (void)setRenderPipelineState:(id)state;
- (void)setVertexBytes:(const void *)bytes length:(unsigned long long)length atIndex:(unsigned long long)index;
- (void)setVertexBuffer:(id)buffer offset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setVertexBufferOffset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setVertexBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setVertexBuffer:(id)buffer offset:(unsigned long long)offset attributeStride:(unsigned long long)stride atIndex:(unsigned long long)index;
- (void)setVertexBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets attributeStrides:(const unsigned long long *)strides withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setVertexBufferOffset:(unsigned long long)offset attributeStride:(unsigned long long)stride atIndex:(unsigned long long)index;
- (void)setVertexBytes:(const void *)bytes length:(unsigned long long)length attributeStride:(unsigned long long)stride atIndex:(unsigned long long)index;
- (void)setVertexTexture:(id)texture atIndex:(unsigned long long)index;
- (void)setVertexTextures:(const id *)textures withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setVertexSamplerState:(id)state atIndex:(unsigned long long)index;
- (void)setVertexSamplerStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setVertexSamplerState:(id)state lodMinClamp:(float)clamp lodMaxClamp:(float)clamp atIndex:(unsigned long long)index;
- (void)setVertexSamplerStates:(const id *)states lodMinClamps:(const float *)clamps lodMaxClamps:(const float *)clamps withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setVertexVisibleFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setVertexVisibleFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setVertexIntersectionFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setVertexIntersectionFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setVertexAccelerationStructure:(id)structure atBufferIndex:(unsigned long long)index;
- (void)setViewport:(struct { double x0; double x1; double x2; double x3; double x4; double x5; })viewport;
- (void)setViewports:(const struct { double x0; double x1; double x2; double x3; double x4; double x5; } *)viewports count:(unsigned long long)count;
- (void)setFrontFacingWinding:(unsigned long long)winding;
- (void)setVertexAmplificationCount:(unsigned long long)count viewMappings:(const struct { unsigned int x0; unsigned int x1; } *)mappings;
- (void)setCullMode:(unsigned long long)mode;
- (void)setDepthClipMode:(unsigned long long)mode;
- (void)setDepthBias:(float)bias slopeScale:(float)scale clamp:(float)clamp;
- (void)setScissorRect:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; })rect;
- (void)setScissorRects:(const struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; } *)rects count:(unsigned long long)count;
- (void)setTriangleFillMode:(unsigned long long)mode;
- (void)setFragmentBytes:(const void *)bytes length:(unsigned long long)length atIndex:(unsigned long long)index;
- (void)setFragmentBuffer:(id)buffer offset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setFragmentBufferOffset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setFragmentBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setFragmentTexture:(id)texture atIndex:(unsigned long long)index;
- (void)setFragmentTextures:(const id *)textures withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setFragmentSamplerState:(id)state atIndex:(unsigned long long)index;
- (void)setFragmentSamplerStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setFragmentSamplerState:(id)state lodMinClamp:(float)clamp lodMaxClamp:(float)clamp atIndex:(unsigned long long)index;
- (void)setFragmentSamplerStates:(const id *)states lodMinClamps:(const float *)clamps lodMaxClamps:(const float *)clamps withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setFragmentVisibleFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setFragmentVisibleFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setFragmentIntersectionFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setFragmentIntersectionFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setFragmentAccelerationStructure:(id)structure atBufferIndex:(unsigned long long)index;
- (void)setBlendColorRed:(float)red green:(float)green blue:(float)blue alpha:(float)alpha;
- (void)setDepthStencilState:(id)state;
- (void)setStencilReferenceValue:(unsigned int)value;
- (void)setStencilFrontReferenceValue:(unsigned int)value backReferenceValue:(unsigned int)value;
- (void)setVisibilityResultMode:(unsigned long long)mode offset:(unsigned long long)offset;
- (void)setColorStoreAction:(unsigned long long)action atIndex:(unsigned long long)index;
- (void)setDepthStoreAction:(unsigned long long)action;
- (void)setStencilStoreAction:(unsigned long long)action;
- (void)setColorStoreActionOptions:(unsigned long long)options atIndex:(unsigned long long)index;
- (void)setDepthStoreActionOptions:(unsigned long long)options;
- (void)setStencilStoreActionOptions:(unsigned long long)options;
- (void)setObjectBytes:(const void *)bytes length:(unsigned long long)length atIndex:(unsigned long long)index;
- (void)setObjectBuffer:(id)buffer offset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setObjectBufferOffset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setObjectBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setObjectTexture:(id)texture atIndex:(unsigned long long)index;
- (void)setObjectTextures:(const id *)textures withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setObjectSamplerState:(id)state atIndex:(unsigned long long)index;
- (void)setObjectSamplerStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setObjectSamplerState:(id)state lodMinClamp:(float)clamp lodMaxClamp:(float)clamp atIndex:(unsigned long long)index;
- (void)setObjectSamplerStates:(const id *)states lodMinClamps:(const float *)clamps lodMaxClamps:(const float *)clamps withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setObjectThreadgroupMemoryLength:(unsigned long long)length atIndex:(unsigned long long)index;
- (void)setMeshBytes:(const void *)bytes length:(unsigned long long)length atIndex:(unsigned long long)index;
- (void)setMeshBuffer:(id)buffer offset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setMeshBufferOffset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setMeshBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setMeshTexture:(id)texture atIndex:(unsigned long long)index;
- (void)setMeshTextures:(const id *)textures withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setMeshSamplerState:(id)state atIndex:(unsigned long long)index;
- (void)setMeshSamplerStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setMeshSamplerState:(id)state lodMinClamp:(float)clamp lodMaxClamp:(float)clamp atIndex:(unsigned long long)index;
- (void)setMeshSamplerStates:(const id *)states lodMinClamps:(const float *)clamps lodMaxClamps:(const float *)clamps withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)drawMeshThreadgroups:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroups threadsPerObjectThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup threadsPerMeshThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup;
- (void)drawMeshThreads:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threads threadsPerObjectThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup threadsPerMeshThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup;
- (void)drawMeshThreadgroupsWithIndirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset threadsPerObjectThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup threadsPerMeshThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup;
- (void)drawPrimitives:(unsigned long long)primitives vertexStart:(unsigned long long)start vertexCount:(unsigned long long)count instanceCount:(unsigned long long)count;
- (void)drawPrimitives:(unsigned long long)primitives vertexStart:(unsigned long long)start vertexCount:(unsigned long long)count;
- (void)drawIndexedPrimitives:(unsigned long long)primitives indexCount:(unsigned long long)count indexType:(unsigned long long)type indexBuffer:(id)buffer indexBufferOffset:(unsigned long long)offset instanceCount:(unsigned long long)count;
- (void)drawIndexedPrimitives:(unsigned long long)primitives indexCount:(unsigned long long)count indexType:(unsigned long long)type indexBuffer:(id)buffer indexBufferOffset:(unsigned long long)offset;
- (void)drawPrimitives:(unsigned long long)primitives vertexStart:(unsigned long long)start vertexCount:(unsigned long long)count instanceCount:(unsigned long long)count baseInstance:(unsigned long long)instance;
- (void)drawIndexedPrimitives:(unsigned long long)primitives indexCount:(unsigned long long)count indexType:(unsigned long long)type indexBuffer:(id)buffer indexBufferOffset:(unsigned long long)offset instanceCount:(unsigned long long)count baseVertex:(long long)vertex baseInstance:(unsigned long long)instance;
- (void)drawPrimitives:(unsigned long long)primitives indirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset;
- (void)drawIndexedPrimitives:(unsigned long long)primitives indexType:(unsigned long long)type indexBuffer:(id)buffer indexBufferOffset:(unsigned long long)offset indirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset;
- (void)textureBarrier;
- (void)updateFence:(id)fence afterStages:(unsigned long long)stages;
- (void)waitForFence:(id)fence beforeStages:(unsigned long long)stages;
- (void)setTessellationFactorBuffer:(id)buffer offset:(unsigned long long)offset instanceStride:(unsigned long long)stride;
- (void)setTessellationFactorScale:(float)scale;
- (void)drawPatches:(unsigned long long)patches patchStart:(unsigned long long)start patchCount:(unsigned long long)count patchIndexBuffer:(id)buffer patchIndexBufferOffset:(unsigned long long)offset instanceCount:(unsigned long long)count baseInstance:(unsigned long long)instance;
- (void)drawPatches:(unsigned long long)patches patchIndexBuffer:(id)buffer patchIndexBufferOffset:(unsigned long long)offset indirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset;
- (void)drawIndexedPatches:(unsigned long long)patches patchStart:(unsigned long long)start patchCount:(unsigned long long)count patchIndexBuffer:(id)buffer patchIndexBufferOffset:(unsigned long long)offset controlPointIndexBuffer:(id)buffer controlPointIndexBufferOffset:(unsigned long long)offset instanceCount:(unsigned long long)count baseInstance:(unsigned long long)instance;
- (void)drawIndexedPatches:(unsigned long long)patches patchIndexBuffer:(id)buffer patchIndexBufferOffset:(unsigned long long)offset controlPointIndexBuffer:(id)buffer controlPointIndexBufferOffset:(unsigned long long)offset indirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset;
- (void)setTileBytes:(const void *)bytes length:(unsigned long long)length atIndex:(unsigned long long)index;
- (void)setTileBuffer:(id)buffer offset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setTileBufferOffset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)setTileBuffers:(const id *)buffers offsets:(const unsigned long long *)offsets withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setTileTexture:(id)texture atIndex:(unsigned long long)index;
- (void)setTileTextures:(const id *)textures withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setTileSamplerState:(id)state atIndex:(unsigned long long)index;
- (void)setTileSamplerStates:(const id *)states withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setTileSamplerState:(id)state lodMinClamp:(float)clamp lodMaxClamp:(float)clamp atIndex:(unsigned long long)index;
- (void)setTileSamplerStates:(const id *)states lodMinClamps:(const float *)clamps lodMaxClamps:(const float *)clamps withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setTileVisibleFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setTileVisibleFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setTileIntersectionFunctionTable:(id)table atBufferIndex:(unsigned long long)index;
- (void)setTileIntersectionFunctionTables:(const id *)tables withBufferRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setTileAccelerationStructure:(id)structure atBufferIndex:(unsigned long long)index;
- (void)dispatchThreadsPerTile:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })tile;
- (void)setThreadgroupMemoryLength:(unsigned long long)length offset:(unsigned long long)offset atIndex:(unsigned long long)index;
- (void)useResource:(id)resource usage:(unsigned long long)usage;
- (void)useResources:(const id *)resources count:(unsigned long long)count usage:(unsigned long long)usage;
- (void)useResource:(id)resource usage:(unsigned long long)usage stages:(unsigned long long)stages;
- (void)useResources:(const id *)resources count:(unsigned long long)count usage:(unsigned long long)usage stages:(unsigned long long)stages;
- (void)useHeap:(id)heap;
- (void)useHeaps:(const id *)heaps count:(unsigned long long)count;
- (void)useHeap:(id)heap stages:(unsigned long long)stages;
- (void)useHeaps:(const id *)heaps count:(unsigned long long)count stages:(unsigned long long)stages;
- (void)executeCommandsInBuffer:(id)buffer withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)executeCommandsInBuffer:(id)buffer indirectBuffer:(id)buffer indirectBufferOffset:(unsigned long long)offset;
- (void)memoryBarrierWithScope:(unsigned long long)scope afterStages:(unsigned long long)stages beforeStages:(unsigned long long)stages;
- (void)memoryBarrierWithResources:(const id *)resources count:(unsigned long long)count afterStages:(unsigned long long)stages beforeStages:(unsigned long long)stages;
- (void)sampleCountersInBuffer:(id)buffer atSampleIndex:(unsigned long long)index withBarrier:(BOOL)barrier;
@end

#endif /* MTLRenderCommandEncoder_Protocol_h */
