//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3774.300.42.0.0
//
#ifndef MFMimePart_h
#define MFMimePart_h
@import Foundation;

#include "EFLoggable-Protocol.h"
#include "MFMimePart.h"
#include "MFPartialNetworkDataConsumer.h"
#include "MFWeakReferenceHolder.h"

@class BOOL *, ECSubject, NSArray, NSData, NSMutableDictionary, NSString, NSURL;

@interface MFMimePart : NSObject<EFLoggable> {
  /* instance variables */
  NSMutableDictionary *_bodyParameters;
  NSMutableDictionary *_otherIvars;
  struct _NSRange { unsigned long long location; unsigned long long length; } _range;
  MFWeakReferenceHolder *_parent;
  MFWeakReferenceHolder *_body;
  MFMimePart *_nextPart;
  NSURL *_partURL;
  NSURL *_parentPartURL;
  MFPartialNetworkDataConsumer *_partialDataConsumer;
  NSData *_fullData;
  MFWeakReferenceHolder *_decodedData;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _otherIvarsLock;
}

@property (copy, nonatomic) NSString *type;
@property (copy, nonatomic) NSString *subtype;
@property (copy, nonatomic) NSString *contentDescription;
@property (copy, nonatomic) NSString *contentID;
@property (copy, nonatomic) NSString *contentLocation;
@property (copy, nonatomic) NSArray *languages;
@property (copy, nonatomic) NSString *contentTransferEncoding;
@property (copy, nonatomic) NSString *disposition;
@property (readonly, nonatomic) ECSubject *wrappedSubject;
@property (readonly, nonatomic) BOOL isDecodingComplete;
@property (readonly, nonatomic) BOOL isSecurePart;
@property (readonly, nonatomic) BOOL hasSecureSubparts;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)log;
+ (void)initialize;
+ (BOOL)parseContentTypeHeader:(id)header type:(id *)type subtype:(id *)subtype info:(id *)info;
+ (BOOL)parseContentTypeHeader:(id)header type:(id *)type subtype:(id *)subtype;
+ (Class)attachmentClass;
+ (BOOL)isRecognizedClassForContent:(id)content;

/* instance methods */
- (id)decodeMultipartRelated;
- (id)decodeMultipartAlternative;
- (id)decodeMultipart;
- (id)decodeApplicationZip;
- (id)decodeApplicationOctet_stream;
- (id)_fullMimeTypeEvenInsideAppleDouble;
- (id)decodeText;
- (void)_contents:(id *)_contents toOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary asHTML:(BOOL)html isComplete:(BOOL *)complete;
- (SEL)_selectorForCString:(char *)cstring;
- (id)contentsForTextSystemToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary asHTML:(BOOL)html isComplete:(BOOL *)complete;
- (BOOL)hasContents;
- (id)contentsForTextSystemToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary asHTML:(BOOL)html;
- (id)contentsForTextSystemToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary;
- (id)contentsForTextSystemToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset;
- (id)contentsForTextSystemForcingDownload:(BOOL)download;
- (id)contentsForTextSystem;
- (id)bodyDataToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset;
- (id)bodyData;
- (void)decodeIfNecessary;
- (void)_fixupBodyParametersRFC2231Values;
- (void)_fixupDispositionParametersRFC2231Values;
- (BOOL)parseIMAPPropertyList:(id)list;
- (id)partNumber;
- (BOOL)parseMimeBody;
- (BOOL)parseMimeBodyDownloadIfNecessary:(BOOL)necessary;
- (BOOL)parseMimeBodyFromHeaderData:(id)data bodyData:(id)data isPartial:(BOOL)partial;
- (id)_objectInOtherIvarsForKey:(id)key;
- (void)_setObjectInOtherIvars:(id)ivars forKey:(id)key;
- (void)dealloc;
- (void)_clearNextAndSibling;
- (void)_clearParent;
- (id)init;
- (BOOL)hasContentType:(id)type subtype:(id)subtype;
- (id)bodyParameterForKey:(id)key;
- (void)setBodyParameter:(id)parameter forKey:(id)key;
- (id)bodyParameterKeys;
- (id)preservedHeaderValueForKey:(id)key;
- (id)dispositionParameterForKey:(id)key;
- (void)setDispositionParameter:(id)parameter forKey:(id)key;
- (id)dispositionParameterKeys;
- (id)parentPart;
- (id)firstChildPart;
- (id)nextSiblingPart;
- (id)subparts;
- (id)subpartAtIndex:(long long)index;
- (id)childPartWithNumber:(id)number;
- (void)setSubparts:(id)subparts;
- (void)addSubpart:(id)subpart;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)decodedDataForData:(id)data;
- (id)mimeBody;
- (void)setMimeBody:(id)body;
- (id)attachmentFilename;
- (unsigned int)textEncoding;
- (unsigned int)approximateRawSize;
- (BOOL)isReadableText;
- (id)_partThatIsAttachment;
- (BOOL)shouldConsiderInlineOverridingExchangeServer;
- (BOOL)isAttachment;
- (BOOL)isRich;
- (BOOL)isHTML;
- (BOOL)hasValidMultipartSignedContentType;
- (BOOL)usesKnownSignatureProtocol;
- (id)rfc822DecodedMessageBody;
- (void)_setRFC822DecodedMessageBody:(id)body;
- (void)_setWrappedSubject:(id)subject;
- (void)_setDecryptedMessageBody:(id)body isEncrypted:(BOOL)encrypted isSigned:(BOOL)signed;
- (unsigned long long)totalTextSize;
- (id)startPart;
- (long long)numberOfAlternatives;
- (id)alternativeAtIndex:(long long)index;
- (id)signedData;
- (id)textHtmlPart;
- (id)decryptedMessageBodyIsEncrypted:(BOOL *)encrypted isSigned:(BOOL *)signed;
- (void)clearCachedDescryptedMessageBody;
- (void)_setDecryptedMessageInDictionary:(id)dictionary;
- (id)fileWrapperForDecodedObject:(id)object withFileData:(id *)data;
- (void)configureFileWrapper:(id)wrapper;
- (void)download;
- (id)fileWrapperForcingDownload:(BOOL)download;
- (id)fileWrapper;
- (id)storeData:(id)data inMessage:(id)message isComplete:(BOOL)complete;
- (BOOL)_hasCompleteBodyDataToOffset:(unsigned long long)offset;
- (void)_ensureBodyDataToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary isComplete:(BOOL *)complete decoded:(id *)decoded;
- (id)copyBodyDataToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary isComplete:(BOOL *)complete;
- (id)copyBodyDataToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset;
- (id)copyBodyDataToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary;
- (id)bodyDataToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary;
- (id)bodyDataForcingDownload:(BOOL)download;
- (BOOL)_shouldContinueDecodingProcess;
- (id)contentToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary asHTML:(BOOL)html isComplete:(BOOL *)complete;
- (id)contentToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset asHTML:(BOOL)html;
- (id)contentToOffset:(unsigned long long)offset resultOffset:(unsigned long long *)offset downloadIfNecessary:(BOOL)necessary asHTML:(BOOL)html;
- (unsigned int)numberOfAttachments;
- (void)getNumberOfAttachments:(unsigned int *)attachments isSigned:(BOOL *)signed isEncrypted:(BOOL *)encrypted;
- (id)attachments;
- (id)attachmentURLs;
- (id)partURL;
- (id)chosenAlternativePart;
- (BOOL)isGenerated;
- (void)setIsGenerated:(BOOL)generated;
@end

#endif /* MFMimePart_h */
