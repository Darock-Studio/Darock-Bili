//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 200.200.0.0.0
//
#ifndef EMFEmojiPreferences_h
#define EMFEmojiPreferences_h
@import Foundation;

#include "EMFEmojiPreferenceActions-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface EMFEmojiPreferences : NSObject<EMFEmojiPreferenceActions> {
  /* instance variables */
  NSMutableDictionary *_defaults;
  BOOL _isDefaultDirty;
  NSMutableDictionary *_usageHistory;
  NSMutableArray *_recents;
  NSMutableDictionary *_typingNames;
  NSMutableDictionary *_skinToneBaseKeyPreferences;
  NSMutableDictionary *_categoryIndexes;
  long long _currentSequence;
}

@property (nonatomic) unsigned long long maximumRecentsCount;
@property (readonly, nonatomic) NSArray *allRecents;
@property (readonly, nonatomic) NSArray *recentEmojis;
@property (readonly, nonatomic) NSString *previouslyUsedCategory;
@property (readonly, nonatomic) BOOL hasDisplayedSkinToneHelp;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)defaultsDomain;
+ (id)_cacheDomain;
+ (id)_recentEmojiStrings;
+ (id)_allRecentStrings;
+ (id)_recentStringsInCharacterSet:(id)set;
+ (BOOL)deviceStateIsLocked;
+ (id)_cachedFlagCategoryEmoji:(id /* block */)emoji;

/* instance methods */
- (void)_setRecentStrings:(id)strings;
- (id)init;
- (id)recentsInCharacterSet:(id)set;
- (void)readEmojiDefaults;
- (void)_readPreferencesFromDefaults;
- (void)writeEmojiDefaults;
- (void)writeEmojiDefaultsAndNotify:(BOOL)notify;
- (void)resetEmojiDefaults;
- (void)loadDefaultsIfNecessary;
- (void)migrateFromMajorOSVersion:(long long)osversion;
- (void)_checkForDingbatDuplicates;
- (void)_pruneInvalidEmojiFromHistory;
- (void)_pruneOldestEmojiUsageFromHistory;
- (void)_cleanUpOldFlagsCaches;
- (void)migrateInRecentEmoji:(id)emoji usages:(id)usages typingNames:(id)names;
- (void)migrateInSkinTonePreferences:(id)preferences;
- (void)migrateInPreviouslyUsedCategory:(id)category;
- (void)migrateInPreviouslyUsedCategoryIndexes:(id)indexes;
- (void)migrateInDidDisplaySkinToneHelp:(BOOL)help;
- (double)scoreForSequence:(long long)sequence;
- (double)scoreForEmojiString:(id)string;
- (void)didUseEmoji:(id)emoji usageSource:(unsigned long long)source replacementContext:(id)context searchQuery:(id)query resultPosition:(id)position numberSearchQueriesRun:(id)run wasPositiveEngagement:(BOOL)engagement;
- (void)didUseEmojiInKeyboardCandidateBar:(id)bar replacementContext:(id)context;
- (void)didUseEmojiInKeyboardCandidateBar:(id)bar candidatePosition:(id)position replacementContext:(id)context;
- (void)didUseEmojiInDictation:(id)dictation replacementContext:(id)context;
- (void)didUseEmojiInHandwriting:(id)handwriting replacementContext:(id)context;
- (void)didUseEmojiInDFRBar:(id)dfrbar replacementContext:(id)context;
- (void)didUseEmojiInCharacterPickerLightweight:(id)lightweight replacementContext:(id)context;
- (void)didUseEmojiInCharacterPickerPopover:(id)popover finalQuery:(id)query resultIndex:(id)index;
- (void)didUseEmojiInCharacterPickerExtended:(id)extended finalQuery:(id)query resultIndex:(id)index;
- (void)didUseEmojiInEmojiKeyboardPalette:(id)palette wasFromRecentsSection:(BOOL)section;
- (void)didUseEmojiInEmojiKeyboardSearch:(id)search finalQuery:(id)query resultIndex:(id)index;
- (void)didUseEmoji:(id)emoji;
- (void)didUseEmoji:(id)emoji usageMode:(id)mode;
- (void)didUseEmoji:(id)emoji usageMode:(id)mode typingName:(id)name;
- (BOOL)shouldCountEmojiStringForUsageHistory:(id)history;
- (void)didViewEmojiIndex:(long long)index forCategory:(id)category;
- (void)didDisplaySkinToneHelp;
- (BOOL)hasLastUsedVariantForEmoji:(id)emoji;
- (id)recentVariantEmojiForEmoji:(id)emoji;
- (id)lastUsedVariantEmojiForEmoji:(id)emoji;
- (unsigned long long)previouslyUsedIndexInCategory:(id)category;
- (id)typingNameForEmoji:(id)emoji;
@end

#endif /* EMFEmojiPreferences_h */
