//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.3.1.0.0
//
#ifndef VSRecognitionRecognizeAction_h
#define VSRecognitionRecognizeAction_h
@import Foundation;

#include "VSRecognitionAction.h"

@class NSArray, NSString;

@interface VSRecognitionRecognizeAction : VSRecognitionAction {
  /* instance variables */
  NSString *_modelIdentifier;
  NSArray *_keywords;
  void * _recognition;
  NSArray *_results;
  NSString *_debugDumpPath;
  NSString *_audioInputPath;
  double _levelInterval;
  struct { unsigned int x :1 debugDumpEnabled; unsigned int x :2 preferredEngine; unsigned int x :1 resetEngine; unsigned int x :1 bluetoothAllowed; unsigned int x :1 hasStarted; } _recognizeFlags;
}

/* instance methods */
- (id)initWithModelIdentifier:(id)identifier;
- (void)dealloc;
- (int)completionType;
- (id)modelIdentifier;
- (BOOL)_isRecognizing;
- (BOOL)_isActivelyRecognizing;
- (BOOL)_hasDeferredStartCallback;
- (BOOL)_setBluetoothInputAllowed:(BOOL)allowed;
- (BOOL)_setInputLevelUpdateInterval:(double)interval;
- (float)_inputLevel;
- (float)_inputLevelDB;
- (id)_keywords;
- (id)_keywordAtIndex:(long long)index;
- (long long)_keywordCount;
- (BOOL)_keywordIndexChanged;
- (BOOL)_setDebugDumpEnabled:(BOOL)enabled dumpPath:(id)path;
- (BOOL)_setDebugDumpEnabled:(BOOL)enabled;
- (BOOL)_setDebugDumpPath:(id)path;
- (id)_debugDumpPath;
- (BOOL)_setPreferredEngine:(int)engine;
- (BOOL)_setAudioInputPath:(id)path;
- (BOOL)_setEngineResetRequired:(BOOL)required;
- (struct __VSRecognition *)_createRecognitionInstanceWithCallbacks:(struct { undefined * x0; undefined * x1; undefined * x2; } *)callbacks info:(void *)info;
- (void)_configureNewRecognitionInstance;
- (id)perform;
- (id)cancel;
- (void)_releaseFromPrepare;
- (void)_continueAfterDeferredStart;
- (id)_actionForEmptyResults;
- (void)_setResults:(id)results;
- (void)_reset;
- (void)_handleRecognitionPrepared:(struct __VSRecognition *)prepared;
- (void)_handleRecognitionStarted:(struct __VSRecognition *)started;
- (void)_handleRecognitionCompleted:(struct __VSRecognition *)completed withResults:(struct __CFArray *)results error:(struct __CFError *)error;
- (void)_handledThreadedResults:(id)results nextAction:(id)action;
@end

#endif /* VSRecognitionRecognizeAction_h */
