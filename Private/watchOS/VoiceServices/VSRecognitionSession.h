//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3302.3.1.0.0
//
#ifndef VSRecognitionSession_h
#define VSRecognitionSession_h
@import Foundation;

#include "VSKeepAlive.h"
#include "VSRecognitionAction.h"
#include "VSSpeechSynthesizer.h"

@class NSArray, NSString;
@protocol VSRecognitionSessionDelegate;

@interface VSRecognitionSession : NSObject {
  /* instance variables */
  NSString *_modelIdentifier;
  VSKeepAlive *_keepAlive;
  NSObject<VSRecognitionSessionDelegate> *_delegate;
  VSRecognitionAction *_currentAction;
  NSArray *_topLevelKeywords;
  id _handlingThread;
  VSSpeechSynthesizer *_synthesizer;
  NSString *_languageID;
  NSString *_debugDumpPath;
  NSString *_audioInputPath;
  double _levelInterval;
  unsigned long long _keywordPhase;
  struct { unsigned int x :1 delegateWillBegin; unsigned int x :1 delegateBegin; unsigned int x :1 delegateOpenURL; unsigned int x :1 delegateOpenURLAsync; unsigned int x :1 delegateFinishedSpeaking; unsigned int x :1 delegateComplete; unsigned int x :1 debugDumpEnabled; unsigned int x :2 preferredEngine; unsigned int x :1 performHandlerActions; unsigned int x :1 allowSensitiveActions; unsigned int x :1 bluetoothAllowed; unsigned int x :1 resetNextAction; unsigned int x :1 isSpeaking; unsigned int x :1 actionBegan; unsigned int x :1 actionBeginning; unsigned int x :1 actionBeginDeferred; unsigned int x :1 invalid; unsigned int x :1 observeKeywordChange; } _sessionFlags;
}

/* instance methods */
- (void)_init;
- (id)init;
- (id)initWithModelIdentifier:(id)identifier;
- (void)dealloc;
- (void)setDelegate:(id)delegate;
- (id)beginNextAction;
- (id)reset;
- (BOOL)isRecognizing;
- (BOOL)isActivelyRecognizing;
- (BOOL)isFinished;
- (BOOL)isValid;
- (BOOL)hasDeferredAction;
- (BOOL)isBusy;
- (BOOL)nextActionWillTerminateSession;
- (BOOL)nextActionWillRecognize;
- (void)setSensitiveActionsEnabled:(BOOL)enabled;
- (BOOL)sensitiveActionsEnabled;
- (BOOL)setBluetoothInputAllowed:(BOOL)allowed;
- (id)cancelMaintainingKeepAlive:(BOOL)alive;
- (id)cancel;
- (void)_actionCompleted:(id)completed nextAction:(id)action error:(id)error;
- (BOOL)_actionStarted:(id)started;
- (void)_notifyDelegateActionStarted;
- (void)_notifyDelegateOpenURL:(id)url completion:(id /* block */)completion;
- (void)_setAction:(id)action;
- (id)_currentRecognizeAction;
- (id)_recognitionResultHandlingThread;
- (void)recognitionResultHandlingThread:(id)thread didHandleResults:(id)results nextAction:(id)action;
- (id)spokenFeedbackString;
- (id)spokenFeedbackAttributedString;
- (id)displayResultString;
- (id)displayStatusString;
- (void)setInputLevelUpdateInterval:(double)interval;
- (float)inputLevel;
- (float)inputLevelDB;
- (void)setKeywordPhase:(unsigned long long)phase;
- (id)keywordAtIndex:(long long)index;
- (long long)keywordCount;
- (struct __CFDictionary *)_createKeywordIndex;
- (id)_createPhaseSortedKeywordsFromArray:(id)array;
- (id)_topLevelKeywords;
- (id)_keywordsForModelIdentifier:(id)identifier;
- (void)_keywordIndexChanged;
- (id)beginSpeakingFeedbackString;
- (id)beginSpeakingString:(id)string;
- (id)_beginSpeakingAttributedString:(id)string;
- (id)_beginSpeakingString:(id)string attributedString:(id)string;
- (void)_notifyDelegateFinishedSpeakingWithError:(id)error;
- (void)speechSynthesizer:(id)synthesizer didFinishSpeakingRequest:(id)request successfully:(BOOL)successfully phonemesSpoken:(id)spoken withError:(id)error;
- (BOOL)setDebugDumpEnabled:(BOOL)enabled;
- (id)debugDumpPath;
- (BOOL)setNextRecognitionAudioInputPath:(id)path;
- (BOOL)setNextRecognitionRequiresReset:(BOOL)reset;
- (BOOL)setPreferredEngine:(int)engine;
- (void)setPerformRecognitionHandlerActions:(BOOL)actions;
@end

#endif /* VSRecognitionSession_h */
