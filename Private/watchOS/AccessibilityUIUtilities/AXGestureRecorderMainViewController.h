//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3093.2.4.4.10
//
#ifndef AXGestureRecorderMainViewController_h
#define AXGestureRecorderMainViewController_h
@import Foundation;

#include "PSViewController.h"
#include "AXGestureRecorderControlsView.h"
#include "AXGestureRecorderControlsViewDelegate-Protocol.h"
#include "AXGestureRecorderStyleProvider.h"
#include "AXGestureRecorderViewController.h"
#include "AXGestureRecorderViewControllerDelegate-Protocol.h"
#include "UITextFieldDelegate-Protocol.h"

@class AXAssertion, NSString, UIBarButtonItem, UILabel, UIView;
@protocol AXGestureRecorderMainViewControllerDelegate;

@interface AXGestureRecorderMainViewController : PSViewController<AXGestureRecorderViewControllerDelegate, AXGestureRecorderControlsViewDelegate, UITextFieldDelegate>

@property (retain, nonatomic) AXGestureRecorderStyleProvider *styleProvider;
@property (retain, nonatomic) AXGestureRecorderViewController *gestureRecorderViewController;
@property (retain, nonatomic) AXGestureRecorderControlsView *controlsView;
@property (retain, nonatomic) UIView *topView;
@property (retain, nonatomic) UIView *lineView;
@property (retain, nonatomic) UILabel *instructionsLabel;
@property (retain, nonatomic) UIBarButtonItem *saveButton;
@property (nonatomic) unsigned long long leftButtonIdentifier;
@property (nonatomic) unsigned long long rightButtonIdentifier;
@property (nonatomic) double gestureRecordingDidStartTimeInterval;
@property (nonatomic) BOOL inReplayMode;
@property (retain, nonatomic) AXAssertion *disableSystemGesturesAssertion;
@property (weak, nonatomic) id appDidResignActiveNotificationHandlerToken;
@property (nonatomic) long long recorderType;
@property (nonatomic) BOOL isDisplayLinkInEffect;
@property (weak, nonatomic) NSObject<AXGestureRecorderMainViewControllerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_shouldForwardViewWillTransitionToSize;

/* instance methods */
- (void)_commonInit;
- (id)init;
- (id)initWithType:(long long)type;
- (void)dealloc;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidDisappear:(BOOL)disappear;
- (BOOL)_ignoreAppSupportedOrientations;
- (void)viewDidLayoutSubviews;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (void)_saveButtonTapped:(id)tapped;
- (void)_cancelButtonTapped:(id)tapped;
- (void)_unhideChrome;
- (void)_hideChrome;
- (void)_hideChromeButtonTapped:(id)tapped;
- (void)_setLeftButtonIdentifier:(unsigned long long)identifier enabled:(BOOL)enabled rightButtonIdentifier:(unsigned long long)identifier enabled:(BOOL)enabled animate:(BOOL)animate completion:(id /* block */)completion;
- (void)_getButtonPropertiesForIdentifier:(unsigned long long)identifier enabled:(BOOL)enabled color:(int *)color title:(id *)title;
- (void)_updateProgressView:(id)view;
- (void)_clearProgressView;
- (void)_enterWaitingMode;
- (void)_enterReplayMode;
- (void)_releaseOutlets;
- (void)_reset;
- (void)_hide;
- (void)_saveWithMessage:(id)message;
- (BOOL)_canSaveGestureWithName:(id)name;
- (void)_didSaveGestureWithName:(id)name;
- (void)_saveReplayableGesture;
- (void)_savePoint:(struct CGPoint { double x0; double x1; })point;
- (id)_defaultInstructionalText;
- (BOOL)_isForRealTimeGesture;
- (void)_manageDisplayLinkManager:(BOOL)manager;
- (double)maximumDurationOfRecordedGestureForGestureRecorderViewController:(id)controller;
- (void)gestureRecorderViewController:(id)controller didStartRecordingAtomicFingerPathAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)gestureRecorderViewControllerDidStopRecordingAtomicFingerPath:(id)path;
- (void)gestureRecorderViewControllerDidFinishReplayingRecordedGesture:(id)gesture;
- (BOOL)isChromeVisibleForGestureRecorderViewController:(id)controller;
- (void)gestureRecorderViewController:(id)controller setChromeVisible:(BOOL)visible;
- (void)gestureRecorderControlsView:(id)view buttonTappedAtIndex:(unsigned long long)index;
- (BOOL)isInReplayMode;
@end

#endif /* AXGestureRecorderMainViewController_h */
