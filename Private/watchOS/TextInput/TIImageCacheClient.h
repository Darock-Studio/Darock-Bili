//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3431.206.0.0.0
//
#ifndef TIImageCacheClient_h
#define TIImageCacheClient_h
@import Foundation;

@class NSCache, NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface TIImageCacheClient : NSObject {
  /* instance variables */
  NSString *_path;
  NSString *_imagePath;
  BOOL _hasLocalAccess;
  int _remoteQueryCount;
  BOOL _shouldIdleWhenDone;
  NSCache *_cache;
  NSString *_versionPath;
  NSObject<OS_dispatch_queue> *_serialQueueRemoveImagesBackground;
  NSObject<OS_dispatch_queue> *_serialQueueRemoveImagesDefault;
  NSObject<OS_dispatch_queue> *_requestQueue;
  NSXPCConnection *_connection;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *storeImageQueue;
@property (readonly, nonatomic) int cacheVersion;
@property (nonatomic) BOOL lockOnRead;
@property (nonatomic) unsigned long long cacheItemLimit;

/* instance methods */
- (id)initWithLocalAccess:(BOOL)access;
- (void)dealloc;
- (void *)openAndMmap:(id)mmap withInfo:(struct _img { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned char x4; unsigned char x5[4] } *)info;
- (BOOL)imageExistsForKey:(id)key inGroup:(id)group;
- (struct CGImage *)copyImageForKey:(id)key inGroup:(id)group;
- (void)_localStoreImageForKey:(id)key inGroup:(id)group withItem:(id)item;
- (void)_remoteStoreImageForKey:(id)key inGroup:(id)group withItem:(id)item;
- (struct _img { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned char x4; unsigned char x5[4] })_imgForItem:(id)item;
- (void)storeImageDataForKey:(id)key inGroup:(id)group item:(id)item;
- (void)_createConnectionIfNecessary;
- (void)setIdleWhenDone;
- (void)idleAfter:(double)after;
- (void)_idleIfNecessary:(BOOL)necessary;
- (void)removeImagesInGroups:(id)groups completion:(id /* block */)completion;
- (id)imagePath;
- (unsigned long long)imageCount;
- (void)purge;
- (void)purgeMemoryCache;
- (id)_versionPath;
- (int)_cacheVersion;
- (void)_setCacheVersion:(int)version;
@end

#endif /* TIImageCacheClient_h */
