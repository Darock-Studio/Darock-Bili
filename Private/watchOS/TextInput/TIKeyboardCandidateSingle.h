//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3431.206.0.0.0
//
#ifndef TIKeyboardCandidateSingle_h
#define TIKeyboardCandidateSingle_h
@import Foundation;

#include "TIKeyboardCandidate.h"

@class NSNumber, NSString, NSUUID;

@interface TIKeyboardCandidateSingle : TIKeyboardCandidate {
  /* instance variables */
  unsigned int _sourceMask;
}

@property (copy, nonatomic) NSString *candidate;
@property (copy, nonatomic) NSString *input;
@property (copy, nonatomic) NSString *rawInput;
@property (nonatomic) long long cursorMovement;
@property (copy, nonatomic) NSString *applicationKey;
@property (copy, nonatomic) NSString *applicationBundleId;
@property (copy, nonatomic) NSString *altDSID;
@property (copy, nonatomic) NSUUID *stickerIdentifier;
@property (nonatomic) unsigned long long learningFlagsMask;
@property (copy, nonatomic) NSNumber *learningFlags;
@property (nonatomic) BOOL extensionCandidate;
@property (copy, nonatomic) NSString *lexiconLocale;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)candidateWithCandidate:(id)candidate forInput:(id)input extensionCandidate:(BOOL)candidate;
+ (id)candidateWithCandidate:(id)candidate forInput:(id)input;
+ (id)candidateWithCandidate:(id)candidate forInput:(id)input customInfoType:(unsigned long long)type;
+ (id)candidateWithCandidate:(id)candidate forInput:(id)input cursorMovement:(long long)movement;
+ (id)candidateWithUnchangedInput:(id)input;
+ (id)candidateWithUnchangedInput:(id)input learningFlagsMask:(unsigned long long)mask;
+ (id)secureCandidateForInput:(id)input slotID:(unsigned int)id;
+ (id)secureCandidateForInput:(id)input slotID:(unsigned int)id customInfoType:(unsigned long long)type;
+ (id)secureCandidateForInput:(id)input slotID:(unsigned int)id customInfoType:(unsigned long long)type applicationKey:(id)key applicationBundleId:(id)id altDSID:(id)dsid;
+ (id)secureCandidateWithCandidate:(id)candidate forInput:(id)input slotID:(unsigned int)id customInfoType:(unsigned long long)type stickerIdentifier:(id)identifier;
+ (int)type;

/* instance methods */
- (id)initWithCandidate:(id)candidate;
- (id)initWithCandidate:(id)candidate forInput:(id)input;
- (id)initWithCandidate:(id)candidate forInput:(id)input rawInput:(id)input;
- (id)initWithCandidate:(id)candidate forInput:(id)input rawInput:(id)input sourceMask:(unsigned int)mask;
- (id)initWithCandidate:(id)candidate forInput:(id)input rawInput:(id)input learningFlagsMask:(unsigned long long)mask;
- (id)initWithCandidate:(id)candidate forInput:(id)input rawInput:(id)input sourceMask:(unsigned int)mask learningFlagsMask:(unsigned long long)mask;
- (id)initWithCandidate:(id)candidate forInput:(id)input rawInput:(id)input extensionCandidate:(BOOL)candidate sourceMask:(unsigned int)mask learningFlagsMask:(unsigned long long)mask;
- (id)initWithCandidate:(id)candidate forInput:(id)input rawInput:(id)input extensionCandidate:(BOOL)candidate;
- (id)initWithUnchangedInput:(id)input;
- (id)initWithUnchangedInput:(id)input learningFlagsMask:(unsigned long long)mask;
- (id)initWithResponseCandidate:(id)candidate;
- (BOOL)isAutocorrectionIgnoringCaseAndSupplementalItemPrefix;
- (BOOL)isAutocorrectionIgnoringCaseAndDiacriticsAndSupplementalItemPrefix;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)description;
- (id)debugDescription;
- (id)candidateByReplacingWithCandidate:(id)candidate;
- (id)candidateByReplacingWithCandidate:(id)candidate input:(id)input;
- (id)candidateByReplacingWithCandidate:(id)candidate input:(id)input rawInput:(id)input;
- (id)candidateByReplacingWithSourceMask:(unsigned int)mask;
- (BOOL)isHideMyEmailType;
- (BOOL)isStickerCandidate;
- (id)initWithCandidateResultSetCoder:(id)coder;
- (void)encodeWithCandidateResultSetCoder:(id)coder;
- (BOOL)isExtensionCandidate;
- (unsigned int)sourceMask;
- (void)setSourceMask:(unsigned int)mask;
@end

#endif /* TIKeyboardCandidateSingle_h */
