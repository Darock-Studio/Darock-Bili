//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPHomeKitMotionAnalyzer_h
#define VCPHomeKitMotionAnalyzer_h
@import Foundation;

#include "VCPVideoAnalyzer.h"

@class NSMutableArray;
@protocol {Scaler="pool_"{CF<__CVPixelBufferPool *>="value_"^{__CVPixelBufferPool}}"width_"i"height_"i"format_"I"transfer_session_"{CF<OpaqueVTPixelTransferSession *>="value_"^{OpaqueVTPixelTransferSession}}}, {vector<__CVBuffer *, std::allocator<__CVBuffer *>>="__begin_"^^{__CVBuffer}"__end_"^^{__CVBuffer}"__end_cap_"{__compressed_pair<__CVBuffer **, std::allocator<__CVBuffer *>>="__value_"^^{__CVBuffer}}};

@interface VCPHomeKitMotionAnalyzer : VCPVideoAnalyzer {
  /* instance variables */
  NSMutableArray *_regions;
  float * _diff;
  float * _ptrFirst;
  float * _ptrLast;
  struct Scaler { struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } pool_; int width_; int height_; unsigned int format_; struct CF<OpaqueVTPixelTransferSession *> { struct OpaqueVTPixelTransferSession *value_; } transfer_session_; } _scaler;
  struct vector<__CVBuffer *, std::allocator<__CVBuffer *>> { struct __CVBuffer * *__begin_; struct __CVBuffer * *__end_; struct __compressed_pair<__CVBuffer **, std::allocator<__CVBuffer *>> { struct __CVBuffer * *__value_; } __end_cap_; } _frameArray;
  int _frameWidth;
  int _frameHeight;
  int _width;
  int _height;
  int _stride;
  int _blockSize;
  int _widthBlockNum;
  int _heightBlockNum;
}

@property (readonly) float actionScore;

/* instance methods */
- (id)init;
- (void)dealloc;
- (int)setPixelBuffer:(struct __CVBuffer *)buffer;
- (int)calculateFrameDifference:(struct __CVBuffer *)difference;
- (int)computeRegionsofInterest;
- (int)analyzeFrame:(struct __CVBuffer *)frame withTimestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp andDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration flags:(unsigned long long *)flags;
- (id)regionsOfInterest;
@end

#endif /* VCPHomeKitMotionAnalyzer_h */
