//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef MADVideoSafetyClassifier_h
#define MADVideoSafetyClassifier_h
@import Foundation;

#include "VCPVideoAnalyzer.h"

@class NSDictionary, NSMutableArray, SCMLHandler, SCMLVideoAnalyzer;

@interface MADVideoSafetyClassifier : VCPVideoAnalyzer {
  /* instance variables */
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _timeLastProcess;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _start;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _end;
  float _processTimeInterval;
  short _sensitivity;
  NSMutableArray *_results;
  NSDictionary *_scoresForLabels;
  SCMLHandler *_handler;
  SCMLVideoAnalyzer *_videoAnalyzer;
}

/* class methods */
+ (id)analyzeVideoAssetOnDemandWithURL:(id)url localIdentifier:(id)identifier timeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range cancelBlock:(id /* block */)block andProgressHandler:(id /* block */)handler;

/* instance methods */
- (id)init;
- (void)configureProcessTimeIntervalFrom:(struct { long long x0; int x1; unsigned int x2; long long x3; })from;
- (int)configureAndStartVideoAnalyzer;
- (void)addAnalysisResults;
- (int)analyzeFrameWithSampleBuffer:(struct opaqueCMSampleBuffer *)buffer timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration andFlags:(unsigned long long *)flags;
- (int)analyzeFrame:(struct __CVBuffer *)frame withTimestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp andDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration flags:(unsigned long long *)flags;
- (int)finishAnalysisPass:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })pass;
- (id)results;
@end

#endif /* MADVideoSafetyClassifier_h */
