//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPMADMLScalingTask_h
#define VCPMADMLScalingTask_h
@import Foundation;

#include "VCPMADServiceImageAsset.h"
#include "VCPMADServiceImageProcessingSubtaskProtocol-Protocol.h"
#include "VCPMADTaskProtocol-Protocol.h"

@class MADMLScalingRequest, NSString;
@protocol {CF<OpaqueVTPixelTransferSession *>="value_"^{OpaqueVTPixelTransferSession}}, {CF<__CVPixelBufferPool *>="value_"^{__CVPixelBufferPool}}, {atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}};

@interface VCPMADMLScalingTask : NSObject<VCPMADServiceImageProcessingSubtaskProtocol, VCPMADTaskProtocol> {
  /* instance variables */
  MADMLScalingRequest *_request;
  VCPMADServiceImageAsset *_imageAsset;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _canceled;
  NSString *_signpostPayload;
  struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } _pixelBufferPool;
  struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } _outputPixelBufferPool;
  struct CF<OpaqueVTPixelTransferSession *> { struct OpaqueVTPixelTransferSession *value_; } _transferSession;
}

/* class methods */
+ (id)taskWithRequest:(id)request imageAsset:(id)asset andSignpostPayload:(id)payload;
+ (id)dependencies;

/* instance methods */
- (id)initWithRequest:(id)request imageAsset:(id)asset andSignpostPayload:(id)payload;
- (float)resourceRequirement;
- (BOOL)autoCancellable;
- (void)cancel;
- (int)convertPixelFormat:(struct __CVBuffer * *)format;
- (int)run;
@end

#endif /* VCPMADMLScalingTask_h */
