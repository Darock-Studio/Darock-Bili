//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPImageBlurAnalyzer_h
#define VCPImageBlurAnalyzer_h
@import Foundation;

#include "VCPBlurAnalyzer.h"
#include "VCPCNNBlurAnalyzer.h"
#include "VCPCNNData.h"
#include "VCPCNNModel.h"

@class NSArray;
@protocol {Scaler="pool_"{CF<__CVPixelBufferPool *>="value_"^{__CVPixelBufferPool}}"width_"i"height_"i"format_"I"transfer_session_"{CF<OpaqueVTPixelTransferSession *>="value_"^{OpaqueVTPixelTransferSession}}};

@interface VCPImageBlurAnalyzer : VCPBlurAnalyzer {
  /* instance variables */
  float _sharpnessBlocks[16];
  NSArray *_faces;
  NSArray *_framePTSResults;
  NSArray *_homographyResults;
  VCPCNNModel *_faceModel;
  VCPCNNData *_faceInput;
  float _livePhotoStillDisplayTime;
  float _imageExposureTime;
  BOOL _useGPU;
  BOOL _sdof;
  float _contrast;
  VCPCNNBlurAnalyzer *_blurAnalyzer;
  struct Scaler { struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } pool_; int width_; int height_; unsigned int format_; struct CF<OpaqueVTPixelTransferSession *> { struct OpaqueVTPixelTransferSession *value_; } transfer_session_; } _scaler;
}

@property (readonly) float sharpness;
@property (readonly) float textureScore;

/* instance methods */
- (id)initWithFaceResults:(id)results sdof:(BOOL)sdof revision:(unsigned long long)revision;
- (id)initWithFaceResults:(id)results sdof:(BOOL)sdof;
- (void)setGyroSharpnessParam:(id)param homographyResults:(id)results livePhotoStillDisplayTime:(float)time imageExposureTime:(float)time;
- (void)setFaceResults:(id)results;
- (int)computeSharpnessScore:(float *)score forFacesInImage:(struct __CVBuffer *)image;
- (void)spatialPooling;
- (int)computeLocalSharpness:(struct __CVBuffer *)sharpness;
- (int)computeGyroSharpness:(float *)sharpness;
- (float)estimateDistance:(id)distance prevHomography:(id)homography;
- (int)analyzePixelBuffer:(struct __CVBuffer *)buffer flags:(unsigned long long *)flags results:(id *)results cancel:(id /* block */)cancel;
- (int)analyzePixelBuffer:(struct __CVBuffer *)buffer flags:(unsigned long long *)flags withPreAnalysisScore:(float)score results:(id *)results cancel:(id /* block */)cancel;
@end

#endif /* VCPImageBlurAnalyzer_h */
