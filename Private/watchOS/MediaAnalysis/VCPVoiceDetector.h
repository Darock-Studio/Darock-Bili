//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPVoiceDetector_h
#define VCPVoiceDetector_h
@import Foundation;

@class NSDictionary, NSMutableArray;

@interface VCPVoiceDetector : NSObject {
  /* instance variables */
  NSDictionary *_model;
  struct AudioStreamBasicDescription { double mSampleRate; unsigned int mFormatID; unsigned int mFormatFlags; unsigned int mBytesPerPacket; unsigned int mFramesPerPacket; unsigned int mBytesPerFrame; unsigned int mChannelsPerFrame; unsigned int mBitsPerChannel; unsigned int mReserved; } _audioStream;
  int _sampleBatchSize;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _trackStart;
  BOOL _voiceActivity;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _voiceStart;
  NSMutableArray *_utteranceDetections;
  NSMutableArray *_musicDetections;
}

@property (retain) NSMutableArray *voiceDetections;

/* class methods */
+ (id)detector;

/* instance methods */
- (id)init;
- (id)audioFormatRequirements;
- (void)addDetectionFromTime:(const struct { long long x0; int x1; unsigned int x2; long long x3; } *)time toTime:(const struct { long long x0; int x1; unsigned int x2; long long x3; } *)time result:(id)result;
- (int)setupWithSample:(struct opaqueCMSampleBuffer *)sample andSampleBatchSize:(int)size;
- (int)loadModel;
- (int)setupWithAudioStream:(const struct AudioStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; } *)stream;
- (int)processAudioSamples:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x10; unsigned int x1; void * x2; } x[1] } *)samples timestamp:(struct AudioTimeStamp { double x0; unsigned long long x1; double x2; unsigned long long x3; struct SMPTETime { short x0; short x1; unsigned int x2; unsigned int x3; unsigned int x4; short x5; short x6; short x7; short x8; } x4; unsigned int x5; unsigned int x6; })timestamp;
- (int)finalizeAnalysisAtTime:(const struct { long long x0; int x1; unsigned int x2; long long x3; } *)time;
- (id)results;
@end

#endif /* VCPVoiceDetector_h */
