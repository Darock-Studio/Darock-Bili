//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPImageHumanPoseAnalyzer_h
#define VCPImageHumanPoseAnalyzer_h
@import Foundation;

#include "VCPImageAnalyzer.h"
#include "VCPCNNModelEspresso.h"

@class NSMutableArray, NSString, NSURL;
@protocol {Scaler="pool_"{CF<__CVPixelBufferPool *>="value_"^{__CVPixelBufferPool}}"width_"i"height_"i"format_"I"transfer_session_"{CF<OpaqueVTPixelTransferSession *>="value_"^{OpaqueVTPixelTransferSession}}};

@interface VCPImageHumanPoseAnalyzer : VCPImageAnalyzer {
  /* instance variables */
  VCPCNNModelEspresso *_modelEspresso;
  NSURL *_netFileUrl;
  float * _inputData;
  NSString *_resConfig;
  NSMutableArray *_persons;
  NSMutableArray *_results;
  BOOL _saveKeypoints;
  int _inputWidth;
  int _inputHeight;
  float * _heatmapNms;
  BOOL _forceCPU;
  BOOL _sharedModel;
  BOOL _flushModel;
  struct Scaler { struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } pool_; int width_; int height_; unsigned int format_; struct CF<OpaqueVTPixelTransferSession *> { struct OpaqueVTPixelTransferSession *value_; } transfer_session_; } _scaler;
}

@property BOOL trackingMode;

/* class methods */
+ (BOOL)saveKeypoints;
+ (id)sharedModel:(id)model;

/* instance methods */
- (id)init;
- (id)initWithKeypointsOption:(BOOL)option aspectRatio:(id)ratio lightweight:(BOOL)lightweight forceCPU:(BOOL)cpu sharedModel:(BOOL)model flushModel:(BOOL)model;
- (int)reInitModel;
- (void)dealloc;
- (int)configForAspectRatio:(id)ratio;
- (int)updateModelForAspectRatio:(id)ratio;
- (int)preferredInputFormat:(int *)format height:(int *)height format:(unsigned int *)format;
- (int)parsePersons:(float)persons width:(int)width height:(int)height;
- (int)processPersons:(float)persons width:(int)width height:(int)height;
- (int)generateHumanPose:(struct __CVBuffer *)pose;
- (int)copyImage:(struct __CVBuffer *)image toData:(float *)data withChannels:(int)channels;
- (int)createModelWithHeight:(int)height srcWidth:(int)width;
- (int)createInput:(float *)input withBuffer:(struct __CVBuffer *)buffer modelInputHeight:(int)height modelInputWidth:(int)width;
- (int)analyzePixelBuffer:(struct __CVBuffer *)buffer flags:(unsigned long long *)flags results:(id *)results cancel:(id /* block */)cancel;
@end

#endif /* VCPImageHumanPoseAnalyzer_h */
