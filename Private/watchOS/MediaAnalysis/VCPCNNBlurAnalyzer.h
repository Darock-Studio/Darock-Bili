//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPCNNBlurAnalyzer_h
#define VCPCNNBlurAnalyzer_h
@import Foundation;

#include "VCPImageAnalyzer.h"

@protocol {Scaler="pool_"{CF<__CVPixelBufferPool *>="value_"^{__CVPixelBufferPool}}"width_"i"height_"i"format_"I"transfer_session_"{CF<OpaqueVTPixelTransferSession *>="value_"^{OpaqueVTPixelTransferSession}}};

@interface VCPCNNBlurAnalyzer : VCPImageAnalyzer {
  /* instance variables */
  unsigned long long _revision;
  struct Scaler { struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } pool_; int width_; int height_; unsigned int format_; struct CF<OpaqueVTPixelTransferSession *> { struct OpaqueVTPixelTransferSession *value_; } transfer_session_; } _scaler;
}

@property BOOL sdof;

/* class methods */
+ (id)analyzerWithRevision:(unsigned long long)revision;
+ (id)analyzer;

/* instance methods */
- (id)initWithRevision:(unsigned long long)revision;
- (id)init;
- (unsigned long long)getRevision;
- (int)prepareModelForSourceWidth:(int)width andSourceHeight:(int)height;
- (float *)getInputBuffer:(int)buffer srcWidth:(int)width cnnInputHeight:(int *)height cnnInputWidth:(int *)width;
- (int)computeSharpnessScore:(float *)score textureness:(char *)textureness contrast:(float)contrast imgWidth:(int)width cancel:(id /* block */)cancel;
- (void)copyBufferFrom:(char *)from fromStride:(long long)stride toPtr:(float *)ptr toStride:(long long)stride toWidth:(int)width toHeight:(int)height;
- (int)scaleRegion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)region ofImage:(struct __CVBuffer *)image toData:(float *)data withWidth:(int)width andHeight:(int)height;
- (float)calculateScoreFromNetworkOutput:(float *)output outChannel:(int)channel outHeight:(int)height outWidth:(int)width textureness:(char *)textureness contrast:(float)contrast imgWidth:(int)width;
- (int)computeCNNBasedSharpness:(struct __CVBuffer *)sharpness sharpnessScore:(float *)score textureScore:(float *)score contrast:(float)contrast cancel:(id /* block */)cancel;
@end

#endif /* VCPCNNBlurAnalyzer_h */
