//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPMoFlowSingleEspresso_h
#define VCPMoFlowSingleEspresso_h
@import Foundation;

#include "VCPImageMotionFlowAnalyzer.h"
#include "VCPCNNModelEspresso.h"

@class NSArray, NSString, NSURL;
@protocol {Scaler="pool_"{CF<__CVPixelBufferPool *>="value_"^{__CVPixelBufferPool}}"width_"i"height_"i"format_"I"transfer_session_"{CF<OpaqueVTPixelTransferSession *>="value_"^{OpaqueVTPixelTransferSession}}}, {vector<float *, std::allocator<float *>>="__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}};

@interface VCPMoFlowSingleEspresso : VCPImageMotionFlowAnalyzer {
  /* instance variables */
  VCPCNNModelEspresso *_modelEspresso;
  NSURL *_netFileUrl;
  NSArray *_inputNames;
  struct vector<float *, std::allocator<float *>> { float * *__begin_; float * *__end_; struct __compressed_pair<float **, std::allocator<float *>> { float * *__value_; } __end_cap_; } _inputsData;
  NSString *_resConfig;
  float * _flow;
  BOOL _forceCPU;
  BOOL _sharedModel;
  BOOL _flushModel;
  struct Scaler { struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } pool_; int width_; int height_; unsigned int format_; struct CF<OpaqueVTPixelTransferSession *> { struct OpaqueVTPixelTransferSession *value_; } transfer_session_; } _scaler;
}

/* class methods */
+ (id)sharedModel:(id)model inputNames:(id)names;

/* instance methods */
- (int)prepareWithLightweightOption:(BOOL)option aspectRatio:(id)ratio forceCPU:(BOOL)cpu sharedModel:(BOOL)model flushModel:(BOOL)model;
- (int)prepareModel;
- (int)reInitModel;
- (void)dealloc;
- (int)configForAspectRatio:(id)ratio;
- (int)copyImage:(struct __CVBuffer *)image toData:(float *)data withChannels:(int)channels;
- (int)createInput:(float *)input withBuffer:(struct __CVBuffer *)buffer cnnInputHeight:(int)height cnnInputWidth:(int)width;
- (int)analyzeImages:(struct __CVBuffer *)images secondImage:(struct __CVBuffer *)image cancel:(id /* block */)cancel;
- (float *)getFlowWithHeight:(int *)height andWidth:(int *)width;
- (int)getFlowToBuffer:(struct __CVBuffer *)buffer;
- (int)flowScalingTo:(struct __CVBuffer *)to scalerX:(float)x scalerY:(float)y;
- (int)flowScalingTo:(struct __CVBuffer *)to flowBufferY:(struct __CVBuffer *)y scalerX:(float)x scalerY:(float)y;
- (int)updateModelForAspectRatio:(id)ratio computationAccuracy:(unsigned int)accuracy;
@end

#endif /* VCPMoFlowSingleEspresso_h */
