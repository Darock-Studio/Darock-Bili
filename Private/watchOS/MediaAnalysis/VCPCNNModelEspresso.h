//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPCNNModelEspresso_h
#define VCPCNNModelEspresso_h
@import Foundation;

#include "VCPCNNEspressoContext.h"

@class NSArray, NSString, NSURL;
@protocol struct vector<espresso_buffer_t, std::allocator<espresso_buffer_t>> { struct  * x0; struct  * x1; struct __compressed_pair<espresso_buffer_t *, std::allocator<espresso_buffer_t>> { struct  * x0; } x2; }, {vector<espresso_buffer_t, std::allocator<espresso_buffer_t>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<espresso_buffer_t *, std::allocator<espresso_buffer_t>>="__value_"^{?}}};

@interface VCPCNNModelEspresso : NSObject {
  /* instance variables */
  struct { void *plan; int network_index; } _net;
  void * _plan;
  NSURL *_netFileUrl;
  NSArray *_inputNames;
  NSArray *_outputNames;
  VCPCNNEspressoContext *_context;
}

@property (nonatomic) struct vector<espresso_buffer_t, std::allocator<espresso_buffer_t>> { struct  * x0; struct  * x1; struct __compressed_pair<espresso_buffer_t *, std::allocator<espresso_buffer_t>> { struct  * x0; } x2; } inputBlobs;
@property (nonatomic) struct vector<espresso_buffer_t, std::allocator<espresso_buffer_t>> { struct  * x0; struct  * x1; struct __compressed_pair<espresso_buffer_t *, std::allocator<espresso_buffer_t>> { struct  * x0; } x2; } outputBlobs;
@property (nonatomic) struct { void * x0; void * x1; unsigned long long x2[4] unsigned long long x3[4] unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } inputBlob;
@property (nonatomic) struct { void * x0; void * x1; unsigned long long x2[4] unsigned long long x3[4] unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; int x14; } outputBlob;
@property (readonly, nonatomic) NSString *resConfig;

/* instance methods */
- (id)initWithParameters:(id)parameters inputNames:(id)names outputNames:(id)names properties:(id)properties;
- (int)prepareModelWithConfig:(id)config;
- (int)prepareModelInput:(float *)input;
- (int)prepareModelInputs:(struct vector<float *, std::allocator<float *>> { float * * x0; float * * x1; struct __compressed_pair<float **, std::allocator<float *>> { float * * x0; } x2; })inputs;
- (int)espressoForward:(float *)forward;
- (int)espressoForwardInputs:(struct vector<float *, std::allocator<float *>> { float * * x0; float * * x1; struct __compressed_pair<float **, std::allocator<float *>> { float * * x0; } x2; })inputs;
- (void)normalization:(float *)normalization;
- (int)softmax;
- (void *)getEspressoContext;
- (int)getPlanPhase;
- (void)dealloc;
@end

#endif /* VCPCNNModelEspresso_h */
