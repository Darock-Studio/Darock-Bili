//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef MADHEICSAlphaSequenceTranscoder_h
#define MADHEICSAlphaSequenceTranscoder_h
@import Foundation;

@class NSArray, NSData;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, {CF<CMPhotoCompressionSession *>="value_"^{CMPhotoCompressionSession}}, {CF<CMPhotoDecompressionContainer *>="value_"^{CMPhotoDecompressionContainer}}, {CF<CMPhotoDecompressionSession *>="value_"^{CMPhotoDecompressionSession}};

@interface MADHEICSAlphaSequenceTranscoder : NSObject {
  /* instance variables */
  NSData *_sequenceData;
  unsigned long long _maxDimension;
  double _qualityValue;
  struct CF<CMPhotoDecompressionSession *> { struct CMPhotoDecompressionSession *value_; } _source;
  struct CF<CMPhotoDecompressionContainer *> { struct CMPhotoDecompressionContainer *value_; } _sourceContainer;
  struct CF<CMPhotoDecompressionContainer *> { struct CMPhotoDecompressionContainer *value_; } _sequenceContainer;
  long long _frameCount;
  struct CF<CMPhotoCompressionSession *> { struct CMPhotoCompressionSession *value_; } _compressionSession;
  long long _sequenceIndex;
  NSArray *_frameProperties;
  NSObject<OS_dispatch_group> *_encodeGroup;
  NSObject<OS_dispatch_queue> *_encodeQueue;
  NSObject<OS_dispatch_semaphore> *_encodeSemaphore;
}

/* instance methods */
- (id)initWithSequenceData:(id)data maxDimension:(unsigned long long)dimension qualityValue:(double)value;
- (int)_setupTranscode;
- (int)_decodeFrameIndex:(unsigned long long)index basePixelBuffer:(struct __CVBuffer * *)buffer alphaPixelBuffer:(struct __CVBuffer * *)buffer pts:(struct { long long x0; int x1; unsigned int x2; long long x3; } *)pts;
- (int)_addFrameToSequence:(long long)sequence basePixelBuffer:(struct __CVBuffer *)buffer alphaPixelBuffer:(struct __CVBuffer *)buffer pts:(struct { long long x0; int x1; unsigned int x2; long long x3; })pts;
- (int)_transcode;
- (id)run;
@end

#endif /* MADHEICSAlphaSequenceTranscoder_h */
