//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef VCPVideoHumanActionAnalyzer_h
#define VCPVideoHumanActionAnalyzer_h
@import Foundation;

#include "VCPVideoAnalyzer.h"
#include "VCPFrameAnalysisStats.h"
#include "VCPImageHumanPoseAnalyzer.h"
#include "VCPVideoObjectTracker.h"

@class NSMutableArray, NSNumber;
@protocol {Scaler="pool_"{CF<__CVPixelBufferPool *>="value_"^{__CVPixelBufferPool}}"width_"i"height_"i"format_"I"transfer_session_"{CF<OpaqueVTPixelTransferSession *>="value_"^{OpaqueVTPixelTransferSession}}};

@interface VCPVideoHumanActionAnalyzer : VCPVideoAnalyzer {
  /* instance variables */
  VCPImageHumanPoseAnalyzer *_poseAnalyzer;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _timeLastProcess;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _timeLastProcessFullFrame;
  NSMutableArray *_bodyArray;
  float _maxScore;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _endTime;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _startTime;
  NSMutableArray *_actionResults;
  NSMutableArray *_keyPersonResults;
  NSMutableArray *_poseResults;
  NSMutableArray *_activePoseResults;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _crop;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _humanRect;
  float _actionScoreAbsolute;
  float _actionScoreRelative;
  float _scoreAbsoluteMax;
  float _scoreRelativeMax;
  float _humanPoseScore;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastHumanTimestamp;
  VCPFrameAnalysisStats *_frameStats;
  VCPVideoObjectTracker *_tracker;
  BOOL _tracking;
  NSNumber *_timeOfInterest;
  NSMutableArray *_phFaces;
  struct Scaler { struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } pool_; int width_; int height_; unsigned int format_; struct CF<OpaqueVTPixelTransferSession *> { struct OpaqueVTPixelTransferSession *value_; } transfer_session_; } _scaler;
}

/* instance methods */
- (id)initWithFrameStats:(id)stats timeOfInterest:(id)interest phFaces:(id)faces;
- (float)normDistance:(id)distance point2:(id)point2;
- (void)computeVar:(int)var index2:(int)index2 interVar:(float *)var intraVar:(float *)var;
- (void)computeActionScore;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scaleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect scaleX:(float)x scaleY:(float)y;
- (float)intersectionOverUnion:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })union rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)associatePerson:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })person withPHFaces:(id)phfaces;
- (int)processPersons:(id)persons humanBounds:(id)bounds dominantPersonIdx:(int)idx frame:(struct __CVBuffer *)frame timestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp duration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (void)addActiveResults:(struct { long long x0; int x1; unsigned int x2; long long x3; })results;
- (int)analyzeFrame:(struct __CVBuffer *)frame withTimestamp:(struct { long long x0; int x1; unsigned int x2; long long x3; })timestamp andDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })duration flags:(unsigned long long *)flags;
- (int)finishAnalysisPass:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })pass;
- (id)clipResults:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })results;
- (id)results;
- (id)privateResults;
@end

#endif /* VCPVideoHumanActionAnalyzer_h */
