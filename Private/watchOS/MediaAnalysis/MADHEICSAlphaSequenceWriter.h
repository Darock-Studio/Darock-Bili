//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 205.6.1.0.0
//
#ifndef MADHEICSAlphaSequenceWriter_h
#define MADHEICSAlphaSequenceWriter_h
@import Foundation;

#include "MADAlphaSequenceWriter.h"

@class NSDictionary;
@protocol {CF<CMPhotoCompressionSession *>="value_"^{CMPhotoCompressionSession}}, {CF<__CVPixelBufferPool *>="value_"^{__CVPixelBufferPool}};

@interface MADHEICSAlphaSequenceWriter : MADAlphaSequenceWriter {
  /* instance variables */
  NSDictionary *_crop;
  struct CF<CMPhotoCompressionSession *> { struct CMPhotoCompressionSession *value_; } _compressionSession;
  long long _sequenceIndex;
  int _status;
  struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } _imagePixelBufferPool;
  struct CF<__CVPixelBufferPool *> { struct __CVPixelBufferPool *value_; } _alphaPixelBufferPool;
}

/* class methods */
+ (int)getOutputWidth:(unsigned long long *)width outputHeight:(unsigned long long *)height sequenceData:(id)data;
+ (id)transcodeSequenceData:(id)data maxDimension:(unsigned long long)dimension outputWidth:(unsigned long long *)width outputHeight:(unsigned long long *)height;

/* instance methods */
- (id)initWithFrameCount:(unsigned long long)count crop:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)crop;
- (int)createPixelBufferPool:(struct __CVPixelBufferPool * *)pool width:(unsigned long long)width height:(unsigned long long)height pixelFormat:(int)format;
- (int)copyInputPlaneIndex:(unsigned long long)index inputPixelBuffer:(struct __CVBuffer *)buffer toOutputPlaneIndex:(unsigned long long)index outputPixelBuffer:(struct __CVBuffer *)buffer bytesPerPixel:(unsigned long long)pixel;
- (int)demuxPixelBuffer:(struct __CVBuffer *)buffer imagePixelBuffer:(struct __CVBuffer * *)buffer alphaPixelBuffer:(struct __CVBuffer * *)buffer;
- (int)_createCompressionSessionLazy;
- (int)_addPixelBuffer420Alpha:(struct __CVBuffer *)alpha withTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (int)_addPixelBufferBGRA:(struct __CVBuffer *)bgra withTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (int)addPixelBuffer:(struct __CVBuffer *)buffer withTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (int)_finishWithEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time outputData:(id *)data;
- (id)finishWithEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
@end

#endif /* MADHEICSAlphaSequenceWriter_h */
