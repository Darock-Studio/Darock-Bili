//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 101.4.0.0.0
//
#ifndef MLRInternalBMLTTask_h
#define MLRInternalBMLTTask_h
@import Foundation;

#include "MLRBMLTSchedulingPolicy.h"
#include "MLRInternalTaskRepresenting-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class DESRecordSet, NSString, TRIClient, TRIClientBackgroundMLTask, TRIFactorsState;
@protocol OS_dispatch_queue;

@interface MLRInternalBMLTTask : NSObject<MLRInternalTaskRepresenting, NSSecureCoding> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_syncQueue;
}

@property (readonly, nonatomic) TRIFactorsState *factorsState;
@property (readonly, nonatomic) MLRBMLTSchedulingPolicy *policy;
@property (readonly, nonatomic) DESRecordSet *recordSet;
@property (readonly, nonatomic) TRIClientBackgroundMLTask *triBMLT;
@property (readonly, nonatomic) TRIClient *triClient;
@property (readonly, copy, nonatomic) NSString *pluginID;
@property (readonly, copy, nonatomic) NSString *taskID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithTRIClientBackgroundMLTask:(id)mltask factorsState:(id)state;
- (id)initWithTRIClientBackgroundMLTask:(id)mltask factorsState:(id)state recordSet:(id)set;
- (id)attachmentsDirURL;
- (id)recipeURL;
- (id)taskParametersWithError:(id *)error;
- (id)taskAttachmentsWithError:(id *)error;
- (id)MLRTaskWithError:(id *)error;
- (BOOL)fetchDataIfNecessaryWithError:(id *)error;
- (BOOL)downloadFactorsSynchronouslyWithError:(id *)error;
- (BOOL)evaluateTargetingExpressionWithParameters:(id)parameters error:(id *)error;
- (BOOL)evaluateTargetingExpressionForPlugin:(id)plugin error:(id *)error;
- (id)submissionServer;
- (BOOL)submitTask:(id)task result:(id)result duration:(double)duration errorToBeSubmitted:(id)submitted error:(id *)error;
- (id)performOnPlugin:(id)plugin error:(id *)error;
- (id)MLRSandboxExtensionRequests;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* MLRInternalBMLTTask_h */
