//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 101.4.0.0.0
//
#ifndef MLRExtensionRemoteContext_h
#define MLRExtensionRemoteContext_h
@import Foundation;

#include "NSExtensionContext.h"
#include "MLRExtensionRemoteProtocol-Protocol.h"

@class NSString;
@protocol MLRTaskPerforming, OS_dispatch_queue, OS_os_transaction;

@interface MLRExtensionRemoteContext : NSExtensionContext<MLRExtensionRemoteProtocol> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_taskExecutionQueue;
  NSObject<OS_dispatch_queue> *_stopQueue;
}

@property (retain, nonatomic) NSObject<OS_os_transaction> *taskTransaction;
@property (retain, nonatomic) NSObject<OS_os_transaction> *stopTransaction;
@property (retain, nonatomic) NSObject<MLRTaskPerforming> *plugin;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionAuxiliaryVendorProtocol;

/* instance methods */
- (id)initWithInputItems:(id)items listenerEndpoint:(id)endpoint contextUUID:(id)uuid;
- (id)initWithInputItems:(id)items listenerEndpoint:(id)endpoint contextUUID:(id)uuid plugin:(id)plugin;
- (BOOL)loadPluginIfNecessaryWithError:(id *)error;
- (id)createDodMLServer;
- (id)processTaskResult:(id)result forTask:(id)task duration:(double)duration error:(id *)error;
- (void)performSynchronouslyDodMLTask:(id)mltask sandBoxExtensions:(id)extensions completion:(id /* block */)completion;
- (void)performDodMLTask:(id)mltask sandBoxExtensions:(id)extensions completion:(id /* block */)completion;
- (id)createMLRTrialTaskWithTask:(id)task;
- (void)performSynchronouslyTrialTask:(id)task completion:(id /* block */)completion;
- (void)performTrialTask:(id)task completion:(id /* block */)completion;
- (id)performSynchronouslyTask:(id)task sandBoxExtensions:(id)extensions error:(id *)error;
- (void)performTask:(id)task sandBoxExtensions:(id)extensions completion:(id /* block */)completion;
- (void)stopSynchronously;
- (void)stop;
- (void)simulateCrash;
@end

#endif /* MLRExtensionRemoteContext_h */
