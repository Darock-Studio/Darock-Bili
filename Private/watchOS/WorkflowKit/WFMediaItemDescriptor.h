//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef WFMediaItemDescriptor_h
#define WFMediaItemDescriptor_h
@import Foundation;

#include "MTLModel.h"
#include "MTLJSONSerializing-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class INPlayMediaIntent, NSData, NSDictionary, NSNumber, NSString;

@interface WFMediaItemDescriptor : MTLModel<NSSecureCoding, MTLJSONSerializing>

@property (readonly, copy, nonatomic) NSString *itemName;
@property (readonly, copy, nonatomic) NSNumber *persistentIdentifier;
@property (readonly, copy, nonatomic) NSData *playbackArchiveData;
@property (readonly, copy, nonatomic) NSString *type;
@property (readonly, copy, nonatomic) INPlayMediaIntent *intent;
@property (readonly, copy, nonatomic) NSDictionary *dictionaryValue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)descriptorForMPMediaEntity:(id)entity mediaType:(id)type;
+ (id)collectionsOrItemsFromQuery:(id)query forMediaType:(id)type;
+ (id)allDescriptorsForMediaTypeUsingMPMediaQuery:(id)query;
+ (id)allDescriptorsInLibraryForMediaType:(id)type;
+ (id)mpMediaQueryForPersistentIdentifier:(id)identifier withMediaType:(id)type;
+ (id)descriptorWithPersistentIdentifier:(id)identifier mediaType:(id)type;
+ (id)mpMediaQueryForName:(id)name withMediaType:(id)type;
+ (id)itemCollectionFromQuery:(id)query mediaType:(id)type;
+ (id)collectionForPlaybackWithItemName:(id)name persistentIdentifier:(id)identifier mediaType:(id)type;
+ (id)playbackArchiveDataJSONTransformer;
+ (id)intentJSONTransformer;
+ (BOOL)supportsSecureCoding;
+ (id)JSONKeyPathsByPropertyKey;

/* instance methods */
- (id)collectionForPlayback;
- (id)initWithMediaItemName:(id)name persistentIdentifier:(id)identifier mediaType:(id)type;
- (id)initWithMediaItemName:(id)name playbackArchiveData:(id)data;
- (id)initWithIntent:(id)intent;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
@end

#endif /* WFMediaItemDescriptor_h */
