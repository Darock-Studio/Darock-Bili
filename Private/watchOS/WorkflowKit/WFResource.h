//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef WFResource_h
#define WFResource_h
@import Foundation;

#include "WFApplicationStateObserver-Protocol.h"
#include "WFErrorRecoveryAttempting-Protocol.h"

@class NSDictionary, NSError, NSString;
@protocol OS_dispatch_queue;

@interface WFResource : NSObject<WFApplicationStateObserver, WFErrorRecoveryAttempting>

@property (readonly, nonatomic) BOOL shouldRefreshAvailability;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *stateAccessQueue;
@property (readonly, copy, nonatomic) NSDictionary *definition;
@property (readonly, copy, nonatomic) NSDictionary *eventDictionary;
@property (readonly, nonatomic) BOOL available;
@property (readonly, nonatomic) NSError *availabilityError;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedInstance;
+ (BOOL)isSingleton;
+ (BOOL)refreshesAvailabilityOnApplicationResume;
+ (BOOL)mustBeAvailableForDisplay;
+ (BOOL)alwaysMakeAvailable;

/* instance methods */
- (id)initWithDefinition:(id)definition;
- (id)init;
- (void)dealloc;
- (BOOL)isAvailable;
- (void)refreshAvailabilityIfNeeded;
- (BOOL)_isAvailable;
- (id)_availabilityError;
- (void)refreshAvailability;
- (void)attemptRecoveryFromError:(id)error optionIndex:(unsigned long long)index userInterface:(id)interface completionHandler:(id /* block */)handler;
- (void)refreshAvailabilityWithNotification;
- (void)refreshAvailabilityWithForcedNotification;
- (BOOL)shouldNotifyResourcesAfterAvailabilityUpdateWithForcedNotification:(BOOL)notification;
- (void)notifyResourcesAboutAvailabilityChange;
- (void)refreshAvailabilityWithNotification:(BOOL)notification;
- (void)updateAvailability:(BOOL)availability withError:(id)error;
- (void)invalidateAvailability;
- (void)applicationContext:(id)context applicationStateDidChange:(long long)change;
@end

#endif /* WFResource_h */
