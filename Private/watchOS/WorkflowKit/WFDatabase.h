//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef WFDatabase_h
#define WFDatabase_h
@import Foundation;

#include "WFDatabaseProvider-Protocol.h"
#include "WFDebouncer.h"

@class NSArray, NSHashTable, NSManagedObjectContext, NSPersistentStoreDescription, NSString, NSURL, WFCoreDataChangeNotification, WFLibrary;
@protocol OS_dispatch_queue;

@interface WFDatabase : NSObject<WFDatabaseProvider> {
  /* instance variables */
  WFLibrary *_library;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) BOOL destroysOnDeallocation;
@property (nonatomic) long long transactionCount;
@property (retain, nonatomic) NSPersistentStoreDescription *persistentStoreDescription;
@property (retain, nonatomic) WFCoreDataChangeNotification *pendingLocalChangeNotification;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *remoteChangeQueue;
@property (retain, nonatomic) WFCoreDataChangeNotification *pendingRemoteChangeNotification;
@property (readonly, nonatomic) WFDebouncer *remoteChangeNotificationDebouncer;
@property (retain, nonatomic) NSHashTable *resultsToNotify;
@property (retain, nonatomic) NSHashTable *observers;
@property (readonly, nonatomic) struct os_unfair_lock_s { unsigned int x0; } observersLock;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *changeNotificationQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;
@property (retain, nonatomic) NSManagedObjectContext *suggestionsContext;
@property (retain, nonatomic) NSManagedObjectContext *context;
@property (readonly, nonatomic) NSURL *exportableURL;
@property (readonly, nonatomic) NSArray *activeObjectObservers;
@property (readonly, nonatomic) NSArray *activeResults;
@property (nonatomic) BOOL postDistributedNotifications;
@property (readonly, nonatomic) NSURL *fileURL;

/* class methods */
+ (id)dataFromObject:(id)object error:(id *)error;
+ (id)identifierForAppDescriptor:(id)descriptor;
+ (id)disabledAutoShortcutsFromData:(id)data;
+ (id)appDescriptorFromData:(id)data;
+ (id)defaultDatabase;
+ (void)setDefaultDatabase:(id)database;
+ (id)createDatabaseForTesting;

/* instance methods */
- (id)badgeTypeForEntityIdentifier:(id)identifier error:(id *)error;
- (id)serializedParametersForIdentifier:(id)identifier error:(id *)error;
- (void)storeSerializedParameters:(id)parameters forIdentifier:(id)identifier queryName:(id)name badgeType:(unsigned long long)type error:(id *)error;
- (void)removeAllSerializedParametersForQueryName:(id)name error:(id *)error;
- (id)logRunOfWorkflow:(id)workflow withSource:(id)source triggerID:(id)id;
- (id)logRunOfWorkflow:(id)workflow atDate:(id)date withIdentifier:(id)identifier source:(id)source triggerID:(id)id;
- (void)setOutcome:(long long)outcome forRunEvent:(id)event;
- (id)sortedRunEventsWithSource:(id)source;
- (id)sortedRunEventsWithSource:(id)source startDate:(id)date endDate:(id)date;
- (id)sortedRunEventsForTriggerID:(id)id;
- (id)triggerRunEventsInTheLastWeek;
- (id)latestRunEvent;
- (unsigned long long)countOfWorkflowsInAFolder;
- (id)sortedVisibleFolders;
- (id)createFolderWithName:(id)name icon:(unsigned short)icon error:(id *)error;
- (id)updateFolder:(id)folder newName:(id)name newIcon:(unsigned short)icon error:(id *)error;
- (id)collectionsForWorkflowReference:(id)reference;
- (id)folderForWorkflowReference:(id)reference;
- (id)collectionForWorkflowType:(id)type;
- (id)collectionWithIdentifier:(id)identifier;
- (id)collectionWithIdentifier:(id)identifier createIfNecessary:(BOOL)necessary;
- (id)sortedVisibleWorkflowsInCollection:(id)collection;
- (BOOL)moveReferences:(id)references toIndex:(long long)index ofCollection:(id)collection error:(id *)error;
- (BOOL)moveReferences:(id)references toIndexes:(id)indexes ofCollection:(id)collection error:(id *)error;
- (BOOL)prependReferences:(id)references toCollection:(id)collection error:(id *)error;
- (BOOL)prependReferences:(id)references toCollectionWithType:(id)type error:(id *)error;
- (BOOL)removeReferences:(id)references fromCollectionWithIdentifier:(id)identifier error:(id *)error;
- (BOOL)moveCollections:(id)collections toIndexes:(id)indexes error:(id *)error;
- (BOOL)moveCollections:(id)collections toIndexes:(id)indexes ofCollectionWithIdentifier:(id)identifier error:(id *)error;
- (id)allCollections;
- (id)deletedFolders;
- (id)collectionRecordForCollectionIdentifier:(id)identifier createIfNecessary:(BOOL)necessary;
- (id)suggestedFolderNameForName:(id)name;
- (id)orphanedFoldersPredicate;
- (id)orphanedFolders;
- (id)orphanedWorkflowsPredicate;
- (id)orphanedShortcuts;
- (id)collectionsWithOutOfSyncWalrusStatus;
- (id)collectionResultWithLibraryQuery:(id)query;
- (id)collectionResultWithFetchRequest:(id)request;
- (id)validateFolderName:(id)name forCollection:(id)collection error:(id *)error;
- (id)visibleCollectionForFolderName:(id)name;
- (id)createTriggerWithRecord:(id)record error:(id *)error;
- (id)createTriggerWithRecord:(id)record workflow:(id)workflow error:(id *)error;
- (id)associateWorkflowToTrigger:(id)trigger workflow:(id)workflow error:(id *)error;
- (id)configuredTriggersForWorkflowID:(id)id;
- (id)allConfiguredTriggers;
- (id)triggerResultWithFetchRequest:(id)request;
- (id)configuredTriggerForTriggerID:(id)id;
- (id)createTriggerEventWithTriggerID:(id)id eventInfo:(id)info confirmed:(BOOL)confirmed error:(id *)error;
- (id)triggerEventForIdentifier:(id)identifier error:(id *)error;
- (void)setConfirmedForTriggerEventWithIdentifier:(id)identifier error:(id *)error;
- (id)sortedTriggerEventsWithConfirmationOnly:(BOOL)only;
- (id)allConfiguredTriggersNeedingRunningNotifications;
- (id)workflowRelationshipKeysAffectingDescriptors;
- (id)workflowResultWithLibraryQuery:(id)query;
- (id)workflowResultWithFetchRequest:(id)request;
- (unsigned long long)countOfAllVisibleWorkflows;
- (id)sortedVisibleWorkflowsWithType:(id)type;
- (id)sortedWorkflowsWithQuery:(id)query;
- (id)workflowFetchRequestWithCollectionID:(id)id includeTombstones:(BOOL)tombstones limit:(unsigned long long)limit;
- (id)sortedVisibleWorkflowsByName;
- (id)sortedVisibleWorkflowsByNameWithLimit:(long long)limit;
- (id)sortedVisibleWorkflowsByLastRunOrModificationDateWithLimit:(long long)limit;
- (id)sortedVisibleAppAssociatedWorkflows;
- (id)sortedVisibleWorkflowsWithAssociatedAppBundleIdentifier:(id)identifier;
- (id)sortedVisibleWorkflowsNameContains:(id)contains limit:(long long)limit;
- (id)workflowsWithTombstonedConflicts;
- (id)allShortcuts;
- (id)visibleReferencesForWorkflowName:(id)name;
- (id)recentlyModifiedShortcuts;
- (id)recentlyRunShortcuts;
- (id)recentlyRunShortcutsWithLimit:(long long)limit;
- (id)shortcutsWithOutOfSyncWalrusStatus;
- (id)referenceForWorkflowID:(id)id;
- (id)referenceForWorkflowID:(id)id includingTombstones:(BOOL)tombstones;
- (id)visibleReferencesForWorkflowIDs:(id)ids sortByKeys:(id)keys nameContaining:(id)containing nameEqualing:(id)equaling associatedAppBundleIdentifier:(id)identifier hasTombstonedConflicts:(BOOL)conflicts isRecentlyModified:(BOOL)modified isRecentlyRun:(BOOL)run limitTo:(unsigned long long)to;
- (id)visibleReferencesForWorkflowIDs:(id)ids sortBy:(unsigned long long)by nameContaining:(id)containing nameEqualing:(id)equaling associatedAppBundleIdentifier:(id)identifier hasTombstonedConflicts:(BOOL)conflicts isRecentlyModified:(BOOL)modified isRecentlyRun:(BOOL)run limitTo:(unsigned long long)to;
- (id)uniqueVisibleReferenceForWorkflowName:(id)name;
- (BOOL)hasVisibleWorkflowsWithName:(id)name;
- (BOOL)hasConflictWithName:(id)name;
- (id)createWorkflowWithError:(id *)error;
- (id)createWorkflowWithOptions:(id)options error:(id *)error;
- (id)createWorkflowWithOptions:(id)options nameCollisionBehavior:(unsigned long long)behavior error:(id *)error;
- (BOOL)createWorkflowWithIdentifier:(id)identifier record:(id)record error:(id *)error;
- (id)duplicateReference:(id)reference error:(id *)error;
- (id)renameReference:(id)reference to:(id)to error:(id *)error;
- (BOOL)deleteReference:(id)reference error:(id *)error;
- (BOOL)deleteReference:(id)reference tombstone:(BOOL)tombstone deleteConflictIfPresent:(BOOL)present error:(id *)error;
- (id)conflictingReferenceForReference:(id)reference;
- (id)remoteConflictingReferenceForReference:(id)reference;
- (id)localConflictingReferenceForReference:(id)reference;
- (BOOL)hasConflictingReferenceForReference:(id)reference;
- (void)setConflictingReference:(id)reference forReference:(id)reference;
- (id)suggestedWorkflowNameForName:(id)name;
- (id)_createWorkflowWithOptions:(id)options error:(id *)error;
- (id)duplicateReference:(id)reference newName:(id)name error:(id *)error;
- (id)validateWorkflowName:(id)name forCreation:(BOOL)creation overwriting:(BOOL)overwriting error:(id *)error;
- (id)duplicateNameErrorWithName:(id)name;
- (void)deleteDonationsForShortcutWithIdentifier:(id)identifier;
- (id)createBookmarkWithWorkflowID:(id)id path:(id)path bookmarkData:(id)data error:(id *)error;
- (id)bookmarkDataForWorkflowID:(id)id path:(id)path error:(id *)error;
- (id)bookmarksForWorkflowID:(id)id error:(id *)error;
- (BOOL)deleteAllBookmarksForWorkflowID:(id)id error:(id *)error;
- (id)allShortcutBookmarks;
- (id)conflictForWorkflowReference:(id)reference;
- (void)saveOutputActionSmartPromtDataForWorkflowReference:(id)reference error:(id *)error;
- (id)approvalResultForContentAttributionSet:(id)set contentDestination:(id)destination actionUUID:(id)uuid actionIdentifier:(id)identifier actionIndex:(unsigned long long)index reference:(id)reference allowedOnceStates:(id)states;
- (id)fetchFirstAllowedStateMatching:(id)matching actionUUID:(id)uuid forReference:(id)reference;
- (id)performDatabaseLookupForState:(id)state actionUUID:(id)uuid reference:(id)reference;
- (BOOL)shouldPromptForCurrentContentItemCount:(unsigned long long)count previousCount:(unsigned long long)count;
- (id)migrateAccountStateToAppOriginIfNecessary:(id)necessary reference:(id)reference actionUUID:(id)uuid;
- (void)createSmartPromptStatesForInsertedActions:(id)actions forReference:(id)reference;
- (void)saveSmartPromptStatesForInsertedAction:(id)action contentDestination:(id)destination reference:(id)reference;
- (id)smartPromptStatesForReference:(id)reference;
- (id)smartPromptStatesForReference:(id)reference actionUUID:(id)uuid;
- (id)currentDeletionAuthorizationStatusWithContentItemClassName:(id)name actionUUID:(id)uuid actionIdentifier:(id)identifier actionIndex:(unsigned long long)index count:(unsigned long long)count reference:(id)reference;
- (void)compactDeletionAuthorizationsIfNecessaryForWorkflowReference:(id)reference;
- (id)deletionAuthorizationStatesForReference:(id)reference;
- (id)allStatesDataForReference:(id)reference actionUUID:(id)uuid;
- (BOOL)saveSmartPromptState:(id)state reference:(id)reference error:(id *)error;
- (BOOL)saveSmartPromptStateData:(id)data actionUUID:(id)uuid reference:(id)reference error:(id *)error;
- (void)_saveSmartPromptStateData:(id)data actionUUID:(id)uuid forWorkflow:(id)workflow;
- (void)_updateStatesToMatchSmartPromptState:(id)state forWorkflow:(id)workflow;
- (void)_updateDeletionAuthorizationsToMatchAuthorization:(id)authorization forWorkflow:(id)workflow;
- (void)deleteSmartPromptState:(id)state forReference:(id)reference;
- (void)_deleteSmartPromptState:(id)state forReference:(id)reference;
- (void)deleteSmartPromptStatesForDeletedActionUUIDs:(id)uuids forReference:(id)reference;
- (void)deleteAllSmartPromptStateDataForReference:(id)reference;
- (void)deleteAllDeletionAuthorizationsForReference:(id)reference;
- (id)generateAndPersistUUIDForActionWithIdentifier:(id)identifier actionIndex:(unsigned long long)index workflowIdentifier:(id)identifier;
- (id)autoShortcutsPreferencesForAppDescriptor:(id)descriptor error:(id *)error;
- (id)autoShortcutsPreferencesForIdentifier:(id)identifier error:(id *)error;
- (id)autoShortcutsPreferencesFromCoreDataAutoShortcutsPreferences:(id)preferences;
- (id)autoShortcutsPreferencesForBundleIdentifier:(id)identifier error:(id *)error;
- (id)coreDataAutoShortcutsPreferencesForAppDescriptor:(id)descriptor error:(id *)error;
- (id)coreDataAutoShortcutsPreferencesForIdentifier:(id)identifier error:(id *)error;
- (BOOL)isSiriEnabledForAutoShortcutsWithAppDescriptor:(id)descriptor error:(id *)error;
- (BOOL)isSiriEnabledForAutoShortcutsWithBundleIdentifier:(id)identifier error:(id *)error;
- (BOOL)isSiriEnabledForAutoShortcutsWithBundleIdentifier:(id)identifier;
- (BOOL)setSiriAutoShortcutsEnablement:(BOOL)enablement forAppDescriptor:(id)descriptor error:(id *)error;
- (BOOL)setSiriAutoShortcutsEnablement:(BOOL)enablement forBundleIdentifier:(id)identifier source:(unsigned long long)source error:(id *)error;
- (BOOL)isSpotlightEnabledForAutoShortcutsWithAppDescriptor:(id)descriptor error:(id *)error;
- (BOOL)isSpotlightEnabledForAutoShortcutsWithBundleIdentifier:(id)identifier error:(id *)error;
- (BOOL)isSpotlightEnabledForAutoShortcutsWithBundleIdentifier:(id)identifier;
- (BOOL)setSpotlightAutoShortcutsEnablement:(BOOL)enablement forAppDescriptor:(id)descriptor error:(id *)error;
- (BOOL)setSpotlightAutoShortcutsEnablement:(BOOL)enablement forBundleIdentifier:(id)identifier source:(unsigned long long)source error:(id *)error;
- (BOOL)isAutoShortcutDisabledForAppDescriptor:(id)descriptor autoShortcutIdentifier:(id)identifier error:(id *)error;
- (BOOL)isAutoShortcutDisabledForBundleIdentifier:(id)identifier autoShortcutIdentifier:(id)identifier error:(id *)error;
- (BOOL)isAutoShortcutDisabledForBundleIdentifier:(id)identifier autoShortcutIdentifier:(id)identifier;
- (BOOL)setAutoShortcutDisabledForAppDescriptor:(id)descriptor autoShortcutDisabled:(BOOL)disabled autoShortcutIdentifier:(id)identifier error:(id *)error;
- (BOOL)setAutoShortcutDisabledForBundleIdentifier:(id)identifier autoShortcutDisabled:(BOOL)disabled autoShortcutIdentifier:(id)identifier source:(unsigned long long)source error:(id *)error;
- (id)saveAutoShortcutsPreferencesForAppDescriptor:(id)descriptor update:(id /* block */)update error:(id *)error;
- (id)defaultCoreDataAutoShortcutsPreferencesForAppDescriptor:(id)descriptor error:(id *)error;
- (BOOL)updateAutoShortcutsPreferencesWithNewPreferences:(id)preferences error:(id *)error;
- (BOOL)mergeAutoShortcutsPreferencesWithNewPreferences:(id)preferences error:(id *)error;
- (BOOL)deleteAutoShortcutsPreferencesForIdentifier:(id)identifier error:(id *)error;
- (void)trackMetricsForToggleType:(unsigned long long)type source:(unsigned long long)source bundleIdentifier:(id)identifier isEnabled:(BOOL)enabled;
- (void)clearTombstonesAndSyncState;
- (void)setSyncToken:(id)token;
- (id)syncToken;
- (id)_syncTokenWithError:(id *)error;
- (id)deletedWorkflowIDsForSync;
- (id)changedWorkflowIDsForSync;
- (void)updateWalrusStatus;
- (BOOL)setShortcutSuggestions:(id)suggestions forAppWithBundleIdentifier:(id)identifier error:(id *)error;
- (id)shortcutSuggestionsForAppWithBundleIdentifier:(id)identifier shortcutAvailability:(unsigned long long)availability error:(id *)error;
- (id)shortcutSuggestionsForAllAppsWithLimit:(unsigned long long)limit shortcutAvailability:(unsigned long long)availability error:(id *)error;
- (id)allShortcutSuggestions;
- (void)deleteShortcutSuggestionsFromApps:(id)apps;
- (id)performSuggestionsOperationWithBlock:(id /* block */)block error:(id *)error;
- (BOOL)saveContextOrRollback:(id)rollback error:(id *)error;
- (id)mostRunOrLatestImportedVisibleShortcut;
- (id)workflowSiriRunEventWithIdentifier:(id)identifier;
- (id)latestWorkflowSiriRunEvent;
- (id)databaseWithError:(id *)error;
- (void)setTrustedToRunScripts:(BOOL)scripts forReference:(id)reference onDomain:(id)domain;
- (BOOL)isReference:(id)reference allowedToRunOnDomain:(id)domain;
- (id)coreDataLibraryWithVersion:(id)version;
- (id)coreDataLibraryWithIdentifier:(id)identifier;
- (id)coreDataLibraryWithPredicate:(id)predicate;
- (id)latestCoreDataLibrary;
- (id)latestLibrary;
- (id)allLatestLibrariesLimitedTo:(unsigned long long)to;
- (id)allLatestLibraries;
- (BOOL)wipeAllLibrariesWithError:(id *)error;
- (id)libraryDotRepresentation;
- (id)createLibraryFromCurrentDatabaseSnapshot;
- (void)saveLibrary:(id)library;
- (id)libraryRecordForVersion:(id)version;
- (BOOL)replaceWithFileAtURL:(id)url error:(id *)error;
- (void)invalidateAllObjectsAndNotify;
- (id)initWithStoreDescription:(id)description runMigrationsIfNecessary:(BOOL)necessary useLockFile:(BOOL)file error:(id *)error;
- (void)dealloc;
- (BOOL)isEqual:(id)equal;
- (BOOL)mergeAutomationsAndShortcuts;
- (void)addObjectObserver:(id)observer;
- (void)removeObjectObserver:(id)observer;
- (void)performTransactionWithReason:(id)reason block:(id /* block */)block error:(id *)error;
- (id)performOperationWithReason:(id)reason block:(id /* block */)block error:(id *)error;
- (id)performSaveOperationWithReason:(id)reason block:(id /* block */)block error:(id *)error;
- (id)objectForDescriptor:(id)descriptor properties:(id)properties;
- (id)objectForDescriptor:(id)descriptor properties:(id)properties createIfNecessary:(BOOL)necessary;
- (void)accessStorageForDescriptor:(id)descriptor forWriting:(BOOL)writing readingRecordProperties:(id)properties usingBlock:(id /* block */)block withError:(id *)error;
- (id)recordWithDescriptor:(id)descriptor error:(id *)error;
- (id)recordWithDescriptor:(id)descriptor properties:(id)properties error:(id *)error;
- (id)objectOfClass:(Class)class withIdentifier:(id)identifier forKey:(id)key createIfNecessary:(BOOL)necessary properties:(id)properties;
- (BOOL)object:(id)object didUpdateProperties:(id)properties error:(id *)error;
- (void)contextDidSave:(id)save;
- (void)remoteContextDidSave:(id)save;
- (void)remoteChangeDebouncerDidFire;
- (void)notifyResultsAboutChange:(id)change;
- (void)reloadLibrary;
- (id)descriptorsForFetchOperation:(id)operation state:(id *)state error:(id *)error;
- (id)descriptorsForCoreDataResult:(id)result state:(id *)state error:(id *)error;
- (unsigned long long)countForResult:(id)result;
- (BOOL)startObservingChangesForResult:(id)result;
- (id)missingErrorForDescriptor:(id)descriptor;
- (Class)recordClassForObjectType:(unsigned long long)type;
- (BOOL)saveRecord:(id)record withDescriptor:(id)descriptor error:(id *)error;
- (BOOL)reloadRecord:(id)record withDescriptor:(id)descriptor error:(id *)error;
- (id)tombstonedShortcutsPredicate;
- (id)visiblePredicate;
- (void)addActionCountsToShortcutsIfNecessary;
- (void)addSyncHashesToShortcutsIfNecessary;
- (void)removeRunEventsWithoutAssociatedShortcuts;
- (void)markTriggersAsRunAfterConfirmationIfNeeded;
- (void)updateAppDescriptor:(id)descriptor atKey:(id)key actionUUID:(id)uuid actionIndex:(id)index actionIdentifier:(id)identifier workflowID:(id)id;
- (BOOL)setWalrusStateForTesting:(long long)testing withError:(id *)error;
- (BOOL)isPostingDistributedNotifications;
@end

#endif /* WFDatabase_h */
