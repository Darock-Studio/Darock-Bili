//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2206.0.5.0.0
//
#ifndef WFDialogTransformer_h
#define WFDialogTransformer_h
@import Foundation;

#include "WFAction.h"
#include "WFActionParameterInputProvider-Protocol.h"
#include "WFChooseFromListDataStore.h"
#include "WFDialogTransformerDelegate-Protocol.h"
#include "WFSequentialParameterInputProvider.h"
#include "WFSequentialParameterInputProviderDelegate-Protocol.h"
#include "WFUIPresenter.h"
#include "WFUserInterfaceHost-Protocol.h"
#include "WFWorkflow.h"

@class NSArray, NSDate, NSString, WFDialogAttribution, WFSiriUIPresenter, WFSiriWorkflowRunnerClientOptions, WFWorkflowRunViewSource, WFWorkflowRunningContext;

@interface WFDialogTransformer : NSObject<WFSequentialParameterInputProviderDelegate, WFUserInterfaceHost, WFActionParameterInputProvider>

@property (retain, nonatomic) WFWorkflow *workflow;
@property (retain, nonatomic) WFSequentialParameterInputProvider *parameterInputProvider;
@property (copy, nonatomic) id /* block */ parameterInputCompletionHandler;
@property (retain, nonatomic) NSDate *workflowStartTime;
@property (retain, nonatomic) WFChooseFromListDataStore *chooseFromListDataStore;
@property (retain, nonatomic) WFSiriWorkflowRunnerClientOptions *siriOptions;
@property (nonatomic) BOOL hasPresentedFirstDialog;
@property (weak, nonatomic) NSObject<WFDialogTransformerDelegate> *delegate;
@property (retain, nonatomic) WFAction *currentAction;
@property (readonly, nonatomic) NSString *runSource;
@property (readonly, nonatomic) WFWorkflowRunningContext *runningContext;
@property (retain, nonatomic) WFWorkflowRunViewSource *runViewSource;
@property (retain, nonatomic) WFUIPresenter *userInterfacePresenter;
@property (retain, nonatomic) WFSiriUIPresenter *siriUIPresenter;
@property (readonly, nonatomic) WFDialogAttribution *attribution;
@property (retain, nonatomic) NSArray *allowedParameterClasses;
@property (nonatomic) BOOL allowsHandoff;
@property (nonatomic) unsigned long long presentationMode;
@property (nonatomic) long long numberOfDialogsPresented;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *userInterfaceType;
@property (readonly, copy, nonatomic) NSArray *airPlayRouteIDs;
@property (readonly, nonatomic) long long executionContext;

/* instance methods */
- (id)initWithWorkflow:(id)workflow userInterfacePresenter:(id)presenter runSource:(id)source runningContext:(id)context;
- (void)workflowWillBegin;
- (void)cancel;
- (void)stopWithError:(id)error;
- (id)shortcutsAppAttribution;
- (id)privacyAttribution;
- (id)workflowName;
- (id)attributionTitle;
- (id)attributionIcon;
- (void)showDialogRequest:(id)request completionHandler:(id /* block */)handler;
- (void)prepareListDialogRequestIfNeeded:(id *)needed;
- (void)cleanupListDialogRequestIfNeeded:(id)needed;
- (void)requestAuthorizationWithConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)executeSmartPromptIntentWithConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)updateSmartPromptsWithConfiguration:(id)configuration resultCode:(unsigned long long)code error:(id *)error;
- (void)configureSmartPromptIntent:(id)intent withConfiguration:(id)configuration;
- (void)requestFileAccessForURLs:(id)urls workflowName:(id)name workflowID:(id)id completionHandler:(id /* block */)handler;
- (void)swapSiriUIPresenterWithPresenter:(id)presenter;
- (void)presentAlert:(id)alert;
- (void)handleSimpleAlert:(id)alert;
- (void)handleAlertWithTextField:(id)field;
- (void)handleAlertWithDatePicker:(id)picker;
- (void)handleAlertWithMultipleButtons:(id)buttons;
- (BOOL)shouldHandleAlertAsSiriDialog:(id)dialog;
- (void)handleAlertAsSiriDialog:(id)dialog;
- (BOOL)action:(id)action canProvideInputForParameter:(id)parameter;
- (void)action:(id)action provideInputForParameters:(id)parameters withDefaultStates:(id)states prompts:(id)prompts completionHandler:(id /* block */)handler;
- (void)sequentialParameterInputProvider:(id)provider didAdvanceToParameter:(id)parameter action:(id)action defaultState:(id)state prompt:(id)prompt completion:(id /* block */)completion;
- (void)showAskParameterDialogForParameter:(id)parameter action:(id)action defaultState:(id)state prompt:(id)prompt completion:(id /* block */)completion;
- (void)sequentialParameterInputProvider:(id)provider didFinishWithInputtedStates:(id)states;
- (void)sequentialParameterInputProviderDidCancel:(id)cancel;
- (void)showConfirmInteraction:(id)interaction prompt:(id)prompt requireAuthentication:(BOOL)authentication completionHandler:(id /* block */)handler;
- (void)showHandleInteraction:(id)interaction prompt:(id)prompt completionHandler:(id /* block */)handler;
- (void)showPreviewForContentCollection:(id)collection completionHandler:(id /* block */)handler;
- (void)showLinkActionConfirmationWithActionMetadata:(id)metadata showPrompt:(BOOL)prompt dialogString:(id)string viewSnippet:(id)snippet confirmationActionName:(id)name completionHandler:(id /* block */)handler;
- (void)showLinkParameterConfirmationWithActionMetadata:(id)metadata dialogString:(id)string viewSnippet:(id)snippet completionHandler:(id /* block */)handler;
- (void)showLinkResult:(id)result completionHandler:(id /* block */)handler;
- (void)presentAlertWithSmartPromptConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)getEnvironmentForLinkViewSnippetWithCompletion:(id /* block */)completion;
- (void)getPreferredSizeForLinkViewSnippetWithCompletion:(id /* block */)completion;
- (void)requestActionInterfacePresentationForActionClassName:(id)name classNamesByType:(id)type completionHandler:(id /* block */)handler;
- (void)dismissPresentedContentWithCompletionHandler:(id /* block */)handler;
- (void)resolveDescriptor:(id)descriptor completionHandler:(id /* block */)handler;
- (BOOL)shouldNotHandoff;
- (id)dialogTransformer;
- (void)openAppWithBundleIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)openURL:(id)url withBundleIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)configureIntent:(id)intent;
- (BOOL)performSiriRequest:(id)request completionHandler:(id /* block */)handler;
- (BOOL)isRunningInSiri;
- (void)willBeginExecutingShortcutStep:(id)step;
@end

#endif /* WFDialogTransformer_h */
