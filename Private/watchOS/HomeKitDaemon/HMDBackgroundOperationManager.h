//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDBackgroundOperationManager_h
#define HMDBackgroundOperationManager_h
@import Foundation;

#include "HMFObject.h"
#include "HMDBackgroundOperationGraph.h"
#include "HMDBackgroundOperationManagerCurrentDeviceStateDataSource-Protocol.h"
#include "HMDHomeManager.h"
#include "HMFLogging-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class HAPPairingIdentity, HMFTimer, NSMutableArray, NSOperationQueue, NSString;

@interface HMDBackgroundOperationManager : HMFObject<HMFLogging, HMFTimerDelegate> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (retain, nonatomic) NSMutableArray *operationList;
@property (retain, nonatomic) NSMutableArray *dataSourceList;
@property (retain, nonatomic) NSString *backgroundOperationsDataStorePath;
@property (readonly, nonatomic) HMFTimer *expirationTimer;
@property (readonly, nonatomic) HMFTimer *deferralTimer;
@property (readonly, nonatomic) HMFTimer *dataSourceCoalescingTimer;
@property (readonly, nonatomic) HMDBackgroundOperationGraph *opGraph;
@property (retain, nonatomic) HAPPairingIdentity *hh1Key;
@property (retain, nonatomic) HAPPairingIdentity *hh2Key;
@property (retain, nonatomic) NSOperationQueue *queue;
@property (readonly, nonatomic) NSObject<HMDBackgroundOperationManagerCurrentDeviceStateDataSource> *currentDeviceStateDataSource;
@property (weak, nonatomic) HMDHomeManager *homeManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedManager;
+ (id)allowedClasses;
+ (id)logCategory;
+ (id)getAllPairedAccessoriesOfAllHomes:(id)homes;
+ (id)getAllReachableAccessories:(id)accessories;
+ (id)findHomeWhereThisDeviceIsConfirmedPrimaryResident:(id)resident;
+ (id)findAccessoryUsing:(id)using homeManager:(id)manager;
+ (id)findAccessoryUsing:(id)using fromHome:(id)home;
+ (id)findHomeUsingIdentifier:(id)identifier homeManager:(id)manager;

/* instance methods */
- (void)scheduleHH2KeyRollIfNecessary;
- (void)scheduleHH2KeyRollForAccessory:(id)accessory;
- (void)scheduleHH2KeyRollForAirPlayAccessory:(id)accessory;
- (BOOL)_scheduleKeyRollForAccessory:(id)accessory;
- (void)_scheduleHH2AirPlayKeyRollIfNecessary:(id)necessary;
- (void)_scheduleHH2KeyRollIfNecessary:(id)necessary;
- (void)scheduleHH2KeyRollIfNecessaryDueToNotification:(id)notification;
- (void)startSchedulingKeyRollOperations:(BOOL)operations forAccessory:(id)accessory;
- (void)makeSureToLoadPairingIdentities;
- (void)scheduleHH2KeyRollOperationForHome:(id)home isRunningOnResident:(BOOL)resident;
- (void)auditKeyChainEntriesAndScheduleKeyRollOperationsIfNecessaryForHome:(id)home isRunningOnResident:(BOOL)resident;
- (void)auditKeyChainEntryForAccessory:(id)accessory isRunningOnResident:(BOOL)resident;
- (void)auditOwnerPairingForAirPlayAccessory:(id)accessory isRunningOnResident:(BOOL)resident;
- (BOOL)scheduleHH2KeyRollForAccessory:(id)accessory previousIdentity:(id)identity newIdentity:(id)identity;
- (BOOL)scheduleHH2KeyRollForAirPlayAccessory:(id)accessory previousIdentity:(id)identity newIdentity:(id)identity;
- (id)getHH1ControllerKey;
- (id)getHH2ControllerKey;
- (BOOL)shouldWeScheduleKeyRollOperationsOnThisDevice;
- (void)registerForNotifications;
- (id)initWithLocalStorePath:(id)path currentDeviceStateDataSource:(id)source;
- (void)addOperation:(id)operation;
- (BOOL)addOperationDependency:(id)dependency dependsOn:(id)on;
- (void)removeOperation:(id)operation;
- (void)addDataSource:(id)source;
- (void)addDefaultDataSources;
- (void)dataSourceHasUpdate:(id)update;
- (void)_dataSourceHasUpdate:(id)update;
- (void)_runOperationsAfterEvaluatingPredicate:(id)predicate;
- (void)_runOperation:(id)operation withParameters:(id)parameters;
- (void)checkAndRemoveExpiredOperations;
- (void)scheduleTimerToCheckAndRemoveExpiredOperation;
- (void)scheduleTimerToRetryDeferredOperations;
- (void)timerDidFire:(id)fire;
- (void)completeProcessingForOperation:(id)operation;
- (void)evaluateOperations;
- (id)unarchiveFromDisk;
- (void)removeAllOperationsBeforeStartingHH2Migration;
- (void)removeAllOperationForAccessoryIdentifier:(id)identifier;
- (void)removeOperationsForAccessoryIdentifier:(id)identifier operationKind:(id)kind;
- (id)__getReadyToExecuteOperations;
- (void)__removeAllDataSourcesForUnitTesting;
- (void)__removeAllOperationsForUnitTesting;
- (void)__resetAndRebuildOperationGraphForUnitTesting;
- (void)__clearLocalStoreForUnitTesting;
- (id)__initForUnitTesting:(id)testing;
- (id)__unarchiveFromDiskForUnitTesting;
- (void)__archiveToDiskForUnitTesting:(id)testing;
- (id)dumpState;
@end

#endif /* HMDBackgroundOperationManager_h */
