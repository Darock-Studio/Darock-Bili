//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessCodeManagerContext_h
#define HMDAccessCodeManagerContext_h
@import Foundation;

#include "HMDAccessCodeDemoDataMocker.h"
#include "HMDAccessCodeManagerContext-Protocol.h"
#include "HMDBulletinBoard.h"
#include "HMDDevice.h"
#include "HMDHome.h"
#include "HMDHomeAdministratorHandler.h"
#include "HMDHomeWalletKeyManager.h"
#include "HMDRemoteMessageForwarder.h"
#include "HMFLogging-Protocol.h"

@class HMFMessageDispatcher, NSArray, NSNotificationCenter, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDAccessCodeManagerContext : NSObject<HMFLogging, HMDAccessCodeManagerContext>

@property (readonly) HMDAccessCodeDemoDataMocker *demoDataMocker;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, weak) HMDHome *home;
@property (readonly) HMFMessageDispatcher *messageDispatcher;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly, copy) NSUUID *UUID;
@property (readonly) NSNotificationCenter *notificationCenter;
@property (readonly) HMDHomeAdministratorHandler *administratorHandler;
@property (readonly) BOOL featureEnabled;
@property (readonly) BOOL currentDevicePrimaryResident;
@property (readonly) BOOL primaryResidentSupportsAccessCodes;
@property (readonly) BOOL demoDataMockerEnabled;
@property (readonly) long long accessoryReadWriteRetries;
@property (readonly) double accessoryReadWriteRetryTimeInterval;
@property (readonly) double removedUserAccessCodeTimeToLive;
@property (readonly) double dataCleanUpCheckTimerInterval;
@property (readonly) long long residentDataSyncVerificationRetries;
@property (readonly) double residentDataSyncVerificationRetryTimeInterval;
@property (readonly) BOOL currentDeviceResidentCapable;
@property (readonly) BOOL currentDeviceOwnerUser;
@property (readonly) BOOL currentDeviceOwnerController;
@property (readonly) BOOL currentDeviceWatch;
@property (readonly) BOOL residentSupported;
@property (readonly) BOOL homeAppForegrounded;
@property (readonly) BOOL homeOnboardedForAccessCodes;
@property (readonly) HMDDevice *residentCommunicationHandlerPreferredDevice;
@property (readonly) NSArray *accessoriesSupportingAccessCodes;
@property (readonly) NSArray *UUIDsOfAccessoriesSupportingAccessCodes;
@property (readonly) NSArray *UUIDsOfMatterAccessoriesSupportingAccessCodes;
@property (readonly) NSArray *UUIDsOfHAPAccessoriesSupportingAccessCodes;
@property (readonly) NSArray *UUIDsOfUsersWithoutAccessCodes;
@property (readonly) HMDBulletinBoard *bulletinBoard;
@property (readonly) HMDRemoteMessageForwarder *remoteMessageForwarder;
@property (readonly) HMDHomeWalletKeyManager *walletKeyManager;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithHome:(id)home workQueue:(id)queue;
- (id)initWithHome:(id)home workQueue:(id)queue UUID:(id)uuid;
- (void)configureWithMessageDispatcher:(id)dispatcher;
- (BOOL)isFeatureEnabled;
- (BOOL)isCurrentDevicePrimaryResident;
- (BOOL)isDemoDataMockerEnabled;
- (BOOL)isCurrentDeviceResidentCapable;
- (BOOL)isCurrentDeviceOwnerUser;
- (BOOL)isCurrentDeviceOwnerController;
- (BOOL)isCurrentDeviceWatch;
- (BOOL)isResidentSupported;
- (BOOL)isHomeAppForegrounded;
- (BOOL)hasHomeOnboardedForAccessCodes;
- (id)_performMockedWriteRequests:(id)requests;
- (id)performWriteRequests:(id)requests withRetries:(long long)retries timeInterval:(double)interval loggingObject:(id)object;
- (id)performReadRequests:(id)requests withRetries:(long long)retries timeInterval:(double)interval loggingObject:(id)object;
- (id)_performMockedReadRequests:(id)requests;
- (void)redispatchToResidentMessage:(id)message;
- (id)userForMessage:(id)message;
- (id)userWithUUID:(id)uuid;
- (id)hapAccessoryWithUUID:(id)uuid;
- (id)generateAccessCodeValueFromConstraints:(id)constraints accessoryAccessCodes:(id)codes homeAccessCodes:(id)codes;
@end

#endif /* HMDAccessCodeManagerContext_h */
