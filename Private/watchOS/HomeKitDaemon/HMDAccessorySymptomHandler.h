//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessorySymptomHandler_h
#define HMDAccessorySymptomHandler_h
@import Foundation;

#include "HMFObject.h"
#include "HMDAccessory.h"
#include "HMDAccessorySymptomsDelegate-Protocol.h"
#include "HMDSymptomManager.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class HMFMessageDispatcher, NSSet, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDAccessorySymptomHandler : HMFObject<HMFLogging, HMFMessageReceiver, HMDAccessorySymptomsDelegate, NSSecureCoding>

@property (readonly, nonatomic) HMDSymptomManager *symptomManager;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (retain, nonatomic) HMFMessageDispatcher *msgDispatcher;
@property (copy, nonatomic) NSSet *symptoms;
@property (retain, nonatomic) NSUUID *sfDeviceIdentifier;
@property (readonly, copy, nonatomic) NSUUID *accessoryUUID;
@property (readonly, nonatomic) NSUUID *uuid;
@property (readonly, weak, nonatomic) HMDAccessory *accessory;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;

/* class methods */
+ (id)logCategory;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithAccessory:(id)accessory symptoms:(id)symptoms;
- (id)initWithAccessory:(id)accessory symptoms:(id)symptoms symptomManager:(id)manager;
- (void)configureWithWorkQueue:(id)queue messageDispatcher:(id)dispatcher;
- (void)handleAccessoryDeviceUpdated;
- (void)updateSymptoms:(id)symptoms;
- (void)_updateStateWithNewSymptoms:(id)symptoms;
- (void)_sendStatusUpdate;
- (void)_updateStateWithNewSFDeviceIdentifier:(id)identifier;
- (void)_updateFrameworkClients;
- (void)_registerMessages;
- (id)_filteredSymptomsForSymptoms:(id)symptoms;
- (BOOL)_shouldFilterWiFiMismatchSymptom:(id)symptom;
- (void)_handleFixErrorMessage:(id)message;
- (void)symptomManager:(id)manager didChangeSymptoms:(id)symptoms;
- (void)symptomManager:(id)manager didChangeSFDeviceIdentifier:(id)identifier;
- (id)logIdentifier;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)_isWiFiMismatchSymptomCausedByWirelessCarPlay:(id)play;
- (BOOL)_isWiFiMismatchSymptomCausedByWACPairingInHome:(id)home;
@end

#endif /* HMDAccessorySymptomHandler_h */
