//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDEventTriggerExecutionSession_h
#define HMDEventTriggerExecutionSession_h
@import Foundation;

#include "HMDEventTriggerSession.h"
#include "HMDEventDelegate-Protocol.h"
#include "HMDEventTriggerUserConfirmationSession.h"
#include "HMDPredicateUtilities.h"
#include "HMDTriggerConfirmationTimer.h"
#include "HMFDumpState-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class HMFTimer, NSArray, NSDate, NSMapTable, NSMutableArray, NSMutableSet, NSPredicate, NSString;

@interface HMDEventTriggerExecutionSession : HMDEventTriggerSession<HMFDumpState, HMFLogging, HMDEventDelegate, HMFTimerDelegate>

@property (readonly, nonatomic) NSMapTable *writeRequests;
@property (readonly, nonatomic) NSMutableSet *mediaProfiles;
@property (readonly, nonatomic) NSDate *executionStartTime;
@property (readonly, nonatomic) NSMutableArray *triggerEvents;
@property (readonly, nonatomic) NSMutableArray *causingDevices;
@property (readonly, nonatomic) NSArray *endEvents;
@property (retain, nonatomic) NSArray *monitorEvents;
@property (nonatomic) unsigned long long executionState;
@property (readonly, nonatomic) HMDPredicateUtilities *predicateUtilities;
@property (readonly, nonatomic) NSArray *actionSets;
@property (readonly, nonatomic) NSPredicate *evaluationCondition;
@property (readonly, nonatomic) NSArray *recurrences;
@property (readonly, nonatomic) HMDEventTriggerUserConfirmationSession *userConfirmationSession;
@property (retain, nonatomic) HMDTriggerConfirmationTimer *secureTriggerConfirmationTimer;
@property (retain, nonatomic) HMFTimer *startCharacteristicsMonitorTimer;
@property (nonatomic) BOOL actionSetExecutionInProgress;
@property (nonatomic) BOOL restoreInProgress;
@property (nonatomic) BOOL executionCompleteCalled;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithEventTrigger:(id)trigger predicateUtilities:(id)utilities triggerEvent:(id)event causingDevice:(id)device workQueue:(id)queue actionSets:(id)sets evaluationCondition:(id)condition recurrences:(id)recurrences endEvents:(id)events msgDispatcher:(id)dispatcher;
- (id)logIdentifier;
- (BOOL)needsUserConfirmationForDevice:(id)device;
- (id)dumpState;
- (void)evaluateFiringTrigger;
- (void)_evaluateFiringTrigger;
- (void)_executeTriggerAfterEvaluatingCondition:(id)condition;
- (BOOL)containsSecureActionSet;
- (void)cancelSessionIfWaitingForUserResponse;
- (void)postponeRestoreIfWaitingForEndEvent;
- (id)durationEndEvents;
- (void)userResponse:(unsigned long long)response device:(id)device completionHandler:(id /* block */)handler;
- (void)_userResponse:(unsigned long long)response device:(id)device completionHandler:(id /* block */)handler;
- (void)addEvent:(id)event causingDevice:(id)device;
- (void)_addEvent:(id)event causingDevice:(id)device;
- (void)_directlyExecuteActionSetsWithCompletionHandler:(id /* block */)handler;
- (void)_handleActionSetExecutionResponse:(id)response actionSetError:(id)error completion:(id /* block */)completion;
- (void)_activateDurationEvents;
- (void)_activateMonitoringEvents;
- (void)_activateEvents:(id)events;
- (id)_monitoringEventsFromActionSetResponse:(id)response;
- (id)valueInActionSetWriteResponse:(id)response actionSetUUID:(id)uuid accUUID:(id)uuid serviceID:(id)id characteristicID:(id)id;
- (void)_callExecutionComplete:(id)complete callDelegate:(BOOL)delegate;
- (void)_submitAnalyticsData:(id)data;
- (void)_callExecutionComplete:(id)complete;
- (void)_removeUserDialog;
- (void)_restoreState;
- (void)_handleMonitoringEvent:(id)event;
- (void)handleSessionPlaybackStateUpdatedNotification:(id)notification;
- (void)_callExecutionCompleteIfNoMoreOutstandingRequests;
- (id)didOccurEvent:(id)event causingDevice:(id)device;
- (void)timerDidFire:(id)fire;
@end

#endif /* HMDEventTriggerExecutionSession_h */
