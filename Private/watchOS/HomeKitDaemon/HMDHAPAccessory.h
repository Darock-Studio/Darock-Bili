//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDHAPAccessory_h
#define HMDHAPAccessory_h
@import Foundation;

#include "HMDAccessory.h"
#include "HAPAccessoryDelegate-Protocol.h"
#include "HAPAccessoryServerNotification-Protocol.h"
#include "HMDAccessoryAdvertisement.h"
#include "HMDAccessoryMetric.h"
#include "HMDAccessoryMinimumUserPrivilegeCapable-Protocol.h"
#include "HMDAccessorySymptomHandler.h"
#include "HMDAccessoryUserManagement-Protocol.h"
#include "HMDAnalyticsHAPServiceData.h"
#include "HMDBulletinBoard.h"
#include "HMDCHIPAccessoryStorage.h"
#include "HMDCameraProfileSettingsManager.h"
#include "HMDDataStreamController.h"
#include "HMDDataStreamSocketController-Protocol.h"
#include "HMDDoorbellChimeController.h"
#include "HMDHAPMetadata.h"
#include "HMDLightProfile.h"
#include "HMDLowPowerModeProfile.h"
#include "HMDMediaProfile.h"
#include "HMDMessageRouter-Protocol.h"
#include "HMDNetworkRouterController.h"
#include "HMDNetworkRouterProfile.h"
#include "HMDNetworkRouterSatelliteProfile.h"
#include "HMDPendingCharacteristic.h"
#include "HMDService.h"
#include "HMDServiceOwner-Protocol.h"
#include "HMDSiriEndpointProfile.h"
#include "HMDSiriEndpointProfileMetricsDispatcher.h"
#include "HMDSiriEndpointProfileMetricsDispatcherDataSource-Protocol.h"
#include "HMDSiriEndpointProfileMetricsDispatcherFactory-Protocol.h"
#include "HMDTargetControllerManager.h"
#include "HMDUser.h"
#include "HMDWiFiManagementController.h"
#include "HMFConnectivityInfo.h"
#include "HMFTimerDelegate-Protocol.h"
#include "HMMTRAccessoryServerDelegate-Protocol.h"
#include "HMMTRHMDHAPAccessoryDelegate-Protocol.h"

@class BOOL *, HAPSocketInfo, HMCameraUserNotificationSettings, HMDAccessoryDiagnosticsManager, HMFPairingIdentity, HMFTimer, HMMTRAccessoryServer, NAFuture, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSSet, NSString;

@interface HMDHAPAccessory : HMDAccessory<HMDSiriEndpointProfileMetricsDispatcherDataSource, HMDSiriEndpointProfileMetricsDispatcherFactory, HMMTRAccessoryServerDelegate, HMMTRHMDHAPAccessoryDelegate, HMDAccessoryMinimumUserPrivilegeCapable, HMDServiceOwner, HAPAccessoryDelegate, HMFTimerDelegate, HAPAccessoryServerNotification, HMDAccessoryUserManagement> {
  /* instance variables */
  BOOL _supportsTargetController;
}

@property (readonly) HMDWiFiManagementController *wiFiManagementController;
@property (readonly, nonatomic) HMDNetworkRouterController *networkRouterController;
@property (readonly, nonatomic) HMDNetworkRouterProfile *networkRouterProfile;
@property (readonly, nonatomic) HMDNetworkRouterSatelliteProfile *networkRouterSatelliteProfile;
@property (readonly, copy) NSData *nfcReaderIdentifier;
@property (readonly) HAPSocketInfo *socketInfo;
@property (readonly, copy) NSDictionary *bonjourDeviceInfo;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *urlString;
@property (readonly, copy) NSDictionary *assistantObject;
@property (readonly) HMDSiriEndpointProfile *siriEndpointProfile;
@property (readonly, nonatomic) BOOL isCertifiedForSiriEndpoint;
@property (readonly, nonatomic) BOOL supportsSiriEndpoint;
@property (readonly) BOOL hasSiriEndpointService;
@property (readonly) BOOL hasSiriSettingsService;
@property (readonly) BOOL supportsSiriEndpointOnBoarding;
@property (readonly) NSSet *lightProfiles;
@property (readonly) HMDLightProfile *lightProfileWithNaturalLighting;
@property (readonly, copy) HMCameraUserNotificationSettings *cameraProfileNotificationSettings;
@property (readonly) BOOL supportsCameraRecordingFeature;
@property (readonly, nonatomic) BOOL supportsSiri;
@property (readonly) BOOL hasTelevisionService;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) unsigned short threadCapabilities;
@property (readonly, nonatomic) unsigned short threadStatus;
@property (readonly, nonatomic) BOOL threadActiveTransport;
@property (readonly, nonatomic) unsigned short metric_threadCapabilities;
@property (readonly) HMDMediaProfile *mediaProfile;
@property (readonly) BOOL hasSmartSpeakerService;
@property (readonly) NSObject<HMDDataStreamSocketController> *dataStreamSocketController;
@property (readonly, nonatomic) HMMTRAccessoryServer *chipAccessoryServer;
@property (readonly, copy) NSNumber *chipNodeId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) HMDLowPowerModeProfile *lpmProfile;
@property (copy, nonatomic) NSString *uniqueIdentifier;
@property (readonly, nonatomic) BOOL paired;
@property (nonatomic) unsigned long long activationAttempts;
@property (nonatomic) unsigned long long pairingAttempts;
@property (copy, nonatomic) NSNumber *accessoryFlags;
@property (nonatomic) long long certificationStatus;
@property (copy, nonatomic) NSNumber *backedOffStateNumber;
@property (retain, nonatomic) HMFTimer *accessoryDiscoveryBackoffTimer;
@property (retain, nonatomic) HMFTimer *accessoryKeyRefreshTimer;
@property (copy, nonatomic) NSData *broadcastKey;
@property (copy, nonatomic) NSNumber *keyUpdatedStateNumber;
@property (copy, nonatomic) NSDate *keyUpdatedTime;
@property unsigned char keyGenerationType;
@property BOOL keyGenerationInProgress;
@property (copy, nonatomic) NSSet *identifiersForBridgedAccessories;
@property (retain, nonatomic) HMDAccessoryAdvertisement *accessoryAdvertisement;
@property (copy) NSNumber *hasOnboardedForNaturalLighting;
@property unsigned long long siriEndpointCapabilities;
@property (retain, nonatomic) NSMutableSet *activeSessionRestoreClients;
@property (retain, nonatomic) HMFTimer *sessionRestoreTimer;
@property (nonatomic) double lastLinkChangeSessionCheckTime;
@property (nonatomic) unsigned long long lastSessionStatus;
@property (retain, nonatomic) HMDAccessoryMetric *accessoryMetric;
@property (nonatomic) BOOL hardwareSupport;
@property (retain, nonatomic) HMDTargetControllerManager *targetControllerManager;
@property (retain, nonatomic) HMDAccessorySymptomHandler *symptomsHandler;
@property (copy, nonatomic) NSNumber *sleepInterval;
@property BOOL supportsAccessCode;
@property BOOL supportsWalletKey;
@property (retain) HMDSiriEndpointProfileMetricsDispatcher *siriEndpointProfileMetricsDispatcher;
@property (retain, nonatomic) HMDUser *cachedRemovedUser;
@property (readonly, nonatomic) NSNumber *internalEnhancedAuthConfigNumber;
@property (readonly, nonatomic) NSNumber *internalEnhancedAuthMethod;
@property (readonly, nonatomic) NSString *serializedIdentifier;
@property (retain, nonatomic) NSMutableArray *discoveredServices;
@property (retain, nonatomic) NSData *publicKey;
@property (retain, nonatomic) NSString *pairingUsername;
@property (retain, nonatomic) HMDDataStreamController *dataStreamController;
@property (retain, nonatomic) HMDNetworkRouterController *networkRouterController;
@property (copy, nonatomic) NSData *setupHash;
@property (copy, nonatomic) NSNumber *wiFiTransportCapabilities;
@property (retain, nonatomic) HMDWiFiManagementController *wiFiManagementController;
@property (retain, nonatomic) HMDPendingCharacteristic *pendingPowerOn;
@property (retain, nonatomic) HMDAccessoryDiagnosticsManager *diagnosticsManager;
@property (readonly) NSObject<HMDMessageRouter> *primaryResidentMessageRouter;
@property (retain, nonatomic) HMDDoorbellChimeController *doorbellChimeController;
@property (retain, nonatomic) HMDBulletinBoard *bulletinBoard;
@property (retain, nonatomic) NSMutableArray *powerOnCompletionRoutines;
@property (retain) NSMutableArray *pendingReads;
@property (copy, nonatomic) HMCameraUserNotificationSettings *cameraProfileNotificationSettings;
@property (nonatomic) unsigned long long suspendedState;
@property (nonatomic) BOOL reachableViaBSP;
@property (copy, nonatomic) NSNumber *wakingViaCharacteristicWithIID;
@property (readonly) HMDHAPMetadata *hapMetadata;
@property (retain, nonatomic) NSNumber *needsOnboarding;
@property BOOL hasSiriEndpointService;
@property (copy, nonatomic) NSNumber *matterVendorID;
@property (copy, nonatomic) NSNumber *matterProductID;
@property (readonly) NAFuture *didConfigureCHIPAccessoryServerFuture;
@property (readonly, copy, nonatomic) NSArray *transportInformationInstances;
@property (retain, nonatomic) NSNumber *internalThreadCapabilities;
@property (retain, nonatomic) NSNumber *internalThreadStatus;
@property (retain, nonatomic) NSNumber *internalThreadActive;
@property (readonly, nonatomic) unsigned long long enhancedAuthMethod;
@property (readonly, copy) NSArray *services;
@property (readonly, nonatomic) NSSet *serviceTypeUUIDs;
@property (readonly, nonatomic) NSSet *initialServiceTypeUUIDs;
@property (readonly, nonatomic) HMDService *primaryService;
@property (readonly) BOOL clientRegisteredForNotifications;
@property (readonly, copy, nonatomic) NSNumber *hapInstanceId;
@property (retain, nonatomic) HMFConnectivityInfo *connectivityInfo;
@property (readonly, nonatomic) HMDCameraProfileSettingsManager *cameraProfileSettingsManager;
@property (readonly, copy, nonatomic) NSSet *cameraProfiles;
@property (readonly) BOOL hasCameraStreamService;
@property BOOL shouldDisconnectOnIdle;
@property (readonly) BOOL shouldAutoDiscoverAccessoryServer;
@property (readonly) BOOL supportsHAP;
@property (readonly) BOOL supportsCHIP;
@property (retain) NSMutableDictionary *accessCodeCache;
@property (nonatomic) BOOL hasPostedBulletinForAccessCodeOnboarding;
@property (nonatomic) BOOL hasPostedBulletinForWalletKeyOnboarding;
@property (retain, nonatomic) HMDCHIPAccessoryStorage *chipStorage;
@property (retain, nonatomic) NSNumber *matterNodeID;
@property long long communicationProtocol;
@property (retain, nonatomic) NSArray *targetUUIDs;
@property (readonly, copy, nonatomic) HMDAnalyticsHAPServiceData *primaryHAPServiceForAnalytics;
@property (readonly, copy, nonatomic) NSArray *hapServicesListForAnalytics;
@property (copy) NSString *lastLockOperationEventRequestIdentifier;
@property (copy, nonatomic) NSNumber *supportsMatterAccessCode;
@property (copy, nonatomic) NSNumber *supportsMatterWalletKey;
@property (copy, nonatomic) NSNumber *supportsNaturalLighting;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *shortDescription;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription;
@property (readonly, copy, nonatomic) NSArray *attributeDescriptions;
@property (readonly) BOOL supportsUserManagement;
@property (readonly, copy) HMFPairingIdentity *pairingIdentity;

/* class methods */
+ (double)chipPairingModeActiveDuration;
+ (id)_allowedClassesForServiceUnArchiving;
+ (Class)transactionClass;
+ (unsigned long long)getAWDTransportTypeWithLinkType:(long long)type;
+ (BOOL)supportsSecureCoding;
+ (void)encodeServices:(id)services forXPCCoder:(id)xpccoder metadata:(id)metadata;
+ (BOOL)hasMessageReceiverChildren;

/* instance methods */
- (void)wirelessResumeInit;
- (void)powerOnComplete:(id)complete;
- (void)_wirelessPowerOn:(id /* block */)on;
- (void)wirelessPowerOn:(id /* block */)on;
- (void)_cancelPowerOn;
- (void)cancelPowerOn;
- (BOOL)isPoweringOn;
- (BOOL)supportsWoL;
- (BOOL)isSuspended;
- (BOOL)canProceedWithRequests:(id)requests suspended:(BOOL *)suspended error:(id *)error;
- (BOOL)canWakeUpViaWoL;
- (BOOL)canReturnCachedValueForCharacteristic:(id)characteristic;
- (BOOL)shouldDiscoverSuspendCapableAccessoryServer:(id)server;
- (void)updateSuspendedStateWithConnectionState:(BOOL)state hapAccessory:(id)accessory;
- (void)updateSuspendedStateWithWakeNumber:(id)number hapAccessory:(id)accessory;
- (BOOL)_handleUpdatedServicesForLowPowerModeProfile;
- (void)_wakeSuspendedHAPAccessoryToPerformOperation:(long long)operation linkType:(long long)type operationBlock:(id /* block */)block errorBlock:(id /* block */)block activity:(id)activity;
- (void)_wol_runAccessoryTransaction:(id)transaction localOnly:(BOOL)only;
- (void)_wol_updateSuspendCapableHAPAccessoryServer:(id)server;
- (void)_wol_processDidRemoveHPAccessoryServer:(id)server;
- (void)_wol_processReadWriteResponseForCharacteristic:(id)characteristic isRead:(BOOL)read error:(id)error;
- (void)_wol_updateWakingViaCharacteristicForWriteRequests:(id)requests;
- (void)_wol_updateWakingViaCharacteristicForWriteResponses:(id)responses;
- (void)_wol_ignoreWakingViaCharacteristicUpdateFromChangedService:(id)service;
- (void)_registerForMessages_lowPowerMode;
- (BOOL)_validateIncomingMessage:(id)message;
- (void)_handleWakeSuspendedAccessoryMessage:(id)message;
- (void)profile:(id)profile didUpdateAccessoryState:(unsigned long long)state;
- (void)profile:(id)profile didUpdateWoWLANInfos:(id)wlaninfos;
- (void)setDidConfigureCHIPAccessoryServer;
- (id)waitForChipAccessoryServerWithFlow:(id)flow;
- (id)waitForDoorLockClusterObjectWithFlow:(id)flow;
- (void)removeAllCHIPPairingsWithCompletion:(id /* block */)completion;
- (void)configureCHIPAccessory;
- (void)handleUpdatedCHIPPropertiesOnAccessoryModel:(id)model actions:(id)actions;
- (void)handleCHIPSendRemoteRequestMessage:(id)message;
- (void)setCHIPReportHandler:(id /* block */)handler;
- (BOOL)isHMMTRAccessoryServer:(id)server;
- (BOOL)hmmtrHasIPServer:(id)ipserver;
- (BOOL)hmmtrHasBLEServer:(id)bleserver;
- (BOOL)hmmtrHasThreadServer:(id)server;
- (void)getLinkQualityForAccessory:(id)accessory forMessage:(id)message;
- (unsigned long long)_wifiRSSIToLinkQuality:(id)quality;
- (unsigned long long)_threadRSSIToLinkQuality:(id)quality;
- (id)requestAccessoryDiagnostics;
- (void)requestAccessoryDiagnosticCounterReset;
- (void)handleFetchCHIPPairingsMessage:(id)message;
- (void)handleRemoveCHIPPairingsMessage:(id)message;
- (void)handleActivateCHIPPairingModeMessage:(id)message;
- (void)handleActivateCHIPPairingModeAndCreateSetupPayloadStringMessage:(id)message;
- (void)handleRemoveCorrespondingSystemCommissionerMessage:(id)message;
- (void)handleGetAllUsersMessage:(id)message;
- (void)handleClearUserMessage:(id)message;
- (void)handleClearCredentialMessage:(id)message;
- (void)handleSetStartUpColorTemperature:(id)temperature;
- (void)handleGetStartUpColorTemperature:(id)temperature;
- (void)_removeSystemCommissionerPairingFromAccessoryPairings:(id)pairings completion:(id /* block */)completion;
- (void)_handleFetchCHIPPairingsMessage:(id)message;
- (void)_handleRemoveCHIPPairingsMessage:(id)message;
- (void)_handleActivateCHIPPairingModeMessage:(id)message;
- (void)_handleActivateCHIPPairingModeAndCreateSetupPayloadStringMessage:(id)message;
- (void)_handleUpdatedPairings:(id)pairings previousPairings:(id)pairings;
- (void)_fetchPairingsAndUpdateTransaction;
- (void)_updateCHIPAccessoryWithFabricLabel:(id)label completionHandler:(id /* block */)handler;
- (void)updateCHIPAccessoryName:(id)name;
- (void)_handleHomeNameChangedNotification:(id)notification;
- (void)didUpdatePairingsForAccessoryServer:(id)server;
- (void)handleEventReport:(id)report dictionary:(id)dictionary flow:(id)flow;
- (void)handleCharacteristicEventReportMessage:(id)message;
- (void)handleAttributeReport:(id)report dictionary:(id)dictionary;
- (void)updateSupportsMatterWallet:(id)wallet;
- (void)updateSupportsMatterAccessCodeForAttributeReport:(id)report;
- (id)numberFromAttributeReport:(id)report;
- (void)_handleUpdatedServicesForDataStreamController:(id)controller;
- (void)addDataStreamBulkSendListener:(id)listener fileType:(id)type;
- (void)removeDataStreamBulkSendListener:(id)listener;
- (BOOL)canAcceptBulkSendListeners;
- (BOOL)canAcceptBulkSendListenersSync;
- (BOOL)bulkSendListenersRequireCharacteristicReadsSync;
- (void)sendTargetControlWhoAmIWithIdentifier:(unsigned int)identifier;
- (void)openBulkSendSessionForFileType:(id)type reason:(id)reason metadata:(id)metadata queue:(id)queue callback:(id /* block */)callback;
- (BOOL)_handleUpdatedServicesForMediaProfile:(id)profile;
- (BOOL)isThreadTheCurrentlyActiveTransport;
- (BOOL)supportsThreadCommissioning;
- (void)handleUpdatedServicesForThreadManagementWithCompletion:(id /* block */)completion;
- (void)_handleUpdatedServicesForThreadManagementWithActivity:(id)activity;
- (id)_findThreadControlPointCharacteristicWithError:(id *)error;
- (void)_writeThreadControlPointCharacteristic:(id)characteristic value:(id)value activity:(id)activity completion:(id /* block */)completion;
- (void)maybeCommissionToThreadNetworkWithCompletion:(id /* block */)completion;
- (void)_maybeCommissionToThreadNetworkWithActivity:(id)activity completion:(id /* block */)completion;
- (BOOL)_validateCurrentThreadCredentials:(id)credentials metadata:(id)metadata;
- (void)commissionToThreadNetworkWithPairingEvent:(id)event completion:(id /* block */)completion;
- (void)_commissionToThreadNetworkWithActivity:(id)activity pairingEvent:(id)event completion:(id /* block */)completion;
- (void)_writeCredentialsForThreadNetworkWithActivity:(id)activity pairingEvent:(id)event metadata:(id)metadata threadControlPointCharacteristic:(id)characteristic completion:(id /* block */)completion;
- (void)configureSiriEndpointProfileMetricsDispatcherWithFactory:(id)factory logEventSubmitter:(id)submitter dailyScheduler:(id)scheduler;
- (id)createSiriEndpointProfileMetricsDispatcherWithAccessoryUUID:(id)uuid homeUUID:(id)uuid logEventSubmitter:(id)submitter;
- (void)_handleUpdateMediaSourceDisplayOrder:(id)order;
- (void)getSupportedSiriAudioConfiguration:(id /* block */)configuration;
- (BOOL)_resolveAudioAbility:(id)ability;
- (BOOL)_resolveSupportedSiriInputType:(id)type;
- (void)setSelectedSiriAudioConfiguration:(id)configuration;
- (void)_updateSiriAudioFormat:(id)format;
- (BOOL)isCameraRecordingFeatureSupported;
- (BOOL)_handleUpdatedServicesForCameraProfiles:(id)profiles;
- (void)handleUpdatedCameraProfileSettingsForAccessoryModel:(id)model;
- (void)_handleUpdatedCameraSettingsModelValuesForAccessoryModel:(id)model;
- (void)_handleUpdatedCameraDerivedPropertiesModelValuesForAccessoryModel:(id)model;
- (void)encodeCameraProfileNotificationSettingsWithCoder:(id)coder;
- (id)cameraProfileNotificationSettingsFromCoder:(id)coder;
- (void)updateCameraProfileNotificationSettings:(id)settings;
- (BOOL)_handleUpdatedServicesForLightProfiles:(id)profiles;
- (void)updateBridgedAccessoryLightProfilesSettings;
- (void)updateLightProfilesSettings;
- (long long)computeSiriEndpointCertification;
- (BOOL)_handleUpdatedServicesForSiriEndpointProfile:(id)profile;
- (void)_checkForSiriEndpointServiceChange;
- (void)writeValue:(id)value toCharacteristic:(id)characteristic queue:(id)queue completion:(id /* block */)completion;
- (BOOL)_handleUpdatedServicesForDoorbellController;
- (BOOL)shouldSubmitRoutineConfigurationEventForSiriEndpointProfileMetricsDispatcher:(id)dispatcher;
- (id)accessoryCategoryTypeForSiriEndpointProfileMetricsDispatcher:(id)dispatcher;
- (id)profileFieldsForSiriEndpointProfileMetricsDispatcher:(id)dispatcher;
- (id)compositeSettingsControllerManagerForSiriEndpointProfileMetricsDispatcher:(id)dispatcher;
- (void)assignBonjourDeviceInfo:(id)info socketInfo:(id)info;
- (BOOL)_hh2ShouldFilterAccessoryProfile:(id)profile;
- (id)_hh2HandleUpdatedServicesForProfilesAndControllers:(id)controllers;
- (void)migrateCharacteristicsForHAPAccessoryIfNeeded;
- (void)_updateCharacteristicsFromService:(id)service context:(id)context;
- (void)_removeHAPAccessoryFileFromDisk;
- (id)_accessoryForHH2MigrationFileName;
- (void)updateHasPostedBulletinForWalletKeyOnboarding:(BOOL)onboarding;
- (BOOL)hasAnyServiceWithTypes:(id)types;
- (void)__createNetworkRouterController:(id)controller;
- (BOOL)__removeNetworkRouterController;
- (void)postNetworkRouterProfileNotification:(id)notification object:(id)object;
- (BOOL)__createNetworkRouterProfileAndController:(id)controller;
- (BOOL)__createSatelliteNetworkRouterProfile:(id)profile;
- (BOOL)_handleUpdatedServicesForNetworkRouterProfileAndController:(id)controller;
- (void)initializeBTLEScan;
- (void)initiateScan:(id /* block */)scan;
- (void)scanningCompleteWithAccessoryFound:(BOOL)found suspended:(BOOL)suspended;
- (void)_stopScan;
- (void)stopScan;
- (BOOL)_handleUpdatedServicesForWiFiManagementController;
- (id)init;
- (id)initWithHAPMetadata:(id)hapmetadata;
- (id)initWithTransaction:(id)transaction home:(id)home;
- (id)initWithTransaction:(id)transaction home:(id)home hapMetadata:(id)metadata;
- (BOOL)_validateConnectivityInfo:(id)info;
- (BOOL)isEqual:(id)equal;
- (id)messageSendPolicy;
- (BOOL)canWakeViaCustomWoBLE;
- (void)_registerForMessages;
- (BOOL)shouldEnableDaemonRelaunch;
- (id)transportReports;
- (void)configureWithHome:(id)home msgDispatcher:(id)dispatcher configurationTracker:(id)tracker initialConfiguration:(BOOL)configuration;
- (void)setDefaultPreferredMediaUserIfNeeded;
- (void)setDefaultPreferredMediaUser;
- (void)configureBulletinNotification;
- (id)settingTopicForKeyPath:(id)path;
- (id)eventSourceIdentifier;
- (double)eventTimestamp;
- (id)eventForwarder;
- (id)eventStoreReadHandle;
- (void)postUpdateEventsIfDifferentWithPreferredMediaUUID:(id)uuid selectionType:(unsigned long long)type;
- (void)_postUpdateEventsIfDifferent:(id)different;
- (void)updateAccessoryFlags:(id)flags;
- (void)setInternalEnhancedAuthMethod:(id)method configNumber:(unsigned long long)number;
- (void)testSetInternalEnhancedAuthMethod:(id)method;
- (void)testSetInternalEnhancedAuthConfigNumber:(id)number;
- (void)handleUpdatedAuthMethod;
- (void)_handleUpdatedAuthMethod;
- (void)_updateBroadcastKey:(id)key keyUpdatedStateNumber:(id)number keyUpdatedTime:(double)time;
- (void)setBroadcastKey:(id)key keyUpdatedStateNumber:(id)number keyUpdatedTime:(id)time;
- (void)evaluateSymptomHandler;
- (void)saveHardwareSupport:(BOOL)support;
- (void)_saveHardwareSupport:(BOOL)support;
- (void)saveTargetUUIDs:(id)uuids;
- (void)_saveTargetUUIDs:(id)uuids;
- (void)updateTargetUUIDs:(id)uuids;
- (void)_reconcileAccessControlSetting;
- (BOOL)providesHashRouteID;
- (void)updateActiveDisconnectOnIdleTimeout:(double)timeout;
- (id)endpointIdentifier;
- (BOOL)hasBattery;
- (BOOL)custom1WoBLE;
- (BOOL)supportsAnnounce;
- (BOOL)supportsMusicAlarm;
- (BOOL)supportsMultiUser;
- (BOOL)supportsDoorbellChime;
- (id)saveSupportsMatterAccessCode:(id)code;
- (BOOL)_handleUpdatedServicesForAccessCodes;
- (id)saveSupportsMatterWalletKey:(id)key;
- (BOOL)_handleUpdatedServicesForWalletKey;
- (id)saveSupportsNaturalLighting:(id)lighting;
- (BOOL)supportsNetworkProtection;
- (BOOL)needsAirplayAccess;
- (BOOL)supportsMinimumUserPrivilege;
- (BOOL)_serviceSupportsMinimumUserPrivilege:(id)privilege;
- (void)handleUpdatedMinimumUserPrivilege:(long long)privilege;
- (void)handleUpdatedPassword:(id)password;
- (id)name;
- (id)getConfiguredName;
- (void)_renameAccessory:(id)accessory resetName:(BOOL)name message:(id)message;
- (void)_handleUpdatedName:(id)name;
- (void)_updateAuthMethodWithServer:(id)server completion:(id /* block */)completion;
- (void)_configNumberUpdated;
- (void)_challengeAccessoryAuthMethod;
- (id)_messagesForUpdatedRoom:(id)room;
- (void)_handleRoomChangedFromOldRoomName:(id)name;
- (void)handleRoomNameChanged:(id)changed;
- (void)handleRoomChanged:(id)changed;
- (void)__checkLowBatteryUpdatedNotification:(id)notification;
- (void)__handleCharacteristicsChangedPayload:(id)payload;
- (void)handleCharacteristicsChangedNotification:(id)notification;
- (BOOL)isReadingRequiredForBTLEAccessoryCharacteristic:(id)characteristic forceReadFWVersion:(BOOL)fwversion;
- (BOOL)updateAccessoryInformationWithCharacteristicType:(id)type serviceType:(id)type value:(id)value accessoryTransaction:(id)transaction;
- (id)namesOfServicesShowingTilesInHomeApp;
- (id)updateAccessoryFlagsAndNotifyClients:(id)clients;
- (void)timerDidFire:(id)fire;
- (BOOL)isPaired;
- (void)handlePairedStateChange:(BOOL)change;
- (void)setPairingUsername:(id)username publicKey:(id)key;
- (BOOL)associateControllerKeyWithAccessory:(id)accessory error:(id *)error;
- (void)savePublicKeyToKeychain;
- (BOOL)isPrimary;
- (void)verifyPairingWithCompletionHandler:(id /* block */)handler;
- (BOOL)isSecuritySessionOpen;
- (void)addUser:(id)user completionHandler:(id /* block */)handler;
- (void)removeUser:(id)user completionHandler:(id /* block */)handler;
- (void)pairingsWithCompletionHandler:(id /* block */)handler;
- (BOOL)wasUpdatedWithServiceType:(id)type;
- (void)updatePrimaryServiceIfNeeded;
- (void)_updatePrimaryServiceIfNeededWithService:(id)service;
- (void)_addService:(id)service;
- (void)_removeService:(id)service;
- (id)serviceWithUUID:(id)uuid;
- (id)serviceWithSPIClientIdentifier:(id)identifier;
- (void)_handleUpdatedServicesForProfilesAndControllers:(BOOL)controllers;
- (void)_handleAddServiceTransaction:(id)transaction message:(id)message;
- (void)_handleServiceRemovedTransaction:(id)transaction message:(id)message;
- (BOOL)_supportsMediaAccessControl;
- (BOOL)supportsTargetController;
- (void)addTarget:(id)target buttonConfiguration:(id)configuration;
- (void)removeTarget:(id)target;
- (void)updateTarget:(id)target name:(id)name buttonConfiguration:(id)configuration;
- (void)registerForActiveIdentifierNotifications;
- (id)targetControllerButtonConfiguration;
- (unsigned long long)targetControllerTicksPerSecond;
- (void)notifyClientsOfTargetControlSupportUpdate;
- (void)_notifyClientsOfTargetControlSupportUpdate;
- (void)_setTargetControllerSession;
- (void)configureTargetControllerWithCompletion:(id /* block */)completion;
- (void)_configureTargetControllerWithCompletion:(id /* block */)completion;
- (void)_autoConfigureTargetController;
- (void)autoConfigureTargetController;
- (void)acknowledgeTargetControlService:(id)service active:(BOOL)active;
- (void)updateButtonConfigurationForTarget:(id)target;
- (void)addHostedAccessory:(id)accessory;
- (void)removeHostedAccessory:(id)accessory;
- (id)bridge;
- (void)addTransportInformationInstance:(id)instance;
- (void)removeTransportInformationInstance:(id)instance;
- (void)_addHAPAccessory:(id)hapaccessory;
- (id)expectedTransport;
- (long long)linkLayerType;
- (BOOL)hasIPLink;
- (BOOL)hasIPServer;
- (BOOL)isIPSecureSessionEstablished;
- (BOOL)hasBTLELink;
- (BOOL)hasBLEServer;
- (BOOL)isBLELinkConnected;
- (BOOL)isBLESecureSessionEstablished;
- (BOOL)supportsThread;
- (BOOL)hasThreadServer;
- (BOOL)isThreadSecureSessionEstablished;
- (unsigned long long)supportedTransports;
- (long long)linkSpeed;
- (id)preferredHAPAccessoryForOperation:(long long)operation linkType:(long long *)type;
- (void)establishLocalHAPConnectionWithQueue:(id)queue completion:(id /* block */)completion;
- (id)getPrimaryHAPAccessories;
- (id)getHAPAccessoryMatchingInstanceId;
- (id)configureService:(id)service;
- (id)_characteristicsToEnableEvents;
- (id)_notificationsByClientIDForCharacteristics:(id)characteristics;
- (void)enableNotificationsWithHAPAccessory:(id)hapaccessory homeNotificationsEnabled:(BOOL)enabled;
- (void)_configureWithAccessoryServices:(id)services changedCharacteristics:(id *)characteristics;
- (void)configureWithAccessory:(id)accessory homeNotificationsEnabled:(BOOL)enabled queue:(id)queue completion:(id /* block */)completion;
- (void)unregisterFromAccessoryServer;
- (void)cleanupNotificationCenterObservers;
- (void)unconfigure;
- (void)unconfigureAccessoryWithServerIdentifier:(id)identifier linkType:(long long)type updateReachability:(BOOL)reachability;
- (id)matchingTransportInformationWithServerIdentifier:(id)identifier instanceID:(id)id linkType:(long long)type;
- (id)matchingTransportInformation:(id)information;
- (BOOL)matchesHAPAccessoryWithServerIdentifier:(id)identifier instanceID:(id)id;
- (id)matchingTransportInformationWithServerIdentifier:(id)identifier linkType:(long long)type;
- (id)matchingTransportInformationWithServerIdentifier:(id)identifier;
- (id)matchingHAPAccessoryWithServerIdentifier:(id)identifier linkType:(long long)type;
- (id)matchingHAPAccessoryWithServerIdentifier:(id)identifier;
- (id)matchingHAPAccessoryWithLinkType:(long long)type;
- (id)matchingHAPAccessoryServerIdentifierWithLinkType:(long long)type;
- (BOOL)matchesHAPAccessory:(id)hapaccessory;
- (BOOL)matchesHAPAccessoryWithServerIdentifier:(id)identifier linkType:(long long *)type;
- (void)performOperation:(long long)operation linkType:(long long)type operationBlock:(id /* block */)block errorBlock:(id /* block */)block;
- (void)_performOperation:(long long)operation linkType:(long long)type operationBlock:(id /* block */)block errorBlock:(id /* block */)block;
- (void)_retrieveHAPAccessoryToPerformOperation:(long long)operation linkType:(long long)type retries:(unsigned long long)retries operationBlock:(id /* block */)block errorBlock:(id /* block */)block activity:(id)activity;
- (void)_retrieveHAPAccessoryToPerformOperation:(long long)operation linkType:(long long)type operationBlock:(id /* block */)block errorBlock:(id /* block */)block activity:(id)activity;
- (BOOL)residentCanWakeForWOL;
- (void)_handleUnreachableAccessoryToPerformOperation:(long long)operation operationBlock:(id /* block */)block errorBlock:(id /* block */)block;
- (BOOL)canWakeBasedOnCharacteristicRequests:(id)requests;
- (void)writeCharacteristicValues:(id)values source:(unsigned long long)source queue:(id)queue completionHandler:(id /* block */)handler;
- (void)writeCharacteristicValues:(id)values source:(unsigned long long)source message:(id)message queue:(id)queue completionHandler:(id /* block */)handler;
- (void)writeCharacteristicValues:(id)values source:(unsigned long long)source message:(id)message queue:(id)queue logEvent:(id)event completionHandler:(id /* block */)handler;
- (void)wakeOrScanForSuspendedAccessoryForRequests:(id)requests source:(unsigned long long)source completion:(id /* block */)completion;
- (void)_writeCharacteristicValues:(id)values localOperationRequired:(BOOL)required source:(unsigned long long)source completionHandler:(id /* block */)handler errorBlock:(id /* block */)block;
- (void)_writeCharacteristicValues:(id)values localOperationRequired:(BOOL)required source:(unsigned long long)source message:(id)message completionHandler:(id /* block */)handler logEvent:(id)event errorBlock:(id /* block */)block;
- (id)getFullError:(id)error source:(unsigned long long)source suspended:(BOOL)suspended;
- (id)_updatedResponseTuplesForRequests:(id)requests error:(id)error source:(unsigned long long)source suspended:(BOOL)suspended;
- (id)_updatedResponseForRemoteResponse:(id)response;
- (void)readCharacteristicValues:(id)values source:(unsigned long long)source queue:(id)queue completionHandler:(id /* block */)handler;
- (void)readCharacteristicValues:(id)values source:(unsigned long long)source message:(id)message queue:(id)queue logEvent:(id)event completionHandler:(id /* block */)handler;
- (void)_wakeAccessoryIfNeededForCharacteristicRequests:(id)requests source:(unsigned long long)source activity:(id)activity completion:(id /* block */)completion;
- (void)autoUpdateCachedCountDownCharacteristics:(id)characteristics;
- (void)_readCharacteristicValues:(id)values localOperationRequired:(BOOL)required source:(unsigned long long)source message:(id)message logEvent:(id)event completionHandler:(id /* block */)handler errorBlock:(id /* block */)block;
- (id)hmdCharacteristicFromHapCharacteristic:(id)characteristic;
- (id)hmdCharacteristicForInstanceId:(id)id;
- (BOOL)shouldConfigureTargetController;
- (id)_createSymptomHandler;
- (void)saveBluetoothAddress:(id)address;
- (id)initWithCoder:(id)coder;
- (BOOL)_shouldFilterAccessoryProfile:(id)profile;
- (id)getBluetoothAddress;
- (void)encodeWithCoder:(id)coder;
- (BOOL)supportsPrimaryUserInfoSubscription;
- (BOOL)supportsPreferredMediaUser;
- (void)handleHomeUserRemovedNotification:(id)notification;
- (void)_handleHomeUserRemovedNotification:(id)notification;
- (void)routeUpdatePreferredMediaUser:(id)user;
- (void)handleUpdatePreferredMediaUser:(id)user;
- (void)runTransactionWithPreferredMediaUserUUID:(id)uuid selectionType:(unsigned long long)type completion:(id /* block */)completion;
- (void)notifyValue:(id)value previousValue:(id)value error:(id)error forCharacteristic:(id)characteristic requestMessage:(id)message;
- (id)hapCharacteristicWriteRequests:(id)requests hapAccessory:(id)accessory hmdResponses:(id *)responses mapping:(id *)mapping;
- (void)populateHMDCharacteristicResponses:(id)responses hapResponses:(id)responses mapping:(id)mapping overallError:(id)error requests:(id)requests;
- (void)_writeCharacteristicValues:(id)values hapAccessory:(id)accessory source:(unsigned long long)source message:(id)message logEvent:(id)event completionHandler:(id /* block */)handler;
- (void)_readCharacteristicValues:(id)values hapAccessory:(id)accessory source:(unsigned long long)source message:(id)message logEvent:(id)event completionHandler:(id /* block */)handler;
- (void)_writeValue:(id)value forCharacteristic:(id)characteristic hapAccessory:(id)accessory authorizationData:(id)data message:(id)message;
- (id)_prepareMessagePayloadForCharacteristicRemoteWrite:(id)write;
- (BOOL)_handleCharacteristicError:(id)error read:(BOOL)read characteristic:(id)characteristic didRelayMessage:(id)message;
- (void)submitCharacteristicWriteErrorLogEvent:(id)event startDate:(id)date message:(id)message error:(id)error;
- (void)_relayWriteToCharacteristic:(id)characteristic toResidentForMessage:(id)message viaDevice:(id)device;
- (void)_relayReadFromCharacteristic:(id)characteristic toResidentForMessage:(id)message viaDevice:(id)device;
- (void)_parseResponseFromRemotePeer:(id)peer message:(id)message error:(id)error characteristic:(id)characteristic;
- (void)submitCharacteristicReadErrorLogEvent:(id)event message:(id)message error:(id)error;
- (BOOL)hasValidCachedValueForCharacteristic:(id)characteristic shouldLog:(BOOL)log;
- (void)_readValueForCharacteristic:(id)characteristic hapAccessory:(id)accessory requestMessage:(id)message;
- (void)updateNotificationEnabled:(BOOL)enabled forCharacteristics:(id)characteristics onBehalfOf:(id)of;
- (BOOL)isClientRegisteredForNotifications;
- (void)resetNotificationEnabledTime;
- (void)handleRemoteGatewayNotificationRegistration:(id)registration enable:(BOOL)enable enableTime:(id)time;
- (void)_notifyCharacteristicNotificationChanges:(id)changes enableNotification:(BOOL)notification message:(id)message clientIdentifier:(id)identifier;
- (void)_notifyClientsWithNotificationChangesForCharacteristics:(id)characteristics characteristicErrors:(id)errors enableNotification:(BOOL)notification message:(id)message;
- (void)disableNotificationsForBundleID:(id)id completionHandler:(id /* block */)handler;
- (void)_disableNotificationsForBundleID:(id)id completionHandler:(id /* block */)handler;
- (void)setNotificationsEnabled:(BOOL)enabled forCharacteristics:(id)characteristics clientIdentifier:(id)identifier matchingHAPAccessory:(id)hapaccessory;
- (void)setNotificationsEnabled:(BOOL)enabled forCharacteristics:(id)characteristics clientIdentifier:(id)identifier;
- (void)_setNotificationsEnabled:(BOOL)enabled forCharacteristics:(id)characteristics clientIdentifier:(id)identifier matchingHAPAccessory:(id)hapaccessory;
- (void)enableNotification:(BOOL)notification forCharacteristicIDs:(id)ids message:(id)message clientIdentifier:(id)identifier;
- (void)enableNotification:(BOOL)notification forCharacteristics:(id)characteristics message:(id)message clientIdentifier:(id)identifier;
- (void)_enableNotification:(BOOL)notification forCharacteristics:(id)characteristics message:(id)message clientIdentifier:(id)identifier;
- (BOOL)_remotelySetNotificationsEnabled:(BOOL)enabled forCharacteristic:(id)characteristic clientIdentifier:(id)identifier;
- (void)_setNotificationsEnabled:(BOOL)enabled forCharacteristics:(id)characteristics hapAccessory:(id)accessory activity:(id)activity completion:(id /* block */)completion;
- (void)_groupCharacteristicsNotificationWithCharacteristics:(id)characteristics enable:(BOOL)enable activity:(id)activity clientIdentifier:(id)identifier groupCharacteristicsError:(id *)error characteristicsToModifyLocally:(id *)locally characteristicsToModifyOnResident:(id *)resident characteristicsToDisableOnResident:(id *)resident characteristicsErrorsMapFailingToModify:(id *)modify;
- (void)_enableBroadcastNotifications:(BOOL)notifications hapAccessory:(id)accessory forCharacteristics:(id)characteristics;
- (void)_forceUpdateBTLEKeyGenerationForServer:(id)server;
- (void)_forceEnableReachabilityPingForPrimaryResident:(id)resident;
- (void)_checkResidentDeviceForReachabilityPing;
- (void)handleResidentDeviceUpdated:(id)updated;
- (BOOL)_isRegisteredForNotificationsByForegroundProcess;
- (void)_checkHAPSessionRestore;
- (void)checkHAPSessionRestore;
- (void)_doPrimaryResidentUpdated;
- (double)_getDurationAndUpdateCurrentTime:(id)time currentTime:(id *)time;
- (void)_logServerReachabilityNotification:(BOOL)notification withDuration:(id)duration withLinkType:(id)type;
- (void)_logServerReachabilityNotification:(id)notification;
- (void)handlePrimaryResidentUpdateNotification:(id)notification;
- (void)reachabilityDidChangeToReachable:(id)reachable;
- (void)reachabilityDidChangeToUnreachable:(id)unreachable;
- (void)notifyClientsOfUpdatedAccessoryControllableValue;
- (void)_reenableNotificationsOnWatch;
- (void)_updateAccessoryTracking;
- (BOOL)_shouldTrackAccessoryWithPriority:(BOOL *)priority;
- (BOOL)_containsSecureCharacteristic;
- (void)updateTrackedAccessoryStateNumber:(id)number;
- (void)_updateStateForTrackedAccessory:(id)accessory stateNumber:(id)number;
- (void)_evaluateLocalOperation:(long long)operation state:(id)state completion:(id /* block */)completion;
- (id)findService:(id)service;
- (id)findCharacteristic:(id)characteristic forService:(id)service;
- (id)findCharacteristic:(id)characteristic;
- (id)findCharacteristicType:(id)type forServiceType:(id)type;
- (id)findCharacteristicsByType:(id)type forServiceType:(id)type;
- (id)findCharacteristicsByTypes:(id)types forServiceType:(id)type;
- (id)findServiceWithServiceType:(id)type;
- (void)_checkRegisterForServerNotification;
- (void)_updateReachability;
- (void)setReachability:(BOOL)reachability serverIdentifier:(id)identifier linkType:(long long)type;
- (long long)reachableTransports;
- (void)_handleAccessoryUpdateReachability:(BOOL)reachability linkType:(long long)type;
- (id)runtimeState;
- (void)_doReachabilityUpdateForServer:(id)server;
- (void)_submitStateNumberChangeMetric;
- (void)_submitReachabilityDelayedMetric:(id)metric;
- (void)indicateNotificationFromServer:(id)server notifyType:(unsigned long long)type withDictionary:(id)dictionary;
- (void)_renameService:(id)service name:(id)name message:(id)message completionBlock:(id /* block */)block;
- (void)_handleRenameService:(id)service;
- (void)_handleUpdateAssociatedServiceType:(id)type;
- (id)characteristicWithAuthorizationDataMessage:(id)message;
- (void)_handleUpdateCharacteristicAuthorizationDataMessageForOwnerUser:(id)user;
- (void)_handleUpdateCharacteristicAuthorizationDataMessageForNonOwnerUser:(id)user;
- (BOOL)supportsIdentify;
- (void)handleIdentifyAccessoryMessage:(id)message;
- (id)characteristicsPassingTest:(id /* block */)test;
- (void)_handleDiscoveryBackoffTimerFired;
- (void)backOffAccessoryForStateNumber:(id)number backoffPeriod:(double)period;
- (void)_removeBackedoffAccessoryForStateNumber:(id)number;
- (void)_handleKeyRefreshTimerFired;
- (void)_handleConfigureTargets:(id)targets;
- (void)associateWithAccessoryAdvertisement:(id)advertisement;
- (void)addAdvertisement:(id)advertisement;
- (void)removeAdvertisement:(id)advertisement;
- (BOOL)supportsWiFiReconfiguration;
- (void)_updateReachabilityMetric:(BOOL)metric withDuration:(id)duration;
- (void)handleMultipleCharacteristicsUpdated:(id)updated message:(id)message completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)_handleMultipleCharacteristicsUpdated:(id)updated message:(id)message completionQueue:(id)queue completionHandler:(id /* block */)handler;
- (void)notifyingCharacteristicStateNumberUpdated:(id)updated;
- (void)__updateNotifyingCharacteristicStateNumber:(id)number;
- (void)didUpdateConnectionState:(BOOL)state linkLayerType:(long long)type withError:(id)error;
- (void)didUpdateConnectionState:(BOOL)state sessionInfo:(id)info linkLayerType:(long long)type bookkeeping:(id)bookkeeping withError:(id)error;
- (void)accessory:(id)accessory didUpdateReachabilityState:(BOOL)state;
- (BOOL)isNotificationEnabledForClientIdentifier:(id)identifier;
- (BOOL)isNonClientNotificationEnabled;
- (BOOL)isNotificationEnabled;
- (BOOL)supportsPersonalRequests;
- (id)dumpState;
- (id)dumpSimpleState;
- (id)primaryIPServer;
- (id)anyIPServer;
- (void)requestResource:(id)resource queue:(id)queue completionHandler:(id /* block */)handler;
- (id)getOrCreateServiceUpdateTransactionForKey:(id)key fromDictionary:(id)dictionary;
- (void)readInitialRequiredCharacteristicsForAccessory:(id /* block */)accessory;
- (void)transactionObjectUpdated:(id)updated newValues:(id)values message:(id)message;
- (id)getTransportInformationArray;
- (BOOL)updateTransportInformation:(id)information localSource:(BOOL)source;
- (void)transactionObjectRemoved:(id)removed message:(id)message;
- (id)transactionWithObjectChangeType:(unsigned long long)type;
- (id)modelObjectWithChangeType:(unsigned long long)type;
- (id)modelObjectWithChangeType:(unsigned long long)type version:(long long)version;
- (void)populateModelObject:(id)object version:(long long)version;
- (id)backingStoreObjects:(long long)objects;
- (id)messageReceiverChildren;
- (void)makeServiceNameConsistent:(id)consistent withName:(id)name completionHandler:(id /* block */)handler;
- (id)createUpdateServiceTransactionWithServiceUUID:(id)uuid;
- (id)backingStoreTransactionWithName:(id)name;
- (void)stopReachabilityCheck;
- (void)startReachabilityCheck;
- (BOOL)supportsUnreachablePing;
- (void)setSuspendedState:(unsigned long long)state shouldNotify:(BOOL)notify;
- (BOOL)isReachableViaBSP;
- (void)setCommunicationProtocolIfNeeded;
- (void)handleSetHasOnboardedForNaturalLighting:(id)lighting;
- (void)handleAccessoryConfigured:(id)configured;
- (BOOL)isSecureSessionEstablished;
- (void)startPing;
- (void)stopPing;
- (id)currentActiveSessionRestoreClients;
- (void)registerForSessionRestore:(id)restore;
- (void)deregisterFromSessionRestore:(id)restore;
- (double)sessionCheckPeriod;
- (void)_deregisterAllClientsFromSessionRestore;
- (unsigned long long)numActiveSessionClients;
- (void)_checkSession;
- (void)_checkBridgedAccessoryOnConfigured;
- (void)_notifyBridgedAccessoryReachabilityChange:(id)change;
- (void)_stopSessionMonitor;
- (void)_startSessionMonitor;
- (void)_updateSessionRestoreOnServer:(BOOL)server;
- (void)_handleSessionRestoreTimerFired;
- (void)_checkSessionRestoreOnLinkStateChange;
- (id)getAccessoryDiagnostics;
- (void)resetAccessoryDiagnosticCounters;
- (void)addSession:(long long)session;
- (void)removeSession:(long long)session;
- (void)_handleValidatePairingAuthMethodMessage:(id)message;
- (void)handleLinkQualityRequestMessage:(id)message;
- (void)_handleUpdateAccessoryConnectionState:(id)state;
- (id)logIdentifier;
@end

#endif /* HMDHAPAccessory_h */
