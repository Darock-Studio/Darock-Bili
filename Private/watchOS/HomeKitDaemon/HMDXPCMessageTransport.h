//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDXPCMessageTransport_h
#define HMDXPCMessageTransport_h
@import Foundation;

#include "HMFMessageTransport.h"
#include "HMDProcessMonitor.h"
#include "HMDXPCClientConnectionFactory.h"
#include "HMDXPCMessageCountTracker.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageTransportDelegate-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"
#include "NSXPCListenerDelegate-Protocol.h"

@class HMXPCMessageTransportConfiguration, NSArray, NSDictionary, NSMutableDictionary, NSMutableSet, NSString, NSXPCInterface, NSXPCListener;
@protocol OS_dispatch_queue;

@interface HMDXPCMessageTransport : HMFMessageTransport<NSXPCListenerDelegate, HMFLogging, HMFMessageTransportDelegate, HMFTimerDelegate> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<OS_dispatch_queue> *_queue;
  NSXPCInterface *_exportedInterface;
  NSXPCInterface *_remoteObjectInterface;
  HMDXPCMessageCountTracker *_xpcCounterTracker;
  NSMutableDictionary *_cachedResponses;
}

@property (readonly) NSXPCListener *listener;
@property (readonly, copy) HMXPCMessageTransportConfiguration *configuration;
@property (readonly) HMDXPCClientConnectionFactory *clientConnectionFactory;
@property (readonly, copy) NSDictionary *activeRequests;
@property (readonly) HMDProcessMonitor *processMonitor;
@property (readonly, copy) NSArray *connections;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)defaultTransport;
+ (id)accessorySetupTransport;
+ (id)logCategory;

/* instance methods */
- (id)initWithConfiguration:(id)configuration listener:(id)listener clientConnectionFactory:(id)factory;
- (id)initWithConfiguration:(id)configuration;
- (void)start;
- (void)stop;
- (void)sendMessage:(id)message completionHandler:(id /* block */)handler;
- (id)logIdentifier;
- (void)messageTransport:(id)transport didReceiveMessage:(id)message;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)submitCounters;
- (id)dumpState;
- (void)cacheResponseMessage:(id)message;
- (void)cacheResponsesForMessageWithIdentifier:(id)identifier transport:(id)transport reportContext:(id)context;
- (id)__retrieveAndClearMessagesForCachedResponseEntry:(id)entry;
- (id)retrieveAndClearMessagesForRequestInfo:(id)info;
- (void)_reportCompletion:(id)completion;
- (void)reportCompletionForMessageWithIdentifier:(id)identifier;
- (void)timerDidFire:(id)fire;
@end

#endif /* HMDXPCMessageTransport_h */
