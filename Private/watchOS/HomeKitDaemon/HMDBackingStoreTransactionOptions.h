//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDBackingStoreTransactionOptions_h
#define HMDBackingStoreTransactionOptions_h
@import Foundation;

#include "HMFObject.h"
#include "HMFLogging-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSString;

@interface HMDBackingStoreTransactionOptions : HMFObject<HMFLogging, NSSecureCoding>

@property (retain, nonatomic) NSString *label;
@property (readonly, nonatomic) unsigned long long destination;
@property (readonly, nonatomic) unsigned long long source;
@property (readonly, nonatomic) BOOL mustReplay;
@property (readonly, nonatomic) BOOL mustPush;
@property (readonly, nonatomic) BOOL mustSaveArchiveAtomically;
@property (readonly, nonatomic) unsigned long long cdTransactionAuthor;
@property (readonly, nonatomic) NSString *clientIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)optionsWithSource:(unsigned long long)source destination:(unsigned long long)destination label:(id)label mustReplay:(BOOL)replay mustPush:(BOOL)push mustSaveArchiveAtomically:(BOOL)atomically cdTransactionAuthor:(unsigned long long)author clientIdentifier:(id)identifier;
+ (id)optionsWithSource:(unsigned long long)source destination:(unsigned long long)destination label:(id)label mustReplay:(BOOL)replay mustPush:(BOOL)push mustSaveArchiveAtomically:(BOOL)atomically;
+ (id)optionsWithSource:(unsigned long long)source destination:(unsigned long long)destination mustReplay:(BOOL)replay mustPush:(BOOL)push mustSaveArchiveAtomically:(BOOL)atomically;
+ (id)optionsWithSource:(unsigned long long)source destination:(unsigned long long)destination mustReplay:(BOOL)replay mustPush:(BOOL)push;
+ (id)defaultLocalOptions;
+ (id)defaultXPCOptions;
+ (id)defaultXPCOptionsWithClientIdentifier:(id)identifier;
+ (id)defaultXPCOptionsWithCDTransactionAuthor:(unsigned long long)author clientIdentifier:(id)identifier;
+ (id)defaultCloudOptionsForInitialGraphLoad;
+ (id)defaultCloudOptions;
+ (id)cloudRequiresPushOptions;
+ (id)localPushBackOptions;
+ (id)defaultIDSOptions;
+ (id)defaultLegacyCloudOptions;
+ (id)defaultMetadataCloudOptions;
+ (id)defaultResidenceOptions;
+ (id)defaultPreferencesOptions;
+ (id)defaultOutOfSyncOptions;
+ (id)stringForHMDBackingStoreTransactionSource:(unsigned long long)source;
+ (id)stringForHMDBackingStoreDestination:(unsigned long long)destination;
+ (id)logCategory;

/* instance methods */
- (id)initWithSource:(unsigned long long)source destination:(unsigned long long)destination label:(id)label mustReplay:(BOOL)replay mustPush:(BOOL)push mustSaveArchiveAtomically:(BOOL)atomically cdTransactionAuthor:(unsigned long long)author clientIdentifier:(id)identifier;
- (id)initWithSource:(unsigned long long)source destination:(unsigned long long)destination label:(id)label mustReplay:(BOOL)replay mustPush:(BOOL)push mustSaveArchiveAtomically:(BOOL)atomically;
- (id)initWithSource:(unsigned long long)source destination:(unsigned long long)destination label:(id)label mustReplay:(BOOL)replay mustPush:(BOOL)push;
- (id)initWithSource:(unsigned long long)source destination:(unsigned long long)destination;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)_description;
- (id)debugString:(BOOL)string;
- (BOOL)isEqual:(id)equal;
- (id)logIdentifier;
@end

#endif /* HMDBackingStoreTransactionOptions_h */
