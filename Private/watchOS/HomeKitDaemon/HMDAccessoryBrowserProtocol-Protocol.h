//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDAccessoryBrowserProtocol_Protocol_h
#define HMDAccessoryBrowserProtocol_Protocol_h
@import Foundation;

@protocol HMDAccessoryBrowserProtocol <NSObject>

@property (readonly, copy) NSArray *unassociatedAccessories;
@property (readonly, nonatomic) BOOL active;
@property (readonly) HMMTRAccessoryServerBrowser *chipAccessoryServerBrowser;
@property (readonly, nonatomic) BOOL hasActiveWACPairing;
@property (readonly, nonatomic) HMDMediaBrowser *mediaBrowser;

/* instance methods */
- (void)updateRemoteAccessoryBrowsing:(BOOL)browsing whbScan:(BOOL)scan;
- (void)setQOS:(long long)qos;
- (void)activate:(BOOL)activate;
- (id)unpairedAccessoryWithUUID:(id)uuid;
- (id)beginActiveAssertionWithReason:(id)reason;
- (void)endActiveAssertion:(id)assertion;
- (BOOL)isDiscoveringAccessoriesWithLinkType:(long long)type;
- (void)startDiscoveringAccessories;
- (void)startDiscoveringAccessoriesWithLinkType:(long long)type;
- (void)stopDiscoveringAccessories;
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)type;
- (void)stopDiscoveringForUnpairedAccessoriesWithLinkType:(long long)type;
- (void)startDiscoveringPairedAccessories;
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)type;
- (void)startDiscoveringAccessoriesNeedingReprovisioning;
- (void)evaluateAccessoryDiscoveryState;
- (void)restartBrowsers;
- (void)registerProgressHandler:(id /* block */)handler unpairedAccessoryUUID:(id)uuid;
- (void)pairAccessory:(id)accessory configuration:(id)configuration completionHandler:(id /* block */)handler;
- (void)pairAccessoryWithDescription:(id)description configuration:(id)configuration progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)detail consent:(BOOL)consent;
- (void)handleSetupCodeAvailable:(id)available;
- (void)cancelPairingWithAccessory:(id)accessory error:(id)error;
- (void)cancelPairingWithAccessoryDescription:(id)description error:(id)error;
- (void)resetConfiguration;
- (void)resetUnassociatedCurrentAccessory;
- (void)registerPairedAccessory:(id)accessory transports:(unsigned long long)transports setupHash:(id)hash delegate:(id)delegate;
- (void)deregisterPairedAccessory:(id)accessory;
- (void)btleAccessoryReachabilityProbeTimer:(BOOL)timer;
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)identifiers;
- (void)tombstoneAccessoryServer:(id)server;
- (void)resurrectAccessoryServer:(id)server;
- (void)addUnpairedAccessoryServer:(id)server identifier:(id)identifier;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)identifiers forceScan:(BOOL)scan withCompletion:(id /* block */)completion;
- (void)reprovisionAccessoryWithIdentifier:(id)identifier wiFiPSK:(id)psk countryCode:(id)code withCompletion:(id /* block */)completion;
- (id)discoveredAccessoryServers;
- (id)dumpUnassociatedAccessories;
- (id)dumpRegisteredPairedAccessories;
- (id)dumpBrowsingConnections;
- (void)discoverAccessories:(id)accessories;
- (void)discoverAccessoryServer:(id)server linkType:(long long)type errorHandler:(id /* block */)handler;
- (BOOL)isBrowsingAllowed;
- (void)handleNewlyPairedAccessory:(id)accessory linkType:(long long)type;
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)identifier linkType:(long long)type completion:(id /* block */)completion;
- (id)accessoryBrowserHapProtocol;
- (void)addUnassociatedAccessory:(id)accessory forDeviceSetup:(BOOL)setup;
- (void)removeUnassociatedAccessory:(id)accessory;
- (void)removeUnassociatedAccessoryWithIdentifier:(id)identifier;
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)description;
- (void)removePairingInformationForAccessoryServer:(id)server;
- (void)setBrowseableLinkTypes:(id)types;
- (void)updatePairingWithProgress:(long long)progress accessoryServer:(id)server;
- (void)handleConnectionUpdateWithBonjourDeviceInfo:(id)info socketInfo:(id)info;
@end

#endif /* HMDAccessoryBrowserProtocol_Protocol_h */
