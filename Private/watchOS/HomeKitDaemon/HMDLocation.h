//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDLocation_h
#define HMDLocation_h
@import Foundation;

#include "HMFObject.h"
#include "HMDCLLocationManager-Protocol.h"
#include "HMDCLLocationManagerDelegate-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class NSHashTable, NSMapTable, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface HMDLocation : HMFObject<HMFLogging, HMFTimerDelegate, HMDCLLocationManagerDelegate>

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *handlerQueue;
@property (readonly, nonatomic) NSObject<HMDCLLocationManager> *locationManager;
@property (nonatomic) int authStatus;
@property (nonatomic) long long locationAuthorized;
@property (readonly, nonatomic) NSHashTable *singleLocationDelegates;
@property (readonly, nonatomic) NSMutableSet *batchLocationContexts;
@property (readonly, nonatomic) NSMapTable *regionStateDelegatesByRegionIdentifier;
@property (readonly, nonatomic) NSMapTable *pendingRegionMonitoringRequests;
@property (readonly, nonatomic) NSMapTable *pendingRegionCallbacks;
@property (readonly, nonatomic) NSMapTable *regionStates;
@property (nonatomic) BOOL beingConfigured;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedManager;
+ (id)bundleForLocationManager;
+ (id)logCategory;
+ (id)_getAlmanacWithLocation:(id)location;
+ (id)_getAlmanacWithLocation:(id)location date:(id)date;
+ (id)findEvent:(id)event withGeo:(id)geo;
+ (id)sunriseTimeForLocation:(id)location;
+ (id)nextSunriseTimeForLocation:(id)location date:(id)date;
+ (id)sunsetTimeForLocation:(id)location;
+ (id)nextSunsetTimeForLocation:(id)location date:(id)date;
+ (BOOL)isAccurateLocation:(id)location;
+ (void)timeZoneISOCountryCodeForCLLocationAsync:(id)async withCompletion:(id /* block */)completion;

/* instance methods */
- (id)init;
- (id)initWithLocationManager:(id)manager handlerQueue:(id)queue;
- (void)dealloc;
- (void)startExtractingBatchLocationsForDelegate:(id)delegate;
- (void)stopExtractingBatchLocationsForDelegate:(id)delegate;
- (void)startExtractingSingleLocationForDelegate:(id)delegate;
- (BOOL)_canLocationBeExtracted;
- (void)_extractSingleLocationForDelegate:(id)delegate;
- (id)getCurrentLocation;
- (void)registerForRegionUpdate:(id)update withDelegate:(id)delegate completionHandler:(id /* block */)handler;
- (void)deregisterForRegionUpdate:(id)update completionHandler:(id /* block */)handler;
- (void)timerDidFire:(id)fire;
- (void)_notifySingleLocationDelegatesWithLocation:(id)location;
- (void)_notifySingleLocationDelegate:(id)delegate withLocation:(id)location;
- (void)_startExtractingBatchLocationsForDelegate:(id)delegate;
- (void)_stopExtractingBatchLocationsForContext:(id)context;
- (void)_updateWithLocationAuthorizationStatus:(int)status;
- (id)_delegateforRegion:(id)region;
- (void)_updateRegionState:(long long)state forRegion:(id)region;
- (void)_updateEntryForRegion:(id)region;
- (void)_updateExitForRegion:(id)region;
- (void)beingConfigured:(BOOL)configured completionHandler:(id /* block */)handler;
- (void)_handleDeterminedState:(long long)state forRegion:(id)region;
- (void)locationManager:(id)manager didUpdateLocations:(id)locations;
- (void)locationManager:(id)manager didFailWithError:(id)error;
- (void)locationManagerDidChangeAuthorization:(id)authorization;
- (void)locationManager:(id)manager didDetermineState:(long long)state forRegion:(id)region;
- (void)locationManager:(id)manager didEnterRegion:(id)region;
- (void)locationManager:(id)manager didExitRegion:(id)region;
- (void)locationManager:(id)manager didStartMonitoringForRegion:(id)region;
- (void)getLOIForCurrentLocationWithCompletionHandler:(id /* block */)handler;
- (void)getCoreRoutineLOIForCurrentLocationWithCompletionHandler:(id /* block */)handler;
@end

#endif /* HMDLocation_h */
