//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDHomeWalletKeyAccessoryManager_h
#define HMDHomeWalletKeyAccessoryManager_h
@import Foundation;

#include "HMFObject.h"
#include "HMDDevice.h"
#include "HMDHome.h"
#include "HMDHomeWalletDataSource-Protocol.h"
#include "HMDHomeWalletKeyAccessoryManagerDelegate-Protocol.h"
#include "HMDHomeWalletKeyAccessoryManagerDeviceCredentialKeyOperation.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"

@class HMFMessageDispatcher, NSArray, NSMutableDictionary, NSMutableSet, NSNotificationCenter, NSNumber, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMDHomeWalletKeyAccessoryManager : HMFObject<HMFLogging, HMFMessageReceiver>

@property (weak) HMDHome *home;
@property (readonly, copy) NSUUID *uuid;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property (retain) HMFMessageDispatcher *messageDispatcher;
@property (readonly) NSNotificationCenter *notificationCenter;
@property (readonly) NSObject<HMDHomeWalletDataSource> *dataSource;
@property BOOL currentDevicePrimaryResident;
@property BOOL canConfigureAccessories;
@property (readonly, copy) NSMutableDictionary *pendingAccessoryDeviceCredentialKeyOperationByDeviceUUID;
@property (copy) HMDHomeWalletKeyAccessoryManagerDeviceCredentialKeyOperation *pendingPrimaryResidentDeviceCredentialKeyOperation;
@property (readonly, copy) NSMutableDictionary *nfcReaderKeyConfigureStateByAccessoryUUID;
@property (readonly) HMDDevice *primaryResidentDevice;
@property (readonly, copy) NSNumber *walletKeyColor;
@property (readonly, copy) NSArray *matterAccessoriesSupportingWalletKey;
@property (retain) NSMutableSet *logEvents;
@property (readonly) BOOL isPrimaryResidentOrSoleOwnerController;
@property (readonly, copy) NSString *walletKeyColorPreferenceKey;
@property (weak) NSObject<HMDHomeWalletKeyAccessoryManagerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;

/* class methods */
+ (id)createMatterIssuerKeyDataForUser:(id)user withUserIndex:(id)index flow:(id)flow;
+ (id)logCategory;

/* instance methods */
- (id)initWithUUID:(id)uuid workQueue:(id)queue;
- (id)initWithUUID:(id)uuid workQueue:(id)queue dataSource:(id)source notificationCenter:(id)center;
- (void)configureWithHome:(id)home;
- (void)configureAccessory:(id)accessory withDeviceCredentialKey:(id)key flow:(id)flow completion:(id /* block */)completion;
- (void)configureAllAccessoriesWithDeviceCredentialKey:(id)key flow:(id)flow completion:(id /* block */)completion;
- (void)fetchWalletKeyColorWithFlow:(id)flow completion:(id /* block */)completion;
- (void)handleWalletKeyRemoved;
- (void)handleFetchWalletKeyColorMessage:(id)message;
- (void)createAccessoryDeviceCredentialKeyPendingOperationWithAccessoriesUUIDs:(id)uuids deviceCredentialKey:(id)key user:(id)user deviceUUID:(id)uuid;
- (void)createAccessoryDeviceCredentialKeyPendingOperationWithAccessories:(id)accessories deviceCredentialKey:(id)key user:(id)user deviceUUID:(id)uuid;
- (void)handleFetchMissingWalletKeysMessage:(id)message;
- (void)handleRestoreMissingWalletKeysMessage:(id)message;
- (id)restoreMissingWalletKeys:(id)keys onAccessory:(id)accessory flow:(id)flow;
- (id)fetchMissingWalletKeysForAccessoryUUID:(id)uuid flow:(id)flow;
- (id)fetchMissingWalletKeysForUserUUID:(id)uuid flow:(id)flow;
- (id)fetchMissingWalletKeysForAccessory:(id)accessory users:(id)users flow:(id)flow;
- (id)missingWalletKeysForAccessoryUUID:(id)uuid usersByUniqueID:(id)id accessoryUsersByUniqueID:(id)id flow:(id)flow;
- (void)handleConfigureAccessoriesWithDeviceCredentialKeyMessage:(id)message;
- (void)handleHMDHomeConfigureMatterAccessoryWithReaderKeyMessage:(id)message;
- (void)_handleAddIssuerKeysToAccessoriesMessage:(id)message;
- (void)addIssuerKeysToMatterAccessoriesWithFlow:(id)flow;
- (id)addIssuerKeysToMatterAccessories:(id)accessories flow:(id)flow;
- (id)addIssuerKeysToMatterAccessory:(id)accessory flow:(id)flow;
- (id)addIssuerKeysToMatterTTUAccessoriesForUser:(id)user flow:(id)flow;
- (id)addIssuerKeyForUser:(id)user toMatterAccessory:(id)accessory flow:(id)flow;
- (void)handleAccessoryCharacteristicsChangedNotification:(id)notification;
- (void)handlePrimaryResidentUpdateNotification:(id)notification;
- (void)handleHomeNFCReaderKeyKeychainItemAvailableNotification:(id)notification;
- (void)handleHomeDidEnableCharacteristicNotification:(id)notification;
- (void)handleHomeDidDisableCharacteristicNotification:(id)notification;
- (void)handleHomeAddedAccessoryNotification:(id)notification;
- (void)handleHomeAccessoryRemovedNotification:(id)notification;
- (void)handleAccessoryConfigured:(id)configured;
- (void)handleWalletKeySupportDidChange:(id)change;
- (void)handleHomeUserAddedNotification:(id)notification;
- (void)configureAccessories:(id)accessories withDeviceCredentialKey:(id)key flow:(id)flow completion:(id /* block */)completion;
- (void)requestPrimaryResident:(id)resident toConfigureAccessories:(id)accessories withDeviceCredentialKey:(id)key flow:(id)flow completion:(id /* block */)completion;
- (void)configureNFCReaderKeyForAllAccessoriesWithReason:(id)reason;
- (void)configureNFCReaderKeyForAccessory:(id)accessory flow:(id)flow;
- (void)fetchOrConfigureNFCReaderKeyForAccessory:(id)accessory flow:(id)flow completion:(id /* block */)completion;
- (id)configureNFCReaderKeyOnMatterAccessory:(id)accessory flow:(id)flow;
- (void)fetchIsAccessoryConfiguredWithReaderKey:(id)key accessory:(id)accessory flow:(id)flow completion:(id /* block */)completion;
- (void)removeNfcReaderKeyWithIdentifier:(id)identifier accessory:(id)accessory flow:(id)flow completion:(id /* block */)completion;
- (void)configureAccessoryWithNfcReaderKey:(id)key accessory:(id)accessory flow:(id)flow completion:(id /* block */)completion;
- (void)configureNotificationsWithReason:(id)reason;
- (void)registerForNotificationsWithReason:(id)reason;
- (void)handlePendingDeviceCredentialKeysSyncForAccessory:(id)accessory withReason:(id)reason;
- (void)handlePendingDeviceCredentialKeysSyncForAccessories:(id)accessories withReason:(id)reason;
- (void)unregisterForNotificationsWithReason:(id)reason;
- (void)configureAccessories:(id)accessories withDeviceCredentialKey:(id)key forDeviceWithUUID:(id)uuid user:(id)user flow:(id)flow completion:(id /* block */)completion;
- (void)configureAccessories_HH1:(id)hh1 withDeviceCredentialKey:(id)key forDeviceWithUUID:(id)uuid user:(id)user flow:(id)flow completion:(id /* block */)completion;
- (void)configureAccessories_HH2:(id)hh2 withDeviceCredentialKey:(id)key forDeviceWithUUID:(id)uuid user:(id)user flow:(id)flow completion:(id /* block */)completion;
- (id)performHAPWriteRequestsHH2:(id)hh2 home:(id)home flow:(id)flow;
- (id)configureMatterAccessory:(id)accessory withDeviceCredentialKey:(id)key forUser:(id)user flow:(id)flow;
- (id)writeRequestsWithAccessories:(id)accessories home:(id)home deviceCredentialKey:(id)key user:(id)user flow:(id)flow;
- (void)fetchWalletKeyColorWithAccessory:(id)accessory flow:(id)flow;
- (id)walletKeyColorWithCharacteristicValue:(id)value flow:(id)flow;
- (void)fetchWalletKeyColorForAccessories:(id)accessories flow:(id)flow withCompletion:(id /* block */)completion;
- (id)fetchWalletKeyColorForAccessories_Matter:(id)matter home:(id)home flow:(id)flow;
- (id)fetchWalletKeyColorForAccessories_HAP:(id)hap home:(id)home flow:(id)flow;
- (void)startHomeWalletKeyAddForAccessoryUUID:(id)uuid keyType:(unsigned long long)type expectedCount:(long long)count;
- (void)updateHomeWalletKeyAddForAccessoryUUID:(id)uuid keyType:(unsigned long long)type;
- (id)logIdentifier;
- (BOOL)isCurrentDevicePrimaryResident;
@end

#endif /* HMDHomeWalletKeyAccessoryManager_h */
