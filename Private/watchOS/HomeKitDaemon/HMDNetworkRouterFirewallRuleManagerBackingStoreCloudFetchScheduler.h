//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler_h
#define HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler_h
@import Foundation;

#include "HMFObject.h"
#include "HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler-Protocol.h"
#include "HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchSchedulerDelegate-Protocol.h"
#include "HMFLogging-Protocol.h"

@class NSString;
@protocol OS_xpc_object;

@interface HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler : HMFObject<HMFLogging, HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler>

@property (nonatomic) BOOL running;
@property (retain, nonatomic) NSObject<OS_xpc_object> *runningActivity;
@property (retain, nonatomic) NSObject<OS_xpc_object> *overrideCriteria;
@property (readonly, nonatomic) double currentInterval;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *identifier;
@property (readonly, nonatomic) double interval;
@property (readonly, nonatomic) double retryInterval;
@property (readonly, weak, nonatomic) NSObject<HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchSchedulerDelegate> *delegate;

/* class methods */
+ (id)logCategory;
+ (void)__unregisterActivity:(id)activity;

/* instance methods */
- (id)initWithIdentifier:(id)identifier interval:(double)interval retryInterval:(double)interval delegate:(id)delegate;
- (void)dealloc;
- (id)__initialCriteria;
- (void)__registerActivity;
- (void)__checkInActivity:(id)activity;
- (void)__runActivity:(id)activity;
- (void)__unregisterActivity;
- (void)__transitionActivity:(id)activity state:(long long)state;
- (void)start;
- (void)stop;
- (BOOL)isRunning;
@end

#endif /* HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler_h */
