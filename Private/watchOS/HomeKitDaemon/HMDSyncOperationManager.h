//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMDSyncOperationManager_h
#define HMDSyncOperationManager_h
@import Foundation;

#include "HMFObject.h"
#include "HMDSyncOperation.h"
#include "HMDSyncOperationManagerDataSource-Protocol.h"
#include "HMDSyncOperationQueue.h"
#include "HMFLogging-Protocol.h"
#include "HMFTimerDelegate-Protocol.h"

@class HMFExponentialBackoffTimer, NSArray, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_os_log;

@interface HMDSyncOperationManager : HMFObject<HMFLogging, HMFTimerDelegate> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableDictionary *_cloudZonePushOperationQueuesMap;
  NSMutableDictionary *_cloudZoneFetchOperationQueuesMap;
  NSObject<OS_os_log> *_logger;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *workQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly) HMDSyncOperationQueue *cloudPushOperations;
@property (readonly, copy) NSArray *cloudVerifyAccountOperations;
@property (readonly) HMDSyncOperationQueue *cloudFetchOperations;
@property (readonly, copy) NSArray *cloudZonePushOperationQueues;
@property (readonly, copy) NSArray *cloudZoneFetchOperationQueues;
@property (readonly, copy) NSArray *cloudCancelPauseOperations;
@property (readonly, copy) NSArray *cloudQueryDatabaseOperations;
@property (readonly, copy) NSArray *cloudPostFetchOperations;
@property (nonatomic) BOOL pauseQueue;
@property (nonatomic) long long pauseCloudPushLevel;
@property (retain, nonatomic) HMFExponentialBackoffTimer *cloudPushDelayTimer;
@property (nonatomic) BOOL syncLoopDialogDisplayed;
@property (retain, nonatomic) HMDSyncOperation *currentOperation;
@property (readonly, weak, nonatomic) NSObject<HMDSyncOperationManagerDataSource> *dataSource;
@property (readonly) id /* block */ timerFactory;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)logCategory;

/* instance methods */
- (id)initWithClientQueue:(id)queue dataSource:(id)source;
- (id)initWithClientQueue:(id)queue dataSource:(id)source timerFactory:(id /* block */)factory;
- (id)cloudZoneFetchOperations;
- (void)addCloudVerifyAccountOperation:(id)operation;
- (id)popCloudVerifyAccountOperation;
- (BOOL)addCloudZonePushOperation:(id)operation delay:(double)delay;
- (void)removeCloudZonePushOperationQueue:(id)queue;
- (id)popCloudZonePushOperationAndMoveQueueToEnd;
- (BOOL)addCloudZoneFetchOperation:(id)operation delay:(double)delay;
- (void)removeCloudZoneFetchOperationQueue:(id)queue;
- (BOOL)popCloudZoneFetchOperationAndMoveQueueToEnd:(id *)end;
- (void)addCloudCancelPauseOperation:(id)operation;
- (id)popCloudCancelPauseOperation;
- (BOOL)addCloudQueryDatabaseOperationIfNonePresent:(id)present;
- (id)popCloudQueryDatabaseOperation;
- (BOOL)addCloudPostFetchOperationIfNonePresent:(id)present;
- (BOOL)dropCloudPostFetchOperationsIfPresent;
- (id)popCloudPostFetchOperation;
- (id)dumpState;
- (void)_reportPossibleSyncLoop;
- (void)addOperation:(id)operation;
- (void)addOperation:(id)operation withDelay:(double)delay;
- (void)_dropWithoutAlreadyScheduledOperation:(id)operation;
- (void)addOperationRespectingOptions:(id)options withDelay:(double)delay;
- (void)pauseAndWaitForCurrentOperationCompletion:(id /* block */)completion;
- (void)cancelOperations;
- (id)_dequeueNextOperation;
- (void)_handleNextOperation;
- (void)_handleCancelledOperations:(id)operations;
- (void)pause;
- (void)resume;
- (void)kick;
- (void)pauseCloudPush;
- (void)resumeCloudPush;
- (void)killCloudPushAndResume;
- (void)resetCloudPushTimer:(id)timer;
- (void)timerDidFire:(id)fire;
- (BOOL)wasSyncLoopDialogDisplayed;
@end

#endif /* HMDSyncOperationManager_h */
