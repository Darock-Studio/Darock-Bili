//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 554.3.2.0.0
//
#ifndef RUILoader_h
#define RUILoader_h
@import Foundation;

#include "RUIHTTPRequest.h"
#include "NSURLSessionTaskDelegate-Protocol.h"
#include "RUIParser.h"
#include "RUIParserDelegate-Protocol.h"
#include "RUIStyle.h"
#include "_RUILoaderSessionDelegateAdapter.h"

@class NSString, NSURL;

@interface RUILoader : RUIHTTPRequest<NSURLSessionTaskDelegate> {
  /* instance variables */
  RUIParser *_parser;
  NSURL *_url;
  _RUILoaderSessionDelegateAdapter *_sessionDelegateAdapter;
}

@property (nonatomic) BOOL allowNonSecureHTTP;
@property (weak, nonatomic) NSObject<RUIParserDelegate> *parserDelegate;
@property (retain, nonatomic) RUIStyle *style;
@property (nonatomic) long long userInterfaceStyle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)dealloc;
- (void)cancel;
- (void)loadRequest:(id)request;
- (void)_handleShouldLoadRequestResult:(id)result completionHandler:(id /* block */)handler;
- (void)shouldLoadRequest:(id)request completionHandler:(id /* block */)handler;
- (id)sessionConfiguration;
- (id)urlSessionDelegate;
- (void)loadXMLUIWithURL:(id)url;
- (void)loadXMLUIWithRequest:(id)request;
- (void)loadXMLUIWithData:(id)data baseURL:(id)url;
- (id)URL;
- (void)parseData:(id)data;
- (void)_loadResources;
- (void)_finishLoadWithObjectModel:(id)model actionSignal:(id)signal error:(id)error;
- (void)allWebViewsFinishedLoading;
- (BOOL)anyWebViewLoading;
- (void)didParseData;
- (void)webViewFinishedLoading;
- (void)failWithError:(id)error forRequest:(id)request;
- (BOOL)receivedValidResponse:(id)response forRequest:(id)request;
- (void)URLSession:(id)urlsession task:(id)task willPerformHTTPRedirection:(id)httpredirection newRequest:(id)request completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession didReceiveChallenge:(id)challenge completionHandler:(id /* block */)handler;
@end

#endif /* RUILoader_h */
