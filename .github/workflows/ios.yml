name: Meowbili iDevice Workflow

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '.github/workflows/*'
      - '!.github/workflows/ios.yml'

jobs:
  build:
    name: Build and Archive App
    runs-on: macos-13
    permissions:
      contents: write
      pull-requests: write
      issues: write
      repository-projects: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_15.0.app

      - name: Prepare Version Folder
        run: mkdir vers

      - name: Checkout Version Files
        uses: actions/checkout@v3
        with:
          ref: release-vers
          persist-credentials: false
          fetch-depth: 0
          path: vers

      - name: Change Project Version
        run: |
          read MVER < vers/ver.txt
          MVER=$[MVER+1]
          rm vers/ver.txt
          echo $MVER >> vers/ver.txt
          agvtool new-version -all $MVER
      - name: Commit Files
        working-directory: vers
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Updated versions"
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: release-vers
          directory: vers

      - name: Get App Store Connect API Key File
        env:
          ASCAPI_KEY: ${{ secrets.ASCAPI_KEY }}
        run: |
          KEY_PATH=$RUNNER_TEMP/ascapi-key.p8
          echo -n "$ASCAPI_KEY" > $KEY_PATH
      - name: Install the Apple certificate and provisioning profile for Xcode
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Archive DarockBili App
        env:
          ASCAPI_KEY_ID: ${{ secrets.ASCAPI_KEY_ID }}
          ASCAPI_ISSUER_ID: ${{ secrets.ASCAPI_ISSUER_ID }}
        run: |
          KEY_PATH=$RUNNER_TEMP/ascapi-key.p8
          xcodebuild -scheme 'DarockBili Watch App' -configuration Release DEVELOPMENT_TEAM=B57D8PP775 -archivePath DarockBili_Release.xcarchive clean archive CODE_SIGN_IDENTITY="Apple Development"
      - name: Upload Debug Archive
        uses: actions/upload-artifact@v3
        with:
          name: Debug XCArchive
          path: ./DarockBili_Debug.xcarchive

      - name: Upload Release Archive
        uses: actions/upload-artifact@v3
        with:
          name: Release XCArchive
          path: ./DarockBili_Release.xcarchive
  
  test:
    runs-on: macos-13
    name: Test App
    steps:
      - uses: actions/checkout@v3
      
      - name: Set Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_15.0.app

      - name: Resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -scheme 'DarockBili Watch App' -configuration Release

      - name: Prepare Cache Folder
        run: mkdir Caches
      
      - name: Build and Test
        run: xcodebuild test -project ./DarockBili.xcodeproj -scheme 'DarockBili Watch App' -configuration Release -destination 'platform=watchOS Simulator,name=Apple Watch Series 7 (41mm),OS=10.0' -testPlan WatchAppUITestPlan -testProductsPath ./Caches/TestProducts.xctestproducts -derivedDataPath ./Caches/DerivedData | tee TestBuilding.log

      - name: Upload Building Log
        uses: actions/upload-artifact@v3
        with:
          name: Watch Testing Log
          path: ./TestBuilding.log

      - name: Rename Test Attachments
        run: for file in ./Caches/DerivedData/Logs/Test/Test-*.xcresult/Data/*; do if [ ! -f "$file" ]; then continue; fi; file_type=$(file -b --mime-type "$file"); extension=""; case "$file_type" in "image/jpeg" | "image/jpg") extension=".jpg";; "image/png") extension=".png";; "text/plain") extension=".txt";; *) extension=".dat";; esac; mv "$file" "$file$extension"; done

      - name: Upload Test Attachments
        uses: actions/upload-artifact@v3
        with:
          name: Test Attachments
          path: ./Caches/DerivedData/Logs/Test

  export:
    name: Export IPA
    runs-on: macos-13
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Set Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_15.0.app

      - name: Download App XCArchive
        uses: actions/download-artifact@v3
        with:
          name: Release XCArchive
          path: ./DarockBili_Release.xcarchive

      - name: Export IPA File
        run: |
          mkdir Payload
          cp -r DarockBili_Release.xcarchive/Products/Applications/DarockBili.app Payload
          zip -q -r DarockBili_Release.ipa Payload
          
      - name: Upload IPA File
        uses: actions/upload-artifact@v3
        with:
          name: Release IPA
          path: ./DarockBili_Release.ipa

  deploy:
    name: Deploy to TestFlight
    runs-on: macos-13
    needs:
      - export
      - test
    env:
      ASCAPI_ISSUER_ID: ${{ secrets.ASCAPI_ISSUER_ID }}
      ASCAPI_KEY_ID: ${{ secrets.ASCAPI_KEY_ID }}
      ASCAPI_KEY: ${{ secrets.ASCAPI_KEY }}
    steps:
      - name: Download App Archive
        uses: actions/download-artifact@v3
        with:
          name: Release IPA

      - name: Prepare API Key
        run: |
          mkdir ~/.private_keys
          echo "$ASCAPI_KEY" >> ~/.private_keys/AuthKey_${ASCAPI_KEY_ID}.p8
      - name: Upload to App Store Connect
        run: xcrun altool --upload-app -f ./DarockBili_Release.ipa -t ios --apiKey $ASCAPI_KEY_ID --apiIssuer $ASCAPI_ISSUER_ID
        
